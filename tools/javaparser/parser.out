Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    GENERIC
    NEWLINE
    GOTO
    VAR
    FUTURE
    REST
    OPERATOR
    INNER
    LCOMMENT
    CAST
    MCOMMENT
    CONST
    OUTER

Grammar

Rule 0     S' -> compilationUnit_sub
Rule 1     compilationUnit_sub -> packageDeclaration importDeclarations typeDeclarations
Rule 2     compilationUnit_sub -> packageDeclaration importDeclarations
Rule 3     compilationUnit_sub -> packageDeclaration typeDeclarations
Rule 4     compilationUnit_sub -> packageDeclaration
Rule 5     compilationUnit_sub -> classOrInterfaceDeclaration typeDeclarations
Rule 6     compilationUnit_sub -> classOrInterfaceDeclaration
Rule 7     importDeclarations -> importDeclaration
Rule 8     importDeclarations -> importDeclarations importDeclaration
Rule 9     typeDeclarations -> typeDeclaration
Rule 10    typeDeclarations -> typeDeclarations typeDeclaration
Rule 11    packageDeclaration_once -> packageDeclaration
Rule 12    packageDeclaration_once -> <empty>
Rule 13    compilationUnit -> annotations compilationUnit_sub
Rule 14    compilationUnit -> packageDeclaration_once importDeclarations typeDeclarations
Rule 15    compilationUnit -> packageDeclaration importDeclarations
Rule 16    compilationUnit -> packageDeclaration typeDeclarations
Rule 17    compilationUnit -> packageDeclaration
Rule 18    packageDeclaration -> PACKAGE qualifiedName SEMI
Rule 19    STATIC_empty -> STATIC
Rule 20    STATIC_empty -> <empty>
Rule 21    DOT_MULT -> DOT MULT
Rule 22    importDeclaration -> IMPORT STATIC qualifiedName SEMI
Rule 23    importDeclaration -> IMPORT qualifiedName SEMI
Rule 24    typeDeclaration -> classOrInterfaceDeclaration
Rule 25    typeDeclaration -> SEMI
Rule 26    classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration
Rule 27    classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration
Rule 28    classOrInterfaceDeclaration -> classDeclaration
Rule 29    classOrInterfaceDeclaration -> interfaceDeclaration
Rule 30    classOrInterfaceModifiers -> classOrInterfaceModifier
Rule 31    classOrInterfaceModifiers -> classOrInterfaceModifiers classOrInterfaceModifier
Rule 32    classOrInterfaceModifier -> annotation
Rule 33    classOrInterfaceModifier -> PUBLIC
Rule 34    classOrInterfaceModifier -> PROTECTED
Rule 35    classOrInterfaceModifier -> PRIVATE
Rule 36    classOrInterfaceModifier -> ABSTRACT
Rule 37    classOrInterfaceModifier -> STATIC
Rule 38    classOrInterfaceModifier -> FINAL
Rule 39    classOrInterfaceModifier -> STRICTFP
Rule 40    modifiers -> modifier
Rule 41    modifiers -> modifiers modifier
Rule 42    classDeclaration -> normalClassDeclaration
Rule 43    classDeclaration -> enumDeclaration
Rule 44    ExtendType -> EXTENDS type
Rule 45    ExtendType -> <empty>
Rule 46    IMPLEMENTS_typeList -> IMPLEMENTS typeList
Rule 47    IMPLEMENTS_typeList -> <empty>
Rule 48    normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody
Rule 49    dotTypeParameter -> COMMA typeParameter
Rule 50    dotTypeParameters -> dotTypeParameter
Rule 51    dotTypeParameters -> dotTypeParameters dotTypeParameter
Rule 52    typeParameters -> LESS typeParameter dotTypeParameters MORE
Rule 53    typeParameters -> LESS typeParameter MORE
Rule 54    typeParameters -> <empty>
Rule 55    EXTENDS_typeBound -> EXTENDS typeBound
Rule 56    EXTENDS_typeBound -> <empty>
Rule 57    typeParameter -> Identifier EXTENDS_typeBound
Rule 58    and_type -> AND type
Rule 59    and_types -> and_type
Rule 60    and_types -> and_types and_type
Rule 61    typeBound -> type and_types
Rule 62    typeBound -> type
Rule 63    enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody
Rule 64    enumBodyStatement -> enumConstants COMMA enumBodyDeclarations
Rule 65    enumBodyStatement -> enumConstants COMMA
Rule 66    enumBodyStatement -> enumConstants enumBodyDeclarations
Rule 67    enumBodyStatement -> COMMA enumBodyDeclarations
Rule 68    enumBodyStatement -> COMMA
Rule 69    enumBodyStatement -> enumConstants
Rule 70    enumBodyStatement -> enumBodyDeclarations
Rule 71    enumBody -> BLPAREN enumBodyStatement BRPAREN
Rule 72    enumBody -> BLPAREN BRPAREN
Rule 73    COMMA_enumConstant -> COMMA enumConstant
Rule 74    COMMA_enumConstants -> COMMA_enumConstant
Rule 75    COMMA_enumConstants -> COMMA_enumConstant COMMA_enumConstants
Rule 76    enumConstants -> enumConstant COMMA_enumConstants
Rule 77    enumConstants -> enumConstant
Rule 78    annotations_once -> annotations
Rule 79    annotations_once -> empty
Rule 80    arguments_once -> arguments
Rule 81    arguments_once -> <empty>
Rule 82    classBody_once -> classBody
Rule 83    classBody_once -> <empty>
Rule 84    enumConstant -> annotations_once Identifier arguments_once classBody_once
Rule 85    classBodyDeclarations -> classBodyDeclaration
Rule 86    classBodyDeclarations -> classBodyDeclarations classBodyDeclaration
Rule 87    enumBodyDeclarations -> SEMI classBodyDeclarations
Rule 88    enumBodyDeclarations -> SEMI
Rule 89    interfaceDeclaration -> normalInterfaceDeclaration
Rule 90    interfaceDeclaration -> annotationTypeDeclaration
Rule 91    typeParameters_once -> typeParameters
Rule 92    typeParameters_once -> <empty>
Rule 93    EXTENDS_typeList -> EXTENDS typeList
Rule 94    EXTENDS_typeList -> <empty>
Rule 95    normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody
Rule 96    COMMA_type -> COMMA type
Rule 97    COMMA_types -> COMMA_type
Rule 98    COMMA_types -> COMMA_types COMMA_type
Rule 99    typeList -> type COMMA_types
Rule 100   typeList -> type
Rule 101   classBody -> BLPAREN classBodyDeclarations BRPAREN
Rule 102   classBody -> BLPAREN BRPAREN
Rule 103   interfaceBodyDeclarations -> interfaceBodyDeclaration
Rule 104   interfaceBodyDeclarations -> interfaceBodyDeclarations interfaceBodyDeclaration
Rule 105   interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN
Rule 106   interfaceBody -> BLPAREN BRPAREN
Rule 107   classBodyDeclaration -> SEMI
Rule 108   classBodyDeclaration -> STATIC block
Rule 109   classBodyDeclaration -> block
Rule 110   classBodyDeclaration -> modifiers memberDecl
Rule 111   classBodyDeclaration -> memberDecl
Rule 112   memberDecl -> genericMethodOrConstructorDecl
Rule 113   memberDecl -> memberDeclaration
Rule 114   memberDecl -> VOID Identifier voidMethodDeclaratorRest
Rule 115   memberDecl -> Identifier constructorDeclaratorRest
Rule 116   memberDecl -> interfaceDeclaration
Rule 117   memberDecl -> classDeclaration
Rule 118   memberDeclaration -> type methodDeclaration
Rule 119   memberDeclaration -> type fieldDeclaration
Rule 120   genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest
Rule 121   genericMethodOrConstructorRest -> type Identifier methodDeclaratorRest
Rule 122   genericMethodOrConstructorRest -> VOID Identifier methodDeclaratorRest
Rule 123   genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest
Rule 124   methodDeclaration -> Identifier methodDeclaratorRest
Rule 125   fieldDeclaration -> variableDeclarators SEMI
Rule 126   interfaceBodyDeclaration -> modifiers interfaceMemberDecl
Rule 127   interfaceBodyDeclaration -> SEMI
Rule 128   interfaceMemberDecl -> interfaceMethodOrFieldDecl
Rule 129   interfaceMemberDecl -> interfaceGenericMethodDecl
Rule 130   interfaceMemberDecl -> VOID Identifier voidInterfaceMethodDeclaratorRest
Rule 131   interfaceMemberDecl -> interfaceDeclaration
Rule 132   interfaceMemberDecl -> classDeclaration
Rule 133   interfaceMethodOrFieldDecl -> type Identifier interfaceMethodOrFieldRest
Rule 134   interfaceMethodOrFieldRest -> constantDeclaratorsRest SEMI
Rule 135   interfaceMethodOrFieldRest -> interfaceMethodDeclaratorRest
Rule 136   throwList -> THROWS qualifiedNameList
Rule 137   array -> FLPAREN FRPAREN
Rule 138   arrays -> arrays array
Rule 139   arrays -> array
Rule 140   methodDeclaratorRest -> formalParameters arrays throwList methodBody
Rule 141   methodDeclaratorRest -> formalParameters arrays throwList SEMI
Rule 142   methodDeclaratorRest -> formalParameters throwList SEMI
Rule 143   methodDeclaratorRest -> formalParameters throwList methodBody
Rule 144   methodDeclaratorRest -> formalParameters arrays methodBody
Rule 145   methodDeclaratorRest -> formalParameters arrays SEMI
Rule 146   methodDeclaratorRest -> formalParameters methodBody
Rule 147   methodDeclaratorRest -> formalParameters SEMI
Rule 148   voidMethodDeclaratorRest -> formalParameters throwList methodBody
Rule 149   voidMethodDeclaratorRest -> formalParameters throwList SEMI
Rule 150   voidMethodDeclaratorRest -> formalParameters methodBody
Rule 151   voidMethodDeclaratorRest -> formalParameters SEMI
Rule 152   interfaceMethodDeclaratorRest -> formalParameters arrays throwList SEMI
Rule 153   interfaceMethodDeclaratorRest -> formalParameters throwList SEMI
Rule 154   interfaceMethodDeclaratorRest -> formalParameters arrays SEMI
Rule 155   interfaceMethodDeclaratorRest -> formalParameters SEMI
Rule 156   interfaceGenericMethodDecl -> typeParameters type Identifier interfaceMethodDeclaratorRest
Rule 157   interfaceGenericMethodDecl -> typeParameters VOID Identifier interfaceMethodDeclaratorRest
Rule 158   voidInterfaceMethodDeclaratorRest -> formalParameters throwList SEMI
Rule 159   voidInterfaceMethodDeclaratorRest -> formalParameters SEMI
Rule 160   constructorDeclaratorRest -> formalParameters throwList constructorBody
Rule 161   constructorDeclaratorRest -> formalParameters constructorBody
Rule 162   constantDeclarator -> Identifier constantDeclaratorRest
Rule 163   COMMA_VAR -> COMMA variableDeclarator
Rule 164   COMMA_VARS -> COMMA_VAR
Rule 165   COMMA_VARS -> COMMA_VARS COMMA_VAR
Rule 166   variableDeclarators -> variableDeclarator COMMA_VARS
Rule 167   variableDeclarators -> variableDeclarator
Rule 168   EQUALS_variableInitializer -> EQUALS variableInitializer
Rule 169   variableDeclarator -> variableDeclaratorId EQUALS_variableInitializer
Rule 170   variableDeclarator -> variableDeclaratorId
Rule 171   COMMA_const -> COMMA constantDeclarator
Rule 172   COMMA_consts -> COMMA_const
Rule 173   COMMA_consts -> COMMA_consts COMMA_const
Rule 174   constantDeclaratorsRest -> constantDeclaratorRest COMMA_consts
Rule 175   constantDeclaratorsRest -> constantDeclaratorRest
Rule 176   constantDeclaratorRest -> arrays EQUALS variableInitializer
Rule 177   constantDeclaratorRest -> EQUALS variableInitializer
Rule 178   variableDeclaratorId -> Identifier arrays
Rule 179   variableDeclaratorId -> Identifier
Rule 180   variableInitializer -> arrayInitializer
Rule 181   variableInitializer -> expression
Rule 182   COMMA_variableInitializer -> COMMA variableInitializer
Rule 183   COMMA_variableInitializers -> COMMA_variableInitializer
Rule 184   COMMA_variableInitializers -> COMMA_variableInitializers COMMA variableInitializer
Rule 185   COMMA_once -> COMMA
Rule 186   COMMA_once -> <empty>
Rule 187   array_body -> variableInitializer COMMA_variableInitializers COMMA_once
Rule 188   array_body -> variableInitializer COMMA_once
Rule 189   arrayInitializer -> BLPAREN array_body BRPAREN
Rule 190   modifier -> annotation
Rule 191   modifier -> PUBLIC
Rule 192   modifier -> PROTECTED
Rule 193   modifier -> PRIVATE
Rule 194   modifier -> STATIC
Rule 195   modifier -> ABSTRACT
Rule 196   modifier -> FINAL
Rule 197   modifier -> NATIVE
Rule 198   modifier -> SYNCHRONIZED
Rule 199   modifier -> TRANSIENT
Rule 200   modifier -> VOLATILE
Rule 201   modifier -> STRICTFP
Rule 202   packageOrTypeName -> qualifiedName
Rule 203   enumConstantName -> Identifier
Rule 204   typeName -> qualifiedName
Rule 205   type -> type_body
Rule 206   type -> primitiveType arrays
Rule 207   type -> primitiveType
Rule 208   type_body -> Identifier classOrInterfaceTypeBody arrays
Rule 209   type_body -> Identifier classOrInterfaceTypeBody
Rule 210   type_body -> Identifier arrays
Rule 211   type_body -> Identifier
Rule 212   classOrInterfaceTypeBody -> typeArguments classOrInterfaceTypeStatements
Rule 213   classOrInterfaceTypeBody -> typeArguments
Rule 214   classOrInterfaceTypeBody -> classOrInterfaceTypeStatements
Rule 215   classOrInterfaceTypeStatement -> DOT Identifier typeArguments
Rule 216   classOrInterfaceTypeStatement -> DOT Identifier
Rule 217   classOrInterfaceTypeStatements -> classOrInterfaceTypeStatement
Rule 218   classOrInterfaceTypeStatements -> classOrInterfaceTypeStatements classOrInterfaceTypeStatement
Rule 219   classOrInterfaceType -> Identifier classOrInterfaceTypeBody
Rule 220   classOrInterfaceType -> Identifier
Rule 221   primitiveType -> BOOLEAN
Rule 222   primitiveType -> CHAR
Rule 223   primitiveType -> BYTE
Rule 224   primitiveType -> SHORT
Rule 225   primitiveType -> INT
Rule 226   primitiveType -> LONG
Rule 227   primitiveType -> FLOAT
Rule 228   primitiveType -> DOUBLE
Rule 229   variableModifier -> FINAL
Rule 230   variableModifier -> annotation
Rule 231   COMMA_typeArgument -> COMMA typeArgument
Rule 232   COMMA_typeArguments -> COMMA_typeArgument
Rule 233   COMMA_typeArguments -> COMMA_typeArguments COMMA_typeArgument
Rule 234   typeArguments -> LESS typeArgument COMMA_typeArguments MORE
Rule 235   typeArguments -> LESS typeArgument MORE
Rule 236   typeArgumentStatment -> EXTENDS type
Rule 237   typeArgumentStatment -> SUPER type
Rule 238   typeArgumentStatment -> empty
Rule 239   typeArgument -> type
Rule 240   typeArgument -> QUES typeArgumentStatment
Rule 241   COMMA_qualifiedName -> COMMA qualifiedName
Rule 242   COMMA_qualifiedNames -> COMMA_qualifiedName
Rule 243   COMMA_qualifiedNames -> COMMA_qualifiedNames COMMA_qualifiedName
Rule 244   qualifiedNameList -> qualifiedName COMMA_qualifiedNames
Rule 245   qualifiedNameList -> qualifiedName
Rule 246   formalParameters -> LPAREN formalParameterDecls RPAREN
Rule 247   formalParameterDecls -> variableModifiers type formalParameterDeclsRest
Rule 248   formalParameterDecls -> type formalParameterDeclsRest
Rule 249   formalParameterDecls -> empty
Rule 250   formalParameterDeclsRestBody -> COMMA formalParameterDecls
Rule 251   formalParameterDeclsRestBody -> <empty>
Rule 252   formalParameterDeclsRest -> variableDeclaratorId formalParameterDeclsRestBody
Rule 253   formalParameterDeclsRest -> OP_ARRAY variableDeclaratorId
Rule 254   methodBody -> block
Rule 255   blockStatements -> blockStatement
Rule 256   blockStatements -> blockStatements blockStatement
Rule 257   constructorBody -> BLPAREN explicitConstructorInvocation blockStatements BRPAREN
Rule 258   constructorBody -> BLPAREN explicitConstructorInvocation BRPAREN
Rule 259   constructorBody -> BLPAREN blockStatements BRPAREN
Rule 260   constructorBody -> BLPAREN BRPAREN
Rule 261   explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI
Rule 262   explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI
Rule 263   explicitConstructorInvocation -> THIS arguments SEMI
Rule 264   explicitConstructorInvocation -> SUPER arguments SEMI
Rule 265   explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI
Rule 266   explicitConstructorInvocation -> primary DOT SUPER arguments SEMI
Rule 267   DOT_Identifier -> DOT Identifier
Rule 268   DOT_Identifier -> DOT MULT
Rule 269   DOT_Identifiers -> DOT_Identifier
Rule 270   DOT_Identifiers -> DOT_Identifiers DOT_Identifier
Rule 271   qualifiedName -> Identifier DOT_Identifiers
Rule 272   qualifiedName -> Identifier
Rule 273   literal -> integerLiteral
Rule 274   literal -> FloatingPointLiteral
Rule 275   literal -> CharacterLiteral
Rule 276   literal -> StringLiteral
Rule 277   literal -> booleanLiteral
Rule 278   literal -> NULL
Rule 279   booleanLiteral -> TRUE
Rule 280   booleanLiteral -> FALSE
Rule 281   annotations -> annotation
Rule 282   annotations -> annotations annotation
Rule 283   annotationBody -> LPAREN elementValuePairs RPAREN
Rule 284   annotationBody -> LPAREN elementValue RPAREN
Rule 285   annotationBody -> LPAREN RPAREN
Rule 286   annotationBody -> <empty>
Rule 287   annotation -> AT annotationName annotationBody
Rule 288   annotationName -> Identifier DOT_Identifiers
Rule 289   annotationName -> Identifier
Rule 290   elementValuePairsBody -> COMMA elementValuePair
Rule 291   elementValuePairsBodys -> elementValuePairsBody
Rule 292   elementValuePairsBodys -> elementValuePairsBodys elementValuePairsBody
Rule 293   elementValuePairs -> elementValuePair elementValuePairsBodys
Rule 294   elementValuePairs -> elementValuePair
Rule 295   elementValuePair -> Identifier EQUALS elementValue
Rule 296   elementValue -> conditionalExpression
Rule 297   elementValue -> annotation
Rule 298   elementValue -> elementValueArrayInitializer
Rule 299   elementValueBody -> COMMA elementValue
Rule 300   elementValueBodys -> elementValueBody
Rule 301   elementValueBodys -> elementValueBodys elementValueBody
Rule 302   elementValueStatement -> elementValue elementValueBodys
Rule 303   elementValueStatement -> elementValue
Rule 304   elementValueStatement -> <empty>
Rule 305   COMMA_OR_empty -> COMMA
Rule 306   COMMA_OR_empty -> <empty>
Rule 307   elementValueArrayInitializer -> BLPAREN elementValueStatement COMMA_OR_empty BRPAREN
Rule 308   annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody
Rule 309   annotationTypeElementDeclarations -> annotationTypeElementDeclaration
Rule 310   annotationTypeElementDeclarations -> annotationTypeElementDeclarations annotationTypeElementDeclaration
Rule 311   annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN
Rule 312   annotationTypeBody -> BLPAREN BRPAREN
Rule 313   annotationTypeElementDeclaration -> modifiers annotationTypeElementRest
Rule 314   annotationTypeElementDeclaration -> annotationTypeElementRest
Rule 315   SEMI_OR_empty -> SEMI
Rule 316   SEMI_OR_empty -> <empty>
Rule 317   annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI
Rule 318   annotationTypeElementRest -> normalClassDeclaration SEMI_OR_empty
Rule 319   annotationTypeElementRest -> normalInterfaceDeclaration SEMI_OR_empty
Rule 320   annotationTypeElementRest -> enumDeclaration SEMI_OR_empty
Rule 321   annotationTypeElementRest -> annotationTypeDeclaration SEMI_OR_empty
Rule 322   annotationMethodOrConstantRest -> annotationMethodRest
Rule 323   annotationMethodOrConstantRest -> annotationConstantRest
Rule 324   defaultValue_or_empty -> defaultValue
Rule 325   defaultValue_or_empty -> <empty>
Rule 326   annotationMethodRest -> Identifier LPAREN RPAREN defaultValue_or_empty
Rule 327   annotationConstantRest -> variableDeclarators
Rule 328   defaultValue -> DEFAULT elementValue
Rule 329   block -> BLPAREN blockStatements BRPAREN
Rule 330   block -> BLPAREN BRPAREN
Rule 331   blockStatement -> localVariableDeclarationStatement
Rule 332   blockStatement -> classOrInterfaceDeclaration
Rule 333   blockStatement -> statement
Rule 334   localVariableDeclarationStatement -> localVariableDeclaration SEMI
Rule 335   localVariableDeclaration -> variableModifiers type variableDeclarators
Rule 336   localVariableDeclaration -> type variableDeclarators
Rule 337   variableModifiers -> variableModifier
Rule 338   variableModifiers -> variableModifiers variableModifier
Rule 339   expression_colon_or_empty -> COLON expression
Rule 340   expression_colon_or_empty -> <empty>
Rule 341   else_statement -> ELSE statement
Rule 342   else_statement -> <empty>
Rule 343   expression_or_empty -> expression
Rule 344   expression_or_empty -> <empty>
Rule 345   Identifier_or_empty -> Identifier
Rule 346   Identifier_or_empty -> <empty>
Rule 347   statement -> block
Rule 348   statement -> ASSERT expression expression_colon_or_empty SEMI
Rule 349   statement -> IF parExpression statement else_statement
Rule 350   statement -> FOR LPAREN forControl RPAREN statement
Rule 351   statement -> WHILE parExpression statement
Rule 352   statement -> DO statement WHILE parExpression SEMI
Rule 353   statement -> TRY block catches FINALLY block
Rule 354   statement -> TRY block catches
Rule 355   statement -> TRY block FINALLY block
Rule 356   statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN
Rule 357   statement -> SYNCHRONIZED parExpression block
Rule 358   statement -> RETURN expression_or_empty SEMI
Rule 359   statement -> THROW expression SEMI
Rule 360   statement -> BREAK Identifier_or_empty SEMI
Rule 361   statement -> CONTINUE Identifier_or_empty SEMI
Rule 362   statement -> SEMI
Rule 363   statement -> statementExpression SEMI
Rule 364   statement -> Identifier COLON statement
Rule 365   catchClauses -> catchClause
Rule 366   catchClauses -> catchClauses catchClause
Rule 367   catches -> catchClause catchClauses
Rule 368   catches -> catchClause
Rule 369   catchClause -> CATCH LPAREN formalParameter RPAREN block
Rule 370   formalParameter -> variableModifiers type variableDeclaratorId
Rule 371   formalParameter -> type variableDeclaratorId
Rule 372   switchBlockStatementGroupStats -> switchBlockStatementGroup
Rule 373   switchBlockStatementGroupStats -> switchBlockStatementGroupStats switchBlockStatementGroup
Rule 374   switchBlockStatementGroups -> switchBlockStatementGroupStats
Rule 375   switchBlockStatementGroups -> <empty>
Rule 376   switchLabels -> switchLabel
Rule 377   switchLabels -> switchLabels switchLabel
Rule 378   switchBlockStatementGroup -> switchLabels blockStatements
Rule 379   switchBlockStatementGroup -> switchLabels
Rule 380   switchLabel -> CASE constantExpression COLON
Rule 381   switchLabel -> CASE enumConstantName COLON
Rule 382   switchLabel -> DEFAULT COLON
Rule 383   forInit_or_empty -> forInit
Rule 384   forInit_or_empty -> <empty>
Rule 385   forUpdate_empty -> forUpdate
Rule 386   forUpdate_empty -> <empty>
Rule 387   forControl -> enhancedForControl
Rule 388   forControl -> forInit_or_empty SEMI expression_or_empty SEMI forUpdate_empty
Rule 389   forInit -> localVariableDeclaration
Rule 390   forInit -> expressionList
Rule 391   enhancedForControl -> variableModifiers type Identifier COLON expression
Rule 392   enhancedForControl -> type Identifier COLON expression
Rule 393   forUpdate -> expressionList
Rule 394   parExpression -> LPAREN expression RPAREN
Rule 395   COMMA_expression -> COMMA expression
Rule 396   COMMA_expressions -> COMMA_expression
Rule 397   COMMA_expressions -> COMMA_expressions COMMA_expression
Rule 398   expressionList -> expression COMMA_expressions
Rule 399   expressionList -> expression
Rule 400   statementExpression -> expression
Rule 401   constantExpression -> expression
Rule 402   assignmentOperator_expression_empty -> assignmentOperator expression
Rule 403   assignmentOperator_expression_empty -> <empty>
Rule 404   expression -> conditionalExpression assignmentOperator_expression_empty
Rule 405   assignmentOperator -> EQUALS
Rule 406   assignmentOperator -> ASS_ADD
Rule 407   assignmentOperator -> ASS_SUB
Rule 408   assignmentOperator -> ASS_MUL
Rule 409   assignmentOperator -> ASS_DIV
Rule 410   assignmentOperator -> ASS_AND
Rule 411   assignmentOperator -> ASS_OR
Rule 412   assignmentOperator -> ASS_XOR
Rule 413   assignmentOperator -> ASS_MOD
Rule 414   assignmentOperator -> ASS_SHL
Rule 415   assignmentOperator -> ASS_SHRR
Rule 416   assignmentOperator -> ASS_SHR
Rule 417   conditionalExpressionStat -> QUES expression COLON expression
Rule 418   conditionalExpressionStats -> conditionalExpressionStat
Rule 419   conditionalExpressionStats -> conditionalExpressionStats conditionalExpressionStat
Rule 420   conditionalExpression -> conditionalOrExpression conditionalExpressionStats
Rule 421   conditionalExpression -> conditionalOrExpression
Rule 422   O_conditionalAndExpression -> OP_LOR conditionalAndExpression
Rule 423   O_conditionalAndExpressions -> O_conditionalAndExpression
Rule 424   O_conditionalAndExpressions -> O_conditionalAndExpressions O_conditionalAndExpression
Rule 425   conditionalOrExpression -> conditionalAndExpression O_conditionalAndExpressions
Rule 426   conditionalOrExpression -> conditionalAndExpression
Rule 427   O_inclusiveOrExpression -> OP_LAND inclusiveOrExpression
Rule 428   O_inclusiveOrExpressions -> O_inclusiveOrExpression
Rule 429   O_inclusiveOrExpressions -> O_inclusiveOrExpressions O_inclusiveOrExpression
Rule 430   conditionalAndExpression -> inclusiveOrExpression O_inclusiveOrExpressions
Rule 431   conditionalAndExpression -> inclusiveOrExpression
Rule 432   V_exclusiveOrExpression -> VERTICAL exclusiveOrExpression
Rule 433   V_exclusiveOrExpressions -> V_exclusiveOrExpression
Rule 434   V_exclusiveOrExpressions -> V_exclusiveOrExpressions V_exclusiveOrExpression
Rule 435   inclusiveOrExpression -> exclusiveOrExpression V_exclusiveOrExpression
Rule 436   inclusiveOrExpression -> exclusiveOrExpression
Rule 437   CARET_andExpression -> CARET andExpression
Rule 438   CARET_andExpressions -> CARET_andExpression
Rule 439   CARET_andExpressions -> CARET_andExpressions CARET_andExpression
Rule 440   exclusiveOrExpression -> andExpression CARET_andExpressions
Rule 441   exclusiveOrExpression -> andExpression
Rule 442   AND_equalityExpression -> AND equalityExpression
Rule 443   AND_equalityExpressions -> AND_equalityExpression
Rule 444   AND_equalityExpressions -> AND_equalityExpressions AND_equalityExpression
Rule 445   andExpression -> equalityExpression AND_equalityExpressions
Rule 446   andExpression -> equalityExpression
Rule 447   instanceOfExpressionStat -> OP_EQ instanceOfExpression
Rule 448   instanceOfExpressionStat -> OP_NE instanceOfExpression
Rule 449   instanceOfExpressionStats -> instanceOfExpressionStat
Rule 450   instanceOfExpressionStats -> instanceOfExpressionStats instanceOfExpressionStat
Rule 451   equalityExpression -> instanceOfExpression instanceOfExpressionStats
Rule 452   equalityExpression -> instanceOfExpression
Rule 453   INSTANCEOF_type_once -> INSTANCEOF type
Rule 454   INSTANCEOF_type_once -> <empty>
Rule 455   instanceOfExpression -> relationalExpression INSTANCEOF_type_once
Rule 456   re_shiftExpression -> relationalOp shiftExpression
Rule 457   re_shiftExpressions -> re_shiftExpression
Rule 458   re_shiftExpressions -> re_shiftExpressions re_shiftExpression
Rule 459   relationalExpression -> shiftExpression re_shiftExpressions
Rule 460   relationalExpression -> shiftExpression
Rule 461   relationalOp -> OP_LE
Rule 462   relationalOp -> OP_GE
Rule 463   relationalOp -> LESS
Rule 464   relationalOp -> MORE
Rule 465   sh_additiveExpression -> shiftOp additiveExpression
Rule 466   sh_additiveExpressions -> sh_additiveExpression
Rule 467   sh_additiveExpressions -> sh_additiveExpressions sh_additiveExpression
Rule 468   shiftExpression -> additiveExpression sh_additiveExpressions
Rule 469   shiftExpression -> additiveExpression
Rule 470   shiftOp -> OP_SHR
Rule 471   shiftOp -> OP_SHRR
Rule 472   shiftOp -> OP_SHL
Rule 473   add_multiplicativeExpression -> PLUS multiplicativeExpression
Rule 474   add_multiplicativeExpression -> DASH multiplicativeExpression
Rule 475   add_multiplicativeExpressions -> add_multiplicativeExpression
Rule 476   add_multiplicativeExpressions -> add_multiplicativeExpressions add_multiplicativeExpression
Rule 477   additiveExpression -> multiplicativeExpression add_multiplicativeExpressions
Rule 478   additiveExpression -> multiplicativeExpression
Rule 479   mu_unaryExpression -> MULT unaryExpression
Rule 480   mu_unaryExpression -> SLASH unaryExpression
Rule 481   mu_unaryExpression -> PERCENT unaryExpression
Rule 482   mu_unaryExpressions -> mu_unaryExpression
Rule 483   mu_unaryExpressions -> mu_unaryExpressions mu_unaryExpression
Rule 484   multiplicativeExpression -> unaryExpression mu_unaryExpressions
Rule 485   multiplicativeExpression -> unaryExpression
Rule 486   unaryExpression -> PLUS unaryExpression
Rule 487   unaryExpression -> DASH unaryExpression
Rule 488   unaryExpression -> OP_INC unaryExpression
Rule 489   unaryExpression -> OP_DEC unaryExpression
Rule 490   unaryExpression -> unaryExpressionNotPlusMinus
Rule 491   INC_DEC_empty -> OP_INC
Rule 492   INC_DEC_empty -> OP_DEC
Rule 493   INC_DEC_empty -> empty
Rule 494   selectors -> selector
Rule 495   selectors -> selectors selector
Rule 496   unaryExpressionNotPlusMinus -> TILDE unaryExpression
Rule 497   unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression
Rule 498   unaryExpressionNotPlusMinus -> castExpression
Rule 499   unaryExpressionNotPlusMinus -> primary selectors INC_DEC_empty
Rule 500   unaryExpressionNotPlusMinus -> primary INC_DEC_empty
Rule 501   castExpression -> LPAREN primitiveType RPAREN unaryExpression
Rule 502   castExpression -> LPAREN type RPAREN unaryExpressionNotPlusMinus
Rule 503   castExpression -> LPAREN expression RPAREN unaryExpressionNotPlusMinus
Rule 504   identifierSuffix_empty -> identifierSuffix
Rule 505   identifierSuffix_empty -> <empty>
Rule 506   primary -> parExpression
Rule 507   primary -> THIS DOT_Identifiers identifierSuffix_empty
Rule 508   primary -> THIS identifierSuffix_empty
Rule 509   primary -> SUPER superSuffix
Rule 510   primary -> literal
Rule 511   primary -> NEW creator
Rule 512   primary -> Identifier DOT_Identifiers identifierSuffix_empty
Rule 513   primary -> Identifier identifierSuffix_empty
Rule 514   primary -> primitiveType arrays DOT CLASS
Rule 515   primary -> primitiveType DOT CLASS
Rule 516   primary -> VOID DOT CLASS
Rule 517   FL_expression_FR -> FLPAREN expression FRPAREN
Rule 518   FL_expression_FRs -> FL_expression_FR
Rule 519   FL_expression_FRs -> FL_expression_FRs FL_expression_FR
Rule 520   identifierSuffix -> arrays DOT CLASS
Rule 521   identifierSuffix -> FL_expression_FRs
Rule 522   identifierSuffix -> arguments
Rule 523   identifierSuffix -> DOT CLASS
Rule 524   identifierSuffix -> DOT explicitGenericInvocation
Rule 525   identifierSuffix -> DOT THIS
Rule 526   identifierSuffix -> DOT SUPER arguments
Rule 527   identifierSuffix -> DOT NEW innerCreator
Rule 528   creator -> nonWildcardTypeArguments createdName classCreatorRest
Rule 529   creator -> createdName arrayCreatorRest
Rule 530   creator -> createdName classCreatorRest
Rule 531   createdName -> classOrInterfaceType
Rule 532   createdName -> primitiveType
Rule 533   nonWildcardTypeArguments_empty -> nonWildcardTypeArguments
Rule 534   nonWildcardTypeArguments_empty -> <empty>
Rule 535   innerCreator -> nonWildcardTypeArguments_empty Identifier classCreatorRest
Rule 536   arrayCreatorRest -> FLPAREN FRPAREN arrays arrayInitializer
Rule 537   arrayCreatorRest -> FLPAREN FRPAREN arrayInitializer
Rule 538   arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs arrays
Rule 539   arrayCreatorRest -> FLPAREN expression FRPAREN
Rule 540   arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs
Rule 541   arrayCreatorRest -> FLPAREN expression FRPAREN arrays
Rule 542   classCreatorRest -> arguments classBody_once
Rule 543   explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments
Rule 544   nonWildcardTypeArguments -> LESS typeList MORE
Rule 545   selector -> DOT Identifier arguments_once
Rule 546   selector -> DOT Identifier
Rule 547   selector -> DOT THIS
Rule 548   selector -> DOT SUPER superSuffix
Rule 549   selector -> DOT NEW innerCreator
Rule 550   selector -> FLPAREN expression FRPAREN
Rule 551   superSuffix -> arguments
Rule 552   superSuffix -> DOT Identifier arguments_once
Rule 553   expressionList_once -> expressionList
Rule 554   expressionList_once -> <empty>
Rule 555   arguments -> LPAREN expressionList_once RPAREN
Rule 556   FloatingPointLiteral -> NON_INTEGER_1
Rule 557   FloatingPointLiteral -> NON_INTEGER_2
Rule 558   FloatingPointLiteral -> NON_INTEGER_3
Rule 559   FloatingPointLiteral -> NON_INTEGER_4
Rule 560   integerLiteral -> LONG_NUMBER
Rule 561   integerLiteral -> LONG_HEX_NUMBER
Rule 562   empty -> <empty>

Terminals, with rules where they appear

ABSTRACT             : 36 195
AND                  : 58 442
ASSERT               : 348
ASS_ADD              : 406
ASS_AND              : 410
ASS_DIV              : 409
ASS_MOD              : 413
ASS_MUL              : 408
ASS_OR               : 411
ASS_SHL              : 414
ASS_SHR              : 416
ASS_SHRR             : 415
ASS_SUB              : 407
ASS_XOR              : 412
AT                   : 287 308
BLPAREN              : 71 72 101 102 105 106 189 257 258 259 260 307 311 312 329 330 356
BOOLEAN              : 221
BREAK                : 360
BRPAREN              : 71 72 101 102 105 106 189 257 258 259 260 307 311 312 329 330 356
BYTE                 : 223
CARET                : 437
CASE                 : 380 381
CAST                 : 
CATCH                : 369
CHAR                 : 222
CLASS                : 48 514 515 516 520 523
COLON                : 339 364 380 381 382 391 392 417
COMMA                : 49 64 65 67 68 73 96 163 171 182 184 185 231 241 250 290 299 305 395
CONST                : 
CONTINUE             : 361
CharacterLiteral     : 275
DASH                 : 474 487
DEFAULT              : 328 382
DO                   : 352
DOT                  : 21 215 216 265 266 267 268 514 515 516 520 523 524 525 526 527 545 546 547 548 549 552
DOUBLE               : 228
ELSE                 : 341
ENUM                 : 63
EQUALS               : 168 176 177 295 405
EXCLAMATION          : 497
EXTENDS              : 44 55 93 236
FALSE                : 280
FINAL                : 38 196 229
FINALLY              : 353 355
FLOAT                : 227
FLPAREN              : 137 517 536 537 538 539 540 541 550
FOR                  : 350
FRPAREN              : 137 517 536 537 538 539 540 541 550
FUTURE               : 
GENERIC              : 
GOTO                 : 
IF                   : 349
IMPLEMENTS           : 46
IMPORT               : 22 23
INNER                : 
INSTANCEOF           : 453
INT                  : 225
INTERFACE            : 95 308
Identifier           : 48 57 63 84 95 114 115 121 122 123 124 130 133 156 157 162 178 179 203 208 209 210 211 215 216 219 220 267 271 272 288 289 295 308 326 345 364 391 392 512 513 535 543 545 546 552
LCOMMENT             : 
LESS                 : 52 53 234 235 463 544
LONG                 : 226
LONG_HEX_NUMBER      : 561
LONG_NUMBER          : 560
LPAREN               : 246 283 284 285 326 350 369 394 501 502 503 555
MCOMMENT             : 
MORE                 : 52 53 234 235 464 544
MULT                 : 21 268 479
NATIVE               : 197
NEW                  : 511 527 549
NEWLINE              : 
NON_INTEGER_1        : 556
NON_INTEGER_2        : 557
NON_INTEGER_3        : 558
NON_INTEGER_4        : 559
NULL                 : 278
OPERATOR             : 
OP_ARRAY             : 253
OP_DEC               : 489 492
OP_EQ                : 447
OP_GE                : 462
OP_INC               : 488 491
OP_LAND              : 427
OP_LE                : 461
OP_LOR               : 422
OP_NE                : 448
OP_SHL               : 472
OP_SHR               : 470
OP_SHRR              : 471
OUTER                : 
PACKAGE              : 18
PERCENT              : 481
PLUS                 : 473 486
PRIVATE              : 35 193
PROTECTED            : 34 192
PUBLIC               : 33 191
QUES                 : 240 417
REST                 : 
RETURN               : 358
RPAREN               : 246 283 284 285 326 350 369 394 501 502 503 555
SEMI                 : 18 22 23 25 87 88 107 125 127 134 141 142 145 147 149 151 152 153 154 155 158 159 261 262 263 264 265 266 315 317 334 348 352 358 359 360 361 362 363 388 388
SHORT                : 224
SLASH                : 480
STATIC               : 19 22 37 108 194
STRICTFP             : 39 201
SUPER                : 237 262 264 265 266 509 526 548
SWITCH               : 356
SYNCHRONIZED         : 198 357
StringLiteral        : 276
THIS                 : 261 263 507 508 525 547
THROW                : 359
THROWS               : 136
TILDE                : 496
TRANSIENT            : 199
TRUE                 : 279
TRY                  : 353 354 355
VAR                  : 
VERTICAL             : 432
VOID                 : 114 122 130 157 516
VOLATILE             : 200
WHILE                : 351 352
error                : 

Nonterminals, with rules where they appear

AND_equalityExpression : 443 444
AND_equalityExpressions : 444 445
CARET_andExpression  : 438 439
CARET_andExpressions : 439 440
COMMA_OR_empty       : 307
COMMA_VAR            : 164 165
COMMA_VARS           : 165 166
COMMA_const          : 172 173
COMMA_consts         : 173 174
COMMA_enumConstant   : 74 75
COMMA_enumConstants  : 75 76
COMMA_expression     : 396 397
COMMA_expressions    : 397 398
COMMA_once           : 187 188
COMMA_qualifiedName  : 242 243
COMMA_qualifiedNames : 243 244
COMMA_type           : 97 98
COMMA_typeArgument   : 232 233
COMMA_typeArguments  : 233 234
COMMA_types          : 98 99
COMMA_variableInitializer : 183
COMMA_variableInitializers : 184 187
DOT_Identifier       : 269 270
DOT_Identifiers      : 270 271 288 507 512
DOT_MULT             : 
EQUALS_variableInitializer : 169
EXTENDS_typeBound    : 57
EXTENDS_typeList     : 95
ExtendType           : 48
FL_expression_FR     : 518 519
FL_expression_FRs    : 519 521 538 540
FloatingPointLiteral : 274
IMPLEMENTS_typeList  : 48 63
INC_DEC_empty        : 499 500
INSTANCEOF_type_once : 455
Identifier_or_empty  : 360 361
O_conditionalAndExpression : 423 424
O_conditionalAndExpressions : 424 425
O_inclusiveOrExpression : 428 429
O_inclusiveOrExpressions : 429 430
SEMI_OR_empty        : 318 319 320 321
STATIC_empty         : 
V_exclusiveOrExpression : 433 434 435
V_exclusiveOrExpressions : 434
add_multiplicativeExpression : 475 476
add_multiplicativeExpressions : 476 477
additiveExpression   : 465 468 469
andExpression        : 437 440 441
and_type             : 59 60
and_types            : 60 61
annotation           : 32 190 230 281 282 297
annotationBody       : 287
annotationConstantRest : 323
annotationMethodOrConstantRest : 317
annotationMethodRest : 322
annotationName       : 287
annotationTypeBody   : 308
annotationTypeDeclaration : 90 321
annotationTypeElementDeclaration : 309 310
annotationTypeElementDeclarations : 310 311
annotationTypeElementRest : 313 314
annotations          : 13 78 282
annotations_once     : 84
arguments            : 80 261 262 263 264 265 266 522 526 542 543 551
arguments_once       : 84 545 552
array                : 138 139
arrayCreatorRest     : 529
arrayInitializer     : 180 536 537
array_body           : 189
arrays               : 138 140 141 144 145 152 154 176 178 206 208 210 514 520 536 538 541
assignmentOperator   : 402
assignmentOperator_expression_empty : 404
block                : 108 109 254 347 353 353 354 355 355 357 369
blockStatement       : 255 256
blockStatements      : 256 257 259 329 378
booleanLiteral       : 277
castExpression       : 498
catchClause          : 365 366 367 368
catchClauses         : 366 367
catches              : 353 354
classBody            : 48 82
classBodyDeclaration : 85 86
classBodyDeclarations : 86 87 101
classBody_once       : 84 542
classCreatorRest     : 528 530 535
classDeclaration     : 26 28 117 132
classOrInterfaceDeclaration : 5 6 24 332
classOrInterfaceModifier : 30 31
classOrInterfaceModifiers : 26 27 31
classOrInterfaceType : 531
classOrInterfaceTypeBody : 208 209 219
classOrInterfaceTypeStatement : 217 218
classOrInterfaceTypeStatements : 212 214 218
compilationUnit      : 
compilationUnit_sub  : 13 0
conditionalAndExpression : 422 425 426
conditionalExpression : 296 404
conditionalExpressionStat : 418 419
conditionalExpressionStats : 419 420
conditionalOrExpression : 420 421
constantDeclarator   : 171
constantDeclaratorRest : 162 174 175
constantDeclaratorsRest : 134
constantExpression   : 380
constructorBody      : 160 161
constructorDeclaratorRest : 115 123
createdName          : 528 529 530
creator              : 511
defaultValue         : 324
defaultValue_or_empty : 326
dotTypeParameter     : 50 51
dotTypeParameters    : 51 52
elementValue         : 284 295 299 302 303 328
elementValueArrayInitializer : 298
elementValueBody     : 300 301
elementValueBodys    : 301 302
elementValuePair     : 290 293 294
elementValuePairs    : 283
elementValuePairsBody : 291 292
elementValuePairsBodys : 292 293
elementValueStatement : 307
else_statement       : 349
empty                : 79 238 249 493
enhancedForControl   : 387
enumBody             : 63
enumBodyDeclarations : 64 66 67 70
enumBodyStatement    : 71
enumConstant         : 73 76 77
enumConstantName     : 381
enumConstants        : 64 65 66 69
enumDeclaration      : 43 320
equalityExpression   : 442 445 446
exclusiveOrExpression : 432 435 436
explicitConstructorInvocation : 257 258
explicitGenericInvocation : 524
expression           : 181 339 343 348 359 391 392 394 395 398 399 400 401 402 417 417 503 517 538 539 540 541 550
expressionList       : 390 393 553
expressionList_once  : 555
expression_colon_or_empty : 348
expression_or_empty  : 358 388
fieldDeclaration     : 119
forControl           : 350
forInit              : 383
forInit_or_empty     : 388
forUpdate            : 385
forUpdate_empty      : 388
formalParameter      : 369
formalParameterDecls : 246 250
formalParameterDeclsRest : 247 248
formalParameterDeclsRestBody : 252
formalParameters     : 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 158 159 160 161
genericMethodOrConstructorDecl : 112
genericMethodOrConstructorRest : 120
identifierSuffix     : 504
identifierSuffix_empty : 507 508 512 513
importDeclaration    : 7 8
importDeclarations   : 1 2 8 14 15
inclusiveOrExpression : 427 430 431
innerCreator         : 527 549
instanceOfExpression : 447 448 451 452
instanceOfExpressionStat : 449 450
instanceOfExpressionStats : 450 451
integerLiteral       : 273
interfaceBody        : 95
interfaceBodyDeclaration : 103 104
interfaceBodyDeclarations : 104 105
interfaceDeclaration : 27 29 116 131
interfaceGenericMethodDecl : 129
interfaceMemberDecl  : 126
interfaceMethodDeclaratorRest : 135 156 157
interfaceMethodOrFieldDecl : 128
interfaceMethodOrFieldRest : 133
literal              : 510
localVariableDeclaration : 334 389
localVariableDeclarationStatement : 331
memberDecl           : 110 111
memberDeclaration    : 113
methodBody           : 140 143 144 146 148 150
methodDeclaration    : 118
methodDeclaratorRest : 121 122 124
modifier             : 40 41
modifiers            : 41 110 126 313
mu_unaryExpression   : 482 483
mu_unaryExpressions  : 483 484
multiplicativeExpression : 473 474 477 478
nonWildcardTypeArguments : 261 262 265 528 533 543
nonWildcardTypeArguments_empty : 535
normalClassDeclaration : 42 318
normalInterfaceDeclaration : 89 319
packageDeclaration   : 1 2 3 4 11 15 16 17
packageDeclaration_once : 14
packageOrTypeName    : 
parExpression        : 349 351 352 356 357 506
primary              : 265 266 499 500
primitiveType        : 206 207 501 514 515 532
qualifiedName        : 18 22 23 202 204 241 244 245
qualifiedNameList    : 136
re_shiftExpression   : 457 458
re_shiftExpressions  : 458 459
relationalExpression : 455
relationalOp         : 456
selector             : 494 495
selectors            : 495 499
sh_additiveExpression : 466 467
sh_additiveExpressions : 467 468
shiftExpression      : 456 459 460
shiftOp              : 465
statement            : 333 341 349 350 351 352 364
statementExpression  : 363
superSuffix          : 509 548
switchBlockStatementGroup : 372 373
switchBlockStatementGroupStats : 373 374
switchBlockStatementGroups : 356
switchLabel          : 376 377
switchLabels         : 377 378 379
throwList            : 140 141 142 143 148 149 152 153 158 160
type                 : 44 58 61 62 96 99 100 118 119 121 133 156 236 237 239 247 248 317 335 336 370 371 391 392 453 502
typeArgument         : 231 234 235
typeArgumentStatment : 240
typeArguments        : 212 213 215
typeBound            : 55
typeDeclaration      : 9 10
typeDeclarations     : 1 3 5 10 14 16
typeList             : 46 93 544
typeName             : 
typeParameter        : 49 52 53
typeParameters       : 48 91 120 156 157
typeParameters_once  : 95
type_body            : 205
unaryExpression      : 479 480 481 484 485 486 487 488 489 496 497 501
unaryExpressionNotPlusMinus : 490 502 503
variableDeclarator   : 163 166 167
variableDeclaratorId : 169 170 252 253 370 371
variableDeclarators  : 125 327 335 336
variableInitializer  : 168 176 177 182 184 187 188
variableModifier     : 337 338
variableModifiers    : 247 335 338 370 391
voidInterfaceMethodDeclaratorRest : 130
voidMethodDeclaratorRest : 114

Parsing method: LALR

state 0

    (0) S' -> . compilationUnit_sub
    (1) compilationUnit_sub -> . packageDeclaration importDeclarations typeDeclarations
    (2) compilationUnit_sub -> . packageDeclaration importDeclarations
    (3) compilationUnit_sub -> . packageDeclaration typeDeclarations
    (4) compilationUnit_sub -> . packageDeclaration
    (5) compilationUnit_sub -> . classOrInterfaceDeclaration typeDeclarations
    (6) compilationUnit_sub -> . classOrInterfaceDeclaration
    (18) packageDeclaration -> . PACKAGE qualifiedName SEMI
    (26) classOrInterfaceDeclaration -> . classOrInterfaceModifiers classDeclaration
    (27) classOrInterfaceDeclaration -> . classOrInterfaceModifiers interfaceDeclaration
    (28) classOrInterfaceDeclaration -> . classDeclaration
    (29) classOrInterfaceDeclaration -> . interfaceDeclaration
    (30) classOrInterfaceModifiers -> . classOrInterfaceModifier
    (31) classOrInterfaceModifiers -> . classOrInterfaceModifiers classOrInterfaceModifier
    (42) classDeclaration -> . normalClassDeclaration
    (43) classDeclaration -> . enumDeclaration
    (89) interfaceDeclaration -> . normalInterfaceDeclaration
    (90) interfaceDeclaration -> . annotationTypeDeclaration
    (32) classOrInterfaceModifier -> . annotation
    (33) classOrInterfaceModifier -> . PUBLIC
    (34) classOrInterfaceModifier -> . PROTECTED
    (35) classOrInterfaceModifier -> . PRIVATE
    (36) classOrInterfaceModifier -> . ABSTRACT
    (37) classOrInterfaceModifier -> . STATIC
    (38) classOrInterfaceModifier -> . FINAL
    (39) classOrInterfaceModifier -> . STRICTFP
    (48) normalClassDeclaration -> . CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody
    (63) enumDeclaration -> . ENUM Identifier IMPLEMENTS_typeList enumBody
    (95) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody
    (308) annotationTypeDeclaration -> . AT INTERFACE Identifier annotationTypeBody
    (287) annotation -> . AT annotationName annotationBody

    PACKAGE         shift and go to state 14
    PUBLIC          shift and go to state 24
    PROTECTED       shift and go to state 3
    PRIVATE         shift and go to state 9
    ABSTRACT        shift and go to state 2
    STATIC          shift and go to state 4
    FINAL           shift and go to state 6
    STRICTFP        shift and go to state 10
    CLASS           shift and go to state 12
    ENUM            shift and go to state 15
    INTERFACE       shift and go to state 23
    AT              shift and go to state 18

    interfaceDeclaration           shift and go to state 1
    normalInterfaceDeclaration     shift and go to state 5
    normalClassDeclaration         shift and go to state 7
    compilationUnit_sub            shift and go to state 11
    enumDeclaration                shift and go to state 13
    classOrInterfaceDeclaration    shift and go to state 8
    packageDeclaration             shift and go to state 16
    classDeclaration               shift and go to state 17
    annotation                     shift and go to state 19
    classOrInterfaceModifier       shift and go to state 20
    annotationTypeDeclaration      shift and go to state 21
    classOrInterfaceModifiers      shift and go to state 22

state 1

    (29) classOrInterfaceDeclaration -> interfaceDeclaration .

    SEMI            reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    PUBLIC          reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    PROTECTED       reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    PRIVATE         reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    ABSTRACT        reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    STATIC          reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    FINAL           reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    STRICTFP        reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    CLASS           reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    ENUM            reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    INTERFACE       reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    AT              reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    $end            reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    BRPAREN         reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    ASSERT          reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    IF              reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    FOR             reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    WHILE           reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    DO              reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    TRY             reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    SWITCH          reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    SYNCHRONIZED    reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    RETURN          reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    THROW           reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    BREAK           reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    CONTINUE        reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    Identifier      reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    BLPAREN         reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    BOOLEAN         reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    CHAR            reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    BYTE            reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    SHORT           reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    INT             reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    LONG            reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    FLOAT           reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    DOUBLE          reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    PLUS            reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    DASH            reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    OP_INC          reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    OP_DEC          reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    TILDE           reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    EXCLAMATION     reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    LPAREN          reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    THIS            reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    SUPER           reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    NEW             reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    VOID            reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    CharacterLiteral reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    StringLiteral   reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    NULL            reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    LONG_NUMBER     reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    LONG_HEX_NUMBER reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    NON_INTEGER_1   reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    NON_INTEGER_2   reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    NON_INTEGER_3   reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    NON_INTEGER_4   reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    TRUE            reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    FALSE           reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    CASE            reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)
    DEFAULT         reduce using rule 29 (classOrInterfaceDeclaration -> interfaceDeclaration .)


state 2

    (36) classOrInterfaceModifier -> ABSTRACT .

    PUBLIC          reduce using rule 36 (classOrInterfaceModifier -> ABSTRACT .)
    PROTECTED       reduce using rule 36 (classOrInterfaceModifier -> ABSTRACT .)
    PRIVATE         reduce using rule 36 (classOrInterfaceModifier -> ABSTRACT .)
    ABSTRACT        reduce using rule 36 (classOrInterfaceModifier -> ABSTRACT .)
    STATIC          reduce using rule 36 (classOrInterfaceModifier -> ABSTRACT .)
    FINAL           reduce using rule 36 (classOrInterfaceModifier -> ABSTRACT .)
    STRICTFP        reduce using rule 36 (classOrInterfaceModifier -> ABSTRACT .)
    CLASS           reduce using rule 36 (classOrInterfaceModifier -> ABSTRACT .)
    ENUM            reduce using rule 36 (classOrInterfaceModifier -> ABSTRACT .)
    INTERFACE       reduce using rule 36 (classOrInterfaceModifier -> ABSTRACT .)
    AT              reduce using rule 36 (classOrInterfaceModifier -> ABSTRACT .)


state 3

    (34) classOrInterfaceModifier -> PROTECTED .

    PUBLIC          reduce using rule 34 (classOrInterfaceModifier -> PROTECTED .)
    PROTECTED       reduce using rule 34 (classOrInterfaceModifier -> PROTECTED .)
    PRIVATE         reduce using rule 34 (classOrInterfaceModifier -> PROTECTED .)
    ABSTRACT        reduce using rule 34 (classOrInterfaceModifier -> PROTECTED .)
    STATIC          reduce using rule 34 (classOrInterfaceModifier -> PROTECTED .)
    FINAL           reduce using rule 34 (classOrInterfaceModifier -> PROTECTED .)
    STRICTFP        reduce using rule 34 (classOrInterfaceModifier -> PROTECTED .)
    CLASS           reduce using rule 34 (classOrInterfaceModifier -> PROTECTED .)
    ENUM            reduce using rule 34 (classOrInterfaceModifier -> PROTECTED .)
    INTERFACE       reduce using rule 34 (classOrInterfaceModifier -> PROTECTED .)
    AT              reduce using rule 34 (classOrInterfaceModifier -> PROTECTED .)


state 4

    (37) classOrInterfaceModifier -> STATIC .

    PUBLIC          reduce using rule 37 (classOrInterfaceModifier -> STATIC .)
    PROTECTED       reduce using rule 37 (classOrInterfaceModifier -> STATIC .)
    PRIVATE         reduce using rule 37 (classOrInterfaceModifier -> STATIC .)
    ABSTRACT        reduce using rule 37 (classOrInterfaceModifier -> STATIC .)
    STATIC          reduce using rule 37 (classOrInterfaceModifier -> STATIC .)
    FINAL           reduce using rule 37 (classOrInterfaceModifier -> STATIC .)
    STRICTFP        reduce using rule 37 (classOrInterfaceModifier -> STATIC .)
    CLASS           reduce using rule 37 (classOrInterfaceModifier -> STATIC .)
    ENUM            reduce using rule 37 (classOrInterfaceModifier -> STATIC .)
    INTERFACE       reduce using rule 37 (classOrInterfaceModifier -> STATIC .)
    AT              reduce using rule 37 (classOrInterfaceModifier -> STATIC .)


state 5

    (89) interfaceDeclaration -> normalInterfaceDeclaration .

    SEMI            reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    PUBLIC          reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    PROTECTED       reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    PRIVATE         reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    ABSTRACT        reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    STATIC          reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    FINAL           reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    STRICTFP        reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    CLASS           reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    ENUM            reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    INTERFACE       reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    AT              reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    $end            reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    BRPAREN         reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    ASSERT          reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    IF              reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    FOR             reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    WHILE           reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    DO              reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    TRY             reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    SWITCH          reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    SYNCHRONIZED    reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    RETURN          reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    THROW           reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    BREAK           reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    CONTINUE        reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    Identifier      reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    BLPAREN         reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    BOOLEAN         reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    CHAR            reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    BYTE            reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    SHORT           reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    INT             reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    LONG            reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    FLOAT           reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    DOUBLE          reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    PLUS            reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    DASH            reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    OP_INC          reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    OP_DEC          reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    TILDE           reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    EXCLAMATION     reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    LPAREN          reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    THIS            reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    SUPER           reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    NEW             reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    VOID            reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    CharacterLiteral reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    StringLiteral   reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    NULL            reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    LONG_NUMBER     reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    LONG_HEX_NUMBER reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    NON_INTEGER_1   reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    NON_INTEGER_2   reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    NON_INTEGER_3   reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    NON_INTEGER_4   reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    TRUE            reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    FALSE           reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    NATIVE          reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    TRANSIENT       reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    VOLATILE        reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    LESS            reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    CASE            reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)
    DEFAULT         reduce using rule 89 (interfaceDeclaration -> normalInterfaceDeclaration .)


state 6

    (38) classOrInterfaceModifier -> FINAL .

    PUBLIC          reduce using rule 38 (classOrInterfaceModifier -> FINAL .)
    PROTECTED       reduce using rule 38 (classOrInterfaceModifier -> FINAL .)
    PRIVATE         reduce using rule 38 (classOrInterfaceModifier -> FINAL .)
    ABSTRACT        reduce using rule 38 (classOrInterfaceModifier -> FINAL .)
    STATIC          reduce using rule 38 (classOrInterfaceModifier -> FINAL .)
    FINAL           reduce using rule 38 (classOrInterfaceModifier -> FINAL .)
    STRICTFP        reduce using rule 38 (classOrInterfaceModifier -> FINAL .)
    CLASS           reduce using rule 38 (classOrInterfaceModifier -> FINAL .)
    ENUM            reduce using rule 38 (classOrInterfaceModifier -> FINAL .)
    INTERFACE       reduce using rule 38 (classOrInterfaceModifier -> FINAL .)
    AT              reduce using rule 38 (classOrInterfaceModifier -> FINAL .)


state 7

    (42) classDeclaration -> normalClassDeclaration .

    SEMI            reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    STATIC          reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    BLPAREN         reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    VOID            reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    Identifier      reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    PUBLIC          reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    PROTECTED       reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    PRIVATE         reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    ABSTRACT        reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    FINAL           reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    NATIVE          reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    SYNCHRONIZED    reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    TRANSIENT       reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    VOLATILE        reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    STRICTFP        reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    AT              reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    LESS            reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    INTERFACE       reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    CLASS           reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    ENUM            reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    BOOLEAN         reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    CHAR            reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    BYTE            reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    SHORT           reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    INT             reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    LONG            reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    FLOAT           reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    DOUBLE          reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    BRPAREN         reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    ASSERT          reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    IF              reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    FOR             reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    WHILE           reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    DO              reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    TRY             reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    SWITCH          reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    RETURN          reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    THROW           reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    BREAK           reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    CONTINUE        reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    PLUS            reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    DASH            reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    OP_INC          reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    OP_DEC          reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    TILDE           reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    EXCLAMATION     reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    LPAREN          reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    THIS            reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    SUPER           reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    NEW             reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    CharacterLiteral reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    StringLiteral   reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    NULL            reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    LONG_NUMBER     reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    LONG_HEX_NUMBER reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    NON_INTEGER_1   reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    NON_INTEGER_2   reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    NON_INTEGER_3   reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    NON_INTEGER_4   reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    TRUE            reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    FALSE           reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    $end            reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    CASE            reduce using rule 42 (classDeclaration -> normalClassDeclaration .)
    DEFAULT         reduce using rule 42 (classDeclaration -> normalClassDeclaration .)


state 8

    (5) compilationUnit_sub -> classOrInterfaceDeclaration . typeDeclarations
    (6) compilationUnit_sub -> classOrInterfaceDeclaration .
    (9) typeDeclarations -> . typeDeclaration
    (10) typeDeclarations -> . typeDeclarations typeDeclaration
    (24) typeDeclaration -> . classOrInterfaceDeclaration
    (25) typeDeclaration -> . SEMI
    (26) classOrInterfaceDeclaration -> . classOrInterfaceModifiers classDeclaration
    (27) classOrInterfaceDeclaration -> . classOrInterfaceModifiers interfaceDeclaration
    (28) classOrInterfaceDeclaration -> . classDeclaration
    (29) classOrInterfaceDeclaration -> . interfaceDeclaration
    (30) classOrInterfaceModifiers -> . classOrInterfaceModifier
    (31) classOrInterfaceModifiers -> . classOrInterfaceModifiers classOrInterfaceModifier
    (42) classDeclaration -> . normalClassDeclaration
    (43) classDeclaration -> . enumDeclaration
    (89) interfaceDeclaration -> . normalInterfaceDeclaration
    (90) interfaceDeclaration -> . annotationTypeDeclaration
    (32) classOrInterfaceModifier -> . annotation
    (33) classOrInterfaceModifier -> . PUBLIC
    (34) classOrInterfaceModifier -> . PROTECTED
    (35) classOrInterfaceModifier -> . PRIVATE
    (36) classOrInterfaceModifier -> . ABSTRACT
    (37) classOrInterfaceModifier -> . STATIC
    (38) classOrInterfaceModifier -> . FINAL
    (39) classOrInterfaceModifier -> . STRICTFP
    (48) normalClassDeclaration -> . CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody
    (63) enumDeclaration -> . ENUM Identifier IMPLEMENTS_typeList enumBody
    (95) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody
    (308) annotationTypeDeclaration -> . AT INTERFACE Identifier annotationTypeBody
    (287) annotation -> . AT annotationName annotationBody

    $end            reduce using rule 6 (compilationUnit_sub -> classOrInterfaceDeclaration .)
    SEMI            shift and go to state 26
    PUBLIC          shift and go to state 24
    PROTECTED       shift and go to state 3
    PRIVATE         shift and go to state 9
    ABSTRACT        shift and go to state 2
    STATIC          shift and go to state 4
    FINAL           shift and go to state 6
    STRICTFP        shift and go to state 10
    CLASS           shift and go to state 12
    ENUM            shift and go to state 15
    INTERFACE       shift and go to state 23
    AT              shift and go to state 18

    typeDeclaration                shift and go to state 25
    normalInterfaceDeclaration     shift and go to state 5
    normalClassDeclaration         shift and go to state 7
    classOrInterfaceModifiers      shift and go to state 22
    enumDeclaration                shift and go to state 13
    classOrInterfaceDeclaration    shift and go to state 27
    typeDeclarations               shift and go to state 28
    classDeclaration               shift and go to state 17
    annotation                     shift and go to state 19
    classOrInterfaceModifier       shift and go to state 20
    annotationTypeDeclaration      shift and go to state 21
    interfaceDeclaration           shift and go to state 1

state 9

    (35) classOrInterfaceModifier -> PRIVATE .

    PUBLIC          reduce using rule 35 (classOrInterfaceModifier -> PRIVATE .)
    PROTECTED       reduce using rule 35 (classOrInterfaceModifier -> PRIVATE .)
    PRIVATE         reduce using rule 35 (classOrInterfaceModifier -> PRIVATE .)
    ABSTRACT        reduce using rule 35 (classOrInterfaceModifier -> PRIVATE .)
    STATIC          reduce using rule 35 (classOrInterfaceModifier -> PRIVATE .)
    FINAL           reduce using rule 35 (classOrInterfaceModifier -> PRIVATE .)
    STRICTFP        reduce using rule 35 (classOrInterfaceModifier -> PRIVATE .)
    CLASS           reduce using rule 35 (classOrInterfaceModifier -> PRIVATE .)
    ENUM            reduce using rule 35 (classOrInterfaceModifier -> PRIVATE .)
    INTERFACE       reduce using rule 35 (classOrInterfaceModifier -> PRIVATE .)
    AT              reduce using rule 35 (classOrInterfaceModifier -> PRIVATE .)


state 10

    (39) classOrInterfaceModifier -> STRICTFP .

    PUBLIC          reduce using rule 39 (classOrInterfaceModifier -> STRICTFP .)
    PROTECTED       reduce using rule 39 (classOrInterfaceModifier -> STRICTFP .)
    PRIVATE         reduce using rule 39 (classOrInterfaceModifier -> STRICTFP .)
    ABSTRACT        reduce using rule 39 (classOrInterfaceModifier -> STRICTFP .)
    STATIC          reduce using rule 39 (classOrInterfaceModifier -> STRICTFP .)
    FINAL           reduce using rule 39 (classOrInterfaceModifier -> STRICTFP .)
    STRICTFP        reduce using rule 39 (classOrInterfaceModifier -> STRICTFP .)
    CLASS           reduce using rule 39 (classOrInterfaceModifier -> STRICTFP .)
    ENUM            reduce using rule 39 (classOrInterfaceModifier -> STRICTFP .)
    INTERFACE       reduce using rule 39 (classOrInterfaceModifier -> STRICTFP .)
    AT              reduce using rule 39 (classOrInterfaceModifier -> STRICTFP .)


state 11

    (0) S' -> compilationUnit_sub .



state 12

    (48) normalClassDeclaration -> CLASS . Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody

    Identifier      shift and go to state 29


state 13

    (43) classDeclaration -> enumDeclaration .

    SEMI            reduce using rule 43 (classDeclaration -> enumDeclaration .)
    STATIC          reduce using rule 43 (classDeclaration -> enumDeclaration .)
    BLPAREN         reduce using rule 43 (classDeclaration -> enumDeclaration .)
    VOID            reduce using rule 43 (classDeclaration -> enumDeclaration .)
    Identifier      reduce using rule 43 (classDeclaration -> enumDeclaration .)
    PUBLIC          reduce using rule 43 (classDeclaration -> enumDeclaration .)
    PROTECTED       reduce using rule 43 (classDeclaration -> enumDeclaration .)
    PRIVATE         reduce using rule 43 (classDeclaration -> enumDeclaration .)
    ABSTRACT        reduce using rule 43 (classDeclaration -> enumDeclaration .)
    FINAL           reduce using rule 43 (classDeclaration -> enumDeclaration .)
    NATIVE          reduce using rule 43 (classDeclaration -> enumDeclaration .)
    SYNCHRONIZED    reduce using rule 43 (classDeclaration -> enumDeclaration .)
    TRANSIENT       reduce using rule 43 (classDeclaration -> enumDeclaration .)
    VOLATILE        reduce using rule 43 (classDeclaration -> enumDeclaration .)
    STRICTFP        reduce using rule 43 (classDeclaration -> enumDeclaration .)
    AT              reduce using rule 43 (classDeclaration -> enumDeclaration .)
    LESS            reduce using rule 43 (classDeclaration -> enumDeclaration .)
    INTERFACE       reduce using rule 43 (classDeclaration -> enumDeclaration .)
    CLASS           reduce using rule 43 (classDeclaration -> enumDeclaration .)
    ENUM            reduce using rule 43 (classDeclaration -> enumDeclaration .)
    BOOLEAN         reduce using rule 43 (classDeclaration -> enumDeclaration .)
    CHAR            reduce using rule 43 (classDeclaration -> enumDeclaration .)
    BYTE            reduce using rule 43 (classDeclaration -> enumDeclaration .)
    SHORT           reduce using rule 43 (classDeclaration -> enumDeclaration .)
    INT             reduce using rule 43 (classDeclaration -> enumDeclaration .)
    LONG            reduce using rule 43 (classDeclaration -> enumDeclaration .)
    FLOAT           reduce using rule 43 (classDeclaration -> enumDeclaration .)
    DOUBLE          reduce using rule 43 (classDeclaration -> enumDeclaration .)
    BRPAREN         reduce using rule 43 (classDeclaration -> enumDeclaration .)
    ASSERT          reduce using rule 43 (classDeclaration -> enumDeclaration .)
    IF              reduce using rule 43 (classDeclaration -> enumDeclaration .)
    FOR             reduce using rule 43 (classDeclaration -> enumDeclaration .)
    WHILE           reduce using rule 43 (classDeclaration -> enumDeclaration .)
    DO              reduce using rule 43 (classDeclaration -> enumDeclaration .)
    TRY             reduce using rule 43 (classDeclaration -> enumDeclaration .)
    SWITCH          reduce using rule 43 (classDeclaration -> enumDeclaration .)
    RETURN          reduce using rule 43 (classDeclaration -> enumDeclaration .)
    THROW           reduce using rule 43 (classDeclaration -> enumDeclaration .)
    BREAK           reduce using rule 43 (classDeclaration -> enumDeclaration .)
    CONTINUE        reduce using rule 43 (classDeclaration -> enumDeclaration .)
    PLUS            reduce using rule 43 (classDeclaration -> enumDeclaration .)
    DASH            reduce using rule 43 (classDeclaration -> enumDeclaration .)
    OP_INC          reduce using rule 43 (classDeclaration -> enumDeclaration .)
    OP_DEC          reduce using rule 43 (classDeclaration -> enumDeclaration .)
    TILDE           reduce using rule 43 (classDeclaration -> enumDeclaration .)
    EXCLAMATION     reduce using rule 43 (classDeclaration -> enumDeclaration .)
    LPAREN          reduce using rule 43 (classDeclaration -> enumDeclaration .)
    THIS            reduce using rule 43 (classDeclaration -> enumDeclaration .)
    SUPER           reduce using rule 43 (classDeclaration -> enumDeclaration .)
    NEW             reduce using rule 43 (classDeclaration -> enumDeclaration .)
    CharacterLiteral reduce using rule 43 (classDeclaration -> enumDeclaration .)
    StringLiteral   reduce using rule 43 (classDeclaration -> enumDeclaration .)
    NULL            reduce using rule 43 (classDeclaration -> enumDeclaration .)
    LONG_NUMBER     reduce using rule 43 (classDeclaration -> enumDeclaration .)
    LONG_HEX_NUMBER reduce using rule 43 (classDeclaration -> enumDeclaration .)
    NON_INTEGER_1   reduce using rule 43 (classDeclaration -> enumDeclaration .)
    NON_INTEGER_2   reduce using rule 43 (classDeclaration -> enumDeclaration .)
    NON_INTEGER_3   reduce using rule 43 (classDeclaration -> enumDeclaration .)
    NON_INTEGER_4   reduce using rule 43 (classDeclaration -> enumDeclaration .)
    TRUE            reduce using rule 43 (classDeclaration -> enumDeclaration .)
    FALSE           reduce using rule 43 (classDeclaration -> enumDeclaration .)
    $end            reduce using rule 43 (classDeclaration -> enumDeclaration .)
    CASE            reduce using rule 43 (classDeclaration -> enumDeclaration .)
    DEFAULT         reduce using rule 43 (classDeclaration -> enumDeclaration .)


state 14

    (18) packageDeclaration -> PACKAGE . qualifiedName SEMI
    (271) qualifiedName -> . Identifier DOT_Identifiers
    (272) qualifiedName -> . Identifier

    Identifier      shift and go to state 31

    qualifiedName                  shift and go to state 30

state 15

    (63) enumDeclaration -> ENUM . Identifier IMPLEMENTS_typeList enumBody

    Identifier      shift and go to state 32


state 16

    (1) compilationUnit_sub -> packageDeclaration . importDeclarations typeDeclarations
    (2) compilationUnit_sub -> packageDeclaration . importDeclarations
    (3) compilationUnit_sub -> packageDeclaration . typeDeclarations
    (4) compilationUnit_sub -> packageDeclaration .
    (7) importDeclarations -> . importDeclaration
    (8) importDeclarations -> . importDeclarations importDeclaration
    (9) typeDeclarations -> . typeDeclaration
    (10) typeDeclarations -> . typeDeclarations typeDeclaration
    (22) importDeclaration -> . IMPORT STATIC qualifiedName SEMI
    (23) importDeclaration -> . IMPORT qualifiedName SEMI
    (24) typeDeclaration -> . classOrInterfaceDeclaration
    (25) typeDeclaration -> . SEMI
    (26) classOrInterfaceDeclaration -> . classOrInterfaceModifiers classDeclaration
    (27) classOrInterfaceDeclaration -> . classOrInterfaceModifiers interfaceDeclaration
    (28) classOrInterfaceDeclaration -> . classDeclaration
    (29) classOrInterfaceDeclaration -> . interfaceDeclaration
    (30) classOrInterfaceModifiers -> . classOrInterfaceModifier
    (31) classOrInterfaceModifiers -> . classOrInterfaceModifiers classOrInterfaceModifier
    (42) classDeclaration -> . normalClassDeclaration
    (43) classDeclaration -> . enumDeclaration
    (89) interfaceDeclaration -> . normalInterfaceDeclaration
    (90) interfaceDeclaration -> . annotationTypeDeclaration
    (32) classOrInterfaceModifier -> . annotation
    (33) classOrInterfaceModifier -> . PUBLIC
    (34) classOrInterfaceModifier -> . PROTECTED
    (35) classOrInterfaceModifier -> . PRIVATE
    (36) classOrInterfaceModifier -> . ABSTRACT
    (37) classOrInterfaceModifier -> . STATIC
    (38) classOrInterfaceModifier -> . FINAL
    (39) classOrInterfaceModifier -> . STRICTFP
    (48) normalClassDeclaration -> . CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody
    (63) enumDeclaration -> . ENUM Identifier IMPLEMENTS_typeList enumBody
    (95) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody
    (308) annotationTypeDeclaration -> . AT INTERFACE Identifier annotationTypeBody
    (287) annotation -> . AT annotationName annotationBody

    $end            reduce using rule 4 (compilationUnit_sub -> packageDeclaration .)
    IMPORT          shift and go to state 34
    SEMI            shift and go to state 26
    PUBLIC          shift and go to state 24
    PROTECTED       shift and go to state 3
    PRIVATE         shift and go to state 9
    ABSTRACT        shift and go to state 2
    STATIC          shift and go to state 4
    FINAL           shift and go to state 6
    STRICTFP        shift and go to state 10
    CLASS           shift and go to state 12
    ENUM            shift and go to state 15
    INTERFACE       shift and go to state 23
    AT              shift and go to state 18

    typeDeclaration                shift and go to state 25
    importDeclaration              shift and go to state 33
    normalInterfaceDeclaration     shift and go to state 5
    normalClassDeclaration         shift and go to state 7
    interfaceDeclaration           shift and go to state 1
    enumDeclaration                shift and go to state 13
    classOrInterfaceDeclaration    shift and go to state 27
    typeDeclarations               shift and go to state 35
    classDeclaration               shift and go to state 17
    annotation                     shift and go to state 19
    importDeclarations             shift and go to state 36
    classOrInterfaceModifier       shift and go to state 20
    annotationTypeDeclaration      shift and go to state 21
    classOrInterfaceModifiers      shift and go to state 22

state 17

    (28) classOrInterfaceDeclaration -> classDeclaration .

    SEMI            reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    PUBLIC          reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    PROTECTED       reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    PRIVATE         reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    ABSTRACT        reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    STATIC          reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    FINAL           reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    STRICTFP        reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    CLASS           reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    ENUM            reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    INTERFACE       reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    AT              reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    $end            reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    BRPAREN         reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    ASSERT          reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    IF              reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    FOR             reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    WHILE           reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    DO              reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    TRY             reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    SWITCH          reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    SYNCHRONIZED    reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    RETURN          reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    THROW           reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    BREAK           reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    CONTINUE        reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    Identifier      reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    BLPAREN         reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    BOOLEAN         reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    CHAR            reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    BYTE            reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    SHORT           reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    INT             reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    LONG            reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    FLOAT           reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    DOUBLE          reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    PLUS            reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    DASH            reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    OP_INC          reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    OP_DEC          reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    TILDE           reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    EXCLAMATION     reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    LPAREN          reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    THIS            reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    SUPER           reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    NEW             reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    VOID            reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    CharacterLiteral reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    StringLiteral   reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    NULL            reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    LONG_NUMBER     reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    LONG_HEX_NUMBER reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    NON_INTEGER_1   reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    NON_INTEGER_2   reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    NON_INTEGER_3   reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    NON_INTEGER_4   reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    TRUE            reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    FALSE           reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    CASE            reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)
    DEFAULT         reduce using rule 28 (classOrInterfaceDeclaration -> classDeclaration .)


state 18

    (308) annotationTypeDeclaration -> AT . INTERFACE Identifier annotationTypeBody
    (287) annotation -> AT . annotationName annotationBody
    (288) annotationName -> . Identifier DOT_Identifiers
    (289) annotationName -> . Identifier

    INTERFACE       shift and go to state 38
    Identifier      shift and go to state 39

    annotationName                 shift and go to state 37

state 19

    (32) classOrInterfaceModifier -> annotation .

    PUBLIC          reduce using rule 32 (classOrInterfaceModifier -> annotation .)
    PROTECTED       reduce using rule 32 (classOrInterfaceModifier -> annotation .)
    PRIVATE         reduce using rule 32 (classOrInterfaceModifier -> annotation .)
    ABSTRACT        reduce using rule 32 (classOrInterfaceModifier -> annotation .)
    STATIC          reduce using rule 32 (classOrInterfaceModifier -> annotation .)
    FINAL           reduce using rule 32 (classOrInterfaceModifier -> annotation .)
    STRICTFP        reduce using rule 32 (classOrInterfaceModifier -> annotation .)
    CLASS           reduce using rule 32 (classOrInterfaceModifier -> annotation .)
    ENUM            reduce using rule 32 (classOrInterfaceModifier -> annotation .)
    INTERFACE       reduce using rule 32 (classOrInterfaceModifier -> annotation .)
    AT              reduce using rule 32 (classOrInterfaceModifier -> annotation .)


state 20

    (30) classOrInterfaceModifiers -> classOrInterfaceModifier .

    PUBLIC          reduce using rule 30 (classOrInterfaceModifiers -> classOrInterfaceModifier .)
    PROTECTED       reduce using rule 30 (classOrInterfaceModifiers -> classOrInterfaceModifier .)
    PRIVATE         reduce using rule 30 (classOrInterfaceModifiers -> classOrInterfaceModifier .)
    ABSTRACT        reduce using rule 30 (classOrInterfaceModifiers -> classOrInterfaceModifier .)
    STATIC          reduce using rule 30 (classOrInterfaceModifiers -> classOrInterfaceModifier .)
    FINAL           reduce using rule 30 (classOrInterfaceModifiers -> classOrInterfaceModifier .)
    STRICTFP        reduce using rule 30 (classOrInterfaceModifiers -> classOrInterfaceModifier .)
    CLASS           reduce using rule 30 (classOrInterfaceModifiers -> classOrInterfaceModifier .)
    ENUM            reduce using rule 30 (classOrInterfaceModifiers -> classOrInterfaceModifier .)
    INTERFACE       reduce using rule 30 (classOrInterfaceModifiers -> classOrInterfaceModifier .)
    AT              reduce using rule 30 (classOrInterfaceModifiers -> classOrInterfaceModifier .)


state 21

    (90) interfaceDeclaration -> annotationTypeDeclaration .

    SEMI            reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    PUBLIC          reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    PROTECTED       reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    PRIVATE         reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    ABSTRACT        reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    STATIC          reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    FINAL           reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    STRICTFP        reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    CLASS           reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    ENUM            reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    INTERFACE       reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    AT              reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    $end            reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    BRPAREN         reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    ASSERT          reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    IF              reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    FOR             reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    WHILE           reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    DO              reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    TRY             reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    SWITCH          reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    SYNCHRONIZED    reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    RETURN          reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    THROW           reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    BREAK           reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    CONTINUE        reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    Identifier      reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    BLPAREN         reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    BOOLEAN         reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    CHAR            reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    BYTE            reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    SHORT           reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    INT             reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    LONG            reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    FLOAT           reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    DOUBLE          reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    PLUS            reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    DASH            reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    OP_INC          reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    OP_DEC          reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    TILDE           reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    EXCLAMATION     reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    LPAREN          reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    THIS            reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    SUPER           reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    NEW             reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    VOID            reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    CharacterLiteral reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    StringLiteral   reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    NULL            reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    LONG_NUMBER     reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    LONG_HEX_NUMBER reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    NON_INTEGER_1   reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    NON_INTEGER_2   reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    NON_INTEGER_3   reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    NON_INTEGER_4   reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    TRUE            reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    FALSE           reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    NATIVE          reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    TRANSIENT       reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    VOLATILE        reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    LESS            reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    CASE            reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)
    DEFAULT         reduce using rule 90 (interfaceDeclaration -> annotationTypeDeclaration .)


state 22

    (26) classOrInterfaceDeclaration -> classOrInterfaceModifiers . classDeclaration
    (27) classOrInterfaceDeclaration -> classOrInterfaceModifiers . interfaceDeclaration
    (31) classOrInterfaceModifiers -> classOrInterfaceModifiers . classOrInterfaceModifier
    (42) classDeclaration -> . normalClassDeclaration
    (43) classDeclaration -> . enumDeclaration
    (89) interfaceDeclaration -> . normalInterfaceDeclaration
    (90) interfaceDeclaration -> . annotationTypeDeclaration
    (32) classOrInterfaceModifier -> . annotation
    (33) classOrInterfaceModifier -> . PUBLIC
    (34) classOrInterfaceModifier -> . PROTECTED
    (35) classOrInterfaceModifier -> . PRIVATE
    (36) classOrInterfaceModifier -> . ABSTRACT
    (37) classOrInterfaceModifier -> . STATIC
    (38) classOrInterfaceModifier -> . FINAL
    (39) classOrInterfaceModifier -> . STRICTFP
    (48) normalClassDeclaration -> . CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody
    (63) enumDeclaration -> . ENUM Identifier IMPLEMENTS_typeList enumBody
    (95) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody
    (308) annotationTypeDeclaration -> . AT INTERFACE Identifier annotationTypeBody
    (287) annotation -> . AT annotationName annotationBody

    PUBLIC          shift and go to state 24
    PROTECTED       shift and go to state 3
    PRIVATE         shift and go to state 9
    ABSTRACT        shift and go to state 2
    STATIC          shift and go to state 4
    FINAL           shift and go to state 6
    STRICTFP        shift and go to state 10
    CLASS           shift and go to state 12
    ENUM            shift and go to state 15
    INTERFACE       shift and go to state 23
    AT              shift and go to state 18

    enumDeclaration                shift and go to state 13
    normalClassDeclaration         shift and go to state 7
    classOrInterfaceModifier       shift and go to state 42
    annotationTypeDeclaration      shift and go to state 21
    classDeclaration               shift and go to state 41
    interfaceDeclaration           shift and go to state 40
    normalInterfaceDeclaration     shift and go to state 5
    annotation                     shift and go to state 19

state 23

    (95) normalInterfaceDeclaration -> INTERFACE . Identifier typeParameters_once EXTENDS_typeList interfaceBody

    Identifier      shift and go to state 43


state 24

    (33) classOrInterfaceModifier -> PUBLIC .

    PUBLIC          reduce using rule 33 (classOrInterfaceModifier -> PUBLIC .)
    PROTECTED       reduce using rule 33 (classOrInterfaceModifier -> PUBLIC .)
    PRIVATE         reduce using rule 33 (classOrInterfaceModifier -> PUBLIC .)
    ABSTRACT        reduce using rule 33 (classOrInterfaceModifier -> PUBLIC .)
    STATIC          reduce using rule 33 (classOrInterfaceModifier -> PUBLIC .)
    FINAL           reduce using rule 33 (classOrInterfaceModifier -> PUBLIC .)
    STRICTFP        reduce using rule 33 (classOrInterfaceModifier -> PUBLIC .)
    CLASS           reduce using rule 33 (classOrInterfaceModifier -> PUBLIC .)
    ENUM            reduce using rule 33 (classOrInterfaceModifier -> PUBLIC .)
    INTERFACE       reduce using rule 33 (classOrInterfaceModifier -> PUBLIC .)
    AT              reduce using rule 33 (classOrInterfaceModifier -> PUBLIC .)


state 25

    (9) typeDeclarations -> typeDeclaration .

    SEMI            reduce using rule 9 (typeDeclarations -> typeDeclaration .)
    PUBLIC          reduce using rule 9 (typeDeclarations -> typeDeclaration .)
    PROTECTED       reduce using rule 9 (typeDeclarations -> typeDeclaration .)
    PRIVATE         reduce using rule 9 (typeDeclarations -> typeDeclaration .)
    ABSTRACT        reduce using rule 9 (typeDeclarations -> typeDeclaration .)
    STATIC          reduce using rule 9 (typeDeclarations -> typeDeclaration .)
    FINAL           reduce using rule 9 (typeDeclarations -> typeDeclaration .)
    STRICTFP        reduce using rule 9 (typeDeclarations -> typeDeclaration .)
    CLASS           reduce using rule 9 (typeDeclarations -> typeDeclaration .)
    ENUM            reduce using rule 9 (typeDeclarations -> typeDeclaration .)
    INTERFACE       reduce using rule 9 (typeDeclarations -> typeDeclaration .)
    AT              reduce using rule 9 (typeDeclarations -> typeDeclaration .)
    $end            reduce using rule 9 (typeDeclarations -> typeDeclaration .)


state 26

    (25) typeDeclaration -> SEMI .

    SEMI            reduce using rule 25 (typeDeclaration -> SEMI .)
    PUBLIC          reduce using rule 25 (typeDeclaration -> SEMI .)
    PROTECTED       reduce using rule 25 (typeDeclaration -> SEMI .)
    PRIVATE         reduce using rule 25 (typeDeclaration -> SEMI .)
    ABSTRACT        reduce using rule 25 (typeDeclaration -> SEMI .)
    STATIC          reduce using rule 25 (typeDeclaration -> SEMI .)
    FINAL           reduce using rule 25 (typeDeclaration -> SEMI .)
    STRICTFP        reduce using rule 25 (typeDeclaration -> SEMI .)
    CLASS           reduce using rule 25 (typeDeclaration -> SEMI .)
    ENUM            reduce using rule 25 (typeDeclaration -> SEMI .)
    INTERFACE       reduce using rule 25 (typeDeclaration -> SEMI .)
    AT              reduce using rule 25 (typeDeclaration -> SEMI .)
    $end            reduce using rule 25 (typeDeclaration -> SEMI .)


state 27

    (24) typeDeclaration -> classOrInterfaceDeclaration .

    SEMI            reduce using rule 24 (typeDeclaration -> classOrInterfaceDeclaration .)
    PUBLIC          reduce using rule 24 (typeDeclaration -> classOrInterfaceDeclaration .)
    PROTECTED       reduce using rule 24 (typeDeclaration -> classOrInterfaceDeclaration .)
    PRIVATE         reduce using rule 24 (typeDeclaration -> classOrInterfaceDeclaration .)
    ABSTRACT        reduce using rule 24 (typeDeclaration -> classOrInterfaceDeclaration .)
    STATIC          reduce using rule 24 (typeDeclaration -> classOrInterfaceDeclaration .)
    FINAL           reduce using rule 24 (typeDeclaration -> classOrInterfaceDeclaration .)
    STRICTFP        reduce using rule 24 (typeDeclaration -> classOrInterfaceDeclaration .)
    CLASS           reduce using rule 24 (typeDeclaration -> classOrInterfaceDeclaration .)
    ENUM            reduce using rule 24 (typeDeclaration -> classOrInterfaceDeclaration .)
    INTERFACE       reduce using rule 24 (typeDeclaration -> classOrInterfaceDeclaration .)
    AT              reduce using rule 24 (typeDeclaration -> classOrInterfaceDeclaration .)
    $end            reduce using rule 24 (typeDeclaration -> classOrInterfaceDeclaration .)


state 28

    (5) compilationUnit_sub -> classOrInterfaceDeclaration typeDeclarations .
    (10) typeDeclarations -> typeDeclarations . typeDeclaration
    (24) typeDeclaration -> . classOrInterfaceDeclaration
    (25) typeDeclaration -> . SEMI
    (26) classOrInterfaceDeclaration -> . classOrInterfaceModifiers classDeclaration
    (27) classOrInterfaceDeclaration -> . classOrInterfaceModifiers interfaceDeclaration
    (28) classOrInterfaceDeclaration -> . classDeclaration
    (29) classOrInterfaceDeclaration -> . interfaceDeclaration
    (30) classOrInterfaceModifiers -> . classOrInterfaceModifier
    (31) classOrInterfaceModifiers -> . classOrInterfaceModifiers classOrInterfaceModifier
    (42) classDeclaration -> . normalClassDeclaration
    (43) classDeclaration -> . enumDeclaration
    (89) interfaceDeclaration -> . normalInterfaceDeclaration
    (90) interfaceDeclaration -> . annotationTypeDeclaration
    (32) classOrInterfaceModifier -> . annotation
    (33) classOrInterfaceModifier -> . PUBLIC
    (34) classOrInterfaceModifier -> . PROTECTED
    (35) classOrInterfaceModifier -> . PRIVATE
    (36) classOrInterfaceModifier -> . ABSTRACT
    (37) classOrInterfaceModifier -> . STATIC
    (38) classOrInterfaceModifier -> . FINAL
    (39) classOrInterfaceModifier -> . STRICTFP
    (48) normalClassDeclaration -> . CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody
    (63) enumDeclaration -> . ENUM Identifier IMPLEMENTS_typeList enumBody
    (95) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody
    (308) annotationTypeDeclaration -> . AT INTERFACE Identifier annotationTypeBody
    (287) annotation -> . AT annotationName annotationBody

    $end            reduce using rule 5 (compilationUnit_sub -> classOrInterfaceDeclaration typeDeclarations .)
    SEMI            shift and go to state 26
    PUBLIC          shift and go to state 24
    PROTECTED       shift and go to state 3
    PRIVATE         shift and go to state 9
    ABSTRACT        shift and go to state 2
    STATIC          shift and go to state 4
    FINAL           shift and go to state 6
    STRICTFP        shift and go to state 10
    CLASS           shift and go to state 12
    ENUM            shift and go to state 15
    INTERFACE       shift and go to state 23
    AT              shift and go to state 18

    typeDeclaration                shift and go to state 44
    normalInterfaceDeclaration     shift and go to state 5
    normalClassDeclaration         shift and go to state 7
    classOrInterfaceModifiers      shift and go to state 22
    enumDeclaration                shift and go to state 13
    classOrInterfaceDeclaration    shift and go to state 27
    classDeclaration               shift and go to state 17
    annotation                     shift and go to state 19
    classOrInterfaceModifier       shift and go to state 20
    annotationTypeDeclaration      shift and go to state 21
    interfaceDeclaration           shift and go to state 1

state 29

    (48) normalClassDeclaration -> CLASS Identifier . typeParameters ExtendType IMPLEMENTS_typeList classBody
    (52) typeParameters -> . LESS typeParameter dotTypeParameters MORE
    (53) typeParameters -> . LESS typeParameter MORE
    (54) typeParameters -> .

    LESS            shift and go to state 45
    EXTENDS         reduce using rule 54 (typeParameters -> .)
    IMPLEMENTS      reduce using rule 54 (typeParameters -> .)
    BLPAREN         reduce using rule 54 (typeParameters -> .)

    typeParameters                 shift and go to state 46

state 30

    (18) packageDeclaration -> PACKAGE qualifiedName . SEMI

    SEMI            shift and go to state 47


state 31

    (271) qualifiedName -> Identifier . DOT_Identifiers
    (272) qualifiedName -> Identifier .
    (269) DOT_Identifiers -> . DOT_Identifier
    (270) DOT_Identifiers -> . DOT_Identifiers DOT_Identifier
    (267) DOT_Identifier -> . DOT Identifier
    (268) DOT_Identifier -> . DOT MULT

    SEMI            reduce using rule 272 (qualifiedName -> Identifier .)
    COMMA           reduce using rule 272 (qualifiedName -> Identifier .)
    BLPAREN         reduce using rule 272 (qualifiedName -> Identifier .)
    DOT             shift and go to state 49

    DOT_Identifier                 shift and go to state 48
    DOT_Identifiers                shift and go to state 50

state 32

    (63) enumDeclaration -> ENUM Identifier . IMPLEMENTS_typeList enumBody
    (46) IMPLEMENTS_typeList -> . IMPLEMENTS typeList
    (47) IMPLEMENTS_typeList -> .

    IMPLEMENTS      shift and go to state 51
    BLPAREN         reduce using rule 47 (IMPLEMENTS_typeList -> .)

    IMPLEMENTS_typeList            shift and go to state 52

state 33

    (7) importDeclarations -> importDeclaration .

    IMPORT          reduce using rule 7 (importDeclarations -> importDeclaration .)
    SEMI            reduce using rule 7 (importDeclarations -> importDeclaration .)
    PUBLIC          reduce using rule 7 (importDeclarations -> importDeclaration .)
    PROTECTED       reduce using rule 7 (importDeclarations -> importDeclaration .)
    PRIVATE         reduce using rule 7 (importDeclarations -> importDeclaration .)
    ABSTRACT        reduce using rule 7 (importDeclarations -> importDeclaration .)
    STATIC          reduce using rule 7 (importDeclarations -> importDeclaration .)
    FINAL           reduce using rule 7 (importDeclarations -> importDeclaration .)
    STRICTFP        reduce using rule 7 (importDeclarations -> importDeclaration .)
    CLASS           reduce using rule 7 (importDeclarations -> importDeclaration .)
    ENUM            reduce using rule 7 (importDeclarations -> importDeclaration .)
    INTERFACE       reduce using rule 7 (importDeclarations -> importDeclaration .)
    AT              reduce using rule 7 (importDeclarations -> importDeclaration .)
    $end            reduce using rule 7 (importDeclarations -> importDeclaration .)


state 34

    (22) importDeclaration -> IMPORT . STATIC qualifiedName SEMI
    (23) importDeclaration -> IMPORT . qualifiedName SEMI
    (271) qualifiedName -> . Identifier DOT_Identifiers
    (272) qualifiedName -> . Identifier

    STATIC          shift and go to state 54
    Identifier      shift and go to state 31

    qualifiedName                  shift and go to state 53

state 35

    (3) compilationUnit_sub -> packageDeclaration typeDeclarations .
    (10) typeDeclarations -> typeDeclarations . typeDeclaration
    (24) typeDeclaration -> . classOrInterfaceDeclaration
    (25) typeDeclaration -> . SEMI
    (26) classOrInterfaceDeclaration -> . classOrInterfaceModifiers classDeclaration
    (27) classOrInterfaceDeclaration -> . classOrInterfaceModifiers interfaceDeclaration
    (28) classOrInterfaceDeclaration -> . classDeclaration
    (29) classOrInterfaceDeclaration -> . interfaceDeclaration
    (30) classOrInterfaceModifiers -> . classOrInterfaceModifier
    (31) classOrInterfaceModifiers -> . classOrInterfaceModifiers classOrInterfaceModifier
    (42) classDeclaration -> . normalClassDeclaration
    (43) classDeclaration -> . enumDeclaration
    (89) interfaceDeclaration -> . normalInterfaceDeclaration
    (90) interfaceDeclaration -> . annotationTypeDeclaration
    (32) classOrInterfaceModifier -> . annotation
    (33) classOrInterfaceModifier -> . PUBLIC
    (34) classOrInterfaceModifier -> . PROTECTED
    (35) classOrInterfaceModifier -> . PRIVATE
    (36) classOrInterfaceModifier -> . ABSTRACT
    (37) classOrInterfaceModifier -> . STATIC
    (38) classOrInterfaceModifier -> . FINAL
    (39) classOrInterfaceModifier -> . STRICTFP
    (48) normalClassDeclaration -> . CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody
    (63) enumDeclaration -> . ENUM Identifier IMPLEMENTS_typeList enumBody
    (95) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody
    (308) annotationTypeDeclaration -> . AT INTERFACE Identifier annotationTypeBody
    (287) annotation -> . AT annotationName annotationBody

    $end            reduce using rule 3 (compilationUnit_sub -> packageDeclaration typeDeclarations .)
    SEMI            shift and go to state 26
    PUBLIC          shift and go to state 24
    PROTECTED       shift and go to state 3
    PRIVATE         shift and go to state 9
    ABSTRACT        shift and go to state 2
    STATIC          shift and go to state 4
    FINAL           shift and go to state 6
    STRICTFP        shift and go to state 10
    CLASS           shift and go to state 12
    ENUM            shift and go to state 15
    INTERFACE       shift and go to state 23
    AT              shift and go to state 18

    typeDeclaration                shift and go to state 44
    normalInterfaceDeclaration     shift and go to state 5
    normalClassDeclaration         shift and go to state 7
    interfaceDeclaration           shift and go to state 1
    enumDeclaration                shift and go to state 13
    classOrInterfaceDeclaration    shift and go to state 27
    classDeclaration               shift and go to state 17
    annotation                     shift and go to state 19
    classOrInterfaceModifier       shift and go to state 20
    annotationTypeDeclaration      shift and go to state 21
    classOrInterfaceModifiers      shift and go to state 22

state 36

    (1) compilationUnit_sub -> packageDeclaration importDeclarations . typeDeclarations
    (2) compilationUnit_sub -> packageDeclaration importDeclarations .
    (8) importDeclarations -> importDeclarations . importDeclaration
    (9) typeDeclarations -> . typeDeclaration
    (10) typeDeclarations -> . typeDeclarations typeDeclaration
    (22) importDeclaration -> . IMPORT STATIC qualifiedName SEMI
    (23) importDeclaration -> . IMPORT qualifiedName SEMI
    (24) typeDeclaration -> . classOrInterfaceDeclaration
    (25) typeDeclaration -> . SEMI
    (26) classOrInterfaceDeclaration -> . classOrInterfaceModifiers classDeclaration
    (27) classOrInterfaceDeclaration -> . classOrInterfaceModifiers interfaceDeclaration
    (28) classOrInterfaceDeclaration -> . classDeclaration
    (29) classOrInterfaceDeclaration -> . interfaceDeclaration
    (30) classOrInterfaceModifiers -> . classOrInterfaceModifier
    (31) classOrInterfaceModifiers -> . classOrInterfaceModifiers classOrInterfaceModifier
    (42) classDeclaration -> . normalClassDeclaration
    (43) classDeclaration -> . enumDeclaration
    (89) interfaceDeclaration -> . normalInterfaceDeclaration
    (90) interfaceDeclaration -> . annotationTypeDeclaration
    (32) classOrInterfaceModifier -> . annotation
    (33) classOrInterfaceModifier -> . PUBLIC
    (34) classOrInterfaceModifier -> . PROTECTED
    (35) classOrInterfaceModifier -> . PRIVATE
    (36) classOrInterfaceModifier -> . ABSTRACT
    (37) classOrInterfaceModifier -> . STATIC
    (38) classOrInterfaceModifier -> . FINAL
    (39) classOrInterfaceModifier -> . STRICTFP
    (48) normalClassDeclaration -> . CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody
    (63) enumDeclaration -> . ENUM Identifier IMPLEMENTS_typeList enumBody
    (95) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody
    (308) annotationTypeDeclaration -> . AT INTERFACE Identifier annotationTypeBody
    (287) annotation -> . AT annotationName annotationBody

    $end            reduce using rule 2 (compilationUnit_sub -> packageDeclaration importDeclarations .)
    IMPORT          shift and go to state 34
    SEMI            shift and go to state 26
    PUBLIC          shift and go to state 24
    PROTECTED       shift and go to state 3
    PRIVATE         shift and go to state 9
    ABSTRACT        shift and go to state 2
    STATIC          shift and go to state 4
    FINAL           shift and go to state 6
    STRICTFP        shift and go to state 10
    CLASS           shift and go to state 12
    ENUM            shift and go to state 15
    INTERFACE       shift and go to state 23
    AT              shift and go to state 18

    typeDeclaration                shift and go to state 25
    importDeclaration              shift and go to state 55
    normalInterfaceDeclaration     shift and go to state 5
    normalClassDeclaration         shift and go to state 7
    interfaceDeclaration           shift and go to state 1
    enumDeclaration                shift and go to state 13
    classOrInterfaceDeclaration    shift and go to state 27
    typeDeclarations               shift and go to state 56
    classDeclaration               shift and go to state 17
    annotation                     shift and go to state 19
    classOrInterfaceModifier       shift and go to state 20
    annotationTypeDeclaration      shift and go to state 21
    classOrInterfaceModifiers      shift and go to state 22

state 37

    (287) annotation -> AT annotationName . annotationBody
    (283) annotationBody -> . LPAREN elementValuePairs RPAREN
    (284) annotationBody -> . LPAREN elementValue RPAREN
    (285) annotationBody -> . LPAREN RPAREN
    (286) annotationBody -> .

    LPAREN          shift and go to state 58
    PUBLIC          reduce using rule 286 (annotationBody -> .)
    PROTECTED       reduce using rule 286 (annotationBody -> .)
    PRIVATE         reduce using rule 286 (annotationBody -> .)
    ABSTRACT        reduce using rule 286 (annotationBody -> .)
    STATIC          reduce using rule 286 (annotationBody -> .)
    FINAL           reduce using rule 286 (annotationBody -> .)
    STRICTFP        reduce using rule 286 (annotationBody -> .)
    CLASS           reduce using rule 286 (annotationBody -> .)
    ENUM            reduce using rule 286 (annotationBody -> .)
    INTERFACE       reduce using rule 286 (annotationBody -> .)
    AT              reduce using rule 286 (annotationBody -> .)
    RPAREN          reduce using rule 286 (annotationBody -> .)
    Identifier      reduce using rule 286 (annotationBody -> .)
    COMMA           reduce using rule 286 (annotationBody -> .)
    BRPAREN         reduce using rule 286 (annotationBody -> .)
    NATIVE          reduce using rule 286 (annotationBody -> .)
    SYNCHRONIZED    reduce using rule 286 (annotationBody -> .)
    TRANSIENT       reduce using rule 286 (annotationBody -> .)
    VOLATILE        reduce using rule 286 (annotationBody -> .)
    BOOLEAN         reduce using rule 286 (annotationBody -> .)
    CHAR            reduce using rule 286 (annotationBody -> .)
    BYTE            reduce using rule 286 (annotationBody -> .)
    SHORT           reduce using rule 286 (annotationBody -> .)
    INT             reduce using rule 286 (annotationBody -> .)
    LONG            reduce using rule 286 (annotationBody -> .)
    FLOAT           reduce using rule 286 (annotationBody -> .)
    DOUBLE          reduce using rule 286 (annotationBody -> .)
    VOID            reduce using rule 286 (annotationBody -> .)
    LESS            reduce using rule 286 (annotationBody -> .)
    SEMI            reduce using rule 286 (annotationBody -> .)

    annotationBody                 shift and go to state 57

state 38

    (308) annotationTypeDeclaration -> AT INTERFACE . Identifier annotationTypeBody

    Identifier      shift and go to state 59


state 39

    (288) annotationName -> Identifier . DOT_Identifiers
    (289) annotationName -> Identifier .
    (269) DOT_Identifiers -> . DOT_Identifier
    (270) DOT_Identifiers -> . DOT_Identifiers DOT_Identifier
    (267) DOT_Identifier -> . DOT Identifier
    (268) DOT_Identifier -> . DOT MULT

    LPAREN          reduce using rule 289 (annotationName -> Identifier .)
    VOID            reduce using rule 289 (annotationName -> Identifier .)
    Identifier      reduce using rule 289 (annotationName -> Identifier .)
    PUBLIC          reduce using rule 289 (annotationName -> Identifier .)
    PROTECTED       reduce using rule 289 (annotationName -> Identifier .)
    PRIVATE         reduce using rule 289 (annotationName -> Identifier .)
    STATIC          reduce using rule 289 (annotationName -> Identifier .)
    ABSTRACT        reduce using rule 289 (annotationName -> Identifier .)
    FINAL           reduce using rule 289 (annotationName -> Identifier .)
    NATIVE          reduce using rule 289 (annotationName -> Identifier .)
    SYNCHRONIZED    reduce using rule 289 (annotationName -> Identifier .)
    TRANSIENT       reduce using rule 289 (annotationName -> Identifier .)
    VOLATILE        reduce using rule 289 (annotationName -> Identifier .)
    STRICTFP        reduce using rule 289 (annotationName -> Identifier .)
    AT              reduce using rule 289 (annotationName -> Identifier .)
    LESS            reduce using rule 289 (annotationName -> Identifier .)
    INTERFACE       reduce using rule 289 (annotationName -> Identifier .)
    CLASS           reduce using rule 289 (annotationName -> Identifier .)
    ENUM            reduce using rule 289 (annotationName -> Identifier .)
    BOOLEAN         reduce using rule 289 (annotationName -> Identifier .)
    CHAR            reduce using rule 289 (annotationName -> Identifier .)
    BYTE            reduce using rule 289 (annotationName -> Identifier .)
    SHORT           reduce using rule 289 (annotationName -> Identifier .)
    INT             reduce using rule 289 (annotationName -> Identifier .)
    LONG            reduce using rule 289 (annotationName -> Identifier .)
    FLOAT           reduce using rule 289 (annotationName -> Identifier .)
    DOUBLE          reduce using rule 289 (annotationName -> Identifier .)
    RPAREN          reduce using rule 289 (annotationName -> Identifier .)
    COMMA           reduce using rule 289 (annotationName -> Identifier .)
    BRPAREN         reduce using rule 289 (annotationName -> Identifier .)
    SEMI            reduce using rule 289 (annotationName -> Identifier .)
    DOT             shift and go to state 49

    DOT_Identifier                 shift and go to state 48
    DOT_Identifiers                shift and go to state 60

state 40

    (27) classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .

    SEMI            reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    PUBLIC          reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    PROTECTED       reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    PRIVATE         reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    ABSTRACT        reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    STATIC          reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    FINAL           reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    STRICTFP        reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    CLASS           reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    ENUM            reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    INTERFACE       reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    AT              reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    $end            reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    BRPAREN         reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    ASSERT          reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    IF              reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    FOR             reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    WHILE           reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    DO              reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    TRY             reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    SWITCH          reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    SYNCHRONIZED    reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    RETURN          reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    THROW           reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    BREAK           reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    CONTINUE        reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    Identifier      reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    BLPAREN         reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    BOOLEAN         reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    CHAR            reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    BYTE            reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    SHORT           reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    INT             reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    LONG            reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    FLOAT           reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    DOUBLE          reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    PLUS            reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    DASH            reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    OP_INC          reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    OP_DEC          reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    TILDE           reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    EXCLAMATION     reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    LPAREN          reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    THIS            reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    SUPER           reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    NEW             reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    VOID            reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    CharacterLiteral reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    StringLiteral   reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    NULL            reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    LONG_NUMBER     reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    LONG_HEX_NUMBER reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    NON_INTEGER_1   reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    NON_INTEGER_2   reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    NON_INTEGER_3   reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    NON_INTEGER_4   reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    TRUE            reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    FALSE           reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    CASE            reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)
    DEFAULT         reduce using rule 27 (classOrInterfaceDeclaration -> classOrInterfaceModifiers interfaceDeclaration .)


state 41

    (26) classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .

    SEMI            reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    PUBLIC          reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    PROTECTED       reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    PRIVATE         reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    ABSTRACT        reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    STATIC          reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    FINAL           reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    STRICTFP        reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    CLASS           reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    ENUM            reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    INTERFACE       reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    AT              reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    $end            reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    BRPAREN         reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    ASSERT          reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    IF              reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    FOR             reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    WHILE           reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    DO              reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    TRY             reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    SWITCH          reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    SYNCHRONIZED    reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    RETURN          reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    THROW           reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    BREAK           reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    CONTINUE        reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    Identifier      reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    BLPAREN         reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    BOOLEAN         reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    CHAR            reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    BYTE            reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    SHORT           reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    INT             reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    LONG            reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    FLOAT           reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    DOUBLE          reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    PLUS            reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    DASH            reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    OP_INC          reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    OP_DEC          reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    TILDE           reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    EXCLAMATION     reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    LPAREN          reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    THIS            reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    SUPER           reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    NEW             reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    VOID            reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    CharacterLiteral reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    StringLiteral   reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    NULL            reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    LONG_NUMBER     reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    LONG_HEX_NUMBER reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    NON_INTEGER_1   reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    NON_INTEGER_2   reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    NON_INTEGER_3   reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    NON_INTEGER_4   reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    TRUE            reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    FALSE           reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    CASE            reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)
    DEFAULT         reduce using rule 26 (classOrInterfaceDeclaration -> classOrInterfaceModifiers classDeclaration .)


state 42

    (31) classOrInterfaceModifiers -> classOrInterfaceModifiers classOrInterfaceModifier .

    PUBLIC          reduce using rule 31 (classOrInterfaceModifiers -> classOrInterfaceModifiers classOrInterfaceModifier .)
    PROTECTED       reduce using rule 31 (classOrInterfaceModifiers -> classOrInterfaceModifiers classOrInterfaceModifier .)
    PRIVATE         reduce using rule 31 (classOrInterfaceModifiers -> classOrInterfaceModifiers classOrInterfaceModifier .)
    ABSTRACT        reduce using rule 31 (classOrInterfaceModifiers -> classOrInterfaceModifiers classOrInterfaceModifier .)
    STATIC          reduce using rule 31 (classOrInterfaceModifiers -> classOrInterfaceModifiers classOrInterfaceModifier .)
    FINAL           reduce using rule 31 (classOrInterfaceModifiers -> classOrInterfaceModifiers classOrInterfaceModifier .)
    STRICTFP        reduce using rule 31 (classOrInterfaceModifiers -> classOrInterfaceModifiers classOrInterfaceModifier .)
    CLASS           reduce using rule 31 (classOrInterfaceModifiers -> classOrInterfaceModifiers classOrInterfaceModifier .)
    ENUM            reduce using rule 31 (classOrInterfaceModifiers -> classOrInterfaceModifiers classOrInterfaceModifier .)
    INTERFACE       reduce using rule 31 (classOrInterfaceModifiers -> classOrInterfaceModifiers classOrInterfaceModifier .)
    AT              reduce using rule 31 (classOrInterfaceModifiers -> classOrInterfaceModifiers classOrInterfaceModifier .)


state 43

    (95) normalInterfaceDeclaration -> INTERFACE Identifier . typeParameters_once EXTENDS_typeList interfaceBody
    (91) typeParameters_once -> . typeParameters
    (92) typeParameters_once -> .
    (52) typeParameters -> . LESS typeParameter dotTypeParameters MORE
    (53) typeParameters -> . LESS typeParameter MORE
    (54) typeParameters -> .

  ! reduce/reduce conflict for EXTENDS resolved using rule 54 (typeParameters -> .)
  ! reduce/reduce conflict for BLPAREN resolved using rule 54 (typeParameters -> .)
    LESS            shift and go to state 45
    EXTENDS         reduce using rule 54 (typeParameters -> .)
    BLPAREN         reduce using rule 54 (typeParameters -> .)

  ! EXTENDS         [ reduce using rule 92 (typeParameters_once -> .) ]
  ! BLPAREN         [ reduce using rule 92 (typeParameters_once -> .) ]

    typeParameters_once            shift and go to state 61
    typeParameters                 shift and go to state 62

state 44

    (10) typeDeclarations -> typeDeclarations typeDeclaration .

    SEMI            reduce using rule 10 (typeDeclarations -> typeDeclarations typeDeclaration .)
    PUBLIC          reduce using rule 10 (typeDeclarations -> typeDeclarations typeDeclaration .)
    PROTECTED       reduce using rule 10 (typeDeclarations -> typeDeclarations typeDeclaration .)
    PRIVATE         reduce using rule 10 (typeDeclarations -> typeDeclarations typeDeclaration .)
    ABSTRACT        reduce using rule 10 (typeDeclarations -> typeDeclarations typeDeclaration .)
    STATIC          reduce using rule 10 (typeDeclarations -> typeDeclarations typeDeclaration .)
    FINAL           reduce using rule 10 (typeDeclarations -> typeDeclarations typeDeclaration .)
    STRICTFP        reduce using rule 10 (typeDeclarations -> typeDeclarations typeDeclaration .)
    CLASS           reduce using rule 10 (typeDeclarations -> typeDeclarations typeDeclaration .)
    ENUM            reduce using rule 10 (typeDeclarations -> typeDeclarations typeDeclaration .)
    INTERFACE       reduce using rule 10 (typeDeclarations -> typeDeclarations typeDeclaration .)
    AT              reduce using rule 10 (typeDeclarations -> typeDeclarations typeDeclaration .)
    $end            reduce using rule 10 (typeDeclarations -> typeDeclarations typeDeclaration .)


state 45

    (52) typeParameters -> LESS . typeParameter dotTypeParameters MORE
    (53) typeParameters -> LESS . typeParameter MORE
    (57) typeParameter -> . Identifier EXTENDS_typeBound

    Identifier      shift and go to state 64

    typeParameter                  shift and go to state 63

state 46

    (48) normalClassDeclaration -> CLASS Identifier typeParameters . ExtendType IMPLEMENTS_typeList classBody
    (44) ExtendType -> . EXTENDS type
    (45) ExtendType -> .

    EXTENDS         shift and go to state 66
    IMPLEMENTS      reduce using rule 45 (ExtendType -> .)
    BLPAREN         reduce using rule 45 (ExtendType -> .)

    ExtendType                     shift and go to state 65

state 47

    (18) packageDeclaration -> PACKAGE qualifiedName SEMI .

    IMPORT          reduce using rule 18 (packageDeclaration -> PACKAGE qualifiedName SEMI .)
    SEMI            reduce using rule 18 (packageDeclaration -> PACKAGE qualifiedName SEMI .)
    PUBLIC          reduce using rule 18 (packageDeclaration -> PACKAGE qualifiedName SEMI .)
    PROTECTED       reduce using rule 18 (packageDeclaration -> PACKAGE qualifiedName SEMI .)
    PRIVATE         reduce using rule 18 (packageDeclaration -> PACKAGE qualifiedName SEMI .)
    ABSTRACT        reduce using rule 18 (packageDeclaration -> PACKAGE qualifiedName SEMI .)
    STATIC          reduce using rule 18 (packageDeclaration -> PACKAGE qualifiedName SEMI .)
    FINAL           reduce using rule 18 (packageDeclaration -> PACKAGE qualifiedName SEMI .)
    STRICTFP        reduce using rule 18 (packageDeclaration -> PACKAGE qualifiedName SEMI .)
    CLASS           reduce using rule 18 (packageDeclaration -> PACKAGE qualifiedName SEMI .)
    ENUM            reduce using rule 18 (packageDeclaration -> PACKAGE qualifiedName SEMI .)
    INTERFACE       reduce using rule 18 (packageDeclaration -> PACKAGE qualifiedName SEMI .)
    AT              reduce using rule 18 (packageDeclaration -> PACKAGE qualifiedName SEMI .)
    $end            reduce using rule 18 (packageDeclaration -> PACKAGE qualifiedName SEMI .)


state 48

    (269) DOT_Identifiers -> DOT_Identifier .

    DOT             reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    LPAREN          reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    FLPAREN         reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    OP_INC          reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    OP_DEC          reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    MULT            reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    SLASH           reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    PERCENT         reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    PLUS            reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    DASH            reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    OP_SHR          reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    OP_SHRR         reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    OP_SHL          reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    OP_LE           reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    OP_GE           reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    LESS            reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    MORE            reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    INSTANCEOF      reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    OP_EQ           reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    OP_NE           reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    AND             reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    CARET           reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    VERTICAL        reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    OP_LAND         reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    OP_LOR          reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    QUES            reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    EQUALS          reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    ASS_ADD         reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    ASS_SUB         reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    ASS_MUL         reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    ASS_DIV         reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    ASS_AND         reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    ASS_OR          reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    ASS_XOR         reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    ASS_MOD         reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    ASS_SHL         reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    ASS_SHRR        reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    ASS_SHR         reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    COLON           reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    RPAREN          reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    COMMA           reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    BRPAREN         reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    FRPAREN         reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    SEMI            reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    BLPAREN         reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    PUBLIC          reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    PROTECTED       reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    PRIVATE         reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    ABSTRACT        reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    STATIC          reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    FINAL           reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    STRICTFP        reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    CLASS           reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    ENUM            reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    INTERFACE       reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    AT              reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    NATIVE          reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    SYNCHRONIZED    reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    TRANSIENT       reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    VOLATILE        reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    Identifier      reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    BOOLEAN         reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    CHAR            reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    BYTE            reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    SHORT           reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    INT             reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    LONG            reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    FLOAT           reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    DOUBLE          reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)
    VOID            reduce using rule 269 (DOT_Identifiers -> DOT_Identifier .)


state 49

    (267) DOT_Identifier -> DOT . Identifier
    (268) DOT_Identifier -> DOT . MULT

    Identifier      shift and go to state 67
    MULT            shift and go to state 68


state 50

    (271) qualifiedName -> Identifier DOT_Identifiers .
    (270) DOT_Identifiers -> DOT_Identifiers . DOT_Identifier
    (267) DOT_Identifier -> . DOT Identifier
    (268) DOT_Identifier -> . DOT MULT

    SEMI            reduce using rule 271 (qualifiedName -> Identifier DOT_Identifiers .)
    COMMA           reduce using rule 271 (qualifiedName -> Identifier DOT_Identifiers .)
    BLPAREN         reduce using rule 271 (qualifiedName -> Identifier DOT_Identifiers .)
    DOT             shift and go to state 49

    DOT_Identifier                 shift and go to state 69

state 51

    (46) IMPLEMENTS_typeList -> IMPLEMENTS . typeList
    (99) typeList -> . type COMMA_types
    (100) typeList -> . type
    (205) type -> . type_body
    (206) type -> . primitiveType arrays
    (207) type -> . primitiveType
    (208) type_body -> . Identifier classOrInterfaceTypeBody arrays
    (209) type_body -> . Identifier classOrInterfaceTypeBody
    (210) type_body -> . Identifier arrays
    (211) type_body -> . Identifier
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE

    Identifier      shift and go to state 80
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72

    typeList                       shift and go to state 71
    primitiveType                  shift and go to state 74
    type_body                      shift and go to state 77
    type                           shift and go to state 81

state 52

    (63) enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList . enumBody
    (71) enumBody -> . BLPAREN enumBodyStatement BRPAREN
    (72) enumBody -> . BLPAREN BRPAREN

    BLPAREN         shift and go to state 84

    enumBody                       shift and go to state 83

state 53

    (23) importDeclaration -> IMPORT qualifiedName . SEMI

    SEMI            shift and go to state 85


state 54

    (22) importDeclaration -> IMPORT STATIC . qualifiedName SEMI
    (271) qualifiedName -> . Identifier DOT_Identifiers
    (272) qualifiedName -> . Identifier

    Identifier      shift and go to state 31

    qualifiedName                  shift and go to state 86

state 55

    (8) importDeclarations -> importDeclarations importDeclaration .

    IMPORT          reduce using rule 8 (importDeclarations -> importDeclarations importDeclaration .)
    SEMI            reduce using rule 8 (importDeclarations -> importDeclarations importDeclaration .)
    PUBLIC          reduce using rule 8 (importDeclarations -> importDeclarations importDeclaration .)
    PROTECTED       reduce using rule 8 (importDeclarations -> importDeclarations importDeclaration .)
    PRIVATE         reduce using rule 8 (importDeclarations -> importDeclarations importDeclaration .)
    ABSTRACT        reduce using rule 8 (importDeclarations -> importDeclarations importDeclaration .)
    STATIC          reduce using rule 8 (importDeclarations -> importDeclarations importDeclaration .)
    FINAL           reduce using rule 8 (importDeclarations -> importDeclarations importDeclaration .)
    STRICTFP        reduce using rule 8 (importDeclarations -> importDeclarations importDeclaration .)
    CLASS           reduce using rule 8 (importDeclarations -> importDeclarations importDeclaration .)
    ENUM            reduce using rule 8 (importDeclarations -> importDeclarations importDeclaration .)
    INTERFACE       reduce using rule 8 (importDeclarations -> importDeclarations importDeclaration .)
    AT              reduce using rule 8 (importDeclarations -> importDeclarations importDeclaration .)
    $end            reduce using rule 8 (importDeclarations -> importDeclarations importDeclaration .)


state 56

    (1) compilationUnit_sub -> packageDeclaration importDeclarations typeDeclarations .
    (10) typeDeclarations -> typeDeclarations . typeDeclaration
    (24) typeDeclaration -> . classOrInterfaceDeclaration
    (25) typeDeclaration -> . SEMI
    (26) classOrInterfaceDeclaration -> . classOrInterfaceModifiers classDeclaration
    (27) classOrInterfaceDeclaration -> . classOrInterfaceModifiers interfaceDeclaration
    (28) classOrInterfaceDeclaration -> . classDeclaration
    (29) classOrInterfaceDeclaration -> . interfaceDeclaration
    (30) classOrInterfaceModifiers -> . classOrInterfaceModifier
    (31) classOrInterfaceModifiers -> . classOrInterfaceModifiers classOrInterfaceModifier
    (42) classDeclaration -> . normalClassDeclaration
    (43) classDeclaration -> . enumDeclaration
    (89) interfaceDeclaration -> . normalInterfaceDeclaration
    (90) interfaceDeclaration -> . annotationTypeDeclaration
    (32) classOrInterfaceModifier -> . annotation
    (33) classOrInterfaceModifier -> . PUBLIC
    (34) classOrInterfaceModifier -> . PROTECTED
    (35) classOrInterfaceModifier -> . PRIVATE
    (36) classOrInterfaceModifier -> . ABSTRACT
    (37) classOrInterfaceModifier -> . STATIC
    (38) classOrInterfaceModifier -> . FINAL
    (39) classOrInterfaceModifier -> . STRICTFP
    (48) normalClassDeclaration -> . CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody
    (63) enumDeclaration -> . ENUM Identifier IMPLEMENTS_typeList enumBody
    (95) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody
    (308) annotationTypeDeclaration -> . AT INTERFACE Identifier annotationTypeBody
    (287) annotation -> . AT annotationName annotationBody

    $end            reduce using rule 1 (compilationUnit_sub -> packageDeclaration importDeclarations typeDeclarations .)
    SEMI            shift and go to state 26
    PUBLIC          shift and go to state 24
    PROTECTED       shift and go to state 3
    PRIVATE         shift and go to state 9
    ABSTRACT        shift and go to state 2
    STATIC          shift and go to state 4
    FINAL           shift and go to state 6
    STRICTFP        shift and go to state 10
    CLASS           shift and go to state 12
    ENUM            shift and go to state 15
    INTERFACE       shift and go to state 23
    AT              shift and go to state 18

    typeDeclaration                shift and go to state 44
    normalInterfaceDeclaration     shift and go to state 5
    normalClassDeclaration         shift and go to state 7
    interfaceDeclaration           shift and go to state 1
    enumDeclaration                shift and go to state 13
    classOrInterfaceDeclaration    shift and go to state 27
    classDeclaration               shift and go to state 17
    annotation                     shift and go to state 19
    classOrInterfaceModifier       shift and go to state 20
    annotationTypeDeclaration      shift and go to state 21
    classOrInterfaceModifiers      shift and go to state 22

state 57

    (287) annotation -> AT annotationName annotationBody .

    VOID            reduce using rule 287 (annotation -> AT annotationName annotationBody .)
    Identifier      reduce using rule 287 (annotation -> AT annotationName annotationBody .)
    PUBLIC          reduce using rule 287 (annotation -> AT annotationName annotationBody .)
    PROTECTED       reduce using rule 287 (annotation -> AT annotationName annotationBody .)
    PRIVATE         reduce using rule 287 (annotation -> AT annotationName annotationBody .)
    STATIC          reduce using rule 287 (annotation -> AT annotationName annotationBody .)
    ABSTRACT        reduce using rule 287 (annotation -> AT annotationName annotationBody .)
    FINAL           reduce using rule 287 (annotation -> AT annotationName annotationBody .)
    NATIVE          reduce using rule 287 (annotation -> AT annotationName annotationBody .)
    SYNCHRONIZED    reduce using rule 287 (annotation -> AT annotationName annotationBody .)
    TRANSIENT       reduce using rule 287 (annotation -> AT annotationName annotationBody .)
    VOLATILE        reduce using rule 287 (annotation -> AT annotationName annotationBody .)
    STRICTFP        reduce using rule 287 (annotation -> AT annotationName annotationBody .)
    AT              reduce using rule 287 (annotation -> AT annotationName annotationBody .)
    LESS            reduce using rule 287 (annotation -> AT annotationName annotationBody .)
    INTERFACE       reduce using rule 287 (annotation -> AT annotationName annotationBody .)
    CLASS           reduce using rule 287 (annotation -> AT annotationName annotationBody .)
    ENUM            reduce using rule 287 (annotation -> AT annotationName annotationBody .)
    BOOLEAN         reduce using rule 287 (annotation -> AT annotationName annotationBody .)
    CHAR            reduce using rule 287 (annotation -> AT annotationName annotationBody .)
    BYTE            reduce using rule 287 (annotation -> AT annotationName annotationBody .)
    SHORT           reduce using rule 287 (annotation -> AT annotationName annotationBody .)
    INT             reduce using rule 287 (annotation -> AT annotationName annotationBody .)
    LONG            reduce using rule 287 (annotation -> AT annotationName annotationBody .)
    FLOAT           reduce using rule 287 (annotation -> AT annotationName annotationBody .)
    DOUBLE          reduce using rule 287 (annotation -> AT annotationName annotationBody .)
    RPAREN          reduce using rule 287 (annotation -> AT annotationName annotationBody .)
    COMMA           reduce using rule 287 (annotation -> AT annotationName annotationBody .)
    BRPAREN         reduce using rule 287 (annotation -> AT annotationName annotationBody .)
    SEMI            reduce using rule 287 (annotation -> AT annotationName annotationBody .)


state 58

    (283) annotationBody -> LPAREN . elementValuePairs RPAREN
    (284) annotationBody -> LPAREN . elementValue RPAREN
    (285) annotationBody -> LPAREN . RPAREN
    (293) elementValuePairs -> . elementValuePair elementValuePairsBodys
    (294) elementValuePairs -> . elementValuePair
    (296) elementValue -> . conditionalExpression
    (297) elementValue -> . annotation
    (298) elementValue -> . elementValueArrayInitializer
    (295) elementValuePair -> . Identifier EQUALS elementValue
    (420) conditionalExpression -> . conditionalOrExpression conditionalExpressionStats
    (421) conditionalExpression -> . conditionalOrExpression
    (287) annotation -> . AT annotationName annotationBody
    (307) elementValueArrayInitializer -> . BLPAREN elementValueStatement COMMA_OR_empty BRPAREN
    (425) conditionalOrExpression -> . conditionalAndExpression O_conditionalAndExpressions
    (426) conditionalOrExpression -> . conditionalAndExpression
    (430) conditionalAndExpression -> . inclusiveOrExpression O_inclusiveOrExpressions
    (431) conditionalAndExpression -> . inclusiveOrExpression
    (435) inclusiveOrExpression -> . exclusiveOrExpression V_exclusiveOrExpression
    (436) inclusiveOrExpression -> . exclusiveOrExpression
    (440) exclusiveOrExpression -> . andExpression CARET_andExpressions
    (441) exclusiveOrExpression -> . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    RPAREN          shift and go to state 91
    Identifier      shift and go to state 103
    AT              shift and go to state 133
    BLPAREN         shift and go to state 107
    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    equalityExpression             shift and go to state 108
    inclusiveOrExpression          shift and go to state 99
    multiplicativeExpression       shift and go to state 128
    exclusiveOrExpression          shift and go to state 110
    conditionalAndExpression       shift and go to state 89
    shiftExpression                shift and go to state 130
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    elementValuePair               shift and go to state 101
    integerLiteral                 shift and go to state 98
    additiveExpression             shift and go to state 102
    instanceOfExpression           shift and go to state 96
    conditionalExpression          shift and go to state 118
    unaryExpression                shift and go to state 131
    FloatingPointLiteral           shift and go to state 119
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    relationalExpression           shift and go to state 95
    conditionalOrExpression        shift and go to state 109
    elementValuePairs              shift and go to state 135
    annotation                     shift and go to state 136
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    primitiveType                  shift and go to state 122
    elementValueArrayInitializer   shift and go to state 123
    andExpression                  shift and go to state 106
    elementValue                   shift and go to state 139

state 59

    (308) annotationTypeDeclaration -> AT INTERFACE Identifier . annotationTypeBody
    (311) annotationTypeBody -> . BLPAREN annotationTypeElementDeclarations BRPAREN
    (312) annotationTypeBody -> . BLPAREN BRPAREN

    BLPAREN         shift and go to state 141

    annotationTypeBody             shift and go to state 140

state 60

    (288) annotationName -> Identifier DOT_Identifiers .
    (270) DOT_Identifiers -> DOT_Identifiers . DOT_Identifier
    (267) DOT_Identifier -> . DOT Identifier
    (268) DOT_Identifier -> . DOT MULT

    LPAREN          reduce using rule 288 (annotationName -> Identifier DOT_Identifiers .)
    VOID            reduce using rule 288 (annotationName -> Identifier DOT_Identifiers .)
    Identifier      reduce using rule 288 (annotationName -> Identifier DOT_Identifiers .)
    PUBLIC          reduce using rule 288 (annotationName -> Identifier DOT_Identifiers .)
    PROTECTED       reduce using rule 288 (annotationName -> Identifier DOT_Identifiers .)
    PRIVATE         reduce using rule 288 (annotationName -> Identifier DOT_Identifiers .)
    STATIC          reduce using rule 288 (annotationName -> Identifier DOT_Identifiers .)
    ABSTRACT        reduce using rule 288 (annotationName -> Identifier DOT_Identifiers .)
    FINAL           reduce using rule 288 (annotationName -> Identifier DOT_Identifiers .)
    NATIVE          reduce using rule 288 (annotationName -> Identifier DOT_Identifiers .)
    SYNCHRONIZED    reduce using rule 288 (annotationName -> Identifier DOT_Identifiers .)
    TRANSIENT       reduce using rule 288 (annotationName -> Identifier DOT_Identifiers .)
    VOLATILE        reduce using rule 288 (annotationName -> Identifier DOT_Identifiers .)
    STRICTFP        reduce using rule 288 (annotationName -> Identifier DOT_Identifiers .)
    AT              reduce using rule 288 (annotationName -> Identifier DOT_Identifiers .)
    LESS            reduce using rule 288 (annotationName -> Identifier DOT_Identifiers .)
    INTERFACE       reduce using rule 288 (annotationName -> Identifier DOT_Identifiers .)
    CLASS           reduce using rule 288 (annotationName -> Identifier DOT_Identifiers .)
    ENUM            reduce using rule 288 (annotationName -> Identifier DOT_Identifiers .)
    BOOLEAN         reduce using rule 288 (annotationName -> Identifier DOT_Identifiers .)
    CHAR            reduce using rule 288 (annotationName -> Identifier DOT_Identifiers .)
    BYTE            reduce using rule 288 (annotationName -> Identifier DOT_Identifiers .)
    SHORT           reduce using rule 288 (annotationName -> Identifier DOT_Identifiers .)
    INT             reduce using rule 288 (annotationName -> Identifier DOT_Identifiers .)
    LONG            reduce using rule 288 (annotationName -> Identifier DOT_Identifiers .)
    FLOAT           reduce using rule 288 (annotationName -> Identifier DOT_Identifiers .)
    DOUBLE          reduce using rule 288 (annotationName -> Identifier DOT_Identifiers .)
    RPAREN          reduce using rule 288 (annotationName -> Identifier DOT_Identifiers .)
    COMMA           reduce using rule 288 (annotationName -> Identifier DOT_Identifiers .)
    BRPAREN         reduce using rule 288 (annotationName -> Identifier DOT_Identifiers .)
    SEMI            reduce using rule 288 (annotationName -> Identifier DOT_Identifiers .)
    DOT             shift and go to state 49

    DOT_Identifier                 shift and go to state 69

state 61

    (95) normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once . EXTENDS_typeList interfaceBody
    (93) EXTENDS_typeList -> . EXTENDS typeList
    (94) EXTENDS_typeList -> .

    EXTENDS         shift and go to state 143
    BLPAREN         reduce using rule 94 (EXTENDS_typeList -> .)

    EXTENDS_typeList               shift and go to state 142

state 62

    (91) typeParameters_once -> typeParameters .

    EXTENDS         reduce using rule 91 (typeParameters_once -> typeParameters .)
    BLPAREN         reduce using rule 91 (typeParameters_once -> typeParameters .)


state 63

    (52) typeParameters -> LESS typeParameter . dotTypeParameters MORE
    (53) typeParameters -> LESS typeParameter . MORE
    (50) dotTypeParameters -> . dotTypeParameter
    (51) dotTypeParameters -> . dotTypeParameters dotTypeParameter
    (49) dotTypeParameter -> . COMMA typeParameter

    MORE            shift and go to state 147
    COMMA           shift and go to state 146

    dotTypeParameter               shift and go to state 144
    dotTypeParameters              shift and go to state 145

state 64

    (57) typeParameter -> Identifier . EXTENDS_typeBound
    (55) EXTENDS_typeBound -> . EXTENDS typeBound
    (56) EXTENDS_typeBound -> .

    EXTENDS         shift and go to state 148
    MORE            reduce using rule 56 (EXTENDS_typeBound -> .)
    COMMA           reduce using rule 56 (EXTENDS_typeBound -> .)

    EXTENDS_typeBound              shift and go to state 149

state 65

    (48) normalClassDeclaration -> CLASS Identifier typeParameters ExtendType . IMPLEMENTS_typeList classBody
    (46) IMPLEMENTS_typeList -> . IMPLEMENTS typeList
    (47) IMPLEMENTS_typeList -> .

    IMPLEMENTS      shift and go to state 51
    BLPAREN         reduce using rule 47 (IMPLEMENTS_typeList -> .)

    IMPLEMENTS_typeList            shift and go to state 150

state 66

    (44) ExtendType -> EXTENDS . type
    (205) type -> . type_body
    (206) type -> . primitiveType arrays
    (207) type -> . primitiveType
    (208) type_body -> . Identifier classOrInterfaceTypeBody arrays
    (209) type_body -> . Identifier classOrInterfaceTypeBody
    (210) type_body -> . Identifier arrays
    (211) type_body -> . Identifier
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE

    Identifier      shift and go to state 80
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72

    type                           shift and go to state 151
    primitiveType                  shift and go to state 74
    type_body                      shift and go to state 77

state 67

    (267) DOT_Identifier -> DOT Identifier .

    DOT             reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    LPAREN          reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    FLPAREN         reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    OP_INC          reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    OP_DEC          reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    MULT            reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    SLASH           reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    PERCENT         reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    PLUS            reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    DASH            reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    OP_SHR          reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    OP_SHRR         reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    OP_SHL          reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    OP_LE           reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    OP_GE           reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    LESS            reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    MORE            reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    INSTANCEOF      reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    OP_EQ           reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    OP_NE           reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    AND             reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    CARET           reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    VERTICAL        reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    OP_LAND         reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    OP_LOR          reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    QUES            reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    RPAREN          reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    COMMA           reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    BRPAREN         reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    EQUALS          reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    ASS_ADD         reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    ASS_SUB         reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    ASS_MUL         reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    ASS_DIV         reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    ASS_AND         reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    ASS_OR          reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    ASS_XOR         reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    ASS_MOD         reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    ASS_SHL         reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    ASS_SHRR        reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    ASS_SHR         reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    FRPAREN         reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    COLON           reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    SEMI            reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    PUBLIC          reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    PROTECTED       reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    PRIVATE         reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    ABSTRACT        reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    STATIC          reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    FINAL           reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    STRICTFP        reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    CLASS           reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    ENUM            reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    INTERFACE       reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    AT              reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    NATIVE          reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    SYNCHRONIZED    reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    TRANSIENT       reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    VOLATILE        reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    Identifier      reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    BOOLEAN         reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    CHAR            reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    BYTE            reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    SHORT           reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    INT             reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    LONG            reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    FLOAT           reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    DOUBLE          reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    VOID            reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    BLPAREN         reduce using rule 267 (DOT_Identifier -> DOT Identifier .)


state 68

    (268) DOT_Identifier -> DOT MULT .

    DOT             reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    LPAREN          reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    FLPAREN         reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    OP_INC          reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    OP_DEC          reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    MULT            reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    SLASH           reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    PERCENT         reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    PLUS            reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    DASH            reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    OP_SHR          reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    OP_SHRR         reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    OP_SHL          reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    OP_LE           reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    OP_GE           reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    LESS            reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    MORE            reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    INSTANCEOF      reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    OP_EQ           reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    OP_NE           reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    AND             reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    CARET           reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    VERTICAL        reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    OP_LAND         reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    OP_LOR          reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    QUES            reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    RPAREN          reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    COMMA           reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    BRPAREN         reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    EQUALS          reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    ASS_ADD         reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    ASS_SUB         reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    ASS_MUL         reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    ASS_DIV         reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    ASS_AND         reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    ASS_OR          reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    ASS_XOR         reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    ASS_MOD         reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    ASS_SHL         reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    ASS_SHRR        reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    ASS_SHR         reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    FRPAREN         reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    COLON           reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    SEMI            reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    PUBLIC          reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    PROTECTED       reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    PRIVATE         reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    ABSTRACT        reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    STATIC          reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    FINAL           reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    STRICTFP        reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    CLASS           reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    ENUM            reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    INTERFACE       reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    AT              reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    NATIVE          reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    SYNCHRONIZED    reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    TRANSIENT       reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    VOLATILE        reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    Identifier      reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    BOOLEAN         reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    CHAR            reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    BYTE            reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    SHORT           reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    INT             reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    LONG            reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    FLOAT           reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    DOUBLE          reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    VOID            reduce using rule 268 (DOT_Identifier -> DOT MULT .)
    BLPAREN         reduce using rule 268 (DOT_Identifier -> DOT MULT .)


state 69

    (270) DOT_Identifiers -> DOT_Identifiers DOT_Identifier .

    DOT             reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    LPAREN          reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    FLPAREN         reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    OP_INC          reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    OP_DEC          reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    MULT            reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    SLASH           reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    PERCENT         reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    PLUS            reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    DASH            reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    OP_SHR          reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    OP_SHRR         reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    OP_SHL          reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    OP_LE           reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    OP_GE           reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    LESS            reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    MORE            reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    INSTANCEOF      reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    OP_EQ           reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    OP_NE           reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    AND             reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    CARET           reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    VERTICAL        reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    OP_LAND         reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    OP_LOR          reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    QUES            reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    EQUALS          reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    ASS_ADD         reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    ASS_SUB         reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    ASS_MUL         reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    ASS_DIV         reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    ASS_AND         reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    ASS_OR          reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    ASS_XOR         reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    ASS_MOD         reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    ASS_SHL         reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    ASS_SHRR        reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    ASS_SHR         reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    COLON           reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    RPAREN          reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    COMMA           reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    BRPAREN         reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    FRPAREN         reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    SEMI            reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    BLPAREN         reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    PUBLIC          reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    PROTECTED       reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    PRIVATE         reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    ABSTRACT        reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    STATIC          reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    FINAL           reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    STRICTFP        reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    CLASS           reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    ENUM            reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    INTERFACE       reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    AT              reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    NATIVE          reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    SYNCHRONIZED    reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    TRANSIENT       reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    VOLATILE        reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    Identifier      reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    BOOLEAN         reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    CHAR            reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    BYTE            reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    SHORT           reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    INT             reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    LONG            reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    FLOAT           reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    DOUBLE          reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)
    VOID            reduce using rule 270 (DOT_Identifiers -> DOT_Identifiers DOT_Identifier .)


state 70

    (224) primitiveType -> SHORT .

    DOT             reduce using rule 224 (primitiveType -> SHORT .)
    FLPAREN         reduce using rule 224 (primitiveType -> SHORT .)
    Identifier      reduce using rule 224 (primitiveType -> SHORT .)
    MORE            reduce using rule 224 (primitiveType -> SHORT .)
    COMMA           reduce using rule 224 (primitiveType -> SHORT .)
    BLPAREN         reduce using rule 224 (primitiveType -> SHORT .)
    IMPLEMENTS      reduce using rule 224 (primitiveType -> SHORT .)
    OP_ARRAY        reduce using rule 224 (primitiveType -> SHORT .)
    LPAREN          reduce using rule 224 (primitiveType -> SHORT .)
    OP_EQ           reduce using rule 224 (primitiveType -> SHORT .)
    OP_NE           reduce using rule 224 (primitiveType -> SHORT .)
    AND             reduce using rule 224 (primitiveType -> SHORT .)
    CARET           reduce using rule 224 (primitiveType -> SHORT .)
    VERTICAL        reduce using rule 224 (primitiveType -> SHORT .)
    OP_LAND         reduce using rule 224 (primitiveType -> SHORT .)
    OP_LOR          reduce using rule 224 (primitiveType -> SHORT .)
    QUES            reduce using rule 224 (primitiveType -> SHORT .)
    RPAREN          reduce using rule 224 (primitiveType -> SHORT .)
    BRPAREN         reduce using rule 224 (primitiveType -> SHORT .)
    EQUALS          reduce using rule 224 (primitiveType -> SHORT .)
    ASS_ADD         reduce using rule 224 (primitiveType -> SHORT .)
    ASS_SUB         reduce using rule 224 (primitiveType -> SHORT .)
    ASS_MUL         reduce using rule 224 (primitiveType -> SHORT .)
    ASS_DIV         reduce using rule 224 (primitiveType -> SHORT .)
    ASS_AND         reduce using rule 224 (primitiveType -> SHORT .)
    ASS_OR          reduce using rule 224 (primitiveType -> SHORT .)
    ASS_XOR         reduce using rule 224 (primitiveType -> SHORT .)
    ASS_MOD         reduce using rule 224 (primitiveType -> SHORT .)
    ASS_SHL         reduce using rule 224 (primitiveType -> SHORT .)
    ASS_SHRR        reduce using rule 224 (primitiveType -> SHORT .)
    ASS_SHR         reduce using rule 224 (primitiveType -> SHORT .)
    FRPAREN         reduce using rule 224 (primitiveType -> SHORT .)
    COLON           reduce using rule 224 (primitiveType -> SHORT .)
    SEMI            reduce using rule 224 (primitiveType -> SHORT .)


state 71

    (46) IMPLEMENTS_typeList -> IMPLEMENTS typeList .

    BLPAREN         reduce using rule 46 (IMPLEMENTS_typeList -> IMPLEMENTS typeList .)


state 72

    (228) primitiveType -> DOUBLE .

    DOT             reduce using rule 228 (primitiveType -> DOUBLE .)
    FLPAREN         reduce using rule 228 (primitiveType -> DOUBLE .)
    Identifier      reduce using rule 228 (primitiveType -> DOUBLE .)
    MORE            reduce using rule 228 (primitiveType -> DOUBLE .)
    COMMA           reduce using rule 228 (primitiveType -> DOUBLE .)
    BLPAREN         reduce using rule 228 (primitiveType -> DOUBLE .)
    IMPLEMENTS      reduce using rule 228 (primitiveType -> DOUBLE .)
    OP_ARRAY        reduce using rule 228 (primitiveType -> DOUBLE .)
    LPAREN          reduce using rule 228 (primitiveType -> DOUBLE .)
    OP_EQ           reduce using rule 228 (primitiveType -> DOUBLE .)
    OP_NE           reduce using rule 228 (primitiveType -> DOUBLE .)
    AND             reduce using rule 228 (primitiveType -> DOUBLE .)
    CARET           reduce using rule 228 (primitiveType -> DOUBLE .)
    VERTICAL        reduce using rule 228 (primitiveType -> DOUBLE .)
    OP_LAND         reduce using rule 228 (primitiveType -> DOUBLE .)
    OP_LOR          reduce using rule 228 (primitiveType -> DOUBLE .)
    QUES            reduce using rule 228 (primitiveType -> DOUBLE .)
    RPAREN          reduce using rule 228 (primitiveType -> DOUBLE .)
    BRPAREN         reduce using rule 228 (primitiveType -> DOUBLE .)
    EQUALS          reduce using rule 228 (primitiveType -> DOUBLE .)
    ASS_ADD         reduce using rule 228 (primitiveType -> DOUBLE .)
    ASS_SUB         reduce using rule 228 (primitiveType -> DOUBLE .)
    ASS_MUL         reduce using rule 228 (primitiveType -> DOUBLE .)
    ASS_DIV         reduce using rule 228 (primitiveType -> DOUBLE .)
    ASS_AND         reduce using rule 228 (primitiveType -> DOUBLE .)
    ASS_OR          reduce using rule 228 (primitiveType -> DOUBLE .)
    ASS_XOR         reduce using rule 228 (primitiveType -> DOUBLE .)
    ASS_MOD         reduce using rule 228 (primitiveType -> DOUBLE .)
    ASS_SHL         reduce using rule 228 (primitiveType -> DOUBLE .)
    ASS_SHRR        reduce using rule 228 (primitiveType -> DOUBLE .)
    ASS_SHR         reduce using rule 228 (primitiveType -> DOUBLE .)
    FRPAREN         reduce using rule 228 (primitiveType -> DOUBLE .)
    COLON           reduce using rule 228 (primitiveType -> DOUBLE .)
    SEMI            reduce using rule 228 (primitiveType -> DOUBLE .)


state 73

    (227) primitiveType -> FLOAT .

    DOT             reduce using rule 227 (primitiveType -> FLOAT .)
    FLPAREN         reduce using rule 227 (primitiveType -> FLOAT .)
    Identifier      reduce using rule 227 (primitiveType -> FLOAT .)
    MORE            reduce using rule 227 (primitiveType -> FLOAT .)
    COMMA           reduce using rule 227 (primitiveType -> FLOAT .)
    BLPAREN         reduce using rule 227 (primitiveType -> FLOAT .)
    IMPLEMENTS      reduce using rule 227 (primitiveType -> FLOAT .)
    OP_ARRAY        reduce using rule 227 (primitiveType -> FLOAT .)
    LPAREN          reduce using rule 227 (primitiveType -> FLOAT .)
    OP_EQ           reduce using rule 227 (primitiveType -> FLOAT .)
    OP_NE           reduce using rule 227 (primitiveType -> FLOAT .)
    AND             reduce using rule 227 (primitiveType -> FLOAT .)
    CARET           reduce using rule 227 (primitiveType -> FLOAT .)
    VERTICAL        reduce using rule 227 (primitiveType -> FLOAT .)
    OP_LAND         reduce using rule 227 (primitiveType -> FLOAT .)
    OP_LOR          reduce using rule 227 (primitiveType -> FLOAT .)
    QUES            reduce using rule 227 (primitiveType -> FLOAT .)
    RPAREN          reduce using rule 227 (primitiveType -> FLOAT .)
    BRPAREN         reduce using rule 227 (primitiveType -> FLOAT .)
    EQUALS          reduce using rule 227 (primitiveType -> FLOAT .)
    ASS_ADD         reduce using rule 227 (primitiveType -> FLOAT .)
    ASS_SUB         reduce using rule 227 (primitiveType -> FLOAT .)
    ASS_MUL         reduce using rule 227 (primitiveType -> FLOAT .)
    ASS_DIV         reduce using rule 227 (primitiveType -> FLOAT .)
    ASS_AND         reduce using rule 227 (primitiveType -> FLOAT .)
    ASS_OR          reduce using rule 227 (primitiveType -> FLOAT .)
    ASS_XOR         reduce using rule 227 (primitiveType -> FLOAT .)
    ASS_MOD         reduce using rule 227 (primitiveType -> FLOAT .)
    ASS_SHL         reduce using rule 227 (primitiveType -> FLOAT .)
    ASS_SHRR        reduce using rule 227 (primitiveType -> FLOAT .)
    ASS_SHR         reduce using rule 227 (primitiveType -> FLOAT .)
    FRPAREN         reduce using rule 227 (primitiveType -> FLOAT .)
    COLON           reduce using rule 227 (primitiveType -> FLOAT .)
    SEMI            reduce using rule 227 (primitiveType -> FLOAT .)


state 74

    (206) type -> primitiveType . arrays
    (207) type -> primitiveType .
    (138) arrays -> . arrays array
    (139) arrays -> . array
    (137) array -> . FLPAREN FRPAREN

    Identifier      reduce using rule 207 (type -> primitiveType .)
    MORE            reduce using rule 207 (type -> primitiveType .)
    COMMA           reduce using rule 207 (type -> primitiveType .)
    BLPAREN         reduce using rule 207 (type -> primitiveType .)
    IMPLEMENTS      reduce using rule 207 (type -> primitiveType .)
    OP_EQ           reduce using rule 207 (type -> primitiveType .)
    OP_NE           reduce using rule 207 (type -> primitiveType .)
    AND             reduce using rule 207 (type -> primitiveType .)
    CARET           reduce using rule 207 (type -> primitiveType .)
    VERTICAL        reduce using rule 207 (type -> primitiveType .)
    OP_LAND         reduce using rule 207 (type -> primitiveType .)
    OP_LOR          reduce using rule 207 (type -> primitiveType .)
    QUES            reduce using rule 207 (type -> primitiveType .)
    RPAREN          reduce using rule 207 (type -> primitiveType .)
    BRPAREN         reduce using rule 207 (type -> primitiveType .)
    EQUALS          reduce using rule 207 (type -> primitiveType .)
    ASS_ADD         reduce using rule 207 (type -> primitiveType .)
    ASS_SUB         reduce using rule 207 (type -> primitiveType .)
    ASS_MUL         reduce using rule 207 (type -> primitiveType .)
    ASS_DIV         reduce using rule 207 (type -> primitiveType .)
    ASS_AND         reduce using rule 207 (type -> primitiveType .)
    ASS_OR          reduce using rule 207 (type -> primitiveType .)
    ASS_XOR         reduce using rule 207 (type -> primitiveType .)
    ASS_MOD         reduce using rule 207 (type -> primitiveType .)
    ASS_SHL         reduce using rule 207 (type -> primitiveType .)
    ASS_SHRR        reduce using rule 207 (type -> primitiveType .)
    ASS_SHR         reduce using rule 207 (type -> primitiveType .)
    FRPAREN         reduce using rule 207 (type -> primitiveType .)
    COLON           reduce using rule 207 (type -> primitiveType .)
    SEMI            reduce using rule 207 (type -> primitiveType .)
    OP_ARRAY        reduce using rule 207 (type -> primitiveType .)
    FLPAREN         shift and go to state 153

    arrays                         shift and go to state 152
    array                          shift and go to state 154

state 75

    (222) primitiveType -> CHAR .

    DOT             reduce using rule 222 (primitiveType -> CHAR .)
    FLPAREN         reduce using rule 222 (primitiveType -> CHAR .)
    Identifier      reduce using rule 222 (primitiveType -> CHAR .)
    MORE            reduce using rule 222 (primitiveType -> CHAR .)
    COMMA           reduce using rule 222 (primitiveType -> CHAR .)
    BLPAREN         reduce using rule 222 (primitiveType -> CHAR .)
    IMPLEMENTS      reduce using rule 222 (primitiveType -> CHAR .)
    OP_ARRAY        reduce using rule 222 (primitiveType -> CHAR .)
    LPAREN          reduce using rule 222 (primitiveType -> CHAR .)
    OP_EQ           reduce using rule 222 (primitiveType -> CHAR .)
    OP_NE           reduce using rule 222 (primitiveType -> CHAR .)
    AND             reduce using rule 222 (primitiveType -> CHAR .)
    CARET           reduce using rule 222 (primitiveType -> CHAR .)
    VERTICAL        reduce using rule 222 (primitiveType -> CHAR .)
    OP_LAND         reduce using rule 222 (primitiveType -> CHAR .)
    OP_LOR          reduce using rule 222 (primitiveType -> CHAR .)
    QUES            reduce using rule 222 (primitiveType -> CHAR .)
    RPAREN          reduce using rule 222 (primitiveType -> CHAR .)
    BRPAREN         reduce using rule 222 (primitiveType -> CHAR .)
    EQUALS          reduce using rule 222 (primitiveType -> CHAR .)
    ASS_ADD         reduce using rule 222 (primitiveType -> CHAR .)
    ASS_SUB         reduce using rule 222 (primitiveType -> CHAR .)
    ASS_MUL         reduce using rule 222 (primitiveType -> CHAR .)
    ASS_DIV         reduce using rule 222 (primitiveType -> CHAR .)
    ASS_AND         reduce using rule 222 (primitiveType -> CHAR .)
    ASS_OR          reduce using rule 222 (primitiveType -> CHAR .)
    ASS_XOR         reduce using rule 222 (primitiveType -> CHAR .)
    ASS_MOD         reduce using rule 222 (primitiveType -> CHAR .)
    ASS_SHL         reduce using rule 222 (primitiveType -> CHAR .)
    ASS_SHRR        reduce using rule 222 (primitiveType -> CHAR .)
    ASS_SHR         reduce using rule 222 (primitiveType -> CHAR .)
    FRPAREN         reduce using rule 222 (primitiveType -> CHAR .)
    COLON           reduce using rule 222 (primitiveType -> CHAR .)
    SEMI            reduce using rule 222 (primitiveType -> CHAR .)


state 76

    (221) primitiveType -> BOOLEAN .

    DOT             reduce using rule 221 (primitiveType -> BOOLEAN .)
    FLPAREN         reduce using rule 221 (primitiveType -> BOOLEAN .)
    Identifier      reduce using rule 221 (primitiveType -> BOOLEAN .)
    MORE            reduce using rule 221 (primitiveType -> BOOLEAN .)
    COMMA           reduce using rule 221 (primitiveType -> BOOLEAN .)
    BLPAREN         reduce using rule 221 (primitiveType -> BOOLEAN .)
    IMPLEMENTS      reduce using rule 221 (primitiveType -> BOOLEAN .)
    OP_ARRAY        reduce using rule 221 (primitiveType -> BOOLEAN .)
    LPAREN          reduce using rule 221 (primitiveType -> BOOLEAN .)
    OP_EQ           reduce using rule 221 (primitiveType -> BOOLEAN .)
    OP_NE           reduce using rule 221 (primitiveType -> BOOLEAN .)
    AND             reduce using rule 221 (primitiveType -> BOOLEAN .)
    CARET           reduce using rule 221 (primitiveType -> BOOLEAN .)
    VERTICAL        reduce using rule 221 (primitiveType -> BOOLEAN .)
    OP_LAND         reduce using rule 221 (primitiveType -> BOOLEAN .)
    OP_LOR          reduce using rule 221 (primitiveType -> BOOLEAN .)
    QUES            reduce using rule 221 (primitiveType -> BOOLEAN .)
    RPAREN          reduce using rule 221 (primitiveType -> BOOLEAN .)
    BRPAREN         reduce using rule 221 (primitiveType -> BOOLEAN .)
    EQUALS          reduce using rule 221 (primitiveType -> BOOLEAN .)
    ASS_ADD         reduce using rule 221 (primitiveType -> BOOLEAN .)
    ASS_SUB         reduce using rule 221 (primitiveType -> BOOLEAN .)
    ASS_MUL         reduce using rule 221 (primitiveType -> BOOLEAN .)
    ASS_DIV         reduce using rule 221 (primitiveType -> BOOLEAN .)
    ASS_AND         reduce using rule 221 (primitiveType -> BOOLEAN .)
    ASS_OR          reduce using rule 221 (primitiveType -> BOOLEAN .)
    ASS_XOR         reduce using rule 221 (primitiveType -> BOOLEAN .)
    ASS_MOD         reduce using rule 221 (primitiveType -> BOOLEAN .)
    ASS_SHL         reduce using rule 221 (primitiveType -> BOOLEAN .)
    ASS_SHRR        reduce using rule 221 (primitiveType -> BOOLEAN .)
    ASS_SHR         reduce using rule 221 (primitiveType -> BOOLEAN .)
    FRPAREN         reduce using rule 221 (primitiveType -> BOOLEAN .)
    COLON           reduce using rule 221 (primitiveType -> BOOLEAN .)
    SEMI            reduce using rule 221 (primitiveType -> BOOLEAN .)


state 77

    (205) type -> type_body .

    Identifier      reduce using rule 205 (type -> type_body .)
    MORE            reduce using rule 205 (type -> type_body .)
    COMMA           reduce using rule 205 (type -> type_body .)
    BLPAREN         reduce using rule 205 (type -> type_body .)
    IMPLEMENTS      reduce using rule 205 (type -> type_body .)
    OP_EQ           reduce using rule 205 (type -> type_body .)
    OP_NE           reduce using rule 205 (type -> type_body .)
    AND             reduce using rule 205 (type -> type_body .)
    CARET           reduce using rule 205 (type -> type_body .)
    VERTICAL        reduce using rule 205 (type -> type_body .)
    OP_LAND         reduce using rule 205 (type -> type_body .)
    OP_LOR          reduce using rule 205 (type -> type_body .)
    QUES            reduce using rule 205 (type -> type_body .)
    RPAREN          reduce using rule 205 (type -> type_body .)
    BRPAREN         reduce using rule 205 (type -> type_body .)
    EQUALS          reduce using rule 205 (type -> type_body .)
    ASS_ADD         reduce using rule 205 (type -> type_body .)
    ASS_SUB         reduce using rule 205 (type -> type_body .)
    ASS_MUL         reduce using rule 205 (type -> type_body .)
    ASS_DIV         reduce using rule 205 (type -> type_body .)
    ASS_AND         reduce using rule 205 (type -> type_body .)
    ASS_OR          reduce using rule 205 (type -> type_body .)
    ASS_XOR         reduce using rule 205 (type -> type_body .)
    ASS_MOD         reduce using rule 205 (type -> type_body .)
    ASS_SHL         reduce using rule 205 (type -> type_body .)
    ASS_SHRR        reduce using rule 205 (type -> type_body .)
    ASS_SHR         reduce using rule 205 (type -> type_body .)
    FRPAREN         reduce using rule 205 (type -> type_body .)
    COLON           reduce using rule 205 (type -> type_body .)
    SEMI            reduce using rule 205 (type -> type_body .)
    OP_ARRAY        reduce using rule 205 (type -> type_body .)


state 78

    (226) primitiveType -> LONG .

    DOT             reduce using rule 226 (primitiveType -> LONG .)
    FLPAREN         reduce using rule 226 (primitiveType -> LONG .)
    Identifier      reduce using rule 226 (primitiveType -> LONG .)
    MORE            reduce using rule 226 (primitiveType -> LONG .)
    COMMA           reduce using rule 226 (primitiveType -> LONG .)
    BLPAREN         reduce using rule 226 (primitiveType -> LONG .)
    IMPLEMENTS      reduce using rule 226 (primitiveType -> LONG .)
    OP_ARRAY        reduce using rule 226 (primitiveType -> LONG .)
    LPAREN          reduce using rule 226 (primitiveType -> LONG .)
    OP_EQ           reduce using rule 226 (primitiveType -> LONG .)
    OP_NE           reduce using rule 226 (primitiveType -> LONG .)
    AND             reduce using rule 226 (primitiveType -> LONG .)
    CARET           reduce using rule 226 (primitiveType -> LONG .)
    VERTICAL        reduce using rule 226 (primitiveType -> LONG .)
    OP_LAND         reduce using rule 226 (primitiveType -> LONG .)
    OP_LOR          reduce using rule 226 (primitiveType -> LONG .)
    QUES            reduce using rule 226 (primitiveType -> LONG .)
    RPAREN          reduce using rule 226 (primitiveType -> LONG .)
    BRPAREN         reduce using rule 226 (primitiveType -> LONG .)
    EQUALS          reduce using rule 226 (primitiveType -> LONG .)
    ASS_ADD         reduce using rule 226 (primitiveType -> LONG .)
    ASS_SUB         reduce using rule 226 (primitiveType -> LONG .)
    ASS_MUL         reduce using rule 226 (primitiveType -> LONG .)
    ASS_DIV         reduce using rule 226 (primitiveType -> LONG .)
    ASS_AND         reduce using rule 226 (primitiveType -> LONG .)
    ASS_OR          reduce using rule 226 (primitiveType -> LONG .)
    ASS_XOR         reduce using rule 226 (primitiveType -> LONG .)
    ASS_MOD         reduce using rule 226 (primitiveType -> LONG .)
    ASS_SHL         reduce using rule 226 (primitiveType -> LONG .)
    ASS_SHRR        reduce using rule 226 (primitiveType -> LONG .)
    ASS_SHR         reduce using rule 226 (primitiveType -> LONG .)
    FRPAREN         reduce using rule 226 (primitiveType -> LONG .)
    COLON           reduce using rule 226 (primitiveType -> LONG .)
    SEMI            reduce using rule 226 (primitiveType -> LONG .)


state 79

    (223) primitiveType -> BYTE .

    DOT             reduce using rule 223 (primitiveType -> BYTE .)
    FLPAREN         reduce using rule 223 (primitiveType -> BYTE .)
    Identifier      reduce using rule 223 (primitiveType -> BYTE .)
    MORE            reduce using rule 223 (primitiveType -> BYTE .)
    COMMA           reduce using rule 223 (primitiveType -> BYTE .)
    BLPAREN         reduce using rule 223 (primitiveType -> BYTE .)
    IMPLEMENTS      reduce using rule 223 (primitiveType -> BYTE .)
    OP_ARRAY        reduce using rule 223 (primitiveType -> BYTE .)
    LPAREN          reduce using rule 223 (primitiveType -> BYTE .)
    OP_EQ           reduce using rule 223 (primitiveType -> BYTE .)
    OP_NE           reduce using rule 223 (primitiveType -> BYTE .)
    AND             reduce using rule 223 (primitiveType -> BYTE .)
    CARET           reduce using rule 223 (primitiveType -> BYTE .)
    VERTICAL        reduce using rule 223 (primitiveType -> BYTE .)
    OP_LAND         reduce using rule 223 (primitiveType -> BYTE .)
    OP_LOR          reduce using rule 223 (primitiveType -> BYTE .)
    QUES            reduce using rule 223 (primitiveType -> BYTE .)
    RPAREN          reduce using rule 223 (primitiveType -> BYTE .)
    BRPAREN         reduce using rule 223 (primitiveType -> BYTE .)
    EQUALS          reduce using rule 223 (primitiveType -> BYTE .)
    ASS_ADD         reduce using rule 223 (primitiveType -> BYTE .)
    ASS_SUB         reduce using rule 223 (primitiveType -> BYTE .)
    ASS_MUL         reduce using rule 223 (primitiveType -> BYTE .)
    ASS_DIV         reduce using rule 223 (primitiveType -> BYTE .)
    ASS_AND         reduce using rule 223 (primitiveType -> BYTE .)
    ASS_OR          reduce using rule 223 (primitiveType -> BYTE .)
    ASS_XOR         reduce using rule 223 (primitiveType -> BYTE .)
    ASS_MOD         reduce using rule 223 (primitiveType -> BYTE .)
    ASS_SHL         reduce using rule 223 (primitiveType -> BYTE .)
    ASS_SHRR        reduce using rule 223 (primitiveType -> BYTE .)
    ASS_SHR         reduce using rule 223 (primitiveType -> BYTE .)
    FRPAREN         reduce using rule 223 (primitiveType -> BYTE .)
    COLON           reduce using rule 223 (primitiveType -> BYTE .)
    SEMI            reduce using rule 223 (primitiveType -> BYTE .)


state 80

    (208) type_body -> Identifier . classOrInterfaceTypeBody arrays
    (209) type_body -> Identifier . classOrInterfaceTypeBody
    (210) type_body -> Identifier . arrays
    (211) type_body -> Identifier .
    (212) classOrInterfaceTypeBody -> . typeArguments classOrInterfaceTypeStatements
    (213) classOrInterfaceTypeBody -> . typeArguments
    (214) classOrInterfaceTypeBody -> . classOrInterfaceTypeStatements
    (138) arrays -> . arrays array
    (139) arrays -> . array
    (234) typeArguments -> . LESS typeArgument COMMA_typeArguments MORE
    (235) typeArguments -> . LESS typeArgument MORE
    (217) classOrInterfaceTypeStatements -> . classOrInterfaceTypeStatement
    (218) classOrInterfaceTypeStatements -> . classOrInterfaceTypeStatements classOrInterfaceTypeStatement
    (137) array -> . FLPAREN FRPAREN
    (215) classOrInterfaceTypeStatement -> . DOT Identifier typeArguments
    (216) classOrInterfaceTypeStatement -> . DOT Identifier

    Identifier      reduce using rule 211 (type_body -> Identifier .)
    COMMA           reduce using rule 211 (type_body -> Identifier .)
    MORE            reduce using rule 211 (type_body -> Identifier .)
    AND             reduce using rule 211 (type_body -> Identifier .)
    BLPAREN         reduce using rule 211 (type_body -> Identifier .)
    IMPLEMENTS      reduce using rule 211 (type_body -> Identifier .)
    OP_ARRAY        reduce using rule 211 (type_body -> Identifier .)
    OP_EQ           reduce using rule 211 (type_body -> Identifier .)
    OP_NE           reduce using rule 211 (type_body -> Identifier .)
    CARET           reduce using rule 211 (type_body -> Identifier .)
    VERTICAL        reduce using rule 211 (type_body -> Identifier .)
    OP_LAND         reduce using rule 211 (type_body -> Identifier .)
    OP_LOR          reduce using rule 211 (type_body -> Identifier .)
    QUES            reduce using rule 211 (type_body -> Identifier .)
    RPAREN          reduce using rule 211 (type_body -> Identifier .)
    BRPAREN         reduce using rule 211 (type_body -> Identifier .)
    EQUALS          reduce using rule 211 (type_body -> Identifier .)
    ASS_ADD         reduce using rule 211 (type_body -> Identifier .)
    ASS_SUB         reduce using rule 211 (type_body -> Identifier .)
    ASS_MUL         reduce using rule 211 (type_body -> Identifier .)
    ASS_DIV         reduce using rule 211 (type_body -> Identifier .)
    ASS_AND         reduce using rule 211 (type_body -> Identifier .)
    ASS_OR          reduce using rule 211 (type_body -> Identifier .)
    ASS_XOR         reduce using rule 211 (type_body -> Identifier .)
    ASS_MOD         reduce using rule 211 (type_body -> Identifier .)
    ASS_SHL         reduce using rule 211 (type_body -> Identifier .)
    ASS_SHRR        reduce using rule 211 (type_body -> Identifier .)
    ASS_SHR         reduce using rule 211 (type_body -> Identifier .)
    FRPAREN         reduce using rule 211 (type_body -> Identifier .)
    COLON           reduce using rule 211 (type_body -> Identifier .)
    SEMI            reduce using rule 211 (type_body -> Identifier .)
    LESS            shift and go to state 156
    FLPAREN         shift and go to state 153
    DOT             shift and go to state 161

    classOrInterfaceTypeBody       shift and go to state 155
    arrays                         shift and go to state 157
    typeArguments                  shift and go to state 158
    classOrInterfaceTypeStatements shift and go to state 159
    array                          shift and go to state 154
    classOrInterfaceTypeStatement  shift and go to state 160

state 81

    (99) typeList -> type . COMMA_types
    (100) typeList -> type .
    (97) COMMA_types -> . COMMA_type
    (98) COMMA_types -> . COMMA_types COMMA_type
    (96) COMMA_type -> . COMMA type

    BLPAREN         reduce using rule 100 (typeList -> type .)
    MORE            reduce using rule 100 (typeList -> type .)
    COMMA           shift and go to state 163

    COMMA_types                    shift and go to state 162
    COMMA_type                     shift and go to state 164

state 82

    (225) primitiveType -> INT .

    DOT             reduce using rule 225 (primitiveType -> INT .)
    FLPAREN         reduce using rule 225 (primitiveType -> INT .)
    Identifier      reduce using rule 225 (primitiveType -> INT .)
    MORE            reduce using rule 225 (primitiveType -> INT .)
    COMMA           reduce using rule 225 (primitiveType -> INT .)
    BLPAREN         reduce using rule 225 (primitiveType -> INT .)
    IMPLEMENTS      reduce using rule 225 (primitiveType -> INT .)
    OP_ARRAY        reduce using rule 225 (primitiveType -> INT .)
    LPAREN          reduce using rule 225 (primitiveType -> INT .)
    OP_EQ           reduce using rule 225 (primitiveType -> INT .)
    OP_NE           reduce using rule 225 (primitiveType -> INT .)
    AND             reduce using rule 225 (primitiveType -> INT .)
    CARET           reduce using rule 225 (primitiveType -> INT .)
    VERTICAL        reduce using rule 225 (primitiveType -> INT .)
    OP_LAND         reduce using rule 225 (primitiveType -> INT .)
    OP_LOR          reduce using rule 225 (primitiveType -> INT .)
    QUES            reduce using rule 225 (primitiveType -> INT .)
    RPAREN          reduce using rule 225 (primitiveType -> INT .)
    BRPAREN         reduce using rule 225 (primitiveType -> INT .)
    EQUALS          reduce using rule 225 (primitiveType -> INT .)
    ASS_ADD         reduce using rule 225 (primitiveType -> INT .)
    ASS_SUB         reduce using rule 225 (primitiveType -> INT .)
    ASS_MUL         reduce using rule 225 (primitiveType -> INT .)
    ASS_DIV         reduce using rule 225 (primitiveType -> INT .)
    ASS_AND         reduce using rule 225 (primitiveType -> INT .)
    ASS_OR          reduce using rule 225 (primitiveType -> INT .)
    ASS_XOR         reduce using rule 225 (primitiveType -> INT .)
    ASS_MOD         reduce using rule 225 (primitiveType -> INT .)
    ASS_SHL         reduce using rule 225 (primitiveType -> INT .)
    ASS_SHRR        reduce using rule 225 (primitiveType -> INT .)
    ASS_SHR         reduce using rule 225 (primitiveType -> INT .)
    FRPAREN         reduce using rule 225 (primitiveType -> INT .)
    COLON           reduce using rule 225 (primitiveType -> INT .)
    SEMI            reduce using rule 225 (primitiveType -> INT .)


state 83

    (63) enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .

    BRPAREN         reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    SEMI            reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    STATIC          reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    BLPAREN         reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    VOID            reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    Identifier      reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    PUBLIC          reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    PROTECTED       reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    PRIVATE         reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    ABSTRACT        reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    FINAL           reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    NATIVE          reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    SYNCHRONIZED    reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    TRANSIENT       reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    VOLATILE        reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    STRICTFP        reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    AT              reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    LESS            reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    INTERFACE       reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    CLASS           reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    ENUM            reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    BOOLEAN         reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    CHAR            reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    BYTE            reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    SHORT           reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    INT             reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    LONG            reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    FLOAT           reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    DOUBLE          reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    ASSERT          reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    IF              reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    FOR             reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    WHILE           reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    DO              reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    TRY             reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    SWITCH          reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    RETURN          reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    THROW           reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    BREAK           reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    CONTINUE        reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    PLUS            reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    DASH            reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    OP_INC          reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    OP_DEC          reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    TILDE           reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    EXCLAMATION     reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    LPAREN          reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    THIS            reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    SUPER           reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    NEW             reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    CharacterLiteral reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    StringLiteral   reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    NULL            reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    LONG_NUMBER     reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    LONG_HEX_NUMBER reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    NON_INTEGER_1   reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    NON_INTEGER_2   reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    NON_INTEGER_3   reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    NON_INTEGER_4   reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    TRUE            reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    FALSE           reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    $end            reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    CASE            reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)
    DEFAULT         reduce using rule 63 (enumDeclaration -> ENUM Identifier IMPLEMENTS_typeList enumBody .)


state 84

    (71) enumBody -> BLPAREN . enumBodyStatement BRPAREN
    (72) enumBody -> BLPAREN . BRPAREN
    (64) enumBodyStatement -> . enumConstants COMMA enumBodyDeclarations
    (65) enumBodyStatement -> . enumConstants COMMA
    (66) enumBodyStatement -> . enumConstants enumBodyDeclarations
    (67) enumBodyStatement -> . COMMA enumBodyDeclarations
    (68) enumBodyStatement -> . COMMA
    (69) enumBodyStatement -> . enumConstants
    (70) enumBodyStatement -> . enumBodyDeclarations
    (76) enumConstants -> . enumConstant COMMA_enumConstants
    (77) enumConstants -> . enumConstant
    (87) enumBodyDeclarations -> . SEMI classBodyDeclarations
    (88) enumBodyDeclarations -> . SEMI
    (84) enumConstant -> . annotations_once Identifier arguments_once classBody_once
    (78) annotations_once -> . annotations
    (79) annotations_once -> . empty
    (281) annotations -> . annotation
    (282) annotations -> . annotations annotation
    (562) empty -> .
    (287) annotation -> . AT annotationName annotationBody

    BRPAREN         shift and go to state 175
    COMMA           shift and go to state 171
    SEMI            shift and go to state 166
    Identifier      reduce using rule 562 (empty -> .)
    AT              shift and go to state 133

    enumConstant                   shift and go to state 165
    annotations_once               shift and go to state 174
    enumBodyStatement              shift and go to state 167
    enumBodyDeclarations           shift and go to state 168
    annotation                     shift and go to state 173
    enumConstants                  shift and go to state 170
    annotations                    shift and go to state 169
    empty                          shift and go to state 172

state 85

    (23) importDeclaration -> IMPORT qualifiedName SEMI .

    IMPORT          reduce using rule 23 (importDeclaration -> IMPORT qualifiedName SEMI .)
    SEMI            reduce using rule 23 (importDeclaration -> IMPORT qualifiedName SEMI .)
    PUBLIC          reduce using rule 23 (importDeclaration -> IMPORT qualifiedName SEMI .)
    PROTECTED       reduce using rule 23 (importDeclaration -> IMPORT qualifiedName SEMI .)
    PRIVATE         reduce using rule 23 (importDeclaration -> IMPORT qualifiedName SEMI .)
    ABSTRACT        reduce using rule 23 (importDeclaration -> IMPORT qualifiedName SEMI .)
    STATIC          reduce using rule 23 (importDeclaration -> IMPORT qualifiedName SEMI .)
    FINAL           reduce using rule 23 (importDeclaration -> IMPORT qualifiedName SEMI .)
    STRICTFP        reduce using rule 23 (importDeclaration -> IMPORT qualifiedName SEMI .)
    CLASS           reduce using rule 23 (importDeclaration -> IMPORT qualifiedName SEMI .)
    ENUM            reduce using rule 23 (importDeclaration -> IMPORT qualifiedName SEMI .)
    INTERFACE       reduce using rule 23 (importDeclaration -> IMPORT qualifiedName SEMI .)
    AT              reduce using rule 23 (importDeclaration -> IMPORT qualifiedName SEMI .)
    $end            reduce using rule 23 (importDeclaration -> IMPORT qualifiedName SEMI .)


state 86

    (22) importDeclaration -> IMPORT STATIC qualifiedName . SEMI

    SEMI            shift and go to state 176


state 87

    (497) unaryExpressionNotPlusMinus -> EXCLAMATION . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    unaryExpression                shift and go to state 177
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    primitiveType                  shift and go to state 122
    literal                        shift and go to state 116
    FloatingPointLiteral           shift and go to state 119
    booleanLiteral                 shift and go to state 92
    integerLiteral                 shift and go to state 98

state 88

    (516) primary -> VOID . DOT CLASS

    DOT             shift and go to state 179


state 89

    (425) conditionalOrExpression -> conditionalAndExpression . O_conditionalAndExpressions
    (426) conditionalOrExpression -> conditionalAndExpression .
    (423) O_conditionalAndExpressions -> . O_conditionalAndExpression
    (424) O_conditionalAndExpressions -> . O_conditionalAndExpressions O_conditionalAndExpression
    (422) O_conditionalAndExpression -> . OP_LOR conditionalAndExpression

    QUES            reduce using rule 426 (conditionalOrExpression -> conditionalAndExpression .)
    EQUALS          reduce using rule 426 (conditionalOrExpression -> conditionalAndExpression .)
    ASS_ADD         reduce using rule 426 (conditionalOrExpression -> conditionalAndExpression .)
    ASS_SUB         reduce using rule 426 (conditionalOrExpression -> conditionalAndExpression .)
    ASS_MUL         reduce using rule 426 (conditionalOrExpression -> conditionalAndExpression .)
    ASS_DIV         reduce using rule 426 (conditionalOrExpression -> conditionalAndExpression .)
    ASS_AND         reduce using rule 426 (conditionalOrExpression -> conditionalAndExpression .)
    ASS_OR          reduce using rule 426 (conditionalOrExpression -> conditionalAndExpression .)
    ASS_XOR         reduce using rule 426 (conditionalOrExpression -> conditionalAndExpression .)
    ASS_MOD         reduce using rule 426 (conditionalOrExpression -> conditionalAndExpression .)
    ASS_SHL         reduce using rule 426 (conditionalOrExpression -> conditionalAndExpression .)
    ASS_SHRR        reduce using rule 426 (conditionalOrExpression -> conditionalAndExpression .)
    ASS_SHR         reduce using rule 426 (conditionalOrExpression -> conditionalAndExpression .)
    COMMA           reduce using rule 426 (conditionalOrExpression -> conditionalAndExpression .)
    SEMI            reduce using rule 426 (conditionalOrExpression -> conditionalAndExpression .)
    FRPAREN         reduce using rule 426 (conditionalOrExpression -> conditionalAndExpression .)
    RPAREN          reduce using rule 426 (conditionalOrExpression -> conditionalAndExpression .)
    BRPAREN         reduce using rule 426 (conditionalOrExpression -> conditionalAndExpression .)
    COLON           reduce using rule 426 (conditionalOrExpression -> conditionalAndExpression .)
    OP_LOR          shift and go to state 181

    O_conditionalAndExpressions    shift and go to state 180
    O_conditionalAndExpression     shift and go to state 182

state 90

    (279) booleanLiteral -> TRUE .

    OP_INC          reduce using rule 279 (booleanLiteral -> TRUE .)
    OP_DEC          reduce using rule 279 (booleanLiteral -> TRUE .)
    DOT             reduce using rule 279 (booleanLiteral -> TRUE .)
    FLPAREN         reduce using rule 279 (booleanLiteral -> TRUE .)
    MULT            reduce using rule 279 (booleanLiteral -> TRUE .)
    SLASH           reduce using rule 279 (booleanLiteral -> TRUE .)
    PERCENT         reduce using rule 279 (booleanLiteral -> TRUE .)
    PLUS            reduce using rule 279 (booleanLiteral -> TRUE .)
    DASH            reduce using rule 279 (booleanLiteral -> TRUE .)
    OP_SHR          reduce using rule 279 (booleanLiteral -> TRUE .)
    OP_SHRR         reduce using rule 279 (booleanLiteral -> TRUE .)
    OP_SHL          reduce using rule 279 (booleanLiteral -> TRUE .)
    OP_LE           reduce using rule 279 (booleanLiteral -> TRUE .)
    OP_GE           reduce using rule 279 (booleanLiteral -> TRUE .)
    LESS            reduce using rule 279 (booleanLiteral -> TRUE .)
    MORE            reduce using rule 279 (booleanLiteral -> TRUE .)
    INSTANCEOF      reduce using rule 279 (booleanLiteral -> TRUE .)
    OP_EQ           reduce using rule 279 (booleanLiteral -> TRUE .)
    OP_NE           reduce using rule 279 (booleanLiteral -> TRUE .)
    AND             reduce using rule 279 (booleanLiteral -> TRUE .)
    CARET           reduce using rule 279 (booleanLiteral -> TRUE .)
    VERTICAL        reduce using rule 279 (booleanLiteral -> TRUE .)
    OP_LAND         reduce using rule 279 (booleanLiteral -> TRUE .)
    OP_LOR          reduce using rule 279 (booleanLiteral -> TRUE .)
    QUES            reduce using rule 279 (booleanLiteral -> TRUE .)
    EQUALS          reduce using rule 279 (booleanLiteral -> TRUE .)
    ASS_ADD         reduce using rule 279 (booleanLiteral -> TRUE .)
    ASS_SUB         reduce using rule 279 (booleanLiteral -> TRUE .)
    ASS_MUL         reduce using rule 279 (booleanLiteral -> TRUE .)
    ASS_DIV         reduce using rule 279 (booleanLiteral -> TRUE .)
    ASS_AND         reduce using rule 279 (booleanLiteral -> TRUE .)
    ASS_OR          reduce using rule 279 (booleanLiteral -> TRUE .)
    ASS_XOR         reduce using rule 279 (booleanLiteral -> TRUE .)
    ASS_MOD         reduce using rule 279 (booleanLiteral -> TRUE .)
    ASS_SHL         reduce using rule 279 (booleanLiteral -> TRUE .)
    ASS_SHRR        reduce using rule 279 (booleanLiteral -> TRUE .)
    ASS_SHR         reduce using rule 279 (booleanLiteral -> TRUE .)
    COLON           reduce using rule 279 (booleanLiteral -> TRUE .)
    COMMA           reduce using rule 279 (booleanLiteral -> TRUE .)
    SEMI            reduce using rule 279 (booleanLiteral -> TRUE .)
    RPAREN          reduce using rule 279 (booleanLiteral -> TRUE .)
    BRPAREN         reduce using rule 279 (booleanLiteral -> TRUE .)
    FRPAREN         reduce using rule 279 (booleanLiteral -> TRUE .)


state 91

    (285) annotationBody -> LPAREN RPAREN .

    PUBLIC          reduce using rule 285 (annotationBody -> LPAREN RPAREN .)
    PROTECTED       reduce using rule 285 (annotationBody -> LPAREN RPAREN .)
    PRIVATE         reduce using rule 285 (annotationBody -> LPAREN RPAREN .)
    ABSTRACT        reduce using rule 285 (annotationBody -> LPAREN RPAREN .)
    STATIC          reduce using rule 285 (annotationBody -> LPAREN RPAREN .)
    FINAL           reduce using rule 285 (annotationBody -> LPAREN RPAREN .)
    STRICTFP        reduce using rule 285 (annotationBody -> LPAREN RPAREN .)
    CLASS           reduce using rule 285 (annotationBody -> LPAREN RPAREN .)
    ENUM            reduce using rule 285 (annotationBody -> LPAREN RPAREN .)
    INTERFACE       reduce using rule 285 (annotationBody -> LPAREN RPAREN .)
    AT              reduce using rule 285 (annotationBody -> LPAREN RPAREN .)
    RPAREN          reduce using rule 285 (annotationBody -> LPAREN RPAREN .)
    Identifier      reduce using rule 285 (annotationBody -> LPAREN RPAREN .)
    COMMA           reduce using rule 285 (annotationBody -> LPAREN RPAREN .)
    BRPAREN         reduce using rule 285 (annotationBody -> LPAREN RPAREN .)
    NATIVE          reduce using rule 285 (annotationBody -> LPAREN RPAREN .)
    SYNCHRONIZED    reduce using rule 285 (annotationBody -> LPAREN RPAREN .)
    TRANSIENT       reduce using rule 285 (annotationBody -> LPAREN RPAREN .)
    VOLATILE        reduce using rule 285 (annotationBody -> LPAREN RPAREN .)
    BOOLEAN         reduce using rule 285 (annotationBody -> LPAREN RPAREN .)
    CHAR            reduce using rule 285 (annotationBody -> LPAREN RPAREN .)
    BYTE            reduce using rule 285 (annotationBody -> LPAREN RPAREN .)
    SHORT           reduce using rule 285 (annotationBody -> LPAREN RPAREN .)
    INT             reduce using rule 285 (annotationBody -> LPAREN RPAREN .)
    LONG            reduce using rule 285 (annotationBody -> LPAREN RPAREN .)
    FLOAT           reduce using rule 285 (annotationBody -> LPAREN RPAREN .)
    DOUBLE          reduce using rule 285 (annotationBody -> LPAREN RPAREN .)
    VOID            reduce using rule 285 (annotationBody -> LPAREN RPAREN .)
    LESS            reduce using rule 285 (annotationBody -> LPAREN RPAREN .)
    SEMI            reduce using rule 285 (annotationBody -> LPAREN RPAREN .)


state 92

    (277) literal -> booleanLiteral .

    OP_INC          reduce using rule 277 (literal -> booleanLiteral .)
    OP_DEC          reduce using rule 277 (literal -> booleanLiteral .)
    DOT             reduce using rule 277 (literal -> booleanLiteral .)
    FLPAREN         reduce using rule 277 (literal -> booleanLiteral .)
    MULT            reduce using rule 277 (literal -> booleanLiteral .)
    SLASH           reduce using rule 277 (literal -> booleanLiteral .)
    PERCENT         reduce using rule 277 (literal -> booleanLiteral .)
    PLUS            reduce using rule 277 (literal -> booleanLiteral .)
    DASH            reduce using rule 277 (literal -> booleanLiteral .)
    OP_SHR          reduce using rule 277 (literal -> booleanLiteral .)
    OP_SHRR         reduce using rule 277 (literal -> booleanLiteral .)
    OP_SHL          reduce using rule 277 (literal -> booleanLiteral .)
    OP_LE           reduce using rule 277 (literal -> booleanLiteral .)
    OP_GE           reduce using rule 277 (literal -> booleanLiteral .)
    LESS            reduce using rule 277 (literal -> booleanLiteral .)
    MORE            reduce using rule 277 (literal -> booleanLiteral .)
    INSTANCEOF      reduce using rule 277 (literal -> booleanLiteral .)
    OP_EQ           reduce using rule 277 (literal -> booleanLiteral .)
    OP_NE           reduce using rule 277 (literal -> booleanLiteral .)
    AND             reduce using rule 277 (literal -> booleanLiteral .)
    CARET           reduce using rule 277 (literal -> booleanLiteral .)
    VERTICAL        reduce using rule 277 (literal -> booleanLiteral .)
    OP_LAND         reduce using rule 277 (literal -> booleanLiteral .)
    OP_LOR          reduce using rule 277 (literal -> booleanLiteral .)
    QUES            reduce using rule 277 (literal -> booleanLiteral .)
    EQUALS          reduce using rule 277 (literal -> booleanLiteral .)
    ASS_ADD         reduce using rule 277 (literal -> booleanLiteral .)
    ASS_SUB         reduce using rule 277 (literal -> booleanLiteral .)
    ASS_MUL         reduce using rule 277 (literal -> booleanLiteral .)
    ASS_DIV         reduce using rule 277 (literal -> booleanLiteral .)
    ASS_AND         reduce using rule 277 (literal -> booleanLiteral .)
    ASS_OR          reduce using rule 277 (literal -> booleanLiteral .)
    ASS_XOR         reduce using rule 277 (literal -> booleanLiteral .)
    ASS_MOD         reduce using rule 277 (literal -> booleanLiteral .)
    ASS_SHL         reduce using rule 277 (literal -> booleanLiteral .)
    ASS_SHRR        reduce using rule 277 (literal -> booleanLiteral .)
    ASS_SHR         reduce using rule 277 (literal -> booleanLiteral .)
    COMMA           reduce using rule 277 (literal -> booleanLiteral .)
    RPAREN          reduce using rule 277 (literal -> booleanLiteral .)
    SEMI            reduce using rule 277 (literal -> booleanLiteral .)
    BRPAREN         reduce using rule 277 (literal -> booleanLiteral .)
    FRPAREN         reduce using rule 277 (literal -> booleanLiteral .)
    COLON           reduce using rule 277 (literal -> booleanLiteral .)


state 93

    (486) unaryExpression -> PLUS . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    unaryExpression                shift and go to state 183
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    primitiveType                  shift and go to state 122
    literal                        shift and go to state 116
    FloatingPointLiteral           shift and go to state 119
    booleanLiteral                 shift and go to state 92
    integerLiteral                 shift and go to state 98

state 94

    (487) unaryExpression -> DASH . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    unaryExpression                shift and go to state 184
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    primitiveType                  shift and go to state 122
    literal                        shift and go to state 116
    FloatingPointLiteral           shift and go to state 119
    booleanLiteral                 shift and go to state 92
    integerLiteral                 shift and go to state 98

state 95

    (455) instanceOfExpression -> relationalExpression . INSTANCEOF_type_once
    (453) INSTANCEOF_type_once -> . INSTANCEOF type
    (454) INSTANCEOF_type_once -> .

    INSTANCEOF      shift and go to state 185
    OP_EQ           reduce using rule 454 (INSTANCEOF_type_once -> .)
    OP_NE           reduce using rule 454 (INSTANCEOF_type_once -> .)
    AND             reduce using rule 454 (INSTANCEOF_type_once -> .)
    CARET           reduce using rule 454 (INSTANCEOF_type_once -> .)
    VERTICAL        reduce using rule 454 (INSTANCEOF_type_once -> .)
    OP_LAND         reduce using rule 454 (INSTANCEOF_type_once -> .)
    OP_LOR          reduce using rule 454 (INSTANCEOF_type_once -> .)
    QUES            reduce using rule 454 (INSTANCEOF_type_once -> .)
    RPAREN          reduce using rule 454 (INSTANCEOF_type_once -> .)
    COMMA           reduce using rule 454 (INSTANCEOF_type_once -> .)
    BRPAREN         reduce using rule 454 (INSTANCEOF_type_once -> .)
    EQUALS          reduce using rule 454 (INSTANCEOF_type_once -> .)
    ASS_ADD         reduce using rule 454 (INSTANCEOF_type_once -> .)
    ASS_SUB         reduce using rule 454 (INSTANCEOF_type_once -> .)
    ASS_MUL         reduce using rule 454 (INSTANCEOF_type_once -> .)
    ASS_DIV         reduce using rule 454 (INSTANCEOF_type_once -> .)
    ASS_AND         reduce using rule 454 (INSTANCEOF_type_once -> .)
    ASS_OR          reduce using rule 454 (INSTANCEOF_type_once -> .)
    ASS_XOR         reduce using rule 454 (INSTANCEOF_type_once -> .)
    ASS_MOD         reduce using rule 454 (INSTANCEOF_type_once -> .)
    ASS_SHL         reduce using rule 454 (INSTANCEOF_type_once -> .)
    ASS_SHRR        reduce using rule 454 (INSTANCEOF_type_once -> .)
    ASS_SHR         reduce using rule 454 (INSTANCEOF_type_once -> .)
    FRPAREN         reduce using rule 454 (INSTANCEOF_type_once -> .)
    COLON           reduce using rule 454 (INSTANCEOF_type_once -> .)
    SEMI            reduce using rule 454 (INSTANCEOF_type_once -> .)

    INSTANCEOF_type_once           shift and go to state 186

state 96

    (451) equalityExpression -> instanceOfExpression . instanceOfExpressionStats
    (452) equalityExpression -> instanceOfExpression .
    (449) instanceOfExpressionStats -> . instanceOfExpressionStat
    (450) instanceOfExpressionStats -> . instanceOfExpressionStats instanceOfExpressionStat
    (447) instanceOfExpressionStat -> . OP_EQ instanceOfExpression
    (448) instanceOfExpressionStat -> . OP_NE instanceOfExpression

    AND             reduce using rule 452 (equalityExpression -> instanceOfExpression .)
    CARET           reduce using rule 452 (equalityExpression -> instanceOfExpression .)
    VERTICAL        reduce using rule 452 (equalityExpression -> instanceOfExpression .)
    OP_LAND         reduce using rule 452 (equalityExpression -> instanceOfExpression .)
    OP_LOR          reduce using rule 452 (equalityExpression -> instanceOfExpression .)
    QUES            reduce using rule 452 (equalityExpression -> instanceOfExpression .)
    EQUALS          reduce using rule 452 (equalityExpression -> instanceOfExpression .)
    ASS_ADD         reduce using rule 452 (equalityExpression -> instanceOfExpression .)
    ASS_SUB         reduce using rule 452 (equalityExpression -> instanceOfExpression .)
    ASS_MUL         reduce using rule 452 (equalityExpression -> instanceOfExpression .)
    ASS_DIV         reduce using rule 452 (equalityExpression -> instanceOfExpression .)
    ASS_AND         reduce using rule 452 (equalityExpression -> instanceOfExpression .)
    ASS_OR          reduce using rule 452 (equalityExpression -> instanceOfExpression .)
    ASS_XOR         reduce using rule 452 (equalityExpression -> instanceOfExpression .)
    ASS_MOD         reduce using rule 452 (equalityExpression -> instanceOfExpression .)
    ASS_SHL         reduce using rule 452 (equalityExpression -> instanceOfExpression .)
    ASS_SHRR        reduce using rule 452 (equalityExpression -> instanceOfExpression .)
    ASS_SHR         reduce using rule 452 (equalityExpression -> instanceOfExpression .)
    COLON           reduce using rule 452 (equalityExpression -> instanceOfExpression .)
    SEMI            reduce using rule 452 (equalityExpression -> instanceOfExpression .)
    FRPAREN         reduce using rule 452 (equalityExpression -> instanceOfExpression .)
    COMMA           reduce using rule 452 (equalityExpression -> instanceOfExpression .)
    RPAREN          reduce using rule 452 (equalityExpression -> instanceOfExpression .)
    BRPAREN         reduce using rule 452 (equalityExpression -> instanceOfExpression .)
    OP_EQ           shift and go to state 188
    OP_NE           shift and go to state 190

    instanceOfExpressionStat       shift and go to state 187
    instanceOfExpressionStats      shift and go to state 189

state 97

    (507) primary -> THIS . DOT_Identifiers identifierSuffix_empty
    (508) primary -> THIS . identifierSuffix_empty
    (269) DOT_Identifiers -> . DOT_Identifier
    (270) DOT_Identifiers -> . DOT_Identifiers DOT_Identifier
    (504) identifierSuffix_empty -> . identifierSuffix
    (505) identifierSuffix_empty -> .
    (267) DOT_Identifier -> . DOT Identifier
    (268) DOT_Identifier -> . DOT MULT
    (520) identifierSuffix -> . arrays DOT CLASS
    (521) identifierSuffix -> . FL_expression_FRs
    (522) identifierSuffix -> . arguments
    (523) identifierSuffix -> . DOT CLASS
    (524) identifierSuffix -> . DOT explicitGenericInvocation
    (525) identifierSuffix -> . DOT THIS
    (526) identifierSuffix -> . DOT SUPER arguments
    (527) identifierSuffix -> . DOT NEW innerCreator
    (138) arrays -> . arrays array
    (139) arrays -> . array
    (518) FL_expression_FRs -> . FL_expression_FR
    (519) FL_expression_FRs -> . FL_expression_FRs FL_expression_FR
    (555) arguments -> . LPAREN expressionList_once RPAREN
    (137) array -> . FLPAREN FRPAREN
    (517) FL_expression_FR -> . FLPAREN expression FRPAREN

  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for FLPAREN resolved as shift
    OP_INC          reduce using rule 505 (identifierSuffix_empty -> .)
    OP_DEC          reduce using rule 505 (identifierSuffix_empty -> .)
    MULT            reduce using rule 505 (identifierSuffix_empty -> .)
    SLASH           reduce using rule 505 (identifierSuffix_empty -> .)
    PERCENT         reduce using rule 505 (identifierSuffix_empty -> .)
    PLUS            reduce using rule 505 (identifierSuffix_empty -> .)
    DASH            reduce using rule 505 (identifierSuffix_empty -> .)
    OP_SHR          reduce using rule 505 (identifierSuffix_empty -> .)
    OP_SHRR         reduce using rule 505 (identifierSuffix_empty -> .)
    OP_SHL          reduce using rule 505 (identifierSuffix_empty -> .)
    OP_LE           reduce using rule 505 (identifierSuffix_empty -> .)
    OP_GE           reduce using rule 505 (identifierSuffix_empty -> .)
    LESS            reduce using rule 505 (identifierSuffix_empty -> .)
    MORE            reduce using rule 505 (identifierSuffix_empty -> .)
    INSTANCEOF      reduce using rule 505 (identifierSuffix_empty -> .)
    OP_EQ           reduce using rule 505 (identifierSuffix_empty -> .)
    OP_NE           reduce using rule 505 (identifierSuffix_empty -> .)
    AND             reduce using rule 505 (identifierSuffix_empty -> .)
    CARET           reduce using rule 505 (identifierSuffix_empty -> .)
    VERTICAL        reduce using rule 505 (identifierSuffix_empty -> .)
    OP_LAND         reduce using rule 505 (identifierSuffix_empty -> .)
    OP_LOR          reduce using rule 505 (identifierSuffix_empty -> .)
    QUES            reduce using rule 505 (identifierSuffix_empty -> .)
    RPAREN          reduce using rule 505 (identifierSuffix_empty -> .)
    COMMA           reduce using rule 505 (identifierSuffix_empty -> .)
    BRPAREN         reduce using rule 505 (identifierSuffix_empty -> .)
    EQUALS          reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_ADD         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_SUB         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_MUL         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_DIV         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_AND         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_OR          reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_XOR         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_MOD         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_SHL         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_SHRR        reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_SHR         reduce using rule 505 (identifierSuffix_empty -> .)
    FRPAREN         reduce using rule 505 (identifierSuffix_empty -> .)
    COLON           reduce using rule 505 (identifierSuffix_empty -> .)
    SEMI            reduce using rule 505 (identifierSuffix_empty -> .)
    DOT             shift and go to state 194
    LPAREN          shift and go to state 199
    FLPAREN         shift and go to state 193

  ! DOT             [ reduce using rule 505 (identifierSuffix_empty -> .) ]
  ! FLPAREN         [ reduce using rule 505 (identifierSuffix_empty -> .) ]

    FL_expression_FRs              shift and go to state 196
    identifierSuffix               shift and go to state 197
    FL_expression_FR               shift and go to state 192
    arrays                         shift and go to state 200
    DOT_Identifiers                shift and go to state 191
    identifierSuffix_empty         shift and go to state 198
    arguments                      shift and go to state 195
    DOT_Identifier                 shift and go to state 48
    array                          shift and go to state 154

state 98

    (273) literal -> integerLiteral .

    OP_INC          reduce using rule 273 (literal -> integerLiteral .)
    OP_DEC          reduce using rule 273 (literal -> integerLiteral .)
    DOT             reduce using rule 273 (literal -> integerLiteral .)
    FLPAREN         reduce using rule 273 (literal -> integerLiteral .)
    MULT            reduce using rule 273 (literal -> integerLiteral .)
    SLASH           reduce using rule 273 (literal -> integerLiteral .)
    PERCENT         reduce using rule 273 (literal -> integerLiteral .)
    PLUS            reduce using rule 273 (literal -> integerLiteral .)
    DASH            reduce using rule 273 (literal -> integerLiteral .)
    OP_SHR          reduce using rule 273 (literal -> integerLiteral .)
    OP_SHRR         reduce using rule 273 (literal -> integerLiteral .)
    OP_SHL          reduce using rule 273 (literal -> integerLiteral .)
    OP_LE           reduce using rule 273 (literal -> integerLiteral .)
    OP_GE           reduce using rule 273 (literal -> integerLiteral .)
    LESS            reduce using rule 273 (literal -> integerLiteral .)
    MORE            reduce using rule 273 (literal -> integerLiteral .)
    INSTANCEOF      reduce using rule 273 (literal -> integerLiteral .)
    OP_EQ           reduce using rule 273 (literal -> integerLiteral .)
    OP_NE           reduce using rule 273 (literal -> integerLiteral .)
    AND             reduce using rule 273 (literal -> integerLiteral .)
    CARET           reduce using rule 273 (literal -> integerLiteral .)
    VERTICAL        reduce using rule 273 (literal -> integerLiteral .)
    OP_LAND         reduce using rule 273 (literal -> integerLiteral .)
    OP_LOR          reduce using rule 273 (literal -> integerLiteral .)
    QUES            reduce using rule 273 (literal -> integerLiteral .)
    EQUALS          reduce using rule 273 (literal -> integerLiteral .)
    ASS_ADD         reduce using rule 273 (literal -> integerLiteral .)
    ASS_SUB         reduce using rule 273 (literal -> integerLiteral .)
    ASS_MUL         reduce using rule 273 (literal -> integerLiteral .)
    ASS_DIV         reduce using rule 273 (literal -> integerLiteral .)
    ASS_AND         reduce using rule 273 (literal -> integerLiteral .)
    ASS_OR          reduce using rule 273 (literal -> integerLiteral .)
    ASS_XOR         reduce using rule 273 (literal -> integerLiteral .)
    ASS_MOD         reduce using rule 273 (literal -> integerLiteral .)
    ASS_SHL         reduce using rule 273 (literal -> integerLiteral .)
    ASS_SHRR        reduce using rule 273 (literal -> integerLiteral .)
    ASS_SHR         reduce using rule 273 (literal -> integerLiteral .)
    COMMA           reduce using rule 273 (literal -> integerLiteral .)
    RPAREN          reduce using rule 273 (literal -> integerLiteral .)
    SEMI            reduce using rule 273 (literal -> integerLiteral .)
    BRPAREN         reduce using rule 273 (literal -> integerLiteral .)
    FRPAREN         reduce using rule 273 (literal -> integerLiteral .)
    COLON           reduce using rule 273 (literal -> integerLiteral .)


state 99

    (430) conditionalAndExpression -> inclusiveOrExpression . O_inclusiveOrExpressions
    (431) conditionalAndExpression -> inclusiveOrExpression .
    (428) O_inclusiveOrExpressions -> . O_inclusiveOrExpression
    (429) O_inclusiveOrExpressions -> . O_inclusiveOrExpressions O_inclusiveOrExpression
    (427) O_inclusiveOrExpression -> . OP_LAND inclusiveOrExpression

    OP_LOR          reduce using rule 431 (conditionalAndExpression -> inclusiveOrExpression .)
    QUES            reduce using rule 431 (conditionalAndExpression -> inclusiveOrExpression .)
    EQUALS          reduce using rule 431 (conditionalAndExpression -> inclusiveOrExpression .)
    ASS_ADD         reduce using rule 431 (conditionalAndExpression -> inclusiveOrExpression .)
    ASS_SUB         reduce using rule 431 (conditionalAndExpression -> inclusiveOrExpression .)
    ASS_MUL         reduce using rule 431 (conditionalAndExpression -> inclusiveOrExpression .)
    ASS_DIV         reduce using rule 431 (conditionalAndExpression -> inclusiveOrExpression .)
    ASS_AND         reduce using rule 431 (conditionalAndExpression -> inclusiveOrExpression .)
    ASS_OR          reduce using rule 431 (conditionalAndExpression -> inclusiveOrExpression .)
    ASS_XOR         reduce using rule 431 (conditionalAndExpression -> inclusiveOrExpression .)
    ASS_MOD         reduce using rule 431 (conditionalAndExpression -> inclusiveOrExpression .)
    ASS_SHL         reduce using rule 431 (conditionalAndExpression -> inclusiveOrExpression .)
    ASS_SHRR        reduce using rule 431 (conditionalAndExpression -> inclusiveOrExpression .)
    ASS_SHR         reduce using rule 431 (conditionalAndExpression -> inclusiveOrExpression .)
    FRPAREN         reduce using rule 431 (conditionalAndExpression -> inclusiveOrExpression .)
    SEMI            reduce using rule 431 (conditionalAndExpression -> inclusiveOrExpression .)
    RPAREN          reduce using rule 431 (conditionalAndExpression -> inclusiveOrExpression .)
    COMMA           reduce using rule 431 (conditionalAndExpression -> inclusiveOrExpression .)
    COLON           reduce using rule 431 (conditionalAndExpression -> inclusiveOrExpression .)
    BRPAREN         reduce using rule 431 (conditionalAndExpression -> inclusiveOrExpression .)
    OP_LAND         shift and go to state 201

    O_inclusiveOrExpression        shift and go to state 202
    O_inclusiveOrExpressions       shift and go to state 203

state 100

    (560) integerLiteral -> LONG_NUMBER .

    OP_INC          reduce using rule 560 (integerLiteral -> LONG_NUMBER .)
    OP_DEC          reduce using rule 560 (integerLiteral -> LONG_NUMBER .)
    DOT             reduce using rule 560 (integerLiteral -> LONG_NUMBER .)
    FLPAREN         reduce using rule 560 (integerLiteral -> LONG_NUMBER .)
    MULT            reduce using rule 560 (integerLiteral -> LONG_NUMBER .)
    SLASH           reduce using rule 560 (integerLiteral -> LONG_NUMBER .)
    PERCENT         reduce using rule 560 (integerLiteral -> LONG_NUMBER .)
    PLUS            reduce using rule 560 (integerLiteral -> LONG_NUMBER .)
    DASH            reduce using rule 560 (integerLiteral -> LONG_NUMBER .)
    OP_SHR          reduce using rule 560 (integerLiteral -> LONG_NUMBER .)
    OP_SHRR         reduce using rule 560 (integerLiteral -> LONG_NUMBER .)
    OP_SHL          reduce using rule 560 (integerLiteral -> LONG_NUMBER .)
    OP_LE           reduce using rule 560 (integerLiteral -> LONG_NUMBER .)
    OP_GE           reduce using rule 560 (integerLiteral -> LONG_NUMBER .)
    LESS            reduce using rule 560 (integerLiteral -> LONG_NUMBER .)
    MORE            reduce using rule 560 (integerLiteral -> LONG_NUMBER .)
    INSTANCEOF      reduce using rule 560 (integerLiteral -> LONG_NUMBER .)
    OP_EQ           reduce using rule 560 (integerLiteral -> LONG_NUMBER .)
    OP_NE           reduce using rule 560 (integerLiteral -> LONG_NUMBER .)
    AND             reduce using rule 560 (integerLiteral -> LONG_NUMBER .)
    CARET           reduce using rule 560 (integerLiteral -> LONG_NUMBER .)
    VERTICAL        reduce using rule 560 (integerLiteral -> LONG_NUMBER .)
    OP_LAND         reduce using rule 560 (integerLiteral -> LONG_NUMBER .)
    OP_LOR          reduce using rule 560 (integerLiteral -> LONG_NUMBER .)
    QUES            reduce using rule 560 (integerLiteral -> LONG_NUMBER .)
    EQUALS          reduce using rule 560 (integerLiteral -> LONG_NUMBER .)
    ASS_ADD         reduce using rule 560 (integerLiteral -> LONG_NUMBER .)
    ASS_SUB         reduce using rule 560 (integerLiteral -> LONG_NUMBER .)
    ASS_MUL         reduce using rule 560 (integerLiteral -> LONG_NUMBER .)
    ASS_DIV         reduce using rule 560 (integerLiteral -> LONG_NUMBER .)
    ASS_AND         reduce using rule 560 (integerLiteral -> LONG_NUMBER .)
    ASS_OR          reduce using rule 560 (integerLiteral -> LONG_NUMBER .)
    ASS_XOR         reduce using rule 560 (integerLiteral -> LONG_NUMBER .)
    ASS_MOD         reduce using rule 560 (integerLiteral -> LONG_NUMBER .)
    ASS_SHL         reduce using rule 560 (integerLiteral -> LONG_NUMBER .)
    ASS_SHRR        reduce using rule 560 (integerLiteral -> LONG_NUMBER .)
    ASS_SHR         reduce using rule 560 (integerLiteral -> LONG_NUMBER .)
    SEMI            reduce using rule 560 (integerLiteral -> LONG_NUMBER .)
    RPAREN          reduce using rule 560 (integerLiteral -> LONG_NUMBER .)
    COMMA           reduce using rule 560 (integerLiteral -> LONG_NUMBER .)
    BRPAREN         reduce using rule 560 (integerLiteral -> LONG_NUMBER .)
    FRPAREN         reduce using rule 560 (integerLiteral -> LONG_NUMBER .)
    COLON           reduce using rule 560 (integerLiteral -> LONG_NUMBER .)


state 101

    (293) elementValuePairs -> elementValuePair . elementValuePairsBodys
    (294) elementValuePairs -> elementValuePair .
    (291) elementValuePairsBodys -> . elementValuePairsBody
    (292) elementValuePairsBodys -> . elementValuePairsBodys elementValuePairsBody
    (290) elementValuePairsBody -> . COMMA elementValuePair

    RPAREN          reduce using rule 294 (elementValuePairs -> elementValuePair .)
    COMMA           shift and go to state 204

    elementValuePairsBodys         shift and go to state 205
    elementValuePairsBody          shift and go to state 206

state 102

    (468) shiftExpression -> additiveExpression . sh_additiveExpressions
    (469) shiftExpression -> additiveExpression .
    (466) sh_additiveExpressions -> . sh_additiveExpression
    (467) sh_additiveExpressions -> . sh_additiveExpressions sh_additiveExpression
    (465) sh_additiveExpression -> . shiftOp additiveExpression
    (470) shiftOp -> . OP_SHR
    (471) shiftOp -> . OP_SHRR
    (472) shiftOp -> . OP_SHL

    OP_LE           reduce using rule 469 (shiftExpression -> additiveExpression .)
    OP_GE           reduce using rule 469 (shiftExpression -> additiveExpression .)
    LESS            reduce using rule 469 (shiftExpression -> additiveExpression .)
    MORE            reduce using rule 469 (shiftExpression -> additiveExpression .)
    INSTANCEOF      reduce using rule 469 (shiftExpression -> additiveExpression .)
    OP_EQ           reduce using rule 469 (shiftExpression -> additiveExpression .)
    OP_NE           reduce using rule 469 (shiftExpression -> additiveExpression .)
    AND             reduce using rule 469 (shiftExpression -> additiveExpression .)
    CARET           reduce using rule 469 (shiftExpression -> additiveExpression .)
    VERTICAL        reduce using rule 469 (shiftExpression -> additiveExpression .)
    OP_LAND         reduce using rule 469 (shiftExpression -> additiveExpression .)
    OP_LOR          reduce using rule 469 (shiftExpression -> additiveExpression .)
    QUES            reduce using rule 469 (shiftExpression -> additiveExpression .)
    EQUALS          reduce using rule 469 (shiftExpression -> additiveExpression .)
    ASS_ADD         reduce using rule 469 (shiftExpression -> additiveExpression .)
    ASS_SUB         reduce using rule 469 (shiftExpression -> additiveExpression .)
    ASS_MUL         reduce using rule 469 (shiftExpression -> additiveExpression .)
    ASS_DIV         reduce using rule 469 (shiftExpression -> additiveExpression .)
    ASS_AND         reduce using rule 469 (shiftExpression -> additiveExpression .)
    ASS_OR          reduce using rule 469 (shiftExpression -> additiveExpression .)
    ASS_XOR         reduce using rule 469 (shiftExpression -> additiveExpression .)
    ASS_MOD         reduce using rule 469 (shiftExpression -> additiveExpression .)
    ASS_SHL         reduce using rule 469 (shiftExpression -> additiveExpression .)
    ASS_SHRR        reduce using rule 469 (shiftExpression -> additiveExpression .)
    ASS_SHR         reduce using rule 469 (shiftExpression -> additiveExpression .)
    RPAREN          reduce using rule 469 (shiftExpression -> additiveExpression .)
    SEMI            reduce using rule 469 (shiftExpression -> additiveExpression .)
    COMMA           reduce using rule 469 (shiftExpression -> additiveExpression .)
    BRPAREN         reduce using rule 469 (shiftExpression -> additiveExpression .)
    FRPAREN         reduce using rule 469 (shiftExpression -> additiveExpression .)
    COLON           reduce using rule 469 (shiftExpression -> additiveExpression .)
    OP_SHR          shift and go to state 208
    OP_SHRR         shift and go to state 207
    OP_SHL          shift and go to state 209

    sh_additiveExpression          shift and go to state 210
    shiftOp                        shift and go to state 211
    sh_additiveExpressions         shift and go to state 212

state 103

    (295) elementValuePair -> Identifier . EQUALS elementValue
    (512) primary -> Identifier . DOT_Identifiers identifierSuffix_empty
    (513) primary -> Identifier . identifierSuffix_empty
    (269) DOT_Identifiers -> . DOT_Identifier
    (270) DOT_Identifiers -> . DOT_Identifiers DOT_Identifier
    (504) identifierSuffix_empty -> . identifierSuffix
    (505) identifierSuffix_empty -> .
    (267) DOT_Identifier -> . DOT Identifier
    (268) DOT_Identifier -> . DOT MULT
    (520) identifierSuffix -> . arrays DOT CLASS
    (521) identifierSuffix -> . FL_expression_FRs
    (522) identifierSuffix -> . arguments
    (523) identifierSuffix -> . DOT CLASS
    (524) identifierSuffix -> . DOT explicitGenericInvocation
    (525) identifierSuffix -> . DOT THIS
    (526) identifierSuffix -> . DOT SUPER arguments
    (527) identifierSuffix -> . DOT NEW innerCreator
    (138) arrays -> . arrays array
    (139) arrays -> . array
    (518) FL_expression_FRs -> . FL_expression_FR
    (519) FL_expression_FRs -> . FL_expression_FRs FL_expression_FR
    (555) arguments -> . LPAREN expressionList_once RPAREN
    (137) array -> . FLPAREN FRPAREN
    (517) FL_expression_FR -> . FLPAREN expression FRPAREN

  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for FLPAREN resolved as shift
    EQUALS          shift and go to state 214
    OP_INC          reduce using rule 505 (identifierSuffix_empty -> .)
    OP_DEC          reduce using rule 505 (identifierSuffix_empty -> .)
    MULT            reduce using rule 505 (identifierSuffix_empty -> .)
    SLASH           reduce using rule 505 (identifierSuffix_empty -> .)
    PERCENT         reduce using rule 505 (identifierSuffix_empty -> .)
    PLUS            reduce using rule 505 (identifierSuffix_empty -> .)
    DASH            reduce using rule 505 (identifierSuffix_empty -> .)
    OP_SHR          reduce using rule 505 (identifierSuffix_empty -> .)
    OP_SHRR         reduce using rule 505 (identifierSuffix_empty -> .)
    OP_SHL          reduce using rule 505 (identifierSuffix_empty -> .)
    OP_LE           reduce using rule 505 (identifierSuffix_empty -> .)
    OP_GE           reduce using rule 505 (identifierSuffix_empty -> .)
    LESS            reduce using rule 505 (identifierSuffix_empty -> .)
    MORE            reduce using rule 505 (identifierSuffix_empty -> .)
    INSTANCEOF      reduce using rule 505 (identifierSuffix_empty -> .)
    OP_EQ           reduce using rule 505 (identifierSuffix_empty -> .)
    OP_NE           reduce using rule 505 (identifierSuffix_empty -> .)
    AND             reduce using rule 505 (identifierSuffix_empty -> .)
    CARET           reduce using rule 505 (identifierSuffix_empty -> .)
    VERTICAL        reduce using rule 505 (identifierSuffix_empty -> .)
    OP_LAND         reduce using rule 505 (identifierSuffix_empty -> .)
    OP_LOR          reduce using rule 505 (identifierSuffix_empty -> .)
    QUES            reduce using rule 505 (identifierSuffix_empty -> .)
    RPAREN          reduce using rule 505 (identifierSuffix_empty -> .)
    DOT             shift and go to state 194
    LPAREN          shift and go to state 199
    FLPAREN         shift and go to state 193

  ! DOT             [ reduce using rule 505 (identifierSuffix_empty -> .) ]
  ! FLPAREN         [ reduce using rule 505 (identifierSuffix_empty -> .) ]

    FL_expression_FRs              shift and go to state 196
    identifierSuffix               shift and go to state 197
    FL_expression_FR               shift and go to state 192
    arrays                         shift and go to state 200
    DOT_Identifier                 shift and go to state 48
    identifierSuffix_empty         shift and go to state 215
    arguments                      shift and go to state 195
    DOT_Identifiers                shift and go to state 213
    array                          shift and go to state 154

state 104

    (275) literal -> CharacterLiteral .

    OP_INC          reduce using rule 275 (literal -> CharacterLiteral .)
    OP_DEC          reduce using rule 275 (literal -> CharacterLiteral .)
    DOT             reduce using rule 275 (literal -> CharacterLiteral .)
    FLPAREN         reduce using rule 275 (literal -> CharacterLiteral .)
    MULT            reduce using rule 275 (literal -> CharacterLiteral .)
    SLASH           reduce using rule 275 (literal -> CharacterLiteral .)
    PERCENT         reduce using rule 275 (literal -> CharacterLiteral .)
    PLUS            reduce using rule 275 (literal -> CharacterLiteral .)
    DASH            reduce using rule 275 (literal -> CharacterLiteral .)
    OP_SHR          reduce using rule 275 (literal -> CharacterLiteral .)
    OP_SHRR         reduce using rule 275 (literal -> CharacterLiteral .)
    OP_SHL          reduce using rule 275 (literal -> CharacterLiteral .)
    OP_LE           reduce using rule 275 (literal -> CharacterLiteral .)
    OP_GE           reduce using rule 275 (literal -> CharacterLiteral .)
    LESS            reduce using rule 275 (literal -> CharacterLiteral .)
    MORE            reduce using rule 275 (literal -> CharacterLiteral .)
    INSTANCEOF      reduce using rule 275 (literal -> CharacterLiteral .)
    OP_EQ           reduce using rule 275 (literal -> CharacterLiteral .)
    OP_NE           reduce using rule 275 (literal -> CharacterLiteral .)
    AND             reduce using rule 275 (literal -> CharacterLiteral .)
    CARET           reduce using rule 275 (literal -> CharacterLiteral .)
    VERTICAL        reduce using rule 275 (literal -> CharacterLiteral .)
    OP_LAND         reduce using rule 275 (literal -> CharacterLiteral .)
    OP_LOR          reduce using rule 275 (literal -> CharacterLiteral .)
    QUES            reduce using rule 275 (literal -> CharacterLiteral .)
    EQUALS          reduce using rule 275 (literal -> CharacterLiteral .)
    ASS_ADD         reduce using rule 275 (literal -> CharacterLiteral .)
    ASS_SUB         reduce using rule 275 (literal -> CharacterLiteral .)
    ASS_MUL         reduce using rule 275 (literal -> CharacterLiteral .)
    ASS_DIV         reduce using rule 275 (literal -> CharacterLiteral .)
    ASS_AND         reduce using rule 275 (literal -> CharacterLiteral .)
    ASS_OR          reduce using rule 275 (literal -> CharacterLiteral .)
    ASS_XOR         reduce using rule 275 (literal -> CharacterLiteral .)
    ASS_MOD         reduce using rule 275 (literal -> CharacterLiteral .)
    ASS_SHL         reduce using rule 275 (literal -> CharacterLiteral .)
    ASS_SHRR        reduce using rule 275 (literal -> CharacterLiteral .)
    ASS_SHR         reduce using rule 275 (literal -> CharacterLiteral .)
    COMMA           reduce using rule 275 (literal -> CharacterLiteral .)
    RPAREN          reduce using rule 275 (literal -> CharacterLiteral .)
    SEMI            reduce using rule 275 (literal -> CharacterLiteral .)
    BRPAREN         reduce using rule 275 (literal -> CharacterLiteral .)
    FRPAREN         reduce using rule 275 (literal -> CharacterLiteral .)
    COLON           reduce using rule 275 (literal -> CharacterLiteral .)


state 105

    (490) unaryExpression -> unaryExpressionNotPlusMinus .

    MULT            reduce using rule 490 (unaryExpression -> unaryExpressionNotPlusMinus .)
    SLASH           reduce using rule 490 (unaryExpression -> unaryExpressionNotPlusMinus .)
    PERCENT         reduce using rule 490 (unaryExpression -> unaryExpressionNotPlusMinus .)
    PLUS            reduce using rule 490 (unaryExpression -> unaryExpressionNotPlusMinus .)
    DASH            reduce using rule 490 (unaryExpression -> unaryExpressionNotPlusMinus .)
    OP_SHR          reduce using rule 490 (unaryExpression -> unaryExpressionNotPlusMinus .)
    OP_SHRR         reduce using rule 490 (unaryExpression -> unaryExpressionNotPlusMinus .)
    OP_SHL          reduce using rule 490 (unaryExpression -> unaryExpressionNotPlusMinus .)
    OP_LE           reduce using rule 490 (unaryExpression -> unaryExpressionNotPlusMinus .)
    OP_GE           reduce using rule 490 (unaryExpression -> unaryExpressionNotPlusMinus .)
    LESS            reduce using rule 490 (unaryExpression -> unaryExpressionNotPlusMinus .)
    MORE            reduce using rule 490 (unaryExpression -> unaryExpressionNotPlusMinus .)
    INSTANCEOF      reduce using rule 490 (unaryExpression -> unaryExpressionNotPlusMinus .)
    OP_EQ           reduce using rule 490 (unaryExpression -> unaryExpressionNotPlusMinus .)
    OP_NE           reduce using rule 490 (unaryExpression -> unaryExpressionNotPlusMinus .)
    AND             reduce using rule 490 (unaryExpression -> unaryExpressionNotPlusMinus .)
    CARET           reduce using rule 490 (unaryExpression -> unaryExpressionNotPlusMinus .)
    VERTICAL        reduce using rule 490 (unaryExpression -> unaryExpressionNotPlusMinus .)
    OP_LAND         reduce using rule 490 (unaryExpression -> unaryExpressionNotPlusMinus .)
    OP_LOR          reduce using rule 490 (unaryExpression -> unaryExpressionNotPlusMinus .)
    QUES            reduce using rule 490 (unaryExpression -> unaryExpressionNotPlusMinus .)
    RPAREN          reduce using rule 490 (unaryExpression -> unaryExpressionNotPlusMinus .)
    COMMA           reduce using rule 490 (unaryExpression -> unaryExpressionNotPlusMinus .)
    BRPAREN         reduce using rule 490 (unaryExpression -> unaryExpressionNotPlusMinus .)
    EQUALS          reduce using rule 490 (unaryExpression -> unaryExpressionNotPlusMinus .)
    ASS_ADD         reduce using rule 490 (unaryExpression -> unaryExpressionNotPlusMinus .)
    ASS_SUB         reduce using rule 490 (unaryExpression -> unaryExpressionNotPlusMinus .)
    ASS_MUL         reduce using rule 490 (unaryExpression -> unaryExpressionNotPlusMinus .)
    ASS_DIV         reduce using rule 490 (unaryExpression -> unaryExpressionNotPlusMinus .)
    ASS_AND         reduce using rule 490 (unaryExpression -> unaryExpressionNotPlusMinus .)
    ASS_OR          reduce using rule 490 (unaryExpression -> unaryExpressionNotPlusMinus .)
    ASS_XOR         reduce using rule 490 (unaryExpression -> unaryExpressionNotPlusMinus .)
    ASS_MOD         reduce using rule 490 (unaryExpression -> unaryExpressionNotPlusMinus .)
    ASS_SHL         reduce using rule 490 (unaryExpression -> unaryExpressionNotPlusMinus .)
    ASS_SHRR        reduce using rule 490 (unaryExpression -> unaryExpressionNotPlusMinus .)
    ASS_SHR         reduce using rule 490 (unaryExpression -> unaryExpressionNotPlusMinus .)
    FRPAREN         reduce using rule 490 (unaryExpression -> unaryExpressionNotPlusMinus .)
    COLON           reduce using rule 490 (unaryExpression -> unaryExpressionNotPlusMinus .)
    SEMI            reduce using rule 490 (unaryExpression -> unaryExpressionNotPlusMinus .)


state 106

    (440) exclusiveOrExpression -> andExpression . CARET_andExpressions
    (441) exclusiveOrExpression -> andExpression .
    (438) CARET_andExpressions -> . CARET_andExpression
    (439) CARET_andExpressions -> . CARET_andExpressions CARET_andExpression
    (437) CARET_andExpression -> . CARET andExpression

    VERTICAL        reduce using rule 441 (exclusiveOrExpression -> andExpression .)
    OP_LAND         reduce using rule 441 (exclusiveOrExpression -> andExpression .)
    OP_LOR          reduce using rule 441 (exclusiveOrExpression -> andExpression .)
    QUES            reduce using rule 441 (exclusiveOrExpression -> andExpression .)
    EQUALS          reduce using rule 441 (exclusiveOrExpression -> andExpression .)
    ASS_ADD         reduce using rule 441 (exclusiveOrExpression -> andExpression .)
    ASS_SUB         reduce using rule 441 (exclusiveOrExpression -> andExpression .)
    ASS_MUL         reduce using rule 441 (exclusiveOrExpression -> andExpression .)
    ASS_DIV         reduce using rule 441 (exclusiveOrExpression -> andExpression .)
    ASS_AND         reduce using rule 441 (exclusiveOrExpression -> andExpression .)
    ASS_OR          reduce using rule 441 (exclusiveOrExpression -> andExpression .)
    ASS_XOR         reduce using rule 441 (exclusiveOrExpression -> andExpression .)
    ASS_MOD         reduce using rule 441 (exclusiveOrExpression -> andExpression .)
    ASS_SHL         reduce using rule 441 (exclusiveOrExpression -> andExpression .)
    ASS_SHRR        reduce using rule 441 (exclusiveOrExpression -> andExpression .)
    ASS_SHR         reduce using rule 441 (exclusiveOrExpression -> andExpression .)
    FRPAREN         reduce using rule 441 (exclusiveOrExpression -> andExpression .)
    RPAREN          reduce using rule 441 (exclusiveOrExpression -> andExpression .)
    COMMA           reduce using rule 441 (exclusiveOrExpression -> andExpression .)
    BRPAREN         reduce using rule 441 (exclusiveOrExpression -> andExpression .)
    COLON           reduce using rule 441 (exclusiveOrExpression -> andExpression .)
    SEMI            reduce using rule 441 (exclusiveOrExpression -> andExpression .)
    CARET           shift and go to state 217

    CARET_andExpressions           shift and go to state 216
    CARET_andExpression            shift and go to state 218

state 107

    (307) elementValueArrayInitializer -> BLPAREN . elementValueStatement COMMA_OR_empty BRPAREN
    (302) elementValueStatement -> . elementValue elementValueBodys
    (303) elementValueStatement -> . elementValue
    (304) elementValueStatement -> .
    (296) elementValue -> . conditionalExpression
    (297) elementValue -> . annotation
    (298) elementValue -> . elementValueArrayInitializer
    (420) conditionalExpression -> . conditionalOrExpression conditionalExpressionStats
    (421) conditionalExpression -> . conditionalOrExpression
    (287) annotation -> . AT annotationName annotationBody
    (307) elementValueArrayInitializer -> . BLPAREN elementValueStatement COMMA_OR_empty BRPAREN
    (425) conditionalOrExpression -> . conditionalAndExpression O_conditionalAndExpressions
    (426) conditionalOrExpression -> . conditionalAndExpression
    (430) conditionalAndExpression -> . inclusiveOrExpression O_inclusiveOrExpressions
    (431) conditionalAndExpression -> . inclusiveOrExpression
    (435) inclusiveOrExpression -> . exclusiveOrExpression V_exclusiveOrExpression
    (436) inclusiveOrExpression -> . exclusiveOrExpression
    (440) exclusiveOrExpression -> . andExpression CARET_andExpressions
    (441) exclusiveOrExpression -> . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    COMMA           reduce using rule 304 (elementValueStatement -> .)
    BRPAREN         reduce using rule 304 (elementValueStatement -> .)
    AT              shift and go to state 133
    BLPAREN         shift and go to state 107
    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    equalityExpression             shift and go to state 108
    inclusiveOrExpression          shift and go to state 99
    multiplicativeExpression       shift and go to state 128
    exclusiveOrExpression          shift and go to state 110
    conditionalAndExpression       shift and go to state 89
    shiftExpression                shift and go to state 130
    elementValueStatement          shift and go to state 219
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    integerLiteral                 shift and go to state 98
    additiveExpression             shift and go to state 102
    instanceOfExpression           shift and go to state 96
    conditionalExpression          shift and go to state 118
    unaryExpression                shift and go to state 131
    FloatingPointLiteral           shift and go to state 119
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    relationalExpression           shift and go to state 95
    conditionalOrExpression        shift and go to state 109
    annotation                     shift and go to state 136
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    primitiveType                  shift and go to state 122
    elementValueArrayInitializer   shift and go to state 123
    andExpression                  shift and go to state 106
    elementValue                   shift and go to state 220

state 108

    (445) andExpression -> equalityExpression . AND_equalityExpressions
    (446) andExpression -> equalityExpression .
    (443) AND_equalityExpressions -> . AND_equalityExpression
    (444) AND_equalityExpressions -> . AND_equalityExpressions AND_equalityExpression
    (442) AND_equalityExpression -> . AND equalityExpression

    CARET           reduce using rule 446 (andExpression -> equalityExpression .)
    VERTICAL        reduce using rule 446 (andExpression -> equalityExpression .)
    OP_LAND         reduce using rule 446 (andExpression -> equalityExpression .)
    OP_LOR          reduce using rule 446 (andExpression -> equalityExpression .)
    QUES            reduce using rule 446 (andExpression -> equalityExpression .)
    EQUALS          reduce using rule 446 (andExpression -> equalityExpression .)
    ASS_ADD         reduce using rule 446 (andExpression -> equalityExpression .)
    ASS_SUB         reduce using rule 446 (andExpression -> equalityExpression .)
    ASS_MUL         reduce using rule 446 (andExpression -> equalityExpression .)
    ASS_DIV         reduce using rule 446 (andExpression -> equalityExpression .)
    ASS_AND         reduce using rule 446 (andExpression -> equalityExpression .)
    ASS_OR          reduce using rule 446 (andExpression -> equalityExpression .)
    ASS_XOR         reduce using rule 446 (andExpression -> equalityExpression .)
    ASS_MOD         reduce using rule 446 (andExpression -> equalityExpression .)
    ASS_SHL         reduce using rule 446 (andExpression -> equalityExpression .)
    ASS_SHRR        reduce using rule 446 (andExpression -> equalityExpression .)
    ASS_SHR         reduce using rule 446 (andExpression -> equalityExpression .)
    SEMI            reduce using rule 446 (andExpression -> equalityExpression .)
    FRPAREN         reduce using rule 446 (andExpression -> equalityExpression .)
    RPAREN          reduce using rule 446 (andExpression -> equalityExpression .)
    COMMA           reduce using rule 446 (andExpression -> equalityExpression .)
    BRPAREN         reduce using rule 446 (andExpression -> equalityExpression .)
    COLON           reduce using rule 446 (andExpression -> equalityExpression .)
    AND             shift and go to state 223

    AND_equalityExpressions        shift and go to state 221
    AND_equalityExpression         shift and go to state 222

state 109

    (420) conditionalExpression -> conditionalOrExpression . conditionalExpressionStats
    (421) conditionalExpression -> conditionalOrExpression .
    (418) conditionalExpressionStats -> . conditionalExpressionStat
    (419) conditionalExpressionStats -> . conditionalExpressionStats conditionalExpressionStat
    (417) conditionalExpressionStat -> . QUES expression COLON expression

  ! shift/reduce conflict for QUES resolved as shift
    EQUALS          reduce using rule 421 (conditionalExpression -> conditionalOrExpression .)
    ASS_ADD         reduce using rule 421 (conditionalExpression -> conditionalOrExpression .)
    ASS_SUB         reduce using rule 421 (conditionalExpression -> conditionalOrExpression .)
    ASS_MUL         reduce using rule 421 (conditionalExpression -> conditionalOrExpression .)
    ASS_DIV         reduce using rule 421 (conditionalExpression -> conditionalOrExpression .)
    ASS_AND         reduce using rule 421 (conditionalExpression -> conditionalOrExpression .)
    ASS_OR          reduce using rule 421 (conditionalExpression -> conditionalOrExpression .)
    ASS_XOR         reduce using rule 421 (conditionalExpression -> conditionalOrExpression .)
    ASS_MOD         reduce using rule 421 (conditionalExpression -> conditionalOrExpression .)
    ASS_SHL         reduce using rule 421 (conditionalExpression -> conditionalOrExpression .)
    ASS_SHRR        reduce using rule 421 (conditionalExpression -> conditionalOrExpression .)
    ASS_SHR         reduce using rule 421 (conditionalExpression -> conditionalOrExpression .)
    SEMI            reduce using rule 421 (conditionalExpression -> conditionalOrExpression .)
    RPAREN          reduce using rule 421 (conditionalExpression -> conditionalOrExpression .)
    COMMA           reduce using rule 421 (conditionalExpression -> conditionalOrExpression .)
    FRPAREN         reduce using rule 421 (conditionalExpression -> conditionalOrExpression .)
    BRPAREN         reduce using rule 421 (conditionalExpression -> conditionalOrExpression .)
    COLON           reduce using rule 421 (conditionalExpression -> conditionalOrExpression .)
    QUES            shift and go to state 226

  ! QUES            [ reduce using rule 421 (conditionalExpression -> conditionalOrExpression .) ]

    conditionalExpressionStats     shift and go to state 225
    conditionalExpressionStat      shift and go to state 224

state 110

    (435) inclusiveOrExpression -> exclusiveOrExpression . V_exclusiveOrExpression
    (436) inclusiveOrExpression -> exclusiveOrExpression .
    (432) V_exclusiveOrExpression -> . VERTICAL exclusiveOrExpression

    OP_LAND         reduce using rule 436 (inclusiveOrExpression -> exclusiveOrExpression .)
    OP_LOR          reduce using rule 436 (inclusiveOrExpression -> exclusiveOrExpression .)
    QUES            reduce using rule 436 (inclusiveOrExpression -> exclusiveOrExpression .)
    RPAREN          reduce using rule 436 (inclusiveOrExpression -> exclusiveOrExpression .)
    COMMA           reduce using rule 436 (inclusiveOrExpression -> exclusiveOrExpression .)
    BRPAREN         reduce using rule 436 (inclusiveOrExpression -> exclusiveOrExpression .)
    EQUALS          reduce using rule 436 (inclusiveOrExpression -> exclusiveOrExpression .)
    ASS_ADD         reduce using rule 436 (inclusiveOrExpression -> exclusiveOrExpression .)
    ASS_SUB         reduce using rule 436 (inclusiveOrExpression -> exclusiveOrExpression .)
    ASS_MUL         reduce using rule 436 (inclusiveOrExpression -> exclusiveOrExpression .)
    ASS_DIV         reduce using rule 436 (inclusiveOrExpression -> exclusiveOrExpression .)
    ASS_AND         reduce using rule 436 (inclusiveOrExpression -> exclusiveOrExpression .)
    ASS_OR          reduce using rule 436 (inclusiveOrExpression -> exclusiveOrExpression .)
    ASS_XOR         reduce using rule 436 (inclusiveOrExpression -> exclusiveOrExpression .)
    ASS_MOD         reduce using rule 436 (inclusiveOrExpression -> exclusiveOrExpression .)
    ASS_SHL         reduce using rule 436 (inclusiveOrExpression -> exclusiveOrExpression .)
    ASS_SHRR        reduce using rule 436 (inclusiveOrExpression -> exclusiveOrExpression .)
    ASS_SHR         reduce using rule 436 (inclusiveOrExpression -> exclusiveOrExpression .)
    FRPAREN         reduce using rule 436 (inclusiveOrExpression -> exclusiveOrExpression .)
    COLON           reduce using rule 436 (inclusiveOrExpression -> exclusiveOrExpression .)
    SEMI            reduce using rule 436 (inclusiveOrExpression -> exclusiveOrExpression .)
    VERTICAL        shift and go to state 228

    V_exclusiveOrExpression        shift and go to state 227

state 111

    (499) unaryExpressionNotPlusMinus -> primary . selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> primary . INC_DEC_empty
    (494) selectors -> . selector
    (495) selectors -> . selectors selector
    (491) INC_DEC_empty -> . OP_INC
    (492) INC_DEC_empty -> . OP_DEC
    (493) INC_DEC_empty -> . empty
    (545) selector -> . DOT Identifier arguments_once
    (546) selector -> . DOT Identifier
    (547) selector -> . DOT THIS
    (548) selector -> . DOT SUPER superSuffix
    (549) selector -> . DOT NEW innerCreator
    (550) selector -> . FLPAREN expression FRPAREN
    (562) empty -> .

    OP_INC          shift and go to state 231
    OP_DEC          shift and go to state 233
    DOT             shift and go to state 235
    FLPAREN         shift and go to state 229
    MULT            reduce using rule 562 (empty -> .)
    SLASH           reduce using rule 562 (empty -> .)
    PERCENT         reduce using rule 562 (empty -> .)
    PLUS            reduce using rule 562 (empty -> .)
    DASH            reduce using rule 562 (empty -> .)
    OP_SHR          reduce using rule 562 (empty -> .)
    OP_SHRR         reduce using rule 562 (empty -> .)
    OP_SHL          reduce using rule 562 (empty -> .)
    OP_LE           reduce using rule 562 (empty -> .)
    OP_GE           reduce using rule 562 (empty -> .)
    LESS            reduce using rule 562 (empty -> .)
    MORE            reduce using rule 562 (empty -> .)
    INSTANCEOF      reduce using rule 562 (empty -> .)
    OP_EQ           reduce using rule 562 (empty -> .)
    OP_NE           reduce using rule 562 (empty -> .)
    AND             reduce using rule 562 (empty -> .)
    CARET           reduce using rule 562 (empty -> .)
    VERTICAL        reduce using rule 562 (empty -> .)
    OP_LAND         reduce using rule 562 (empty -> .)
    OP_LOR          reduce using rule 562 (empty -> .)
    QUES            reduce using rule 562 (empty -> .)
    RPAREN          reduce using rule 562 (empty -> .)
    COMMA           reduce using rule 562 (empty -> .)
    BRPAREN         reduce using rule 562 (empty -> .)
    EQUALS          reduce using rule 562 (empty -> .)
    ASS_ADD         reduce using rule 562 (empty -> .)
    ASS_SUB         reduce using rule 562 (empty -> .)
    ASS_MUL         reduce using rule 562 (empty -> .)
    ASS_DIV         reduce using rule 562 (empty -> .)
    ASS_AND         reduce using rule 562 (empty -> .)
    ASS_OR          reduce using rule 562 (empty -> .)
    ASS_XOR         reduce using rule 562 (empty -> .)
    ASS_MOD         reduce using rule 562 (empty -> .)
    ASS_SHL         reduce using rule 562 (empty -> .)
    ASS_SHRR        reduce using rule 562 (empty -> .)
    ASS_SHR         reduce using rule 562 (empty -> .)
    FRPAREN         reduce using rule 562 (empty -> .)
    COLON           reduce using rule 562 (empty -> .)
    SEMI            reduce using rule 562 (empty -> .)

    selector                       shift and go to state 230
    INC_DEC_empty                  shift and go to state 236
    selectors                      shift and go to state 234
    empty                          shift and go to state 232

state 112

    (488) unaryExpression -> OP_INC . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    unaryExpression                shift and go to state 237
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    primitiveType                  shift and go to state 122
    literal                        shift and go to state 116
    FloatingPointLiteral           shift and go to state 119
    booleanLiteral                 shift and go to state 92
    integerLiteral                 shift and go to state 98

state 113

    (561) integerLiteral -> LONG_HEX_NUMBER .

    OP_INC          reduce using rule 561 (integerLiteral -> LONG_HEX_NUMBER .)
    OP_DEC          reduce using rule 561 (integerLiteral -> LONG_HEX_NUMBER .)
    DOT             reduce using rule 561 (integerLiteral -> LONG_HEX_NUMBER .)
    FLPAREN         reduce using rule 561 (integerLiteral -> LONG_HEX_NUMBER .)
    MULT            reduce using rule 561 (integerLiteral -> LONG_HEX_NUMBER .)
    SLASH           reduce using rule 561 (integerLiteral -> LONG_HEX_NUMBER .)
    PERCENT         reduce using rule 561 (integerLiteral -> LONG_HEX_NUMBER .)
    PLUS            reduce using rule 561 (integerLiteral -> LONG_HEX_NUMBER .)
    DASH            reduce using rule 561 (integerLiteral -> LONG_HEX_NUMBER .)
    OP_SHR          reduce using rule 561 (integerLiteral -> LONG_HEX_NUMBER .)
    OP_SHRR         reduce using rule 561 (integerLiteral -> LONG_HEX_NUMBER .)
    OP_SHL          reduce using rule 561 (integerLiteral -> LONG_HEX_NUMBER .)
    OP_LE           reduce using rule 561 (integerLiteral -> LONG_HEX_NUMBER .)
    OP_GE           reduce using rule 561 (integerLiteral -> LONG_HEX_NUMBER .)
    LESS            reduce using rule 561 (integerLiteral -> LONG_HEX_NUMBER .)
    MORE            reduce using rule 561 (integerLiteral -> LONG_HEX_NUMBER .)
    INSTANCEOF      reduce using rule 561 (integerLiteral -> LONG_HEX_NUMBER .)
    OP_EQ           reduce using rule 561 (integerLiteral -> LONG_HEX_NUMBER .)
    OP_NE           reduce using rule 561 (integerLiteral -> LONG_HEX_NUMBER .)
    AND             reduce using rule 561 (integerLiteral -> LONG_HEX_NUMBER .)
    CARET           reduce using rule 561 (integerLiteral -> LONG_HEX_NUMBER .)
    VERTICAL        reduce using rule 561 (integerLiteral -> LONG_HEX_NUMBER .)
    OP_LAND         reduce using rule 561 (integerLiteral -> LONG_HEX_NUMBER .)
    OP_LOR          reduce using rule 561 (integerLiteral -> LONG_HEX_NUMBER .)
    QUES            reduce using rule 561 (integerLiteral -> LONG_HEX_NUMBER .)
    EQUALS          reduce using rule 561 (integerLiteral -> LONG_HEX_NUMBER .)
    ASS_ADD         reduce using rule 561 (integerLiteral -> LONG_HEX_NUMBER .)
    ASS_SUB         reduce using rule 561 (integerLiteral -> LONG_HEX_NUMBER .)
    ASS_MUL         reduce using rule 561 (integerLiteral -> LONG_HEX_NUMBER .)
    ASS_DIV         reduce using rule 561 (integerLiteral -> LONG_HEX_NUMBER .)
    ASS_AND         reduce using rule 561 (integerLiteral -> LONG_HEX_NUMBER .)
    ASS_OR          reduce using rule 561 (integerLiteral -> LONG_HEX_NUMBER .)
    ASS_XOR         reduce using rule 561 (integerLiteral -> LONG_HEX_NUMBER .)
    ASS_MOD         reduce using rule 561 (integerLiteral -> LONG_HEX_NUMBER .)
    ASS_SHL         reduce using rule 561 (integerLiteral -> LONG_HEX_NUMBER .)
    ASS_SHRR        reduce using rule 561 (integerLiteral -> LONG_HEX_NUMBER .)
    ASS_SHR         reduce using rule 561 (integerLiteral -> LONG_HEX_NUMBER .)
    SEMI            reduce using rule 561 (integerLiteral -> LONG_HEX_NUMBER .)
    RPAREN          reduce using rule 561 (integerLiteral -> LONG_HEX_NUMBER .)
    COMMA           reduce using rule 561 (integerLiteral -> LONG_HEX_NUMBER .)
    BRPAREN         reduce using rule 561 (integerLiteral -> LONG_HEX_NUMBER .)
    FRPAREN         reduce using rule 561 (integerLiteral -> LONG_HEX_NUMBER .)
    COLON           reduce using rule 561 (integerLiteral -> LONG_HEX_NUMBER .)


state 114

    (489) unaryExpression -> OP_DEC . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    unaryExpression                shift and go to state 238
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    primitiveType                  shift and go to state 122
    literal                        shift and go to state 116
    FloatingPointLiteral           shift and go to state 119
    booleanLiteral                 shift and go to state 92
    integerLiteral                 shift and go to state 98

state 115

    (511) primary -> NEW . creator
    (528) creator -> . nonWildcardTypeArguments createdName classCreatorRest
    (529) creator -> . createdName arrayCreatorRest
    (530) creator -> . createdName classCreatorRest
    (544) nonWildcardTypeArguments -> . LESS typeList MORE
    (531) createdName -> . classOrInterfaceType
    (532) createdName -> . primitiveType
    (219) classOrInterfaceType -> . Identifier classOrInterfaceTypeBody
    (220) classOrInterfaceType -> . Identifier
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE

    LESS            shift and go to state 242
    Identifier      shift and go to state 239
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72

    creator                        shift and go to state 240
    createdName                    shift and go to state 241
    classOrInterfaceType           shift and go to state 243
    primitiveType                  shift and go to state 244
    nonWildcardTypeArguments       shift and go to state 245

state 116

    (510) primary -> literal .

    OP_INC          reduce using rule 510 (primary -> literal .)
    OP_DEC          reduce using rule 510 (primary -> literal .)
    DOT             reduce using rule 510 (primary -> literal .)
    FLPAREN         reduce using rule 510 (primary -> literal .)
    MULT            reduce using rule 510 (primary -> literal .)
    SLASH           reduce using rule 510 (primary -> literal .)
    PERCENT         reduce using rule 510 (primary -> literal .)
    PLUS            reduce using rule 510 (primary -> literal .)
    DASH            reduce using rule 510 (primary -> literal .)
    OP_SHR          reduce using rule 510 (primary -> literal .)
    OP_SHRR         reduce using rule 510 (primary -> literal .)
    OP_SHL          reduce using rule 510 (primary -> literal .)
    OP_LE           reduce using rule 510 (primary -> literal .)
    OP_GE           reduce using rule 510 (primary -> literal .)
    LESS            reduce using rule 510 (primary -> literal .)
    MORE            reduce using rule 510 (primary -> literal .)
    INSTANCEOF      reduce using rule 510 (primary -> literal .)
    OP_EQ           reduce using rule 510 (primary -> literal .)
    OP_NE           reduce using rule 510 (primary -> literal .)
    AND             reduce using rule 510 (primary -> literal .)
    CARET           reduce using rule 510 (primary -> literal .)
    VERTICAL        reduce using rule 510 (primary -> literal .)
    OP_LAND         reduce using rule 510 (primary -> literal .)
    OP_LOR          reduce using rule 510 (primary -> literal .)
    QUES            reduce using rule 510 (primary -> literal .)
    EQUALS          reduce using rule 510 (primary -> literal .)
    ASS_ADD         reduce using rule 510 (primary -> literal .)
    ASS_SUB         reduce using rule 510 (primary -> literal .)
    ASS_MUL         reduce using rule 510 (primary -> literal .)
    ASS_DIV         reduce using rule 510 (primary -> literal .)
    ASS_AND         reduce using rule 510 (primary -> literal .)
    ASS_OR          reduce using rule 510 (primary -> literal .)
    ASS_XOR         reduce using rule 510 (primary -> literal .)
    ASS_MOD         reduce using rule 510 (primary -> literal .)
    ASS_SHL         reduce using rule 510 (primary -> literal .)
    ASS_SHRR        reduce using rule 510 (primary -> literal .)
    ASS_SHR         reduce using rule 510 (primary -> literal .)
    FRPAREN         reduce using rule 510 (primary -> literal .)
    SEMI            reduce using rule 510 (primary -> literal .)
    COMMA           reduce using rule 510 (primary -> literal .)
    BRPAREN         reduce using rule 510 (primary -> literal .)
    RPAREN          reduce using rule 510 (primary -> literal .)
    COLON           reduce using rule 510 (primary -> literal .)


state 117

    (496) unaryExpressionNotPlusMinus -> TILDE . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    unaryExpression                shift and go to state 246
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    primitiveType                  shift and go to state 122
    literal                        shift and go to state 116
    FloatingPointLiteral           shift and go to state 119
    booleanLiteral                 shift and go to state 92
    integerLiteral                 shift and go to state 98

state 118

    (296) elementValue -> conditionalExpression .

    RPAREN          reduce using rule 296 (elementValue -> conditionalExpression .)
    COMMA           reduce using rule 296 (elementValue -> conditionalExpression .)
    BRPAREN         reduce using rule 296 (elementValue -> conditionalExpression .)
    SEMI            reduce using rule 296 (elementValue -> conditionalExpression .)


state 119

    (274) literal -> FloatingPointLiteral .

    OP_INC          reduce using rule 274 (literal -> FloatingPointLiteral .)
    OP_DEC          reduce using rule 274 (literal -> FloatingPointLiteral .)
    DOT             reduce using rule 274 (literal -> FloatingPointLiteral .)
    FLPAREN         reduce using rule 274 (literal -> FloatingPointLiteral .)
    MULT            reduce using rule 274 (literal -> FloatingPointLiteral .)
    SLASH           reduce using rule 274 (literal -> FloatingPointLiteral .)
    PERCENT         reduce using rule 274 (literal -> FloatingPointLiteral .)
    PLUS            reduce using rule 274 (literal -> FloatingPointLiteral .)
    DASH            reduce using rule 274 (literal -> FloatingPointLiteral .)
    OP_SHR          reduce using rule 274 (literal -> FloatingPointLiteral .)
    OP_SHRR         reduce using rule 274 (literal -> FloatingPointLiteral .)
    OP_SHL          reduce using rule 274 (literal -> FloatingPointLiteral .)
    OP_LE           reduce using rule 274 (literal -> FloatingPointLiteral .)
    OP_GE           reduce using rule 274 (literal -> FloatingPointLiteral .)
    LESS            reduce using rule 274 (literal -> FloatingPointLiteral .)
    MORE            reduce using rule 274 (literal -> FloatingPointLiteral .)
    INSTANCEOF      reduce using rule 274 (literal -> FloatingPointLiteral .)
    OP_EQ           reduce using rule 274 (literal -> FloatingPointLiteral .)
    OP_NE           reduce using rule 274 (literal -> FloatingPointLiteral .)
    AND             reduce using rule 274 (literal -> FloatingPointLiteral .)
    CARET           reduce using rule 274 (literal -> FloatingPointLiteral .)
    VERTICAL        reduce using rule 274 (literal -> FloatingPointLiteral .)
    OP_LAND         reduce using rule 274 (literal -> FloatingPointLiteral .)
    OP_LOR          reduce using rule 274 (literal -> FloatingPointLiteral .)
    QUES            reduce using rule 274 (literal -> FloatingPointLiteral .)
    EQUALS          reduce using rule 274 (literal -> FloatingPointLiteral .)
    ASS_ADD         reduce using rule 274 (literal -> FloatingPointLiteral .)
    ASS_SUB         reduce using rule 274 (literal -> FloatingPointLiteral .)
    ASS_MUL         reduce using rule 274 (literal -> FloatingPointLiteral .)
    ASS_DIV         reduce using rule 274 (literal -> FloatingPointLiteral .)
    ASS_AND         reduce using rule 274 (literal -> FloatingPointLiteral .)
    ASS_OR          reduce using rule 274 (literal -> FloatingPointLiteral .)
    ASS_XOR         reduce using rule 274 (literal -> FloatingPointLiteral .)
    ASS_MOD         reduce using rule 274 (literal -> FloatingPointLiteral .)
    ASS_SHL         reduce using rule 274 (literal -> FloatingPointLiteral .)
    ASS_SHRR        reduce using rule 274 (literal -> FloatingPointLiteral .)
    ASS_SHR         reduce using rule 274 (literal -> FloatingPointLiteral .)
    COMMA           reduce using rule 274 (literal -> FloatingPointLiteral .)
    RPAREN          reduce using rule 274 (literal -> FloatingPointLiteral .)
    SEMI            reduce using rule 274 (literal -> FloatingPointLiteral .)
    BRPAREN         reduce using rule 274 (literal -> FloatingPointLiteral .)
    FRPAREN         reduce using rule 274 (literal -> FloatingPointLiteral .)
    COLON           reduce using rule 274 (literal -> FloatingPointLiteral .)


state 120

    (280) booleanLiteral -> FALSE .

    OP_INC          reduce using rule 280 (booleanLiteral -> FALSE .)
    OP_DEC          reduce using rule 280 (booleanLiteral -> FALSE .)
    DOT             reduce using rule 280 (booleanLiteral -> FALSE .)
    FLPAREN         reduce using rule 280 (booleanLiteral -> FALSE .)
    MULT            reduce using rule 280 (booleanLiteral -> FALSE .)
    SLASH           reduce using rule 280 (booleanLiteral -> FALSE .)
    PERCENT         reduce using rule 280 (booleanLiteral -> FALSE .)
    PLUS            reduce using rule 280 (booleanLiteral -> FALSE .)
    DASH            reduce using rule 280 (booleanLiteral -> FALSE .)
    OP_SHR          reduce using rule 280 (booleanLiteral -> FALSE .)
    OP_SHRR         reduce using rule 280 (booleanLiteral -> FALSE .)
    OP_SHL          reduce using rule 280 (booleanLiteral -> FALSE .)
    OP_LE           reduce using rule 280 (booleanLiteral -> FALSE .)
    OP_GE           reduce using rule 280 (booleanLiteral -> FALSE .)
    LESS            reduce using rule 280 (booleanLiteral -> FALSE .)
    MORE            reduce using rule 280 (booleanLiteral -> FALSE .)
    INSTANCEOF      reduce using rule 280 (booleanLiteral -> FALSE .)
    OP_EQ           reduce using rule 280 (booleanLiteral -> FALSE .)
    OP_NE           reduce using rule 280 (booleanLiteral -> FALSE .)
    AND             reduce using rule 280 (booleanLiteral -> FALSE .)
    CARET           reduce using rule 280 (booleanLiteral -> FALSE .)
    VERTICAL        reduce using rule 280 (booleanLiteral -> FALSE .)
    OP_LAND         reduce using rule 280 (booleanLiteral -> FALSE .)
    OP_LOR          reduce using rule 280 (booleanLiteral -> FALSE .)
    QUES            reduce using rule 280 (booleanLiteral -> FALSE .)
    EQUALS          reduce using rule 280 (booleanLiteral -> FALSE .)
    ASS_ADD         reduce using rule 280 (booleanLiteral -> FALSE .)
    ASS_SUB         reduce using rule 280 (booleanLiteral -> FALSE .)
    ASS_MUL         reduce using rule 280 (booleanLiteral -> FALSE .)
    ASS_DIV         reduce using rule 280 (booleanLiteral -> FALSE .)
    ASS_AND         reduce using rule 280 (booleanLiteral -> FALSE .)
    ASS_OR          reduce using rule 280 (booleanLiteral -> FALSE .)
    ASS_XOR         reduce using rule 280 (booleanLiteral -> FALSE .)
    ASS_MOD         reduce using rule 280 (booleanLiteral -> FALSE .)
    ASS_SHL         reduce using rule 280 (booleanLiteral -> FALSE .)
    ASS_SHRR        reduce using rule 280 (booleanLiteral -> FALSE .)
    ASS_SHR         reduce using rule 280 (booleanLiteral -> FALSE .)
    COLON           reduce using rule 280 (booleanLiteral -> FALSE .)
    COMMA           reduce using rule 280 (booleanLiteral -> FALSE .)
    SEMI            reduce using rule 280 (booleanLiteral -> FALSE .)
    RPAREN          reduce using rule 280 (booleanLiteral -> FALSE .)
    BRPAREN         reduce using rule 280 (booleanLiteral -> FALSE .)
    FRPAREN         reduce using rule 280 (booleanLiteral -> FALSE .)


state 121

    (276) literal -> StringLiteral .

    OP_INC          reduce using rule 276 (literal -> StringLiteral .)
    OP_DEC          reduce using rule 276 (literal -> StringLiteral .)
    DOT             reduce using rule 276 (literal -> StringLiteral .)
    FLPAREN         reduce using rule 276 (literal -> StringLiteral .)
    MULT            reduce using rule 276 (literal -> StringLiteral .)
    SLASH           reduce using rule 276 (literal -> StringLiteral .)
    PERCENT         reduce using rule 276 (literal -> StringLiteral .)
    PLUS            reduce using rule 276 (literal -> StringLiteral .)
    DASH            reduce using rule 276 (literal -> StringLiteral .)
    OP_SHR          reduce using rule 276 (literal -> StringLiteral .)
    OP_SHRR         reduce using rule 276 (literal -> StringLiteral .)
    OP_SHL          reduce using rule 276 (literal -> StringLiteral .)
    OP_LE           reduce using rule 276 (literal -> StringLiteral .)
    OP_GE           reduce using rule 276 (literal -> StringLiteral .)
    LESS            reduce using rule 276 (literal -> StringLiteral .)
    MORE            reduce using rule 276 (literal -> StringLiteral .)
    INSTANCEOF      reduce using rule 276 (literal -> StringLiteral .)
    OP_EQ           reduce using rule 276 (literal -> StringLiteral .)
    OP_NE           reduce using rule 276 (literal -> StringLiteral .)
    AND             reduce using rule 276 (literal -> StringLiteral .)
    CARET           reduce using rule 276 (literal -> StringLiteral .)
    VERTICAL        reduce using rule 276 (literal -> StringLiteral .)
    OP_LAND         reduce using rule 276 (literal -> StringLiteral .)
    OP_LOR          reduce using rule 276 (literal -> StringLiteral .)
    QUES            reduce using rule 276 (literal -> StringLiteral .)
    EQUALS          reduce using rule 276 (literal -> StringLiteral .)
    ASS_ADD         reduce using rule 276 (literal -> StringLiteral .)
    ASS_SUB         reduce using rule 276 (literal -> StringLiteral .)
    ASS_MUL         reduce using rule 276 (literal -> StringLiteral .)
    ASS_DIV         reduce using rule 276 (literal -> StringLiteral .)
    ASS_AND         reduce using rule 276 (literal -> StringLiteral .)
    ASS_OR          reduce using rule 276 (literal -> StringLiteral .)
    ASS_XOR         reduce using rule 276 (literal -> StringLiteral .)
    ASS_MOD         reduce using rule 276 (literal -> StringLiteral .)
    ASS_SHL         reduce using rule 276 (literal -> StringLiteral .)
    ASS_SHRR        reduce using rule 276 (literal -> StringLiteral .)
    ASS_SHR         reduce using rule 276 (literal -> StringLiteral .)
    COMMA           reduce using rule 276 (literal -> StringLiteral .)
    RPAREN          reduce using rule 276 (literal -> StringLiteral .)
    SEMI            reduce using rule 276 (literal -> StringLiteral .)
    BRPAREN         reduce using rule 276 (literal -> StringLiteral .)
    FRPAREN         reduce using rule 276 (literal -> StringLiteral .)
    COLON           reduce using rule 276 (literal -> StringLiteral .)


state 122

    (514) primary -> primitiveType . arrays DOT CLASS
    (515) primary -> primitiveType . DOT CLASS
    (138) arrays -> . arrays array
    (139) arrays -> . array
    (137) array -> . FLPAREN FRPAREN

    DOT             shift and go to state 248
    FLPAREN         shift and go to state 153

    arrays                         shift and go to state 247
    array                          shift and go to state 154

state 123

    (298) elementValue -> elementValueArrayInitializer .

    RPAREN          reduce using rule 298 (elementValue -> elementValueArrayInitializer .)
    COMMA           reduce using rule 298 (elementValue -> elementValueArrayInitializer .)
    BRPAREN         reduce using rule 298 (elementValue -> elementValueArrayInitializer .)
    SEMI            reduce using rule 298 (elementValue -> elementValueArrayInitializer .)


state 124

    (559) FloatingPointLiteral -> NON_INTEGER_4 .

    OP_INC          reduce using rule 559 (FloatingPointLiteral -> NON_INTEGER_4 .)
    OP_DEC          reduce using rule 559 (FloatingPointLiteral -> NON_INTEGER_4 .)
    DOT             reduce using rule 559 (FloatingPointLiteral -> NON_INTEGER_4 .)
    FLPAREN         reduce using rule 559 (FloatingPointLiteral -> NON_INTEGER_4 .)
    MULT            reduce using rule 559 (FloatingPointLiteral -> NON_INTEGER_4 .)
    SLASH           reduce using rule 559 (FloatingPointLiteral -> NON_INTEGER_4 .)
    PERCENT         reduce using rule 559 (FloatingPointLiteral -> NON_INTEGER_4 .)
    PLUS            reduce using rule 559 (FloatingPointLiteral -> NON_INTEGER_4 .)
    DASH            reduce using rule 559 (FloatingPointLiteral -> NON_INTEGER_4 .)
    OP_SHR          reduce using rule 559 (FloatingPointLiteral -> NON_INTEGER_4 .)
    OP_SHRR         reduce using rule 559 (FloatingPointLiteral -> NON_INTEGER_4 .)
    OP_SHL          reduce using rule 559 (FloatingPointLiteral -> NON_INTEGER_4 .)
    OP_LE           reduce using rule 559 (FloatingPointLiteral -> NON_INTEGER_4 .)
    OP_GE           reduce using rule 559 (FloatingPointLiteral -> NON_INTEGER_4 .)
    LESS            reduce using rule 559 (FloatingPointLiteral -> NON_INTEGER_4 .)
    MORE            reduce using rule 559 (FloatingPointLiteral -> NON_INTEGER_4 .)
    INSTANCEOF      reduce using rule 559 (FloatingPointLiteral -> NON_INTEGER_4 .)
    OP_EQ           reduce using rule 559 (FloatingPointLiteral -> NON_INTEGER_4 .)
    OP_NE           reduce using rule 559 (FloatingPointLiteral -> NON_INTEGER_4 .)
    AND             reduce using rule 559 (FloatingPointLiteral -> NON_INTEGER_4 .)
    CARET           reduce using rule 559 (FloatingPointLiteral -> NON_INTEGER_4 .)
    VERTICAL        reduce using rule 559 (FloatingPointLiteral -> NON_INTEGER_4 .)
    OP_LAND         reduce using rule 559 (FloatingPointLiteral -> NON_INTEGER_4 .)
    OP_LOR          reduce using rule 559 (FloatingPointLiteral -> NON_INTEGER_4 .)
    QUES            reduce using rule 559 (FloatingPointLiteral -> NON_INTEGER_4 .)
    RPAREN          reduce using rule 559 (FloatingPointLiteral -> NON_INTEGER_4 .)
    COMMA           reduce using rule 559 (FloatingPointLiteral -> NON_INTEGER_4 .)
    BRPAREN         reduce using rule 559 (FloatingPointLiteral -> NON_INTEGER_4 .)
    EQUALS          reduce using rule 559 (FloatingPointLiteral -> NON_INTEGER_4 .)
    ASS_ADD         reduce using rule 559 (FloatingPointLiteral -> NON_INTEGER_4 .)
    ASS_SUB         reduce using rule 559 (FloatingPointLiteral -> NON_INTEGER_4 .)
    ASS_MUL         reduce using rule 559 (FloatingPointLiteral -> NON_INTEGER_4 .)
    ASS_DIV         reduce using rule 559 (FloatingPointLiteral -> NON_INTEGER_4 .)
    ASS_AND         reduce using rule 559 (FloatingPointLiteral -> NON_INTEGER_4 .)
    ASS_OR          reduce using rule 559 (FloatingPointLiteral -> NON_INTEGER_4 .)
    ASS_XOR         reduce using rule 559 (FloatingPointLiteral -> NON_INTEGER_4 .)
    ASS_MOD         reduce using rule 559 (FloatingPointLiteral -> NON_INTEGER_4 .)
    ASS_SHL         reduce using rule 559 (FloatingPointLiteral -> NON_INTEGER_4 .)
    ASS_SHRR        reduce using rule 559 (FloatingPointLiteral -> NON_INTEGER_4 .)
    ASS_SHR         reduce using rule 559 (FloatingPointLiteral -> NON_INTEGER_4 .)
    FRPAREN         reduce using rule 559 (FloatingPointLiteral -> NON_INTEGER_4 .)
    COLON           reduce using rule 559 (FloatingPointLiteral -> NON_INTEGER_4 .)
    SEMI            reduce using rule 559 (FloatingPointLiteral -> NON_INTEGER_4 .)


state 125

    (557) FloatingPointLiteral -> NON_INTEGER_2 .

    OP_INC          reduce using rule 557 (FloatingPointLiteral -> NON_INTEGER_2 .)
    OP_DEC          reduce using rule 557 (FloatingPointLiteral -> NON_INTEGER_2 .)
    DOT             reduce using rule 557 (FloatingPointLiteral -> NON_INTEGER_2 .)
    FLPAREN         reduce using rule 557 (FloatingPointLiteral -> NON_INTEGER_2 .)
    MULT            reduce using rule 557 (FloatingPointLiteral -> NON_INTEGER_2 .)
    SLASH           reduce using rule 557 (FloatingPointLiteral -> NON_INTEGER_2 .)
    PERCENT         reduce using rule 557 (FloatingPointLiteral -> NON_INTEGER_2 .)
    PLUS            reduce using rule 557 (FloatingPointLiteral -> NON_INTEGER_2 .)
    DASH            reduce using rule 557 (FloatingPointLiteral -> NON_INTEGER_2 .)
    OP_SHR          reduce using rule 557 (FloatingPointLiteral -> NON_INTEGER_2 .)
    OP_SHRR         reduce using rule 557 (FloatingPointLiteral -> NON_INTEGER_2 .)
    OP_SHL          reduce using rule 557 (FloatingPointLiteral -> NON_INTEGER_2 .)
    OP_LE           reduce using rule 557 (FloatingPointLiteral -> NON_INTEGER_2 .)
    OP_GE           reduce using rule 557 (FloatingPointLiteral -> NON_INTEGER_2 .)
    LESS            reduce using rule 557 (FloatingPointLiteral -> NON_INTEGER_2 .)
    MORE            reduce using rule 557 (FloatingPointLiteral -> NON_INTEGER_2 .)
    INSTANCEOF      reduce using rule 557 (FloatingPointLiteral -> NON_INTEGER_2 .)
    OP_EQ           reduce using rule 557 (FloatingPointLiteral -> NON_INTEGER_2 .)
    OP_NE           reduce using rule 557 (FloatingPointLiteral -> NON_INTEGER_2 .)
    AND             reduce using rule 557 (FloatingPointLiteral -> NON_INTEGER_2 .)
    CARET           reduce using rule 557 (FloatingPointLiteral -> NON_INTEGER_2 .)
    VERTICAL        reduce using rule 557 (FloatingPointLiteral -> NON_INTEGER_2 .)
    OP_LAND         reduce using rule 557 (FloatingPointLiteral -> NON_INTEGER_2 .)
    OP_LOR          reduce using rule 557 (FloatingPointLiteral -> NON_INTEGER_2 .)
    QUES            reduce using rule 557 (FloatingPointLiteral -> NON_INTEGER_2 .)
    RPAREN          reduce using rule 557 (FloatingPointLiteral -> NON_INTEGER_2 .)
    COMMA           reduce using rule 557 (FloatingPointLiteral -> NON_INTEGER_2 .)
    BRPAREN         reduce using rule 557 (FloatingPointLiteral -> NON_INTEGER_2 .)
    EQUALS          reduce using rule 557 (FloatingPointLiteral -> NON_INTEGER_2 .)
    ASS_ADD         reduce using rule 557 (FloatingPointLiteral -> NON_INTEGER_2 .)
    ASS_SUB         reduce using rule 557 (FloatingPointLiteral -> NON_INTEGER_2 .)
    ASS_MUL         reduce using rule 557 (FloatingPointLiteral -> NON_INTEGER_2 .)
    ASS_DIV         reduce using rule 557 (FloatingPointLiteral -> NON_INTEGER_2 .)
    ASS_AND         reduce using rule 557 (FloatingPointLiteral -> NON_INTEGER_2 .)
    ASS_OR          reduce using rule 557 (FloatingPointLiteral -> NON_INTEGER_2 .)
    ASS_XOR         reduce using rule 557 (FloatingPointLiteral -> NON_INTEGER_2 .)
    ASS_MOD         reduce using rule 557 (FloatingPointLiteral -> NON_INTEGER_2 .)
    ASS_SHL         reduce using rule 557 (FloatingPointLiteral -> NON_INTEGER_2 .)
    ASS_SHRR        reduce using rule 557 (FloatingPointLiteral -> NON_INTEGER_2 .)
    ASS_SHR         reduce using rule 557 (FloatingPointLiteral -> NON_INTEGER_2 .)
    FRPAREN         reduce using rule 557 (FloatingPointLiteral -> NON_INTEGER_2 .)
    COLON           reduce using rule 557 (FloatingPointLiteral -> NON_INTEGER_2 .)
    SEMI            reduce using rule 557 (FloatingPointLiteral -> NON_INTEGER_2 .)


state 126

    (558) FloatingPointLiteral -> NON_INTEGER_3 .

    OP_INC          reduce using rule 558 (FloatingPointLiteral -> NON_INTEGER_3 .)
    OP_DEC          reduce using rule 558 (FloatingPointLiteral -> NON_INTEGER_3 .)
    DOT             reduce using rule 558 (FloatingPointLiteral -> NON_INTEGER_3 .)
    FLPAREN         reduce using rule 558 (FloatingPointLiteral -> NON_INTEGER_3 .)
    MULT            reduce using rule 558 (FloatingPointLiteral -> NON_INTEGER_3 .)
    SLASH           reduce using rule 558 (FloatingPointLiteral -> NON_INTEGER_3 .)
    PERCENT         reduce using rule 558 (FloatingPointLiteral -> NON_INTEGER_3 .)
    PLUS            reduce using rule 558 (FloatingPointLiteral -> NON_INTEGER_3 .)
    DASH            reduce using rule 558 (FloatingPointLiteral -> NON_INTEGER_3 .)
    OP_SHR          reduce using rule 558 (FloatingPointLiteral -> NON_INTEGER_3 .)
    OP_SHRR         reduce using rule 558 (FloatingPointLiteral -> NON_INTEGER_3 .)
    OP_SHL          reduce using rule 558 (FloatingPointLiteral -> NON_INTEGER_3 .)
    OP_LE           reduce using rule 558 (FloatingPointLiteral -> NON_INTEGER_3 .)
    OP_GE           reduce using rule 558 (FloatingPointLiteral -> NON_INTEGER_3 .)
    LESS            reduce using rule 558 (FloatingPointLiteral -> NON_INTEGER_3 .)
    MORE            reduce using rule 558 (FloatingPointLiteral -> NON_INTEGER_3 .)
    INSTANCEOF      reduce using rule 558 (FloatingPointLiteral -> NON_INTEGER_3 .)
    OP_EQ           reduce using rule 558 (FloatingPointLiteral -> NON_INTEGER_3 .)
    OP_NE           reduce using rule 558 (FloatingPointLiteral -> NON_INTEGER_3 .)
    AND             reduce using rule 558 (FloatingPointLiteral -> NON_INTEGER_3 .)
    CARET           reduce using rule 558 (FloatingPointLiteral -> NON_INTEGER_3 .)
    VERTICAL        reduce using rule 558 (FloatingPointLiteral -> NON_INTEGER_3 .)
    OP_LAND         reduce using rule 558 (FloatingPointLiteral -> NON_INTEGER_3 .)
    OP_LOR          reduce using rule 558 (FloatingPointLiteral -> NON_INTEGER_3 .)
    QUES            reduce using rule 558 (FloatingPointLiteral -> NON_INTEGER_3 .)
    RPAREN          reduce using rule 558 (FloatingPointLiteral -> NON_INTEGER_3 .)
    COMMA           reduce using rule 558 (FloatingPointLiteral -> NON_INTEGER_3 .)
    BRPAREN         reduce using rule 558 (FloatingPointLiteral -> NON_INTEGER_3 .)
    EQUALS          reduce using rule 558 (FloatingPointLiteral -> NON_INTEGER_3 .)
    ASS_ADD         reduce using rule 558 (FloatingPointLiteral -> NON_INTEGER_3 .)
    ASS_SUB         reduce using rule 558 (FloatingPointLiteral -> NON_INTEGER_3 .)
    ASS_MUL         reduce using rule 558 (FloatingPointLiteral -> NON_INTEGER_3 .)
    ASS_DIV         reduce using rule 558 (FloatingPointLiteral -> NON_INTEGER_3 .)
    ASS_AND         reduce using rule 558 (FloatingPointLiteral -> NON_INTEGER_3 .)
    ASS_OR          reduce using rule 558 (FloatingPointLiteral -> NON_INTEGER_3 .)
    ASS_XOR         reduce using rule 558 (FloatingPointLiteral -> NON_INTEGER_3 .)
    ASS_MOD         reduce using rule 558 (FloatingPointLiteral -> NON_INTEGER_3 .)
    ASS_SHL         reduce using rule 558 (FloatingPointLiteral -> NON_INTEGER_3 .)
    ASS_SHRR        reduce using rule 558 (FloatingPointLiteral -> NON_INTEGER_3 .)
    ASS_SHR         reduce using rule 558 (FloatingPointLiteral -> NON_INTEGER_3 .)
    FRPAREN         reduce using rule 558 (FloatingPointLiteral -> NON_INTEGER_3 .)
    COLON           reduce using rule 558 (FloatingPointLiteral -> NON_INTEGER_3 .)
    SEMI            reduce using rule 558 (FloatingPointLiteral -> NON_INTEGER_3 .)


state 127

    (556) FloatingPointLiteral -> NON_INTEGER_1 .

    OP_INC          reduce using rule 556 (FloatingPointLiteral -> NON_INTEGER_1 .)
    OP_DEC          reduce using rule 556 (FloatingPointLiteral -> NON_INTEGER_1 .)
    DOT             reduce using rule 556 (FloatingPointLiteral -> NON_INTEGER_1 .)
    FLPAREN         reduce using rule 556 (FloatingPointLiteral -> NON_INTEGER_1 .)
    MULT            reduce using rule 556 (FloatingPointLiteral -> NON_INTEGER_1 .)
    SLASH           reduce using rule 556 (FloatingPointLiteral -> NON_INTEGER_1 .)
    PERCENT         reduce using rule 556 (FloatingPointLiteral -> NON_INTEGER_1 .)
    PLUS            reduce using rule 556 (FloatingPointLiteral -> NON_INTEGER_1 .)
    DASH            reduce using rule 556 (FloatingPointLiteral -> NON_INTEGER_1 .)
    OP_SHR          reduce using rule 556 (FloatingPointLiteral -> NON_INTEGER_1 .)
    OP_SHRR         reduce using rule 556 (FloatingPointLiteral -> NON_INTEGER_1 .)
    OP_SHL          reduce using rule 556 (FloatingPointLiteral -> NON_INTEGER_1 .)
    OP_LE           reduce using rule 556 (FloatingPointLiteral -> NON_INTEGER_1 .)
    OP_GE           reduce using rule 556 (FloatingPointLiteral -> NON_INTEGER_1 .)
    LESS            reduce using rule 556 (FloatingPointLiteral -> NON_INTEGER_1 .)
    MORE            reduce using rule 556 (FloatingPointLiteral -> NON_INTEGER_1 .)
    INSTANCEOF      reduce using rule 556 (FloatingPointLiteral -> NON_INTEGER_1 .)
    OP_EQ           reduce using rule 556 (FloatingPointLiteral -> NON_INTEGER_1 .)
    OP_NE           reduce using rule 556 (FloatingPointLiteral -> NON_INTEGER_1 .)
    AND             reduce using rule 556 (FloatingPointLiteral -> NON_INTEGER_1 .)
    CARET           reduce using rule 556 (FloatingPointLiteral -> NON_INTEGER_1 .)
    VERTICAL        reduce using rule 556 (FloatingPointLiteral -> NON_INTEGER_1 .)
    OP_LAND         reduce using rule 556 (FloatingPointLiteral -> NON_INTEGER_1 .)
    OP_LOR          reduce using rule 556 (FloatingPointLiteral -> NON_INTEGER_1 .)
    QUES            reduce using rule 556 (FloatingPointLiteral -> NON_INTEGER_1 .)
    RPAREN          reduce using rule 556 (FloatingPointLiteral -> NON_INTEGER_1 .)
    COMMA           reduce using rule 556 (FloatingPointLiteral -> NON_INTEGER_1 .)
    BRPAREN         reduce using rule 556 (FloatingPointLiteral -> NON_INTEGER_1 .)
    EQUALS          reduce using rule 556 (FloatingPointLiteral -> NON_INTEGER_1 .)
    ASS_ADD         reduce using rule 556 (FloatingPointLiteral -> NON_INTEGER_1 .)
    ASS_SUB         reduce using rule 556 (FloatingPointLiteral -> NON_INTEGER_1 .)
    ASS_MUL         reduce using rule 556 (FloatingPointLiteral -> NON_INTEGER_1 .)
    ASS_DIV         reduce using rule 556 (FloatingPointLiteral -> NON_INTEGER_1 .)
    ASS_AND         reduce using rule 556 (FloatingPointLiteral -> NON_INTEGER_1 .)
    ASS_OR          reduce using rule 556 (FloatingPointLiteral -> NON_INTEGER_1 .)
    ASS_XOR         reduce using rule 556 (FloatingPointLiteral -> NON_INTEGER_1 .)
    ASS_MOD         reduce using rule 556 (FloatingPointLiteral -> NON_INTEGER_1 .)
    ASS_SHL         reduce using rule 556 (FloatingPointLiteral -> NON_INTEGER_1 .)
    ASS_SHRR        reduce using rule 556 (FloatingPointLiteral -> NON_INTEGER_1 .)
    ASS_SHR         reduce using rule 556 (FloatingPointLiteral -> NON_INTEGER_1 .)
    FRPAREN         reduce using rule 556 (FloatingPointLiteral -> NON_INTEGER_1 .)
    COLON           reduce using rule 556 (FloatingPointLiteral -> NON_INTEGER_1 .)
    SEMI            reduce using rule 556 (FloatingPointLiteral -> NON_INTEGER_1 .)


state 128

    (477) additiveExpression -> multiplicativeExpression . add_multiplicativeExpressions
    (478) additiveExpression -> multiplicativeExpression .
    (475) add_multiplicativeExpressions -> . add_multiplicativeExpression
    (476) add_multiplicativeExpressions -> . add_multiplicativeExpressions add_multiplicativeExpression
    (473) add_multiplicativeExpression -> . PLUS multiplicativeExpression
    (474) add_multiplicativeExpression -> . DASH multiplicativeExpression

    OP_SHR          reduce using rule 478 (additiveExpression -> multiplicativeExpression .)
    OP_SHRR         reduce using rule 478 (additiveExpression -> multiplicativeExpression .)
    OP_SHL          reduce using rule 478 (additiveExpression -> multiplicativeExpression .)
    OP_LE           reduce using rule 478 (additiveExpression -> multiplicativeExpression .)
    OP_GE           reduce using rule 478 (additiveExpression -> multiplicativeExpression .)
    LESS            reduce using rule 478 (additiveExpression -> multiplicativeExpression .)
    MORE            reduce using rule 478 (additiveExpression -> multiplicativeExpression .)
    INSTANCEOF      reduce using rule 478 (additiveExpression -> multiplicativeExpression .)
    OP_EQ           reduce using rule 478 (additiveExpression -> multiplicativeExpression .)
    OP_NE           reduce using rule 478 (additiveExpression -> multiplicativeExpression .)
    AND             reduce using rule 478 (additiveExpression -> multiplicativeExpression .)
    CARET           reduce using rule 478 (additiveExpression -> multiplicativeExpression .)
    VERTICAL        reduce using rule 478 (additiveExpression -> multiplicativeExpression .)
    OP_LAND         reduce using rule 478 (additiveExpression -> multiplicativeExpression .)
    OP_LOR          reduce using rule 478 (additiveExpression -> multiplicativeExpression .)
    QUES            reduce using rule 478 (additiveExpression -> multiplicativeExpression .)
    EQUALS          reduce using rule 478 (additiveExpression -> multiplicativeExpression .)
    ASS_ADD         reduce using rule 478 (additiveExpression -> multiplicativeExpression .)
    ASS_SUB         reduce using rule 478 (additiveExpression -> multiplicativeExpression .)
    ASS_MUL         reduce using rule 478 (additiveExpression -> multiplicativeExpression .)
    ASS_DIV         reduce using rule 478 (additiveExpression -> multiplicativeExpression .)
    ASS_AND         reduce using rule 478 (additiveExpression -> multiplicativeExpression .)
    ASS_OR          reduce using rule 478 (additiveExpression -> multiplicativeExpression .)
    ASS_XOR         reduce using rule 478 (additiveExpression -> multiplicativeExpression .)
    ASS_MOD         reduce using rule 478 (additiveExpression -> multiplicativeExpression .)
    ASS_SHL         reduce using rule 478 (additiveExpression -> multiplicativeExpression .)
    ASS_SHRR        reduce using rule 478 (additiveExpression -> multiplicativeExpression .)
    ASS_SHR         reduce using rule 478 (additiveExpression -> multiplicativeExpression .)
    COLON           reduce using rule 478 (additiveExpression -> multiplicativeExpression .)
    RPAREN          reduce using rule 478 (additiveExpression -> multiplicativeExpression .)
    COMMA           reduce using rule 478 (additiveExpression -> multiplicativeExpression .)
    BRPAREN         reduce using rule 478 (additiveExpression -> multiplicativeExpression .)
    SEMI            reduce using rule 478 (additiveExpression -> multiplicativeExpression .)
    FRPAREN         reduce using rule 478 (additiveExpression -> multiplicativeExpression .)
    PLUS            shift and go to state 251
    DASH            shift and go to state 252

    add_multiplicativeExpression   shift and go to state 249
    add_multiplicativeExpressions  shift and go to state 250

state 129

    (278) literal -> NULL .

    OP_INC          reduce using rule 278 (literal -> NULL .)
    OP_DEC          reduce using rule 278 (literal -> NULL .)
    DOT             reduce using rule 278 (literal -> NULL .)
    FLPAREN         reduce using rule 278 (literal -> NULL .)
    MULT            reduce using rule 278 (literal -> NULL .)
    SLASH           reduce using rule 278 (literal -> NULL .)
    PERCENT         reduce using rule 278 (literal -> NULL .)
    PLUS            reduce using rule 278 (literal -> NULL .)
    DASH            reduce using rule 278 (literal -> NULL .)
    OP_SHR          reduce using rule 278 (literal -> NULL .)
    OP_SHRR         reduce using rule 278 (literal -> NULL .)
    OP_SHL          reduce using rule 278 (literal -> NULL .)
    OP_LE           reduce using rule 278 (literal -> NULL .)
    OP_GE           reduce using rule 278 (literal -> NULL .)
    LESS            reduce using rule 278 (literal -> NULL .)
    MORE            reduce using rule 278 (literal -> NULL .)
    INSTANCEOF      reduce using rule 278 (literal -> NULL .)
    OP_EQ           reduce using rule 278 (literal -> NULL .)
    OP_NE           reduce using rule 278 (literal -> NULL .)
    AND             reduce using rule 278 (literal -> NULL .)
    CARET           reduce using rule 278 (literal -> NULL .)
    VERTICAL        reduce using rule 278 (literal -> NULL .)
    OP_LAND         reduce using rule 278 (literal -> NULL .)
    OP_LOR          reduce using rule 278 (literal -> NULL .)
    QUES            reduce using rule 278 (literal -> NULL .)
    EQUALS          reduce using rule 278 (literal -> NULL .)
    ASS_ADD         reduce using rule 278 (literal -> NULL .)
    ASS_SUB         reduce using rule 278 (literal -> NULL .)
    ASS_MUL         reduce using rule 278 (literal -> NULL .)
    ASS_DIV         reduce using rule 278 (literal -> NULL .)
    ASS_AND         reduce using rule 278 (literal -> NULL .)
    ASS_OR          reduce using rule 278 (literal -> NULL .)
    ASS_XOR         reduce using rule 278 (literal -> NULL .)
    ASS_MOD         reduce using rule 278 (literal -> NULL .)
    ASS_SHL         reduce using rule 278 (literal -> NULL .)
    ASS_SHRR        reduce using rule 278 (literal -> NULL .)
    ASS_SHR         reduce using rule 278 (literal -> NULL .)
    COMMA           reduce using rule 278 (literal -> NULL .)
    RPAREN          reduce using rule 278 (literal -> NULL .)
    SEMI            reduce using rule 278 (literal -> NULL .)
    BRPAREN         reduce using rule 278 (literal -> NULL .)
    FRPAREN         reduce using rule 278 (literal -> NULL .)
    COLON           reduce using rule 278 (literal -> NULL .)


state 130

    (459) relationalExpression -> shiftExpression . re_shiftExpressions
    (460) relationalExpression -> shiftExpression .
    (457) re_shiftExpressions -> . re_shiftExpression
    (458) re_shiftExpressions -> . re_shiftExpressions re_shiftExpression
    (456) re_shiftExpression -> . relationalOp shiftExpression
    (461) relationalOp -> . OP_LE
    (462) relationalOp -> . OP_GE
    (463) relationalOp -> . LESS
    (464) relationalOp -> . MORE

    INSTANCEOF      reduce using rule 460 (relationalExpression -> shiftExpression .)
    OP_EQ           reduce using rule 460 (relationalExpression -> shiftExpression .)
    OP_NE           reduce using rule 460 (relationalExpression -> shiftExpression .)
    AND             reduce using rule 460 (relationalExpression -> shiftExpression .)
    CARET           reduce using rule 460 (relationalExpression -> shiftExpression .)
    VERTICAL        reduce using rule 460 (relationalExpression -> shiftExpression .)
    OP_LAND         reduce using rule 460 (relationalExpression -> shiftExpression .)
    OP_LOR          reduce using rule 460 (relationalExpression -> shiftExpression .)
    QUES            reduce using rule 460 (relationalExpression -> shiftExpression .)
    COMMA           reduce using rule 460 (relationalExpression -> shiftExpression .)
    RPAREN          reduce using rule 460 (relationalExpression -> shiftExpression .)
    EQUALS          reduce using rule 460 (relationalExpression -> shiftExpression .)
    ASS_ADD         reduce using rule 460 (relationalExpression -> shiftExpression .)
    ASS_SUB         reduce using rule 460 (relationalExpression -> shiftExpression .)
    ASS_MUL         reduce using rule 460 (relationalExpression -> shiftExpression .)
    ASS_DIV         reduce using rule 460 (relationalExpression -> shiftExpression .)
    ASS_AND         reduce using rule 460 (relationalExpression -> shiftExpression .)
    ASS_OR          reduce using rule 460 (relationalExpression -> shiftExpression .)
    ASS_XOR         reduce using rule 460 (relationalExpression -> shiftExpression .)
    ASS_MOD         reduce using rule 460 (relationalExpression -> shiftExpression .)
    ASS_SHL         reduce using rule 460 (relationalExpression -> shiftExpression .)
    ASS_SHRR        reduce using rule 460 (relationalExpression -> shiftExpression .)
    ASS_SHR         reduce using rule 460 (relationalExpression -> shiftExpression .)
    SEMI            reduce using rule 460 (relationalExpression -> shiftExpression .)
    BRPAREN         reduce using rule 460 (relationalExpression -> shiftExpression .)
    FRPAREN         reduce using rule 460 (relationalExpression -> shiftExpression .)
    COLON           reduce using rule 460 (relationalExpression -> shiftExpression .)
    OP_LE           shift and go to state 257
    OP_GE           shift and go to state 254
    LESS            shift and go to state 253
    MORE            shift and go to state 259

    re_shiftExpressions            shift and go to state 255
    re_shiftExpression             shift and go to state 256
    relationalOp                   shift and go to state 258

state 131

    (484) multiplicativeExpression -> unaryExpression . mu_unaryExpressions
    (485) multiplicativeExpression -> unaryExpression .
    (482) mu_unaryExpressions -> . mu_unaryExpression
    (483) mu_unaryExpressions -> . mu_unaryExpressions mu_unaryExpression
    (479) mu_unaryExpression -> . MULT unaryExpression
    (480) mu_unaryExpression -> . SLASH unaryExpression
    (481) mu_unaryExpression -> . PERCENT unaryExpression

    PLUS            reduce using rule 485 (multiplicativeExpression -> unaryExpression .)
    DASH            reduce using rule 485 (multiplicativeExpression -> unaryExpression .)
    OP_SHR          reduce using rule 485 (multiplicativeExpression -> unaryExpression .)
    OP_SHRR         reduce using rule 485 (multiplicativeExpression -> unaryExpression .)
    OP_SHL          reduce using rule 485 (multiplicativeExpression -> unaryExpression .)
    OP_LE           reduce using rule 485 (multiplicativeExpression -> unaryExpression .)
    OP_GE           reduce using rule 485 (multiplicativeExpression -> unaryExpression .)
    LESS            reduce using rule 485 (multiplicativeExpression -> unaryExpression .)
    MORE            reduce using rule 485 (multiplicativeExpression -> unaryExpression .)
    INSTANCEOF      reduce using rule 485 (multiplicativeExpression -> unaryExpression .)
    OP_EQ           reduce using rule 485 (multiplicativeExpression -> unaryExpression .)
    OP_NE           reduce using rule 485 (multiplicativeExpression -> unaryExpression .)
    AND             reduce using rule 485 (multiplicativeExpression -> unaryExpression .)
    CARET           reduce using rule 485 (multiplicativeExpression -> unaryExpression .)
    VERTICAL        reduce using rule 485 (multiplicativeExpression -> unaryExpression .)
    OP_LAND         reduce using rule 485 (multiplicativeExpression -> unaryExpression .)
    OP_LOR          reduce using rule 485 (multiplicativeExpression -> unaryExpression .)
    QUES            reduce using rule 485 (multiplicativeExpression -> unaryExpression .)
    EQUALS          reduce using rule 485 (multiplicativeExpression -> unaryExpression .)
    ASS_ADD         reduce using rule 485 (multiplicativeExpression -> unaryExpression .)
    ASS_SUB         reduce using rule 485 (multiplicativeExpression -> unaryExpression .)
    ASS_MUL         reduce using rule 485 (multiplicativeExpression -> unaryExpression .)
    ASS_DIV         reduce using rule 485 (multiplicativeExpression -> unaryExpression .)
    ASS_AND         reduce using rule 485 (multiplicativeExpression -> unaryExpression .)
    ASS_OR          reduce using rule 485 (multiplicativeExpression -> unaryExpression .)
    ASS_XOR         reduce using rule 485 (multiplicativeExpression -> unaryExpression .)
    ASS_MOD         reduce using rule 485 (multiplicativeExpression -> unaryExpression .)
    ASS_SHL         reduce using rule 485 (multiplicativeExpression -> unaryExpression .)
    ASS_SHRR        reduce using rule 485 (multiplicativeExpression -> unaryExpression .)
    ASS_SHR         reduce using rule 485 (multiplicativeExpression -> unaryExpression .)
    SEMI            reduce using rule 485 (multiplicativeExpression -> unaryExpression .)
    COLON           reduce using rule 485 (multiplicativeExpression -> unaryExpression .)
    COMMA           reduce using rule 485 (multiplicativeExpression -> unaryExpression .)
    BRPAREN         reduce using rule 485 (multiplicativeExpression -> unaryExpression .)
    RPAREN          reduce using rule 485 (multiplicativeExpression -> unaryExpression .)
    FRPAREN         reduce using rule 485 (multiplicativeExpression -> unaryExpression .)
    MULT            shift and go to state 264
    SLASH           shift and go to state 263
    PERCENT         shift and go to state 261

    mu_unaryExpressions            shift and go to state 260
    mu_unaryExpression             shift and go to state 262

state 132

    (506) primary -> parExpression .

    OP_INC          reduce using rule 506 (primary -> parExpression .)
    OP_DEC          reduce using rule 506 (primary -> parExpression .)
    DOT             reduce using rule 506 (primary -> parExpression .)
    FLPAREN         reduce using rule 506 (primary -> parExpression .)
    MULT            reduce using rule 506 (primary -> parExpression .)
    SLASH           reduce using rule 506 (primary -> parExpression .)
    PERCENT         reduce using rule 506 (primary -> parExpression .)
    PLUS            reduce using rule 506 (primary -> parExpression .)
    DASH            reduce using rule 506 (primary -> parExpression .)
    OP_SHR          reduce using rule 506 (primary -> parExpression .)
    OP_SHRR         reduce using rule 506 (primary -> parExpression .)
    OP_SHL          reduce using rule 506 (primary -> parExpression .)
    OP_LE           reduce using rule 506 (primary -> parExpression .)
    OP_GE           reduce using rule 506 (primary -> parExpression .)
    LESS            reduce using rule 506 (primary -> parExpression .)
    MORE            reduce using rule 506 (primary -> parExpression .)
    INSTANCEOF      reduce using rule 506 (primary -> parExpression .)
    OP_EQ           reduce using rule 506 (primary -> parExpression .)
    OP_NE           reduce using rule 506 (primary -> parExpression .)
    AND             reduce using rule 506 (primary -> parExpression .)
    CARET           reduce using rule 506 (primary -> parExpression .)
    VERTICAL        reduce using rule 506 (primary -> parExpression .)
    OP_LAND         reduce using rule 506 (primary -> parExpression .)
    OP_LOR          reduce using rule 506 (primary -> parExpression .)
    QUES            reduce using rule 506 (primary -> parExpression .)
    EQUALS          reduce using rule 506 (primary -> parExpression .)
    ASS_ADD         reduce using rule 506 (primary -> parExpression .)
    ASS_SUB         reduce using rule 506 (primary -> parExpression .)
    ASS_MUL         reduce using rule 506 (primary -> parExpression .)
    ASS_DIV         reduce using rule 506 (primary -> parExpression .)
    ASS_AND         reduce using rule 506 (primary -> parExpression .)
    ASS_OR          reduce using rule 506 (primary -> parExpression .)
    ASS_XOR         reduce using rule 506 (primary -> parExpression .)
    ASS_MOD         reduce using rule 506 (primary -> parExpression .)
    ASS_SHL         reduce using rule 506 (primary -> parExpression .)
    ASS_SHRR        reduce using rule 506 (primary -> parExpression .)
    ASS_SHR         reduce using rule 506 (primary -> parExpression .)
    FRPAREN         reduce using rule 506 (primary -> parExpression .)
    SEMI            reduce using rule 506 (primary -> parExpression .)
    COMMA           reduce using rule 506 (primary -> parExpression .)
    BRPAREN         reduce using rule 506 (primary -> parExpression .)
    RPAREN          reduce using rule 506 (primary -> parExpression .)
    COLON           reduce using rule 506 (primary -> parExpression .)


state 133

    (287) annotation -> AT . annotationName annotationBody
    (288) annotationName -> . Identifier DOT_Identifiers
    (289) annotationName -> . Identifier

    Identifier      shift and go to state 39

    annotationName                 shift and go to state 37

state 134

    (501) castExpression -> LPAREN . primitiveType RPAREN unaryExpression
    (502) castExpression -> LPAREN . type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> LPAREN . expression RPAREN unaryExpressionNotPlusMinus
    (394) parExpression -> LPAREN . expression RPAREN
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (205) type -> . type_body
    (206) type -> . primitiveType arrays
    (207) type -> . primitiveType
    (404) expression -> . conditionalExpression assignmentOperator_expression_empty
    (208) type_body -> . Identifier classOrInterfaceTypeBody arrays
    (209) type_body -> . Identifier classOrInterfaceTypeBody
    (210) type_body -> . Identifier arrays
    (211) type_body -> . Identifier
    (420) conditionalExpression -> . conditionalOrExpression conditionalExpressionStats
    (421) conditionalExpression -> . conditionalOrExpression
    (425) conditionalOrExpression -> . conditionalAndExpression O_conditionalAndExpressions
    (426) conditionalOrExpression -> . conditionalAndExpression
    (430) conditionalAndExpression -> . inclusiveOrExpression O_inclusiveOrExpressions
    (431) conditionalAndExpression -> . inclusiveOrExpression
    (435) inclusiveOrExpression -> . exclusiveOrExpression V_exclusiveOrExpression
    (436) inclusiveOrExpression -> . exclusiveOrExpression
    (440) exclusiveOrExpression -> . andExpression CARET_andExpressions
    (441) exclusiveOrExpression -> . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    Identifier      shift and go to state 267
    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    equalityExpression             shift and go to state 108
    inclusiveOrExpression          shift and go to state 99
    multiplicativeExpression       shift and go to state 128
    exclusiveOrExpression          shift and go to state 110
    conditionalAndExpression       shift and go to state 89
    primitiveType                  shift and go to state 268
    shiftExpression                shift and go to state 130
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    type                           shift and go to state 265
    integerLiteral                 shift and go to state 98
    additiveExpression             shift and go to state 102
    instanceOfExpression           shift and go to state 96
    conditionalExpression          shift and go to state 266
    unaryExpression                shift and go to state 131
    FloatingPointLiteral           shift and go to state 119
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    relationalExpression           shift and go to state 95
    conditionalOrExpression        shift and go to state 109
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    type_body                      shift and go to state 77
    andExpression                  shift and go to state 106
    expression                     shift and go to state 269

state 135

    (283) annotationBody -> LPAREN elementValuePairs . RPAREN

    RPAREN          shift and go to state 270


state 136

    (297) elementValue -> annotation .

    RPAREN          reduce using rule 297 (elementValue -> annotation .)
    COMMA           reduce using rule 297 (elementValue -> annotation .)
    BRPAREN         reduce using rule 297 (elementValue -> annotation .)
    SEMI            reduce using rule 297 (elementValue -> annotation .)


state 137

    (498) unaryExpressionNotPlusMinus -> castExpression .

    MULT            reduce using rule 498 (unaryExpressionNotPlusMinus -> castExpression .)
    SLASH           reduce using rule 498 (unaryExpressionNotPlusMinus -> castExpression .)
    PERCENT         reduce using rule 498 (unaryExpressionNotPlusMinus -> castExpression .)
    PLUS            reduce using rule 498 (unaryExpressionNotPlusMinus -> castExpression .)
    DASH            reduce using rule 498 (unaryExpressionNotPlusMinus -> castExpression .)
    OP_SHR          reduce using rule 498 (unaryExpressionNotPlusMinus -> castExpression .)
    OP_SHRR         reduce using rule 498 (unaryExpressionNotPlusMinus -> castExpression .)
    OP_SHL          reduce using rule 498 (unaryExpressionNotPlusMinus -> castExpression .)
    OP_LE           reduce using rule 498 (unaryExpressionNotPlusMinus -> castExpression .)
    OP_GE           reduce using rule 498 (unaryExpressionNotPlusMinus -> castExpression .)
    LESS            reduce using rule 498 (unaryExpressionNotPlusMinus -> castExpression .)
    MORE            reduce using rule 498 (unaryExpressionNotPlusMinus -> castExpression .)
    INSTANCEOF      reduce using rule 498 (unaryExpressionNotPlusMinus -> castExpression .)
    OP_EQ           reduce using rule 498 (unaryExpressionNotPlusMinus -> castExpression .)
    OP_NE           reduce using rule 498 (unaryExpressionNotPlusMinus -> castExpression .)
    AND             reduce using rule 498 (unaryExpressionNotPlusMinus -> castExpression .)
    CARET           reduce using rule 498 (unaryExpressionNotPlusMinus -> castExpression .)
    VERTICAL        reduce using rule 498 (unaryExpressionNotPlusMinus -> castExpression .)
    OP_LAND         reduce using rule 498 (unaryExpressionNotPlusMinus -> castExpression .)
    OP_LOR          reduce using rule 498 (unaryExpressionNotPlusMinus -> castExpression .)
    QUES            reduce using rule 498 (unaryExpressionNotPlusMinus -> castExpression .)
    EQUALS          reduce using rule 498 (unaryExpressionNotPlusMinus -> castExpression .)
    ASS_ADD         reduce using rule 498 (unaryExpressionNotPlusMinus -> castExpression .)
    ASS_SUB         reduce using rule 498 (unaryExpressionNotPlusMinus -> castExpression .)
    ASS_MUL         reduce using rule 498 (unaryExpressionNotPlusMinus -> castExpression .)
    ASS_DIV         reduce using rule 498 (unaryExpressionNotPlusMinus -> castExpression .)
    ASS_AND         reduce using rule 498 (unaryExpressionNotPlusMinus -> castExpression .)
    ASS_OR          reduce using rule 498 (unaryExpressionNotPlusMinus -> castExpression .)
    ASS_XOR         reduce using rule 498 (unaryExpressionNotPlusMinus -> castExpression .)
    ASS_MOD         reduce using rule 498 (unaryExpressionNotPlusMinus -> castExpression .)
    ASS_SHL         reduce using rule 498 (unaryExpressionNotPlusMinus -> castExpression .)
    ASS_SHRR        reduce using rule 498 (unaryExpressionNotPlusMinus -> castExpression .)
    ASS_SHR         reduce using rule 498 (unaryExpressionNotPlusMinus -> castExpression .)
    RPAREN          reduce using rule 498 (unaryExpressionNotPlusMinus -> castExpression .)
    COMMA           reduce using rule 498 (unaryExpressionNotPlusMinus -> castExpression .)
    SEMI            reduce using rule 498 (unaryExpressionNotPlusMinus -> castExpression .)
    FRPAREN         reduce using rule 498 (unaryExpressionNotPlusMinus -> castExpression .)
    BRPAREN         reduce using rule 498 (unaryExpressionNotPlusMinus -> castExpression .)
    COLON           reduce using rule 498 (unaryExpressionNotPlusMinus -> castExpression .)


state 138

    (509) primary -> SUPER . superSuffix
    (551) superSuffix -> . arguments
    (552) superSuffix -> . DOT Identifier arguments_once
    (555) arguments -> . LPAREN expressionList_once RPAREN

    DOT             shift and go to state 273
    LPAREN          shift and go to state 199

    superSuffix                    shift and go to state 271
    arguments                      shift and go to state 272

state 139

    (284) annotationBody -> LPAREN elementValue . RPAREN

    RPAREN          shift and go to state 274


state 140

    (308) annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .

    BRPAREN         reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    ASSERT          reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    IF              reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    FOR             reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    WHILE           reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    DO              reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    TRY             reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    SWITCH          reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    SYNCHRONIZED    reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    RETURN          reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    THROW           reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    BREAK           reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    CONTINUE        reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    SEMI            reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    Identifier      reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    BLPAREN         reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    PUBLIC          reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    PROTECTED       reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    PRIVATE         reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    ABSTRACT        reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    STATIC          reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    FINAL           reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    STRICTFP        reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    CLASS           reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    ENUM            reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    INTERFACE       reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    AT              reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    BOOLEAN         reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    CHAR            reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    BYTE            reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    SHORT           reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    INT             reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    LONG            reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    FLOAT           reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    DOUBLE          reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    PLUS            reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    DASH            reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    OP_INC          reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    OP_DEC          reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    TILDE           reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    EXCLAMATION     reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    LPAREN          reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    THIS            reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    SUPER           reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    NEW             reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    VOID            reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    CharacterLiteral reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    StringLiteral   reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    NULL            reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    LONG_NUMBER     reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    LONG_HEX_NUMBER reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    NON_INTEGER_1   reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    NON_INTEGER_2   reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    NON_INTEGER_3   reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    NON_INTEGER_4   reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    TRUE            reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    FALSE           reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    NATIVE          reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    TRANSIENT       reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    VOLATILE        reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    LESS            reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    CASE            reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    DEFAULT         reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)
    $end            reduce using rule 308 (annotationTypeDeclaration -> AT INTERFACE Identifier annotationTypeBody .)


state 141

    (311) annotationTypeBody -> BLPAREN . annotationTypeElementDeclarations BRPAREN
    (312) annotationTypeBody -> BLPAREN . BRPAREN
    (309) annotationTypeElementDeclarations -> . annotationTypeElementDeclaration
    (310) annotationTypeElementDeclarations -> . annotationTypeElementDeclarations annotationTypeElementDeclaration
    (313) annotationTypeElementDeclaration -> . modifiers annotationTypeElementRest
    (314) annotationTypeElementDeclaration -> . annotationTypeElementRest
    (40) modifiers -> . modifier
    (41) modifiers -> . modifiers modifier
    (317) annotationTypeElementRest -> . type annotationMethodOrConstantRest SEMI
    (318) annotationTypeElementRest -> . normalClassDeclaration SEMI_OR_empty
    (319) annotationTypeElementRest -> . normalInterfaceDeclaration SEMI_OR_empty
    (320) annotationTypeElementRest -> . enumDeclaration SEMI_OR_empty
    (321) annotationTypeElementRest -> . annotationTypeDeclaration SEMI_OR_empty
    (190) modifier -> . annotation
    (191) modifier -> . PUBLIC
    (192) modifier -> . PROTECTED
    (193) modifier -> . PRIVATE
    (194) modifier -> . STATIC
    (195) modifier -> . ABSTRACT
    (196) modifier -> . FINAL
    (197) modifier -> . NATIVE
    (198) modifier -> . SYNCHRONIZED
    (199) modifier -> . TRANSIENT
    (200) modifier -> . VOLATILE
    (201) modifier -> . STRICTFP
    (205) type -> . type_body
    (206) type -> . primitiveType arrays
    (207) type -> . primitiveType
    (48) normalClassDeclaration -> . CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody
    (95) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody
    (63) enumDeclaration -> . ENUM Identifier IMPLEMENTS_typeList enumBody
    (308) annotationTypeDeclaration -> . AT INTERFACE Identifier annotationTypeBody
    (287) annotation -> . AT annotationName annotationBody
    (208) type_body -> . Identifier classOrInterfaceTypeBody arrays
    (209) type_body -> . Identifier classOrInterfaceTypeBody
    (210) type_body -> . Identifier arrays
    (211) type_body -> . Identifier
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE

    BRPAREN         shift and go to state 288
    PUBLIC          shift and go to state 297
    PROTECTED       shift and go to state 278
    PRIVATE         shift and go to state 284
    STATIC          shift and go to state 279
    ABSTRACT        shift and go to state 276
    FINAL           shift and go to state 281
    NATIVE          shift and go to state 282
    SYNCHRONIZED    shift and go to state 275
    TRANSIENT       shift and go to state 286
    VOLATILE        shift and go to state 295
    STRICTFP        shift and go to state 285
    CLASS           shift and go to state 12
    INTERFACE       shift and go to state 23
    ENUM            shift and go to state 15
    AT              shift and go to state 18
    Identifier      shift and go to state 80
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72

    annotationTypeElementDeclarations shift and go to state 277
    annotationTypeElementDeclaration shift and go to state 294
    primitiveType                  shift and go to state 74
    normalInterfaceDeclaration     shift and go to state 280
    normalClassDeclaration         shift and go to state 283
    type                           shift and go to state 287
    enumDeclaration                shift and go to state 289
    annotationTypeElementRest      shift and go to state 290
    annotation                     shift and go to state 291
    modifiers                      shift and go to state 292
    type_body                      shift and go to state 77
    annotationTypeDeclaration      shift and go to state 293
    modifier                       shift and go to state 296

state 142

    (95) normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList . interfaceBody
    (105) interfaceBody -> . BLPAREN interfaceBodyDeclarations BRPAREN
    (106) interfaceBody -> . BLPAREN BRPAREN

    BLPAREN         shift and go to state 299

    interfaceBody                  shift and go to state 298

state 143

    (93) EXTENDS_typeList -> EXTENDS . typeList
    (99) typeList -> . type COMMA_types
    (100) typeList -> . type
    (205) type -> . type_body
    (206) type -> . primitiveType arrays
    (207) type -> . primitiveType
    (208) type_body -> . Identifier classOrInterfaceTypeBody arrays
    (209) type_body -> . Identifier classOrInterfaceTypeBody
    (210) type_body -> . Identifier arrays
    (211) type_body -> . Identifier
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE

    Identifier      shift and go to state 80
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72

    typeList                       shift and go to state 300
    primitiveType                  shift and go to state 74
    type_body                      shift and go to state 77
    type                           shift and go to state 81

state 144

    (50) dotTypeParameters -> dotTypeParameter .

    MORE            reduce using rule 50 (dotTypeParameters -> dotTypeParameter .)
    COMMA           reduce using rule 50 (dotTypeParameters -> dotTypeParameter .)


state 145

    (52) typeParameters -> LESS typeParameter dotTypeParameters . MORE
    (51) dotTypeParameters -> dotTypeParameters . dotTypeParameter
    (49) dotTypeParameter -> . COMMA typeParameter

    MORE            shift and go to state 302
    COMMA           shift and go to state 146

    dotTypeParameter               shift and go to state 301

state 146

    (49) dotTypeParameter -> COMMA . typeParameter
    (57) typeParameter -> . Identifier EXTENDS_typeBound

    Identifier      shift and go to state 64

    typeParameter                  shift and go to state 303

state 147

    (53) typeParameters -> LESS typeParameter MORE .

    VOID            reduce using rule 53 (typeParameters -> LESS typeParameter MORE .)
    Identifier      reduce using rule 53 (typeParameters -> LESS typeParameter MORE .)
    BOOLEAN         reduce using rule 53 (typeParameters -> LESS typeParameter MORE .)
    CHAR            reduce using rule 53 (typeParameters -> LESS typeParameter MORE .)
    BYTE            reduce using rule 53 (typeParameters -> LESS typeParameter MORE .)
    SHORT           reduce using rule 53 (typeParameters -> LESS typeParameter MORE .)
    INT             reduce using rule 53 (typeParameters -> LESS typeParameter MORE .)
    LONG            reduce using rule 53 (typeParameters -> LESS typeParameter MORE .)
    FLOAT           reduce using rule 53 (typeParameters -> LESS typeParameter MORE .)
    DOUBLE          reduce using rule 53 (typeParameters -> LESS typeParameter MORE .)
    EXTENDS         reduce using rule 53 (typeParameters -> LESS typeParameter MORE .)
    BLPAREN         reduce using rule 53 (typeParameters -> LESS typeParameter MORE .)
    IMPLEMENTS      reduce using rule 53 (typeParameters -> LESS typeParameter MORE .)


state 148

    (55) EXTENDS_typeBound -> EXTENDS . typeBound
    (61) typeBound -> . type and_types
    (62) typeBound -> . type
    (205) type -> . type_body
    (206) type -> . primitiveType arrays
    (207) type -> . primitiveType
    (208) type_body -> . Identifier classOrInterfaceTypeBody arrays
    (209) type_body -> . Identifier classOrInterfaceTypeBody
    (210) type_body -> . Identifier arrays
    (211) type_body -> . Identifier
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE

    Identifier      shift and go to state 80
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72

    primitiveType                  shift and go to state 74
    type_body                      shift and go to state 77
    typeBound                      shift and go to state 304
    type                           shift and go to state 305

state 149

    (57) typeParameter -> Identifier EXTENDS_typeBound .

    MORE            reduce using rule 57 (typeParameter -> Identifier EXTENDS_typeBound .)
    COMMA           reduce using rule 57 (typeParameter -> Identifier EXTENDS_typeBound .)


state 150

    (48) normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList . classBody
    (101) classBody -> . BLPAREN classBodyDeclarations BRPAREN
    (102) classBody -> . BLPAREN BRPAREN

    BLPAREN         shift and go to state 306

    classBody                      shift and go to state 307

state 151

    (44) ExtendType -> EXTENDS type .

    IMPLEMENTS      reduce using rule 44 (ExtendType -> EXTENDS type .)
    BLPAREN         reduce using rule 44 (ExtendType -> EXTENDS type .)


state 152

    (206) type -> primitiveType arrays .
    (138) arrays -> arrays . array
    (137) array -> . FLPAREN FRPAREN

    Identifier      reduce using rule 206 (type -> primitiveType arrays .)
    MORE            reduce using rule 206 (type -> primitiveType arrays .)
    COMMA           reduce using rule 206 (type -> primitiveType arrays .)
    BLPAREN         reduce using rule 206 (type -> primitiveType arrays .)
    IMPLEMENTS      reduce using rule 206 (type -> primitiveType arrays .)
    OP_EQ           reduce using rule 206 (type -> primitiveType arrays .)
    OP_NE           reduce using rule 206 (type -> primitiveType arrays .)
    AND             reduce using rule 206 (type -> primitiveType arrays .)
    CARET           reduce using rule 206 (type -> primitiveType arrays .)
    VERTICAL        reduce using rule 206 (type -> primitiveType arrays .)
    OP_LAND         reduce using rule 206 (type -> primitiveType arrays .)
    OP_LOR          reduce using rule 206 (type -> primitiveType arrays .)
    QUES            reduce using rule 206 (type -> primitiveType arrays .)
    RPAREN          reduce using rule 206 (type -> primitiveType arrays .)
    BRPAREN         reduce using rule 206 (type -> primitiveType arrays .)
    EQUALS          reduce using rule 206 (type -> primitiveType arrays .)
    ASS_ADD         reduce using rule 206 (type -> primitiveType arrays .)
    ASS_SUB         reduce using rule 206 (type -> primitiveType arrays .)
    ASS_MUL         reduce using rule 206 (type -> primitiveType arrays .)
    ASS_DIV         reduce using rule 206 (type -> primitiveType arrays .)
    ASS_AND         reduce using rule 206 (type -> primitiveType arrays .)
    ASS_OR          reduce using rule 206 (type -> primitiveType arrays .)
    ASS_XOR         reduce using rule 206 (type -> primitiveType arrays .)
    ASS_MOD         reduce using rule 206 (type -> primitiveType arrays .)
    ASS_SHL         reduce using rule 206 (type -> primitiveType arrays .)
    ASS_SHRR        reduce using rule 206 (type -> primitiveType arrays .)
    ASS_SHR         reduce using rule 206 (type -> primitiveType arrays .)
    FRPAREN         reduce using rule 206 (type -> primitiveType arrays .)
    COLON           reduce using rule 206 (type -> primitiveType arrays .)
    SEMI            reduce using rule 206 (type -> primitiveType arrays .)
    OP_ARRAY        reduce using rule 206 (type -> primitiveType arrays .)
    FLPAREN         shift and go to state 153

    array                          shift and go to state 308

state 153

    (137) array -> FLPAREN . FRPAREN

    FRPAREN         shift and go to state 309


state 154

    (139) arrays -> array .

    DOT             reduce using rule 139 (arrays -> array .)
    FLPAREN         reduce using rule 139 (arrays -> array .)
    Identifier      reduce using rule 139 (arrays -> array .)
    EQUALS          reduce using rule 139 (arrays -> array .)
    COMMA           reduce using rule 139 (arrays -> array .)
    SEMI            reduce using rule 139 (arrays -> array .)
    BLPAREN         reduce using rule 139 (arrays -> array .)
    IMPLEMENTS      reduce using rule 139 (arrays -> array .)
    AND             reduce using rule 139 (arrays -> array .)
    MORE            reduce using rule 139 (arrays -> array .)
    OP_EQ           reduce using rule 139 (arrays -> array .)
    OP_NE           reduce using rule 139 (arrays -> array .)
    CARET           reduce using rule 139 (arrays -> array .)
    VERTICAL        reduce using rule 139 (arrays -> array .)
    OP_LAND         reduce using rule 139 (arrays -> array .)
    OP_LOR          reduce using rule 139 (arrays -> array .)
    QUES            reduce using rule 139 (arrays -> array .)
    RPAREN          reduce using rule 139 (arrays -> array .)
    BRPAREN         reduce using rule 139 (arrays -> array .)
    ASS_ADD         reduce using rule 139 (arrays -> array .)
    ASS_SUB         reduce using rule 139 (arrays -> array .)
    ASS_MUL         reduce using rule 139 (arrays -> array .)
    ASS_DIV         reduce using rule 139 (arrays -> array .)
    ASS_AND         reduce using rule 139 (arrays -> array .)
    ASS_OR          reduce using rule 139 (arrays -> array .)
    ASS_XOR         reduce using rule 139 (arrays -> array .)
    ASS_MOD         reduce using rule 139 (arrays -> array .)
    ASS_SHL         reduce using rule 139 (arrays -> array .)
    ASS_SHRR        reduce using rule 139 (arrays -> array .)
    ASS_SHR         reduce using rule 139 (arrays -> array .)
    FRPAREN         reduce using rule 139 (arrays -> array .)
    COLON           reduce using rule 139 (arrays -> array .)
    OP_ARRAY        reduce using rule 139 (arrays -> array .)
    THROWS          reduce using rule 139 (arrays -> array .)
    OP_INC          reduce using rule 139 (arrays -> array .)
    OP_DEC          reduce using rule 139 (arrays -> array .)
    MULT            reduce using rule 139 (arrays -> array .)
    SLASH           reduce using rule 139 (arrays -> array .)
    PERCENT         reduce using rule 139 (arrays -> array .)
    PLUS            reduce using rule 139 (arrays -> array .)
    DASH            reduce using rule 139 (arrays -> array .)
    OP_SHR          reduce using rule 139 (arrays -> array .)
    OP_SHRR         reduce using rule 139 (arrays -> array .)
    OP_SHL          reduce using rule 139 (arrays -> array .)
    OP_LE           reduce using rule 139 (arrays -> array .)
    OP_GE           reduce using rule 139 (arrays -> array .)
    LESS            reduce using rule 139 (arrays -> array .)
    INSTANCEOF      reduce using rule 139 (arrays -> array .)


state 155

    (208) type_body -> Identifier classOrInterfaceTypeBody . arrays
    (209) type_body -> Identifier classOrInterfaceTypeBody .
    (138) arrays -> . arrays array
    (139) arrays -> . array
    (137) array -> . FLPAREN FRPAREN

    Identifier      reduce using rule 209 (type_body -> Identifier classOrInterfaceTypeBody .)
    COMMA           reduce using rule 209 (type_body -> Identifier classOrInterfaceTypeBody .)
    MORE            reduce using rule 209 (type_body -> Identifier classOrInterfaceTypeBody .)
    RPAREN          reduce using rule 209 (type_body -> Identifier classOrInterfaceTypeBody .)
    AND             reduce using rule 209 (type_body -> Identifier classOrInterfaceTypeBody .)
    BLPAREN         reduce using rule 209 (type_body -> Identifier classOrInterfaceTypeBody .)
    IMPLEMENTS      reduce using rule 209 (type_body -> Identifier classOrInterfaceTypeBody .)
    OP_ARRAY        reduce using rule 209 (type_body -> Identifier classOrInterfaceTypeBody .)
    OP_EQ           reduce using rule 209 (type_body -> Identifier classOrInterfaceTypeBody .)
    OP_NE           reduce using rule 209 (type_body -> Identifier classOrInterfaceTypeBody .)
    CARET           reduce using rule 209 (type_body -> Identifier classOrInterfaceTypeBody .)
    VERTICAL        reduce using rule 209 (type_body -> Identifier classOrInterfaceTypeBody .)
    OP_LAND         reduce using rule 209 (type_body -> Identifier classOrInterfaceTypeBody .)
    OP_LOR          reduce using rule 209 (type_body -> Identifier classOrInterfaceTypeBody .)
    QUES            reduce using rule 209 (type_body -> Identifier classOrInterfaceTypeBody .)
    BRPAREN         reduce using rule 209 (type_body -> Identifier classOrInterfaceTypeBody .)
    EQUALS          reduce using rule 209 (type_body -> Identifier classOrInterfaceTypeBody .)
    ASS_ADD         reduce using rule 209 (type_body -> Identifier classOrInterfaceTypeBody .)
    ASS_SUB         reduce using rule 209 (type_body -> Identifier classOrInterfaceTypeBody .)
    ASS_MUL         reduce using rule 209 (type_body -> Identifier classOrInterfaceTypeBody .)
    ASS_DIV         reduce using rule 209 (type_body -> Identifier classOrInterfaceTypeBody .)
    ASS_AND         reduce using rule 209 (type_body -> Identifier classOrInterfaceTypeBody .)
    ASS_OR          reduce using rule 209 (type_body -> Identifier classOrInterfaceTypeBody .)
    ASS_XOR         reduce using rule 209 (type_body -> Identifier classOrInterfaceTypeBody .)
    ASS_MOD         reduce using rule 209 (type_body -> Identifier classOrInterfaceTypeBody .)
    ASS_SHL         reduce using rule 209 (type_body -> Identifier classOrInterfaceTypeBody .)
    ASS_SHRR        reduce using rule 209 (type_body -> Identifier classOrInterfaceTypeBody .)
    ASS_SHR         reduce using rule 209 (type_body -> Identifier classOrInterfaceTypeBody .)
    FRPAREN         reduce using rule 209 (type_body -> Identifier classOrInterfaceTypeBody .)
    COLON           reduce using rule 209 (type_body -> Identifier classOrInterfaceTypeBody .)
    SEMI            reduce using rule 209 (type_body -> Identifier classOrInterfaceTypeBody .)
    FLPAREN         shift and go to state 153

    arrays                         shift and go to state 310
    array                          shift and go to state 154

state 156

    (234) typeArguments -> LESS . typeArgument COMMA_typeArguments MORE
    (235) typeArguments -> LESS . typeArgument MORE
    (239) typeArgument -> . type
    (240) typeArgument -> . QUES typeArgumentStatment
    (205) type -> . type_body
    (206) type -> . primitiveType arrays
    (207) type -> . primitiveType
    (208) type_body -> . Identifier classOrInterfaceTypeBody arrays
    (209) type_body -> . Identifier classOrInterfaceTypeBody
    (210) type_body -> . Identifier arrays
    (211) type_body -> . Identifier
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE

    QUES            shift and go to state 312
    Identifier      shift and go to state 80
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72

    primitiveType                  shift and go to state 74
    typeArgument                   shift and go to state 311
    type_body                      shift and go to state 77
    type                           shift and go to state 313

state 157

    (210) type_body -> Identifier arrays .
    (138) arrays -> arrays . array
    (137) array -> . FLPAREN FRPAREN

    Identifier      reduce using rule 210 (type_body -> Identifier arrays .)
    COMMA           reduce using rule 210 (type_body -> Identifier arrays .)
    MORE            reduce using rule 210 (type_body -> Identifier arrays .)
    AND             reduce using rule 210 (type_body -> Identifier arrays .)
    BLPAREN         reduce using rule 210 (type_body -> Identifier arrays .)
    IMPLEMENTS      reduce using rule 210 (type_body -> Identifier arrays .)
    OP_ARRAY        reduce using rule 210 (type_body -> Identifier arrays .)
    OP_EQ           reduce using rule 210 (type_body -> Identifier arrays .)
    OP_NE           reduce using rule 210 (type_body -> Identifier arrays .)
    CARET           reduce using rule 210 (type_body -> Identifier arrays .)
    VERTICAL        reduce using rule 210 (type_body -> Identifier arrays .)
    OP_LAND         reduce using rule 210 (type_body -> Identifier arrays .)
    OP_LOR          reduce using rule 210 (type_body -> Identifier arrays .)
    QUES            reduce using rule 210 (type_body -> Identifier arrays .)
    RPAREN          reduce using rule 210 (type_body -> Identifier arrays .)
    BRPAREN         reduce using rule 210 (type_body -> Identifier arrays .)
    EQUALS          reduce using rule 210 (type_body -> Identifier arrays .)
    ASS_ADD         reduce using rule 210 (type_body -> Identifier arrays .)
    ASS_SUB         reduce using rule 210 (type_body -> Identifier arrays .)
    ASS_MUL         reduce using rule 210 (type_body -> Identifier arrays .)
    ASS_DIV         reduce using rule 210 (type_body -> Identifier arrays .)
    ASS_AND         reduce using rule 210 (type_body -> Identifier arrays .)
    ASS_OR          reduce using rule 210 (type_body -> Identifier arrays .)
    ASS_XOR         reduce using rule 210 (type_body -> Identifier arrays .)
    ASS_MOD         reduce using rule 210 (type_body -> Identifier arrays .)
    ASS_SHL         reduce using rule 210 (type_body -> Identifier arrays .)
    ASS_SHRR        reduce using rule 210 (type_body -> Identifier arrays .)
    ASS_SHR         reduce using rule 210 (type_body -> Identifier arrays .)
    FRPAREN         reduce using rule 210 (type_body -> Identifier arrays .)
    COLON           reduce using rule 210 (type_body -> Identifier arrays .)
    SEMI            reduce using rule 210 (type_body -> Identifier arrays .)
    FLPAREN         shift and go to state 153

    array                          shift and go to state 308

state 158

    (212) classOrInterfaceTypeBody -> typeArguments . classOrInterfaceTypeStatements
    (213) classOrInterfaceTypeBody -> typeArguments .
    (217) classOrInterfaceTypeStatements -> . classOrInterfaceTypeStatement
    (218) classOrInterfaceTypeStatements -> . classOrInterfaceTypeStatements classOrInterfaceTypeStatement
    (215) classOrInterfaceTypeStatement -> . DOT Identifier typeArguments
    (216) classOrInterfaceTypeStatement -> . DOT Identifier

    FLPAREN         reduce using rule 213 (classOrInterfaceTypeBody -> typeArguments .)
    Identifier      reduce using rule 213 (classOrInterfaceTypeBody -> typeArguments .)
    COMMA           reduce using rule 213 (classOrInterfaceTypeBody -> typeArguments .)
    BLPAREN         reduce using rule 213 (classOrInterfaceTypeBody -> typeArguments .)
    IMPLEMENTS      reduce using rule 213 (classOrInterfaceTypeBody -> typeArguments .)
    AND             reduce using rule 213 (classOrInterfaceTypeBody -> typeArguments .)
    MORE            reduce using rule 213 (classOrInterfaceTypeBody -> typeArguments .)
    OP_EQ           reduce using rule 213 (classOrInterfaceTypeBody -> typeArguments .)
    OP_NE           reduce using rule 213 (classOrInterfaceTypeBody -> typeArguments .)
    CARET           reduce using rule 213 (classOrInterfaceTypeBody -> typeArguments .)
    VERTICAL        reduce using rule 213 (classOrInterfaceTypeBody -> typeArguments .)
    OP_LAND         reduce using rule 213 (classOrInterfaceTypeBody -> typeArguments .)
    OP_LOR          reduce using rule 213 (classOrInterfaceTypeBody -> typeArguments .)
    QUES            reduce using rule 213 (classOrInterfaceTypeBody -> typeArguments .)
    RPAREN          reduce using rule 213 (classOrInterfaceTypeBody -> typeArguments .)
    BRPAREN         reduce using rule 213 (classOrInterfaceTypeBody -> typeArguments .)
    EQUALS          reduce using rule 213 (classOrInterfaceTypeBody -> typeArguments .)
    ASS_ADD         reduce using rule 213 (classOrInterfaceTypeBody -> typeArguments .)
    ASS_SUB         reduce using rule 213 (classOrInterfaceTypeBody -> typeArguments .)
    ASS_MUL         reduce using rule 213 (classOrInterfaceTypeBody -> typeArguments .)
    ASS_DIV         reduce using rule 213 (classOrInterfaceTypeBody -> typeArguments .)
    ASS_AND         reduce using rule 213 (classOrInterfaceTypeBody -> typeArguments .)
    ASS_OR          reduce using rule 213 (classOrInterfaceTypeBody -> typeArguments .)
    ASS_XOR         reduce using rule 213 (classOrInterfaceTypeBody -> typeArguments .)
    ASS_MOD         reduce using rule 213 (classOrInterfaceTypeBody -> typeArguments .)
    ASS_SHL         reduce using rule 213 (classOrInterfaceTypeBody -> typeArguments .)
    ASS_SHRR        reduce using rule 213 (classOrInterfaceTypeBody -> typeArguments .)
    ASS_SHR         reduce using rule 213 (classOrInterfaceTypeBody -> typeArguments .)
    FRPAREN         reduce using rule 213 (classOrInterfaceTypeBody -> typeArguments .)
    COLON           reduce using rule 213 (classOrInterfaceTypeBody -> typeArguments .)
    SEMI            reduce using rule 213 (classOrInterfaceTypeBody -> typeArguments .)
    OP_ARRAY        reduce using rule 213 (classOrInterfaceTypeBody -> typeArguments .)
    LPAREN          reduce using rule 213 (classOrInterfaceTypeBody -> typeArguments .)
    DOT             shift and go to state 161

    classOrInterfaceTypeStatements shift and go to state 314
    classOrInterfaceTypeStatement  shift and go to state 160

state 159

    (214) classOrInterfaceTypeBody -> classOrInterfaceTypeStatements .
    (218) classOrInterfaceTypeStatements -> classOrInterfaceTypeStatements . classOrInterfaceTypeStatement
    (215) classOrInterfaceTypeStatement -> . DOT Identifier typeArguments
    (216) classOrInterfaceTypeStatement -> . DOT Identifier

    FLPAREN         reduce using rule 214 (classOrInterfaceTypeBody -> classOrInterfaceTypeStatements .)
    Identifier      reduce using rule 214 (classOrInterfaceTypeBody -> classOrInterfaceTypeStatements .)
    COMMA           reduce using rule 214 (classOrInterfaceTypeBody -> classOrInterfaceTypeStatements .)
    BLPAREN         reduce using rule 214 (classOrInterfaceTypeBody -> classOrInterfaceTypeStatements .)
    IMPLEMENTS      reduce using rule 214 (classOrInterfaceTypeBody -> classOrInterfaceTypeStatements .)
    AND             reduce using rule 214 (classOrInterfaceTypeBody -> classOrInterfaceTypeStatements .)
    MORE            reduce using rule 214 (classOrInterfaceTypeBody -> classOrInterfaceTypeStatements .)
    OP_EQ           reduce using rule 214 (classOrInterfaceTypeBody -> classOrInterfaceTypeStatements .)
    OP_NE           reduce using rule 214 (classOrInterfaceTypeBody -> classOrInterfaceTypeStatements .)
    CARET           reduce using rule 214 (classOrInterfaceTypeBody -> classOrInterfaceTypeStatements .)
    VERTICAL        reduce using rule 214 (classOrInterfaceTypeBody -> classOrInterfaceTypeStatements .)
    OP_LAND         reduce using rule 214 (classOrInterfaceTypeBody -> classOrInterfaceTypeStatements .)
    OP_LOR          reduce using rule 214 (classOrInterfaceTypeBody -> classOrInterfaceTypeStatements .)
    QUES            reduce using rule 214 (classOrInterfaceTypeBody -> classOrInterfaceTypeStatements .)
    RPAREN          reduce using rule 214 (classOrInterfaceTypeBody -> classOrInterfaceTypeStatements .)
    BRPAREN         reduce using rule 214 (classOrInterfaceTypeBody -> classOrInterfaceTypeStatements .)
    EQUALS          reduce using rule 214 (classOrInterfaceTypeBody -> classOrInterfaceTypeStatements .)
    ASS_ADD         reduce using rule 214 (classOrInterfaceTypeBody -> classOrInterfaceTypeStatements .)
    ASS_SUB         reduce using rule 214 (classOrInterfaceTypeBody -> classOrInterfaceTypeStatements .)
    ASS_MUL         reduce using rule 214 (classOrInterfaceTypeBody -> classOrInterfaceTypeStatements .)
    ASS_DIV         reduce using rule 214 (classOrInterfaceTypeBody -> classOrInterfaceTypeStatements .)
    ASS_AND         reduce using rule 214 (classOrInterfaceTypeBody -> classOrInterfaceTypeStatements .)
    ASS_OR          reduce using rule 214 (classOrInterfaceTypeBody -> classOrInterfaceTypeStatements .)
    ASS_XOR         reduce using rule 214 (classOrInterfaceTypeBody -> classOrInterfaceTypeStatements .)
    ASS_MOD         reduce using rule 214 (classOrInterfaceTypeBody -> classOrInterfaceTypeStatements .)
    ASS_SHL         reduce using rule 214 (classOrInterfaceTypeBody -> classOrInterfaceTypeStatements .)
    ASS_SHRR        reduce using rule 214 (classOrInterfaceTypeBody -> classOrInterfaceTypeStatements .)
    ASS_SHR         reduce using rule 214 (classOrInterfaceTypeBody -> classOrInterfaceTypeStatements .)
    FRPAREN         reduce using rule 214 (classOrInterfaceTypeBody -> classOrInterfaceTypeStatements .)
    COLON           reduce using rule 214 (classOrInterfaceTypeBody -> classOrInterfaceTypeStatements .)
    SEMI            reduce using rule 214 (classOrInterfaceTypeBody -> classOrInterfaceTypeStatements .)
    OP_ARRAY        reduce using rule 214 (classOrInterfaceTypeBody -> classOrInterfaceTypeStatements .)
    LPAREN          reduce using rule 214 (classOrInterfaceTypeBody -> classOrInterfaceTypeStatements .)
    DOT             shift and go to state 161

    classOrInterfaceTypeStatement  shift and go to state 315

state 160

    (217) classOrInterfaceTypeStatements -> classOrInterfaceTypeStatement .

    DOT             reduce using rule 217 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatement .)
    FLPAREN         reduce using rule 217 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatement .)
    RPAREN          reduce using rule 217 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatement .)
    Identifier      reduce using rule 217 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatement .)
    COMMA           reduce using rule 217 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatement .)
    BLPAREN         reduce using rule 217 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatement .)
    IMPLEMENTS      reduce using rule 217 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatement .)
    AND             reduce using rule 217 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatement .)
    MORE            reduce using rule 217 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatement .)
    OP_EQ           reduce using rule 217 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatement .)
    OP_NE           reduce using rule 217 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatement .)
    CARET           reduce using rule 217 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatement .)
    VERTICAL        reduce using rule 217 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatement .)
    OP_LAND         reduce using rule 217 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatement .)
    OP_LOR          reduce using rule 217 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatement .)
    QUES            reduce using rule 217 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatement .)
    BRPAREN         reduce using rule 217 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatement .)
    EQUALS          reduce using rule 217 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatement .)
    ASS_ADD         reduce using rule 217 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatement .)
    ASS_SUB         reduce using rule 217 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatement .)
    ASS_MUL         reduce using rule 217 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatement .)
    ASS_DIV         reduce using rule 217 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatement .)
    ASS_AND         reduce using rule 217 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatement .)
    ASS_OR          reduce using rule 217 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatement .)
    ASS_XOR         reduce using rule 217 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatement .)
    ASS_MOD         reduce using rule 217 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatement .)
    ASS_SHL         reduce using rule 217 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatement .)
    ASS_SHRR        reduce using rule 217 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatement .)
    ASS_SHR         reduce using rule 217 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatement .)
    FRPAREN         reduce using rule 217 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatement .)
    COLON           reduce using rule 217 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatement .)
    SEMI            reduce using rule 217 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatement .)
    OP_ARRAY        reduce using rule 217 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatement .)
    LPAREN          reduce using rule 217 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatement .)


state 161

    (215) classOrInterfaceTypeStatement -> DOT . Identifier typeArguments
    (216) classOrInterfaceTypeStatement -> DOT . Identifier

    Identifier      shift and go to state 316


state 162

    (99) typeList -> type COMMA_types .
    (98) COMMA_types -> COMMA_types . COMMA_type
    (96) COMMA_type -> . COMMA type

    BLPAREN         reduce using rule 99 (typeList -> type COMMA_types .)
    MORE            reduce using rule 99 (typeList -> type COMMA_types .)
    COMMA           shift and go to state 163

    COMMA_type                     shift and go to state 317

state 163

    (96) COMMA_type -> COMMA . type
    (205) type -> . type_body
    (206) type -> . primitiveType arrays
    (207) type -> . primitiveType
    (208) type_body -> . Identifier classOrInterfaceTypeBody arrays
    (209) type_body -> . Identifier classOrInterfaceTypeBody
    (210) type_body -> . Identifier arrays
    (211) type_body -> . Identifier
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE

    Identifier      shift and go to state 80
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72

    type                           shift and go to state 318
    primitiveType                  shift and go to state 74
    type_body                      shift and go to state 77

state 164

    (97) COMMA_types -> COMMA_type .

    COMMA           reduce using rule 97 (COMMA_types -> COMMA_type .)
    BLPAREN         reduce using rule 97 (COMMA_types -> COMMA_type .)
    MORE            reduce using rule 97 (COMMA_types -> COMMA_type .)


state 165

    (76) enumConstants -> enumConstant . COMMA_enumConstants
    (77) enumConstants -> enumConstant .
    (74) COMMA_enumConstants -> . COMMA_enumConstant
    (75) COMMA_enumConstants -> . COMMA_enumConstant COMMA_enumConstants
    (73) COMMA_enumConstant -> . COMMA enumConstant

  ! shift/reduce conflict for COMMA resolved as shift
    SEMI            reduce using rule 77 (enumConstants -> enumConstant .)
    BRPAREN         reduce using rule 77 (enumConstants -> enumConstant .)
    COMMA           shift and go to state 320

  ! COMMA           [ reduce using rule 77 (enumConstants -> enumConstant .) ]

    COMMA_enumConstants            shift and go to state 319
    COMMA_enumConstant             shift and go to state 321

state 166

    (87) enumBodyDeclarations -> SEMI . classBodyDeclarations
    (88) enumBodyDeclarations -> SEMI .
    (85) classBodyDeclarations -> . classBodyDeclaration
    (86) classBodyDeclarations -> . classBodyDeclarations classBodyDeclaration
    (107) classBodyDeclaration -> . SEMI
    (108) classBodyDeclaration -> . STATIC block
    (109) classBodyDeclaration -> . block
    (110) classBodyDeclaration -> . modifiers memberDecl
    (111) classBodyDeclaration -> . memberDecl
    (329) block -> . BLPAREN blockStatements BRPAREN
    (330) block -> . BLPAREN BRPAREN
    (40) modifiers -> . modifier
    (41) modifiers -> . modifiers modifier
    (112) memberDecl -> . genericMethodOrConstructorDecl
    (113) memberDecl -> . memberDeclaration
    (114) memberDecl -> . VOID Identifier voidMethodDeclaratorRest
    (115) memberDecl -> . Identifier constructorDeclaratorRest
    (116) memberDecl -> . interfaceDeclaration
    (117) memberDecl -> . classDeclaration
    (190) modifier -> . annotation
    (191) modifier -> . PUBLIC
    (192) modifier -> . PROTECTED
    (193) modifier -> . PRIVATE
    (194) modifier -> . STATIC
    (195) modifier -> . ABSTRACT
    (196) modifier -> . FINAL
    (197) modifier -> . NATIVE
    (198) modifier -> . SYNCHRONIZED
    (199) modifier -> . TRANSIENT
    (200) modifier -> . VOLATILE
    (201) modifier -> . STRICTFP
    (120) genericMethodOrConstructorDecl -> . typeParameters genericMethodOrConstructorRest
    (118) memberDeclaration -> . type methodDeclaration
    (119) memberDeclaration -> . type fieldDeclaration
    (89) interfaceDeclaration -> . normalInterfaceDeclaration
    (90) interfaceDeclaration -> . annotationTypeDeclaration
    (42) classDeclaration -> . normalClassDeclaration
    (43) classDeclaration -> . enumDeclaration
    (287) annotation -> . AT annotationName annotationBody
    (52) typeParameters -> . LESS typeParameter dotTypeParameters MORE
    (53) typeParameters -> . LESS typeParameter MORE
    (54) typeParameters -> .
    (205) type -> . type_body
    (206) type -> . primitiveType arrays
    (207) type -> . primitiveType
    (95) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody
    (308) annotationTypeDeclaration -> . AT INTERFACE Identifier annotationTypeBody
    (48) normalClassDeclaration -> . CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody
    (63) enumDeclaration -> . ENUM Identifier IMPLEMENTS_typeList enumBody
    (208) type_body -> . Identifier classOrInterfaceTypeBody arrays
    (209) type_body -> . Identifier classOrInterfaceTypeBody
    (210) type_body -> . Identifier arrays
    (211) type_body -> . Identifier
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE

  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for Identifier resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    BRPAREN         reduce using rule 88 (enumBodyDeclarations -> SEMI .)
    SEMI            shift and go to state 325
    STATIC          shift and go to state 323
    BLPAREN         shift and go to state 335
    VOID            shift and go to state 322
    Identifier      shift and go to state 331
    PUBLIC          shift and go to state 297
    PROTECTED       shift and go to state 278
    PRIVATE         shift and go to state 284
    ABSTRACT        shift and go to state 276
    FINAL           shift and go to state 281
    NATIVE          shift and go to state 282
    SYNCHRONIZED    shift and go to state 275
    TRANSIENT       shift and go to state 286
    VOLATILE        shift and go to state 295
    STRICTFP        shift and go to state 285
    AT              shift and go to state 330
    LESS            shift and go to state 45
    INTERFACE       shift and go to state 23
    CLASS           shift and go to state 12
    ENUM            shift and go to state 15
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72

  ! VOID            [ reduce using rule 54 (typeParameters -> .) ]
  ! Identifier      [ reduce using rule 54 (typeParameters -> .) ]
  ! BOOLEAN         [ reduce using rule 54 (typeParameters -> .) ]
  ! CHAR            [ reduce using rule 54 (typeParameters -> .) ]
  ! BYTE            [ reduce using rule 54 (typeParameters -> .) ]
  ! SHORT           [ reduce using rule 54 (typeParameters -> .) ]
  ! INT             [ reduce using rule 54 (typeParameters -> .) ]
  ! LONG            [ reduce using rule 54 (typeParameters -> .) ]
  ! FLOAT           [ reduce using rule 54 (typeParameters -> .) ]
  ! DOUBLE          [ reduce using rule 54 (typeParameters -> .) ]

    memberDecl                     shift and go to state 334
    primitiveType                  shift and go to state 74
    typeParameters                 shift and go to state 324
    normalInterfaceDeclaration     shift and go to state 5
    classBodyDeclarations          shift and go to state 333
    memberDeclaration              shift and go to state 326
    type                           shift and go to state 327
    enumDeclaration                shift and go to state 13
    genericMethodOrConstructorDecl shift and go to state 328
    classDeclaration               shift and go to state 329
    annotation                     shift and go to state 291
    modifiers                      shift and go to state 332
    normalClassDeclaration         shift and go to state 7
    type_body                      shift and go to state 77
    annotationTypeDeclaration      shift and go to state 21
    interfaceDeclaration           shift and go to state 336
    classBodyDeclaration           shift and go to state 337
    modifier                       shift and go to state 296
    block                          shift and go to state 338

state 167

    (71) enumBody -> BLPAREN enumBodyStatement . BRPAREN

    BRPAREN         shift and go to state 339


state 168

    (70) enumBodyStatement -> enumBodyDeclarations .

    BRPAREN         reduce using rule 70 (enumBodyStatement -> enumBodyDeclarations .)


state 169

    (78) annotations_once -> annotations .
    (282) annotations -> annotations . annotation
    (287) annotation -> . AT annotationName annotationBody

    Identifier      reduce using rule 78 (annotations_once -> annotations .)
    AT              shift and go to state 133

    annotation                     shift and go to state 340

state 170

    (64) enumBodyStatement -> enumConstants . COMMA enumBodyDeclarations
    (65) enumBodyStatement -> enumConstants . COMMA
    (66) enumBodyStatement -> enumConstants . enumBodyDeclarations
    (69) enumBodyStatement -> enumConstants .
    (87) enumBodyDeclarations -> . SEMI classBodyDeclarations
    (88) enumBodyDeclarations -> . SEMI

    COMMA           shift and go to state 342
    BRPAREN         reduce using rule 69 (enumBodyStatement -> enumConstants .)
    SEMI            shift and go to state 166

    enumBodyDeclarations           shift and go to state 341

state 171

    (67) enumBodyStatement -> COMMA . enumBodyDeclarations
    (68) enumBodyStatement -> COMMA .
    (87) enumBodyDeclarations -> . SEMI classBodyDeclarations
    (88) enumBodyDeclarations -> . SEMI

    BRPAREN         reduce using rule 68 (enumBodyStatement -> COMMA .)
    SEMI            shift and go to state 166

    enumBodyDeclarations           shift and go to state 343

state 172

    (79) annotations_once -> empty .

    Identifier      reduce using rule 79 (annotations_once -> empty .)


state 173

    (281) annotations -> annotation .

    AT              reduce using rule 281 (annotations -> annotation .)
    Identifier      reduce using rule 281 (annotations -> annotation .)


state 174

    (84) enumConstant -> annotations_once . Identifier arguments_once classBody_once

    Identifier      shift and go to state 344


state 175

    (72) enumBody -> BLPAREN BRPAREN .

    SEMI            reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    PUBLIC          reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    PROTECTED       reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    PRIVATE         reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    ABSTRACT        reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    STATIC          reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    FINAL           reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    STRICTFP        reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    CLASS           reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    ENUM            reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    INTERFACE       reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    AT              reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    $end            reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    BRPAREN         reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    ASSERT          reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    IF              reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    FOR             reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    WHILE           reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    DO              reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    TRY             reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    SWITCH          reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    SYNCHRONIZED    reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    RETURN          reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    THROW           reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    BREAK           reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    CONTINUE        reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    Identifier      reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    BLPAREN         reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    BOOLEAN         reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    CHAR            reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    BYTE            reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    SHORT           reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    INT             reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    LONG            reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    FLOAT           reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    DOUBLE          reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    PLUS            reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    DASH            reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    OP_INC          reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    OP_DEC          reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    TILDE           reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    EXCLAMATION     reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    LPAREN          reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    THIS            reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    SUPER           reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    NEW             reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    VOID            reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    CharacterLiteral reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    StringLiteral   reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    NULL            reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    LONG_NUMBER     reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    LONG_HEX_NUMBER reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    NON_INTEGER_1   reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    NON_INTEGER_2   reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    NON_INTEGER_3   reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    NON_INTEGER_4   reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    TRUE            reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    FALSE           reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    CASE            reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    DEFAULT         reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    NATIVE          reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    TRANSIENT       reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    VOLATILE        reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)
    LESS            reduce using rule 72 (enumBody -> BLPAREN BRPAREN .)


state 176

    (22) importDeclaration -> IMPORT STATIC qualifiedName SEMI .

    IMPORT          reduce using rule 22 (importDeclaration -> IMPORT STATIC qualifiedName SEMI .)
    SEMI            reduce using rule 22 (importDeclaration -> IMPORT STATIC qualifiedName SEMI .)
    PUBLIC          reduce using rule 22 (importDeclaration -> IMPORT STATIC qualifiedName SEMI .)
    PROTECTED       reduce using rule 22 (importDeclaration -> IMPORT STATIC qualifiedName SEMI .)
    PRIVATE         reduce using rule 22 (importDeclaration -> IMPORT STATIC qualifiedName SEMI .)
    ABSTRACT        reduce using rule 22 (importDeclaration -> IMPORT STATIC qualifiedName SEMI .)
    STATIC          reduce using rule 22 (importDeclaration -> IMPORT STATIC qualifiedName SEMI .)
    FINAL           reduce using rule 22 (importDeclaration -> IMPORT STATIC qualifiedName SEMI .)
    STRICTFP        reduce using rule 22 (importDeclaration -> IMPORT STATIC qualifiedName SEMI .)
    CLASS           reduce using rule 22 (importDeclaration -> IMPORT STATIC qualifiedName SEMI .)
    ENUM            reduce using rule 22 (importDeclaration -> IMPORT STATIC qualifiedName SEMI .)
    INTERFACE       reduce using rule 22 (importDeclaration -> IMPORT STATIC qualifiedName SEMI .)
    AT              reduce using rule 22 (importDeclaration -> IMPORT STATIC qualifiedName SEMI .)
    $end            reduce using rule 22 (importDeclaration -> IMPORT STATIC qualifiedName SEMI .)


state 177

    (497) unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .

    MULT            reduce using rule 497 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    SLASH           reduce using rule 497 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    PERCENT         reduce using rule 497 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    PLUS            reduce using rule 497 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    DASH            reduce using rule 497 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    OP_SHR          reduce using rule 497 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    OP_SHRR         reduce using rule 497 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    OP_SHL          reduce using rule 497 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    OP_LE           reduce using rule 497 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    OP_GE           reduce using rule 497 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    LESS            reduce using rule 497 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    MORE            reduce using rule 497 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    INSTANCEOF      reduce using rule 497 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    OP_EQ           reduce using rule 497 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    OP_NE           reduce using rule 497 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    AND             reduce using rule 497 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    CARET           reduce using rule 497 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    VERTICAL        reduce using rule 497 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    OP_LAND         reduce using rule 497 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    OP_LOR          reduce using rule 497 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    QUES            reduce using rule 497 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    EQUALS          reduce using rule 497 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    ASS_ADD         reduce using rule 497 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    ASS_SUB         reduce using rule 497 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    ASS_MUL         reduce using rule 497 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    ASS_DIV         reduce using rule 497 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    ASS_AND         reduce using rule 497 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    ASS_OR          reduce using rule 497 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    ASS_XOR         reduce using rule 497 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    ASS_MOD         reduce using rule 497 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    ASS_SHL         reduce using rule 497 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    ASS_SHRR        reduce using rule 497 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    ASS_SHR         reduce using rule 497 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    RPAREN          reduce using rule 497 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    COMMA           reduce using rule 497 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    SEMI            reduce using rule 497 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    FRPAREN         reduce using rule 497 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    BRPAREN         reduce using rule 497 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    COLON           reduce using rule 497 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)


state 178

    (512) primary -> Identifier . DOT_Identifiers identifierSuffix_empty
    (513) primary -> Identifier . identifierSuffix_empty
    (269) DOT_Identifiers -> . DOT_Identifier
    (270) DOT_Identifiers -> . DOT_Identifiers DOT_Identifier
    (504) identifierSuffix_empty -> . identifierSuffix
    (505) identifierSuffix_empty -> .
    (267) DOT_Identifier -> . DOT Identifier
    (268) DOT_Identifier -> . DOT MULT
    (520) identifierSuffix -> . arrays DOT CLASS
    (521) identifierSuffix -> . FL_expression_FRs
    (522) identifierSuffix -> . arguments
    (523) identifierSuffix -> . DOT CLASS
    (524) identifierSuffix -> . DOT explicitGenericInvocation
    (525) identifierSuffix -> . DOT THIS
    (526) identifierSuffix -> . DOT SUPER arguments
    (527) identifierSuffix -> . DOT NEW innerCreator
    (138) arrays -> . arrays array
    (139) arrays -> . array
    (518) FL_expression_FRs -> . FL_expression_FR
    (519) FL_expression_FRs -> . FL_expression_FRs FL_expression_FR
    (555) arguments -> . LPAREN expressionList_once RPAREN
    (137) array -> . FLPAREN FRPAREN
    (517) FL_expression_FR -> . FLPAREN expression FRPAREN

  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for FLPAREN resolved as shift
    OP_INC          reduce using rule 505 (identifierSuffix_empty -> .)
    OP_DEC          reduce using rule 505 (identifierSuffix_empty -> .)
    MULT            reduce using rule 505 (identifierSuffix_empty -> .)
    SLASH           reduce using rule 505 (identifierSuffix_empty -> .)
    PERCENT         reduce using rule 505 (identifierSuffix_empty -> .)
    PLUS            reduce using rule 505 (identifierSuffix_empty -> .)
    DASH            reduce using rule 505 (identifierSuffix_empty -> .)
    OP_SHR          reduce using rule 505 (identifierSuffix_empty -> .)
    OP_SHRR         reduce using rule 505 (identifierSuffix_empty -> .)
    OP_SHL          reduce using rule 505 (identifierSuffix_empty -> .)
    OP_LE           reduce using rule 505 (identifierSuffix_empty -> .)
    OP_GE           reduce using rule 505 (identifierSuffix_empty -> .)
    LESS            reduce using rule 505 (identifierSuffix_empty -> .)
    MORE            reduce using rule 505 (identifierSuffix_empty -> .)
    INSTANCEOF      reduce using rule 505 (identifierSuffix_empty -> .)
    OP_EQ           reduce using rule 505 (identifierSuffix_empty -> .)
    OP_NE           reduce using rule 505 (identifierSuffix_empty -> .)
    AND             reduce using rule 505 (identifierSuffix_empty -> .)
    CARET           reduce using rule 505 (identifierSuffix_empty -> .)
    VERTICAL        reduce using rule 505 (identifierSuffix_empty -> .)
    OP_LAND         reduce using rule 505 (identifierSuffix_empty -> .)
    OP_LOR          reduce using rule 505 (identifierSuffix_empty -> .)
    QUES            reduce using rule 505 (identifierSuffix_empty -> .)
    RPAREN          reduce using rule 505 (identifierSuffix_empty -> .)
    COMMA           reduce using rule 505 (identifierSuffix_empty -> .)
    BRPAREN         reduce using rule 505 (identifierSuffix_empty -> .)
    EQUALS          reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_ADD         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_SUB         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_MUL         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_DIV         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_AND         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_OR          reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_XOR         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_MOD         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_SHL         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_SHRR        reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_SHR         reduce using rule 505 (identifierSuffix_empty -> .)
    FRPAREN         reduce using rule 505 (identifierSuffix_empty -> .)
    COLON           reduce using rule 505 (identifierSuffix_empty -> .)
    SEMI            reduce using rule 505 (identifierSuffix_empty -> .)
    DOT             shift and go to state 194
    LPAREN          shift and go to state 199
    FLPAREN         shift and go to state 193

  ! DOT             [ reduce using rule 505 (identifierSuffix_empty -> .) ]
  ! FLPAREN         [ reduce using rule 505 (identifierSuffix_empty -> .) ]

    FL_expression_FRs              shift and go to state 196
    identifierSuffix               shift and go to state 197
    FL_expression_FR               shift and go to state 192
    arrays                         shift and go to state 200
    DOT_Identifiers                shift and go to state 213
    identifierSuffix_empty         shift and go to state 215
    arguments                      shift and go to state 195
    DOT_Identifier                 shift and go to state 48
    array                          shift and go to state 154

state 179

    (516) primary -> VOID DOT . CLASS

    CLASS           shift and go to state 345


state 180

    (425) conditionalOrExpression -> conditionalAndExpression O_conditionalAndExpressions .
    (424) O_conditionalAndExpressions -> O_conditionalAndExpressions . O_conditionalAndExpression
    (422) O_conditionalAndExpression -> . OP_LOR conditionalAndExpression

    QUES            reduce using rule 425 (conditionalOrExpression -> conditionalAndExpression O_conditionalAndExpressions .)
    EQUALS          reduce using rule 425 (conditionalOrExpression -> conditionalAndExpression O_conditionalAndExpressions .)
    ASS_ADD         reduce using rule 425 (conditionalOrExpression -> conditionalAndExpression O_conditionalAndExpressions .)
    ASS_SUB         reduce using rule 425 (conditionalOrExpression -> conditionalAndExpression O_conditionalAndExpressions .)
    ASS_MUL         reduce using rule 425 (conditionalOrExpression -> conditionalAndExpression O_conditionalAndExpressions .)
    ASS_DIV         reduce using rule 425 (conditionalOrExpression -> conditionalAndExpression O_conditionalAndExpressions .)
    ASS_AND         reduce using rule 425 (conditionalOrExpression -> conditionalAndExpression O_conditionalAndExpressions .)
    ASS_OR          reduce using rule 425 (conditionalOrExpression -> conditionalAndExpression O_conditionalAndExpressions .)
    ASS_XOR         reduce using rule 425 (conditionalOrExpression -> conditionalAndExpression O_conditionalAndExpressions .)
    ASS_MOD         reduce using rule 425 (conditionalOrExpression -> conditionalAndExpression O_conditionalAndExpressions .)
    ASS_SHL         reduce using rule 425 (conditionalOrExpression -> conditionalAndExpression O_conditionalAndExpressions .)
    ASS_SHRR        reduce using rule 425 (conditionalOrExpression -> conditionalAndExpression O_conditionalAndExpressions .)
    ASS_SHR         reduce using rule 425 (conditionalOrExpression -> conditionalAndExpression O_conditionalAndExpressions .)
    COMMA           reduce using rule 425 (conditionalOrExpression -> conditionalAndExpression O_conditionalAndExpressions .)
    SEMI            reduce using rule 425 (conditionalOrExpression -> conditionalAndExpression O_conditionalAndExpressions .)
    FRPAREN         reduce using rule 425 (conditionalOrExpression -> conditionalAndExpression O_conditionalAndExpressions .)
    RPAREN          reduce using rule 425 (conditionalOrExpression -> conditionalAndExpression O_conditionalAndExpressions .)
    BRPAREN         reduce using rule 425 (conditionalOrExpression -> conditionalAndExpression O_conditionalAndExpressions .)
    COLON           reduce using rule 425 (conditionalOrExpression -> conditionalAndExpression O_conditionalAndExpressions .)
    OP_LOR          shift and go to state 181

    O_conditionalAndExpression     shift and go to state 346

state 181

    (422) O_conditionalAndExpression -> OP_LOR . conditionalAndExpression
    (430) conditionalAndExpression -> . inclusiveOrExpression O_inclusiveOrExpressions
    (431) conditionalAndExpression -> . inclusiveOrExpression
    (435) inclusiveOrExpression -> . exclusiveOrExpression V_exclusiveOrExpression
    (436) inclusiveOrExpression -> . exclusiveOrExpression
    (440) exclusiveOrExpression -> . andExpression CARET_andExpressions
    (441) exclusiveOrExpression -> . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    equalityExpression             shift and go to state 108
    inclusiveOrExpression          shift and go to state 99
    multiplicativeExpression       shift and go to state 128
    exclusiveOrExpression          shift and go to state 110
    conditionalAndExpression       shift and go to state 347
    shiftExpression                shift and go to state 130
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    integerLiteral                 shift and go to state 98
    additiveExpression             shift and go to state 102
    instanceOfExpression           shift and go to state 96
    unaryExpression                shift and go to state 131
    FloatingPointLiteral           shift and go to state 119
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    relationalExpression           shift and go to state 95
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    primitiveType                  shift and go to state 122
    andExpression                  shift and go to state 106

state 182

    (423) O_conditionalAndExpressions -> O_conditionalAndExpression .

    OP_LOR          reduce using rule 423 (O_conditionalAndExpressions -> O_conditionalAndExpression .)
    QUES            reduce using rule 423 (O_conditionalAndExpressions -> O_conditionalAndExpression .)
    RPAREN          reduce using rule 423 (O_conditionalAndExpressions -> O_conditionalAndExpression .)
    COMMA           reduce using rule 423 (O_conditionalAndExpressions -> O_conditionalAndExpression .)
    BRPAREN         reduce using rule 423 (O_conditionalAndExpressions -> O_conditionalAndExpression .)
    EQUALS          reduce using rule 423 (O_conditionalAndExpressions -> O_conditionalAndExpression .)
    ASS_ADD         reduce using rule 423 (O_conditionalAndExpressions -> O_conditionalAndExpression .)
    ASS_SUB         reduce using rule 423 (O_conditionalAndExpressions -> O_conditionalAndExpression .)
    ASS_MUL         reduce using rule 423 (O_conditionalAndExpressions -> O_conditionalAndExpression .)
    ASS_DIV         reduce using rule 423 (O_conditionalAndExpressions -> O_conditionalAndExpression .)
    ASS_AND         reduce using rule 423 (O_conditionalAndExpressions -> O_conditionalAndExpression .)
    ASS_OR          reduce using rule 423 (O_conditionalAndExpressions -> O_conditionalAndExpression .)
    ASS_XOR         reduce using rule 423 (O_conditionalAndExpressions -> O_conditionalAndExpression .)
    ASS_MOD         reduce using rule 423 (O_conditionalAndExpressions -> O_conditionalAndExpression .)
    ASS_SHL         reduce using rule 423 (O_conditionalAndExpressions -> O_conditionalAndExpression .)
    ASS_SHRR        reduce using rule 423 (O_conditionalAndExpressions -> O_conditionalAndExpression .)
    ASS_SHR         reduce using rule 423 (O_conditionalAndExpressions -> O_conditionalAndExpression .)
    FRPAREN         reduce using rule 423 (O_conditionalAndExpressions -> O_conditionalAndExpression .)
    COLON           reduce using rule 423 (O_conditionalAndExpressions -> O_conditionalAndExpression .)
    SEMI            reduce using rule 423 (O_conditionalAndExpressions -> O_conditionalAndExpression .)


state 183

    (486) unaryExpression -> PLUS unaryExpression .

    MULT            reduce using rule 486 (unaryExpression -> PLUS unaryExpression .)
    SLASH           reduce using rule 486 (unaryExpression -> PLUS unaryExpression .)
    PERCENT         reduce using rule 486 (unaryExpression -> PLUS unaryExpression .)
    PLUS            reduce using rule 486 (unaryExpression -> PLUS unaryExpression .)
    DASH            reduce using rule 486 (unaryExpression -> PLUS unaryExpression .)
    OP_SHR          reduce using rule 486 (unaryExpression -> PLUS unaryExpression .)
    OP_SHRR         reduce using rule 486 (unaryExpression -> PLUS unaryExpression .)
    OP_SHL          reduce using rule 486 (unaryExpression -> PLUS unaryExpression .)
    OP_LE           reduce using rule 486 (unaryExpression -> PLUS unaryExpression .)
    OP_GE           reduce using rule 486 (unaryExpression -> PLUS unaryExpression .)
    LESS            reduce using rule 486 (unaryExpression -> PLUS unaryExpression .)
    MORE            reduce using rule 486 (unaryExpression -> PLUS unaryExpression .)
    INSTANCEOF      reduce using rule 486 (unaryExpression -> PLUS unaryExpression .)
    OP_EQ           reduce using rule 486 (unaryExpression -> PLUS unaryExpression .)
    OP_NE           reduce using rule 486 (unaryExpression -> PLUS unaryExpression .)
    AND             reduce using rule 486 (unaryExpression -> PLUS unaryExpression .)
    CARET           reduce using rule 486 (unaryExpression -> PLUS unaryExpression .)
    VERTICAL        reduce using rule 486 (unaryExpression -> PLUS unaryExpression .)
    OP_LAND         reduce using rule 486 (unaryExpression -> PLUS unaryExpression .)
    OP_LOR          reduce using rule 486 (unaryExpression -> PLUS unaryExpression .)
    QUES            reduce using rule 486 (unaryExpression -> PLUS unaryExpression .)
    RPAREN          reduce using rule 486 (unaryExpression -> PLUS unaryExpression .)
    COMMA           reduce using rule 486 (unaryExpression -> PLUS unaryExpression .)
    BRPAREN         reduce using rule 486 (unaryExpression -> PLUS unaryExpression .)
    EQUALS          reduce using rule 486 (unaryExpression -> PLUS unaryExpression .)
    ASS_ADD         reduce using rule 486 (unaryExpression -> PLUS unaryExpression .)
    ASS_SUB         reduce using rule 486 (unaryExpression -> PLUS unaryExpression .)
    ASS_MUL         reduce using rule 486 (unaryExpression -> PLUS unaryExpression .)
    ASS_DIV         reduce using rule 486 (unaryExpression -> PLUS unaryExpression .)
    ASS_AND         reduce using rule 486 (unaryExpression -> PLUS unaryExpression .)
    ASS_OR          reduce using rule 486 (unaryExpression -> PLUS unaryExpression .)
    ASS_XOR         reduce using rule 486 (unaryExpression -> PLUS unaryExpression .)
    ASS_MOD         reduce using rule 486 (unaryExpression -> PLUS unaryExpression .)
    ASS_SHL         reduce using rule 486 (unaryExpression -> PLUS unaryExpression .)
    ASS_SHRR        reduce using rule 486 (unaryExpression -> PLUS unaryExpression .)
    ASS_SHR         reduce using rule 486 (unaryExpression -> PLUS unaryExpression .)
    FRPAREN         reduce using rule 486 (unaryExpression -> PLUS unaryExpression .)
    COLON           reduce using rule 486 (unaryExpression -> PLUS unaryExpression .)
    SEMI            reduce using rule 486 (unaryExpression -> PLUS unaryExpression .)


state 184

    (487) unaryExpression -> DASH unaryExpression .

    MULT            reduce using rule 487 (unaryExpression -> DASH unaryExpression .)
    SLASH           reduce using rule 487 (unaryExpression -> DASH unaryExpression .)
    PERCENT         reduce using rule 487 (unaryExpression -> DASH unaryExpression .)
    PLUS            reduce using rule 487 (unaryExpression -> DASH unaryExpression .)
    DASH            reduce using rule 487 (unaryExpression -> DASH unaryExpression .)
    OP_SHR          reduce using rule 487 (unaryExpression -> DASH unaryExpression .)
    OP_SHRR         reduce using rule 487 (unaryExpression -> DASH unaryExpression .)
    OP_SHL          reduce using rule 487 (unaryExpression -> DASH unaryExpression .)
    OP_LE           reduce using rule 487 (unaryExpression -> DASH unaryExpression .)
    OP_GE           reduce using rule 487 (unaryExpression -> DASH unaryExpression .)
    LESS            reduce using rule 487 (unaryExpression -> DASH unaryExpression .)
    MORE            reduce using rule 487 (unaryExpression -> DASH unaryExpression .)
    INSTANCEOF      reduce using rule 487 (unaryExpression -> DASH unaryExpression .)
    OP_EQ           reduce using rule 487 (unaryExpression -> DASH unaryExpression .)
    OP_NE           reduce using rule 487 (unaryExpression -> DASH unaryExpression .)
    AND             reduce using rule 487 (unaryExpression -> DASH unaryExpression .)
    CARET           reduce using rule 487 (unaryExpression -> DASH unaryExpression .)
    VERTICAL        reduce using rule 487 (unaryExpression -> DASH unaryExpression .)
    OP_LAND         reduce using rule 487 (unaryExpression -> DASH unaryExpression .)
    OP_LOR          reduce using rule 487 (unaryExpression -> DASH unaryExpression .)
    QUES            reduce using rule 487 (unaryExpression -> DASH unaryExpression .)
    RPAREN          reduce using rule 487 (unaryExpression -> DASH unaryExpression .)
    COMMA           reduce using rule 487 (unaryExpression -> DASH unaryExpression .)
    BRPAREN         reduce using rule 487 (unaryExpression -> DASH unaryExpression .)
    EQUALS          reduce using rule 487 (unaryExpression -> DASH unaryExpression .)
    ASS_ADD         reduce using rule 487 (unaryExpression -> DASH unaryExpression .)
    ASS_SUB         reduce using rule 487 (unaryExpression -> DASH unaryExpression .)
    ASS_MUL         reduce using rule 487 (unaryExpression -> DASH unaryExpression .)
    ASS_DIV         reduce using rule 487 (unaryExpression -> DASH unaryExpression .)
    ASS_AND         reduce using rule 487 (unaryExpression -> DASH unaryExpression .)
    ASS_OR          reduce using rule 487 (unaryExpression -> DASH unaryExpression .)
    ASS_XOR         reduce using rule 487 (unaryExpression -> DASH unaryExpression .)
    ASS_MOD         reduce using rule 487 (unaryExpression -> DASH unaryExpression .)
    ASS_SHL         reduce using rule 487 (unaryExpression -> DASH unaryExpression .)
    ASS_SHRR        reduce using rule 487 (unaryExpression -> DASH unaryExpression .)
    ASS_SHR         reduce using rule 487 (unaryExpression -> DASH unaryExpression .)
    FRPAREN         reduce using rule 487 (unaryExpression -> DASH unaryExpression .)
    COLON           reduce using rule 487 (unaryExpression -> DASH unaryExpression .)
    SEMI            reduce using rule 487 (unaryExpression -> DASH unaryExpression .)


state 185

    (453) INSTANCEOF_type_once -> INSTANCEOF . type
    (205) type -> . type_body
    (206) type -> . primitiveType arrays
    (207) type -> . primitiveType
    (208) type_body -> . Identifier classOrInterfaceTypeBody arrays
    (209) type_body -> . Identifier classOrInterfaceTypeBody
    (210) type_body -> . Identifier arrays
    (211) type_body -> . Identifier
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE

    Identifier      shift and go to state 80
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72

    type                           shift and go to state 348
    primitiveType                  shift and go to state 74
    type_body                      shift and go to state 77

state 186

    (455) instanceOfExpression -> relationalExpression INSTANCEOF_type_once .

    OP_EQ           reduce using rule 455 (instanceOfExpression -> relationalExpression INSTANCEOF_type_once .)
    OP_NE           reduce using rule 455 (instanceOfExpression -> relationalExpression INSTANCEOF_type_once .)
    AND             reduce using rule 455 (instanceOfExpression -> relationalExpression INSTANCEOF_type_once .)
    CARET           reduce using rule 455 (instanceOfExpression -> relationalExpression INSTANCEOF_type_once .)
    VERTICAL        reduce using rule 455 (instanceOfExpression -> relationalExpression INSTANCEOF_type_once .)
    OP_LAND         reduce using rule 455 (instanceOfExpression -> relationalExpression INSTANCEOF_type_once .)
    OP_LOR          reduce using rule 455 (instanceOfExpression -> relationalExpression INSTANCEOF_type_once .)
    QUES            reduce using rule 455 (instanceOfExpression -> relationalExpression INSTANCEOF_type_once .)
    EQUALS          reduce using rule 455 (instanceOfExpression -> relationalExpression INSTANCEOF_type_once .)
    ASS_ADD         reduce using rule 455 (instanceOfExpression -> relationalExpression INSTANCEOF_type_once .)
    ASS_SUB         reduce using rule 455 (instanceOfExpression -> relationalExpression INSTANCEOF_type_once .)
    ASS_MUL         reduce using rule 455 (instanceOfExpression -> relationalExpression INSTANCEOF_type_once .)
    ASS_DIV         reduce using rule 455 (instanceOfExpression -> relationalExpression INSTANCEOF_type_once .)
    ASS_AND         reduce using rule 455 (instanceOfExpression -> relationalExpression INSTANCEOF_type_once .)
    ASS_OR          reduce using rule 455 (instanceOfExpression -> relationalExpression INSTANCEOF_type_once .)
    ASS_XOR         reduce using rule 455 (instanceOfExpression -> relationalExpression INSTANCEOF_type_once .)
    ASS_MOD         reduce using rule 455 (instanceOfExpression -> relationalExpression INSTANCEOF_type_once .)
    ASS_SHL         reduce using rule 455 (instanceOfExpression -> relationalExpression INSTANCEOF_type_once .)
    ASS_SHRR        reduce using rule 455 (instanceOfExpression -> relationalExpression INSTANCEOF_type_once .)
    ASS_SHR         reduce using rule 455 (instanceOfExpression -> relationalExpression INSTANCEOF_type_once .)
    RPAREN          reduce using rule 455 (instanceOfExpression -> relationalExpression INSTANCEOF_type_once .)
    COLON           reduce using rule 455 (instanceOfExpression -> relationalExpression INSTANCEOF_type_once .)
    COMMA           reduce using rule 455 (instanceOfExpression -> relationalExpression INSTANCEOF_type_once .)
    SEMI            reduce using rule 455 (instanceOfExpression -> relationalExpression INSTANCEOF_type_once .)
    BRPAREN         reduce using rule 455 (instanceOfExpression -> relationalExpression INSTANCEOF_type_once .)
    FRPAREN         reduce using rule 455 (instanceOfExpression -> relationalExpression INSTANCEOF_type_once .)


state 187

    (449) instanceOfExpressionStats -> instanceOfExpressionStat .

    OP_EQ           reduce using rule 449 (instanceOfExpressionStats -> instanceOfExpressionStat .)
    OP_NE           reduce using rule 449 (instanceOfExpressionStats -> instanceOfExpressionStat .)
    AND             reduce using rule 449 (instanceOfExpressionStats -> instanceOfExpressionStat .)
    CARET           reduce using rule 449 (instanceOfExpressionStats -> instanceOfExpressionStat .)
    VERTICAL        reduce using rule 449 (instanceOfExpressionStats -> instanceOfExpressionStat .)
    OP_LAND         reduce using rule 449 (instanceOfExpressionStats -> instanceOfExpressionStat .)
    OP_LOR          reduce using rule 449 (instanceOfExpressionStats -> instanceOfExpressionStat .)
    QUES            reduce using rule 449 (instanceOfExpressionStats -> instanceOfExpressionStat .)
    RPAREN          reduce using rule 449 (instanceOfExpressionStats -> instanceOfExpressionStat .)
    COMMA           reduce using rule 449 (instanceOfExpressionStats -> instanceOfExpressionStat .)
    BRPAREN         reduce using rule 449 (instanceOfExpressionStats -> instanceOfExpressionStat .)
    EQUALS          reduce using rule 449 (instanceOfExpressionStats -> instanceOfExpressionStat .)
    ASS_ADD         reduce using rule 449 (instanceOfExpressionStats -> instanceOfExpressionStat .)
    ASS_SUB         reduce using rule 449 (instanceOfExpressionStats -> instanceOfExpressionStat .)
    ASS_MUL         reduce using rule 449 (instanceOfExpressionStats -> instanceOfExpressionStat .)
    ASS_DIV         reduce using rule 449 (instanceOfExpressionStats -> instanceOfExpressionStat .)
    ASS_AND         reduce using rule 449 (instanceOfExpressionStats -> instanceOfExpressionStat .)
    ASS_OR          reduce using rule 449 (instanceOfExpressionStats -> instanceOfExpressionStat .)
    ASS_XOR         reduce using rule 449 (instanceOfExpressionStats -> instanceOfExpressionStat .)
    ASS_MOD         reduce using rule 449 (instanceOfExpressionStats -> instanceOfExpressionStat .)
    ASS_SHL         reduce using rule 449 (instanceOfExpressionStats -> instanceOfExpressionStat .)
    ASS_SHRR        reduce using rule 449 (instanceOfExpressionStats -> instanceOfExpressionStat .)
    ASS_SHR         reduce using rule 449 (instanceOfExpressionStats -> instanceOfExpressionStat .)
    FRPAREN         reduce using rule 449 (instanceOfExpressionStats -> instanceOfExpressionStat .)
    COLON           reduce using rule 449 (instanceOfExpressionStats -> instanceOfExpressionStat .)
    SEMI            reduce using rule 449 (instanceOfExpressionStats -> instanceOfExpressionStat .)


state 188

    (447) instanceOfExpressionStat -> OP_EQ . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    multiplicativeExpression       shift and go to state 128
    primary                        shift and go to state 111
    shiftExpression                shift and go to state 130
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    integerLiteral                 shift and go to state 98
    additiveExpression             shift and go to state 102
    unaryExpression                shift and go to state 131
    FloatingPointLiteral           shift and go to state 119
    parExpression                  shift and go to state 132
    relationalExpression           shift and go to state 95
    instanceOfExpression           shift and go to state 349
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    primitiveType                  shift and go to state 122

state 189

    (451) equalityExpression -> instanceOfExpression instanceOfExpressionStats .
    (450) instanceOfExpressionStats -> instanceOfExpressionStats . instanceOfExpressionStat
    (447) instanceOfExpressionStat -> . OP_EQ instanceOfExpression
    (448) instanceOfExpressionStat -> . OP_NE instanceOfExpression

    AND             reduce using rule 451 (equalityExpression -> instanceOfExpression instanceOfExpressionStats .)
    CARET           reduce using rule 451 (equalityExpression -> instanceOfExpression instanceOfExpressionStats .)
    VERTICAL        reduce using rule 451 (equalityExpression -> instanceOfExpression instanceOfExpressionStats .)
    OP_LAND         reduce using rule 451 (equalityExpression -> instanceOfExpression instanceOfExpressionStats .)
    OP_LOR          reduce using rule 451 (equalityExpression -> instanceOfExpression instanceOfExpressionStats .)
    QUES            reduce using rule 451 (equalityExpression -> instanceOfExpression instanceOfExpressionStats .)
    EQUALS          reduce using rule 451 (equalityExpression -> instanceOfExpression instanceOfExpressionStats .)
    ASS_ADD         reduce using rule 451 (equalityExpression -> instanceOfExpression instanceOfExpressionStats .)
    ASS_SUB         reduce using rule 451 (equalityExpression -> instanceOfExpression instanceOfExpressionStats .)
    ASS_MUL         reduce using rule 451 (equalityExpression -> instanceOfExpression instanceOfExpressionStats .)
    ASS_DIV         reduce using rule 451 (equalityExpression -> instanceOfExpression instanceOfExpressionStats .)
    ASS_AND         reduce using rule 451 (equalityExpression -> instanceOfExpression instanceOfExpressionStats .)
    ASS_OR          reduce using rule 451 (equalityExpression -> instanceOfExpression instanceOfExpressionStats .)
    ASS_XOR         reduce using rule 451 (equalityExpression -> instanceOfExpression instanceOfExpressionStats .)
    ASS_MOD         reduce using rule 451 (equalityExpression -> instanceOfExpression instanceOfExpressionStats .)
    ASS_SHL         reduce using rule 451 (equalityExpression -> instanceOfExpression instanceOfExpressionStats .)
    ASS_SHRR        reduce using rule 451 (equalityExpression -> instanceOfExpression instanceOfExpressionStats .)
    ASS_SHR         reduce using rule 451 (equalityExpression -> instanceOfExpression instanceOfExpressionStats .)
    COLON           reduce using rule 451 (equalityExpression -> instanceOfExpression instanceOfExpressionStats .)
    SEMI            reduce using rule 451 (equalityExpression -> instanceOfExpression instanceOfExpressionStats .)
    FRPAREN         reduce using rule 451 (equalityExpression -> instanceOfExpression instanceOfExpressionStats .)
    COMMA           reduce using rule 451 (equalityExpression -> instanceOfExpression instanceOfExpressionStats .)
    RPAREN          reduce using rule 451 (equalityExpression -> instanceOfExpression instanceOfExpressionStats .)
    BRPAREN         reduce using rule 451 (equalityExpression -> instanceOfExpression instanceOfExpressionStats .)
    OP_EQ           shift and go to state 188
    OP_NE           shift and go to state 190

    instanceOfExpressionStat       shift and go to state 350

state 190

    (448) instanceOfExpressionStat -> OP_NE . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    multiplicativeExpression       shift and go to state 128
    primary                        shift and go to state 111
    shiftExpression                shift and go to state 130
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    integerLiteral                 shift and go to state 98
    additiveExpression             shift and go to state 102
    unaryExpression                shift and go to state 131
    FloatingPointLiteral           shift and go to state 119
    parExpression                  shift and go to state 132
    relationalExpression           shift and go to state 95
    instanceOfExpression           shift and go to state 351
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    primitiveType                  shift and go to state 122

state 191

    (507) primary -> THIS DOT_Identifiers . identifierSuffix_empty
    (270) DOT_Identifiers -> DOT_Identifiers . DOT_Identifier
    (504) identifierSuffix_empty -> . identifierSuffix
    (505) identifierSuffix_empty -> .
    (267) DOT_Identifier -> . DOT Identifier
    (268) DOT_Identifier -> . DOT MULT
    (520) identifierSuffix -> . arrays DOT CLASS
    (521) identifierSuffix -> . FL_expression_FRs
    (522) identifierSuffix -> . arguments
    (523) identifierSuffix -> . DOT CLASS
    (524) identifierSuffix -> . DOT explicitGenericInvocation
    (525) identifierSuffix -> . DOT THIS
    (526) identifierSuffix -> . DOT SUPER arguments
    (527) identifierSuffix -> . DOT NEW innerCreator
    (138) arrays -> . arrays array
    (139) arrays -> . array
    (518) FL_expression_FRs -> . FL_expression_FR
    (519) FL_expression_FRs -> . FL_expression_FRs FL_expression_FR
    (555) arguments -> . LPAREN expressionList_once RPAREN
    (137) array -> . FLPAREN FRPAREN
    (517) FL_expression_FR -> . FLPAREN expression FRPAREN

  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for FLPAREN resolved as shift
    OP_INC          reduce using rule 505 (identifierSuffix_empty -> .)
    OP_DEC          reduce using rule 505 (identifierSuffix_empty -> .)
    MULT            reduce using rule 505 (identifierSuffix_empty -> .)
    SLASH           reduce using rule 505 (identifierSuffix_empty -> .)
    PERCENT         reduce using rule 505 (identifierSuffix_empty -> .)
    PLUS            reduce using rule 505 (identifierSuffix_empty -> .)
    DASH            reduce using rule 505 (identifierSuffix_empty -> .)
    OP_SHR          reduce using rule 505 (identifierSuffix_empty -> .)
    OP_SHRR         reduce using rule 505 (identifierSuffix_empty -> .)
    OP_SHL          reduce using rule 505 (identifierSuffix_empty -> .)
    OP_LE           reduce using rule 505 (identifierSuffix_empty -> .)
    OP_GE           reduce using rule 505 (identifierSuffix_empty -> .)
    LESS            reduce using rule 505 (identifierSuffix_empty -> .)
    MORE            reduce using rule 505 (identifierSuffix_empty -> .)
    INSTANCEOF      reduce using rule 505 (identifierSuffix_empty -> .)
    OP_EQ           reduce using rule 505 (identifierSuffix_empty -> .)
    OP_NE           reduce using rule 505 (identifierSuffix_empty -> .)
    AND             reduce using rule 505 (identifierSuffix_empty -> .)
    CARET           reduce using rule 505 (identifierSuffix_empty -> .)
    VERTICAL        reduce using rule 505 (identifierSuffix_empty -> .)
    OP_LAND         reduce using rule 505 (identifierSuffix_empty -> .)
    OP_LOR          reduce using rule 505 (identifierSuffix_empty -> .)
    QUES            reduce using rule 505 (identifierSuffix_empty -> .)
    RPAREN          reduce using rule 505 (identifierSuffix_empty -> .)
    COMMA           reduce using rule 505 (identifierSuffix_empty -> .)
    BRPAREN         reduce using rule 505 (identifierSuffix_empty -> .)
    EQUALS          reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_ADD         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_SUB         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_MUL         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_DIV         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_AND         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_OR          reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_XOR         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_MOD         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_SHL         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_SHRR        reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_SHR         reduce using rule 505 (identifierSuffix_empty -> .)
    FRPAREN         reduce using rule 505 (identifierSuffix_empty -> .)
    COLON           reduce using rule 505 (identifierSuffix_empty -> .)
    SEMI            reduce using rule 505 (identifierSuffix_empty -> .)
    DOT             shift and go to state 194
    LPAREN          shift and go to state 199
    FLPAREN         shift and go to state 193

  ! DOT             [ reduce using rule 505 (identifierSuffix_empty -> .) ]
  ! FLPAREN         [ reduce using rule 505 (identifierSuffix_empty -> .) ]

    FL_expression_FRs              shift and go to state 196
    identifierSuffix               shift and go to state 197
    FL_expression_FR               shift and go to state 192
    arrays                         shift and go to state 200
    identifierSuffix_empty         shift and go to state 352
    arguments                      shift and go to state 195
    DOT_Identifier                 shift and go to state 69
    array                          shift and go to state 154

state 192

    (518) FL_expression_FRs -> FL_expression_FR .

    FLPAREN         reduce using rule 518 (FL_expression_FRs -> FL_expression_FR .)
    OP_INC          reduce using rule 518 (FL_expression_FRs -> FL_expression_FR .)
    OP_DEC          reduce using rule 518 (FL_expression_FRs -> FL_expression_FR .)
    DOT             reduce using rule 518 (FL_expression_FRs -> FL_expression_FR .)
    MULT            reduce using rule 518 (FL_expression_FRs -> FL_expression_FR .)
    SLASH           reduce using rule 518 (FL_expression_FRs -> FL_expression_FR .)
    PERCENT         reduce using rule 518 (FL_expression_FRs -> FL_expression_FR .)
    PLUS            reduce using rule 518 (FL_expression_FRs -> FL_expression_FR .)
    DASH            reduce using rule 518 (FL_expression_FRs -> FL_expression_FR .)
    OP_SHR          reduce using rule 518 (FL_expression_FRs -> FL_expression_FR .)
    OP_SHRR         reduce using rule 518 (FL_expression_FRs -> FL_expression_FR .)
    OP_SHL          reduce using rule 518 (FL_expression_FRs -> FL_expression_FR .)
    OP_LE           reduce using rule 518 (FL_expression_FRs -> FL_expression_FR .)
    OP_GE           reduce using rule 518 (FL_expression_FRs -> FL_expression_FR .)
    LESS            reduce using rule 518 (FL_expression_FRs -> FL_expression_FR .)
    MORE            reduce using rule 518 (FL_expression_FRs -> FL_expression_FR .)
    INSTANCEOF      reduce using rule 518 (FL_expression_FRs -> FL_expression_FR .)
    OP_EQ           reduce using rule 518 (FL_expression_FRs -> FL_expression_FR .)
    OP_NE           reduce using rule 518 (FL_expression_FRs -> FL_expression_FR .)
    AND             reduce using rule 518 (FL_expression_FRs -> FL_expression_FR .)
    CARET           reduce using rule 518 (FL_expression_FRs -> FL_expression_FR .)
    VERTICAL        reduce using rule 518 (FL_expression_FRs -> FL_expression_FR .)
    OP_LAND         reduce using rule 518 (FL_expression_FRs -> FL_expression_FR .)
    OP_LOR          reduce using rule 518 (FL_expression_FRs -> FL_expression_FR .)
    QUES            reduce using rule 518 (FL_expression_FRs -> FL_expression_FR .)
    RPAREN          reduce using rule 518 (FL_expression_FRs -> FL_expression_FR .)
    COMMA           reduce using rule 518 (FL_expression_FRs -> FL_expression_FR .)
    BRPAREN         reduce using rule 518 (FL_expression_FRs -> FL_expression_FR .)
    EQUALS          reduce using rule 518 (FL_expression_FRs -> FL_expression_FR .)
    ASS_ADD         reduce using rule 518 (FL_expression_FRs -> FL_expression_FR .)
    ASS_SUB         reduce using rule 518 (FL_expression_FRs -> FL_expression_FR .)
    ASS_MUL         reduce using rule 518 (FL_expression_FRs -> FL_expression_FR .)
    ASS_DIV         reduce using rule 518 (FL_expression_FRs -> FL_expression_FR .)
    ASS_AND         reduce using rule 518 (FL_expression_FRs -> FL_expression_FR .)
    ASS_OR          reduce using rule 518 (FL_expression_FRs -> FL_expression_FR .)
    ASS_XOR         reduce using rule 518 (FL_expression_FRs -> FL_expression_FR .)
    ASS_MOD         reduce using rule 518 (FL_expression_FRs -> FL_expression_FR .)
    ASS_SHL         reduce using rule 518 (FL_expression_FRs -> FL_expression_FR .)
    ASS_SHRR        reduce using rule 518 (FL_expression_FRs -> FL_expression_FR .)
    ASS_SHR         reduce using rule 518 (FL_expression_FRs -> FL_expression_FR .)
    FRPAREN         reduce using rule 518 (FL_expression_FRs -> FL_expression_FR .)
    COLON           reduce using rule 518 (FL_expression_FRs -> FL_expression_FR .)
    SEMI            reduce using rule 518 (FL_expression_FRs -> FL_expression_FR .)


state 193

    (137) array -> FLPAREN . FRPAREN
    (517) FL_expression_FR -> FLPAREN . expression FRPAREN
    (404) expression -> . conditionalExpression assignmentOperator_expression_empty
    (420) conditionalExpression -> . conditionalOrExpression conditionalExpressionStats
    (421) conditionalExpression -> . conditionalOrExpression
    (425) conditionalOrExpression -> . conditionalAndExpression O_conditionalAndExpressions
    (426) conditionalOrExpression -> . conditionalAndExpression
    (430) conditionalAndExpression -> . inclusiveOrExpression O_inclusiveOrExpressions
    (431) conditionalAndExpression -> . inclusiveOrExpression
    (435) inclusiveOrExpression -> . exclusiveOrExpression V_exclusiveOrExpression
    (436) inclusiveOrExpression -> . exclusiveOrExpression
    (440) exclusiveOrExpression -> . andExpression CARET_andExpressions
    (441) exclusiveOrExpression -> . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    FRPAREN         shift and go to state 309
    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    equalityExpression             shift and go to state 108
    inclusiveOrExpression          shift and go to state 99
    multiplicativeExpression       shift and go to state 128
    exclusiveOrExpression          shift and go to state 110
    conditionalAndExpression       shift and go to state 89
    shiftExpression                shift and go to state 130
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    integerLiteral                 shift and go to state 98
    additiveExpression             shift and go to state 102
    instanceOfExpression           shift and go to state 96
    conditionalExpression          shift and go to state 266
    unaryExpression                shift and go to state 131
    FloatingPointLiteral           shift and go to state 119
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    relationalExpression           shift and go to state 95
    conditionalOrExpression        shift and go to state 109
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    primitiveType                  shift and go to state 122
    andExpression                  shift and go to state 106
    expression                     shift and go to state 353

state 194

    (267) DOT_Identifier -> DOT . Identifier
    (268) DOT_Identifier -> DOT . MULT
    (523) identifierSuffix -> DOT . CLASS
    (524) identifierSuffix -> DOT . explicitGenericInvocation
    (525) identifierSuffix -> DOT . THIS
    (526) identifierSuffix -> DOT . SUPER arguments
    (527) identifierSuffix -> DOT . NEW innerCreator
    (543) explicitGenericInvocation -> . nonWildcardTypeArguments Identifier arguments
    (544) nonWildcardTypeArguments -> . LESS typeList MORE

    Identifier      shift and go to state 67
    MULT            shift and go to state 68
    CLASS           shift and go to state 359
    THIS            shift and go to state 354
    SUPER           shift and go to state 358
    NEW             shift and go to state 357
    LESS            shift and go to state 242

    explicitGenericInvocation      shift and go to state 355
    nonWildcardTypeArguments       shift and go to state 356

state 195

    (522) identifierSuffix -> arguments .

    OP_INC          reduce using rule 522 (identifierSuffix -> arguments .)
    OP_DEC          reduce using rule 522 (identifierSuffix -> arguments .)
    DOT             reduce using rule 522 (identifierSuffix -> arguments .)
    FLPAREN         reduce using rule 522 (identifierSuffix -> arguments .)
    MULT            reduce using rule 522 (identifierSuffix -> arguments .)
    SLASH           reduce using rule 522 (identifierSuffix -> arguments .)
    PERCENT         reduce using rule 522 (identifierSuffix -> arguments .)
    PLUS            reduce using rule 522 (identifierSuffix -> arguments .)
    DASH            reduce using rule 522 (identifierSuffix -> arguments .)
    OP_SHR          reduce using rule 522 (identifierSuffix -> arguments .)
    OP_SHRR         reduce using rule 522 (identifierSuffix -> arguments .)
    OP_SHL          reduce using rule 522 (identifierSuffix -> arguments .)
    OP_LE           reduce using rule 522 (identifierSuffix -> arguments .)
    OP_GE           reduce using rule 522 (identifierSuffix -> arguments .)
    LESS            reduce using rule 522 (identifierSuffix -> arguments .)
    MORE            reduce using rule 522 (identifierSuffix -> arguments .)
    INSTANCEOF      reduce using rule 522 (identifierSuffix -> arguments .)
    OP_EQ           reduce using rule 522 (identifierSuffix -> arguments .)
    OP_NE           reduce using rule 522 (identifierSuffix -> arguments .)
    AND             reduce using rule 522 (identifierSuffix -> arguments .)
    CARET           reduce using rule 522 (identifierSuffix -> arguments .)
    VERTICAL        reduce using rule 522 (identifierSuffix -> arguments .)
    OP_LAND         reduce using rule 522 (identifierSuffix -> arguments .)
    OP_LOR          reduce using rule 522 (identifierSuffix -> arguments .)
    QUES            reduce using rule 522 (identifierSuffix -> arguments .)
    EQUALS          reduce using rule 522 (identifierSuffix -> arguments .)
    ASS_ADD         reduce using rule 522 (identifierSuffix -> arguments .)
    ASS_SUB         reduce using rule 522 (identifierSuffix -> arguments .)
    ASS_MUL         reduce using rule 522 (identifierSuffix -> arguments .)
    ASS_DIV         reduce using rule 522 (identifierSuffix -> arguments .)
    ASS_AND         reduce using rule 522 (identifierSuffix -> arguments .)
    ASS_OR          reduce using rule 522 (identifierSuffix -> arguments .)
    ASS_XOR         reduce using rule 522 (identifierSuffix -> arguments .)
    ASS_MOD         reduce using rule 522 (identifierSuffix -> arguments .)
    ASS_SHL         reduce using rule 522 (identifierSuffix -> arguments .)
    ASS_SHRR        reduce using rule 522 (identifierSuffix -> arguments .)
    ASS_SHR         reduce using rule 522 (identifierSuffix -> arguments .)
    SEMI            reduce using rule 522 (identifierSuffix -> arguments .)
    COLON           reduce using rule 522 (identifierSuffix -> arguments .)
    RPAREN          reduce using rule 522 (identifierSuffix -> arguments .)
    COMMA           reduce using rule 522 (identifierSuffix -> arguments .)
    BRPAREN         reduce using rule 522 (identifierSuffix -> arguments .)
    FRPAREN         reduce using rule 522 (identifierSuffix -> arguments .)


state 196

    (521) identifierSuffix -> FL_expression_FRs .
    (519) FL_expression_FRs -> FL_expression_FRs . FL_expression_FR
    (517) FL_expression_FR -> . FLPAREN expression FRPAREN

  ! shift/reduce conflict for FLPAREN resolved as shift
    OP_INC          reduce using rule 521 (identifierSuffix -> FL_expression_FRs .)
    OP_DEC          reduce using rule 521 (identifierSuffix -> FL_expression_FRs .)
    DOT             reduce using rule 521 (identifierSuffix -> FL_expression_FRs .)
    MULT            reduce using rule 521 (identifierSuffix -> FL_expression_FRs .)
    SLASH           reduce using rule 521 (identifierSuffix -> FL_expression_FRs .)
    PERCENT         reduce using rule 521 (identifierSuffix -> FL_expression_FRs .)
    PLUS            reduce using rule 521 (identifierSuffix -> FL_expression_FRs .)
    DASH            reduce using rule 521 (identifierSuffix -> FL_expression_FRs .)
    OP_SHR          reduce using rule 521 (identifierSuffix -> FL_expression_FRs .)
    OP_SHRR         reduce using rule 521 (identifierSuffix -> FL_expression_FRs .)
    OP_SHL          reduce using rule 521 (identifierSuffix -> FL_expression_FRs .)
    OP_LE           reduce using rule 521 (identifierSuffix -> FL_expression_FRs .)
    OP_GE           reduce using rule 521 (identifierSuffix -> FL_expression_FRs .)
    LESS            reduce using rule 521 (identifierSuffix -> FL_expression_FRs .)
    MORE            reduce using rule 521 (identifierSuffix -> FL_expression_FRs .)
    INSTANCEOF      reduce using rule 521 (identifierSuffix -> FL_expression_FRs .)
    OP_EQ           reduce using rule 521 (identifierSuffix -> FL_expression_FRs .)
    OP_NE           reduce using rule 521 (identifierSuffix -> FL_expression_FRs .)
    AND             reduce using rule 521 (identifierSuffix -> FL_expression_FRs .)
    CARET           reduce using rule 521 (identifierSuffix -> FL_expression_FRs .)
    VERTICAL        reduce using rule 521 (identifierSuffix -> FL_expression_FRs .)
    OP_LAND         reduce using rule 521 (identifierSuffix -> FL_expression_FRs .)
    OP_LOR          reduce using rule 521 (identifierSuffix -> FL_expression_FRs .)
    QUES            reduce using rule 521 (identifierSuffix -> FL_expression_FRs .)
    EQUALS          reduce using rule 521 (identifierSuffix -> FL_expression_FRs .)
    ASS_ADD         reduce using rule 521 (identifierSuffix -> FL_expression_FRs .)
    ASS_SUB         reduce using rule 521 (identifierSuffix -> FL_expression_FRs .)
    ASS_MUL         reduce using rule 521 (identifierSuffix -> FL_expression_FRs .)
    ASS_DIV         reduce using rule 521 (identifierSuffix -> FL_expression_FRs .)
    ASS_AND         reduce using rule 521 (identifierSuffix -> FL_expression_FRs .)
    ASS_OR          reduce using rule 521 (identifierSuffix -> FL_expression_FRs .)
    ASS_XOR         reduce using rule 521 (identifierSuffix -> FL_expression_FRs .)
    ASS_MOD         reduce using rule 521 (identifierSuffix -> FL_expression_FRs .)
    ASS_SHL         reduce using rule 521 (identifierSuffix -> FL_expression_FRs .)
    ASS_SHRR        reduce using rule 521 (identifierSuffix -> FL_expression_FRs .)
    ASS_SHR         reduce using rule 521 (identifierSuffix -> FL_expression_FRs .)
    SEMI            reduce using rule 521 (identifierSuffix -> FL_expression_FRs .)
    COLON           reduce using rule 521 (identifierSuffix -> FL_expression_FRs .)
    RPAREN          reduce using rule 521 (identifierSuffix -> FL_expression_FRs .)
    COMMA           reduce using rule 521 (identifierSuffix -> FL_expression_FRs .)
    BRPAREN         reduce using rule 521 (identifierSuffix -> FL_expression_FRs .)
    FRPAREN         reduce using rule 521 (identifierSuffix -> FL_expression_FRs .)
    FLPAREN         shift and go to state 360

  ! FLPAREN         [ reduce using rule 521 (identifierSuffix -> FL_expression_FRs .) ]

    FL_expression_FR               shift and go to state 361

state 197

    (504) identifierSuffix_empty -> identifierSuffix .

    OP_INC          reduce using rule 504 (identifierSuffix_empty -> identifierSuffix .)
    OP_DEC          reduce using rule 504 (identifierSuffix_empty -> identifierSuffix .)
    DOT             reduce using rule 504 (identifierSuffix_empty -> identifierSuffix .)
    FLPAREN         reduce using rule 504 (identifierSuffix_empty -> identifierSuffix .)
    MULT            reduce using rule 504 (identifierSuffix_empty -> identifierSuffix .)
    SLASH           reduce using rule 504 (identifierSuffix_empty -> identifierSuffix .)
    PERCENT         reduce using rule 504 (identifierSuffix_empty -> identifierSuffix .)
    PLUS            reduce using rule 504 (identifierSuffix_empty -> identifierSuffix .)
    DASH            reduce using rule 504 (identifierSuffix_empty -> identifierSuffix .)
    OP_SHR          reduce using rule 504 (identifierSuffix_empty -> identifierSuffix .)
    OP_SHRR         reduce using rule 504 (identifierSuffix_empty -> identifierSuffix .)
    OP_SHL          reduce using rule 504 (identifierSuffix_empty -> identifierSuffix .)
    OP_LE           reduce using rule 504 (identifierSuffix_empty -> identifierSuffix .)
    OP_GE           reduce using rule 504 (identifierSuffix_empty -> identifierSuffix .)
    LESS            reduce using rule 504 (identifierSuffix_empty -> identifierSuffix .)
    MORE            reduce using rule 504 (identifierSuffix_empty -> identifierSuffix .)
    INSTANCEOF      reduce using rule 504 (identifierSuffix_empty -> identifierSuffix .)
    OP_EQ           reduce using rule 504 (identifierSuffix_empty -> identifierSuffix .)
    OP_NE           reduce using rule 504 (identifierSuffix_empty -> identifierSuffix .)
    AND             reduce using rule 504 (identifierSuffix_empty -> identifierSuffix .)
    CARET           reduce using rule 504 (identifierSuffix_empty -> identifierSuffix .)
    VERTICAL        reduce using rule 504 (identifierSuffix_empty -> identifierSuffix .)
    OP_LAND         reduce using rule 504 (identifierSuffix_empty -> identifierSuffix .)
    OP_LOR          reduce using rule 504 (identifierSuffix_empty -> identifierSuffix .)
    QUES            reduce using rule 504 (identifierSuffix_empty -> identifierSuffix .)
    RPAREN          reduce using rule 504 (identifierSuffix_empty -> identifierSuffix .)
    COMMA           reduce using rule 504 (identifierSuffix_empty -> identifierSuffix .)
    BRPAREN         reduce using rule 504 (identifierSuffix_empty -> identifierSuffix .)
    EQUALS          reduce using rule 504 (identifierSuffix_empty -> identifierSuffix .)
    ASS_ADD         reduce using rule 504 (identifierSuffix_empty -> identifierSuffix .)
    ASS_SUB         reduce using rule 504 (identifierSuffix_empty -> identifierSuffix .)
    ASS_MUL         reduce using rule 504 (identifierSuffix_empty -> identifierSuffix .)
    ASS_DIV         reduce using rule 504 (identifierSuffix_empty -> identifierSuffix .)
    ASS_AND         reduce using rule 504 (identifierSuffix_empty -> identifierSuffix .)
    ASS_OR          reduce using rule 504 (identifierSuffix_empty -> identifierSuffix .)
    ASS_XOR         reduce using rule 504 (identifierSuffix_empty -> identifierSuffix .)
    ASS_MOD         reduce using rule 504 (identifierSuffix_empty -> identifierSuffix .)
    ASS_SHL         reduce using rule 504 (identifierSuffix_empty -> identifierSuffix .)
    ASS_SHRR        reduce using rule 504 (identifierSuffix_empty -> identifierSuffix .)
    ASS_SHR         reduce using rule 504 (identifierSuffix_empty -> identifierSuffix .)
    FRPAREN         reduce using rule 504 (identifierSuffix_empty -> identifierSuffix .)
    COLON           reduce using rule 504 (identifierSuffix_empty -> identifierSuffix .)
    SEMI            reduce using rule 504 (identifierSuffix_empty -> identifierSuffix .)


state 198

    (508) primary -> THIS identifierSuffix_empty .

    OP_INC          reduce using rule 508 (primary -> THIS identifierSuffix_empty .)
    OP_DEC          reduce using rule 508 (primary -> THIS identifierSuffix_empty .)
    DOT             reduce using rule 508 (primary -> THIS identifierSuffix_empty .)
    FLPAREN         reduce using rule 508 (primary -> THIS identifierSuffix_empty .)
    MULT            reduce using rule 508 (primary -> THIS identifierSuffix_empty .)
    SLASH           reduce using rule 508 (primary -> THIS identifierSuffix_empty .)
    PERCENT         reduce using rule 508 (primary -> THIS identifierSuffix_empty .)
    PLUS            reduce using rule 508 (primary -> THIS identifierSuffix_empty .)
    DASH            reduce using rule 508 (primary -> THIS identifierSuffix_empty .)
    OP_SHR          reduce using rule 508 (primary -> THIS identifierSuffix_empty .)
    OP_SHRR         reduce using rule 508 (primary -> THIS identifierSuffix_empty .)
    OP_SHL          reduce using rule 508 (primary -> THIS identifierSuffix_empty .)
    OP_LE           reduce using rule 508 (primary -> THIS identifierSuffix_empty .)
    OP_GE           reduce using rule 508 (primary -> THIS identifierSuffix_empty .)
    LESS            reduce using rule 508 (primary -> THIS identifierSuffix_empty .)
    MORE            reduce using rule 508 (primary -> THIS identifierSuffix_empty .)
    INSTANCEOF      reduce using rule 508 (primary -> THIS identifierSuffix_empty .)
    OP_EQ           reduce using rule 508 (primary -> THIS identifierSuffix_empty .)
    OP_NE           reduce using rule 508 (primary -> THIS identifierSuffix_empty .)
    AND             reduce using rule 508 (primary -> THIS identifierSuffix_empty .)
    CARET           reduce using rule 508 (primary -> THIS identifierSuffix_empty .)
    VERTICAL        reduce using rule 508 (primary -> THIS identifierSuffix_empty .)
    OP_LAND         reduce using rule 508 (primary -> THIS identifierSuffix_empty .)
    OP_LOR          reduce using rule 508 (primary -> THIS identifierSuffix_empty .)
    QUES            reduce using rule 508 (primary -> THIS identifierSuffix_empty .)
    EQUALS          reduce using rule 508 (primary -> THIS identifierSuffix_empty .)
    ASS_ADD         reduce using rule 508 (primary -> THIS identifierSuffix_empty .)
    ASS_SUB         reduce using rule 508 (primary -> THIS identifierSuffix_empty .)
    ASS_MUL         reduce using rule 508 (primary -> THIS identifierSuffix_empty .)
    ASS_DIV         reduce using rule 508 (primary -> THIS identifierSuffix_empty .)
    ASS_AND         reduce using rule 508 (primary -> THIS identifierSuffix_empty .)
    ASS_OR          reduce using rule 508 (primary -> THIS identifierSuffix_empty .)
    ASS_XOR         reduce using rule 508 (primary -> THIS identifierSuffix_empty .)
    ASS_MOD         reduce using rule 508 (primary -> THIS identifierSuffix_empty .)
    ASS_SHL         reduce using rule 508 (primary -> THIS identifierSuffix_empty .)
    ASS_SHRR        reduce using rule 508 (primary -> THIS identifierSuffix_empty .)
    ASS_SHR         reduce using rule 508 (primary -> THIS identifierSuffix_empty .)
    FRPAREN         reduce using rule 508 (primary -> THIS identifierSuffix_empty .)
    SEMI            reduce using rule 508 (primary -> THIS identifierSuffix_empty .)
    COMMA           reduce using rule 508 (primary -> THIS identifierSuffix_empty .)
    BRPAREN         reduce using rule 508 (primary -> THIS identifierSuffix_empty .)
    RPAREN          reduce using rule 508 (primary -> THIS identifierSuffix_empty .)
    COLON           reduce using rule 508 (primary -> THIS identifierSuffix_empty .)


state 199

    (555) arguments -> LPAREN . expressionList_once RPAREN
    (553) expressionList_once -> . expressionList
    (554) expressionList_once -> .
    (398) expressionList -> . expression COMMA_expressions
    (399) expressionList -> . expression
    (404) expression -> . conditionalExpression assignmentOperator_expression_empty
    (420) conditionalExpression -> . conditionalOrExpression conditionalExpressionStats
    (421) conditionalExpression -> . conditionalOrExpression
    (425) conditionalOrExpression -> . conditionalAndExpression O_conditionalAndExpressions
    (426) conditionalOrExpression -> . conditionalAndExpression
    (430) conditionalAndExpression -> . inclusiveOrExpression O_inclusiveOrExpressions
    (431) conditionalAndExpression -> . inclusiveOrExpression
    (435) inclusiveOrExpression -> . exclusiveOrExpression V_exclusiveOrExpression
    (436) inclusiveOrExpression -> . exclusiveOrExpression
    (440) exclusiveOrExpression -> . andExpression CARET_andExpressions
    (441) exclusiveOrExpression -> . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    RPAREN          reduce using rule 554 (expressionList_once -> .)
    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    equalityExpression             shift and go to state 108
    inclusiveOrExpression          shift and go to state 99
    multiplicativeExpression       shift and go to state 128
    exclusiveOrExpression          shift and go to state 110
    conditionalAndExpression       shift and go to state 89
    shiftExpression                shift and go to state 130
    booleanLiteral                 shift and go to state 92
    expressionList_once            shift and go to state 362
    literal                        shift and go to state 116
    expressionList                 shift and go to state 363
    integerLiteral                 shift and go to state 98
    additiveExpression             shift and go to state 102
    conditionalExpression          shift and go to state 266
    unaryExpression                shift and go to state 131
    FloatingPointLiteral           shift and go to state 119
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    relationalExpression           shift and go to state 95
    conditionalOrExpression        shift and go to state 109
    instanceOfExpression           shift and go to state 96
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    primitiveType                  shift and go to state 122
    andExpression                  shift and go to state 106
    expression                     shift and go to state 364

state 200

    (520) identifierSuffix -> arrays . DOT CLASS
    (138) arrays -> arrays . array
    (137) array -> . FLPAREN FRPAREN

    DOT             shift and go to state 365
    FLPAREN         shift and go to state 153

    array                          shift and go to state 308

state 201

    (427) O_inclusiveOrExpression -> OP_LAND . inclusiveOrExpression
    (435) inclusiveOrExpression -> . exclusiveOrExpression V_exclusiveOrExpression
    (436) inclusiveOrExpression -> . exclusiveOrExpression
    (440) exclusiveOrExpression -> . andExpression CARET_andExpressions
    (441) exclusiveOrExpression -> . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    equalityExpression             shift and go to state 108
    inclusiveOrExpression          shift and go to state 366
    multiplicativeExpression       shift and go to state 128
    exclusiveOrExpression          shift and go to state 110
    primary                        shift and go to state 111
    shiftExpression                shift and go to state 130
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    integerLiteral                 shift and go to state 98
    additiveExpression             shift and go to state 102
    instanceOfExpression           shift and go to state 96
    unaryExpression                shift and go to state 131
    FloatingPointLiteral           shift and go to state 119
    parExpression                  shift and go to state 132
    relationalExpression           shift and go to state 95
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    primitiveType                  shift and go to state 122
    andExpression                  shift and go to state 106

state 202

    (428) O_inclusiveOrExpressions -> O_inclusiveOrExpression .

    OP_LAND         reduce using rule 428 (O_inclusiveOrExpressions -> O_inclusiveOrExpression .)
    OP_LOR          reduce using rule 428 (O_inclusiveOrExpressions -> O_inclusiveOrExpression .)
    QUES            reduce using rule 428 (O_inclusiveOrExpressions -> O_inclusiveOrExpression .)
    RPAREN          reduce using rule 428 (O_inclusiveOrExpressions -> O_inclusiveOrExpression .)
    COMMA           reduce using rule 428 (O_inclusiveOrExpressions -> O_inclusiveOrExpression .)
    BRPAREN         reduce using rule 428 (O_inclusiveOrExpressions -> O_inclusiveOrExpression .)
    EQUALS          reduce using rule 428 (O_inclusiveOrExpressions -> O_inclusiveOrExpression .)
    ASS_ADD         reduce using rule 428 (O_inclusiveOrExpressions -> O_inclusiveOrExpression .)
    ASS_SUB         reduce using rule 428 (O_inclusiveOrExpressions -> O_inclusiveOrExpression .)
    ASS_MUL         reduce using rule 428 (O_inclusiveOrExpressions -> O_inclusiveOrExpression .)
    ASS_DIV         reduce using rule 428 (O_inclusiveOrExpressions -> O_inclusiveOrExpression .)
    ASS_AND         reduce using rule 428 (O_inclusiveOrExpressions -> O_inclusiveOrExpression .)
    ASS_OR          reduce using rule 428 (O_inclusiveOrExpressions -> O_inclusiveOrExpression .)
    ASS_XOR         reduce using rule 428 (O_inclusiveOrExpressions -> O_inclusiveOrExpression .)
    ASS_MOD         reduce using rule 428 (O_inclusiveOrExpressions -> O_inclusiveOrExpression .)
    ASS_SHL         reduce using rule 428 (O_inclusiveOrExpressions -> O_inclusiveOrExpression .)
    ASS_SHRR        reduce using rule 428 (O_inclusiveOrExpressions -> O_inclusiveOrExpression .)
    ASS_SHR         reduce using rule 428 (O_inclusiveOrExpressions -> O_inclusiveOrExpression .)
    FRPAREN         reduce using rule 428 (O_inclusiveOrExpressions -> O_inclusiveOrExpression .)
    COLON           reduce using rule 428 (O_inclusiveOrExpressions -> O_inclusiveOrExpression .)
    SEMI            reduce using rule 428 (O_inclusiveOrExpressions -> O_inclusiveOrExpression .)


state 203

    (430) conditionalAndExpression -> inclusiveOrExpression O_inclusiveOrExpressions .
    (429) O_inclusiveOrExpressions -> O_inclusiveOrExpressions . O_inclusiveOrExpression
    (427) O_inclusiveOrExpression -> . OP_LAND inclusiveOrExpression

    OP_LOR          reduce using rule 430 (conditionalAndExpression -> inclusiveOrExpression O_inclusiveOrExpressions .)
    QUES            reduce using rule 430 (conditionalAndExpression -> inclusiveOrExpression O_inclusiveOrExpressions .)
    EQUALS          reduce using rule 430 (conditionalAndExpression -> inclusiveOrExpression O_inclusiveOrExpressions .)
    ASS_ADD         reduce using rule 430 (conditionalAndExpression -> inclusiveOrExpression O_inclusiveOrExpressions .)
    ASS_SUB         reduce using rule 430 (conditionalAndExpression -> inclusiveOrExpression O_inclusiveOrExpressions .)
    ASS_MUL         reduce using rule 430 (conditionalAndExpression -> inclusiveOrExpression O_inclusiveOrExpressions .)
    ASS_DIV         reduce using rule 430 (conditionalAndExpression -> inclusiveOrExpression O_inclusiveOrExpressions .)
    ASS_AND         reduce using rule 430 (conditionalAndExpression -> inclusiveOrExpression O_inclusiveOrExpressions .)
    ASS_OR          reduce using rule 430 (conditionalAndExpression -> inclusiveOrExpression O_inclusiveOrExpressions .)
    ASS_XOR         reduce using rule 430 (conditionalAndExpression -> inclusiveOrExpression O_inclusiveOrExpressions .)
    ASS_MOD         reduce using rule 430 (conditionalAndExpression -> inclusiveOrExpression O_inclusiveOrExpressions .)
    ASS_SHL         reduce using rule 430 (conditionalAndExpression -> inclusiveOrExpression O_inclusiveOrExpressions .)
    ASS_SHRR        reduce using rule 430 (conditionalAndExpression -> inclusiveOrExpression O_inclusiveOrExpressions .)
    ASS_SHR         reduce using rule 430 (conditionalAndExpression -> inclusiveOrExpression O_inclusiveOrExpressions .)
    FRPAREN         reduce using rule 430 (conditionalAndExpression -> inclusiveOrExpression O_inclusiveOrExpressions .)
    SEMI            reduce using rule 430 (conditionalAndExpression -> inclusiveOrExpression O_inclusiveOrExpressions .)
    RPAREN          reduce using rule 430 (conditionalAndExpression -> inclusiveOrExpression O_inclusiveOrExpressions .)
    COMMA           reduce using rule 430 (conditionalAndExpression -> inclusiveOrExpression O_inclusiveOrExpressions .)
    COLON           reduce using rule 430 (conditionalAndExpression -> inclusiveOrExpression O_inclusiveOrExpressions .)
    BRPAREN         reduce using rule 430 (conditionalAndExpression -> inclusiveOrExpression O_inclusiveOrExpressions .)
    OP_LAND         shift and go to state 201

    O_inclusiveOrExpression        shift and go to state 367

state 204

    (290) elementValuePairsBody -> COMMA . elementValuePair
    (295) elementValuePair -> . Identifier EQUALS elementValue

    Identifier      shift and go to state 368

    elementValuePair               shift and go to state 369

state 205

    (293) elementValuePairs -> elementValuePair elementValuePairsBodys .
    (292) elementValuePairsBodys -> elementValuePairsBodys . elementValuePairsBody
    (290) elementValuePairsBody -> . COMMA elementValuePair

    RPAREN          reduce using rule 293 (elementValuePairs -> elementValuePair elementValuePairsBodys .)
    COMMA           shift and go to state 204

    elementValuePairsBody          shift and go to state 370

state 206

    (291) elementValuePairsBodys -> elementValuePairsBody .

    COMMA           reduce using rule 291 (elementValuePairsBodys -> elementValuePairsBody .)
    RPAREN          reduce using rule 291 (elementValuePairsBodys -> elementValuePairsBody .)


state 207

    (471) shiftOp -> OP_SHRR .

    PLUS            reduce using rule 471 (shiftOp -> OP_SHRR .)
    DASH            reduce using rule 471 (shiftOp -> OP_SHRR .)
    OP_INC          reduce using rule 471 (shiftOp -> OP_SHRR .)
    OP_DEC          reduce using rule 471 (shiftOp -> OP_SHRR .)
    TILDE           reduce using rule 471 (shiftOp -> OP_SHRR .)
    EXCLAMATION     reduce using rule 471 (shiftOp -> OP_SHRR .)
    LPAREN          reduce using rule 471 (shiftOp -> OP_SHRR .)
    THIS            reduce using rule 471 (shiftOp -> OP_SHRR .)
    SUPER           reduce using rule 471 (shiftOp -> OP_SHRR .)
    NEW             reduce using rule 471 (shiftOp -> OP_SHRR .)
    Identifier      reduce using rule 471 (shiftOp -> OP_SHRR .)
    VOID            reduce using rule 471 (shiftOp -> OP_SHRR .)
    CharacterLiteral reduce using rule 471 (shiftOp -> OP_SHRR .)
    StringLiteral   reduce using rule 471 (shiftOp -> OP_SHRR .)
    NULL            reduce using rule 471 (shiftOp -> OP_SHRR .)
    BOOLEAN         reduce using rule 471 (shiftOp -> OP_SHRR .)
    CHAR            reduce using rule 471 (shiftOp -> OP_SHRR .)
    BYTE            reduce using rule 471 (shiftOp -> OP_SHRR .)
    SHORT           reduce using rule 471 (shiftOp -> OP_SHRR .)
    INT             reduce using rule 471 (shiftOp -> OP_SHRR .)
    LONG            reduce using rule 471 (shiftOp -> OP_SHRR .)
    FLOAT           reduce using rule 471 (shiftOp -> OP_SHRR .)
    DOUBLE          reduce using rule 471 (shiftOp -> OP_SHRR .)
    LONG_NUMBER     reduce using rule 471 (shiftOp -> OP_SHRR .)
    LONG_HEX_NUMBER reduce using rule 471 (shiftOp -> OP_SHRR .)
    NON_INTEGER_1   reduce using rule 471 (shiftOp -> OP_SHRR .)
    NON_INTEGER_2   reduce using rule 471 (shiftOp -> OP_SHRR .)
    NON_INTEGER_3   reduce using rule 471 (shiftOp -> OP_SHRR .)
    NON_INTEGER_4   reduce using rule 471 (shiftOp -> OP_SHRR .)
    TRUE            reduce using rule 471 (shiftOp -> OP_SHRR .)
    FALSE           reduce using rule 471 (shiftOp -> OP_SHRR .)


state 208

    (470) shiftOp -> OP_SHR .

    PLUS            reduce using rule 470 (shiftOp -> OP_SHR .)
    DASH            reduce using rule 470 (shiftOp -> OP_SHR .)
    OP_INC          reduce using rule 470 (shiftOp -> OP_SHR .)
    OP_DEC          reduce using rule 470 (shiftOp -> OP_SHR .)
    TILDE           reduce using rule 470 (shiftOp -> OP_SHR .)
    EXCLAMATION     reduce using rule 470 (shiftOp -> OP_SHR .)
    LPAREN          reduce using rule 470 (shiftOp -> OP_SHR .)
    THIS            reduce using rule 470 (shiftOp -> OP_SHR .)
    SUPER           reduce using rule 470 (shiftOp -> OP_SHR .)
    NEW             reduce using rule 470 (shiftOp -> OP_SHR .)
    Identifier      reduce using rule 470 (shiftOp -> OP_SHR .)
    VOID            reduce using rule 470 (shiftOp -> OP_SHR .)
    CharacterLiteral reduce using rule 470 (shiftOp -> OP_SHR .)
    StringLiteral   reduce using rule 470 (shiftOp -> OP_SHR .)
    NULL            reduce using rule 470 (shiftOp -> OP_SHR .)
    BOOLEAN         reduce using rule 470 (shiftOp -> OP_SHR .)
    CHAR            reduce using rule 470 (shiftOp -> OP_SHR .)
    BYTE            reduce using rule 470 (shiftOp -> OP_SHR .)
    SHORT           reduce using rule 470 (shiftOp -> OP_SHR .)
    INT             reduce using rule 470 (shiftOp -> OP_SHR .)
    LONG            reduce using rule 470 (shiftOp -> OP_SHR .)
    FLOAT           reduce using rule 470 (shiftOp -> OP_SHR .)
    DOUBLE          reduce using rule 470 (shiftOp -> OP_SHR .)
    LONG_NUMBER     reduce using rule 470 (shiftOp -> OP_SHR .)
    LONG_HEX_NUMBER reduce using rule 470 (shiftOp -> OP_SHR .)
    NON_INTEGER_1   reduce using rule 470 (shiftOp -> OP_SHR .)
    NON_INTEGER_2   reduce using rule 470 (shiftOp -> OP_SHR .)
    NON_INTEGER_3   reduce using rule 470 (shiftOp -> OP_SHR .)
    NON_INTEGER_4   reduce using rule 470 (shiftOp -> OP_SHR .)
    TRUE            reduce using rule 470 (shiftOp -> OP_SHR .)
    FALSE           reduce using rule 470 (shiftOp -> OP_SHR .)


state 209

    (472) shiftOp -> OP_SHL .

    PLUS            reduce using rule 472 (shiftOp -> OP_SHL .)
    DASH            reduce using rule 472 (shiftOp -> OP_SHL .)
    OP_INC          reduce using rule 472 (shiftOp -> OP_SHL .)
    OP_DEC          reduce using rule 472 (shiftOp -> OP_SHL .)
    TILDE           reduce using rule 472 (shiftOp -> OP_SHL .)
    EXCLAMATION     reduce using rule 472 (shiftOp -> OP_SHL .)
    LPAREN          reduce using rule 472 (shiftOp -> OP_SHL .)
    THIS            reduce using rule 472 (shiftOp -> OP_SHL .)
    SUPER           reduce using rule 472 (shiftOp -> OP_SHL .)
    NEW             reduce using rule 472 (shiftOp -> OP_SHL .)
    Identifier      reduce using rule 472 (shiftOp -> OP_SHL .)
    VOID            reduce using rule 472 (shiftOp -> OP_SHL .)
    CharacterLiteral reduce using rule 472 (shiftOp -> OP_SHL .)
    StringLiteral   reduce using rule 472 (shiftOp -> OP_SHL .)
    NULL            reduce using rule 472 (shiftOp -> OP_SHL .)
    BOOLEAN         reduce using rule 472 (shiftOp -> OP_SHL .)
    CHAR            reduce using rule 472 (shiftOp -> OP_SHL .)
    BYTE            reduce using rule 472 (shiftOp -> OP_SHL .)
    SHORT           reduce using rule 472 (shiftOp -> OP_SHL .)
    INT             reduce using rule 472 (shiftOp -> OP_SHL .)
    LONG            reduce using rule 472 (shiftOp -> OP_SHL .)
    FLOAT           reduce using rule 472 (shiftOp -> OP_SHL .)
    DOUBLE          reduce using rule 472 (shiftOp -> OP_SHL .)
    LONG_NUMBER     reduce using rule 472 (shiftOp -> OP_SHL .)
    LONG_HEX_NUMBER reduce using rule 472 (shiftOp -> OP_SHL .)
    NON_INTEGER_1   reduce using rule 472 (shiftOp -> OP_SHL .)
    NON_INTEGER_2   reduce using rule 472 (shiftOp -> OP_SHL .)
    NON_INTEGER_3   reduce using rule 472 (shiftOp -> OP_SHL .)
    NON_INTEGER_4   reduce using rule 472 (shiftOp -> OP_SHL .)
    TRUE            reduce using rule 472 (shiftOp -> OP_SHL .)
    FALSE           reduce using rule 472 (shiftOp -> OP_SHL .)


state 210

    (466) sh_additiveExpressions -> sh_additiveExpression .

    OP_SHR          reduce using rule 466 (sh_additiveExpressions -> sh_additiveExpression .)
    OP_SHRR         reduce using rule 466 (sh_additiveExpressions -> sh_additiveExpression .)
    OP_SHL          reduce using rule 466 (sh_additiveExpressions -> sh_additiveExpression .)
    OP_LE           reduce using rule 466 (sh_additiveExpressions -> sh_additiveExpression .)
    OP_GE           reduce using rule 466 (sh_additiveExpressions -> sh_additiveExpression .)
    LESS            reduce using rule 466 (sh_additiveExpressions -> sh_additiveExpression .)
    MORE            reduce using rule 466 (sh_additiveExpressions -> sh_additiveExpression .)
    INSTANCEOF      reduce using rule 466 (sh_additiveExpressions -> sh_additiveExpression .)
    OP_EQ           reduce using rule 466 (sh_additiveExpressions -> sh_additiveExpression .)
    OP_NE           reduce using rule 466 (sh_additiveExpressions -> sh_additiveExpression .)
    AND             reduce using rule 466 (sh_additiveExpressions -> sh_additiveExpression .)
    CARET           reduce using rule 466 (sh_additiveExpressions -> sh_additiveExpression .)
    VERTICAL        reduce using rule 466 (sh_additiveExpressions -> sh_additiveExpression .)
    OP_LAND         reduce using rule 466 (sh_additiveExpressions -> sh_additiveExpression .)
    OP_LOR          reduce using rule 466 (sh_additiveExpressions -> sh_additiveExpression .)
    QUES            reduce using rule 466 (sh_additiveExpressions -> sh_additiveExpression .)
    RPAREN          reduce using rule 466 (sh_additiveExpressions -> sh_additiveExpression .)
    COMMA           reduce using rule 466 (sh_additiveExpressions -> sh_additiveExpression .)
    BRPAREN         reduce using rule 466 (sh_additiveExpressions -> sh_additiveExpression .)
    EQUALS          reduce using rule 466 (sh_additiveExpressions -> sh_additiveExpression .)
    ASS_ADD         reduce using rule 466 (sh_additiveExpressions -> sh_additiveExpression .)
    ASS_SUB         reduce using rule 466 (sh_additiveExpressions -> sh_additiveExpression .)
    ASS_MUL         reduce using rule 466 (sh_additiveExpressions -> sh_additiveExpression .)
    ASS_DIV         reduce using rule 466 (sh_additiveExpressions -> sh_additiveExpression .)
    ASS_AND         reduce using rule 466 (sh_additiveExpressions -> sh_additiveExpression .)
    ASS_OR          reduce using rule 466 (sh_additiveExpressions -> sh_additiveExpression .)
    ASS_XOR         reduce using rule 466 (sh_additiveExpressions -> sh_additiveExpression .)
    ASS_MOD         reduce using rule 466 (sh_additiveExpressions -> sh_additiveExpression .)
    ASS_SHL         reduce using rule 466 (sh_additiveExpressions -> sh_additiveExpression .)
    ASS_SHRR        reduce using rule 466 (sh_additiveExpressions -> sh_additiveExpression .)
    ASS_SHR         reduce using rule 466 (sh_additiveExpressions -> sh_additiveExpression .)
    FRPAREN         reduce using rule 466 (sh_additiveExpressions -> sh_additiveExpression .)
    COLON           reduce using rule 466 (sh_additiveExpressions -> sh_additiveExpression .)
    SEMI            reduce using rule 466 (sh_additiveExpressions -> sh_additiveExpression .)


state 211

    (465) sh_additiveExpression -> shiftOp . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    multiplicativeExpression       shift and go to state 128
    primary                        shift and go to state 111
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    integerLiteral                 shift and go to state 98
    additiveExpression             shift and go to state 371
    unaryExpression                shift and go to state 131
    FloatingPointLiteral           shift and go to state 119
    parExpression                  shift and go to state 132
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    primitiveType                  shift and go to state 122

state 212

    (468) shiftExpression -> additiveExpression sh_additiveExpressions .
    (467) sh_additiveExpressions -> sh_additiveExpressions . sh_additiveExpression
    (465) sh_additiveExpression -> . shiftOp additiveExpression
    (470) shiftOp -> . OP_SHR
    (471) shiftOp -> . OP_SHRR
    (472) shiftOp -> . OP_SHL

    OP_LE           reduce using rule 468 (shiftExpression -> additiveExpression sh_additiveExpressions .)
    OP_GE           reduce using rule 468 (shiftExpression -> additiveExpression sh_additiveExpressions .)
    LESS            reduce using rule 468 (shiftExpression -> additiveExpression sh_additiveExpressions .)
    MORE            reduce using rule 468 (shiftExpression -> additiveExpression sh_additiveExpressions .)
    INSTANCEOF      reduce using rule 468 (shiftExpression -> additiveExpression sh_additiveExpressions .)
    OP_EQ           reduce using rule 468 (shiftExpression -> additiveExpression sh_additiveExpressions .)
    OP_NE           reduce using rule 468 (shiftExpression -> additiveExpression sh_additiveExpressions .)
    AND             reduce using rule 468 (shiftExpression -> additiveExpression sh_additiveExpressions .)
    CARET           reduce using rule 468 (shiftExpression -> additiveExpression sh_additiveExpressions .)
    VERTICAL        reduce using rule 468 (shiftExpression -> additiveExpression sh_additiveExpressions .)
    OP_LAND         reduce using rule 468 (shiftExpression -> additiveExpression sh_additiveExpressions .)
    OP_LOR          reduce using rule 468 (shiftExpression -> additiveExpression sh_additiveExpressions .)
    QUES            reduce using rule 468 (shiftExpression -> additiveExpression sh_additiveExpressions .)
    EQUALS          reduce using rule 468 (shiftExpression -> additiveExpression sh_additiveExpressions .)
    ASS_ADD         reduce using rule 468 (shiftExpression -> additiveExpression sh_additiveExpressions .)
    ASS_SUB         reduce using rule 468 (shiftExpression -> additiveExpression sh_additiveExpressions .)
    ASS_MUL         reduce using rule 468 (shiftExpression -> additiveExpression sh_additiveExpressions .)
    ASS_DIV         reduce using rule 468 (shiftExpression -> additiveExpression sh_additiveExpressions .)
    ASS_AND         reduce using rule 468 (shiftExpression -> additiveExpression sh_additiveExpressions .)
    ASS_OR          reduce using rule 468 (shiftExpression -> additiveExpression sh_additiveExpressions .)
    ASS_XOR         reduce using rule 468 (shiftExpression -> additiveExpression sh_additiveExpressions .)
    ASS_MOD         reduce using rule 468 (shiftExpression -> additiveExpression sh_additiveExpressions .)
    ASS_SHL         reduce using rule 468 (shiftExpression -> additiveExpression sh_additiveExpressions .)
    ASS_SHRR        reduce using rule 468 (shiftExpression -> additiveExpression sh_additiveExpressions .)
    ASS_SHR         reduce using rule 468 (shiftExpression -> additiveExpression sh_additiveExpressions .)
    RPAREN          reduce using rule 468 (shiftExpression -> additiveExpression sh_additiveExpressions .)
    SEMI            reduce using rule 468 (shiftExpression -> additiveExpression sh_additiveExpressions .)
    COMMA           reduce using rule 468 (shiftExpression -> additiveExpression sh_additiveExpressions .)
    BRPAREN         reduce using rule 468 (shiftExpression -> additiveExpression sh_additiveExpressions .)
    FRPAREN         reduce using rule 468 (shiftExpression -> additiveExpression sh_additiveExpressions .)
    COLON           reduce using rule 468 (shiftExpression -> additiveExpression sh_additiveExpressions .)
    OP_SHR          shift and go to state 208
    OP_SHRR         shift and go to state 207
    OP_SHL          shift and go to state 209

    sh_additiveExpression          shift and go to state 372
    shiftOp                        shift and go to state 211

state 213

    (512) primary -> Identifier DOT_Identifiers . identifierSuffix_empty
    (270) DOT_Identifiers -> DOT_Identifiers . DOT_Identifier
    (504) identifierSuffix_empty -> . identifierSuffix
    (505) identifierSuffix_empty -> .
    (267) DOT_Identifier -> . DOT Identifier
    (268) DOT_Identifier -> . DOT MULT
    (520) identifierSuffix -> . arrays DOT CLASS
    (521) identifierSuffix -> . FL_expression_FRs
    (522) identifierSuffix -> . arguments
    (523) identifierSuffix -> . DOT CLASS
    (524) identifierSuffix -> . DOT explicitGenericInvocation
    (525) identifierSuffix -> . DOT THIS
    (526) identifierSuffix -> . DOT SUPER arguments
    (527) identifierSuffix -> . DOT NEW innerCreator
    (138) arrays -> . arrays array
    (139) arrays -> . array
    (518) FL_expression_FRs -> . FL_expression_FR
    (519) FL_expression_FRs -> . FL_expression_FRs FL_expression_FR
    (555) arguments -> . LPAREN expressionList_once RPAREN
    (137) array -> . FLPAREN FRPAREN
    (517) FL_expression_FR -> . FLPAREN expression FRPAREN

  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for FLPAREN resolved as shift
    OP_INC          reduce using rule 505 (identifierSuffix_empty -> .)
    OP_DEC          reduce using rule 505 (identifierSuffix_empty -> .)
    MULT            reduce using rule 505 (identifierSuffix_empty -> .)
    SLASH           reduce using rule 505 (identifierSuffix_empty -> .)
    PERCENT         reduce using rule 505 (identifierSuffix_empty -> .)
    PLUS            reduce using rule 505 (identifierSuffix_empty -> .)
    DASH            reduce using rule 505 (identifierSuffix_empty -> .)
    OP_SHR          reduce using rule 505 (identifierSuffix_empty -> .)
    OP_SHRR         reduce using rule 505 (identifierSuffix_empty -> .)
    OP_SHL          reduce using rule 505 (identifierSuffix_empty -> .)
    OP_LE           reduce using rule 505 (identifierSuffix_empty -> .)
    OP_GE           reduce using rule 505 (identifierSuffix_empty -> .)
    LESS            reduce using rule 505 (identifierSuffix_empty -> .)
    MORE            reduce using rule 505 (identifierSuffix_empty -> .)
    INSTANCEOF      reduce using rule 505 (identifierSuffix_empty -> .)
    OP_EQ           reduce using rule 505 (identifierSuffix_empty -> .)
    OP_NE           reduce using rule 505 (identifierSuffix_empty -> .)
    AND             reduce using rule 505 (identifierSuffix_empty -> .)
    CARET           reduce using rule 505 (identifierSuffix_empty -> .)
    VERTICAL        reduce using rule 505 (identifierSuffix_empty -> .)
    OP_LAND         reduce using rule 505 (identifierSuffix_empty -> .)
    OP_LOR          reduce using rule 505 (identifierSuffix_empty -> .)
    QUES            reduce using rule 505 (identifierSuffix_empty -> .)
    RPAREN          reduce using rule 505 (identifierSuffix_empty -> .)
    COMMA           reduce using rule 505 (identifierSuffix_empty -> .)
    BRPAREN         reduce using rule 505 (identifierSuffix_empty -> .)
    EQUALS          reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_ADD         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_SUB         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_MUL         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_DIV         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_AND         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_OR          reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_XOR         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_MOD         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_SHL         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_SHRR        reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_SHR         reduce using rule 505 (identifierSuffix_empty -> .)
    FRPAREN         reduce using rule 505 (identifierSuffix_empty -> .)
    COLON           reduce using rule 505 (identifierSuffix_empty -> .)
    SEMI            reduce using rule 505 (identifierSuffix_empty -> .)
    DOT             shift and go to state 194
    LPAREN          shift and go to state 199
    FLPAREN         shift and go to state 193

  ! DOT             [ reduce using rule 505 (identifierSuffix_empty -> .) ]
  ! FLPAREN         [ reduce using rule 505 (identifierSuffix_empty -> .) ]

    FL_expression_FRs              shift and go to state 196
    identifierSuffix               shift and go to state 197
    FL_expression_FR               shift and go to state 192
    arrays                         shift and go to state 200
    identifierSuffix_empty         shift and go to state 373
    arguments                      shift and go to state 195
    DOT_Identifier                 shift and go to state 69
    array                          shift and go to state 154

state 214

    (295) elementValuePair -> Identifier EQUALS . elementValue
    (296) elementValue -> . conditionalExpression
    (297) elementValue -> . annotation
    (298) elementValue -> . elementValueArrayInitializer
    (420) conditionalExpression -> . conditionalOrExpression conditionalExpressionStats
    (421) conditionalExpression -> . conditionalOrExpression
    (287) annotation -> . AT annotationName annotationBody
    (307) elementValueArrayInitializer -> . BLPAREN elementValueStatement COMMA_OR_empty BRPAREN
    (425) conditionalOrExpression -> . conditionalAndExpression O_conditionalAndExpressions
    (426) conditionalOrExpression -> . conditionalAndExpression
    (430) conditionalAndExpression -> . inclusiveOrExpression O_inclusiveOrExpressions
    (431) conditionalAndExpression -> . inclusiveOrExpression
    (435) inclusiveOrExpression -> . exclusiveOrExpression V_exclusiveOrExpression
    (436) inclusiveOrExpression -> . exclusiveOrExpression
    (440) exclusiveOrExpression -> . andExpression CARET_andExpressions
    (441) exclusiveOrExpression -> . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    AT              shift and go to state 133
    BLPAREN         shift and go to state 107
    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    equalityExpression             shift and go to state 108
    inclusiveOrExpression          shift and go to state 99
    multiplicativeExpression       shift and go to state 128
    exclusiveOrExpression          shift and go to state 110
    conditionalAndExpression       shift and go to state 89
    shiftExpression                shift and go to state 130
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    integerLiteral                 shift and go to state 98
    additiveExpression             shift and go to state 102
    instanceOfExpression           shift and go to state 96
    conditionalExpression          shift and go to state 118
    unaryExpression                shift and go to state 131
    FloatingPointLiteral           shift and go to state 119
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    relationalExpression           shift and go to state 95
    conditionalOrExpression        shift and go to state 109
    annotation                     shift and go to state 136
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    primitiveType                  shift and go to state 122
    elementValueArrayInitializer   shift and go to state 123
    andExpression                  shift and go to state 106
    elementValue                   shift and go to state 374

state 215

    (513) primary -> Identifier identifierSuffix_empty .

    OP_INC          reduce using rule 513 (primary -> Identifier identifierSuffix_empty .)
    OP_DEC          reduce using rule 513 (primary -> Identifier identifierSuffix_empty .)
    DOT             reduce using rule 513 (primary -> Identifier identifierSuffix_empty .)
    FLPAREN         reduce using rule 513 (primary -> Identifier identifierSuffix_empty .)
    MULT            reduce using rule 513 (primary -> Identifier identifierSuffix_empty .)
    SLASH           reduce using rule 513 (primary -> Identifier identifierSuffix_empty .)
    PERCENT         reduce using rule 513 (primary -> Identifier identifierSuffix_empty .)
    PLUS            reduce using rule 513 (primary -> Identifier identifierSuffix_empty .)
    DASH            reduce using rule 513 (primary -> Identifier identifierSuffix_empty .)
    OP_SHR          reduce using rule 513 (primary -> Identifier identifierSuffix_empty .)
    OP_SHRR         reduce using rule 513 (primary -> Identifier identifierSuffix_empty .)
    OP_SHL          reduce using rule 513 (primary -> Identifier identifierSuffix_empty .)
    OP_LE           reduce using rule 513 (primary -> Identifier identifierSuffix_empty .)
    OP_GE           reduce using rule 513 (primary -> Identifier identifierSuffix_empty .)
    LESS            reduce using rule 513 (primary -> Identifier identifierSuffix_empty .)
    MORE            reduce using rule 513 (primary -> Identifier identifierSuffix_empty .)
    INSTANCEOF      reduce using rule 513 (primary -> Identifier identifierSuffix_empty .)
    OP_EQ           reduce using rule 513 (primary -> Identifier identifierSuffix_empty .)
    OP_NE           reduce using rule 513 (primary -> Identifier identifierSuffix_empty .)
    AND             reduce using rule 513 (primary -> Identifier identifierSuffix_empty .)
    CARET           reduce using rule 513 (primary -> Identifier identifierSuffix_empty .)
    VERTICAL        reduce using rule 513 (primary -> Identifier identifierSuffix_empty .)
    OP_LAND         reduce using rule 513 (primary -> Identifier identifierSuffix_empty .)
    OP_LOR          reduce using rule 513 (primary -> Identifier identifierSuffix_empty .)
    QUES            reduce using rule 513 (primary -> Identifier identifierSuffix_empty .)
    EQUALS          reduce using rule 513 (primary -> Identifier identifierSuffix_empty .)
    ASS_ADD         reduce using rule 513 (primary -> Identifier identifierSuffix_empty .)
    ASS_SUB         reduce using rule 513 (primary -> Identifier identifierSuffix_empty .)
    ASS_MUL         reduce using rule 513 (primary -> Identifier identifierSuffix_empty .)
    ASS_DIV         reduce using rule 513 (primary -> Identifier identifierSuffix_empty .)
    ASS_AND         reduce using rule 513 (primary -> Identifier identifierSuffix_empty .)
    ASS_OR          reduce using rule 513 (primary -> Identifier identifierSuffix_empty .)
    ASS_XOR         reduce using rule 513 (primary -> Identifier identifierSuffix_empty .)
    ASS_MOD         reduce using rule 513 (primary -> Identifier identifierSuffix_empty .)
    ASS_SHL         reduce using rule 513 (primary -> Identifier identifierSuffix_empty .)
    ASS_SHRR        reduce using rule 513 (primary -> Identifier identifierSuffix_empty .)
    ASS_SHR         reduce using rule 513 (primary -> Identifier identifierSuffix_empty .)
    FRPAREN         reduce using rule 513 (primary -> Identifier identifierSuffix_empty .)
    SEMI            reduce using rule 513 (primary -> Identifier identifierSuffix_empty .)
    COMMA           reduce using rule 513 (primary -> Identifier identifierSuffix_empty .)
    BRPAREN         reduce using rule 513 (primary -> Identifier identifierSuffix_empty .)
    RPAREN          reduce using rule 513 (primary -> Identifier identifierSuffix_empty .)
    COLON           reduce using rule 513 (primary -> Identifier identifierSuffix_empty .)


state 216

    (440) exclusiveOrExpression -> andExpression CARET_andExpressions .
    (439) CARET_andExpressions -> CARET_andExpressions . CARET_andExpression
    (437) CARET_andExpression -> . CARET andExpression

    VERTICAL        reduce using rule 440 (exclusiveOrExpression -> andExpression CARET_andExpressions .)
    OP_LAND         reduce using rule 440 (exclusiveOrExpression -> andExpression CARET_andExpressions .)
    OP_LOR          reduce using rule 440 (exclusiveOrExpression -> andExpression CARET_andExpressions .)
    QUES            reduce using rule 440 (exclusiveOrExpression -> andExpression CARET_andExpressions .)
    EQUALS          reduce using rule 440 (exclusiveOrExpression -> andExpression CARET_andExpressions .)
    ASS_ADD         reduce using rule 440 (exclusiveOrExpression -> andExpression CARET_andExpressions .)
    ASS_SUB         reduce using rule 440 (exclusiveOrExpression -> andExpression CARET_andExpressions .)
    ASS_MUL         reduce using rule 440 (exclusiveOrExpression -> andExpression CARET_andExpressions .)
    ASS_DIV         reduce using rule 440 (exclusiveOrExpression -> andExpression CARET_andExpressions .)
    ASS_AND         reduce using rule 440 (exclusiveOrExpression -> andExpression CARET_andExpressions .)
    ASS_OR          reduce using rule 440 (exclusiveOrExpression -> andExpression CARET_andExpressions .)
    ASS_XOR         reduce using rule 440 (exclusiveOrExpression -> andExpression CARET_andExpressions .)
    ASS_MOD         reduce using rule 440 (exclusiveOrExpression -> andExpression CARET_andExpressions .)
    ASS_SHL         reduce using rule 440 (exclusiveOrExpression -> andExpression CARET_andExpressions .)
    ASS_SHRR        reduce using rule 440 (exclusiveOrExpression -> andExpression CARET_andExpressions .)
    ASS_SHR         reduce using rule 440 (exclusiveOrExpression -> andExpression CARET_andExpressions .)
    FRPAREN         reduce using rule 440 (exclusiveOrExpression -> andExpression CARET_andExpressions .)
    RPAREN          reduce using rule 440 (exclusiveOrExpression -> andExpression CARET_andExpressions .)
    COMMA           reduce using rule 440 (exclusiveOrExpression -> andExpression CARET_andExpressions .)
    BRPAREN         reduce using rule 440 (exclusiveOrExpression -> andExpression CARET_andExpressions .)
    COLON           reduce using rule 440 (exclusiveOrExpression -> andExpression CARET_andExpressions .)
    SEMI            reduce using rule 440 (exclusiveOrExpression -> andExpression CARET_andExpressions .)
    CARET           shift and go to state 217

    CARET_andExpression            shift and go to state 375

state 217

    (437) CARET_andExpression -> CARET . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    equalityExpression             shift and go to state 108
    multiplicativeExpression       shift and go to state 128
    primary                        shift and go to state 111
    shiftExpression                shift and go to state 130
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    integerLiteral                 shift and go to state 98
    additiveExpression             shift and go to state 102
    unaryExpression                shift and go to state 131
    FloatingPointLiteral           shift and go to state 119
    parExpression                  shift and go to state 132
    andExpression                  shift and go to state 376
    relationalExpression           shift and go to state 95
    instanceOfExpression           shift and go to state 96
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    primitiveType                  shift and go to state 122

state 218

    (438) CARET_andExpressions -> CARET_andExpression .

    CARET           reduce using rule 438 (CARET_andExpressions -> CARET_andExpression .)
    VERTICAL        reduce using rule 438 (CARET_andExpressions -> CARET_andExpression .)
    OP_LAND         reduce using rule 438 (CARET_andExpressions -> CARET_andExpression .)
    OP_LOR          reduce using rule 438 (CARET_andExpressions -> CARET_andExpression .)
    QUES            reduce using rule 438 (CARET_andExpressions -> CARET_andExpression .)
    RPAREN          reduce using rule 438 (CARET_andExpressions -> CARET_andExpression .)
    COMMA           reduce using rule 438 (CARET_andExpressions -> CARET_andExpression .)
    BRPAREN         reduce using rule 438 (CARET_andExpressions -> CARET_andExpression .)
    EQUALS          reduce using rule 438 (CARET_andExpressions -> CARET_andExpression .)
    ASS_ADD         reduce using rule 438 (CARET_andExpressions -> CARET_andExpression .)
    ASS_SUB         reduce using rule 438 (CARET_andExpressions -> CARET_andExpression .)
    ASS_MUL         reduce using rule 438 (CARET_andExpressions -> CARET_andExpression .)
    ASS_DIV         reduce using rule 438 (CARET_andExpressions -> CARET_andExpression .)
    ASS_AND         reduce using rule 438 (CARET_andExpressions -> CARET_andExpression .)
    ASS_OR          reduce using rule 438 (CARET_andExpressions -> CARET_andExpression .)
    ASS_XOR         reduce using rule 438 (CARET_andExpressions -> CARET_andExpression .)
    ASS_MOD         reduce using rule 438 (CARET_andExpressions -> CARET_andExpression .)
    ASS_SHL         reduce using rule 438 (CARET_andExpressions -> CARET_andExpression .)
    ASS_SHRR        reduce using rule 438 (CARET_andExpressions -> CARET_andExpression .)
    ASS_SHR         reduce using rule 438 (CARET_andExpressions -> CARET_andExpression .)
    FRPAREN         reduce using rule 438 (CARET_andExpressions -> CARET_andExpression .)
    COLON           reduce using rule 438 (CARET_andExpressions -> CARET_andExpression .)
    SEMI            reduce using rule 438 (CARET_andExpressions -> CARET_andExpression .)


state 219

    (307) elementValueArrayInitializer -> BLPAREN elementValueStatement . COMMA_OR_empty BRPAREN
    (305) COMMA_OR_empty -> . COMMA
    (306) COMMA_OR_empty -> .

    COMMA           shift and go to state 378
    BRPAREN         reduce using rule 306 (COMMA_OR_empty -> .)

    COMMA_OR_empty                 shift and go to state 377

state 220

    (302) elementValueStatement -> elementValue . elementValueBodys
    (303) elementValueStatement -> elementValue .
    (300) elementValueBodys -> . elementValueBody
    (301) elementValueBodys -> . elementValueBodys elementValueBody
    (299) elementValueBody -> . COMMA elementValue

  ! shift/reduce conflict for COMMA resolved as shift
    BRPAREN         reduce using rule 303 (elementValueStatement -> elementValue .)
    COMMA           shift and go to state 380

  ! COMMA           [ reduce using rule 303 (elementValueStatement -> elementValue .) ]

    elementValueBodys              shift and go to state 379
    elementValueBody               shift and go to state 381

state 221

    (445) andExpression -> equalityExpression AND_equalityExpressions .
    (444) AND_equalityExpressions -> AND_equalityExpressions . AND_equalityExpression
    (442) AND_equalityExpression -> . AND equalityExpression

    CARET           reduce using rule 445 (andExpression -> equalityExpression AND_equalityExpressions .)
    VERTICAL        reduce using rule 445 (andExpression -> equalityExpression AND_equalityExpressions .)
    OP_LAND         reduce using rule 445 (andExpression -> equalityExpression AND_equalityExpressions .)
    OP_LOR          reduce using rule 445 (andExpression -> equalityExpression AND_equalityExpressions .)
    QUES            reduce using rule 445 (andExpression -> equalityExpression AND_equalityExpressions .)
    EQUALS          reduce using rule 445 (andExpression -> equalityExpression AND_equalityExpressions .)
    ASS_ADD         reduce using rule 445 (andExpression -> equalityExpression AND_equalityExpressions .)
    ASS_SUB         reduce using rule 445 (andExpression -> equalityExpression AND_equalityExpressions .)
    ASS_MUL         reduce using rule 445 (andExpression -> equalityExpression AND_equalityExpressions .)
    ASS_DIV         reduce using rule 445 (andExpression -> equalityExpression AND_equalityExpressions .)
    ASS_AND         reduce using rule 445 (andExpression -> equalityExpression AND_equalityExpressions .)
    ASS_OR          reduce using rule 445 (andExpression -> equalityExpression AND_equalityExpressions .)
    ASS_XOR         reduce using rule 445 (andExpression -> equalityExpression AND_equalityExpressions .)
    ASS_MOD         reduce using rule 445 (andExpression -> equalityExpression AND_equalityExpressions .)
    ASS_SHL         reduce using rule 445 (andExpression -> equalityExpression AND_equalityExpressions .)
    ASS_SHRR        reduce using rule 445 (andExpression -> equalityExpression AND_equalityExpressions .)
    ASS_SHR         reduce using rule 445 (andExpression -> equalityExpression AND_equalityExpressions .)
    SEMI            reduce using rule 445 (andExpression -> equalityExpression AND_equalityExpressions .)
    FRPAREN         reduce using rule 445 (andExpression -> equalityExpression AND_equalityExpressions .)
    RPAREN          reduce using rule 445 (andExpression -> equalityExpression AND_equalityExpressions .)
    COMMA           reduce using rule 445 (andExpression -> equalityExpression AND_equalityExpressions .)
    BRPAREN         reduce using rule 445 (andExpression -> equalityExpression AND_equalityExpressions .)
    COLON           reduce using rule 445 (andExpression -> equalityExpression AND_equalityExpressions .)
    AND             shift and go to state 223

    AND_equalityExpression         shift and go to state 382

state 222

    (443) AND_equalityExpressions -> AND_equalityExpression .

    AND             reduce using rule 443 (AND_equalityExpressions -> AND_equalityExpression .)
    CARET           reduce using rule 443 (AND_equalityExpressions -> AND_equalityExpression .)
    VERTICAL        reduce using rule 443 (AND_equalityExpressions -> AND_equalityExpression .)
    OP_LAND         reduce using rule 443 (AND_equalityExpressions -> AND_equalityExpression .)
    OP_LOR          reduce using rule 443 (AND_equalityExpressions -> AND_equalityExpression .)
    QUES            reduce using rule 443 (AND_equalityExpressions -> AND_equalityExpression .)
    RPAREN          reduce using rule 443 (AND_equalityExpressions -> AND_equalityExpression .)
    COMMA           reduce using rule 443 (AND_equalityExpressions -> AND_equalityExpression .)
    BRPAREN         reduce using rule 443 (AND_equalityExpressions -> AND_equalityExpression .)
    EQUALS          reduce using rule 443 (AND_equalityExpressions -> AND_equalityExpression .)
    ASS_ADD         reduce using rule 443 (AND_equalityExpressions -> AND_equalityExpression .)
    ASS_SUB         reduce using rule 443 (AND_equalityExpressions -> AND_equalityExpression .)
    ASS_MUL         reduce using rule 443 (AND_equalityExpressions -> AND_equalityExpression .)
    ASS_DIV         reduce using rule 443 (AND_equalityExpressions -> AND_equalityExpression .)
    ASS_AND         reduce using rule 443 (AND_equalityExpressions -> AND_equalityExpression .)
    ASS_OR          reduce using rule 443 (AND_equalityExpressions -> AND_equalityExpression .)
    ASS_XOR         reduce using rule 443 (AND_equalityExpressions -> AND_equalityExpression .)
    ASS_MOD         reduce using rule 443 (AND_equalityExpressions -> AND_equalityExpression .)
    ASS_SHL         reduce using rule 443 (AND_equalityExpressions -> AND_equalityExpression .)
    ASS_SHRR        reduce using rule 443 (AND_equalityExpressions -> AND_equalityExpression .)
    ASS_SHR         reduce using rule 443 (AND_equalityExpressions -> AND_equalityExpression .)
    FRPAREN         reduce using rule 443 (AND_equalityExpressions -> AND_equalityExpression .)
    COLON           reduce using rule 443 (AND_equalityExpressions -> AND_equalityExpression .)
    SEMI            reduce using rule 443 (AND_equalityExpressions -> AND_equalityExpression .)


state 223

    (442) AND_equalityExpression -> AND . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    equalityExpression             shift and go to state 383
    multiplicativeExpression       shift and go to state 128
    primary                        shift and go to state 111
    shiftExpression                shift and go to state 130
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    integerLiteral                 shift and go to state 98
    additiveExpression             shift and go to state 102
    unaryExpression                shift and go to state 131
    FloatingPointLiteral           shift and go to state 119
    parExpression                  shift and go to state 132
    relationalExpression           shift and go to state 95
    instanceOfExpression           shift and go to state 96
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    primitiveType                  shift and go to state 122

state 224

    (418) conditionalExpressionStats -> conditionalExpressionStat .

    EQUALS          reduce using rule 418 (conditionalExpressionStats -> conditionalExpressionStat .)
    ASS_ADD         reduce using rule 418 (conditionalExpressionStats -> conditionalExpressionStat .)
    ASS_SUB         reduce using rule 418 (conditionalExpressionStats -> conditionalExpressionStat .)
    ASS_MUL         reduce using rule 418 (conditionalExpressionStats -> conditionalExpressionStat .)
    ASS_DIV         reduce using rule 418 (conditionalExpressionStats -> conditionalExpressionStat .)
    ASS_AND         reduce using rule 418 (conditionalExpressionStats -> conditionalExpressionStat .)
    ASS_OR          reduce using rule 418 (conditionalExpressionStats -> conditionalExpressionStat .)
    ASS_XOR         reduce using rule 418 (conditionalExpressionStats -> conditionalExpressionStat .)
    ASS_MOD         reduce using rule 418 (conditionalExpressionStats -> conditionalExpressionStat .)
    ASS_SHL         reduce using rule 418 (conditionalExpressionStats -> conditionalExpressionStat .)
    ASS_SHRR        reduce using rule 418 (conditionalExpressionStats -> conditionalExpressionStat .)
    ASS_SHR         reduce using rule 418 (conditionalExpressionStats -> conditionalExpressionStat .)
    RPAREN          reduce using rule 418 (conditionalExpressionStats -> conditionalExpressionStat .)
    FRPAREN         reduce using rule 418 (conditionalExpressionStats -> conditionalExpressionStat .)
    COMMA           reduce using rule 418 (conditionalExpressionStats -> conditionalExpressionStat .)
    COLON           reduce using rule 418 (conditionalExpressionStats -> conditionalExpressionStat .)
    SEMI            reduce using rule 418 (conditionalExpressionStats -> conditionalExpressionStat .)
    QUES            reduce using rule 418 (conditionalExpressionStats -> conditionalExpressionStat .)
    BRPAREN         reduce using rule 418 (conditionalExpressionStats -> conditionalExpressionStat .)


state 225

    (420) conditionalExpression -> conditionalOrExpression conditionalExpressionStats .
    (419) conditionalExpressionStats -> conditionalExpressionStats . conditionalExpressionStat
    (417) conditionalExpressionStat -> . QUES expression COLON expression

  ! shift/reduce conflict for QUES resolved as shift
    EQUALS          reduce using rule 420 (conditionalExpression -> conditionalOrExpression conditionalExpressionStats .)
    ASS_ADD         reduce using rule 420 (conditionalExpression -> conditionalOrExpression conditionalExpressionStats .)
    ASS_SUB         reduce using rule 420 (conditionalExpression -> conditionalOrExpression conditionalExpressionStats .)
    ASS_MUL         reduce using rule 420 (conditionalExpression -> conditionalOrExpression conditionalExpressionStats .)
    ASS_DIV         reduce using rule 420 (conditionalExpression -> conditionalOrExpression conditionalExpressionStats .)
    ASS_AND         reduce using rule 420 (conditionalExpression -> conditionalOrExpression conditionalExpressionStats .)
    ASS_OR          reduce using rule 420 (conditionalExpression -> conditionalOrExpression conditionalExpressionStats .)
    ASS_XOR         reduce using rule 420 (conditionalExpression -> conditionalOrExpression conditionalExpressionStats .)
    ASS_MOD         reduce using rule 420 (conditionalExpression -> conditionalOrExpression conditionalExpressionStats .)
    ASS_SHL         reduce using rule 420 (conditionalExpression -> conditionalOrExpression conditionalExpressionStats .)
    ASS_SHRR        reduce using rule 420 (conditionalExpression -> conditionalOrExpression conditionalExpressionStats .)
    ASS_SHR         reduce using rule 420 (conditionalExpression -> conditionalOrExpression conditionalExpressionStats .)
    SEMI            reduce using rule 420 (conditionalExpression -> conditionalOrExpression conditionalExpressionStats .)
    RPAREN          reduce using rule 420 (conditionalExpression -> conditionalOrExpression conditionalExpressionStats .)
    COMMA           reduce using rule 420 (conditionalExpression -> conditionalOrExpression conditionalExpressionStats .)
    FRPAREN         reduce using rule 420 (conditionalExpression -> conditionalOrExpression conditionalExpressionStats .)
    BRPAREN         reduce using rule 420 (conditionalExpression -> conditionalOrExpression conditionalExpressionStats .)
    COLON           reduce using rule 420 (conditionalExpression -> conditionalOrExpression conditionalExpressionStats .)
    QUES            shift and go to state 226

  ! QUES            [ reduce using rule 420 (conditionalExpression -> conditionalOrExpression conditionalExpressionStats .) ]

    conditionalExpressionStat      shift and go to state 384

state 226

    (417) conditionalExpressionStat -> QUES . expression COLON expression
    (404) expression -> . conditionalExpression assignmentOperator_expression_empty
    (420) conditionalExpression -> . conditionalOrExpression conditionalExpressionStats
    (421) conditionalExpression -> . conditionalOrExpression
    (425) conditionalOrExpression -> . conditionalAndExpression O_conditionalAndExpressions
    (426) conditionalOrExpression -> . conditionalAndExpression
    (430) conditionalAndExpression -> . inclusiveOrExpression O_inclusiveOrExpressions
    (431) conditionalAndExpression -> . inclusiveOrExpression
    (435) inclusiveOrExpression -> . exclusiveOrExpression V_exclusiveOrExpression
    (436) inclusiveOrExpression -> . exclusiveOrExpression
    (440) exclusiveOrExpression -> . andExpression CARET_andExpressions
    (441) exclusiveOrExpression -> . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    equalityExpression             shift and go to state 108
    inclusiveOrExpression          shift and go to state 99
    multiplicativeExpression       shift and go to state 128
    exclusiveOrExpression          shift and go to state 110
    conditionalAndExpression       shift and go to state 89
    shiftExpression                shift and go to state 130
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    integerLiteral                 shift and go to state 98
    additiveExpression             shift and go to state 102
    instanceOfExpression           shift and go to state 96
    conditionalExpression          shift and go to state 266
    unaryExpression                shift and go to state 131
    FloatingPointLiteral           shift and go to state 119
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    relationalExpression           shift and go to state 95
    conditionalOrExpression        shift and go to state 109
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    primitiveType                  shift and go to state 122
    andExpression                  shift and go to state 106
    expression                     shift and go to state 385

state 227

    (435) inclusiveOrExpression -> exclusiveOrExpression V_exclusiveOrExpression .

    OP_LAND         reduce using rule 435 (inclusiveOrExpression -> exclusiveOrExpression V_exclusiveOrExpression .)
    OP_LOR          reduce using rule 435 (inclusiveOrExpression -> exclusiveOrExpression V_exclusiveOrExpression .)
    QUES            reduce using rule 435 (inclusiveOrExpression -> exclusiveOrExpression V_exclusiveOrExpression .)
    RPAREN          reduce using rule 435 (inclusiveOrExpression -> exclusiveOrExpression V_exclusiveOrExpression .)
    COMMA           reduce using rule 435 (inclusiveOrExpression -> exclusiveOrExpression V_exclusiveOrExpression .)
    BRPAREN         reduce using rule 435 (inclusiveOrExpression -> exclusiveOrExpression V_exclusiveOrExpression .)
    EQUALS          reduce using rule 435 (inclusiveOrExpression -> exclusiveOrExpression V_exclusiveOrExpression .)
    ASS_ADD         reduce using rule 435 (inclusiveOrExpression -> exclusiveOrExpression V_exclusiveOrExpression .)
    ASS_SUB         reduce using rule 435 (inclusiveOrExpression -> exclusiveOrExpression V_exclusiveOrExpression .)
    ASS_MUL         reduce using rule 435 (inclusiveOrExpression -> exclusiveOrExpression V_exclusiveOrExpression .)
    ASS_DIV         reduce using rule 435 (inclusiveOrExpression -> exclusiveOrExpression V_exclusiveOrExpression .)
    ASS_AND         reduce using rule 435 (inclusiveOrExpression -> exclusiveOrExpression V_exclusiveOrExpression .)
    ASS_OR          reduce using rule 435 (inclusiveOrExpression -> exclusiveOrExpression V_exclusiveOrExpression .)
    ASS_XOR         reduce using rule 435 (inclusiveOrExpression -> exclusiveOrExpression V_exclusiveOrExpression .)
    ASS_MOD         reduce using rule 435 (inclusiveOrExpression -> exclusiveOrExpression V_exclusiveOrExpression .)
    ASS_SHL         reduce using rule 435 (inclusiveOrExpression -> exclusiveOrExpression V_exclusiveOrExpression .)
    ASS_SHRR        reduce using rule 435 (inclusiveOrExpression -> exclusiveOrExpression V_exclusiveOrExpression .)
    ASS_SHR         reduce using rule 435 (inclusiveOrExpression -> exclusiveOrExpression V_exclusiveOrExpression .)
    FRPAREN         reduce using rule 435 (inclusiveOrExpression -> exclusiveOrExpression V_exclusiveOrExpression .)
    COLON           reduce using rule 435 (inclusiveOrExpression -> exclusiveOrExpression V_exclusiveOrExpression .)
    SEMI            reduce using rule 435 (inclusiveOrExpression -> exclusiveOrExpression V_exclusiveOrExpression .)


state 228

    (432) V_exclusiveOrExpression -> VERTICAL . exclusiveOrExpression
    (440) exclusiveOrExpression -> . andExpression CARET_andExpressions
    (441) exclusiveOrExpression -> . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    equalityExpression             shift and go to state 108
    multiplicativeExpression       shift and go to state 128
    exclusiveOrExpression          shift and go to state 386
    primary                        shift and go to state 111
    shiftExpression                shift and go to state 130
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    integerLiteral                 shift and go to state 98
    additiveExpression             shift and go to state 102
    unaryExpression                shift and go to state 131
    FloatingPointLiteral           shift and go to state 119
    parExpression                  shift and go to state 132
    andExpression                  shift and go to state 106
    relationalExpression           shift and go to state 95
    instanceOfExpression           shift and go to state 96
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    primitiveType                  shift and go to state 122

state 229

    (550) selector -> FLPAREN . expression FRPAREN
    (404) expression -> . conditionalExpression assignmentOperator_expression_empty
    (420) conditionalExpression -> . conditionalOrExpression conditionalExpressionStats
    (421) conditionalExpression -> . conditionalOrExpression
    (425) conditionalOrExpression -> . conditionalAndExpression O_conditionalAndExpressions
    (426) conditionalOrExpression -> . conditionalAndExpression
    (430) conditionalAndExpression -> . inclusiveOrExpression O_inclusiveOrExpressions
    (431) conditionalAndExpression -> . inclusiveOrExpression
    (435) inclusiveOrExpression -> . exclusiveOrExpression V_exclusiveOrExpression
    (436) inclusiveOrExpression -> . exclusiveOrExpression
    (440) exclusiveOrExpression -> . andExpression CARET_andExpressions
    (441) exclusiveOrExpression -> . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    equalityExpression             shift and go to state 108
    inclusiveOrExpression          shift and go to state 99
    multiplicativeExpression       shift and go to state 128
    exclusiveOrExpression          shift and go to state 110
    conditionalAndExpression       shift and go to state 89
    shiftExpression                shift and go to state 130
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    integerLiteral                 shift and go to state 98
    additiveExpression             shift and go to state 102
    instanceOfExpression           shift and go to state 96
    conditionalExpression          shift and go to state 266
    unaryExpression                shift and go to state 131
    FloatingPointLiteral           shift and go to state 119
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    relationalExpression           shift and go to state 95
    conditionalOrExpression        shift and go to state 109
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    primitiveType                  shift and go to state 122
    andExpression                  shift and go to state 106
    expression                     shift and go to state 387

state 230

    (494) selectors -> selector .

    OP_INC          reduce using rule 494 (selectors -> selector .)
    OP_DEC          reduce using rule 494 (selectors -> selector .)
    DOT             reduce using rule 494 (selectors -> selector .)
    FLPAREN         reduce using rule 494 (selectors -> selector .)
    MULT            reduce using rule 494 (selectors -> selector .)
    SLASH           reduce using rule 494 (selectors -> selector .)
    PERCENT         reduce using rule 494 (selectors -> selector .)
    PLUS            reduce using rule 494 (selectors -> selector .)
    DASH            reduce using rule 494 (selectors -> selector .)
    OP_SHR          reduce using rule 494 (selectors -> selector .)
    OP_SHRR         reduce using rule 494 (selectors -> selector .)
    OP_SHL          reduce using rule 494 (selectors -> selector .)
    OP_LE           reduce using rule 494 (selectors -> selector .)
    OP_GE           reduce using rule 494 (selectors -> selector .)
    LESS            reduce using rule 494 (selectors -> selector .)
    MORE            reduce using rule 494 (selectors -> selector .)
    INSTANCEOF      reduce using rule 494 (selectors -> selector .)
    OP_EQ           reduce using rule 494 (selectors -> selector .)
    OP_NE           reduce using rule 494 (selectors -> selector .)
    AND             reduce using rule 494 (selectors -> selector .)
    CARET           reduce using rule 494 (selectors -> selector .)
    VERTICAL        reduce using rule 494 (selectors -> selector .)
    OP_LAND         reduce using rule 494 (selectors -> selector .)
    OP_LOR          reduce using rule 494 (selectors -> selector .)
    QUES            reduce using rule 494 (selectors -> selector .)
    RPAREN          reduce using rule 494 (selectors -> selector .)
    COMMA           reduce using rule 494 (selectors -> selector .)
    BRPAREN         reduce using rule 494 (selectors -> selector .)
    EQUALS          reduce using rule 494 (selectors -> selector .)
    ASS_ADD         reduce using rule 494 (selectors -> selector .)
    ASS_SUB         reduce using rule 494 (selectors -> selector .)
    ASS_MUL         reduce using rule 494 (selectors -> selector .)
    ASS_DIV         reduce using rule 494 (selectors -> selector .)
    ASS_AND         reduce using rule 494 (selectors -> selector .)
    ASS_OR          reduce using rule 494 (selectors -> selector .)
    ASS_XOR         reduce using rule 494 (selectors -> selector .)
    ASS_MOD         reduce using rule 494 (selectors -> selector .)
    ASS_SHL         reduce using rule 494 (selectors -> selector .)
    ASS_SHRR        reduce using rule 494 (selectors -> selector .)
    ASS_SHR         reduce using rule 494 (selectors -> selector .)
    FRPAREN         reduce using rule 494 (selectors -> selector .)
    COLON           reduce using rule 494 (selectors -> selector .)
    SEMI            reduce using rule 494 (selectors -> selector .)


state 231

    (491) INC_DEC_empty -> OP_INC .

    MULT            reduce using rule 491 (INC_DEC_empty -> OP_INC .)
    SLASH           reduce using rule 491 (INC_DEC_empty -> OP_INC .)
    PERCENT         reduce using rule 491 (INC_DEC_empty -> OP_INC .)
    PLUS            reduce using rule 491 (INC_DEC_empty -> OP_INC .)
    DASH            reduce using rule 491 (INC_DEC_empty -> OP_INC .)
    OP_SHR          reduce using rule 491 (INC_DEC_empty -> OP_INC .)
    OP_SHRR         reduce using rule 491 (INC_DEC_empty -> OP_INC .)
    OP_SHL          reduce using rule 491 (INC_DEC_empty -> OP_INC .)
    OP_LE           reduce using rule 491 (INC_DEC_empty -> OP_INC .)
    OP_GE           reduce using rule 491 (INC_DEC_empty -> OP_INC .)
    LESS            reduce using rule 491 (INC_DEC_empty -> OP_INC .)
    MORE            reduce using rule 491 (INC_DEC_empty -> OP_INC .)
    INSTANCEOF      reduce using rule 491 (INC_DEC_empty -> OP_INC .)
    OP_EQ           reduce using rule 491 (INC_DEC_empty -> OP_INC .)
    OP_NE           reduce using rule 491 (INC_DEC_empty -> OP_INC .)
    AND             reduce using rule 491 (INC_DEC_empty -> OP_INC .)
    CARET           reduce using rule 491 (INC_DEC_empty -> OP_INC .)
    VERTICAL        reduce using rule 491 (INC_DEC_empty -> OP_INC .)
    OP_LAND         reduce using rule 491 (INC_DEC_empty -> OP_INC .)
    OP_LOR          reduce using rule 491 (INC_DEC_empty -> OP_INC .)
    QUES            reduce using rule 491 (INC_DEC_empty -> OP_INC .)
    EQUALS          reduce using rule 491 (INC_DEC_empty -> OP_INC .)
    ASS_ADD         reduce using rule 491 (INC_DEC_empty -> OP_INC .)
    ASS_SUB         reduce using rule 491 (INC_DEC_empty -> OP_INC .)
    ASS_MUL         reduce using rule 491 (INC_DEC_empty -> OP_INC .)
    ASS_DIV         reduce using rule 491 (INC_DEC_empty -> OP_INC .)
    ASS_AND         reduce using rule 491 (INC_DEC_empty -> OP_INC .)
    ASS_OR          reduce using rule 491 (INC_DEC_empty -> OP_INC .)
    ASS_XOR         reduce using rule 491 (INC_DEC_empty -> OP_INC .)
    ASS_MOD         reduce using rule 491 (INC_DEC_empty -> OP_INC .)
    ASS_SHL         reduce using rule 491 (INC_DEC_empty -> OP_INC .)
    ASS_SHRR        reduce using rule 491 (INC_DEC_empty -> OP_INC .)
    ASS_SHR         reduce using rule 491 (INC_DEC_empty -> OP_INC .)
    SEMI            reduce using rule 491 (INC_DEC_empty -> OP_INC .)
    RPAREN          reduce using rule 491 (INC_DEC_empty -> OP_INC .)
    COMMA           reduce using rule 491 (INC_DEC_empty -> OP_INC .)
    BRPAREN         reduce using rule 491 (INC_DEC_empty -> OP_INC .)
    FRPAREN         reduce using rule 491 (INC_DEC_empty -> OP_INC .)
    COLON           reduce using rule 491 (INC_DEC_empty -> OP_INC .)


state 232

    (493) INC_DEC_empty -> empty .

    MULT            reduce using rule 493 (INC_DEC_empty -> empty .)
    SLASH           reduce using rule 493 (INC_DEC_empty -> empty .)
    PERCENT         reduce using rule 493 (INC_DEC_empty -> empty .)
    PLUS            reduce using rule 493 (INC_DEC_empty -> empty .)
    DASH            reduce using rule 493 (INC_DEC_empty -> empty .)
    OP_SHR          reduce using rule 493 (INC_DEC_empty -> empty .)
    OP_SHRR         reduce using rule 493 (INC_DEC_empty -> empty .)
    OP_SHL          reduce using rule 493 (INC_DEC_empty -> empty .)
    OP_LE           reduce using rule 493 (INC_DEC_empty -> empty .)
    OP_GE           reduce using rule 493 (INC_DEC_empty -> empty .)
    LESS            reduce using rule 493 (INC_DEC_empty -> empty .)
    MORE            reduce using rule 493 (INC_DEC_empty -> empty .)
    INSTANCEOF      reduce using rule 493 (INC_DEC_empty -> empty .)
    OP_EQ           reduce using rule 493 (INC_DEC_empty -> empty .)
    OP_NE           reduce using rule 493 (INC_DEC_empty -> empty .)
    AND             reduce using rule 493 (INC_DEC_empty -> empty .)
    CARET           reduce using rule 493 (INC_DEC_empty -> empty .)
    VERTICAL        reduce using rule 493 (INC_DEC_empty -> empty .)
    OP_LAND         reduce using rule 493 (INC_DEC_empty -> empty .)
    OP_LOR          reduce using rule 493 (INC_DEC_empty -> empty .)
    QUES            reduce using rule 493 (INC_DEC_empty -> empty .)
    EQUALS          reduce using rule 493 (INC_DEC_empty -> empty .)
    ASS_ADD         reduce using rule 493 (INC_DEC_empty -> empty .)
    ASS_SUB         reduce using rule 493 (INC_DEC_empty -> empty .)
    ASS_MUL         reduce using rule 493 (INC_DEC_empty -> empty .)
    ASS_DIV         reduce using rule 493 (INC_DEC_empty -> empty .)
    ASS_AND         reduce using rule 493 (INC_DEC_empty -> empty .)
    ASS_OR          reduce using rule 493 (INC_DEC_empty -> empty .)
    ASS_XOR         reduce using rule 493 (INC_DEC_empty -> empty .)
    ASS_MOD         reduce using rule 493 (INC_DEC_empty -> empty .)
    ASS_SHL         reduce using rule 493 (INC_DEC_empty -> empty .)
    ASS_SHRR        reduce using rule 493 (INC_DEC_empty -> empty .)
    ASS_SHR         reduce using rule 493 (INC_DEC_empty -> empty .)
    SEMI            reduce using rule 493 (INC_DEC_empty -> empty .)
    RPAREN          reduce using rule 493 (INC_DEC_empty -> empty .)
    COMMA           reduce using rule 493 (INC_DEC_empty -> empty .)
    BRPAREN         reduce using rule 493 (INC_DEC_empty -> empty .)
    FRPAREN         reduce using rule 493 (INC_DEC_empty -> empty .)
    COLON           reduce using rule 493 (INC_DEC_empty -> empty .)


state 233

    (492) INC_DEC_empty -> OP_DEC .

    MULT            reduce using rule 492 (INC_DEC_empty -> OP_DEC .)
    SLASH           reduce using rule 492 (INC_DEC_empty -> OP_DEC .)
    PERCENT         reduce using rule 492 (INC_DEC_empty -> OP_DEC .)
    PLUS            reduce using rule 492 (INC_DEC_empty -> OP_DEC .)
    DASH            reduce using rule 492 (INC_DEC_empty -> OP_DEC .)
    OP_SHR          reduce using rule 492 (INC_DEC_empty -> OP_DEC .)
    OP_SHRR         reduce using rule 492 (INC_DEC_empty -> OP_DEC .)
    OP_SHL          reduce using rule 492 (INC_DEC_empty -> OP_DEC .)
    OP_LE           reduce using rule 492 (INC_DEC_empty -> OP_DEC .)
    OP_GE           reduce using rule 492 (INC_DEC_empty -> OP_DEC .)
    LESS            reduce using rule 492 (INC_DEC_empty -> OP_DEC .)
    MORE            reduce using rule 492 (INC_DEC_empty -> OP_DEC .)
    INSTANCEOF      reduce using rule 492 (INC_DEC_empty -> OP_DEC .)
    OP_EQ           reduce using rule 492 (INC_DEC_empty -> OP_DEC .)
    OP_NE           reduce using rule 492 (INC_DEC_empty -> OP_DEC .)
    AND             reduce using rule 492 (INC_DEC_empty -> OP_DEC .)
    CARET           reduce using rule 492 (INC_DEC_empty -> OP_DEC .)
    VERTICAL        reduce using rule 492 (INC_DEC_empty -> OP_DEC .)
    OP_LAND         reduce using rule 492 (INC_DEC_empty -> OP_DEC .)
    OP_LOR          reduce using rule 492 (INC_DEC_empty -> OP_DEC .)
    QUES            reduce using rule 492 (INC_DEC_empty -> OP_DEC .)
    EQUALS          reduce using rule 492 (INC_DEC_empty -> OP_DEC .)
    ASS_ADD         reduce using rule 492 (INC_DEC_empty -> OP_DEC .)
    ASS_SUB         reduce using rule 492 (INC_DEC_empty -> OP_DEC .)
    ASS_MUL         reduce using rule 492 (INC_DEC_empty -> OP_DEC .)
    ASS_DIV         reduce using rule 492 (INC_DEC_empty -> OP_DEC .)
    ASS_AND         reduce using rule 492 (INC_DEC_empty -> OP_DEC .)
    ASS_OR          reduce using rule 492 (INC_DEC_empty -> OP_DEC .)
    ASS_XOR         reduce using rule 492 (INC_DEC_empty -> OP_DEC .)
    ASS_MOD         reduce using rule 492 (INC_DEC_empty -> OP_DEC .)
    ASS_SHL         reduce using rule 492 (INC_DEC_empty -> OP_DEC .)
    ASS_SHRR        reduce using rule 492 (INC_DEC_empty -> OP_DEC .)
    ASS_SHR         reduce using rule 492 (INC_DEC_empty -> OP_DEC .)
    SEMI            reduce using rule 492 (INC_DEC_empty -> OP_DEC .)
    RPAREN          reduce using rule 492 (INC_DEC_empty -> OP_DEC .)
    COMMA           reduce using rule 492 (INC_DEC_empty -> OP_DEC .)
    BRPAREN         reduce using rule 492 (INC_DEC_empty -> OP_DEC .)
    FRPAREN         reduce using rule 492 (INC_DEC_empty -> OP_DEC .)
    COLON           reduce using rule 492 (INC_DEC_empty -> OP_DEC .)


state 234

    (499) unaryExpressionNotPlusMinus -> primary selectors . INC_DEC_empty
    (495) selectors -> selectors . selector
    (491) INC_DEC_empty -> . OP_INC
    (492) INC_DEC_empty -> . OP_DEC
    (493) INC_DEC_empty -> . empty
    (545) selector -> . DOT Identifier arguments_once
    (546) selector -> . DOT Identifier
    (547) selector -> . DOT THIS
    (548) selector -> . DOT SUPER superSuffix
    (549) selector -> . DOT NEW innerCreator
    (550) selector -> . FLPAREN expression FRPAREN
    (562) empty -> .

    OP_INC          shift and go to state 231
    OP_DEC          shift and go to state 233
    DOT             shift and go to state 235
    FLPAREN         shift and go to state 229
    MULT            reduce using rule 562 (empty -> .)
    SLASH           reduce using rule 562 (empty -> .)
    PERCENT         reduce using rule 562 (empty -> .)
    PLUS            reduce using rule 562 (empty -> .)
    DASH            reduce using rule 562 (empty -> .)
    OP_SHR          reduce using rule 562 (empty -> .)
    OP_SHRR         reduce using rule 562 (empty -> .)
    OP_SHL          reduce using rule 562 (empty -> .)
    OP_LE           reduce using rule 562 (empty -> .)
    OP_GE           reduce using rule 562 (empty -> .)
    LESS            reduce using rule 562 (empty -> .)
    MORE            reduce using rule 562 (empty -> .)
    INSTANCEOF      reduce using rule 562 (empty -> .)
    OP_EQ           reduce using rule 562 (empty -> .)
    OP_NE           reduce using rule 562 (empty -> .)
    AND             reduce using rule 562 (empty -> .)
    CARET           reduce using rule 562 (empty -> .)
    VERTICAL        reduce using rule 562 (empty -> .)
    OP_LAND         reduce using rule 562 (empty -> .)
    OP_LOR          reduce using rule 562 (empty -> .)
    QUES            reduce using rule 562 (empty -> .)
    RPAREN          reduce using rule 562 (empty -> .)
    COMMA           reduce using rule 562 (empty -> .)
    BRPAREN         reduce using rule 562 (empty -> .)
    EQUALS          reduce using rule 562 (empty -> .)
    ASS_ADD         reduce using rule 562 (empty -> .)
    ASS_SUB         reduce using rule 562 (empty -> .)
    ASS_MUL         reduce using rule 562 (empty -> .)
    ASS_DIV         reduce using rule 562 (empty -> .)
    ASS_AND         reduce using rule 562 (empty -> .)
    ASS_OR          reduce using rule 562 (empty -> .)
    ASS_XOR         reduce using rule 562 (empty -> .)
    ASS_MOD         reduce using rule 562 (empty -> .)
    ASS_SHL         reduce using rule 562 (empty -> .)
    ASS_SHRR        reduce using rule 562 (empty -> .)
    ASS_SHR         reduce using rule 562 (empty -> .)
    FRPAREN         reduce using rule 562 (empty -> .)
    COLON           reduce using rule 562 (empty -> .)
    SEMI            reduce using rule 562 (empty -> .)

    selector                       shift and go to state 388
    INC_DEC_empty                  shift and go to state 389
    empty                          shift and go to state 232

state 235

    (545) selector -> DOT . Identifier arguments_once
    (546) selector -> DOT . Identifier
    (547) selector -> DOT . THIS
    (548) selector -> DOT . SUPER superSuffix
    (549) selector -> DOT . NEW innerCreator

    Identifier      shift and go to state 392
    THIS            shift and go to state 390
    SUPER           shift and go to state 393
    NEW             shift and go to state 391


state 236

    (500) unaryExpressionNotPlusMinus -> primary INC_DEC_empty .

    MULT            reduce using rule 500 (unaryExpressionNotPlusMinus -> primary INC_DEC_empty .)
    SLASH           reduce using rule 500 (unaryExpressionNotPlusMinus -> primary INC_DEC_empty .)
    PERCENT         reduce using rule 500 (unaryExpressionNotPlusMinus -> primary INC_DEC_empty .)
    PLUS            reduce using rule 500 (unaryExpressionNotPlusMinus -> primary INC_DEC_empty .)
    DASH            reduce using rule 500 (unaryExpressionNotPlusMinus -> primary INC_DEC_empty .)
    OP_SHR          reduce using rule 500 (unaryExpressionNotPlusMinus -> primary INC_DEC_empty .)
    OP_SHRR         reduce using rule 500 (unaryExpressionNotPlusMinus -> primary INC_DEC_empty .)
    OP_SHL          reduce using rule 500 (unaryExpressionNotPlusMinus -> primary INC_DEC_empty .)
    OP_LE           reduce using rule 500 (unaryExpressionNotPlusMinus -> primary INC_DEC_empty .)
    OP_GE           reduce using rule 500 (unaryExpressionNotPlusMinus -> primary INC_DEC_empty .)
    LESS            reduce using rule 500 (unaryExpressionNotPlusMinus -> primary INC_DEC_empty .)
    MORE            reduce using rule 500 (unaryExpressionNotPlusMinus -> primary INC_DEC_empty .)
    INSTANCEOF      reduce using rule 500 (unaryExpressionNotPlusMinus -> primary INC_DEC_empty .)
    OP_EQ           reduce using rule 500 (unaryExpressionNotPlusMinus -> primary INC_DEC_empty .)
    OP_NE           reduce using rule 500 (unaryExpressionNotPlusMinus -> primary INC_DEC_empty .)
    AND             reduce using rule 500 (unaryExpressionNotPlusMinus -> primary INC_DEC_empty .)
    CARET           reduce using rule 500 (unaryExpressionNotPlusMinus -> primary INC_DEC_empty .)
    VERTICAL        reduce using rule 500 (unaryExpressionNotPlusMinus -> primary INC_DEC_empty .)
    OP_LAND         reduce using rule 500 (unaryExpressionNotPlusMinus -> primary INC_DEC_empty .)
    OP_LOR          reduce using rule 500 (unaryExpressionNotPlusMinus -> primary INC_DEC_empty .)
    QUES            reduce using rule 500 (unaryExpressionNotPlusMinus -> primary INC_DEC_empty .)
    EQUALS          reduce using rule 500 (unaryExpressionNotPlusMinus -> primary INC_DEC_empty .)
    ASS_ADD         reduce using rule 500 (unaryExpressionNotPlusMinus -> primary INC_DEC_empty .)
    ASS_SUB         reduce using rule 500 (unaryExpressionNotPlusMinus -> primary INC_DEC_empty .)
    ASS_MUL         reduce using rule 500 (unaryExpressionNotPlusMinus -> primary INC_DEC_empty .)
    ASS_DIV         reduce using rule 500 (unaryExpressionNotPlusMinus -> primary INC_DEC_empty .)
    ASS_AND         reduce using rule 500 (unaryExpressionNotPlusMinus -> primary INC_DEC_empty .)
    ASS_OR          reduce using rule 500 (unaryExpressionNotPlusMinus -> primary INC_DEC_empty .)
    ASS_XOR         reduce using rule 500 (unaryExpressionNotPlusMinus -> primary INC_DEC_empty .)
    ASS_MOD         reduce using rule 500 (unaryExpressionNotPlusMinus -> primary INC_DEC_empty .)
    ASS_SHL         reduce using rule 500 (unaryExpressionNotPlusMinus -> primary INC_DEC_empty .)
    ASS_SHRR        reduce using rule 500 (unaryExpressionNotPlusMinus -> primary INC_DEC_empty .)
    ASS_SHR         reduce using rule 500 (unaryExpressionNotPlusMinus -> primary INC_DEC_empty .)
    RPAREN          reduce using rule 500 (unaryExpressionNotPlusMinus -> primary INC_DEC_empty .)
    COMMA           reduce using rule 500 (unaryExpressionNotPlusMinus -> primary INC_DEC_empty .)
    SEMI            reduce using rule 500 (unaryExpressionNotPlusMinus -> primary INC_DEC_empty .)
    FRPAREN         reduce using rule 500 (unaryExpressionNotPlusMinus -> primary INC_DEC_empty .)
    BRPAREN         reduce using rule 500 (unaryExpressionNotPlusMinus -> primary INC_DEC_empty .)
    COLON           reduce using rule 500 (unaryExpressionNotPlusMinus -> primary INC_DEC_empty .)


state 237

    (488) unaryExpression -> OP_INC unaryExpression .

    MULT            reduce using rule 488 (unaryExpression -> OP_INC unaryExpression .)
    SLASH           reduce using rule 488 (unaryExpression -> OP_INC unaryExpression .)
    PERCENT         reduce using rule 488 (unaryExpression -> OP_INC unaryExpression .)
    PLUS            reduce using rule 488 (unaryExpression -> OP_INC unaryExpression .)
    DASH            reduce using rule 488 (unaryExpression -> OP_INC unaryExpression .)
    OP_SHR          reduce using rule 488 (unaryExpression -> OP_INC unaryExpression .)
    OP_SHRR         reduce using rule 488 (unaryExpression -> OP_INC unaryExpression .)
    OP_SHL          reduce using rule 488 (unaryExpression -> OP_INC unaryExpression .)
    OP_LE           reduce using rule 488 (unaryExpression -> OP_INC unaryExpression .)
    OP_GE           reduce using rule 488 (unaryExpression -> OP_INC unaryExpression .)
    LESS            reduce using rule 488 (unaryExpression -> OP_INC unaryExpression .)
    MORE            reduce using rule 488 (unaryExpression -> OP_INC unaryExpression .)
    INSTANCEOF      reduce using rule 488 (unaryExpression -> OP_INC unaryExpression .)
    OP_EQ           reduce using rule 488 (unaryExpression -> OP_INC unaryExpression .)
    OP_NE           reduce using rule 488 (unaryExpression -> OP_INC unaryExpression .)
    AND             reduce using rule 488 (unaryExpression -> OP_INC unaryExpression .)
    CARET           reduce using rule 488 (unaryExpression -> OP_INC unaryExpression .)
    VERTICAL        reduce using rule 488 (unaryExpression -> OP_INC unaryExpression .)
    OP_LAND         reduce using rule 488 (unaryExpression -> OP_INC unaryExpression .)
    OP_LOR          reduce using rule 488 (unaryExpression -> OP_INC unaryExpression .)
    QUES            reduce using rule 488 (unaryExpression -> OP_INC unaryExpression .)
    RPAREN          reduce using rule 488 (unaryExpression -> OP_INC unaryExpression .)
    COMMA           reduce using rule 488 (unaryExpression -> OP_INC unaryExpression .)
    BRPAREN         reduce using rule 488 (unaryExpression -> OP_INC unaryExpression .)
    EQUALS          reduce using rule 488 (unaryExpression -> OP_INC unaryExpression .)
    ASS_ADD         reduce using rule 488 (unaryExpression -> OP_INC unaryExpression .)
    ASS_SUB         reduce using rule 488 (unaryExpression -> OP_INC unaryExpression .)
    ASS_MUL         reduce using rule 488 (unaryExpression -> OP_INC unaryExpression .)
    ASS_DIV         reduce using rule 488 (unaryExpression -> OP_INC unaryExpression .)
    ASS_AND         reduce using rule 488 (unaryExpression -> OP_INC unaryExpression .)
    ASS_OR          reduce using rule 488 (unaryExpression -> OP_INC unaryExpression .)
    ASS_XOR         reduce using rule 488 (unaryExpression -> OP_INC unaryExpression .)
    ASS_MOD         reduce using rule 488 (unaryExpression -> OP_INC unaryExpression .)
    ASS_SHL         reduce using rule 488 (unaryExpression -> OP_INC unaryExpression .)
    ASS_SHRR        reduce using rule 488 (unaryExpression -> OP_INC unaryExpression .)
    ASS_SHR         reduce using rule 488 (unaryExpression -> OP_INC unaryExpression .)
    FRPAREN         reduce using rule 488 (unaryExpression -> OP_INC unaryExpression .)
    COLON           reduce using rule 488 (unaryExpression -> OP_INC unaryExpression .)
    SEMI            reduce using rule 488 (unaryExpression -> OP_INC unaryExpression .)


state 238

    (489) unaryExpression -> OP_DEC unaryExpression .

    MULT            reduce using rule 489 (unaryExpression -> OP_DEC unaryExpression .)
    SLASH           reduce using rule 489 (unaryExpression -> OP_DEC unaryExpression .)
    PERCENT         reduce using rule 489 (unaryExpression -> OP_DEC unaryExpression .)
    PLUS            reduce using rule 489 (unaryExpression -> OP_DEC unaryExpression .)
    DASH            reduce using rule 489 (unaryExpression -> OP_DEC unaryExpression .)
    OP_SHR          reduce using rule 489 (unaryExpression -> OP_DEC unaryExpression .)
    OP_SHRR         reduce using rule 489 (unaryExpression -> OP_DEC unaryExpression .)
    OP_SHL          reduce using rule 489 (unaryExpression -> OP_DEC unaryExpression .)
    OP_LE           reduce using rule 489 (unaryExpression -> OP_DEC unaryExpression .)
    OP_GE           reduce using rule 489 (unaryExpression -> OP_DEC unaryExpression .)
    LESS            reduce using rule 489 (unaryExpression -> OP_DEC unaryExpression .)
    MORE            reduce using rule 489 (unaryExpression -> OP_DEC unaryExpression .)
    INSTANCEOF      reduce using rule 489 (unaryExpression -> OP_DEC unaryExpression .)
    OP_EQ           reduce using rule 489 (unaryExpression -> OP_DEC unaryExpression .)
    OP_NE           reduce using rule 489 (unaryExpression -> OP_DEC unaryExpression .)
    AND             reduce using rule 489 (unaryExpression -> OP_DEC unaryExpression .)
    CARET           reduce using rule 489 (unaryExpression -> OP_DEC unaryExpression .)
    VERTICAL        reduce using rule 489 (unaryExpression -> OP_DEC unaryExpression .)
    OP_LAND         reduce using rule 489 (unaryExpression -> OP_DEC unaryExpression .)
    OP_LOR          reduce using rule 489 (unaryExpression -> OP_DEC unaryExpression .)
    QUES            reduce using rule 489 (unaryExpression -> OP_DEC unaryExpression .)
    RPAREN          reduce using rule 489 (unaryExpression -> OP_DEC unaryExpression .)
    COMMA           reduce using rule 489 (unaryExpression -> OP_DEC unaryExpression .)
    BRPAREN         reduce using rule 489 (unaryExpression -> OP_DEC unaryExpression .)
    EQUALS          reduce using rule 489 (unaryExpression -> OP_DEC unaryExpression .)
    ASS_ADD         reduce using rule 489 (unaryExpression -> OP_DEC unaryExpression .)
    ASS_SUB         reduce using rule 489 (unaryExpression -> OP_DEC unaryExpression .)
    ASS_MUL         reduce using rule 489 (unaryExpression -> OP_DEC unaryExpression .)
    ASS_DIV         reduce using rule 489 (unaryExpression -> OP_DEC unaryExpression .)
    ASS_AND         reduce using rule 489 (unaryExpression -> OP_DEC unaryExpression .)
    ASS_OR          reduce using rule 489 (unaryExpression -> OP_DEC unaryExpression .)
    ASS_XOR         reduce using rule 489 (unaryExpression -> OP_DEC unaryExpression .)
    ASS_MOD         reduce using rule 489 (unaryExpression -> OP_DEC unaryExpression .)
    ASS_SHL         reduce using rule 489 (unaryExpression -> OP_DEC unaryExpression .)
    ASS_SHRR        reduce using rule 489 (unaryExpression -> OP_DEC unaryExpression .)
    ASS_SHR         reduce using rule 489 (unaryExpression -> OP_DEC unaryExpression .)
    FRPAREN         reduce using rule 489 (unaryExpression -> OP_DEC unaryExpression .)
    COLON           reduce using rule 489 (unaryExpression -> OP_DEC unaryExpression .)
    SEMI            reduce using rule 489 (unaryExpression -> OP_DEC unaryExpression .)


state 239

    (219) classOrInterfaceType -> Identifier . classOrInterfaceTypeBody
    (220) classOrInterfaceType -> Identifier .
    (212) classOrInterfaceTypeBody -> . typeArguments classOrInterfaceTypeStatements
    (213) classOrInterfaceTypeBody -> . typeArguments
    (214) classOrInterfaceTypeBody -> . classOrInterfaceTypeStatements
    (234) typeArguments -> . LESS typeArgument COMMA_typeArguments MORE
    (235) typeArguments -> . LESS typeArgument MORE
    (217) classOrInterfaceTypeStatements -> . classOrInterfaceTypeStatement
    (218) classOrInterfaceTypeStatements -> . classOrInterfaceTypeStatements classOrInterfaceTypeStatement
    (215) classOrInterfaceTypeStatement -> . DOT Identifier typeArguments
    (216) classOrInterfaceTypeStatement -> . DOT Identifier

    LPAREN          reduce using rule 220 (classOrInterfaceType -> Identifier .)
    FLPAREN         reduce using rule 220 (classOrInterfaceType -> Identifier .)
    LESS            shift and go to state 156
    DOT             shift and go to state 161

    classOrInterfaceTypeBody       shift and go to state 394
    typeArguments                  shift and go to state 158
    classOrInterfaceTypeStatements shift and go to state 159
    classOrInterfaceTypeStatement  shift and go to state 160

state 240

    (511) primary -> NEW creator .

    OP_INC          reduce using rule 511 (primary -> NEW creator .)
    OP_DEC          reduce using rule 511 (primary -> NEW creator .)
    DOT             reduce using rule 511 (primary -> NEW creator .)
    FLPAREN         reduce using rule 511 (primary -> NEW creator .)
    MULT            reduce using rule 511 (primary -> NEW creator .)
    SLASH           reduce using rule 511 (primary -> NEW creator .)
    PERCENT         reduce using rule 511 (primary -> NEW creator .)
    PLUS            reduce using rule 511 (primary -> NEW creator .)
    DASH            reduce using rule 511 (primary -> NEW creator .)
    OP_SHR          reduce using rule 511 (primary -> NEW creator .)
    OP_SHRR         reduce using rule 511 (primary -> NEW creator .)
    OP_SHL          reduce using rule 511 (primary -> NEW creator .)
    OP_LE           reduce using rule 511 (primary -> NEW creator .)
    OP_GE           reduce using rule 511 (primary -> NEW creator .)
    LESS            reduce using rule 511 (primary -> NEW creator .)
    MORE            reduce using rule 511 (primary -> NEW creator .)
    INSTANCEOF      reduce using rule 511 (primary -> NEW creator .)
    OP_EQ           reduce using rule 511 (primary -> NEW creator .)
    OP_NE           reduce using rule 511 (primary -> NEW creator .)
    AND             reduce using rule 511 (primary -> NEW creator .)
    CARET           reduce using rule 511 (primary -> NEW creator .)
    VERTICAL        reduce using rule 511 (primary -> NEW creator .)
    OP_LAND         reduce using rule 511 (primary -> NEW creator .)
    OP_LOR          reduce using rule 511 (primary -> NEW creator .)
    QUES            reduce using rule 511 (primary -> NEW creator .)
    EQUALS          reduce using rule 511 (primary -> NEW creator .)
    ASS_ADD         reduce using rule 511 (primary -> NEW creator .)
    ASS_SUB         reduce using rule 511 (primary -> NEW creator .)
    ASS_MUL         reduce using rule 511 (primary -> NEW creator .)
    ASS_DIV         reduce using rule 511 (primary -> NEW creator .)
    ASS_AND         reduce using rule 511 (primary -> NEW creator .)
    ASS_OR          reduce using rule 511 (primary -> NEW creator .)
    ASS_XOR         reduce using rule 511 (primary -> NEW creator .)
    ASS_MOD         reduce using rule 511 (primary -> NEW creator .)
    ASS_SHL         reduce using rule 511 (primary -> NEW creator .)
    ASS_SHRR        reduce using rule 511 (primary -> NEW creator .)
    ASS_SHR         reduce using rule 511 (primary -> NEW creator .)
    FRPAREN         reduce using rule 511 (primary -> NEW creator .)
    SEMI            reduce using rule 511 (primary -> NEW creator .)
    COMMA           reduce using rule 511 (primary -> NEW creator .)
    BRPAREN         reduce using rule 511 (primary -> NEW creator .)
    RPAREN          reduce using rule 511 (primary -> NEW creator .)
    COLON           reduce using rule 511 (primary -> NEW creator .)


state 241

    (529) creator -> createdName . arrayCreatorRest
    (530) creator -> createdName . classCreatorRest
    (536) arrayCreatorRest -> . FLPAREN FRPAREN arrays arrayInitializer
    (537) arrayCreatorRest -> . FLPAREN FRPAREN arrayInitializer
    (538) arrayCreatorRest -> . FLPAREN expression FRPAREN FL_expression_FRs arrays
    (539) arrayCreatorRest -> . FLPAREN expression FRPAREN
    (540) arrayCreatorRest -> . FLPAREN expression FRPAREN FL_expression_FRs
    (541) arrayCreatorRest -> . FLPAREN expression FRPAREN arrays
    (542) classCreatorRest -> . arguments classBody_once
    (555) arguments -> . LPAREN expressionList_once RPAREN

    FLPAREN         shift and go to state 395
    LPAREN          shift and go to state 199

    classCreatorRest               shift and go to state 396
    arguments                      shift and go to state 397
    arrayCreatorRest               shift and go to state 398

state 242

    (544) nonWildcardTypeArguments -> LESS . typeList MORE
    (99) typeList -> . type COMMA_types
    (100) typeList -> . type
    (205) type -> . type_body
    (206) type -> . primitiveType arrays
    (207) type -> . primitiveType
    (208) type_body -> . Identifier classOrInterfaceTypeBody arrays
    (209) type_body -> . Identifier classOrInterfaceTypeBody
    (210) type_body -> . Identifier arrays
    (211) type_body -> . Identifier
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE

    Identifier      shift and go to state 80
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72

    typeList                       shift and go to state 399
    primitiveType                  shift and go to state 74
    type_body                      shift and go to state 77
    type                           shift and go to state 81

state 243

    (531) createdName -> classOrInterfaceType .

    LPAREN          reduce using rule 531 (createdName -> classOrInterfaceType .)
    FLPAREN         reduce using rule 531 (createdName -> classOrInterfaceType .)


state 244

    (532) createdName -> primitiveType .

    LPAREN          reduce using rule 532 (createdName -> primitiveType .)
    FLPAREN         reduce using rule 532 (createdName -> primitiveType .)


state 245

    (528) creator -> nonWildcardTypeArguments . createdName classCreatorRest
    (531) createdName -> . classOrInterfaceType
    (532) createdName -> . primitiveType
    (219) classOrInterfaceType -> . Identifier classOrInterfaceTypeBody
    (220) classOrInterfaceType -> . Identifier
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE

    Identifier      shift and go to state 239
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72

    createdName                    shift and go to state 400
    classOrInterfaceType           shift and go to state 243
    primitiveType                  shift and go to state 244

state 246

    (496) unaryExpressionNotPlusMinus -> TILDE unaryExpression .

    MULT            reduce using rule 496 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    SLASH           reduce using rule 496 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    PERCENT         reduce using rule 496 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    PLUS            reduce using rule 496 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    DASH            reduce using rule 496 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    OP_SHR          reduce using rule 496 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    OP_SHRR         reduce using rule 496 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    OP_SHL          reduce using rule 496 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    OP_LE           reduce using rule 496 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    OP_GE           reduce using rule 496 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    LESS            reduce using rule 496 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    MORE            reduce using rule 496 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    INSTANCEOF      reduce using rule 496 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    OP_EQ           reduce using rule 496 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    OP_NE           reduce using rule 496 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    AND             reduce using rule 496 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    CARET           reduce using rule 496 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    VERTICAL        reduce using rule 496 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    OP_LAND         reduce using rule 496 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    OP_LOR          reduce using rule 496 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    QUES            reduce using rule 496 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    EQUALS          reduce using rule 496 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    ASS_ADD         reduce using rule 496 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    ASS_SUB         reduce using rule 496 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    ASS_MUL         reduce using rule 496 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    ASS_DIV         reduce using rule 496 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    ASS_AND         reduce using rule 496 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    ASS_OR          reduce using rule 496 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    ASS_XOR         reduce using rule 496 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    ASS_MOD         reduce using rule 496 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    ASS_SHL         reduce using rule 496 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    ASS_SHRR        reduce using rule 496 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    ASS_SHR         reduce using rule 496 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    RPAREN          reduce using rule 496 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    COMMA           reduce using rule 496 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    SEMI            reduce using rule 496 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    FRPAREN         reduce using rule 496 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    BRPAREN         reduce using rule 496 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    COLON           reduce using rule 496 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)


state 247

    (514) primary -> primitiveType arrays . DOT CLASS
    (138) arrays -> arrays . array
    (137) array -> . FLPAREN FRPAREN

    DOT             shift and go to state 401
    FLPAREN         shift and go to state 153

    array                          shift and go to state 308

state 248

    (515) primary -> primitiveType DOT . CLASS

    CLASS           shift and go to state 402


state 249

    (475) add_multiplicativeExpressions -> add_multiplicativeExpression .

    PLUS            reduce using rule 475 (add_multiplicativeExpressions -> add_multiplicativeExpression .)
    DASH            reduce using rule 475 (add_multiplicativeExpressions -> add_multiplicativeExpression .)
    OP_SHR          reduce using rule 475 (add_multiplicativeExpressions -> add_multiplicativeExpression .)
    OP_SHRR         reduce using rule 475 (add_multiplicativeExpressions -> add_multiplicativeExpression .)
    OP_SHL          reduce using rule 475 (add_multiplicativeExpressions -> add_multiplicativeExpression .)
    OP_LE           reduce using rule 475 (add_multiplicativeExpressions -> add_multiplicativeExpression .)
    OP_GE           reduce using rule 475 (add_multiplicativeExpressions -> add_multiplicativeExpression .)
    LESS            reduce using rule 475 (add_multiplicativeExpressions -> add_multiplicativeExpression .)
    MORE            reduce using rule 475 (add_multiplicativeExpressions -> add_multiplicativeExpression .)
    INSTANCEOF      reduce using rule 475 (add_multiplicativeExpressions -> add_multiplicativeExpression .)
    OP_EQ           reduce using rule 475 (add_multiplicativeExpressions -> add_multiplicativeExpression .)
    OP_NE           reduce using rule 475 (add_multiplicativeExpressions -> add_multiplicativeExpression .)
    AND             reduce using rule 475 (add_multiplicativeExpressions -> add_multiplicativeExpression .)
    CARET           reduce using rule 475 (add_multiplicativeExpressions -> add_multiplicativeExpression .)
    VERTICAL        reduce using rule 475 (add_multiplicativeExpressions -> add_multiplicativeExpression .)
    OP_LAND         reduce using rule 475 (add_multiplicativeExpressions -> add_multiplicativeExpression .)
    OP_LOR          reduce using rule 475 (add_multiplicativeExpressions -> add_multiplicativeExpression .)
    QUES            reduce using rule 475 (add_multiplicativeExpressions -> add_multiplicativeExpression .)
    RPAREN          reduce using rule 475 (add_multiplicativeExpressions -> add_multiplicativeExpression .)
    COMMA           reduce using rule 475 (add_multiplicativeExpressions -> add_multiplicativeExpression .)
    BRPAREN         reduce using rule 475 (add_multiplicativeExpressions -> add_multiplicativeExpression .)
    EQUALS          reduce using rule 475 (add_multiplicativeExpressions -> add_multiplicativeExpression .)
    ASS_ADD         reduce using rule 475 (add_multiplicativeExpressions -> add_multiplicativeExpression .)
    ASS_SUB         reduce using rule 475 (add_multiplicativeExpressions -> add_multiplicativeExpression .)
    ASS_MUL         reduce using rule 475 (add_multiplicativeExpressions -> add_multiplicativeExpression .)
    ASS_DIV         reduce using rule 475 (add_multiplicativeExpressions -> add_multiplicativeExpression .)
    ASS_AND         reduce using rule 475 (add_multiplicativeExpressions -> add_multiplicativeExpression .)
    ASS_OR          reduce using rule 475 (add_multiplicativeExpressions -> add_multiplicativeExpression .)
    ASS_XOR         reduce using rule 475 (add_multiplicativeExpressions -> add_multiplicativeExpression .)
    ASS_MOD         reduce using rule 475 (add_multiplicativeExpressions -> add_multiplicativeExpression .)
    ASS_SHL         reduce using rule 475 (add_multiplicativeExpressions -> add_multiplicativeExpression .)
    ASS_SHRR        reduce using rule 475 (add_multiplicativeExpressions -> add_multiplicativeExpression .)
    ASS_SHR         reduce using rule 475 (add_multiplicativeExpressions -> add_multiplicativeExpression .)
    FRPAREN         reduce using rule 475 (add_multiplicativeExpressions -> add_multiplicativeExpression .)
    COLON           reduce using rule 475 (add_multiplicativeExpressions -> add_multiplicativeExpression .)
    SEMI            reduce using rule 475 (add_multiplicativeExpressions -> add_multiplicativeExpression .)


state 250

    (477) additiveExpression -> multiplicativeExpression add_multiplicativeExpressions .
    (476) add_multiplicativeExpressions -> add_multiplicativeExpressions . add_multiplicativeExpression
    (473) add_multiplicativeExpression -> . PLUS multiplicativeExpression
    (474) add_multiplicativeExpression -> . DASH multiplicativeExpression

    OP_SHR          reduce using rule 477 (additiveExpression -> multiplicativeExpression add_multiplicativeExpressions .)
    OP_SHRR         reduce using rule 477 (additiveExpression -> multiplicativeExpression add_multiplicativeExpressions .)
    OP_SHL          reduce using rule 477 (additiveExpression -> multiplicativeExpression add_multiplicativeExpressions .)
    OP_LE           reduce using rule 477 (additiveExpression -> multiplicativeExpression add_multiplicativeExpressions .)
    OP_GE           reduce using rule 477 (additiveExpression -> multiplicativeExpression add_multiplicativeExpressions .)
    LESS            reduce using rule 477 (additiveExpression -> multiplicativeExpression add_multiplicativeExpressions .)
    MORE            reduce using rule 477 (additiveExpression -> multiplicativeExpression add_multiplicativeExpressions .)
    INSTANCEOF      reduce using rule 477 (additiveExpression -> multiplicativeExpression add_multiplicativeExpressions .)
    OP_EQ           reduce using rule 477 (additiveExpression -> multiplicativeExpression add_multiplicativeExpressions .)
    OP_NE           reduce using rule 477 (additiveExpression -> multiplicativeExpression add_multiplicativeExpressions .)
    AND             reduce using rule 477 (additiveExpression -> multiplicativeExpression add_multiplicativeExpressions .)
    CARET           reduce using rule 477 (additiveExpression -> multiplicativeExpression add_multiplicativeExpressions .)
    VERTICAL        reduce using rule 477 (additiveExpression -> multiplicativeExpression add_multiplicativeExpressions .)
    OP_LAND         reduce using rule 477 (additiveExpression -> multiplicativeExpression add_multiplicativeExpressions .)
    OP_LOR          reduce using rule 477 (additiveExpression -> multiplicativeExpression add_multiplicativeExpressions .)
    QUES            reduce using rule 477 (additiveExpression -> multiplicativeExpression add_multiplicativeExpressions .)
    EQUALS          reduce using rule 477 (additiveExpression -> multiplicativeExpression add_multiplicativeExpressions .)
    ASS_ADD         reduce using rule 477 (additiveExpression -> multiplicativeExpression add_multiplicativeExpressions .)
    ASS_SUB         reduce using rule 477 (additiveExpression -> multiplicativeExpression add_multiplicativeExpressions .)
    ASS_MUL         reduce using rule 477 (additiveExpression -> multiplicativeExpression add_multiplicativeExpressions .)
    ASS_DIV         reduce using rule 477 (additiveExpression -> multiplicativeExpression add_multiplicativeExpressions .)
    ASS_AND         reduce using rule 477 (additiveExpression -> multiplicativeExpression add_multiplicativeExpressions .)
    ASS_OR          reduce using rule 477 (additiveExpression -> multiplicativeExpression add_multiplicativeExpressions .)
    ASS_XOR         reduce using rule 477 (additiveExpression -> multiplicativeExpression add_multiplicativeExpressions .)
    ASS_MOD         reduce using rule 477 (additiveExpression -> multiplicativeExpression add_multiplicativeExpressions .)
    ASS_SHL         reduce using rule 477 (additiveExpression -> multiplicativeExpression add_multiplicativeExpressions .)
    ASS_SHRR        reduce using rule 477 (additiveExpression -> multiplicativeExpression add_multiplicativeExpressions .)
    ASS_SHR         reduce using rule 477 (additiveExpression -> multiplicativeExpression add_multiplicativeExpressions .)
    COLON           reduce using rule 477 (additiveExpression -> multiplicativeExpression add_multiplicativeExpressions .)
    RPAREN          reduce using rule 477 (additiveExpression -> multiplicativeExpression add_multiplicativeExpressions .)
    COMMA           reduce using rule 477 (additiveExpression -> multiplicativeExpression add_multiplicativeExpressions .)
    BRPAREN         reduce using rule 477 (additiveExpression -> multiplicativeExpression add_multiplicativeExpressions .)
    SEMI            reduce using rule 477 (additiveExpression -> multiplicativeExpression add_multiplicativeExpressions .)
    FRPAREN         reduce using rule 477 (additiveExpression -> multiplicativeExpression add_multiplicativeExpressions .)
    PLUS            shift and go to state 251
    DASH            shift and go to state 252

    add_multiplicativeExpression   shift and go to state 403

state 251

    (473) add_multiplicativeExpression -> PLUS . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    unaryExpression                shift and go to state 131
    castExpression                 shift and go to state 137
    multiplicativeExpression       shift and go to state 404
    unaryExpressionNotPlusMinus    shift and go to state 105
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    primitiveType                  shift and go to state 122
    literal                        shift and go to state 116
    FloatingPointLiteral           shift and go to state 119
    booleanLiteral                 shift and go to state 92
    integerLiteral                 shift and go to state 98

state 252

    (474) add_multiplicativeExpression -> DASH . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    unaryExpression                shift and go to state 131
    castExpression                 shift and go to state 137
    multiplicativeExpression       shift and go to state 405
    unaryExpressionNotPlusMinus    shift and go to state 105
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    primitiveType                  shift and go to state 122
    literal                        shift and go to state 116
    FloatingPointLiteral           shift and go to state 119
    booleanLiteral                 shift and go to state 92
    integerLiteral                 shift and go to state 98

state 253

    (463) relationalOp -> LESS .

    PLUS            reduce using rule 463 (relationalOp -> LESS .)
    DASH            reduce using rule 463 (relationalOp -> LESS .)
    OP_INC          reduce using rule 463 (relationalOp -> LESS .)
    OP_DEC          reduce using rule 463 (relationalOp -> LESS .)
    TILDE           reduce using rule 463 (relationalOp -> LESS .)
    EXCLAMATION     reduce using rule 463 (relationalOp -> LESS .)
    LPAREN          reduce using rule 463 (relationalOp -> LESS .)
    THIS            reduce using rule 463 (relationalOp -> LESS .)
    SUPER           reduce using rule 463 (relationalOp -> LESS .)
    NEW             reduce using rule 463 (relationalOp -> LESS .)
    Identifier      reduce using rule 463 (relationalOp -> LESS .)
    VOID            reduce using rule 463 (relationalOp -> LESS .)
    CharacterLiteral reduce using rule 463 (relationalOp -> LESS .)
    StringLiteral   reduce using rule 463 (relationalOp -> LESS .)
    NULL            reduce using rule 463 (relationalOp -> LESS .)
    BOOLEAN         reduce using rule 463 (relationalOp -> LESS .)
    CHAR            reduce using rule 463 (relationalOp -> LESS .)
    BYTE            reduce using rule 463 (relationalOp -> LESS .)
    SHORT           reduce using rule 463 (relationalOp -> LESS .)
    INT             reduce using rule 463 (relationalOp -> LESS .)
    LONG            reduce using rule 463 (relationalOp -> LESS .)
    FLOAT           reduce using rule 463 (relationalOp -> LESS .)
    DOUBLE          reduce using rule 463 (relationalOp -> LESS .)
    LONG_NUMBER     reduce using rule 463 (relationalOp -> LESS .)
    LONG_HEX_NUMBER reduce using rule 463 (relationalOp -> LESS .)
    NON_INTEGER_1   reduce using rule 463 (relationalOp -> LESS .)
    NON_INTEGER_2   reduce using rule 463 (relationalOp -> LESS .)
    NON_INTEGER_3   reduce using rule 463 (relationalOp -> LESS .)
    NON_INTEGER_4   reduce using rule 463 (relationalOp -> LESS .)
    TRUE            reduce using rule 463 (relationalOp -> LESS .)
    FALSE           reduce using rule 463 (relationalOp -> LESS .)


state 254

    (462) relationalOp -> OP_GE .

    PLUS            reduce using rule 462 (relationalOp -> OP_GE .)
    DASH            reduce using rule 462 (relationalOp -> OP_GE .)
    OP_INC          reduce using rule 462 (relationalOp -> OP_GE .)
    OP_DEC          reduce using rule 462 (relationalOp -> OP_GE .)
    TILDE           reduce using rule 462 (relationalOp -> OP_GE .)
    EXCLAMATION     reduce using rule 462 (relationalOp -> OP_GE .)
    LPAREN          reduce using rule 462 (relationalOp -> OP_GE .)
    THIS            reduce using rule 462 (relationalOp -> OP_GE .)
    SUPER           reduce using rule 462 (relationalOp -> OP_GE .)
    NEW             reduce using rule 462 (relationalOp -> OP_GE .)
    Identifier      reduce using rule 462 (relationalOp -> OP_GE .)
    VOID            reduce using rule 462 (relationalOp -> OP_GE .)
    CharacterLiteral reduce using rule 462 (relationalOp -> OP_GE .)
    StringLiteral   reduce using rule 462 (relationalOp -> OP_GE .)
    NULL            reduce using rule 462 (relationalOp -> OP_GE .)
    BOOLEAN         reduce using rule 462 (relationalOp -> OP_GE .)
    CHAR            reduce using rule 462 (relationalOp -> OP_GE .)
    BYTE            reduce using rule 462 (relationalOp -> OP_GE .)
    SHORT           reduce using rule 462 (relationalOp -> OP_GE .)
    INT             reduce using rule 462 (relationalOp -> OP_GE .)
    LONG            reduce using rule 462 (relationalOp -> OP_GE .)
    FLOAT           reduce using rule 462 (relationalOp -> OP_GE .)
    DOUBLE          reduce using rule 462 (relationalOp -> OP_GE .)
    LONG_NUMBER     reduce using rule 462 (relationalOp -> OP_GE .)
    LONG_HEX_NUMBER reduce using rule 462 (relationalOp -> OP_GE .)
    NON_INTEGER_1   reduce using rule 462 (relationalOp -> OP_GE .)
    NON_INTEGER_2   reduce using rule 462 (relationalOp -> OP_GE .)
    NON_INTEGER_3   reduce using rule 462 (relationalOp -> OP_GE .)
    NON_INTEGER_4   reduce using rule 462 (relationalOp -> OP_GE .)
    TRUE            reduce using rule 462 (relationalOp -> OP_GE .)
    FALSE           reduce using rule 462 (relationalOp -> OP_GE .)


state 255

    (459) relationalExpression -> shiftExpression re_shiftExpressions .
    (458) re_shiftExpressions -> re_shiftExpressions . re_shiftExpression
    (456) re_shiftExpression -> . relationalOp shiftExpression
    (461) relationalOp -> . OP_LE
    (462) relationalOp -> . OP_GE
    (463) relationalOp -> . LESS
    (464) relationalOp -> . MORE

    INSTANCEOF      reduce using rule 459 (relationalExpression -> shiftExpression re_shiftExpressions .)
    OP_EQ           reduce using rule 459 (relationalExpression -> shiftExpression re_shiftExpressions .)
    OP_NE           reduce using rule 459 (relationalExpression -> shiftExpression re_shiftExpressions .)
    AND             reduce using rule 459 (relationalExpression -> shiftExpression re_shiftExpressions .)
    CARET           reduce using rule 459 (relationalExpression -> shiftExpression re_shiftExpressions .)
    VERTICAL        reduce using rule 459 (relationalExpression -> shiftExpression re_shiftExpressions .)
    OP_LAND         reduce using rule 459 (relationalExpression -> shiftExpression re_shiftExpressions .)
    OP_LOR          reduce using rule 459 (relationalExpression -> shiftExpression re_shiftExpressions .)
    QUES            reduce using rule 459 (relationalExpression -> shiftExpression re_shiftExpressions .)
    COMMA           reduce using rule 459 (relationalExpression -> shiftExpression re_shiftExpressions .)
    RPAREN          reduce using rule 459 (relationalExpression -> shiftExpression re_shiftExpressions .)
    EQUALS          reduce using rule 459 (relationalExpression -> shiftExpression re_shiftExpressions .)
    ASS_ADD         reduce using rule 459 (relationalExpression -> shiftExpression re_shiftExpressions .)
    ASS_SUB         reduce using rule 459 (relationalExpression -> shiftExpression re_shiftExpressions .)
    ASS_MUL         reduce using rule 459 (relationalExpression -> shiftExpression re_shiftExpressions .)
    ASS_DIV         reduce using rule 459 (relationalExpression -> shiftExpression re_shiftExpressions .)
    ASS_AND         reduce using rule 459 (relationalExpression -> shiftExpression re_shiftExpressions .)
    ASS_OR          reduce using rule 459 (relationalExpression -> shiftExpression re_shiftExpressions .)
    ASS_XOR         reduce using rule 459 (relationalExpression -> shiftExpression re_shiftExpressions .)
    ASS_MOD         reduce using rule 459 (relationalExpression -> shiftExpression re_shiftExpressions .)
    ASS_SHL         reduce using rule 459 (relationalExpression -> shiftExpression re_shiftExpressions .)
    ASS_SHRR        reduce using rule 459 (relationalExpression -> shiftExpression re_shiftExpressions .)
    ASS_SHR         reduce using rule 459 (relationalExpression -> shiftExpression re_shiftExpressions .)
    SEMI            reduce using rule 459 (relationalExpression -> shiftExpression re_shiftExpressions .)
    BRPAREN         reduce using rule 459 (relationalExpression -> shiftExpression re_shiftExpressions .)
    FRPAREN         reduce using rule 459 (relationalExpression -> shiftExpression re_shiftExpressions .)
    COLON           reduce using rule 459 (relationalExpression -> shiftExpression re_shiftExpressions .)
    OP_LE           shift and go to state 257
    OP_GE           shift and go to state 254
    LESS            shift and go to state 253
    MORE            shift and go to state 259

    re_shiftExpression             shift and go to state 406
    relationalOp                   shift and go to state 258

state 256

    (457) re_shiftExpressions -> re_shiftExpression .

    OP_LE           reduce using rule 457 (re_shiftExpressions -> re_shiftExpression .)
    OP_GE           reduce using rule 457 (re_shiftExpressions -> re_shiftExpression .)
    LESS            reduce using rule 457 (re_shiftExpressions -> re_shiftExpression .)
    MORE            reduce using rule 457 (re_shiftExpressions -> re_shiftExpression .)
    INSTANCEOF      reduce using rule 457 (re_shiftExpressions -> re_shiftExpression .)
    OP_EQ           reduce using rule 457 (re_shiftExpressions -> re_shiftExpression .)
    OP_NE           reduce using rule 457 (re_shiftExpressions -> re_shiftExpression .)
    AND             reduce using rule 457 (re_shiftExpressions -> re_shiftExpression .)
    CARET           reduce using rule 457 (re_shiftExpressions -> re_shiftExpression .)
    VERTICAL        reduce using rule 457 (re_shiftExpressions -> re_shiftExpression .)
    OP_LAND         reduce using rule 457 (re_shiftExpressions -> re_shiftExpression .)
    OP_LOR          reduce using rule 457 (re_shiftExpressions -> re_shiftExpression .)
    QUES            reduce using rule 457 (re_shiftExpressions -> re_shiftExpression .)
    RPAREN          reduce using rule 457 (re_shiftExpressions -> re_shiftExpression .)
    COMMA           reduce using rule 457 (re_shiftExpressions -> re_shiftExpression .)
    BRPAREN         reduce using rule 457 (re_shiftExpressions -> re_shiftExpression .)
    EQUALS          reduce using rule 457 (re_shiftExpressions -> re_shiftExpression .)
    ASS_ADD         reduce using rule 457 (re_shiftExpressions -> re_shiftExpression .)
    ASS_SUB         reduce using rule 457 (re_shiftExpressions -> re_shiftExpression .)
    ASS_MUL         reduce using rule 457 (re_shiftExpressions -> re_shiftExpression .)
    ASS_DIV         reduce using rule 457 (re_shiftExpressions -> re_shiftExpression .)
    ASS_AND         reduce using rule 457 (re_shiftExpressions -> re_shiftExpression .)
    ASS_OR          reduce using rule 457 (re_shiftExpressions -> re_shiftExpression .)
    ASS_XOR         reduce using rule 457 (re_shiftExpressions -> re_shiftExpression .)
    ASS_MOD         reduce using rule 457 (re_shiftExpressions -> re_shiftExpression .)
    ASS_SHL         reduce using rule 457 (re_shiftExpressions -> re_shiftExpression .)
    ASS_SHRR        reduce using rule 457 (re_shiftExpressions -> re_shiftExpression .)
    ASS_SHR         reduce using rule 457 (re_shiftExpressions -> re_shiftExpression .)
    FRPAREN         reduce using rule 457 (re_shiftExpressions -> re_shiftExpression .)
    COLON           reduce using rule 457 (re_shiftExpressions -> re_shiftExpression .)
    SEMI            reduce using rule 457 (re_shiftExpressions -> re_shiftExpression .)


state 257

    (461) relationalOp -> OP_LE .

    PLUS            reduce using rule 461 (relationalOp -> OP_LE .)
    DASH            reduce using rule 461 (relationalOp -> OP_LE .)
    OP_INC          reduce using rule 461 (relationalOp -> OP_LE .)
    OP_DEC          reduce using rule 461 (relationalOp -> OP_LE .)
    TILDE           reduce using rule 461 (relationalOp -> OP_LE .)
    EXCLAMATION     reduce using rule 461 (relationalOp -> OP_LE .)
    LPAREN          reduce using rule 461 (relationalOp -> OP_LE .)
    THIS            reduce using rule 461 (relationalOp -> OP_LE .)
    SUPER           reduce using rule 461 (relationalOp -> OP_LE .)
    NEW             reduce using rule 461 (relationalOp -> OP_LE .)
    Identifier      reduce using rule 461 (relationalOp -> OP_LE .)
    VOID            reduce using rule 461 (relationalOp -> OP_LE .)
    CharacterLiteral reduce using rule 461 (relationalOp -> OP_LE .)
    StringLiteral   reduce using rule 461 (relationalOp -> OP_LE .)
    NULL            reduce using rule 461 (relationalOp -> OP_LE .)
    BOOLEAN         reduce using rule 461 (relationalOp -> OP_LE .)
    CHAR            reduce using rule 461 (relationalOp -> OP_LE .)
    BYTE            reduce using rule 461 (relationalOp -> OP_LE .)
    SHORT           reduce using rule 461 (relationalOp -> OP_LE .)
    INT             reduce using rule 461 (relationalOp -> OP_LE .)
    LONG            reduce using rule 461 (relationalOp -> OP_LE .)
    FLOAT           reduce using rule 461 (relationalOp -> OP_LE .)
    DOUBLE          reduce using rule 461 (relationalOp -> OP_LE .)
    LONG_NUMBER     reduce using rule 461 (relationalOp -> OP_LE .)
    LONG_HEX_NUMBER reduce using rule 461 (relationalOp -> OP_LE .)
    NON_INTEGER_1   reduce using rule 461 (relationalOp -> OP_LE .)
    NON_INTEGER_2   reduce using rule 461 (relationalOp -> OP_LE .)
    NON_INTEGER_3   reduce using rule 461 (relationalOp -> OP_LE .)
    NON_INTEGER_4   reduce using rule 461 (relationalOp -> OP_LE .)
    TRUE            reduce using rule 461 (relationalOp -> OP_LE .)
    FALSE           reduce using rule 461 (relationalOp -> OP_LE .)


state 258

    (456) re_shiftExpression -> relationalOp . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    multiplicativeExpression       shift and go to state 128
    primary                        shift and go to state 111
    shiftExpression                shift and go to state 407
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    integerLiteral                 shift and go to state 98
    additiveExpression             shift and go to state 102
    unaryExpression                shift and go to state 131
    FloatingPointLiteral           shift and go to state 119
    parExpression                  shift and go to state 132
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    primitiveType                  shift and go to state 122

state 259

    (464) relationalOp -> MORE .

    PLUS            reduce using rule 464 (relationalOp -> MORE .)
    DASH            reduce using rule 464 (relationalOp -> MORE .)
    OP_INC          reduce using rule 464 (relationalOp -> MORE .)
    OP_DEC          reduce using rule 464 (relationalOp -> MORE .)
    TILDE           reduce using rule 464 (relationalOp -> MORE .)
    EXCLAMATION     reduce using rule 464 (relationalOp -> MORE .)
    LPAREN          reduce using rule 464 (relationalOp -> MORE .)
    THIS            reduce using rule 464 (relationalOp -> MORE .)
    SUPER           reduce using rule 464 (relationalOp -> MORE .)
    NEW             reduce using rule 464 (relationalOp -> MORE .)
    Identifier      reduce using rule 464 (relationalOp -> MORE .)
    VOID            reduce using rule 464 (relationalOp -> MORE .)
    CharacterLiteral reduce using rule 464 (relationalOp -> MORE .)
    StringLiteral   reduce using rule 464 (relationalOp -> MORE .)
    NULL            reduce using rule 464 (relationalOp -> MORE .)
    BOOLEAN         reduce using rule 464 (relationalOp -> MORE .)
    CHAR            reduce using rule 464 (relationalOp -> MORE .)
    BYTE            reduce using rule 464 (relationalOp -> MORE .)
    SHORT           reduce using rule 464 (relationalOp -> MORE .)
    INT             reduce using rule 464 (relationalOp -> MORE .)
    LONG            reduce using rule 464 (relationalOp -> MORE .)
    FLOAT           reduce using rule 464 (relationalOp -> MORE .)
    DOUBLE          reduce using rule 464 (relationalOp -> MORE .)
    LONG_NUMBER     reduce using rule 464 (relationalOp -> MORE .)
    LONG_HEX_NUMBER reduce using rule 464 (relationalOp -> MORE .)
    NON_INTEGER_1   reduce using rule 464 (relationalOp -> MORE .)
    NON_INTEGER_2   reduce using rule 464 (relationalOp -> MORE .)
    NON_INTEGER_3   reduce using rule 464 (relationalOp -> MORE .)
    NON_INTEGER_4   reduce using rule 464 (relationalOp -> MORE .)
    TRUE            reduce using rule 464 (relationalOp -> MORE .)
    FALSE           reduce using rule 464 (relationalOp -> MORE .)


state 260

    (484) multiplicativeExpression -> unaryExpression mu_unaryExpressions .
    (483) mu_unaryExpressions -> mu_unaryExpressions . mu_unaryExpression
    (479) mu_unaryExpression -> . MULT unaryExpression
    (480) mu_unaryExpression -> . SLASH unaryExpression
    (481) mu_unaryExpression -> . PERCENT unaryExpression

    PLUS            reduce using rule 484 (multiplicativeExpression -> unaryExpression mu_unaryExpressions .)
    DASH            reduce using rule 484 (multiplicativeExpression -> unaryExpression mu_unaryExpressions .)
    OP_SHR          reduce using rule 484 (multiplicativeExpression -> unaryExpression mu_unaryExpressions .)
    OP_SHRR         reduce using rule 484 (multiplicativeExpression -> unaryExpression mu_unaryExpressions .)
    OP_SHL          reduce using rule 484 (multiplicativeExpression -> unaryExpression mu_unaryExpressions .)
    OP_LE           reduce using rule 484 (multiplicativeExpression -> unaryExpression mu_unaryExpressions .)
    OP_GE           reduce using rule 484 (multiplicativeExpression -> unaryExpression mu_unaryExpressions .)
    LESS            reduce using rule 484 (multiplicativeExpression -> unaryExpression mu_unaryExpressions .)
    MORE            reduce using rule 484 (multiplicativeExpression -> unaryExpression mu_unaryExpressions .)
    INSTANCEOF      reduce using rule 484 (multiplicativeExpression -> unaryExpression mu_unaryExpressions .)
    OP_EQ           reduce using rule 484 (multiplicativeExpression -> unaryExpression mu_unaryExpressions .)
    OP_NE           reduce using rule 484 (multiplicativeExpression -> unaryExpression mu_unaryExpressions .)
    AND             reduce using rule 484 (multiplicativeExpression -> unaryExpression mu_unaryExpressions .)
    CARET           reduce using rule 484 (multiplicativeExpression -> unaryExpression mu_unaryExpressions .)
    VERTICAL        reduce using rule 484 (multiplicativeExpression -> unaryExpression mu_unaryExpressions .)
    OP_LAND         reduce using rule 484 (multiplicativeExpression -> unaryExpression mu_unaryExpressions .)
    OP_LOR          reduce using rule 484 (multiplicativeExpression -> unaryExpression mu_unaryExpressions .)
    QUES            reduce using rule 484 (multiplicativeExpression -> unaryExpression mu_unaryExpressions .)
    EQUALS          reduce using rule 484 (multiplicativeExpression -> unaryExpression mu_unaryExpressions .)
    ASS_ADD         reduce using rule 484 (multiplicativeExpression -> unaryExpression mu_unaryExpressions .)
    ASS_SUB         reduce using rule 484 (multiplicativeExpression -> unaryExpression mu_unaryExpressions .)
    ASS_MUL         reduce using rule 484 (multiplicativeExpression -> unaryExpression mu_unaryExpressions .)
    ASS_DIV         reduce using rule 484 (multiplicativeExpression -> unaryExpression mu_unaryExpressions .)
    ASS_AND         reduce using rule 484 (multiplicativeExpression -> unaryExpression mu_unaryExpressions .)
    ASS_OR          reduce using rule 484 (multiplicativeExpression -> unaryExpression mu_unaryExpressions .)
    ASS_XOR         reduce using rule 484 (multiplicativeExpression -> unaryExpression mu_unaryExpressions .)
    ASS_MOD         reduce using rule 484 (multiplicativeExpression -> unaryExpression mu_unaryExpressions .)
    ASS_SHL         reduce using rule 484 (multiplicativeExpression -> unaryExpression mu_unaryExpressions .)
    ASS_SHRR        reduce using rule 484 (multiplicativeExpression -> unaryExpression mu_unaryExpressions .)
    ASS_SHR         reduce using rule 484 (multiplicativeExpression -> unaryExpression mu_unaryExpressions .)
    SEMI            reduce using rule 484 (multiplicativeExpression -> unaryExpression mu_unaryExpressions .)
    COLON           reduce using rule 484 (multiplicativeExpression -> unaryExpression mu_unaryExpressions .)
    COMMA           reduce using rule 484 (multiplicativeExpression -> unaryExpression mu_unaryExpressions .)
    BRPAREN         reduce using rule 484 (multiplicativeExpression -> unaryExpression mu_unaryExpressions .)
    RPAREN          reduce using rule 484 (multiplicativeExpression -> unaryExpression mu_unaryExpressions .)
    FRPAREN         reduce using rule 484 (multiplicativeExpression -> unaryExpression mu_unaryExpressions .)
    MULT            shift and go to state 264
    SLASH           shift and go to state 263
    PERCENT         shift and go to state 261

    mu_unaryExpression             shift and go to state 408

state 261

    (481) mu_unaryExpression -> PERCENT . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    unaryExpression                shift and go to state 409
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    primitiveType                  shift and go to state 122
    literal                        shift and go to state 116
    FloatingPointLiteral           shift and go to state 119
    booleanLiteral                 shift and go to state 92
    integerLiteral                 shift and go to state 98

state 262

    (482) mu_unaryExpressions -> mu_unaryExpression .

    MULT            reduce using rule 482 (mu_unaryExpressions -> mu_unaryExpression .)
    SLASH           reduce using rule 482 (mu_unaryExpressions -> mu_unaryExpression .)
    PERCENT         reduce using rule 482 (mu_unaryExpressions -> mu_unaryExpression .)
    PLUS            reduce using rule 482 (mu_unaryExpressions -> mu_unaryExpression .)
    DASH            reduce using rule 482 (mu_unaryExpressions -> mu_unaryExpression .)
    OP_SHR          reduce using rule 482 (mu_unaryExpressions -> mu_unaryExpression .)
    OP_SHRR         reduce using rule 482 (mu_unaryExpressions -> mu_unaryExpression .)
    OP_SHL          reduce using rule 482 (mu_unaryExpressions -> mu_unaryExpression .)
    OP_LE           reduce using rule 482 (mu_unaryExpressions -> mu_unaryExpression .)
    OP_GE           reduce using rule 482 (mu_unaryExpressions -> mu_unaryExpression .)
    LESS            reduce using rule 482 (mu_unaryExpressions -> mu_unaryExpression .)
    MORE            reduce using rule 482 (mu_unaryExpressions -> mu_unaryExpression .)
    INSTANCEOF      reduce using rule 482 (mu_unaryExpressions -> mu_unaryExpression .)
    OP_EQ           reduce using rule 482 (mu_unaryExpressions -> mu_unaryExpression .)
    OP_NE           reduce using rule 482 (mu_unaryExpressions -> mu_unaryExpression .)
    AND             reduce using rule 482 (mu_unaryExpressions -> mu_unaryExpression .)
    CARET           reduce using rule 482 (mu_unaryExpressions -> mu_unaryExpression .)
    VERTICAL        reduce using rule 482 (mu_unaryExpressions -> mu_unaryExpression .)
    OP_LAND         reduce using rule 482 (mu_unaryExpressions -> mu_unaryExpression .)
    OP_LOR          reduce using rule 482 (mu_unaryExpressions -> mu_unaryExpression .)
    QUES            reduce using rule 482 (mu_unaryExpressions -> mu_unaryExpression .)
    RPAREN          reduce using rule 482 (mu_unaryExpressions -> mu_unaryExpression .)
    COMMA           reduce using rule 482 (mu_unaryExpressions -> mu_unaryExpression .)
    BRPAREN         reduce using rule 482 (mu_unaryExpressions -> mu_unaryExpression .)
    EQUALS          reduce using rule 482 (mu_unaryExpressions -> mu_unaryExpression .)
    ASS_ADD         reduce using rule 482 (mu_unaryExpressions -> mu_unaryExpression .)
    ASS_SUB         reduce using rule 482 (mu_unaryExpressions -> mu_unaryExpression .)
    ASS_MUL         reduce using rule 482 (mu_unaryExpressions -> mu_unaryExpression .)
    ASS_DIV         reduce using rule 482 (mu_unaryExpressions -> mu_unaryExpression .)
    ASS_AND         reduce using rule 482 (mu_unaryExpressions -> mu_unaryExpression .)
    ASS_OR          reduce using rule 482 (mu_unaryExpressions -> mu_unaryExpression .)
    ASS_XOR         reduce using rule 482 (mu_unaryExpressions -> mu_unaryExpression .)
    ASS_MOD         reduce using rule 482 (mu_unaryExpressions -> mu_unaryExpression .)
    ASS_SHL         reduce using rule 482 (mu_unaryExpressions -> mu_unaryExpression .)
    ASS_SHRR        reduce using rule 482 (mu_unaryExpressions -> mu_unaryExpression .)
    ASS_SHR         reduce using rule 482 (mu_unaryExpressions -> mu_unaryExpression .)
    FRPAREN         reduce using rule 482 (mu_unaryExpressions -> mu_unaryExpression .)
    COLON           reduce using rule 482 (mu_unaryExpressions -> mu_unaryExpression .)
    SEMI            reduce using rule 482 (mu_unaryExpressions -> mu_unaryExpression .)


state 263

    (480) mu_unaryExpression -> SLASH . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    unaryExpression                shift and go to state 410
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    primitiveType                  shift and go to state 122
    literal                        shift and go to state 116
    FloatingPointLiteral           shift and go to state 119
    booleanLiteral                 shift and go to state 92
    integerLiteral                 shift and go to state 98

state 264

    (479) mu_unaryExpression -> MULT . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    unaryExpression                shift and go to state 411
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    primitiveType                  shift and go to state 122
    literal                        shift and go to state 116
    FloatingPointLiteral           shift and go to state 119
    booleanLiteral                 shift and go to state 92
    integerLiteral                 shift and go to state 98

state 265

    (502) castExpression -> LPAREN type . RPAREN unaryExpressionNotPlusMinus

    RPAREN          shift and go to state 412


state 266

    (404) expression -> conditionalExpression . assignmentOperator_expression_empty
    (402) assignmentOperator_expression_empty -> . assignmentOperator expression
    (403) assignmentOperator_expression_empty -> .
    (405) assignmentOperator -> . EQUALS
    (406) assignmentOperator -> . ASS_ADD
    (407) assignmentOperator -> . ASS_SUB
    (408) assignmentOperator -> . ASS_MUL
    (409) assignmentOperator -> . ASS_DIV
    (410) assignmentOperator -> . ASS_AND
    (411) assignmentOperator -> . ASS_OR
    (412) assignmentOperator -> . ASS_XOR
    (413) assignmentOperator -> . ASS_MOD
    (414) assignmentOperator -> . ASS_SHL
    (415) assignmentOperator -> . ASS_SHRR
    (416) assignmentOperator -> . ASS_SHR

  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for ASS_ADD resolved as shift
  ! shift/reduce conflict for ASS_SUB resolved as shift
  ! shift/reduce conflict for ASS_MUL resolved as shift
  ! shift/reduce conflict for ASS_DIV resolved as shift
  ! shift/reduce conflict for ASS_AND resolved as shift
  ! shift/reduce conflict for ASS_OR resolved as shift
  ! shift/reduce conflict for ASS_XOR resolved as shift
  ! shift/reduce conflict for ASS_MOD resolved as shift
  ! shift/reduce conflict for ASS_SHL resolved as shift
  ! shift/reduce conflict for ASS_SHRR resolved as shift
  ! shift/reduce conflict for ASS_SHR resolved as shift
    RPAREN          reduce using rule 403 (assignmentOperator_expression_empty -> .)
    FRPAREN         reduce using rule 403 (assignmentOperator_expression_empty -> .)
    COMMA           reduce using rule 403 (assignmentOperator_expression_empty -> .)
    COLON           reduce using rule 403 (assignmentOperator_expression_empty -> .)
    SEMI            reduce using rule 403 (assignmentOperator_expression_empty -> .)
    QUES            reduce using rule 403 (assignmentOperator_expression_empty -> .)
    BRPAREN         reduce using rule 403 (assignmentOperator_expression_empty -> .)
    EQUALS          shift and go to state 419
    ASS_ADD         shift and go to state 414
    ASS_SUB         shift and go to state 422
    ASS_MUL         shift and go to state 420
    ASS_DIV         shift and go to state 413
    ASS_AND         shift and go to state 421
    ASS_OR          shift and go to state 417
    ASS_XOR         shift and go to state 415
    ASS_MOD         shift and go to state 426
    ASS_SHL         shift and go to state 425
    ASS_SHRR        shift and go to state 416
    ASS_SHR         shift and go to state 423

  ! EQUALS          [ reduce using rule 403 (assignmentOperator_expression_empty -> .) ]
  ! ASS_ADD         [ reduce using rule 403 (assignmentOperator_expression_empty -> .) ]
  ! ASS_SUB         [ reduce using rule 403 (assignmentOperator_expression_empty -> .) ]
  ! ASS_MUL         [ reduce using rule 403 (assignmentOperator_expression_empty -> .) ]
  ! ASS_DIV         [ reduce using rule 403 (assignmentOperator_expression_empty -> .) ]
  ! ASS_AND         [ reduce using rule 403 (assignmentOperator_expression_empty -> .) ]
  ! ASS_OR          [ reduce using rule 403 (assignmentOperator_expression_empty -> .) ]
  ! ASS_XOR         [ reduce using rule 403 (assignmentOperator_expression_empty -> .) ]
  ! ASS_MOD         [ reduce using rule 403 (assignmentOperator_expression_empty -> .) ]
  ! ASS_SHL         [ reduce using rule 403 (assignmentOperator_expression_empty -> .) ]
  ! ASS_SHRR        [ reduce using rule 403 (assignmentOperator_expression_empty -> .) ]
  ! ASS_SHR         [ reduce using rule 403 (assignmentOperator_expression_empty -> .) ]

    assignmentOperator_expression_empty shift and go to state 424
    assignmentOperator             shift and go to state 418

state 267

    (208) type_body -> Identifier . classOrInterfaceTypeBody arrays
    (209) type_body -> Identifier . classOrInterfaceTypeBody
    (210) type_body -> Identifier . arrays
    (211) type_body -> Identifier .
    (512) primary -> Identifier . DOT_Identifiers identifierSuffix_empty
    (513) primary -> Identifier . identifierSuffix_empty
    (212) classOrInterfaceTypeBody -> . typeArguments classOrInterfaceTypeStatements
    (213) classOrInterfaceTypeBody -> . typeArguments
    (214) classOrInterfaceTypeBody -> . classOrInterfaceTypeStatements
    (138) arrays -> . arrays array
    (139) arrays -> . array
    (269) DOT_Identifiers -> . DOT_Identifier
    (270) DOT_Identifiers -> . DOT_Identifiers DOT_Identifier
    (504) identifierSuffix_empty -> . identifierSuffix
    (505) identifierSuffix_empty -> .
    (234) typeArguments -> . LESS typeArgument COMMA_typeArguments MORE
    (235) typeArguments -> . LESS typeArgument MORE
    (217) classOrInterfaceTypeStatements -> . classOrInterfaceTypeStatement
    (218) classOrInterfaceTypeStatements -> . classOrInterfaceTypeStatements classOrInterfaceTypeStatement
    (137) array -> . FLPAREN FRPAREN
    (267) DOT_Identifier -> . DOT Identifier
    (268) DOT_Identifier -> . DOT MULT
    (520) identifierSuffix -> . arrays DOT CLASS
    (521) identifierSuffix -> . FL_expression_FRs
    (522) identifierSuffix -> . arguments
    (523) identifierSuffix -> . DOT CLASS
    (524) identifierSuffix -> . DOT explicitGenericInvocation
    (525) identifierSuffix -> . DOT THIS
    (526) identifierSuffix -> . DOT SUPER arguments
    (527) identifierSuffix -> . DOT NEW innerCreator
    (215) classOrInterfaceTypeStatement -> . DOT Identifier typeArguments
    (216) classOrInterfaceTypeStatement -> . DOT Identifier
    (518) FL_expression_FRs -> . FL_expression_FR
    (519) FL_expression_FRs -> . FL_expression_FRs FL_expression_FR
    (555) arguments -> . LPAREN expressionList_once RPAREN
    (517) FL_expression_FR -> . FLPAREN expression FRPAREN

  ! reduce/reduce conflict for RPAREN resolved using rule 211 (type_body -> Identifier .)
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for FLPAREN resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
    RPAREN          reduce using rule 211 (type_body -> Identifier .)
    Identifier      reduce using rule 211 (type_body -> Identifier .)
    OP_INC          reduce using rule 505 (identifierSuffix_empty -> .)
    OP_DEC          reduce using rule 505 (identifierSuffix_empty -> .)
    MULT            reduce using rule 505 (identifierSuffix_empty -> .)
    SLASH           reduce using rule 505 (identifierSuffix_empty -> .)
    PERCENT         reduce using rule 505 (identifierSuffix_empty -> .)
    PLUS            reduce using rule 505 (identifierSuffix_empty -> .)
    DASH            reduce using rule 505 (identifierSuffix_empty -> .)
    OP_SHR          reduce using rule 505 (identifierSuffix_empty -> .)
    OP_SHRR         reduce using rule 505 (identifierSuffix_empty -> .)
    OP_SHL          reduce using rule 505 (identifierSuffix_empty -> .)
    OP_LE           reduce using rule 505 (identifierSuffix_empty -> .)
    OP_GE           reduce using rule 505 (identifierSuffix_empty -> .)
    MORE            reduce using rule 505 (identifierSuffix_empty -> .)
    INSTANCEOF      reduce using rule 505 (identifierSuffix_empty -> .)
    OP_EQ           reduce using rule 505 (identifierSuffix_empty -> .)
    OP_NE           reduce using rule 505 (identifierSuffix_empty -> .)
    AND             reduce using rule 505 (identifierSuffix_empty -> .)
    CARET           reduce using rule 505 (identifierSuffix_empty -> .)
    VERTICAL        reduce using rule 505 (identifierSuffix_empty -> .)
    OP_LAND         reduce using rule 505 (identifierSuffix_empty -> .)
    OP_LOR          reduce using rule 505 (identifierSuffix_empty -> .)
    QUES            reduce using rule 505 (identifierSuffix_empty -> .)
    EQUALS          reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_ADD         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_SUB         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_MUL         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_DIV         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_AND         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_OR          reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_XOR         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_MOD         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_SHL         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_SHRR        reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_SHR         reduce using rule 505 (identifierSuffix_empty -> .)
    COMMA           reduce using rule 505 (identifierSuffix_empty -> .)
    SEMI            reduce using rule 505 (identifierSuffix_empty -> .)
    LESS            shift and go to state 156
    FLPAREN         shift and go to state 193
    DOT             shift and go to state 427
    LPAREN          shift and go to state 199

  ! DOT             [ reduce using rule 505 (identifierSuffix_empty -> .) ]
  ! FLPAREN         [ reduce using rule 505 (identifierSuffix_empty -> .) ]
  ! LESS            [ reduce using rule 505 (identifierSuffix_empty -> .) ]
  ! RPAREN          [ reduce using rule 505 (identifierSuffix_empty -> .) ]

    FL_expression_FRs              shift and go to state 196
    identifierSuffix               shift and go to state 197
    classOrInterfaceTypeBody       shift and go to state 155
    FL_expression_FR               shift and go to state 192
    arrays                         shift and go to state 428
    typeArguments                  shift and go to state 158
    DOT_Identifier                 shift and go to state 48
    identifierSuffix_empty         shift and go to state 215
    arguments                      shift and go to state 195
    DOT_Identifiers                shift and go to state 213
    classOrInterfaceTypeStatements shift and go to state 159
    array                          shift and go to state 154
    classOrInterfaceTypeStatement  shift and go to state 160

state 268

    (501) castExpression -> LPAREN primitiveType . RPAREN unaryExpression
    (206) type -> primitiveType . arrays
    (207) type -> primitiveType .
    (514) primary -> primitiveType . arrays DOT CLASS
    (515) primary -> primitiveType . DOT CLASS
    (138) arrays -> . arrays array
    (139) arrays -> . array
    (137) array -> . FLPAREN FRPAREN

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 430
    DOT             shift and go to state 248
    FLPAREN         shift and go to state 153

  ! RPAREN          [ reduce using rule 207 (type -> primitiveType .) ]

    arrays                         shift and go to state 429
    array                          shift and go to state 154

state 269

    (503) castExpression -> LPAREN expression . RPAREN unaryExpressionNotPlusMinus
    (394) parExpression -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 431


state 270

    (283) annotationBody -> LPAREN elementValuePairs RPAREN .

    PUBLIC          reduce using rule 283 (annotationBody -> LPAREN elementValuePairs RPAREN .)
    PROTECTED       reduce using rule 283 (annotationBody -> LPAREN elementValuePairs RPAREN .)
    PRIVATE         reduce using rule 283 (annotationBody -> LPAREN elementValuePairs RPAREN .)
    ABSTRACT        reduce using rule 283 (annotationBody -> LPAREN elementValuePairs RPAREN .)
    STATIC          reduce using rule 283 (annotationBody -> LPAREN elementValuePairs RPAREN .)
    FINAL           reduce using rule 283 (annotationBody -> LPAREN elementValuePairs RPAREN .)
    STRICTFP        reduce using rule 283 (annotationBody -> LPAREN elementValuePairs RPAREN .)
    CLASS           reduce using rule 283 (annotationBody -> LPAREN elementValuePairs RPAREN .)
    ENUM            reduce using rule 283 (annotationBody -> LPAREN elementValuePairs RPAREN .)
    INTERFACE       reduce using rule 283 (annotationBody -> LPAREN elementValuePairs RPAREN .)
    AT              reduce using rule 283 (annotationBody -> LPAREN elementValuePairs RPAREN .)
    RPAREN          reduce using rule 283 (annotationBody -> LPAREN elementValuePairs RPAREN .)
    Identifier      reduce using rule 283 (annotationBody -> LPAREN elementValuePairs RPAREN .)
    COMMA           reduce using rule 283 (annotationBody -> LPAREN elementValuePairs RPAREN .)
    BRPAREN         reduce using rule 283 (annotationBody -> LPAREN elementValuePairs RPAREN .)
    NATIVE          reduce using rule 283 (annotationBody -> LPAREN elementValuePairs RPAREN .)
    SYNCHRONIZED    reduce using rule 283 (annotationBody -> LPAREN elementValuePairs RPAREN .)
    TRANSIENT       reduce using rule 283 (annotationBody -> LPAREN elementValuePairs RPAREN .)
    VOLATILE        reduce using rule 283 (annotationBody -> LPAREN elementValuePairs RPAREN .)
    BOOLEAN         reduce using rule 283 (annotationBody -> LPAREN elementValuePairs RPAREN .)
    CHAR            reduce using rule 283 (annotationBody -> LPAREN elementValuePairs RPAREN .)
    BYTE            reduce using rule 283 (annotationBody -> LPAREN elementValuePairs RPAREN .)
    SHORT           reduce using rule 283 (annotationBody -> LPAREN elementValuePairs RPAREN .)
    INT             reduce using rule 283 (annotationBody -> LPAREN elementValuePairs RPAREN .)
    LONG            reduce using rule 283 (annotationBody -> LPAREN elementValuePairs RPAREN .)
    FLOAT           reduce using rule 283 (annotationBody -> LPAREN elementValuePairs RPAREN .)
    DOUBLE          reduce using rule 283 (annotationBody -> LPAREN elementValuePairs RPAREN .)
    VOID            reduce using rule 283 (annotationBody -> LPAREN elementValuePairs RPAREN .)
    LESS            reduce using rule 283 (annotationBody -> LPAREN elementValuePairs RPAREN .)
    SEMI            reduce using rule 283 (annotationBody -> LPAREN elementValuePairs RPAREN .)


state 271

    (509) primary -> SUPER superSuffix .

    OP_INC          reduce using rule 509 (primary -> SUPER superSuffix .)
    OP_DEC          reduce using rule 509 (primary -> SUPER superSuffix .)
    DOT             reduce using rule 509 (primary -> SUPER superSuffix .)
    FLPAREN         reduce using rule 509 (primary -> SUPER superSuffix .)
    MULT            reduce using rule 509 (primary -> SUPER superSuffix .)
    SLASH           reduce using rule 509 (primary -> SUPER superSuffix .)
    PERCENT         reduce using rule 509 (primary -> SUPER superSuffix .)
    PLUS            reduce using rule 509 (primary -> SUPER superSuffix .)
    DASH            reduce using rule 509 (primary -> SUPER superSuffix .)
    OP_SHR          reduce using rule 509 (primary -> SUPER superSuffix .)
    OP_SHRR         reduce using rule 509 (primary -> SUPER superSuffix .)
    OP_SHL          reduce using rule 509 (primary -> SUPER superSuffix .)
    OP_LE           reduce using rule 509 (primary -> SUPER superSuffix .)
    OP_GE           reduce using rule 509 (primary -> SUPER superSuffix .)
    LESS            reduce using rule 509 (primary -> SUPER superSuffix .)
    MORE            reduce using rule 509 (primary -> SUPER superSuffix .)
    INSTANCEOF      reduce using rule 509 (primary -> SUPER superSuffix .)
    OP_EQ           reduce using rule 509 (primary -> SUPER superSuffix .)
    OP_NE           reduce using rule 509 (primary -> SUPER superSuffix .)
    AND             reduce using rule 509 (primary -> SUPER superSuffix .)
    CARET           reduce using rule 509 (primary -> SUPER superSuffix .)
    VERTICAL        reduce using rule 509 (primary -> SUPER superSuffix .)
    OP_LAND         reduce using rule 509 (primary -> SUPER superSuffix .)
    OP_LOR          reduce using rule 509 (primary -> SUPER superSuffix .)
    QUES            reduce using rule 509 (primary -> SUPER superSuffix .)
    EQUALS          reduce using rule 509 (primary -> SUPER superSuffix .)
    ASS_ADD         reduce using rule 509 (primary -> SUPER superSuffix .)
    ASS_SUB         reduce using rule 509 (primary -> SUPER superSuffix .)
    ASS_MUL         reduce using rule 509 (primary -> SUPER superSuffix .)
    ASS_DIV         reduce using rule 509 (primary -> SUPER superSuffix .)
    ASS_AND         reduce using rule 509 (primary -> SUPER superSuffix .)
    ASS_OR          reduce using rule 509 (primary -> SUPER superSuffix .)
    ASS_XOR         reduce using rule 509 (primary -> SUPER superSuffix .)
    ASS_MOD         reduce using rule 509 (primary -> SUPER superSuffix .)
    ASS_SHL         reduce using rule 509 (primary -> SUPER superSuffix .)
    ASS_SHRR        reduce using rule 509 (primary -> SUPER superSuffix .)
    ASS_SHR         reduce using rule 509 (primary -> SUPER superSuffix .)
    FRPAREN         reduce using rule 509 (primary -> SUPER superSuffix .)
    SEMI            reduce using rule 509 (primary -> SUPER superSuffix .)
    COMMA           reduce using rule 509 (primary -> SUPER superSuffix .)
    BRPAREN         reduce using rule 509 (primary -> SUPER superSuffix .)
    RPAREN          reduce using rule 509 (primary -> SUPER superSuffix .)
    COLON           reduce using rule 509 (primary -> SUPER superSuffix .)


state 272

    (551) superSuffix -> arguments .

    OP_INC          reduce using rule 551 (superSuffix -> arguments .)
    OP_DEC          reduce using rule 551 (superSuffix -> arguments .)
    DOT             reduce using rule 551 (superSuffix -> arguments .)
    FLPAREN         reduce using rule 551 (superSuffix -> arguments .)
    MULT            reduce using rule 551 (superSuffix -> arguments .)
    SLASH           reduce using rule 551 (superSuffix -> arguments .)
    PERCENT         reduce using rule 551 (superSuffix -> arguments .)
    PLUS            reduce using rule 551 (superSuffix -> arguments .)
    DASH            reduce using rule 551 (superSuffix -> arguments .)
    OP_SHR          reduce using rule 551 (superSuffix -> arguments .)
    OP_SHRR         reduce using rule 551 (superSuffix -> arguments .)
    OP_SHL          reduce using rule 551 (superSuffix -> arguments .)
    OP_LE           reduce using rule 551 (superSuffix -> arguments .)
    OP_GE           reduce using rule 551 (superSuffix -> arguments .)
    LESS            reduce using rule 551 (superSuffix -> arguments .)
    MORE            reduce using rule 551 (superSuffix -> arguments .)
    INSTANCEOF      reduce using rule 551 (superSuffix -> arguments .)
    OP_EQ           reduce using rule 551 (superSuffix -> arguments .)
    OP_NE           reduce using rule 551 (superSuffix -> arguments .)
    AND             reduce using rule 551 (superSuffix -> arguments .)
    CARET           reduce using rule 551 (superSuffix -> arguments .)
    VERTICAL        reduce using rule 551 (superSuffix -> arguments .)
    OP_LAND         reduce using rule 551 (superSuffix -> arguments .)
    OP_LOR          reduce using rule 551 (superSuffix -> arguments .)
    QUES            reduce using rule 551 (superSuffix -> arguments .)
    RPAREN          reduce using rule 551 (superSuffix -> arguments .)
    COMMA           reduce using rule 551 (superSuffix -> arguments .)
    BRPAREN         reduce using rule 551 (superSuffix -> arguments .)
    EQUALS          reduce using rule 551 (superSuffix -> arguments .)
    ASS_ADD         reduce using rule 551 (superSuffix -> arguments .)
    ASS_SUB         reduce using rule 551 (superSuffix -> arguments .)
    ASS_MUL         reduce using rule 551 (superSuffix -> arguments .)
    ASS_DIV         reduce using rule 551 (superSuffix -> arguments .)
    ASS_AND         reduce using rule 551 (superSuffix -> arguments .)
    ASS_OR          reduce using rule 551 (superSuffix -> arguments .)
    ASS_XOR         reduce using rule 551 (superSuffix -> arguments .)
    ASS_MOD         reduce using rule 551 (superSuffix -> arguments .)
    ASS_SHL         reduce using rule 551 (superSuffix -> arguments .)
    ASS_SHRR        reduce using rule 551 (superSuffix -> arguments .)
    ASS_SHR         reduce using rule 551 (superSuffix -> arguments .)
    FRPAREN         reduce using rule 551 (superSuffix -> arguments .)
    COLON           reduce using rule 551 (superSuffix -> arguments .)
    SEMI            reduce using rule 551 (superSuffix -> arguments .)


state 273

    (552) superSuffix -> DOT . Identifier arguments_once

    Identifier      shift and go to state 432


state 274

    (284) annotationBody -> LPAREN elementValue RPAREN .

    PUBLIC          reduce using rule 284 (annotationBody -> LPAREN elementValue RPAREN .)
    PROTECTED       reduce using rule 284 (annotationBody -> LPAREN elementValue RPAREN .)
    PRIVATE         reduce using rule 284 (annotationBody -> LPAREN elementValue RPAREN .)
    ABSTRACT        reduce using rule 284 (annotationBody -> LPAREN elementValue RPAREN .)
    STATIC          reduce using rule 284 (annotationBody -> LPAREN elementValue RPAREN .)
    FINAL           reduce using rule 284 (annotationBody -> LPAREN elementValue RPAREN .)
    STRICTFP        reduce using rule 284 (annotationBody -> LPAREN elementValue RPAREN .)
    CLASS           reduce using rule 284 (annotationBody -> LPAREN elementValue RPAREN .)
    ENUM            reduce using rule 284 (annotationBody -> LPAREN elementValue RPAREN .)
    INTERFACE       reduce using rule 284 (annotationBody -> LPAREN elementValue RPAREN .)
    AT              reduce using rule 284 (annotationBody -> LPAREN elementValue RPAREN .)
    RPAREN          reduce using rule 284 (annotationBody -> LPAREN elementValue RPAREN .)
    Identifier      reduce using rule 284 (annotationBody -> LPAREN elementValue RPAREN .)
    COMMA           reduce using rule 284 (annotationBody -> LPAREN elementValue RPAREN .)
    BRPAREN         reduce using rule 284 (annotationBody -> LPAREN elementValue RPAREN .)
    NATIVE          reduce using rule 284 (annotationBody -> LPAREN elementValue RPAREN .)
    SYNCHRONIZED    reduce using rule 284 (annotationBody -> LPAREN elementValue RPAREN .)
    TRANSIENT       reduce using rule 284 (annotationBody -> LPAREN elementValue RPAREN .)
    VOLATILE        reduce using rule 284 (annotationBody -> LPAREN elementValue RPAREN .)
    BOOLEAN         reduce using rule 284 (annotationBody -> LPAREN elementValue RPAREN .)
    CHAR            reduce using rule 284 (annotationBody -> LPAREN elementValue RPAREN .)
    BYTE            reduce using rule 284 (annotationBody -> LPAREN elementValue RPAREN .)
    SHORT           reduce using rule 284 (annotationBody -> LPAREN elementValue RPAREN .)
    INT             reduce using rule 284 (annotationBody -> LPAREN elementValue RPAREN .)
    LONG            reduce using rule 284 (annotationBody -> LPAREN elementValue RPAREN .)
    FLOAT           reduce using rule 284 (annotationBody -> LPAREN elementValue RPAREN .)
    DOUBLE          reduce using rule 284 (annotationBody -> LPAREN elementValue RPAREN .)
    VOID            reduce using rule 284 (annotationBody -> LPAREN elementValue RPAREN .)
    LESS            reduce using rule 284 (annotationBody -> LPAREN elementValue RPAREN .)
    SEMI            reduce using rule 284 (annotationBody -> LPAREN elementValue RPAREN .)


state 275

    (198) modifier -> SYNCHRONIZED .

    VOID            reduce using rule 198 (modifier -> SYNCHRONIZED .)
    PUBLIC          reduce using rule 198 (modifier -> SYNCHRONIZED .)
    PROTECTED       reduce using rule 198 (modifier -> SYNCHRONIZED .)
    PRIVATE         reduce using rule 198 (modifier -> SYNCHRONIZED .)
    STATIC          reduce using rule 198 (modifier -> SYNCHRONIZED .)
    ABSTRACT        reduce using rule 198 (modifier -> SYNCHRONIZED .)
    FINAL           reduce using rule 198 (modifier -> SYNCHRONIZED .)
    NATIVE          reduce using rule 198 (modifier -> SYNCHRONIZED .)
    SYNCHRONIZED    reduce using rule 198 (modifier -> SYNCHRONIZED .)
    TRANSIENT       reduce using rule 198 (modifier -> SYNCHRONIZED .)
    VOLATILE        reduce using rule 198 (modifier -> SYNCHRONIZED .)
    STRICTFP        reduce using rule 198 (modifier -> SYNCHRONIZED .)
    AT              reduce using rule 198 (modifier -> SYNCHRONIZED .)
    LESS            reduce using rule 198 (modifier -> SYNCHRONIZED .)
    INTERFACE       reduce using rule 198 (modifier -> SYNCHRONIZED .)
    CLASS           reduce using rule 198 (modifier -> SYNCHRONIZED .)
    ENUM            reduce using rule 198 (modifier -> SYNCHRONIZED .)
    Identifier      reduce using rule 198 (modifier -> SYNCHRONIZED .)
    BOOLEAN         reduce using rule 198 (modifier -> SYNCHRONIZED .)
    CHAR            reduce using rule 198 (modifier -> SYNCHRONIZED .)
    BYTE            reduce using rule 198 (modifier -> SYNCHRONIZED .)
    SHORT           reduce using rule 198 (modifier -> SYNCHRONIZED .)
    INT             reduce using rule 198 (modifier -> SYNCHRONIZED .)
    LONG            reduce using rule 198 (modifier -> SYNCHRONIZED .)
    FLOAT           reduce using rule 198 (modifier -> SYNCHRONIZED .)
    DOUBLE          reduce using rule 198 (modifier -> SYNCHRONIZED .)


state 276

    (195) modifier -> ABSTRACT .

    VOID            reduce using rule 195 (modifier -> ABSTRACT .)
    PUBLIC          reduce using rule 195 (modifier -> ABSTRACT .)
    PROTECTED       reduce using rule 195 (modifier -> ABSTRACT .)
    PRIVATE         reduce using rule 195 (modifier -> ABSTRACT .)
    STATIC          reduce using rule 195 (modifier -> ABSTRACT .)
    ABSTRACT        reduce using rule 195 (modifier -> ABSTRACT .)
    FINAL           reduce using rule 195 (modifier -> ABSTRACT .)
    NATIVE          reduce using rule 195 (modifier -> ABSTRACT .)
    SYNCHRONIZED    reduce using rule 195 (modifier -> ABSTRACT .)
    TRANSIENT       reduce using rule 195 (modifier -> ABSTRACT .)
    VOLATILE        reduce using rule 195 (modifier -> ABSTRACT .)
    STRICTFP        reduce using rule 195 (modifier -> ABSTRACT .)
    AT              reduce using rule 195 (modifier -> ABSTRACT .)
    LESS            reduce using rule 195 (modifier -> ABSTRACT .)
    INTERFACE       reduce using rule 195 (modifier -> ABSTRACT .)
    CLASS           reduce using rule 195 (modifier -> ABSTRACT .)
    ENUM            reduce using rule 195 (modifier -> ABSTRACT .)
    Identifier      reduce using rule 195 (modifier -> ABSTRACT .)
    BOOLEAN         reduce using rule 195 (modifier -> ABSTRACT .)
    CHAR            reduce using rule 195 (modifier -> ABSTRACT .)
    BYTE            reduce using rule 195 (modifier -> ABSTRACT .)
    SHORT           reduce using rule 195 (modifier -> ABSTRACT .)
    INT             reduce using rule 195 (modifier -> ABSTRACT .)
    LONG            reduce using rule 195 (modifier -> ABSTRACT .)
    FLOAT           reduce using rule 195 (modifier -> ABSTRACT .)
    DOUBLE          reduce using rule 195 (modifier -> ABSTRACT .)


state 277

    (311) annotationTypeBody -> BLPAREN annotationTypeElementDeclarations . BRPAREN
    (310) annotationTypeElementDeclarations -> annotationTypeElementDeclarations . annotationTypeElementDeclaration
    (313) annotationTypeElementDeclaration -> . modifiers annotationTypeElementRest
    (314) annotationTypeElementDeclaration -> . annotationTypeElementRest
    (40) modifiers -> . modifier
    (41) modifiers -> . modifiers modifier
    (317) annotationTypeElementRest -> . type annotationMethodOrConstantRest SEMI
    (318) annotationTypeElementRest -> . normalClassDeclaration SEMI_OR_empty
    (319) annotationTypeElementRest -> . normalInterfaceDeclaration SEMI_OR_empty
    (320) annotationTypeElementRest -> . enumDeclaration SEMI_OR_empty
    (321) annotationTypeElementRest -> . annotationTypeDeclaration SEMI_OR_empty
    (190) modifier -> . annotation
    (191) modifier -> . PUBLIC
    (192) modifier -> . PROTECTED
    (193) modifier -> . PRIVATE
    (194) modifier -> . STATIC
    (195) modifier -> . ABSTRACT
    (196) modifier -> . FINAL
    (197) modifier -> . NATIVE
    (198) modifier -> . SYNCHRONIZED
    (199) modifier -> . TRANSIENT
    (200) modifier -> . VOLATILE
    (201) modifier -> . STRICTFP
    (205) type -> . type_body
    (206) type -> . primitiveType arrays
    (207) type -> . primitiveType
    (48) normalClassDeclaration -> . CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody
    (95) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody
    (63) enumDeclaration -> . ENUM Identifier IMPLEMENTS_typeList enumBody
    (308) annotationTypeDeclaration -> . AT INTERFACE Identifier annotationTypeBody
    (287) annotation -> . AT annotationName annotationBody
    (208) type_body -> . Identifier classOrInterfaceTypeBody arrays
    (209) type_body -> . Identifier classOrInterfaceTypeBody
    (210) type_body -> . Identifier arrays
    (211) type_body -> . Identifier
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE

    BRPAREN         shift and go to state 433
    PUBLIC          shift and go to state 297
    PROTECTED       shift and go to state 278
    PRIVATE         shift and go to state 284
    STATIC          shift and go to state 279
    ABSTRACT        shift and go to state 276
    FINAL           shift and go to state 281
    NATIVE          shift and go to state 282
    SYNCHRONIZED    shift and go to state 275
    TRANSIENT       shift and go to state 286
    VOLATILE        shift and go to state 295
    STRICTFP        shift and go to state 285
    CLASS           shift and go to state 12
    INTERFACE       shift and go to state 23
    ENUM            shift and go to state 15
    AT              shift and go to state 18
    Identifier      shift and go to state 80
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72

    annotationTypeElementDeclaration shift and go to state 434
    primitiveType                  shift and go to state 74
    normalInterfaceDeclaration     shift and go to state 280
    normalClassDeclaration         shift and go to state 283
    type                           shift and go to state 287
    enumDeclaration                shift and go to state 289
    annotationTypeElementRest      shift and go to state 290
    annotation                     shift and go to state 291
    modifiers                      shift and go to state 292
    type_body                      shift and go to state 77
    annotationTypeDeclaration      shift and go to state 293
    modifier                       shift and go to state 296

state 278

    (192) modifier -> PROTECTED .

    VOID            reduce using rule 192 (modifier -> PROTECTED .)
    PUBLIC          reduce using rule 192 (modifier -> PROTECTED .)
    PROTECTED       reduce using rule 192 (modifier -> PROTECTED .)
    PRIVATE         reduce using rule 192 (modifier -> PROTECTED .)
    STATIC          reduce using rule 192 (modifier -> PROTECTED .)
    ABSTRACT        reduce using rule 192 (modifier -> PROTECTED .)
    FINAL           reduce using rule 192 (modifier -> PROTECTED .)
    NATIVE          reduce using rule 192 (modifier -> PROTECTED .)
    SYNCHRONIZED    reduce using rule 192 (modifier -> PROTECTED .)
    TRANSIENT       reduce using rule 192 (modifier -> PROTECTED .)
    VOLATILE        reduce using rule 192 (modifier -> PROTECTED .)
    STRICTFP        reduce using rule 192 (modifier -> PROTECTED .)
    AT              reduce using rule 192 (modifier -> PROTECTED .)
    LESS            reduce using rule 192 (modifier -> PROTECTED .)
    INTERFACE       reduce using rule 192 (modifier -> PROTECTED .)
    CLASS           reduce using rule 192 (modifier -> PROTECTED .)
    ENUM            reduce using rule 192 (modifier -> PROTECTED .)
    Identifier      reduce using rule 192 (modifier -> PROTECTED .)
    BOOLEAN         reduce using rule 192 (modifier -> PROTECTED .)
    CHAR            reduce using rule 192 (modifier -> PROTECTED .)
    BYTE            reduce using rule 192 (modifier -> PROTECTED .)
    SHORT           reduce using rule 192 (modifier -> PROTECTED .)
    INT             reduce using rule 192 (modifier -> PROTECTED .)
    LONG            reduce using rule 192 (modifier -> PROTECTED .)
    FLOAT           reduce using rule 192 (modifier -> PROTECTED .)
    DOUBLE          reduce using rule 192 (modifier -> PROTECTED .)


state 279

    (194) modifier -> STATIC .

    VOID            reduce using rule 194 (modifier -> STATIC .)
    PUBLIC          reduce using rule 194 (modifier -> STATIC .)
    PROTECTED       reduce using rule 194 (modifier -> STATIC .)
    PRIVATE         reduce using rule 194 (modifier -> STATIC .)
    STATIC          reduce using rule 194 (modifier -> STATIC .)
    ABSTRACT        reduce using rule 194 (modifier -> STATIC .)
    FINAL           reduce using rule 194 (modifier -> STATIC .)
    NATIVE          reduce using rule 194 (modifier -> STATIC .)
    SYNCHRONIZED    reduce using rule 194 (modifier -> STATIC .)
    TRANSIENT       reduce using rule 194 (modifier -> STATIC .)
    VOLATILE        reduce using rule 194 (modifier -> STATIC .)
    STRICTFP        reduce using rule 194 (modifier -> STATIC .)
    AT              reduce using rule 194 (modifier -> STATIC .)
    LESS            reduce using rule 194 (modifier -> STATIC .)
    INTERFACE       reduce using rule 194 (modifier -> STATIC .)
    CLASS           reduce using rule 194 (modifier -> STATIC .)
    ENUM            reduce using rule 194 (modifier -> STATIC .)
    Identifier      reduce using rule 194 (modifier -> STATIC .)
    BOOLEAN         reduce using rule 194 (modifier -> STATIC .)
    CHAR            reduce using rule 194 (modifier -> STATIC .)
    BYTE            reduce using rule 194 (modifier -> STATIC .)
    SHORT           reduce using rule 194 (modifier -> STATIC .)
    INT             reduce using rule 194 (modifier -> STATIC .)
    LONG            reduce using rule 194 (modifier -> STATIC .)
    FLOAT           reduce using rule 194 (modifier -> STATIC .)
    DOUBLE          reduce using rule 194 (modifier -> STATIC .)


state 280

    (319) annotationTypeElementRest -> normalInterfaceDeclaration . SEMI_OR_empty
    (315) SEMI_OR_empty -> . SEMI
    (316) SEMI_OR_empty -> .

    SEMI            shift and go to state 436
    BRPAREN         reduce using rule 316 (SEMI_OR_empty -> .)
    PUBLIC          reduce using rule 316 (SEMI_OR_empty -> .)
    PROTECTED       reduce using rule 316 (SEMI_OR_empty -> .)
    PRIVATE         reduce using rule 316 (SEMI_OR_empty -> .)
    STATIC          reduce using rule 316 (SEMI_OR_empty -> .)
    ABSTRACT        reduce using rule 316 (SEMI_OR_empty -> .)
    FINAL           reduce using rule 316 (SEMI_OR_empty -> .)
    NATIVE          reduce using rule 316 (SEMI_OR_empty -> .)
    SYNCHRONIZED    reduce using rule 316 (SEMI_OR_empty -> .)
    TRANSIENT       reduce using rule 316 (SEMI_OR_empty -> .)
    VOLATILE        reduce using rule 316 (SEMI_OR_empty -> .)
    STRICTFP        reduce using rule 316 (SEMI_OR_empty -> .)
    CLASS           reduce using rule 316 (SEMI_OR_empty -> .)
    INTERFACE       reduce using rule 316 (SEMI_OR_empty -> .)
    ENUM            reduce using rule 316 (SEMI_OR_empty -> .)
    AT              reduce using rule 316 (SEMI_OR_empty -> .)
    Identifier      reduce using rule 316 (SEMI_OR_empty -> .)
    BOOLEAN         reduce using rule 316 (SEMI_OR_empty -> .)
    CHAR            reduce using rule 316 (SEMI_OR_empty -> .)
    BYTE            reduce using rule 316 (SEMI_OR_empty -> .)
    SHORT           reduce using rule 316 (SEMI_OR_empty -> .)
    INT             reduce using rule 316 (SEMI_OR_empty -> .)
    LONG            reduce using rule 316 (SEMI_OR_empty -> .)
    FLOAT           reduce using rule 316 (SEMI_OR_empty -> .)
    DOUBLE          reduce using rule 316 (SEMI_OR_empty -> .)

    SEMI_OR_empty                  shift and go to state 435

state 281

    (196) modifier -> FINAL .

    VOID            reduce using rule 196 (modifier -> FINAL .)
    PUBLIC          reduce using rule 196 (modifier -> FINAL .)
    PROTECTED       reduce using rule 196 (modifier -> FINAL .)
    PRIVATE         reduce using rule 196 (modifier -> FINAL .)
    STATIC          reduce using rule 196 (modifier -> FINAL .)
    ABSTRACT        reduce using rule 196 (modifier -> FINAL .)
    FINAL           reduce using rule 196 (modifier -> FINAL .)
    NATIVE          reduce using rule 196 (modifier -> FINAL .)
    SYNCHRONIZED    reduce using rule 196 (modifier -> FINAL .)
    TRANSIENT       reduce using rule 196 (modifier -> FINAL .)
    VOLATILE        reduce using rule 196 (modifier -> FINAL .)
    STRICTFP        reduce using rule 196 (modifier -> FINAL .)
    AT              reduce using rule 196 (modifier -> FINAL .)
    LESS            reduce using rule 196 (modifier -> FINAL .)
    INTERFACE       reduce using rule 196 (modifier -> FINAL .)
    CLASS           reduce using rule 196 (modifier -> FINAL .)
    ENUM            reduce using rule 196 (modifier -> FINAL .)
    Identifier      reduce using rule 196 (modifier -> FINAL .)
    BOOLEAN         reduce using rule 196 (modifier -> FINAL .)
    CHAR            reduce using rule 196 (modifier -> FINAL .)
    BYTE            reduce using rule 196 (modifier -> FINAL .)
    SHORT           reduce using rule 196 (modifier -> FINAL .)
    INT             reduce using rule 196 (modifier -> FINAL .)
    LONG            reduce using rule 196 (modifier -> FINAL .)
    FLOAT           reduce using rule 196 (modifier -> FINAL .)
    DOUBLE          reduce using rule 196 (modifier -> FINAL .)


state 282

    (197) modifier -> NATIVE .

    VOID            reduce using rule 197 (modifier -> NATIVE .)
    PUBLIC          reduce using rule 197 (modifier -> NATIVE .)
    PROTECTED       reduce using rule 197 (modifier -> NATIVE .)
    PRIVATE         reduce using rule 197 (modifier -> NATIVE .)
    STATIC          reduce using rule 197 (modifier -> NATIVE .)
    ABSTRACT        reduce using rule 197 (modifier -> NATIVE .)
    FINAL           reduce using rule 197 (modifier -> NATIVE .)
    NATIVE          reduce using rule 197 (modifier -> NATIVE .)
    SYNCHRONIZED    reduce using rule 197 (modifier -> NATIVE .)
    TRANSIENT       reduce using rule 197 (modifier -> NATIVE .)
    VOLATILE        reduce using rule 197 (modifier -> NATIVE .)
    STRICTFP        reduce using rule 197 (modifier -> NATIVE .)
    AT              reduce using rule 197 (modifier -> NATIVE .)
    LESS            reduce using rule 197 (modifier -> NATIVE .)
    INTERFACE       reduce using rule 197 (modifier -> NATIVE .)
    CLASS           reduce using rule 197 (modifier -> NATIVE .)
    ENUM            reduce using rule 197 (modifier -> NATIVE .)
    Identifier      reduce using rule 197 (modifier -> NATIVE .)
    BOOLEAN         reduce using rule 197 (modifier -> NATIVE .)
    CHAR            reduce using rule 197 (modifier -> NATIVE .)
    BYTE            reduce using rule 197 (modifier -> NATIVE .)
    SHORT           reduce using rule 197 (modifier -> NATIVE .)
    INT             reduce using rule 197 (modifier -> NATIVE .)
    LONG            reduce using rule 197 (modifier -> NATIVE .)
    FLOAT           reduce using rule 197 (modifier -> NATIVE .)
    DOUBLE          reduce using rule 197 (modifier -> NATIVE .)


state 283

    (318) annotationTypeElementRest -> normalClassDeclaration . SEMI_OR_empty
    (315) SEMI_OR_empty -> . SEMI
    (316) SEMI_OR_empty -> .

    SEMI            shift and go to state 436
    BRPAREN         reduce using rule 316 (SEMI_OR_empty -> .)
    PUBLIC          reduce using rule 316 (SEMI_OR_empty -> .)
    PROTECTED       reduce using rule 316 (SEMI_OR_empty -> .)
    PRIVATE         reduce using rule 316 (SEMI_OR_empty -> .)
    STATIC          reduce using rule 316 (SEMI_OR_empty -> .)
    ABSTRACT        reduce using rule 316 (SEMI_OR_empty -> .)
    FINAL           reduce using rule 316 (SEMI_OR_empty -> .)
    NATIVE          reduce using rule 316 (SEMI_OR_empty -> .)
    SYNCHRONIZED    reduce using rule 316 (SEMI_OR_empty -> .)
    TRANSIENT       reduce using rule 316 (SEMI_OR_empty -> .)
    VOLATILE        reduce using rule 316 (SEMI_OR_empty -> .)
    STRICTFP        reduce using rule 316 (SEMI_OR_empty -> .)
    CLASS           reduce using rule 316 (SEMI_OR_empty -> .)
    INTERFACE       reduce using rule 316 (SEMI_OR_empty -> .)
    ENUM            reduce using rule 316 (SEMI_OR_empty -> .)
    AT              reduce using rule 316 (SEMI_OR_empty -> .)
    Identifier      reduce using rule 316 (SEMI_OR_empty -> .)
    BOOLEAN         reduce using rule 316 (SEMI_OR_empty -> .)
    CHAR            reduce using rule 316 (SEMI_OR_empty -> .)
    BYTE            reduce using rule 316 (SEMI_OR_empty -> .)
    SHORT           reduce using rule 316 (SEMI_OR_empty -> .)
    INT             reduce using rule 316 (SEMI_OR_empty -> .)
    LONG            reduce using rule 316 (SEMI_OR_empty -> .)
    FLOAT           reduce using rule 316 (SEMI_OR_empty -> .)
    DOUBLE          reduce using rule 316 (SEMI_OR_empty -> .)

    SEMI_OR_empty                  shift and go to state 437

state 284

    (193) modifier -> PRIVATE .

    VOID            reduce using rule 193 (modifier -> PRIVATE .)
    PUBLIC          reduce using rule 193 (modifier -> PRIVATE .)
    PROTECTED       reduce using rule 193 (modifier -> PRIVATE .)
    PRIVATE         reduce using rule 193 (modifier -> PRIVATE .)
    STATIC          reduce using rule 193 (modifier -> PRIVATE .)
    ABSTRACT        reduce using rule 193 (modifier -> PRIVATE .)
    FINAL           reduce using rule 193 (modifier -> PRIVATE .)
    NATIVE          reduce using rule 193 (modifier -> PRIVATE .)
    SYNCHRONIZED    reduce using rule 193 (modifier -> PRIVATE .)
    TRANSIENT       reduce using rule 193 (modifier -> PRIVATE .)
    VOLATILE        reduce using rule 193 (modifier -> PRIVATE .)
    STRICTFP        reduce using rule 193 (modifier -> PRIVATE .)
    AT              reduce using rule 193 (modifier -> PRIVATE .)
    LESS            reduce using rule 193 (modifier -> PRIVATE .)
    INTERFACE       reduce using rule 193 (modifier -> PRIVATE .)
    CLASS           reduce using rule 193 (modifier -> PRIVATE .)
    ENUM            reduce using rule 193 (modifier -> PRIVATE .)
    Identifier      reduce using rule 193 (modifier -> PRIVATE .)
    BOOLEAN         reduce using rule 193 (modifier -> PRIVATE .)
    CHAR            reduce using rule 193 (modifier -> PRIVATE .)
    BYTE            reduce using rule 193 (modifier -> PRIVATE .)
    SHORT           reduce using rule 193 (modifier -> PRIVATE .)
    INT             reduce using rule 193 (modifier -> PRIVATE .)
    LONG            reduce using rule 193 (modifier -> PRIVATE .)
    FLOAT           reduce using rule 193 (modifier -> PRIVATE .)
    DOUBLE          reduce using rule 193 (modifier -> PRIVATE .)


state 285

    (201) modifier -> STRICTFP .

    VOID            reduce using rule 201 (modifier -> STRICTFP .)
    PUBLIC          reduce using rule 201 (modifier -> STRICTFP .)
    PROTECTED       reduce using rule 201 (modifier -> STRICTFP .)
    PRIVATE         reduce using rule 201 (modifier -> STRICTFP .)
    STATIC          reduce using rule 201 (modifier -> STRICTFP .)
    ABSTRACT        reduce using rule 201 (modifier -> STRICTFP .)
    FINAL           reduce using rule 201 (modifier -> STRICTFP .)
    NATIVE          reduce using rule 201 (modifier -> STRICTFP .)
    SYNCHRONIZED    reduce using rule 201 (modifier -> STRICTFP .)
    TRANSIENT       reduce using rule 201 (modifier -> STRICTFP .)
    VOLATILE        reduce using rule 201 (modifier -> STRICTFP .)
    STRICTFP        reduce using rule 201 (modifier -> STRICTFP .)
    AT              reduce using rule 201 (modifier -> STRICTFP .)
    LESS            reduce using rule 201 (modifier -> STRICTFP .)
    INTERFACE       reduce using rule 201 (modifier -> STRICTFP .)
    CLASS           reduce using rule 201 (modifier -> STRICTFP .)
    ENUM            reduce using rule 201 (modifier -> STRICTFP .)
    Identifier      reduce using rule 201 (modifier -> STRICTFP .)
    BOOLEAN         reduce using rule 201 (modifier -> STRICTFP .)
    CHAR            reduce using rule 201 (modifier -> STRICTFP .)
    BYTE            reduce using rule 201 (modifier -> STRICTFP .)
    SHORT           reduce using rule 201 (modifier -> STRICTFP .)
    INT             reduce using rule 201 (modifier -> STRICTFP .)
    LONG            reduce using rule 201 (modifier -> STRICTFP .)
    FLOAT           reduce using rule 201 (modifier -> STRICTFP .)
    DOUBLE          reduce using rule 201 (modifier -> STRICTFP .)


state 286

    (199) modifier -> TRANSIENT .

    VOID            reduce using rule 199 (modifier -> TRANSIENT .)
    PUBLIC          reduce using rule 199 (modifier -> TRANSIENT .)
    PROTECTED       reduce using rule 199 (modifier -> TRANSIENT .)
    PRIVATE         reduce using rule 199 (modifier -> TRANSIENT .)
    STATIC          reduce using rule 199 (modifier -> TRANSIENT .)
    ABSTRACT        reduce using rule 199 (modifier -> TRANSIENT .)
    FINAL           reduce using rule 199 (modifier -> TRANSIENT .)
    NATIVE          reduce using rule 199 (modifier -> TRANSIENT .)
    SYNCHRONIZED    reduce using rule 199 (modifier -> TRANSIENT .)
    TRANSIENT       reduce using rule 199 (modifier -> TRANSIENT .)
    VOLATILE        reduce using rule 199 (modifier -> TRANSIENT .)
    STRICTFP        reduce using rule 199 (modifier -> TRANSIENT .)
    AT              reduce using rule 199 (modifier -> TRANSIENT .)
    LESS            reduce using rule 199 (modifier -> TRANSIENT .)
    INTERFACE       reduce using rule 199 (modifier -> TRANSIENT .)
    CLASS           reduce using rule 199 (modifier -> TRANSIENT .)
    ENUM            reduce using rule 199 (modifier -> TRANSIENT .)
    Identifier      reduce using rule 199 (modifier -> TRANSIENT .)
    BOOLEAN         reduce using rule 199 (modifier -> TRANSIENT .)
    CHAR            reduce using rule 199 (modifier -> TRANSIENT .)
    BYTE            reduce using rule 199 (modifier -> TRANSIENT .)
    SHORT           reduce using rule 199 (modifier -> TRANSIENT .)
    INT             reduce using rule 199 (modifier -> TRANSIENT .)
    LONG            reduce using rule 199 (modifier -> TRANSIENT .)
    FLOAT           reduce using rule 199 (modifier -> TRANSIENT .)
    DOUBLE          reduce using rule 199 (modifier -> TRANSIENT .)


state 287

    (317) annotationTypeElementRest -> type . annotationMethodOrConstantRest SEMI
    (322) annotationMethodOrConstantRest -> . annotationMethodRest
    (323) annotationMethodOrConstantRest -> . annotationConstantRest
    (326) annotationMethodRest -> . Identifier LPAREN RPAREN defaultValue_or_empty
    (327) annotationConstantRest -> . variableDeclarators
    (166) variableDeclarators -> . variableDeclarator COMMA_VARS
    (167) variableDeclarators -> . variableDeclarator
    (169) variableDeclarator -> . variableDeclaratorId EQUALS_variableInitializer
    (170) variableDeclarator -> . variableDeclaratorId
    (178) variableDeclaratorId -> . Identifier arrays
    (179) variableDeclaratorId -> . Identifier

    Identifier      shift and go to state 442

    annotationMethodOrConstantRest shift and go to state 438
    variableDeclarators            shift and go to state 439
    annotationConstantRest         shift and go to state 440
    variableDeclaratorId           shift and go to state 441
    annotationMethodRest           shift and go to state 443
    variableDeclarator             shift and go to state 444

state 288

    (312) annotationTypeBody -> BLPAREN BRPAREN .

    SEMI            reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    PUBLIC          reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    PROTECTED       reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    PRIVATE         reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    ABSTRACT        reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    STATIC          reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    FINAL           reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    STRICTFP        reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    CLASS           reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    ENUM            reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    INTERFACE       reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    AT              reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    $end            reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    BRPAREN         reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    ASSERT          reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    IF              reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    FOR             reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    WHILE           reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    DO              reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    TRY             reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    SWITCH          reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    SYNCHRONIZED    reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    RETURN          reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    THROW           reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    BREAK           reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    CONTINUE        reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    Identifier      reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    BLPAREN         reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    BOOLEAN         reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    CHAR            reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    BYTE            reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    SHORT           reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    INT             reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    LONG            reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    FLOAT           reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    DOUBLE          reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    PLUS            reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    DASH            reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    OP_INC          reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    OP_DEC          reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    TILDE           reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    EXCLAMATION     reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    LPAREN          reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    THIS            reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    SUPER           reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    NEW             reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    VOID            reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    CharacterLiteral reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    StringLiteral   reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    NULL            reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    LONG_NUMBER     reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    LONG_HEX_NUMBER reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    NON_INTEGER_1   reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    NON_INTEGER_2   reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    NON_INTEGER_3   reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    NON_INTEGER_4   reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    TRUE            reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    FALSE           reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    CASE            reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    DEFAULT         reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    NATIVE          reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    TRANSIENT       reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    VOLATILE        reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)
    LESS            reduce using rule 312 (annotationTypeBody -> BLPAREN BRPAREN .)


state 289

    (320) annotationTypeElementRest -> enumDeclaration . SEMI_OR_empty
    (315) SEMI_OR_empty -> . SEMI
    (316) SEMI_OR_empty -> .

    SEMI            shift and go to state 436
    BRPAREN         reduce using rule 316 (SEMI_OR_empty -> .)
    PUBLIC          reduce using rule 316 (SEMI_OR_empty -> .)
    PROTECTED       reduce using rule 316 (SEMI_OR_empty -> .)
    PRIVATE         reduce using rule 316 (SEMI_OR_empty -> .)
    STATIC          reduce using rule 316 (SEMI_OR_empty -> .)
    ABSTRACT        reduce using rule 316 (SEMI_OR_empty -> .)
    FINAL           reduce using rule 316 (SEMI_OR_empty -> .)
    NATIVE          reduce using rule 316 (SEMI_OR_empty -> .)
    SYNCHRONIZED    reduce using rule 316 (SEMI_OR_empty -> .)
    TRANSIENT       reduce using rule 316 (SEMI_OR_empty -> .)
    VOLATILE        reduce using rule 316 (SEMI_OR_empty -> .)
    STRICTFP        reduce using rule 316 (SEMI_OR_empty -> .)
    CLASS           reduce using rule 316 (SEMI_OR_empty -> .)
    INTERFACE       reduce using rule 316 (SEMI_OR_empty -> .)
    ENUM            reduce using rule 316 (SEMI_OR_empty -> .)
    AT              reduce using rule 316 (SEMI_OR_empty -> .)
    Identifier      reduce using rule 316 (SEMI_OR_empty -> .)
    BOOLEAN         reduce using rule 316 (SEMI_OR_empty -> .)
    CHAR            reduce using rule 316 (SEMI_OR_empty -> .)
    BYTE            reduce using rule 316 (SEMI_OR_empty -> .)
    SHORT           reduce using rule 316 (SEMI_OR_empty -> .)
    INT             reduce using rule 316 (SEMI_OR_empty -> .)
    LONG            reduce using rule 316 (SEMI_OR_empty -> .)
    FLOAT           reduce using rule 316 (SEMI_OR_empty -> .)
    DOUBLE          reduce using rule 316 (SEMI_OR_empty -> .)

    SEMI_OR_empty                  shift and go to state 445

state 290

    (314) annotationTypeElementDeclaration -> annotationTypeElementRest .

    BRPAREN         reduce using rule 314 (annotationTypeElementDeclaration -> annotationTypeElementRest .)
    PUBLIC          reduce using rule 314 (annotationTypeElementDeclaration -> annotationTypeElementRest .)
    PROTECTED       reduce using rule 314 (annotationTypeElementDeclaration -> annotationTypeElementRest .)
    PRIVATE         reduce using rule 314 (annotationTypeElementDeclaration -> annotationTypeElementRest .)
    STATIC          reduce using rule 314 (annotationTypeElementDeclaration -> annotationTypeElementRest .)
    ABSTRACT        reduce using rule 314 (annotationTypeElementDeclaration -> annotationTypeElementRest .)
    FINAL           reduce using rule 314 (annotationTypeElementDeclaration -> annotationTypeElementRest .)
    NATIVE          reduce using rule 314 (annotationTypeElementDeclaration -> annotationTypeElementRest .)
    SYNCHRONIZED    reduce using rule 314 (annotationTypeElementDeclaration -> annotationTypeElementRest .)
    TRANSIENT       reduce using rule 314 (annotationTypeElementDeclaration -> annotationTypeElementRest .)
    VOLATILE        reduce using rule 314 (annotationTypeElementDeclaration -> annotationTypeElementRest .)
    STRICTFP        reduce using rule 314 (annotationTypeElementDeclaration -> annotationTypeElementRest .)
    CLASS           reduce using rule 314 (annotationTypeElementDeclaration -> annotationTypeElementRest .)
    INTERFACE       reduce using rule 314 (annotationTypeElementDeclaration -> annotationTypeElementRest .)
    ENUM            reduce using rule 314 (annotationTypeElementDeclaration -> annotationTypeElementRest .)
    AT              reduce using rule 314 (annotationTypeElementDeclaration -> annotationTypeElementRest .)
    Identifier      reduce using rule 314 (annotationTypeElementDeclaration -> annotationTypeElementRest .)
    BOOLEAN         reduce using rule 314 (annotationTypeElementDeclaration -> annotationTypeElementRest .)
    CHAR            reduce using rule 314 (annotationTypeElementDeclaration -> annotationTypeElementRest .)
    BYTE            reduce using rule 314 (annotationTypeElementDeclaration -> annotationTypeElementRest .)
    SHORT           reduce using rule 314 (annotationTypeElementDeclaration -> annotationTypeElementRest .)
    INT             reduce using rule 314 (annotationTypeElementDeclaration -> annotationTypeElementRest .)
    LONG            reduce using rule 314 (annotationTypeElementDeclaration -> annotationTypeElementRest .)
    FLOAT           reduce using rule 314 (annotationTypeElementDeclaration -> annotationTypeElementRest .)
    DOUBLE          reduce using rule 314 (annotationTypeElementDeclaration -> annotationTypeElementRest .)


state 291

    (190) modifier -> annotation .

    VOID            reduce using rule 190 (modifier -> annotation .)
    PUBLIC          reduce using rule 190 (modifier -> annotation .)
    PROTECTED       reduce using rule 190 (modifier -> annotation .)
    PRIVATE         reduce using rule 190 (modifier -> annotation .)
    STATIC          reduce using rule 190 (modifier -> annotation .)
    ABSTRACT        reduce using rule 190 (modifier -> annotation .)
    FINAL           reduce using rule 190 (modifier -> annotation .)
    NATIVE          reduce using rule 190 (modifier -> annotation .)
    SYNCHRONIZED    reduce using rule 190 (modifier -> annotation .)
    TRANSIENT       reduce using rule 190 (modifier -> annotation .)
    VOLATILE        reduce using rule 190 (modifier -> annotation .)
    STRICTFP        reduce using rule 190 (modifier -> annotation .)
    AT              reduce using rule 190 (modifier -> annotation .)
    LESS            reduce using rule 190 (modifier -> annotation .)
    INTERFACE       reduce using rule 190 (modifier -> annotation .)
    CLASS           reduce using rule 190 (modifier -> annotation .)
    ENUM            reduce using rule 190 (modifier -> annotation .)
    Identifier      reduce using rule 190 (modifier -> annotation .)
    BOOLEAN         reduce using rule 190 (modifier -> annotation .)
    CHAR            reduce using rule 190 (modifier -> annotation .)
    BYTE            reduce using rule 190 (modifier -> annotation .)
    SHORT           reduce using rule 190 (modifier -> annotation .)
    INT             reduce using rule 190 (modifier -> annotation .)
    LONG            reduce using rule 190 (modifier -> annotation .)
    FLOAT           reduce using rule 190 (modifier -> annotation .)
    DOUBLE          reduce using rule 190 (modifier -> annotation .)


state 292

    (313) annotationTypeElementDeclaration -> modifiers . annotationTypeElementRest
    (41) modifiers -> modifiers . modifier
    (317) annotationTypeElementRest -> . type annotationMethodOrConstantRest SEMI
    (318) annotationTypeElementRest -> . normalClassDeclaration SEMI_OR_empty
    (319) annotationTypeElementRest -> . normalInterfaceDeclaration SEMI_OR_empty
    (320) annotationTypeElementRest -> . enumDeclaration SEMI_OR_empty
    (321) annotationTypeElementRest -> . annotationTypeDeclaration SEMI_OR_empty
    (190) modifier -> . annotation
    (191) modifier -> . PUBLIC
    (192) modifier -> . PROTECTED
    (193) modifier -> . PRIVATE
    (194) modifier -> . STATIC
    (195) modifier -> . ABSTRACT
    (196) modifier -> . FINAL
    (197) modifier -> . NATIVE
    (198) modifier -> . SYNCHRONIZED
    (199) modifier -> . TRANSIENT
    (200) modifier -> . VOLATILE
    (201) modifier -> . STRICTFP
    (205) type -> . type_body
    (206) type -> . primitiveType arrays
    (207) type -> . primitiveType
    (48) normalClassDeclaration -> . CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody
    (95) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody
    (63) enumDeclaration -> . ENUM Identifier IMPLEMENTS_typeList enumBody
    (308) annotationTypeDeclaration -> . AT INTERFACE Identifier annotationTypeBody
    (287) annotation -> . AT annotationName annotationBody
    (208) type_body -> . Identifier classOrInterfaceTypeBody arrays
    (209) type_body -> . Identifier classOrInterfaceTypeBody
    (210) type_body -> . Identifier arrays
    (211) type_body -> . Identifier
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE

    PUBLIC          shift and go to state 297
    PROTECTED       shift and go to state 278
    PRIVATE         shift and go to state 284
    STATIC          shift and go to state 279
    ABSTRACT        shift and go to state 276
    FINAL           shift and go to state 281
    NATIVE          shift and go to state 282
    SYNCHRONIZED    shift and go to state 275
    TRANSIENT       shift and go to state 286
    VOLATILE        shift and go to state 295
    STRICTFP        shift and go to state 285
    CLASS           shift and go to state 12
    INTERFACE       shift and go to state 23
    ENUM            shift and go to state 15
    AT              shift and go to state 18
    Identifier      shift and go to state 80
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72

    primitiveType                  shift and go to state 74
    normalInterfaceDeclaration     shift and go to state 280
    normalClassDeclaration         shift and go to state 283
    type                           shift and go to state 287
    enumDeclaration                shift and go to state 289
    annotationTypeElementRest      shift and go to state 446
    annotation                     shift and go to state 291
    type_body                      shift and go to state 77
    annotationTypeDeclaration      shift and go to state 293
    modifier                       shift and go to state 447

state 293

    (321) annotationTypeElementRest -> annotationTypeDeclaration . SEMI_OR_empty
    (315) SEMI_OR_empty -> . SEMI
    (316) SEMI_OR_empty -> .

    SEMI            shift and go to state 436
    BRPAREN         reduce using rule 316 (SEMI_OR_empty -> .)
    PUBLIC          reduce using rule 316 (SEMI_OR_empty -> .)
    PROTECTED       reduce using rule 316 (SEMI_OR_empty -> .)
    PRIVATE         reduce using rule 316 (SEMI_OR_empty -> .)
    STATIC          reduce using rule 316 (SEMI_OR_empty -> .)
    ABSTRACT        reduce using rule 316 (SEMI_OR_empty -> .)
    FINAL           reduce using rule 316 (SEMI_OR_empty -> .)
    NATIVE          reduce using rule 316 (SEMI_OR_empty -> .)
    SYNCHRONIZED    reduce using rule 316 (SEMI_OR_empty -> .)
    TRANSIENT       reduce using rule 316 (SEMI_OR_empty -> .)
    VOLATILE        reduce using rule 316 (SEMI_OR_empty -> .)
    STRICTFP        reduce using rule 316 (SEMI_OR_empty -> .)
    CLASS           reduce using rule 316 (SEMI_OR_empty -> .)
    INTERFACE       reduce using rule 316 (SEMI_OR_empty -> .)
    ENUM            reduce using rule 316 (SEMI_OR_empty -> .)
    AT              reduce using rule 316 (SEMI_OR_empty -> .)
    Identifier      reduce using rule 316 (SEMI_OR_empty -> .)
    BOOLEAN         reduce using rule 316 (SEMI_OR_empty -> .)
    CHAR            reduce using rule 316 (SEMI_OR_empty -> .)
    BYTE            reduce using rule 316 (SEMI_OR_empty -> .)
    SHORT           reduce using rule 316 (SEMI_OR_empty -> .)
    INT             reduce using rule 316 (SEMI_OR_empty -> .)
    LONG            reduce using rule 316 (SEMI_OR_empty -> .)
    FLOAT           reduce using rule 316 (SEMI_OR_empty -> .)
    DOUBLE          reduce using rule 316 (SEMI_OR_empty -> .)

    SEMI_OR_empty                  shift and go to state 448

state 294

    (309) annotationTypeElementDeclarations -> annotationTypeElementDeclaration .

    BRPAREN         reduce using rule 309 (annotationTypeElementDeclarations -> annotationTypeElementDeclaration .)
    PUBLIC          reduce using rule 309 (annotationTypeElementDeclarations -> annotationTypeElementDeclaration .)
    PROTECTED       reduce using rule 309 (annotationTypeElementDeclarations -> annotationTypeElementDeclaration .)
    PRIVATE         reduce using rule 309 (annotationTypeElementDeclarations -> annotationTypeElementDeclaration .)
    STATIC          reduce using rule 309 (annotationTypeElementDeclarations -> annotationTypeElementDeclaration .)
    ABSTRACT        reduce using rule 309 (annotationTypeElementDeclarations -> annotationTypeElementDeclaration .)
    FINAL           reduce using rule 309 (annotationTypeElementDeclarations -> annotationTypeElementDeclaration .)
    NATIVE          reduce using rule 309 (annotationTypeElementDeclarations -> annotationTypeElementDeclaration .)
    SYNCHRONIZED    reduce using rule 309 (annotationTypeElementDeclarations -> annotationTypeElementDeclaration .)
    TRANSIENT       reduce using rule 309 (annotationTypeElementDeclarations -> annotationTypeElementDeclaration .)
    VOLATILE        reduce using rule 309 (annotationTypeElementDeclarations -> annotationTypeElementDeclaration .)
    STRICTFP        reduce using rule 309 (annotationTypeElementDeclarations -> annotationTypeElementDeclaration .)
    CLASS           reduce using rule 309 (annotationTypeElementDeclarations -> annotationTypeElementDeclaration .)
    INTERFACE       reduce using rule 309 (annotationTypeElementDeclarations -> annotationTypeElementDeclaration .)
    ENUM            reduce using rule 309 (annotationTypeElementDeclarations -> annotationTypeElementDeclaration .)
    AT              reduce using rule 309 (annotationTypeElementDeclarations -> annotationTypeElementDeclaration .)
    Identifier      reduce using rule 309 (annotationTypeElementDeclarations -> annotationTypeElementDeclaration .)
    BOOLEAN         reduce using rule 309 (annotationTypeElementDeclarations -> annotationTypeElementDeclaration .)
    CHAR            reduce using rule 309 (annotationTypeElementDeclarations -> annotationTypeElementDeclaration .)
    BYTE            reduce using rule 309 (annotationTypeElementDeclarations -> annotationTypeElementDeclaration .)
    SHORT           reduce using rule 309 (annotationTypeElementDeclarations -> annotationTypeElementDeclaration .)
    INT             reduce using rule 309 (annotationTypeElementDeclarations -> annotationTypeElementDeclaration .)
    LONG            reduce using rule 309 (annotationTypeElementDeclarations -> annotationTypeElementDeclaration .)
    FLOAT           reduce using rule 309 (annotationTypeElementDeclarations -> annotationTypeElementDeclaration .)
    DOUBLE          reduce using rule 309 (annotationTypeElementDeclarations -> annotationTypeElementDeclaration .)


state 295

    (200) modifier -> VOLATILE .

    VOID            reduce using rule 200 (modifier -> VOLATILE .)
    PUBLIC          reduce using rule 200 (modifier -> VOLATILE .)
    PROTECTED       reduce using rule 200 (modifier -> VOLATILE .)
    PRIVATE         reduce using rule 200 (modifier -> VOLATILE .)
    STATIC          reduce using rule 200 (modifier -> VOLATILE .)
    ABSTRACT        reduce using rule 200 (modifier -> VOLATILE .)
    FINAL           reduce using rule 200 (modifier -> VOLATILE .)
    NATIVE          reduce using rule 200 (modifier -> VOLATILE .)
    SYNCHRONIZED    reduce using rule 200 (modifier -> VOLATILE .)
    TRANSIENT       reduce using rule 200 (modifier -> VOLATILE .)
    VOLATILE        reduce using rule 200 (modifier -> VOLATILE .)
    STRICTFP        reduce using rule 200 (modifier -> VOLATILE .)
    AT              reduce using rule 200 (modifier -> VOLATILE .)
    LESS            reduce using rule 200 (modifier -> VOLATILE .)
    INTERFACE       reduce using rule 200 (modifier -> VOLATILE .)
    CLASS           reduce using rule 200 (modifier -> VOLATILE .)
    ENUM            reduce using rule 200 (modifier -> VOLATILE .)
    Identifier      reduce using rule 200 (modifier -> VOLATILE .)
    BOOLEAN         reduce using rule 200 (modifier -> VOLATILE .)
    CHAR            reduce using rule 200 (modifier -> VOLATILE .)
    BYTE            reduce using rule 200 (modifier -> VOLATILE .)
    SHORT           reduce using rule 200 (modifier -> VOLATILE .)
    INT             reduce using rule 200 (modifier -> VOLATILE .)
    LONG            reduce using rule 200 (modifier -> VOLATILE .)
    FLOAT           reduce using rule 200 (modifier -> VOLATILE .)
    DOUBLE          reduce using rule 200 (modifier -> VOLATILE .)


state 296

    (40) modifiers -> modifier .

    PUBLIC          reduce using rule 40 (modifiers -> modifier .)
    PROTECTED       reduce using rule 40 (modifiers -> modifier .)
    PRIVATE         reduce using rule 40 (modifiers -> modifier .)
    STATIC          reduce using rule 40 (modifiers -> modifier .)
    ABSTRACT        reduce using rule 40 (modifiers -> modifier .)
    FINAL           reduce using rule 40 (modifiers -> modifier .)
    NATIVE          reduce using rule 40 (modifiers -> modifier .)
    SYNCHRONIZED    reduce using rule 40 (modifiers -> modifier .)
    TRANSIENT       reduce using rule 40 (modifiers -> modifier .)
    VOLATILE        reduce using rule 40 (modifiers -> modifier .)
    STRICTFP        reduce using rule 40 (modifiers -> modifier .)
    CLASS           reduce using rule 40 (modifiers -> modifier .)
    INTERFACE       reduce using rule 40 (modifiers -> modifier .)
    ENUM            reduce using rule 40 (modifiers -> modifier .)
    AT              reduce using rule 40 (modifiers -> modifier .)
    Identifier      reduce using rule 40 (modifiers -> modifier .)
    BOOLEAN         reduce using rule 40 (modifiers -> modifier .)
    CHAR            reduce using rule 40 (modifiers -> modifier .)
    BYTE            reduce using rule 40 (modifiers -> modifier .)
    SHORT           reduce using rule 40 (modifiers -> modifier .)
    INT             reduce using rule 40 (modifiers -> modifier .)
    LONG            reduce using rule 40 (modifiers -> modifier .)
    FLOAT           reduce using rule 40 (modifiers -> modifier .)
    DOUBLE          reduce using rule 40 (modifiers -> modifier .)
    VOID            reduce using rule 40 (modifiers -> modifier .)
    LESS            reduce using rule 40 (modifiers -> modifier .)


state 297

    (191) modifier -> PUBLIC .

    VOID            reduce using rule 191 (modifier -> PUBLIC .)
    PUBLIC          reduce using rule 191 (modifier -> PUBLIC .)
    PROTECTED       reduce using rule 191 (modifier -> PUBLIC .)
    PRIVATE         reduce using rule 191 (modifier -> PUBLIC .)
    STATIC          reduce using rule 191 (modifier -> PUBLIC .)
    ABSTRACT        reduce using rule 191 (modifier -> PUBLIC .)
    FINAL           reduce using rule 191 (modifier -> PUBLIC .)
    NATIVE          reduce using rule 191 (modifier -> PUBLIC .)
    SYNCHRONIZED    reduce using rule 191 (modifier -> PUBLIC .)
    TRANSIENT       reduce using rule 191 (modifier -> PUBLIC .)
    VOLATILE        reduce using rule 191 (modifier -> PUBLIC .)
    STRICTFP        reduce using rule 191 (modifier -> PUBLIC .)
    AT              reduce using rule 191 (modifier -> PUBLIC .)
    LESS            reduce using rule 191 (modifier -> PUBLIC .)
    INTERFACE       reduce using rule 191 (modifier -> PUBLIC .)
    CLASS           reduce using rule 191 (modifier -> PUBLIC .)
    ENUM            reduce using rule 191 (modifier -> PUBLIC .)
    Identifier      reduce using rule 191 (modifier -> PUBLIC .)
    BOOLEAN         reduce using rule 191 (modifier -> PUBLIC .)
    CHAR            reduce using rule 191 (modifier -> PUBLIC .)
    BYTE            reduce using rule 191 (modifier -> PUBLIC .)
    SHORT           reduce using rule 191 (modifier -> PUBLIC .)
    INT             reduce using rule 191 (modifier -> PUBLIC .)
    LONG            reduce using rule 191 (modifier -> PUBLIC .)
    FLOAT           reduce using rule 191 (modifier -> PUBLIC .)
    DOUBLE          reduce using rule 191 (modifier -> PUBLIC .)


state 298

    (95) normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .

    BRPAREN         reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    SEMI            reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    PUBLIC          reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    PROTECTED       reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    PRIVATE         reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    STATIC          reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    ABSTRACT        reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    FINAL           reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    NATIVE          reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    SYNCHRONIZED    reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    TRANSIENT       reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    VOLATILE        reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    STRICTFP        reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    AT              reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    CLASS           reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    INTERFACE       reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    ENUM            reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    Identifier      reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    BOOLEAN         reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    CHAR            reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    BYTE            reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    SHORT           reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    INT             reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    LONG            reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    FLOAT           reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    DOUBLE          reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    BLPAREN         reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    VOID            reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    LESS            reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    $end            reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    ASSERT          reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    IF              reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    FOR             reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    WHILE           reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    DO              reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    TRY             reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    SWITCH          reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    RETURN          reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    THROW           reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    BREAK           reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    CONTINUE        reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    PLUS            reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    DASH            reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    OP_INC          reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    OP_DEC          reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    TILDE           reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    EXCLAMATION     reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    LPAREN          reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    THIS            reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    SUPER           reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    NEW             reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    CharacterLiteral reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    StringLiteral   reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    NULL            reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    LONG_NUMBER     reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    LONG_HEX_NUMBER reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    NON_INTEGER_1   reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    NON_INTEGER_2   reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    NON_INTEGER_3   reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    NON_INTEGER_4   reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    TRUE            reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    FALSE           reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    CASE            reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)
    DEFAULT         reduce using rule 95 (normalInterfaceDeclaration -> INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody .)


state 299

    (105) interfaceBody -> BLPAREN . interfaceBodyDeclarations BRPAREN
    (106) interfaceBody -> BLPAREN . BRPAREN
    (103) interfaceBodyDeclarations -> . interfaceBodyDeclaration
    (104) interfaceBodyDeclarations -> . interfaceBodyDeclarations interfaceBodyDeclaration
    (126) interfaceBodyDeclaration -> . modifiers interfaceMemberDecl
    (127) interfaceBodyDeclaration -> . SEMI
    (40) modifiers -> . modifier
    (41) modifiers -> . modifiers modifier
    (190) modifier -> . annotation
    (191) modifier -> . PUBLIC
    (192) modifier -> . PROTECTED
    (193) modifier -> . PRIVATE
    (194) modifier -> . STATIC
    (195) modifier -> . ABSTRACT
    (196) modifier -> . FINAL
    (197) modifier -> . NATIVE
    (198) modifier -> . SYNCHRONIZED
    (199) modifier -> . TRANSIENT
    (200) modifier -> . VOLATILE
    (201) modifier -> . STRICTFP
    (287) annotation -> . AT annotationName annotationBody

    BRPAREN         shift and go to state 450
    SEMI            shift and go to state 449
    PUBLIC          shift and go to state 297
    PROTECTED       shift and go to state 278
    PRIVATE         shift and go to state 284
    STATIC          shift and go to state 279
    ABSTRACT        shift and go to state 276
    FINAL           shift and go to state 281
    NATIVE          shift and go to state 282
    SYNCHRONIZED    shift and go to state 275
    TRANSIENT       shift and go to state 286
    VOLATILE        shift and go to state 295
    STRICTFP        shift and go to state 285
    AT              shift and go to state 133

    modifiers                      shift and go to state 453
    interfaceBodyDeclarations      shift and go to state 451
    interfaceBodyDeclaration       shift and go to state 452
    modifier                       shift and go to state 296
    annotation                     shift and go to state 291

state 300

    (93) EXTENDS_typeList -> EXTENDS typeList .

    BLPAREN         reduce using rule 93 (EXTENDS_typeList -> EXTENDS typeList .)


state 301

    (51) dotTypeParameters -> dotTypeParameters dotTypeParameter .

    MORE            reduce using rule 51 (dotTypeParameters -> dotTypeParameters dotTypeParameter .)
    COMMA           reduce using rule 51 (dotTypeParameters -> dotTypeParameters dotTypeParameter .)


state 302

    (52) typeParameters -> LESS typeParameter dotTypeParameters MORE .

    VOID            reduce using rule 52 (typeParameters -> LESS typeParameter dotTypeParameters MORE .)
    Identifier      reduce using rule 52 (typeParameters -> LESS typeParameter dotTypeParameters MORE .)
    BOOLEAN         reduce using rule 52 (typeParameters -> LESS typeParameter dotTypeParameters MORE .)
    CHAR            reduce using rule 52 (typeParameters -> LESS typeParameter dotTypeParameters MORE .)
    BYTE            reduce using rule 52 (typeParameters -> LESS typeParameter dotTypeParameters MORE .)
    SHORT           reduce using rule 52 (typeParameters -> LESS typeParameter dotTypeParameters MORE .)
    INT             reduce using rule 52 (typeParameters -> LESS typeParameter dotTypeParameters MORE .)
    LONG            reduce using rule 52 (typeParameters -> LESS typeParameter dotTypeParameters MORE .)
    FLOAT           reduce using rule 52 (typeParameters -> LESS typeParameter dotTypeParameters MORE .)
    DOUBLE          reduce using rule 52 (typeParameters -> LESS typeParameter dotTypeParameters MORE .)
    EXTENDS         reduce using rule 52 (typeParameters -> LESS typeParameter dotTypeParameters MORE .)
    BLPAREN         reduce using rule 52 (typeParameters -> LESS typeParameter dotTypeParameters MORE .)
    IMPLEMENTS      reduce using rule 52 (typeParameters -> LESS typeParameter dotTypeParameters MORE .)


state 303

    (49) dotTypeParameter -> COMMA typeParameter .

    MORE            reduce using rule 49 (dotTypeParameter -> COMMA typeParameter .)
    COMMA           reduce using rule 49 (dotTypeParameter -> COMMA typeParameter .)


state 304

    (55) EXTENDS_typeBound -> EXTENDS typeBound .

    MORE            reduce using rule 55 (EXTENDS_typeBound -> EXTENDS typeBound .)
    COMMA           reduce using rule 55 (EXTENDS_typeBound -> EXTENDS typeBound .)


state 305

    (61) typeBound -> type . and_types
    (62) typeBound -> type .
    (59) and_types -> . and_type
    (60) and_types -> . and_types and_type
    (58) and_type -> . AND type

    MORE            reduce using rule 62 (typeBound -> type .)
    COMMA           reduce using rule 62 (typeBound -> type .)
    AND             shift and go to state 455

    and_types                      shift and go to state 454
    and_type                       shift and go to state 456

state 306

    (101) classBody -> BLPAREN . classBodyDeclarations BRPAREN
    (102) classBody -> BLPAREN . BRPAREN
    (85) classBodyDeclarations -> . classBodyDeclaration
    (86) classBodyDeclarations -> . classBodyDeclarations classBodyDeclaration
    (107) classBodyDeclaration -> . SEMI
    (108) classBodyDeclaration -> . STATIC block
    (109) classBodyDeclaration -> . block
    (110) classBodyDeclaration -> . modifiers memberDecl
    (111) classBodyDeclaration -> . memberDecl
    (329) block -> . BLPAREN blockStatements BRPAREN
    (330) block -> . BLPAREN BRPAREN
    (40) modifiers -> . modifier
    (41) modifiers -> . modifiers modifier
    (112) memberDecl -> . genericMethodOrConstructorDecl
    (113) memberDecl -> . memberDeclaration
    (114) memberDecl -> . VOID Identifier voidMethodDeclaratorRest
    (115) memberDecl -> . Identifier constructorDeclaratorRest
    (116) memberDecl -> . interfaceDeclaration
    (117) memberDecl -> . classDeclaration
    (190) modifier -> . annotation
    (191) modifier -> . PUBLIC
    (192) modifier -> . PROTECTED
    (193) modifier -> . PRIVATE
    (194) modifier -> . STATIC
    (195) modifier -> . ABSTRACT
    (196) modifier -> . FINAL
    (197) modifier -> . NATIVE
    (198) modifier -> . SYNCHRONIZED
    (199) modifier -> . TRANSIENT
    (200) modifier -> . VOLATILE
    (201) modifier -> . STRICTFP
    (120) genericMethodOrConstructorDecl -> . typeParameters genericMethodOrConstructorRest
    (118) memberDeclaration -> . type methodDeclaration
    (119) memberDeclaration -> . type fieldDeclaration
    (89) interfaceDeclaration -> . normalInterfaceDeclaration
    (90) interfaceDeclaration -> . annotationTypeDeclaration
    (42) classDeclaration -> . normalClassDeclaration
    (43) classDeclaration -> . enumDeclaration
    (287) annotation -> . AT annotationName annotationBody
    (52) typeParameters -> . LESS typeParameter dotTypeParameters MORE
    (53) typeParameters -> . LESS typeParameter MORE
    (54) typeParameters -> .
    (205) type -> . type_body
    (206) type -> . primitiveType arrays
    (207) type -> . primitiveType
    (95) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody
    (308) annotationTypeDeclaration -> . AT INTERFACE Identifier annotationTypeBody
    (48) normalClassDeclaration -> . CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody
    (63) enumDeclaration -> . ENUM Identifier IMPLEMENTS_typeList enumBody
    (208) type_body -> . Identifier classOrInterfaceTypeBody arrays
    (209) type_body -> . Identifier classOrInterfaceTypeBody
    (210) type_body -> . Identifier arrays
    (211) type_body -> . Identifier
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE

  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for Identifier resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    BRPAREN         shift and go to state 458
    SEMI            shift and go to state 325
    STATIC          shift and go to state 323
    BLPAREN         shift and go to state 335
    VOID            shift and go to state 322
    Identifier      shift and go to state 331
    PUBLIC          shift and go to state 297
    PROTECTED       shift and go to state 278
    PRIVATE         shift and go to state 284
    ABSTRACT        shift and go to state 276
    FINAL           shift and go to state 281
    NATIVE          shift and go to state 282
    SYNCHRONIZED    shift and go to state 275
    TRANSIENT       shift and go to state 286
    VOLATILE        shift and go to state 295
    STRICTFP        shift and go to state 285
    AT              shift and go to state 330
    LESS            shift and go to state 45
    INTERFACE       shift and go to state 23
    CLASS           shift and go to state 12
    ENUM            shift and go to state 15
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72

  ! VOID            [ reduce using rule 54 (typeParameters -> .) ]
  ! Identifier      [ reduce using rule 54 (typeParameters -> .) ]
  ! BOOLEAN         [ reduce using rule 54 (typeParameters -> .) ]
  ! CHAR            [ reduce using rule 54 (typeParameters -> .) ]
  ! BYTE            [ reduce using rule 54 (typeParameters -> .) ]
  ! SHORT           [ reduce using rule 54 (typeParameters -> .) ]
  ! INT             [ reduce using rule 54 (typeParameters -> .) ]
  ! LONG            [ reduce using rule 54 (typeParameters -> .) ]
  ! FLOAT           [ reduce using rule 54 (typeParameters -> .) ]
  ! DOUBLE          [ reduce using rule 54 (typeParameters -> .) ]

    memberDecl                     shift and go to state 334
    primitiveType                  shift and go to state 74
    typeParameters                 shift and go to state 324
    normalInterfaceDeclaration     shift and go to state 5
    classBodyDeclarations          shift and go to state 457
    memberDeclaration              shift and go to state 326
    type                           shift and go to state 327
    enumDeclaration                shift and go to state 13
    genericMethodOrConstructorDecl shift and go to state 328
    classDeclaration               shift and go to state 329
    annotation                     shift and go to state 291
    modifiers                      shift and go to state 332
    normalClassDeclaration         shift and go to state 7
    type_body                      shift and go to state 77
    annotationTypeDeclaration      shift and go to state 21
    interfaceDeclaration           shift and go to state 336
    classBodyDeclaration           shift and go to state 337
    modifier                       shift and go to state 296
    block                          shift and go to state 338

state 307

    (48) normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .

    BRPAREN         reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    SEMI            reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    STATIC          reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    BLPAREN         reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    VOID            reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    Identifier      reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    PUBLIC          reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    PROTECTED       reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    PRIVATE         reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    ABSTRACT        reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    FINAL           reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    NATIVE          reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    SYNCHRONIZED    reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    TRANSIENT       reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    VOLATILE        reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    STRICTFP        reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    AT              reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    LESS            reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    INTERFACE       reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    CLASS           reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    ENUM            reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    BOOLEAN         reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    CHAR            reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    BYTE            reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    SHORT           reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    INT             reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    LONG            reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    FLOAT           reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    DOUBLE          reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    ASSERT          reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    IF              reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    FOR             reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    WHILE           reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    DO              reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    TRY             reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    SWITCH          reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    RETURN          reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    THROW           reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    BREAK           reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    CONTINUE        reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    PLUS            reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    DASH            reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    OP_INC          reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    OP_DEC          reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    TILDE           reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    EXCLAMATION     reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    LPAREN          reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    THIS            reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    SUPER           reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    NEW             reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    CharacterLiteral reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    StringLiteral   reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    NULL            reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    LONG_NUMBER     reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    LONG_HEX_NUMBER reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    NON_INTEGER_1   reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    NON_INTEGER_2   reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    NON_INTEGER_3   reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    NON_INTEGER_4   reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    TRUE            reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    FALSE           reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    $end            reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    CASE            reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)
    DEFAULT         reduce using rule 48 (normalClassDeclaration -> CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody .)


state 308

    (138) arrays -> arrays array .

    DOT             reduce using rule 138 (arrays -> arrays array .)
    FLPAREN         reduce using rule 138 (arrays -> arrays array .)
    Identifier      reduce using rule 138 (arrays -> arrays array .)
    EQUALS          reduce using rule 138 (arrays -> arrays array .)
    COMMA           reduce using rule 138 (arrays -> arrays array .)
    SEMI            reduce using rule 138 (arrays -> arrays array .)
    BLPAREN         reduce using rule 138 (arrays -> arrays array .)
    IMPLEMENTS      reduce using rule 138 (arrays -> arrays array .)
    AND             reduce using rule 138 (arrays -> arrays array .)
    MORE            reduce using rule 138 (arrays -> arrays array .)
    OP_EQ           reduce using rule 138 (arrays -> arrays array .)
    OP_NE           reduce using rule 138 (arrays -> arrays array .)
    CARET           reduce using rule 138 (arrays -> arrays array .)
    VERTICAL        reduce using rule 138 (arrays -> arrays array .)
    OP_LAND         reduce using rule 138 (arrays -> arrays array .)
    OP_LOR          reduce using rule 138 (arrays -> arrays array .)
    QUES            reduce using rule 138 (arrays -> arrays array .)
    RPAREN          reduce using rule 138 (arrays -> arrays array .)
    BRPAREN         reduce using rule 138 (arrays -> arrays array .)
    ASS_ADD         reduce using rule 138 (arrays -> arrays array .)
    ASS_SUB         reduce using rule 138 (arrays -> arrays array .)
    ASS_MUL         reduce using rule 138 (arrays -> arrays array .)
    ASS_DIV         reduce using rule 138 (arrays -> arrays array .)
    ASS_AND         reduce using rule 138 (arrays -> arrays array .)
    ASS_OR          reduce using rule 138 (arrays -> arrays array .)
    ASS_XOR         reduce using rule 138 (arrays -> arrays array .)
    ASS_MOD         reduce using rule 138 (arrays -> arrays array .)
    ASS_SHL         reduce using rule 138 (arrays -> arrays array .)
    ASS_SHRR        reduce using rule 138 (arrays -> arrays array .)
    ASS_SHR         reduce using rule 138 (arrays -> arrays array .)
    FRPAREN         reduce using rule 138 (arrays -> arrays array .)
    COLON           reduce using rule 138 (arrays -> arrays array .)
    OP_ARRAY        reduce using rule 138 (arrays -> arrays array .)
    THROWS          reduce using rule 138 (arrays -> arrays array .)
    OP_INC          reduce using rule 138 (arrays -> arrays array .)
    OP_DEC          reduce using rule 138 (arrays -> arrays array .)
    MULT            reduce using rule 138 (arrays -> arrays array .)
    SLASH           reduce using rule 138 (arrays -> arrays array .)
    PERCENT         reduce using rule 138 (arrays -> arrays array .)
    PLUS            reduce using rule 138 (arrays -> arrays array .)
    DASH            reduce using rule 138 (arrays -> arrays array .)
    OP_SHR          reduce using rule 138 (arrays -> arrays array .)
    OP_SHRR         reduce using rule 138 (arrays -> arrays array .)
    OP_SHL          reduce using rule 138 (arrays -> arrays array .)
    OP_LE           reduce using rule 138 (arrays -> arrays array .)
    OP_GE           reduce using rule 138 (arrays -> arrays array .)
    LESS            reduce using rule 138 (arrays -> arrays array .)
    INSTANCEOF      reduce using rule 138 (arrays -> arrays array .)


state 309

    (137) array -> FLPAREN FRPAREN .

    FLPAREN         reduce using rule 137 (array -> FLPAREN FRPAREN .)
    COMMA           reduce using rule 137 (array -> FLPAREN FRPAREN .)
    BLPAREN         reduce using rule 137 (array -> FLPAREN FRPAREN .)
    IMPLEMENTS      reduce using rule 137 (array -> FLPAREN FRPAREN .)
    Identifier      reduce using rule 137 (array -> FLPAREN FRPAREN .)
    AND             reduce using rule 137 (array -> FLPAREN FRPAREN .)
    MORE            reduce using rule 137 (array -> FLPAREN FRPAREN .)
    OP_EQ           reduce using rule 137 (array -> FLPAREN FRPAREN .)
    OP_NE           reduce using rule 137 (array -> FLPAREN FRPAREN .)
    CARET           reduce using rule 137 (array -> FLPAREN FRPAREN .)
    VERTICAL        reduce using rule 137 (array -> FLPAREN FRPAREN .)
    OP_LAND         reduce using rule 137 (array -> FLPAREN FRPAREN .)
    OP_LOR          reduce using rule 137 (array -> FLPAREN FRPAREN .)
    QUES            reduce using rule 137 (array -> FLPAREN FRPAREN .)
    RPAREN          reduce using rule 137 (array -> FLPAREN FRPAREN .)
    BRPAREN         reduce using rule 137 (array -> FLPAREN FRPAREN .)
    EQUALS          reduce using rule 137 (array -> FLPAREN FRPAREN .)
    ASS_ADD         reduce using rule 137 (array -> FLPAREN FRPAREN .)
    ASS_SUB         reduce using rule 137 (array -> FLPAREN FRPAREN .)
    ASS_MUL         reduce using rule 137 (array -> FLPAREN FRPAREN .)
    ASS_DIV         reduce using rule 137 (array -> FLPAREN FRPAREN .)
    ASS_AND         reduce using rule 137 (array -> FLPAREN FRPAREN .)
    ASS_OR          reduce using rule 137 (array -> FLPAREN FRPAREN .)
    ASS_XOR         reduce using rule 137 (array -> FLPAREN FRPAREN .)
    ASS_MOD         reduce using rule 137 (array -> FLPAREN FRPAREN .)
    ASS_SHL         reduce using rule 137 (array -> FLPAREN FRPAREN .)
    ASS_SHRR        reduce using rule 137 (array -> FLPAREN FRPAREN .)
    ASS_SHR         reduce using rule 137 (array -> FLPAREN FRPAREN .)
    FRPAREN         reduce using rule 137 (array -> FLPAREN FRPAREN .)
    COLON           reduce using rule 137 (array -> FLPAREN FRPAREN .)
    SEMI            reduce using rule 137 (array -> FLPAREN FRPAREN .)
    OP_ARRAY        reduce using rule 137 (array -> FLPAREN FRPAREN .)
    DOT             reduce using rule 137 (array -> FLPAREN FRPAREN .)
    THROWS          reduce using rule 137 (array -> FLPAREN FRPAREN .)
    OP_INC          reduce using rule 137 (array -> FLPAREN FRPAREN .)
    OP_DEC          reduce using rule 137 (array -> FLPAREN FRPAREN .)
    MULT            reduce using rule 137 (array -> FLPAREN FRPAREN .)
    SLASH           reduce using rule 137 (array -> FLPAREN FRPAREN .)
    PERCENT         reduce using rule 137 (array -> FLPAREN FRPAREN .)
    PLUS            reduce using rule 137 (array -> FLPAREN FRPAREN .)
    DASH            reduce using rule 137 (array -> FLPAREN FRPAREN .)
    OP_SHR          reduce using rule 137 (array -> FLPAREN FRPAREN .)
    OP_SHRR         reduce using rule 137 (array -> FLPAREN FRPAREN .)
    OP_SHL          reduce using rule 137 (array -> FLPAREN FRPAREN .)
    OP_LE           reduce using rule 137 (array -> FLPAREN FRPAREN .)
    OP_GE           reduce using rule 137 (array -> FLPAREN FRPAREN .)
    LESS            reduce using rule 137 (array -> FLPAREN FRPAREN .)
    INSTANCEOF      reduce using rule 137 (array -> FLPAREN FRPAREN .)


state 310

    (208) type_body -> Identifier classOrInterfaceTypeBody arrays .
    (138) arrays -> arrays . array
    (137) array -> . FLPAREN FRPAREN

    Identifier      reduce using rule 208 (type_body -> Identifier classOrInterfaceTypeBody arrays .)
    COMMA           reduce using rule 208 (type_body -> Identifier classOrInterfaceTypeBody arrays .)
    MORE            reduce using rule 208 (type_body -> Identifier classOrInterfaceTypeBody arrays .)
    RPAREN          reduce using rule 208 (type_body -> Identifier classOrInterfaceTypeBody arrays .)
    AND             reduce using rule 208 (type_body -> Identifier classOrInterfaceTypeBody arrays .)
    BLPAREN         reduce using rule 208 (type_body -> Identifier classOrInterfaceTypeBody arrays .)
    IMPLEMENTS      reduce using rule 208 (type_body -> Identifier classOrInterfaceTypeBody arrays .)
    OP_ARRAY        reduce using rule 208 (type_body -> Identifier classOrInterfaceTypeBody arrays .)
    OP_EQ           reduce using rule 208 (type_body -> Identifier classOrInterfaceTypeBody arrays .)
    OP_NE           reduce using rule 208 (type_body -> Identifier classOrInterfaceTypeBody arrays .)
    CARET           reduce using rule 208 (type_body -> Identifier classOrInterfaceTypeBody arrays .)
    VERTICAL        reduce using rule 208 (type_body -> Identifier classOrInterfaceTypeBody arrays .)
    OP_LAND         reduce using rule 208 (type_body -> Identifier classOrInterfaceTypeBody arrays .)
    OP_LOR          reduce using rule 208 (type_body -> Identifier classOrInterfaceTypeBody arrays .)
    QUES            reduce using rule 208 (type_body -> Identifier classOrInterfaceTypeBody arrays .)
    BRPAREN         reduce using rule 208 (type_body -> Identifier classOrInterfaceTypeBody arrays .)
    EQUALS          reduce using rule 208 (type_body -> Identifier classOrInterfaceTypeBody arrays .)
    ASS_ADD         reduce using rule 208 (type_body -> Identifier classOrInterfaceTypeBody arrays .)
    ASS_SUB         reduce using rule 208 (type_body -> Identifier classOrInterfaceTypeBody arrays .)
    ASS_MUL         reduce using rule 208 (type_body -> Identifier classOrInterfaceTypeBody arrays .)
    ASS_DIV         reduce using rule 208 (type_body -> Identifier classOrInterfaceTypeBody arrays .)
    ASS_AND         reduce using rule 208 (type_body -> Identifier classOrInterfaceTypeBody arrays .)
    ASS_OR          reduce using rule 208 (type_body -> Identifier classOrInterfaceTypeBody arrays .)
    ASS_XOR         reduce using rule 208 (type_body -> Identifier classOrInterfaceTypeBody arrays .)
    ASS_MOD         reduce using rule 208 (type_body -> Identifier classOrInterfaceTypeBody arrays .)
    ASS_SHL         reduce using rule 208 (type_body -> Identifier classOrInterfaceTypeBody arrays .)
    ASS_SHRR        reduce using rule 208 (type_body -> Identifier classOrInterfaceTypeBody arrays .)
    ASS_SHR         reduce using rule 208 (type_body -> Identifier classOrInterfaceTypeBody arrays .)
    FRPAREN         reduce using rule 208 (type_body -> Identifier classOrInterfaceTypeBody arrays .)
    COLON           reduce using rule 208 (type_body -> Identifier classOrInterfaceTypeBody arrays .)
    SEMI            reduce using rule 208 (type_body -> Identifier classOrInterfaceTypeBody arrays .)
    FLPAREN         shift and go to state 153

    array                          shift and go to state 308

state 311

    (234) typeArguments -> LESS typeArgument . COMMA_typeArguments MORE
    (235) typeArguments -> LESS typeArgument . MORE
    (232) COMMA_typeArguments -> . COMMA_typeArgument
    (233) COMMA_typeArguments -> . COMMA_typeArguments COMMA_typeArgument
    (231) COMMA_typeArgument -> . COMMA typeArgument

    MORE            shift and go to state 462
    COMMA           shift and go to state 461

    COMMA_typeArgument             shift and go to state 460
    COMMA_typeArguments            shift and go to state 459

state 312

    (240) typeArgument -> QUES . typeArgumentStatment
    (236) typeArgumentStatment -> . EXTENDS type
    (237) typeArgumentStatment -> . SUPER type
    (238) typeArgumentStatment -> . empty
    (562) empty -> .

    EXTENDS         shift and go to state 465
    SUPER           shift and go to state 464
    MORE            reduce using rule 562 (empty -> .)
    COMMA           reduce using rule 562 (empty -> .)

    typeArgumentStatment           shift and go to state 463
    empty                          shift and go to state 466

state 313

    (239) typeArgument -> type .

    MORE            reduce using rule 239 (typeArgument -> type .)
    COMMA           reduce using rule 239 (typeArgument -> type .)


state 314

    (212) classOrInterfaceTypeBody -> typeArguments classOrInterfaceTypeStatements .
    (218) classOrInterfaceTypeStatements -> classOrInterfaceTypeStatements . classOrInterfaceTypeStatement
    (215) classOrInterfaceTypeStatement -> . DOT Identifier typeArguments
    (216) classOrInterfaceTypeStatement -> . DOT Identifier

    FLPAREN         reduce using rule 212 (classOrInterfaceTypeBody -> typeArguments classOrInterfaceTypeStatements .)
    Identifier      reduce using rule 212 (classOrInterfaceTypeBody -> typeArguments classOrInterfaceTypeStatements .)
    COMMA           reduce using rule 212 (classOrInterfaceTypeBody -> typeArguments classOrInterfaceTypeStatements .)
    BLPAREN         reduce using rule 212 (classOrInterfaceTypeBody -> typeArguments classOrInterfaceTypeStatements .)
    IMPLEMENTS      reduce using rule 212 (classOrInterfaceTypeBody -> typeArguments classOrInterfaceTypeStatements .)
    AND             reduce using rule 212 (classOrInterfaceTypeBody -> typeArguments classOrInterfaceTypeStatements .)
    MORE            reduce using rule 212 (classOrInterfaceTypeBody -> typeArguments classOrInterfaceTypeStatements .)
    OP_EQ           reduce using rule 212 (classOrInterfaceTypeBody -> typeArguments classOrInterfaceTypeStatements .)
    OP_NE           reduce using rule 212 (classOrInterfaceTypeBody -> typeArguments classOrInterfaceTypeStatements .)
    CARET           reduce using rule 212 (classOrInterfaceTypeBody -> typeArguments classOrInterfaceTypeStatements .)
    VERTICAL        reduce using rule 212 (classOrInterfaceTypeBody -> typeArguments classOrInterfaceTypeStatements .)
    OP_LAND         reduce using rule 212 (classOrInterfaceTypeBody -> typeArguments classOrInterfaceTypeStatements .)
    OP_LOR          reduce using rule 212 (classOrInterfaceTypeBody -> typeArguments classOrInterfaceTypeStatements .)
    QUES            reduce using rule 212 (classOrInterfaceTypeBody -> typeArguments classOrInterfaceTypeStatements .)
    RPAREN          reduce using rule 212 (classOrInterfaceTypeBody -> typeArguments classOrInterfaceTypeStatements .)
    BRPAREN         reduce using rule 212 (classOrInterfaceTypeBody -> typeArguments classOrInterfaceTypeStatements .)
    EQUALS          reduce using rule 212 (classOrInterfaceTypeBody -> typeArguments classOrInterfaceTypeStatements .)
    ASS_ADD         reduce using rule 212 (classOrInterfaceTypeBody -> typeArguments classOrInterfaceTypeStatements .)
    ASS_SUB         reduce using rule 212 (classOrInterfaceTypeBody -> typeArguments classOrInterfaceTypeStatements .)
    ASS_MUL         reduce using rule 212 (classOrInterfaceTypeBody -> typeArguments classOrInterfaceTypeStatements .)
    ASS_DIV         reduce using rule 212 (classOrInterfaceTypeBody -> typeArguments classOrInterfaceTypeStatements .)
    ASS_AND         reduce using rule 212 (classOrInterfaceTypeBody -> typeArguments classOrInterfaceTypeStatements .)
    ASS_OR          reduce using rule 212 (classOrInterfaceTypeBody -> typeArguments classOrInterfaceTypeStatements .)
    ASS_XOR         reduce using rule 212 (classOrInterfaceTypeBody -> typeArguments classOrInterfaceTypeStatements .)
    ASS_MOD         reduce using rule 212 (classOrInterfaceTypeBody -> typeArguments classOrInterfaceTypeStatements .)
    ASS_SHL         reduce using rule 212 (classOrInterfaceTypeBody -> typeArguments classOrInterfaceTypeStatements .)
    ASS_SHRR        reduce using rule 212 (classOrInterfaceTypeBody -> typeArguments classOrInterfaceTypeStatements .)
    ASS_SHR         reduce using rule 212 (classOrInterfaceTypeBody -> typeArguments classOrInterfaceTypeStatements .)
    FRPAREN         reduce using rule 212 (classOrInterfaceTypeBody -> typeArguments classOrInterfaceTypeStatements .)
    COLON           reduce using rule 212 (classOrInterfaceTypeBody -> typeArguments classOrInterfaceTypeStatements .)
    SEMI            reduce using rule 212 (classOrInterfaceTypeBody -> typeArguments classOrInterfaceTypeStatements .)
    OP_ARRAY        reduce using rule 212 (classOrInterfaceTypeBody -> typeArguments classOrInterfaceTypeStatements .)
    LPAREN          reduce using rule 212 (classOrInterfaceTypeBody -> typeArguments classOrInterfaceTypeStatements .)
    DOT             shift and go to state 161

    classOrInterfaceTypeStatement  shift and go to state 315

state 315

    (218) classOrInterfaceTypeStatements -> classOrInterfaceTypeStatements classOrInterfaceTypeStatement .

    DOT             reduce using rule 218 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatements classOrInterfaceTypeStatement .)
    FLPAREN         reduce using rule 218 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatements classOrInterfaceTypeStatement .)
    RPAREN          reduce using rule 218 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatements classOrInterfaceTypeStatement .)
    Identifier      reduce using rule 218 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatements classOrInterfaceTypeStatement .)
    COMMA           reduce using rule 218 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatements classOrInterfaceTypeStatement .)
    BLPAREN         reduce using rule 218 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatements classOrInterfaceTypeStatement .)
    IMPLEMENTS      reduce using rule 218 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatements classOrInterfaceTypeStatement .)
    AND             reduce using rule 218 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatements classOrInterfaceTypeStatement .)
    MORE            reduce using rule 218 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatements classOrInterfaceTypeStatement .)
    OP_EQ           reduce using rule 218 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatements classOrInterfaceTypeStatement .)
    OP_NE           reduce using rule 218 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatements classOrInterfaceTypeStatement .)
    CARET           reduce using rule 218 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatements classOrInterfaceTypeStatement .)
    VERTICAL        reduce using rule 218 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatements classOrInterfaceTypeStatement .)
    OP_LAND         reduce using rule 218 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatements classOrInterfaceTypeStatement .)
    OP_LOR          reduce using rule 218 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatements classOrInterfaceTypeStatement .)
    QUES            reduce using rule 218 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatements classOrInterfaceTypeStatement .)
    BRPAREN         reduce using rule 218 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatements classOrInterfaceTypeStatement .)
    EQUALS          reduce using rule 218 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatements classOrInterfaceTypeStatement .)
    ASS_ADD         reduce using rule 218 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatements classOrInterfaceTypeStatement .)
    ASS_SUB         reduce using rule 218 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatements classOrInterfaceTypeStatement .)
    ASS_MUL         reduce using rule 218 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatements classOrInterfaceTypeStatement .)
    ASS_DIV         reduce using rule 218 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatements classOrInterfaceTypeStatement .)
    ASS_AND         reduce using rule 218 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatements classOrInterfaceTypeStatement .)
    ASS_OR          reduce using rule 218 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatements classOrInterfaceTypeStatement .)
    ASS_XOR         reduce using rule 218 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatements classOrInterfaceTypeStatement .)
    ASS_MOD         reduce using rule 218 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatements classOrInterfaceTypeStatement .)
    ASS_SHL         reduce using rule 218 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatements classOrInterfaceTypeStatement .)
    ASS_SHRR        reduce using rule 218 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatements classOrInterfaceTypeStatement .)
    ASS_SHR         reduce using rule 218 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatements classOrInterfaceTypeStatement .)
    FRPAREN         reduce using rule 218 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatements classOrInterfaceTypeStatement .)
    COLON           reduce using rule 218 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatements classOrInterfaceTypeStatement .)
    SEMI            reduce using rule 218 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatements classOrInterfaceTypeStatement .)
    OP_ARRAY        reduce using rule 218 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatements classOrInterfaceTypeStatement .)
    LPAREN          reduce using rule 218 (classOrInterfaceTypeStatements -> classOrInterfaceTypeStatements classOrInterfaceTypeStatement .)


state 316

    (215) classOrInterfaceTypeStatement -> DOT Identifier . typeArguments
    (216) classOrInterfaceTypeStatement -> DOT Identifier .
    (234) typeArguments -> . LESS typeArgument COMMA_typeArguments MORE
    (235) typeArguments -> . LESS typeArgument MORE

    DOT             reduce using rule 216 (classOrInterfaceTypeStatement -> DOT Identifier .)
    FLPAREN         reduce using rule 216 (classOrInterfaceTypeStatement -> DOT Identifier .)
    COMMA           reduce using rule 216 (classOrInterfaceTypeStatement -> DOT Identifier .)
    BLPAREN         reduce using rule 216 (classOrInterfaceTypeStatement -> DOT Identifier .)
    IMPLEMENTS      reduce using rule 216 (classOrInterfaceTypeStatement -> DOT Identifier .)
    Identifier      reduce using rule 216 (classOrInterfaceTypeStatement -> DOT Identifier .)
    AND             reduce using rule 216 (classOrInterfaceTypeStatement -> DOT Identifier .)
    MORE            reduce using rule 216 (classOrInterfaceTypeStatement -> DOT Identifier .)
    OP_EQ           reduce using rule 216 (classOrInterfaceTypeStatement -> DOT Identifier .)
    OP_NE           reduce using rule 216 (classOrInterfaceTypeStatement -> DOT Identifier .)
    CARET           reduce using rule 216 (classOrInterfaceTypeStatement -> DOT Identifier .)
    VERTICAL        reduce using rule 216 (classOrInterfaceTypeStatement -> DOT Identifier .)
    OP_LAND         reduce using rule 216 (classOrInterfaceTypeStatement -> DOT Identifier .)
    OP_LOR          reduce using rule 216 (classOrInterfaceTypeStatement -> DOT Identifier .)
    QUES            reduce using rule 216 (classOrInterfaceTypeStatement -> DOT Identifier .)
    RPAREN          reduce using rule 216 (classOrInterfaceTypeStatement -> DOT Identifier .)
    BRPAREN         reduce using rule 216 (classOrInterfaceTypeStatement -> DOT Identifier .)
    EQUALS          reduce using rule 216 (classOrInterfaceTypeStatement -> DOT Identifier .)
    ASS_ADD         reduce using rule 216 (classOrInterfaceTypeStatement -> DOT Identifier .)
    ASS_SUB         reduce using rule 216 (classOrInterfaceTypeStatement -> DOT Identifier .)
    ASS_MUL         reduce using rule 216 (classOrInterfaceTypeStatement -> DOT Identifier .)
    ASS_DIV         reduce using rule 216 (classOrInterfaceTypeStatement -> DOT Identifier .)
    ASS_AND         reduce using rule 216 (classOrInterfaceTypeStatement -> DOT Identifier .)
    ASS_OR          reduce using rule 216 (classOrInterfaceTypeStatement -> DOT Identifier .)
    ASS_XOR         reduce using rule 216 (classOrInterfaceTypeStatement -> DOT Identifier .)
    ASS_MOD         reduce using rule 216 (classOrInterfaceTypeStatement -> DOT Identifier .)
    ASS_SHL         reduce using rule 216 (classOrInterfaceTypeStatement -> DOT Identifier .)
    ASS_SHRR        reduce using rule 216 (classOrInterfaceTypeStatement -> DOT Identifier .)
    ASS_SHR         reduce using rule 216 (classOrInterfaceTypeStatement -> DOT Identifier .)
    FRPAREN         reduce using rule 216 (classOrInterfaceTypeStatement -> DOT Identifier .)
    COLON           reduce using rule 216 (classOrInterfaceTypeStatement -> DOT Identifier .)
    SEMI            reduce using rule 216 (classOrInterfaceTypeStatement -> DOT Identifier .)
    OP_ARRAY        reduce using rule 216 (classOrInterfaceTypeStatement -> DOT Identifier .)
    LPAREN          reduce using rule 216 (classOrInterfaceTypeStatement -> DOT Identifier .)
    LESS            shift and go to state 156

    typeArguments                  shift and go to state 467

state 317

    (98) COMMA_types -> COMMA_types COMMA_type .

    COMMA           reduce using rule 98 (COMMA_types -> COMMA_types COMMA_type .)
    BLPAREN         reduce using rule 98 (COMMA_types -> COMMA_types COMMA_type .)
    MORE            reduce using rule 98 (COMMA_types -> COMMA_types COMMA_type .)


state 318

    (96) COMMA_type -> COMMA type .

    COMMA           reduce using rule 96 (COMMA_type -> COMMA type .)
    BLPAREN         reduce using rule 96 (COMMA_type -> COMMA type .)
    MORE            reduce using rule 96 (COMMA_type -> COMMA type .)


state 319

    (76) enumConstants -> enumConstant COMMA_enumConstants .

    COMMA           reduce using rule 76 (enumConstants -> enumConstant COMMA_enumConstants .)
    SEMI            reduce using rule 76 (enumConstants -> enumConstant COMMA_enumConstants .)
    BRPAREN         reduce using rule 76 (enumConstants -> enumConstant COMMA_enumConstants .)


state 320

    (73) COMMA_enumConstant -> COMMA . enumConstant
    (84) enumConstant -> . annotations_once Identifier arguments_once classBody_once
    (78) annotations_once -> . annotations
    (79) annotations_once -> . empty
    (281) annotations -> . annotation
    (282) annotations -> . annotations annotation
    (562) empty -> .
    (287) annotation -> . AT annotationName annotationBody

    Identifier      reduce using rule 562 (empty -> .)
    AT              shift and go to state 133

    enumConstant                   shift and go to state 468
    annotations_once               shift and go to state 174
    annotation                     shift and go to state 173
    annotations                    shift and go to state 169
    empty                          shift and go to state 172

state 321

    (74) COMMA_enumConstants -> COMMA_enumConstant .
    (75) COMMA_enumConstants -> COMMA_enumConstant . COMMA_enumConstants
    (74) COMMA_enumConstants -> . COMMA_enumConstant
    (75) COMMA_enumConstants -> . COMMA_enumConstant COMMA_enumConstants
    (73) COMMA_enumConstant -> . COMMA enumConstant

  ! shift/reduce conflict for COMMA resolved as shift
    SEMI            reduce using rule 74 (COMMA_enumConstants -> COMMA_enumConstant .)
    BRPAREN         reduce using rule 74 (COMMA_enumConstants -> COMMA_enumConstant .)
    COMMA           shift and go to state 320

  ! COMMA           [ reduce using rule 74 (COMMA_enumConstants -> COMMA_enumConstant .) ]

    COMMA_enumConstant             shift and go to state 321
    COMMA_enumConstants            shift and go to state 469

state 322

    (114) memberDecl -> VOID . Identifier voidMethodDeclaratorRest

    Identifier      shift and go to state 470


state 323

    (108) classBodyDeclaration -> STATIC . block
    (194) modifier -> STATIC .
    (329) block -> . BLPAREN blockStatements BRPAREN
    (330) block -> . BLPAREN BRPAREN

    VOID            reduce using rule 194 (modifier -> STATIC .)
    Identifier      reduce using rule 194 (modifier -> STATIC .)
    PUBLIC          reduce using rule 194 (modifier -> STATIC .)
    PROTECTED       reduce using rule 194 (modifier -> STATIC .)
    PRIVATE         reduce using rule 194 (modifier -> STATIC .)
    STATIC          reduce using rule 194 (modifier -> STATIC .)
    ABSTRACT        reduce using rule 194 (modifier -> STATIC .)
    FINAL           reduce using rule 194 (modifier -> STATIC .)
    NATIVE          reduce using rule 194 (modifier -> STATIC .)
    SYNCHRONIZED    reduce using rule 194 (modifier -> STATIC .)
    TRANSIENT       reduce using rule 194 (modifier -> STATIC .)
    VOLATILE        reduce using rule 194 (modifier -> STATIC .)
    STRICTFP        reduce using rule 194 (modifier -> STATIC .)
    AT              reduce using rule 194 (modifier -> STATIC .)
    LESS            reduce using rule 194 (modifier -> STATIC .)
    INTERFACE       reduce using rule 194 (modifier -> STATIC .)
    CLASS           reduce using rule 194 (modifier -> STATIC .)
    ENUM            reduce using rule 194 (modifier -> STATIC .)
    BOOLEAN         reduce using rule 194 (modifier -> STATIC .)
    CHAR            reduce using rule 194 (modifier -> STATIC .)
    BYTE            reduce using rule 194 (modifier -> STATIC .)
    SHORT           reduce using rule 194 (modifier -> STATIC .)
    INT             reduce using rule 194 (modifier -> STATIC .)
    LONG            reduce using rule 194 (modifier -> STATIC .)
    FLOAT           reduce using rule 194 (modifier -> STATIC .)
    DOUBLE          reduce using rule 194 (modifier -> STATIC .)
    BLPAREN         shift and go to state 335

    block                          shift and go to state 471

state 324

    (120) genericMethodOrConstructorDecl -> typeParameters . genericMethodOrConstructorRest
    (121) genericMethodOrConstructorRest -> . type Identifier methodDeclaratorRest
    (122) genericMethodOrConstructorRest -> . VOID Identifier methodDeclaratorRest
    (123) genericMethodOrConstructorRest -> . Identifier constructorDeclaratorRest
    (205) type -> . type_body
    (206) type -> . primitiveType arrays
    (207) type -> . primitiveType
    (208) type_body -> . Identifier classOrInterfaceTypeBody arrays
    (209) type_body -> . Identifier classOrInterfaceTypeBody
    (210) type_body -> . Identifier arrays
    (211) type_body -> . Identifier
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE

    VOID            shift and go to state 472
    Identifier      shift and go to state 474
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72

    primitiveType                  shift and go to state 74
    type_body                      shift and go to state 77
    genericMethodOrConstructorRest shift and go to state 473
    type                           shift and go to state 475

state 325

    (107) classBodyDeclaration -> SEMI .

    BRPAREN         reduce using rule 107 (classBodyDeclaration -> SEMI .)
    SEMI            reduce using rule 107 (classBodyDeclaration -> SEMI .)
    STATIC          reduce using rule 107 (classBodyDeclaration -> SEMI .)
    BLPAREN         reduce using rule 107 (classBodyDeclaration -> SEMI .)
    VOID            reduce using rule 107 (classBodyDeclaration -> SEMI .)
    Identifier      reduce using rule 107 (classBodyDeclaration -> SEMI .)
    PUBLIC          reduce using rule 107 (classBodyDeclaration -> SEMI .)
    PROTECTED       reduce using rule 107 (classBodyDeclaration -> SEMI .)
    PRIVATE         reduce using rule 107 (classBodyDeclaration -> SEMI .)
    ABSTRACT        reduce using rule 107 (classBodyDeclaration -> SEMI .)
    FINAL           reduce using rule 107 (classBodyDeclaration -> SEMI .)
    NATIVE          reduce using rule 107 (classBodyDeclaration -> SEMI .)
    SYNCHRONIZED    reduce using rule 107 (classBodyDeclaration -> SEMI .)
    TRANSIENT       reduce using rule 107 (classBodyDeclaration -> SEMI .)
    VOLATILE        reduce using rule 107 (classBodyDeclaration -> SEMI .)
    STRICTFP        reduce using rule 107 (classBodyDeclaration -> SEMI .)
    AT              reduce using rule 107 (classBodyDeclaration -> SEMI .)
    LESS            reduce using rule 107 (classBodyDeclaration -> SEMI .)
    INTERFACE       reduce using rule 107 (classBodyDeclaration -> SEMI .)
    CLASS           reduce using rule 107 (classBodyDeclaration -> SEMI .)
    ENUM            reduce using rule 107 (classBodyDeclaration -> SEMI .)
    BOOLEAN         reduce using rule 107 (classBodyDeclaration -> SEMI .)
    CHAR            reduce using rule 107 (classBodyDeclaration -> SEMI .)
    BYTE            reduce using rule 107 (classBodyDeclaration -> SEMI .)
    SHORT           reduce using rule 107 (classBodyDeclaration -> SEMI .)
    INT             reduce using rule 107 (classBodyDeclaration -> SEMI .)
    LONG            reduce using rule 107 (classBodyDeclaration -> SEMI .)
    FLOAT           reduce using rule 107 (classBodyDeclaration -> SEMI .)
    DOUBLE          reduce using rule 107 (classBodyDeclaration -> SEMI .)


state 326

    (113) memberDecl -> memberDeclaration .

    SEMI            reduce using rule 113 (memberDecl -> memberDeclaration .)
    STATIC          reduce using rule 113 (memberDecl -> memberDeclaration .)
    BLPAREN         reduce using rule 113 (memberDecl -> memberDeclaration .)
    VOID            reduce using rule 113 (memberDecl -> memberDeclaration .)
    Identifier      reduce using rule 113 (memberDecl -> memberDeclaration .)
    PUBLIC          reduce using rule 113 (memberDecl -> memberDeclaration .)
    PROTECTED       reduce using rule 113 (memberDecl -> memberDeclaration .)
    PRIVATE         reduce using rule 113 (memberDecl -> memberDeclaration .)
    ABSTRACT        reduce using rule 113 (memberDecl -> memberDeclaration .)
    FINAL           reduce using rule 113 (memberDecl -> memberDeclaration .)
    NATIVE          reduce using rule 113 (memberDecl -> memberDeclaration .)
    SYNCHRONIZED    reduce using rule 113 (memberDecl -> memberDeclaration .)
    TRANSIENT       reduce using rule 113 (memberDecl -> memberDeclaration .)
    VOLATILE        reduce using rule 113 (memberDecl -> memberDeclaration .)
    STRICTFP        reduce using rule 113 (memberDecl -> memberDeclaration .)
    AT              reduce using rule 113 (memberDecl -> memberDeclaration .)
    LESS            reduce using rule 113 (memberDecl -> memberDeclaration .)
    INTERFACE       reduce using rule 113 (memberDecl -> memberDeclaration .)
    CLASS           reduce using rule 113 (memberDecl -> memberDeclaration .)
    ENUM            reduce using rule 113 (memberDecl -> memberDeclaration .)
    BOOLEAN         reduce using rule 113 (memberDecl -> memberDeclaration .)
    CHAR            reduce using rule 113 (memberDecl -> memberDeclaration .)
    BYTE            reduce using rule 113 (memberDecl -> memberDeclaration .)
    SHORT           reduce using rule 113 (memberDecl -> memberDeclaration .)
    INT             reduce using rule 113 (memberDecl -> memberDeclaration .)
    LONG            reduce using rule 113 (memberDecl -> memberDeclaration .)
    FLOAT           reduce using rule 113 (memberDecl -> memberDeclaration .)
    DOUBLE          reduce using rule 113 (memberDecl -> memberDeclaration .)
    BRPAREN         reduce using rule 113 (memberDecl -> memberDeclaration .)


state 327

    (118) memberDeclaration -> type . methodDeclaration
    (119) memberDeclaration -> type . fieldDeclaration
    (124) methodDeclaration -> . Identifier methodDeclaratorRest
    (125) fieldDeclaration -> . variableDeclarators SEMI
    (166) variableDeclarators -> . variableDeclarator COMMA_VARS
    (167) variableDeclarators -> . variableDeclarator
    (169) variableDeclarator -> . variableDeclaratorId EQUALS_variableInitializer
    (170) variableDeclarator -> . variableDeclaratorId
    (178) variableDeclaratorId -> . Identifier arrays
    (179) variableDeclaratorId -> . Identifier

    Identifier      shift and go to state 478

    variableDeclarators            shift and go to state 476
    fieldDeclaration               shift and go to state 477
    variableDeclaratorId           shift and go to state 441
    methodDeclaration              shift and go to state 479
    variableDeclarator             shift and go to state 444

state 328

    (112) memberDecl -> genericMethodOrConstructorDecl .

    SEMI            reduce using rule 112 (memberDecl -> genericMethodOrConstructorDecl .)
    STATIC          reduce using rule 112 (memberDecl -> genericMethodOrConstructorDecl .)
    BLPAREN         reduce using rule 112 (memberDecl -> genericMethodOrConstructorDecl .)
    VOID            reduce using rule 112 (memberDecl -> genericMethodOrConstructorDecl .)
    Identifier      reduce using rule 112 (memberDecl -> genericMethodOrConstructorDecl .)
    PUBLIC          reduce using rule 112 (memberDecl -> genericMethodOrConstructorDecl .)
    PROTECTED       reduce using rule 112 (memberDecl -> genericMethodOrConstructorDecl .)
    PRIVATE         reduce using rule 112 (memberDecl -> genericMethodOrConstructorDecl .)
    ABSTRACT        reduce using rule 112 (memberDecl -> genericMethodOrConstructorDecl .)
    FINAL           reduce using rule 112 (memberDecl -> genericMethodOrConstructorDecl .)
    NATIVE          reduce using rule 112 (memberDecl -> genericMethodOrConstructorDecl .)
    SYNCHRONIZED    reduce using rule 112 (memberDecl -> genericMethodOrConstructorDecl .)
    TRANSIENT       reduce using rule 112 (memberDecl -> genericMethodOrConstructorDecl .)
    VOLATILE        reduce using rule 112 (memberDecl -> genericMethodOrConstructorDecl .)
    STRICTFP        reduce using rule 112 (memberDecl -> genericMethodOrConstructorDecl .)
    AT              reduce using rule 112 (memberDecl -> genericMethodOrConstructorDecl .)
    LESS            reduce using rule 112 (memberDecl -> genericMethodOrConstructorDecl .)
    INTERFACE       reduce using rule 112 (memberDecl -> genericMethodOrConstructorDecl .)
    CLASS           reduce using rule 112 (memberDecl -> genericMethodOrConstructorDecl .)
    ENUM            reduce using rule 112 (memberDecl -> genericMethodOrConstructorDecl .)
    BOOLEAN         reduce using rule 112 (memberDecl -> genericMethodOrConstructorDecl .)
    CHAR            reduce using rule 112 (memberDecl -> genericMethodOrConstructorDecl .)
    BYTE            reduce using rule 112 (memberDecl -> genericMethodOrConstructorDecl .)
    SHORT           reduce using rule 112 (memberDecl -> genericMethodOrConstructorDecl .)
    INT             reduce using rule 112 (memberDecl -> genericMethodOrConstructorDecl .)
    LONG            reduce using rule 112 (memberDecl -> genericMethodOrConstructorDecl .)
    FLOAT           reduce using rule 112 (memberDecl -> genericMethodOrConstructorDecl .)
    DOUBLE          reduce using rule 112 (memberDecl -> genericMethodOrConstructorDecl .)
    BRPAREN         reduce using rule 112 (memberDecl -> genericMethodOrConstructorDecl .)


state 329

    (117) memberDecl -> classDeclaration .

    SEMI            reduce using rule 117 (memberDecl -> classDeclaration .)
    STATIC          reduce using rule 117 (memberDecl -> classDeclaration .)
    BLPAREN         reduce using rule 117 (memberDecl -> classDeclaration .)
    VOID            reduce using rule 117 (memberDecl -> classDeclaration .)
    Identifier      reduce using rule 117 (memberDecl -> classDeclaration .)
    PUBLIC          reduce using rule 117 (memberDecl -> classDeclaration .)
    PROTECTED       reduce using rule 117 (memberDecl -> classDeclaration .)
    PRIVATE         reduce using rule 117 (memberDecl -> classDeclaration .)
    ABSTRACT        reduce using rule 117 (memberDecl -> classDeclaration .)
    FINAL           reduce using rule 117 (memberDecl -> classDeclaration .)
    NATIVE          reduce using rule 117 (memberDecl -> classDeclaration .)
    SYNCHRONIZED    reduce using rule 117 (memberDecl -> classDeclaration .)
    TRANSIENT       reduce using rule 117 (memberDecl -> classDeclaration .)
    VOLATILE        reduce using rule 117 (memberDecl -> classDeclaration .)
    STRICTFP        reduce using rule 117 (memberDecl -> classDeclaration .)
    AT              reduce using rule 117 (memberDecl -> classDeclaration .)
    LESS            reduce using rule 117 (memberDecl -> classDeclaration .)
    INTERFACE       reduce using rule 117 (memberDecl -> classDeclaration .)
    CLASS           reduce using rule 117 (memberDecl -> classDeclaration .)
    ENUM            reduce using rule 117 (memberDecl -> classDeclaration .)
    BOOLEAN         reduce using rule 117 (memberDecl -> classDeclaration .)
    CHAR            reduce using rule 117 (memberDecl -> classDeclaration .)
    BYTE            reduce using rule 117 (memberDecl -> classDeclaration .)
    SHORT           reduce using rule 117 (memberDecl -> classDeclaration .)
    INT             reduce using rule 117 (memberDecl -> classDeclaration .)
    LONG            reduce using rule 117 (memberDecl -> classDeclaration .)
    FLOAT           reduce using rule 117 (memberDecl -> classDeclaration .)
    DOUBLE          reduce using rule 117 (memberDecl -> classDeclaration .)
    BRPAREN         reduce using rule 117 (memberDecl -> classDeclaration .)


state 330

    (287) annotation -> AT . annotationName annotationBody
    (308) annotationTypeDeclaration -> AT . INTERFACE Identifier annotationTypeBody
    (288) annotationName -> . Identifier DOT_Identifiers
    (289) annotationName -> . Identifier

    INTERFACE       shift and go to state 38
    Identifier      shift and go to state 39

    annotationName                 shift and go to state 37

state 331

    (115) memberDecl -> Identifier . constructorDeclaratorRest
    (208) type_body -> Identifier . classOrInterfaceTypeBody arrays
    (209) type_body -> Identifier . classOrInterfaceTypeBody
    (210) type_body -> Identifier . arrays
    (211) type_body -> Identifier .
    (160) constructorDeclaratorRest -> . formalParameters throwList constructorBody
    (161) constructorDeclaratorRest -> . formalParameters constructorBody
    (212) classOrInterfaceTypeBody -> . typeArguments classOrInterfaceTypeStatements
    (213) classOrInterfaceTypeBody -> . typeArguments
    (214) classOrInterfaceTypeBody -> . classOrInterfaceTypeStatements
    (138) arrays -> . arrays array
    (139) arrays -> . array
    (246) formalParameters -> . LPAREN formalParameterDecls RPAREN
    (234) typeArguments -> . LESS typeArgument COMMA_typeArguments MORE
    (235) typeArguments -> . LESS typeArgument MORE
    (217) classOrInterfaceTypeStatements -> . classOrInterfaceTypeStatement
    (218) classOrInterfaceTypeStatements -> . classOrInterfaceTypeStatements classOrInterfaceTypeStatement
    (137) array -> . FLPAREN FRPAREN
    (215) classOrInterfaceTypeStatement -> . DOT Identifier typeArguments
    (216) classOrInterfaceTypeStatement -> . DOT Identifier

    Identifier      reduce using rule 211 (type_body -> Identifier .)
    LPAREN          shift and go to state 482
    LESS            shift and go to state 156
    FLPAREN         shift and go to state 153
    DOT             shift and go to state 161

    classOrInterfaceTypeBody       shift and go to state 155
    arrays                         shift and go to state 157
    constructorDeclaratorRest      shift and go to state 480
    formalParameters               shift and go to state 481
    typeArguments                  shift and go to state 158
    classOrInterfaceTypeStatements shift and go to state 159
    array                          shift and go to state 154
    classOrInterfaceTypeStatement  shift and go to state 160

state 332

    (110) classBodyDeclaration -> modifiers . memberDecl
    (41) modifiers -> modifiers . modifier
    (112) memberDecl -> . genericMethodOrConstructorDecl
    (113) memberDecl -> . memberDeclaration
    (114) memberDecl -> . VOID Identifier voidMethodDeclaratorRest
    (115) memberDecl -> . Identifier constructorDeclaratorRest
    (116) memberDecl -> . interfaceDeclaration
    (117) memberDecl -> . classDeclaration
    (190) modifier -> . annotation
    (191) modifier -> . PUBLIC
    (192) modifier -> . PROTECTED
    (193) modifier -> . PRIVATE
    (194) modifier -> . STATIC
    (195) modifier -> . ABSTRACT
    (196) modifier -> . FINAL
    (197) modifier -> . NATIVE
    (198) modifier -> . SYNCHRONIZED
    (199) modifier -> . TRANSIENT
    (200) modifier -> . VOLATILE
    (201) modifier -> . STRICTFP
    (120) genericMethodOrConstructorDecl -> . typeParameters genericMethodOrConstructorRest
    (118) memberDeclaration -> . type methodDeclaration
    (119) memberDeclaration -> . type fieldDeclaration
    (89) interfaceDeclaration -> . normalInterfaceDeclaration
    (90) interfaceDeclaration -> . annotationTypeDeclaration
    (42) classDeclaration -> . normalClassDeclaration
    (43) classDeclaration -> . enumDeclaration
    (287) annotation -> . AT annotationName annotationBody
    (52) typeParameters -> . LESS typeParameter dotTypeParameters MORE
    (53) typeParameters -> . LESS typeParameter MORE
    (54) typeParameters -> .
    (205) type -> . type_body
    (206) type -> . primitiveType arrays
    (207) type -> . primitiveType
    (95) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody
    (308) annotationTypeDeclaration -> . AT INTERFACE Identifier annotationTypeBody
    (48) normalClassDeclaration -> . CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody
    (63) enumDeclaration -> . ENUM Identifier IMPLEMENTS_typeList enumBody
    (208) type_body -> . Identifier classOrInterfaceTypeBody arrays
    (209) type_body -> . Identifier classOrInterfaceTypeBody
    (210) type_body -> . Identifier arrays
    (211) type_body -> . Identifier
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE

  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for Identifier resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    VOID            shift and go to state 322
    Identifier      shift and go to state 331
    PUBLIC          shift and go to state 297
    PROTECTED       shift and go to state 278
    PRIVATE         shift and go to state 284
    STATIC          shift and go to state 279
    ABSTRACT        shift and go to state 276
    FINAL           shift and go to state 281
    NATIVE          shift and go to state 282
    SYNCHRONIZED    shift and go to state 275
    TRANSIENT       shift and go to state 286
    VOLATILE        shift and go to state 295
    STRICTFP        shift and go to state 285
    AT              shift and go to state 330
    LESS            shift and go to state 45
    INTERFACE       shift and go to state 23
    CLASS           shift and go to state 12
    ENUM            shift and go to state 15
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72

  ! VOID            [ reduce using rule 54 (typeParameters -> .) ]
  ! Identifier      [ reduce using rule 54 (typeParameters -> .) ]
  ! BOOLEAN         [ reduce using rule 54 (typeParameters -> .) ]
  ! CHAR            [ reduce using rule 54 (typeParameters -> .) ]
  ! BYTE            [ reduce using rule 54 (typeParameters -> .) ]
  ! SHORT           [ reduce using rule 54 (typeParameters -> .) ]
  ! INT             [ reduce using rule 54 (typeParameters -> .) ]
  ! LONG            [ reduce using rule 54 (typeParameters -> .) ]
  ! FLOAT           [ reduce using rule 54 (typeParameters -> .) ]
  ! DOUBLE          [ reduce using rule 54 (typeParameters -> .) ]

    memberDecl                     shift and go to state 483
    primitiveType                  shift and go to state 74
    typeParameters                 shift and go to state 324
    normalInterfaceDeclaration     shift and go to state 5
    memberDeclaration              shift and go to state 326
    type                           shift and go to state 327
    enumDeclaration                shift and go to state 13
    genericMethodOrConstructorDecl shift and go to state 328
    classDeclaration               shift and go to state 329
    annotation                     shift and go to state 291
    normalClassDeclaration         shift and go to state 7
    type_body                      shift and go to state 77
    annotationTypeDeclaration      shift and go to state 21
    interfaceDeclaration           shift and go to state 336
    modifier                       shift and go to state 447

state 333

    (87) enumBodyDeclarations -> SEMI classBodyDeclarations .
    (86) classBodyDeclarations -> classBodyDeclarations . classBodyDeclaration
    (107) classBodyDeclaration -> . SEMI
    (108) classBodyDeclaration -> . STATIC block
    (109) classBodyDeclaration -> . block
    (110) classBodyDeclaration -> . modifiers memberDecl
    (111) classBodyDeclaration -> . memberDecl
    (329) block -> . BLPAREN blockStatements BRPAREN
    (330) block -> . BLPAREN BRPAREN
    (40) modifiers -> . modifier
    (41) modifiers -> . modifiers modifier
    (112) memberDecl -> . genericMethodOrConstructorDecl
    (113) memberDecl -> . memberDeclaration
    (114) memberDecl -> . VOID Identifier voidMethodDeclaratorRest
    (115) memberDecl -> . Identifier constructorDeclaratorRest
    (116) memberDecl -> . interfaceDeclaration
    (117) memberDecl -> . classDeclaration
    (190) modifier -> . annotation
    (191) modifier -> . PUBLIC
    (192) modifier -> . PROTECTED
    (193) modifier -> . PRIVATE
    (194) modifier -> . STATIC
    (195) modifier -> . ABSTRACT
    (196) modifier -> . FINAL
    (197) modifier -> . NATIVE
    (198) modifier -> . SYNCHRONIZED
    (199) modifier -> . TRANSIENT
    (200) modifier -> . VOLATILE
    (201) modifier -> . STRICTFP
    (120) genericMethodOrConstructorDecl -> . typeParameters genericMethodOrConstructorRest
    (118) memberDeclaration -> . type methodDeclaration
    (119) memberDeclaration -> . type fieldDeclaration
    (89) interfaceDeclaration -> . normalInterfaceDeclaration
    (90) interfaceDeclaration -> . annotationTypeDeclaration
    (42) classDeclaration -> . normalClassDeclaration
    (43) classDeclaration -> . enumDeclaration
    (287) annotation -> . AT annotationName annotationBody
    (52) typeParameters -> . LESS typeParameter dotTypeParameters MORE
    (53) typeParameters -> . LESS typeParameter MORE
    (54) typeParameters -> .
    (205) type -> . type_body
    (206) type -> . primitiveType arrays
    (207) type -> . primitiveType
    (95) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody
    (308) annotationTypeDeclaration -> . AT INTERFACE Identifier annotationTypeBody
    (48) normalClassDeclaration -> . CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody
    (63) enumDeclaration -> . ENUM Identifier IMPLEMENTS_typeList enumBody
    (208) type_body -> . Identifier classOrInterfaceTypeBody arrays
    (209) type_body -> . Identifier classOrInterfaceTypeBody
    (210) type_body -> . Identifier arrays
    (211) type_body -> . Identifier
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE

  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for Identifier resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    BRPAREN         reduce using rule 87 (enumBodyDeclarations -> SEMI classBodyDeclarations .)
    SEMI            shift and go to state 325
    STATIC          shift and go to state 323
    BLPAREN         shift and go to state 335
    VOID            shift and go to state 322
    Identifier      shift and go to state 331
    PUBLIC          shift and go to state 297
    PROTECTED       shift and go to state 278
    PRIVATE         shift and go to state 284
    ABSTRACT        shift and go to state 276
    FINAL           shift and go to state 281
    NATIVE          shift and go to state 282
    SYNCHRONIZED    shift and go to state 275
    TRANSIENT       shift and go to state 286
    VOLATILE        shift and go to state 295
    STRICTFP        shift and go to state 285
    AT              shift and go to state 330
    LESS            shift and go to state 45
    INTERFACE       shift and go to state 23
    CLASS           shift and go to state 12
    ENUM            shift and go to state 15
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72

  ! VOID            [ reduce using rule 54 (typeParameters -> .) ]
  ! Identifier      [ reduce using rule 54 (typeParameters -> .) ]
  ! BOOLEAN         [ reduce using rule 54 (typeParameters -> .) ]
  ! CHAR            [ reduce using rule 54 (typeParameters -> .) ]
  ! BYTE            [ reduce using rule 54 (typeParameters -> .) ]
  ! SHORT           [ reduce using rule 54 (typeParameters -> .) ]
  ! INT             [ reduce using rule 54 (typeParameters -> .) ]
  ! LONG            [ reduce using rule 54 (typeParameters -> .) ]
  ! FLOAT           [ reduce using rule 54 (typeParameters -> .) ]
  ! DOUBLE          [ reduce using rule 54 (typeParameters -> .) ]

    memberDecl                     shift and go to state 334
    primitiveType                  shift and go to state 74
    typeParameters                 shift and go to state 324
    normalInterfaceDeclaration     shift and go to state 5
    memberDeclaration              shift and go to state 326
    type                           shift and go to state 327
    enumDeclaration                shift and go to state 13
    genericMethodOrConstructorDecl shift and go to state 328
    classDeclaration               shift and go to state 329
    annotation                     shift and go to state 291
    modifiers                      shift and go to state 332
    normalClassDeclaration         shift and go to state 7
    type_body                      shift and go to state 77
    annotationTypeDeclaration      shift and go to state 21
    interfaceDeclaration           shift and go to state 336
    classBodyDeclaration           shift and go to state 484
    modifier                       shift and go to state 296
    block                          shift and go to state 338

state 334

    (111) classBodyDeclaration -> memberDecl .

    BRPAREN         reduce using rule 111 (classBodyDeclaration -> memberDecl .)
    SEMI            reduce using rule 111 (classBodyDeclaration -> memberDecl .)
    STATIC          reduce using rule 111 (classBodyDeclaration -> memberDecl .)
    BLPAREN         reduce using rule 111 (classBodyDeclaration -> memberDecl .)
    VOID            reduce using rule 111 (classBodyDeclaration -> memberDecl .)
    Identifier      reduce using rule 111 (classBodyDeclaration -> memberDecl .)
    PUBLIC          reduce using rule 111 (classBodyDeclaration -> memberDecl .)
    PROTECTED       reduce using rule 111 (classBodyDeclaration -> memberDecl .)
    PRIVATE         reduce using rule 111 (classBodyDeclaration -> memberDecl .)
    ABSTRACT        reduce using rule 111 (classBodyDeclaration -> memberDecl .)
    FINAL           reduce using rule 111 (classBodyDeclaration -> memberDecl .)
    NATIVE          reduce using rule 111 (classBodyDeclaration -> memberDecl .)
    SYNCHRONIZED    reduce using rule 111 (classBodyDeclaration -> memberDecl .)
    TRANSIENT       reduce using rule 111 (classBodyDeclaration -> memberDecl .)
    VOLATILE        reduce using rule 111 (classBodyDeclaration -> memberDecl .)
    STRICTFP        reduce using rule 111 (classBodyDeclaration -> memberDecl .)
    AT              reduce using rule 111 (classBodyDeclaration -> memberDecl .)
    LESS            reduce using rule 111 (classBodyDeclaration -> memberDecl .)
    INTERFACE       reduce using rule 111 (classBodyDeclaration -> memberDecl .)
    CLASS           reduce using rule 111 (classBodyDeclaration -> memberDecl .)
    ENUM            reduce using rule 111 (classBodyDeclaration -> memberDecl .)
    BOOLEAN         reduce using rule 111 (classBodyDeclaration -> memberDecl .)
    CHAR            reduce using rule 111 (classBodyDeclaration -> memberDecl .)
    BYTE            reduce using rule 111 (classBodyDeclaration -> memberDecl .)
    SHORT           reduce using rule 111 (classBodyDeclaration -> memberDecl .)
    INT             reduce using rule 111 (classBodyDeclaration -> memberDecl .)
    LONG            reduce using rule 111 (classBodyDeclaration -> memberDecl .)
    FLOAT           reduce using rule 111 (classBodyDeclaration -> memberDecl .)
    DOUBLE          reduce using rule 111 (classBodyDeclaration -> memberDecl .)


state 335

    (329) block -> BLPAREN . blockStatements BRPAREN
    (330) block -> BLPAREN . BRPAREN
    (255) blockStatements -> . blockStatement
    (256) blockStatements -> . blockStatements blockStatement
    (331) blockStatement -> . localVariableDeclarationStatement
    (332) blockStatement -> . classOrInterfaceDeclaration
    (333) blockStatement -> . statement
    (334) localVariableDeclarationStatement -> . localVariableDeclaration SEMI
    (26) classOrInterfaceDeclaration -> . classOrInterfaceModifiers classDeclaration
    (27) classOrInterfaceDeclaration -> . classOrInterfaceModifiers interfaceDeclaration
    (28) classOrInterfaceDeclaration -> . classDeclaration
    (29) classOrInterfaceDeclaration -> . interfaceDeclaration
    (347) statement -> . block
    (348) statement -> . ASSERT expression expression_colon_or_empty SEMI
    (349) statement -> . IF parExpression statement else_statement
    (350) statement -> . FOR LPAREN forControl RPAREN statement
    (351) statement -> . WHILE parExpression statement
    (352) statement -> . DO statement WHILE parExpression SEMI
    (353) statement -> . TRY block catches FINALLY block
    (354) statement -> . TRY block catches
    (355) statement -> . TRY block FINALLY block
    (356) statement -> . SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN
    (357) statement -> . SYNCHRONIZED parExpression block
    (358) statement -> . RETURN expression_or_empty SEMI
    (359) statement -> . THROW expression SEMI
    (360) statement -> . BREAK Identifier_or_empty SEMI
    (361) statement -> . CONTINUE Identifier_or_empty SEMI
    (362) statement -> . SEMI
    (363) statement -> . statementExpression SEMI
    (364) statement -> . Identifier COLON statement
    (335) localVariableDeclaration -> . variableModifiers type variableDeclarators
    (336) localVariableDeclaration -> . type variableDeclarators
    (30) classOrInterfaceModifiers -> . classOrInterfaceModifier
    (31) classOrInterfaceModifiers -> . classOrInterfaceModifiers classOrInterfaceModifier
    (42) classDeclaration -> . normalClassDeclaration
    (43) classDeclaration -> . enumDeclaration
    (89) interfaceDeclaration -> . normalInterfaceDeclaration
    (90) interfaceDeclaration -> . annotationTypeDeclaration
    (329) block -> . BLPAREN blockStatements BRPAREN
    (330) block -> . BLPAREN BRPAREN
    (400) statementExpression -> . expression
    (337) variableModifiers -> . variableModifier
    (338) variableModifiers -> . variableModifiers variableModifier
    (205) type -> . type_body
    (206) type -> . primitiveType arrays
    (207) type -> . primitiveType
    (32) classOrInterfaceModifier -> . annotation
    (33) classOrInterfaceModifier -> . PUBLIC
    (34) classOrInterfaceModifier -> . PROTECTED
    (35) classOrInterfaceModifier -> . PRIVATE
    (36) classOrInterfaceModifier -> . ABSTRACT
    (37) classOrInterfaceModifier -> . STATIC
    (38) classOrInterfaceModifier -> . FINAL
    (39) classOrInterfaceModifier -> . STRICTFP
    (48) normalClassDeclaration -> . CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody
    (63) enumDeclaration -> . ENUM Identifier IMPLEMENTS_typeList enumBody
    (95) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody
    (308) annotationTypeDeclaration -> . AT INTERFACE Identifier annotationTypeBody
    (404) expression -> . conditionalExpression assignmentOperator_expression_empty
    (229) variableModifier -> . FINAL
    (230) variableModifier -> . annotation
    (208) type_body -> . Identifier classOrInterfaceTypeBody arrays
    (209) type_body -> . Identifier classOrInterfaceTypeBody
    (210) type_body -> . Identifier arrays
    (211) type_body -> . Identifier
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (287) annotation -> . AT annotationName annotationBody
    (420) conditionalExpression -> . conditionalOrExpression conditionalExpressionStats
    (421) conditionalExpression -> . conditionalOrExpression
    (425) conditionalOrExpression -> . conditionalAndExpression O_conditionalAndExpressions
    (426) conditionalOrExpression -> . conditionalAndExpression
    (430) conditionalAndExpression -> . inclusiveOrExpression O_inclusiveOrExpressions
    (431) conditionalAndExpression -> . inclusiveOrExpression
    (435) inclusiveOrExpression -> . exclusiveOrExpression V_exclusiveOrExpression
    (436) inclusiveOrExpression -> . exclusiveOrExpression
    (440) exclusiveOrExpression -> . andExpression CARET_andExpressions
    (441) exclusiveOrExpression -> . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    BRPAREN         shift and go to state 511
    ASSERT          shift and go to state 507
    IF              shift and go to state 513
    FOR             shift and go to state 492
    WHILE           shift and go to state 500
    DO              shift and go to state 506
    TRY             shift and go to state 494
    SWITCH          shift and go to state 501
    SYNCHRONIZED    shift and go to state 490
    RETURN          shift and go to state 489
    THROW           shift and go to state 514
    BREAK           shift and go to state 505
    CONTINUE        shift and go to state 496
    SEMI            shift and go to state 508
    Identifier      shift and go to state 495
    BLPAREN         shift and go to state 335
    PUBLIC          shift and go to state 24
    PROTECTED       shift and go to state 3
    PRIVATE         shift and go to state 9
    ABSTRACT        shift and go to state 2
    STATIC          shift and go to state 4
    FINAL           shift and go to state 491
    STRICTFP        shift and go to state 10
    CLASS           shift and go to state 12
    ENUM            shift and go to state 15
    INTERFACE       shift and go to state 23
    AT              shift and go to state 18
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    equalityExpression             shift and go to state 108
    localVariableDeclaration       shift and go to state 499
    inclusiveOrExpression          shift and go to state 99
    multiplicativeExpression       shift and go to state 128
    exclusiveOrExpression          shift and go to state 110
    conditionalAndExpression       shift and go to state 89
    FloatingPointLiteral           shift and go to state 119
    primitiveType                  shift and go to state 504
    blockStatement                 shift and go to state 485
    normalInterfaceDeclaration     shift and go to state 5
    shiftExpression                shift and go to state 130
    primary                        shift and go to state 111
    normalClassDeclaration         shift and go to state 7
    unaryExpression                shift and go to state 131
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    classOrInterfaceModifiers      shift and go to state 22
    statement                      shift and go to state 502
    type                           shift and go to state 503
    blockStatements                shift and go to state 510
    additiveExpression             shift and go to state 102
    instanceOfExpression           shift and go to state 96
    conditionalExpression          shift and go to state 266
    enumDeclaration                shift and go to state 13
    classOrInterfaceDeclaration    shift and go to state 486
    integerLiteral                 shift and go to state 98
    parExpression                  shift and go to state 132
    classOrInterfaceModifier       shift and go to state 20
    relationalExpression           shift and go to state 95
    variableModifier               shift and go to state 487
    classDeclaration               shift and go to state 17
    conditionalOrExpression        shift and go to state 109
    localVariableDeclarationStatement shift and go to state 488
    annotation                     shift and go to state 512
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    variableModifiers              shift and go to state 493
    type_body                      shift and go to state 77
    annotationTypeDeclaration      shift and go to state 21
    statementExpression            shift and go to state 509
    interfaceDeclaration           shift and go to state 1
    andExpression                  shift and go to state 106
    expression                     shift and go to state 497
    block                          shift and go to state 498

state 336

    (116) memberDecl -> interfaceDeclaration .

    SEMI            reduce using rule 116 (memberDecl -> interfaceDeclaration .)
    STATIC          reduce using rule 116 (memberDecl -> interfaceDeclaration .)
    BLPAREN         reduce using rule 116 (memberDecl -> interfaceDeclaration .)
    VOID            reduce using rule 116 (memberDecl -> interfaceDeclaration .)
    Identifier      reduce using rule 116 (memberDecl -> interfaceDeclaration .)
    PUBLIC          reduce using rule 116 (memberDecl -> interfaceDeclaration .)
    PROTECTED       reduce using rule 116 (memberDecl -> interfaceDeclaration .)
    PRIVATE         reduce using rule 116 (memberDecl -> interfaceDeclaration .)
    ABSTRACT        reduce using rule 116 (memberDecl -> interfaceDeclaration .)
    FINAL           reduce using rule 116 (memberDecl -> interfaceDeclaration .)
    NATIVE          reduce using rule 116 (memberDecl -> interfaceDeclaration .)
    SYNCHRONIZED    reduce using rule 116 (memberDecl -> interfaceDeclaration .)
    TRANSIENT       reduce using rule 116 (memberDecl -> interfaceDeclaration .)
    VOLATILE        reduce using rule 116 (memberDecl -> interfaceDeclaration .)
    STRICTFP        reduce using rule 116 (memberDecl -> interfaceDeclaration .)
    AT              reduce using rule 116 (memberDecl -> interfaceDeclaration .)
    LESS            reduce using rule 116 (memberDecl -> interfaceDeclaration .)
    INTERFACE       reduce using rule 116 (memberDecl -> interfaceDeclaration .)
    CLASS           reduce using rule 116 (memberDecl -> interfaceDeclaration .)
    ENUM            reduce using rule 116 (memberDecl -> interfaceDeclaration .)
    BOOLEAN         reduce using rule 116 (memberDecl -> interfaceDeclaration .)
    CHAR            reduce using rule 116 (memberDecl -> interfaceDeclaration .)
    BYTE            reduce using rule 116 (memberDecl -> interfaceDeclaration .)
    SHORT           reduce using rule 116 (memberDecl -> interfaceDeclaration .)
    INT             reduce using rule 116 (memberDecl -> interfaceDeclaration .)
    LONG            reduce using rule 116 (memberDecl -> interfaceDeclaration .)
    FLOAT           reduce using rule 116 (memberDecl -> interfaceDeclaration .)
    DOUBLE          reduce using rule 116 (memberDecl -> interfaceDeclaration .)
    BRPAREN         reduce using rule 116 (memberDecl -> interfaceDeclaration .)


state 337

    (85) classBodyDeclarations -> classBodyDeclaration .

    BRPAREN         reduce using rule 85 (classBodyDeclarations -> classBodyDeclaration .)
    SEMI            reduce using rule 85 (classBodyDeclarations -> classBodyDeclaration .)
    STATIC          reduce using rule 85 (classBodyDeclarations -> classBodyDeclaration .)
    BLPAREN         reduce using rule 85 (classBodyDeclarations -> classBodyDeclaration .)
    VOID            reduce using rule 85 (classBodyDeclarations -> classBodyDeclaration .)
    Identifier      reduce using rule 85 (classBodyDeclarations -> classBodyDeclaration .)
    PUBLIC          reduce using rule 85 (classBodyDeclarations -> classBodyDeclaration .)
    PROTECTED       reduce using rule 85 (classBodyDeclarations -> classBodyDeclaration .)
    PRIVATE         reduce using rule 85 (classBodyDeclarations -> classBodyDeclaration .)
    ABSTRACT        reduce using rule 85 (classBodyDeclarations -> classBodyDeclaration .)
    FINAL           reduce using rule 85 (classBodyDeclarations -> classBodyDeclaration .)
    NATIVE          reduce using rule 85 (classBodyDeclarations -> classBodyDeclaration .)
    SYNCHRONIZED    reduce using rule 85 (classBodyDeclarations -> classBodyDeclaration .)
    TRANSIENT       reduce using rule 85 (classBodyDeclarations -> classBodyDeclaration .)
    VOLATILE        reduce using rule 85 (classBodyDeclarations -> classBodyDeclaration .)
    STRICTFP        reduce using rule 85 (classBodyDeclarations -> classBodyDeclaration .)
    AT              reduce using rule 85 (classBodyDeclarations -> classBodyDeclaration .)
    LESS            reduce using rule 85 (classBodyDeclarations -> classBodyDeclaration .)
    INTERFACE       reduce using rule 85 (classBodyDeclarations -> classBodyDeclaration .)
    CLASS           reduce using rule 85 (classBodyDeclarations -> classBodyDeclaration .)
    ENUM            reduce using rule 85 (classBodyDeclarations -> classBodyDeclaration .)
    BOOLEAN         reduce using rule 85 (classBodyDeclarations -> classBodyDeclaration .)
    CHAR            reduce using rule 85 (classBodyDeclarations -> classBodyDeclaration .)
    BYTE            reduce using rule 85 (classBodyDeclarations -> classBodyDeclaration .)
    SHORT           reduce using rule 85 (classBodyDeclarations -> classBodyDeclaration .)
    INT             reduce using rule 85 (classBodyDeclarations -> classBodyDeclaration .)
    LONG            reduce using rule 85 (classBodyDeclarations -> classBodyDeclaration .)
    FLOAT           reduce using rule 85 (classBodyDeclarations -> classBodyDeclaration .)
    DOUBLE          reduce using rule 85 (classBodyDeclarations -> classBodyDeclaration .)


state 338

    (109) classBodyDeclaration -> block .

    BRPAREN         reduce using rule 109 (classBodyDeclaration -> block .)
    SEMI            reduce using rule 109 (classBodyDeclaration -> block .)
    STATIC          reduce using rule 109 (classBodyDeclaration -> block .)
    BLPAREN         reduce using rule 109 (classBodyDeclaration -> block .)
    VOID            reduce using rule 109 (classBodyDeclaration -> block .)
    Identifier      reduce using rule 109 (classBodyDeclaration -> block .)
    PUBLIC          reduce using rule 109 (classBodyDeclaration -> block .)
    PROTECTED       reduce using rule 109 (classBodyDeclaration -> block .)
    PRIVATE         reduce using rule 109 (classBodyDeclaration -> block .)
    ABSTRACT        reduce using rule 109 (classBodyDeclaration -> block .)
    FINAL           reduce using rule 109 (classBodyDeclaration -> block .)
    NATIVE          reduce using rule 109 (classBodyDeclaration -> block .)
    SYNCHRONIZED    reduce using rule 109 (classBodyDeclaration -> block .)
    TRANSIENT       reduce using rule 109 (classBodyDeclaration -> block .)
    VOLATILE        reduce using rule 109 (classBodyDeclaration -> block .)
    STRICTFP        reduce using rule 109 (classBodyDeclaration -> block .)
    AT              reduce using rule 109 (classBodyDeclaration -> block .)
    LESS            reduce using rule 109 (classBodyDeclaration -> block .)
    INTERFACE       reduce using rule 109 (classBodyDeclaration -> block .)
    CLASS           reduce using rule 109 (classBodyDeclaration -> block .)
    ENUM            reduce using rule 109 (classBodyDeclaration -> block .)
    BOOLEAN         reduce using rule 109 (classBodyDeclaration -> block .)
    CHAR            reduce using rule 109 (classBodyDeclaration -> block .)
    BYTE            reduce using rule 109 (classBodyDeclaration -> block .)
    SHORT           reduce using rule 109 (classBodyDeclaration -> block .)
    INT             reduce using rule 109 (classBodyDeclaration -> block .)
    LONG            reduce using rule 109 (classBodyDeclaration -> block .)
    FLOAT           reduce using rule 109 (classBodyDeclaration -> block .)
    DOUBLE          reduce using rule 109 (classBodyDeclaration -> block .)


state 339

    (71) enumBody -> BLPAREN enumBodyStatement BRPAREN .

    SEMI            reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    PUBLIC          reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    PROTECTED       reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    PRIVATE         reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    ABSTRACT        reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    STATIC          reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    FINAL           reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    STRICTFP        reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    CLASS           reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    ENUM            reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    INTERFACE       reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    AT              reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    $end            reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    BRPAREN         reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    ASSERT          reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    IF              reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    FOR             reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    WHILE           reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    DO              reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    TRY             reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    SWITCH          reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    SYNCHRONIZED    reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    RETURN          reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    THROW           reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    BREAK           reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    CONTINUE        reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    Identifier      reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    BLPAREN         reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    BOOLEAN         reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    CHAR            reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    BYTE            reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    SHORT           reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    INT             reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    LONG            reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    FLOAT           reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    DOUBLE          reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    PLUS            reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    DASH            reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    OP_INC          reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    OP_DEC          reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    TILDE           reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    EXCLAMATION     reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    LPAREN          reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    THIS            reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    SUPER           reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    NEW             reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    VOID            reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    CharacterLiteral reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    StringLiteral   reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    NULL            reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    LONG_NUMBER     reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    LONG_HEX_NUMBER reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    NON_INTEGER_1   reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    NON_INTEGER_2   reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    NON_INTEGER_3   reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    NON_INTEGER_4   reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    TRUE            reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    FALSE           reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    CASE            reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    DEFAULT         reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    NATIVE          reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    TRANSIENT       reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    VOLATILE        reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)
    LESS            reduce using rule 71 (enumBody -> BLPAREN enumBodyStatement BRPAREN .)


state 340

    (282) annotations -> annotations annotation .

    AT              reduce using rule 282 (annotations -> annotations annotation .)
    Identifier      reduce using rule 282 (annotations -> annotations annotation .)


state 341

    (66) enumBodyStatement -> enumConstants enumBodyDeclarations .

    BRPAREN         reduce using rule 66 (enumBodyStatement -> enumConstants enumBodyDeclarations .)


state 342

    (64) enumBodyStatement -> enumConstants COMMA . enumBodyDeclarations
    (65) enumBodyStatement -> enumConstants COMMA .
    (87) enumBodyDeclarations -> . SEMI classBodyDeclarations
    (88) enumBodyDeclarations -> . SEMI

    BRPAREN         reduce using rule 65 (enumBodyStatement -> enumConstants COMMA .)
    SEMI            shift and go to state 166

    enumBodyDeclarations           shift and go to state 515

state 343

    (67) enumBodyStatement -> COMMA enumBodyDeclarations .

    BRPAREN         reduce using rule 67 (enumBodyStatement -> COMMA enumBodyDeclarations .)


state 344

    (84) enumConstant -> annotations_once Identifier . arguments_once classBody_once
    (80) arguments_once -> . arguments
    (81) arguments_once -> .
    (555) arguments -> . LPAREN expressionList_once RPAREN

    BLPAREN         reduce using rule 81 (arguments_once -> .)
    COMMA           reduce using rule 81 (arguments_once -> .)
    SEMI            reduce using rule 81 (arguments_once -> .)
    BRPAREN         reduce using rule 81 (arguments_once -> .)
    LPAREN          shift and go to state 199

    arguments                      shift and go to state 517
    arguments_once                 shift and go to state 516

state 345

    (516) primary -> VOID DOT CLASS .

    OP_INC          reduce using rule 516 (primary -> VOID DOT CLASS .)
    OP_DEC          reduce using rule 516 (primary -> VOID DOT CLASS .)
    DOT             reduce using rule 516 (primary -> VOID DOT CLASS .)
    FLPAREN         reduce using rule 516 (primary -> VOID DOT CLASS .)
    MULT            reduce using rule 516 (primary -> VOID DOT CLASS .)
    SLASH           reduce using rule 516 (primary -> VOID DOT CLASS .)
    PERCENT         reduce using rule 516 (primary -> VOID DOT CLASS .)
    PLUS            reduce using rule 516 (primary -> VOID DOT CLASS .)
    DASH            reduce using rule 516 (primary -> VOID DOT CLASS .)
    OP_SHR          reduce using rule 516 (primary -> VOID DOT CLASS .)
    OP_SHRR         reduce using rule 516 (primary -> VOID DOT CLASS .)
    OP_SHL          reduce using rule 516 (primary -> VOID DOT CLASS .)
    OP_LE           reduce using rule 516 (primary -> VOID DOT CLASS .)
    OP_GE           reduce using rule 516 (primary -> VOID DOT CLASS .)
    LESS            reduce using rule 516 (primary -> VOID DOT CLASS .)
    MORE            reduce using rule 516 (primary -> VOID DOT CLASS .)
    INSTANCEOF      reduce using rule 516 (primary -> VOID DOT CLASS .)
    OP_EQ           reduce using rule 516 (primary -> VOID DOT CLASS .)
    OP_NE           reduce using rule 516 (primary -> VOID DOT CLASS .)
    AND             reduce using rule 516 (primary -> VOID DOT CLASS .)
    CARET           reduce using rule 516 (primary -> VOID DOT CLASS .)
    VERTICAL        reduce using rule 516 (primary -> VOID DOT CLASS .)
    OP_LAND         reduce using rule 516 (primary -> VOID DOT CLASS .)
    OP_LOR          reduce using rule 516 (primary -> VOID DOT CLASS .)
    QUES            reduce using rule 516 (primary -> VOID DOT CLASS .)
    EQUALS          reduce using rule 516 (primary -> VOID DOT CLASS .)
    ASS_ADD         reduce using rule 516 (primary -> VOID DOT CLASS .)
    ASS_SUB         reduce using rule 516 (primary -> VOID DOT CLASS .)
    ASS_MUL         reduce using rule 516 (primary -> VOID DOT CLASS .)
    ASS_DIV         reduce using rule 516 (primary -> VOID DOT CLASS .)
    ASS_AND         reduce using rule 516 (primary -> VOID DOT CLASS .)
    ASS_OR          reduce using rule 516 (primary -> VOID DOT CLASS .)
    ASS_XOR         reduce using rule 516 (primary -> VOID DOT CLASS .)
    ASS_MOD         reduce using rule 516 (primary -> VOID DOT CLASS .)
    ASS_SHL         reduce using rule 516 (primary -> VOID DOT CLASS .)
    ASS_SHRR        reduce using rule 516 (primary -> VOID DOT CLASS .)
    ASS_SHR         reduce using rule 516 (primary -> VOID DOT CLASS .)
    FRPAREN         reduce using rule 516 (primary -> VOID DOT CLASS .)
    SEMI            reduce using rule 516 (primary -> VOID DOT CLASS .)
    COMMA           reduce using rule 516 (primary -> VOID DOT CLASS .)
    BRPAREN         reduce using rule 516 (primary -> VOID DOT CLASS .)
    RPAREN          reduce using rule 516 (primary -> VOID DOT CLASS .)
    COLON           reduce using rule 516 (primary -> VOID DOT CLASS .)


state 346

    (424) O_conditionalAndExpressions -> O_conditionalAndExpressions O_conditionalAndExpression .

    OP_LOR          reduce using rule 424 (O_conditionalAndExpressions -> O_conditionalAndExpressions O_conditionalAndExpression .)
    QUES            reduce using rule 424 (O_conditionalAndExpressions -> O_conditionalAndExpressions O_conditionalAndExpression .)
    RPAREN          reduce using rule 424 (O_conditionalAndExpressions -> O_conditionalAndExpressions O_conditionalAndExpression .)
    COMMA           reduce using rule 424 (O_conditionalAndExpressions -> O_conditionalAndExpressions O_conditionalAndExpression .)
    BRPAREN         reduce using rule 424 (O_conditionalAndExpressions -> O_conditionalAndExpressions O_conditionalAndExpression .)
    EQUALS          reduce using rule 424 (O_conditionalAndExpressions -> O_conditionalAndExpressions O_conditionalAndExpression .)
    ASS_ADD         reduce using rule 424 (O_conditionalAndExpressions -> O_conditionalAndExpressions O_conditionalAndExpression .)
    ASS_SUB         reduce using rule 424 (O_conditionalAndExpressions -> O_conditionalAndExpressions O_conditionalAndExpression .)
    ASS_MUL         reduce using rule 424 (O_conditionalAndExpressions -> O_conditionalAndExpressions O_conditionalAndExpression .)
    ASS_DIV         reduce using rule 424 (O_conditionalAndExpressions -> O_conditionalAndExpressions O_conditionalAndExpression .)
    ASS_AND         reduce using rule 424 (O_conditionalAndExpressions -> O_conditionalAndExpressions O_conditionalAndExpression .)
    ASS_OR          reduce using rule 424 (O_conditionalAndExpressions -> O_conditionalAndExpressions O_conditionalAndExpression .)
    ASS_XOR         reduce using rule 424 (O_conditionalAndExpressions -> O_conditionalAndExpressions O_conditionalAndExpression .)
    ASS_MOD         reduce using rule 424 (O_conditionalAndExpressions -> O_conditionalAndExpressions O_conditionalAndExpression .)
    ASS_SHL         reduce using rule 424 (O_conditionalAndExpressions -> O_conditionalAndExpressions O_conditionalAndExpression .)
    ASS_SHRR        reduce using rule 424 (O_conditionalAndExpressions -> O_conditionalAndExpressions O_conditionalAndExpression .)
    ASS_SHR         reduce using rule 424 (O_conditionalAndExpressions -> O_conditionalAndExpressions O_conditionalAndExpression .)
    FRPAREN         reduce using rule 424 (O_conditionalAndExpressions -> O_conditionalAndExpressions O_conditionalAndExpression .)
    COLON           reduce using rule 424 (O_conditionalAndExpressions -> O_conditionalAndExpressions O_conditionalAndExpression .)
    SEMI            reduce using rule 424 (O_conditionalAndExpressions -> O_conditionalAndExpressions O_conditionalAndExpression .)


state 347

    (422) O_conditionalAndExpression -> OP_LOR conditionalAndExpression .

    OP_LOR          reduce using rule 422 (O_conditionalAndExpression -> OP_LOR conditionalAndExpression .)
    QUES            reduce using rule 422 (O_conditionalAndExpression -> OP_LOR conditionalAndExpression .)
    RPAREN          reduce using rule 422 (O_conditionalAndExpression -> OP_LOR conditionalAndExpression .)
    COMMA           reduce using rule 422 (O_conditionalAndExpression -> OP_LOR conditionalAndExpression .)
    BRPAREN         reduce using rule 422 (O_conditionalAndExpression -> OP_LOR conditionalAndExpression .)
    EQUALS          reduce using rule 422 (O_conditionalAndExpression -> OP_LOR conditionalAndExpression .)
    ASS_ADD         reduce using rule 422 (O_conditionalAndExpression -> OP_LOR conditionalAndExpression .)
    ASS_SUB         reduce using rule 422 (O_conditionalAndExpression -> OP_LOR conditionalAndExpression .)
    ASS_MUL         reduce using rule 422 (O_conditionalAndExpression -> OP_LOR conditionalAndExpression .)
    ASS_DIV         reduce using rule 422 (O_conditionalAndExpression -> OP_LOR conditionalAndExpression .)
    ASS_AND         reduce using rule 422 (O_conditionalAndExpression -> OP_LOR conditionalAndExpression .)
    ASS_OR          reduce using rule 422 (O_conditionalAndExpression -> OP_LOR conditionalAndExpression .)
    ASS_XOR         reduce using rule 422 (O_conditionalAndExpression -> OP_LOR conditionalAndExpression .)
    ASS_MOD         reduce using rule 422 (O_conditionalAndExpression -> OP_LOR conditionalAndExpression .)
    ASS_SHL         reduce using rule 422 (O_conditionalAndExpression -> OP_LOR conditionalAndExpression .)
    ASS_SHRR        reduce using rule 422 (O_conditionalAndExpression -> OP_LOR conditionalAndExpression .)
    ASS_SHR         reduce using rule 422 (O_conditionalAndExpression -> OP_LOR conditionalAndExpression .)
    FRPAREN         reduce using rule 422 (O_conditionalAndExpression -> OP_LOR conditionalAndExpression .)
    COLON           reduce using rule 422 (O_conditionalAndExpression -> OP_LOR conditionalAndExpression .)
    SEMI            reduce using rule 422 (O_conditionalAndExpression -> OP_LOR conditionalAndExpression .)


state 348

    (453) INSTANCEOF_type_once -> INSTANCEOF type .

    OP_EQ           reduce using rule 453 (INSTANCEOF_type_once -> INSTANCEOF type .)
    OP_NE           reduce using rule 453 (INSTANCEOF_type_once -> INSTANCEOF type .)
    AND             reduce using rule 453 (INSTANCEOF_type_once -> INSTANCEOF type .)
    CARET           reduce using rule 453 (INSTANCEOF_type_once -> INSTANCEOF type .)
    VERTICAL        reduce using rule 453 (INSTANCEOF_type_once -> INSTANCEOF type .)
    OP_LAND         reduce using rule 453 (INSTANCEOF_type_once -> INSTANCEOF type .)
    OP_LOR          reduce using rule 453 (INSTANCEOF_type_once -> INSTANCEOF type .)
    QUES            reduce using rule 453 (INSTANCEOF_type_once -> INSTANCEOF type .)
    RPAREN          reduce using rule 453 (INSTANCEOF_type_once -> INSTANCEOF type .)
    COMMA           reduce using rule 453 (INSTANCEOF_type_once -> INSTANCEOF type .)
    BRPAREN         reduce using rule 453 (INSTANCEOF_type_once -> INSTANCEOF type .)
    EQUALS          reduce using rule 453 (INSTANCEOF_type_once -> INSTANCEOF type .)
    ASS_ADD         reduce using rule 453 (INSTANCEOF_type_once -> INSTANCEOF type .)
    ASS_SUB         reduce using rule 453 (INSTANCEOF_type_once -> INSTANCEOF type .)
    ASS_MUL         reduce using rule 453 (INSTANCEOF_type_once -> INSTANCEOF type .)
    ASS_DIV         reduce using rule 453 (INSTANCEOF_type_once -> INSTANCEOF type .)
    ASS_AND         reduce using rule 453 (INSTANCEOF_type_once -> INSTANCEOF type .)
    ASS_OR          reduce using rule 453 (INSTANCEOF_type_once -> INSTANCEOF type .)
    ASS_XOR         reduce using rule 453 (INSTANCEOF_type_once -> INSTANCEOF type .)
    ASS_MOD         reduce using rule 453 (INSTANCEOF_type_once -> INSTANCEOF type .)
    ASS_SHL         reduce using rule 453 (INSTANCEOF_type_once -> INSTANCEOF type .)
    ASS_SHRR        reduce using rule 453 (INSTANCEOF_type_once -> INSTANCEOF type .)
    ASS_SHR         reduce using rule 453 (INSTANCEOF_type_once -> INSTANCEOF type .)
    FRPAREN         reduce using rule 453 (INSTANCEOF_type_once -> INSTANCEOF type .)
    COLON           reduce using rule 453 (INSTANCEOF_type_once -> INSTANCEOF type .)
    SEMI            reduce using rule 453 (INSTANCEOF_type_once -> INSTANCEOF type .)


state 349

    (447) instanceOfExpressionStat -> OP_EQ instanceOfExpression .

    OP_EQ           reduce using rule 447 (instanceOfExpressionStat -> OP_EQ instanceOfExpression .)
    OP_NE           reduce using rule 447 (instanceOfExpressionStat -> OP_EQ instanceOfExpression .)
    AND             reduce using rule 447 (instanceOfExpressionStat -> OP_EQ instanceOfExpression .)
    CARET           reduce using rule 447 (instanceOfExpressionStat -> OP_EQ instanceOfExpression .)
    VERTICAL        reduce using rule 447 (instanceOfExpressionStat -> OP_EQ instanceOfExpression .)
    OP_LAND         reduce using rule 447 (instanceOfExpressionStat -> OP_EQ instanceOfExpression .)
    OP_LOR          reduce using rule 447 (instanceOfExpressionStat -> OP_EQ instanceOfExpression .)
    QUES            reduce using rule 447 (instanceOfExpressionStat -> OP_EQ instanceOfExpression .)
    RPAREN          reduce using rule 447 (instanceOfExpressionStat -> OP_EQ instanceOfExpression .)
    COMMA           reduce using rule 447 (instanceOfExpressionStat -> OP_EQ instanceOfExpression .)
    BRPAREN         reduce using rule 447 (instanceOfExpressionStat -> OP_EQ instanceOfExpression .)
    EQUALS          reduce using rule 447 (instanceOfExpressionStat -> OP_EQ instanceOfExpression .)
    ASS_ADD         reduce using rule 447 (instanceOfExpressionStat -> OP_EQ instanceOfExpression .)
    ASS_SUB         reduce using rule 447 (instanceOfExpressionStat -> OP_EQ instanceOfExpression .)
    ASS_MUL         reduce using rule 447 (instanceOfExpressionStat -> OP_EQ instanceOfExpression .)
    ASS_DIV         reduce using rule 447 (instanceOfExpressionStat -> OP_EQ instanceOfExpression .)
    ASS_AND         reduce using rule 447 (instanceOfExpressionStat -> OP_EQ instanceOfExpression .)
    ASS_OR          reduce using rule 447 (instanceOfExpressionStat -> OP_EQ instanceOfExpression .)
    ASS_XOR         reduce using rule 447 (instanceOfExpressionStat -> OP_EQ instanceOfExpression .)
    ASS_MOD         reduce using rule 447 (instanceOfExpressionStat -> OP_EQ instanceOfExpression .)
    ASS_SHL         reduce using rule 447 (instanceOfExpressionStat -> OP_EQ instanceOfExpression .)
    ASS_SHRR        reduce using rule 447 (instanceOfExpressionStat -> OP_EQ instanceOfExpression .)
    ASS_SHR         reduce using rule 447 (instanceOfExpressionStat -> OP_EQ instanceOfExpression .)
    FRPAREN         reduce using rule 447 (instanceOfExpressionStat -> OP_EQ instanceOfExpression .)
    COLON           reduce using rule 447 (instanceOfExpressionStat -> OP_EQ instanceOfExpression .)
    SEMI            reduce using rule 447 (instanceOfExpressionStat -> OP_EQ instanceOfExpression .)


state 350

    (450) instanceOfExpressionStats -> instanceOfExpressionStats instanceOfExpressionStat .

    OP_EQ           reduce using rule 450 (instanceOfExpressionStats -> instanceOfExpressionStats instanceOfExpressionStat .)
    OP_NE           reduce using rule 450 (instanceOfExpressionStats -> instanceOfExpressionStats instanceOfExpressionStat .)
    AND             reduce using rule 450 (instanceOfExpressionStats -> instanceOfExpressionStats instanceOfExpressionStat .)
    CARET           reduce using rule 450 (instanceOfExpressionStats -> instanceOfExpressionStats instanceOfExpressionStat .)
    VERTICAL        reduce using rule 450 (instanceOfExpressionStats -> instanceOfExpressionStats instanceOfExpressionStat .)
    OP_LAND         reduce using rule 450 (instanceOfExpressionStats -> instanceOfExpressionStats instanceOfExpressionStat .)
    OP_LOR          reduce using rule 450 (instanceOfExpressionStats -> instanceOfExpressionStats instanceOfExpressionStat .)
    QUES            reduce using rule 450 (instanceOfExpressionStats -> instanceOfExpressionStats instanceOfExpressionStat .)
    RPAREN          reduce using rule 450 (instanceOfExpressionStats -> instanceOfExpressionStats instanceOfExpressionStat .)
    COMMA           reduce using rule 450 (instanceOfExpressionStats -> instanceOfExpressionStats instanceOfExpressionStat .)
    BRPAREN         reduce using rule 450 (instanceOfExpressionStats -> instanceOfExpressionStats instanceOfExpressionStat .)
    EQUALS          reduce using rule 450 (instanceOfExpressionStats -> instanceOfExpressionStats instanceOfExpressionStat .)
    ASS_ADD         reduce using rule 450 (instanceOfExpressionStats -> instanceOfExpressionStats instanceOfExpressionStat .)
    ASS_SUB         reduce using rule 450 (instanceOfExpressionStats -> instanceOfExpressionStats instanceOfExpressionStat .)
    ASS_MUL         reduce using rule 450 (instanceOfExpressionStats -> instanceOfExpressionStats instanceOfExpressionStat .)
    ASS_DIV         reduce using rule 450 (instanceOfExpressionStats -> instanceOfExpressionStats instanceOfExpressionStat .)
    ASS_AND         reduce using rule 450 (instanceOfExpressionStats -> instanceOfExpressionStats instanceOfExpressionStat .)
    ASS_OR          reduce using rule 450 (instanceOfExpressionStats -> instanceOfExpressionStats instanceOfExpressionStat .)
    ASS_XOR         reduce using rule 450 (instanceOfExpressionStats -> instanceOfExpressionStats instanceOfExpressionStat .)
    ASS_MOD         reduce using rule 450 (instanceOfExpressionStats -> instanceOfExpressionStats instanceOfExpressionStat .)
    ASS_SHL         reduce using rule 450 (instanceOfExpressionStats -> instanceOfExpressionStats instanceOfExpressionStat .)
    ASS_SHRR        reduce using rule 450 (instanceOfExpressionStats -> instanceOfExpressionStats instanceOfExpressionStat .)
    ASS_SHR         reduce using rule 450 (instanceOfExpressionStats -> instanceOfExpressionStats instanceOfExpressionStat .)
    FRPAREN         reduce using rule 450 (instanceOfExpressionStats -> instanceOfExpressionStats instanceOfExpressionStat .)
    COLON           reduce using rule 450 (instanceOfExpressionStats -> instanceOfExpressionStats instanceOfExpressionStat .)
    SEMI            reduce using rule 450 (instanceOfExpressionStats -> instanceOfExpressionStats instanceOfExpressionStat .)


state 351

    (448) instanceOfExpressionStat -> OP_NE instanceOfExpression .

    OP_EQ           reduce using rule 448 (instanceOfExpressionStat -> OP_NE instanceOfExpression .)
    OP_NE           reduce using rule 448 (instanceOfExpressionStat -> OP_NE instanceOfExpression .)
    AND             reduce using rule 448 (instanceOfExpressionStat -> OP_NE instanceOfExpression .)
    CARET           reduce using rule 448 (instanceOfExpressionStat -> OP_NE instanceOfExpression .)
    VERTICAL        reduce using rule 448 (instanceOfExpressionStat -> OP_NE instanceOfExpression .)
    OP_LAND         reduce using rule 448 (instanceOfExpressionStat -> OP_NE instanceOfExpression .)
    OP_LOR          reduce using rule 448 (instanceOfExpressionStat -> OP_NE instanceOfExpression .)
    QUES            reduce using rule 448 (instanceOfExpressionStat -> OP_NE instanceOfExpression .)
    RPAREN          reduce using rule 448 (instanceOfExpressionStat -> OP_NE instanceOfExpression .)
    COMMA           reduce using rule 448 (instanceOfExpressionStat -> OP_NE instanceOfExpression .)
    BRPAREN         reduce using rule 448 (instanceOfExpressionStat -> OP_NE instanceOfExpression .)
    EQUALS          reduce using rule 448 (instanceOfExpressionStat -> OP_NE instanceOfExpression .)
    ASS_ADD         reduce using rule 448 (instanceOfExpressionStat -> OP_NE instanceOfExpression .)
    ASS_SUB         reduce using rule 448 (instanceOfExpressionStat -> OP_NE instanceOfExpression .)
    ASS_MUL         reduce using rule 448 (instanceOfExpressionStat -> OP_NE instanceOfExpression .)
    ASS_DIV         reduce using rule 448 (instanceOfExpressionStat -> OP_NE instanceOfExpression .)
    ASS_AND         reduce using rule 448 (instanceOfExpressionStat -> OP_NE instanceOfExpression .)
    ASS_OR          reduce using rule 448 (instanceOfExpressionStat -> OP_NE instanceOfExpression .)
    ASS_XOR         reduce using rule 448 (instanceOfExpressionStat -> OP_NE instanceOfExpression .)
    ASS_MOD         reduce using rule 448 (instanceOfExpressionStat -> OP_NE instanceOfExpression .)
    ASS_SHL         reduce using rule 448 (instanceOfExpressionStat -> OP_NE instanceOfExpression .)
    ASS_SHRR        reduce using rule 448 (instanceOfExpressionStat -> OP_NE instanceOfExpression .)
    ASS_SHR         reduce using rule 448 (instanceOfExpressionStat -> OP_NE instanceOfExpression .)
    FRPAREN         reduce using rule 448 (instanceOfExpressionStat -> OP_NE instanceOfExpression .)
    COLON           reduce using rule 448 (instanceOfExpressionStat -> OP_NE instanceOfExpression .)
    SEMI            reduce using rule 448 (instanceOfExpressionStat -> OP_NE instanceOfExpression .)


state 352

    (507) primary -> THIS DOT_Identifiers identifierSuffix_empty .

    OP_INC          reduce using rule 507 (primary -> THIS DOT_Identifiers identifierSuffix_empty .)
    OP_DEC          reduce using rule 507 (primary -> THIS DOT_Identifiers identifierSuffix_empty .)
    DOT             reduce using rule 507 (primary -> THIS DOT_Identifiers identifierSuffix_empty .)
    FLPAREN         reduce using rule 507 (primary -> THIS DOT_Identifiers identifierSuffix_empty .)
    MULT            reduce using rule 507 (primary -> THIS DOT_Identifiers identifierSuffix_empty .)
    SLASH           reduce using rule 507 (primary -> THIS DOT_Identifiers identifierSuffix_empty .)
    PERCENT         reduce using rule 507 (primary -> THIS DOT_Identifiers identifierSuffix_empty .)
    PLUS            reduce using rule 507 (primary -> THIS DOT_Identifiers identifierSuffix_empty .)
    DASH            reduce using rule 507 (primary -> THIS DOT_Identifiers identifierSuffix_empty .)
    OP_SHR          reduce using rule 507 (primary -> THIS DOT_Identifiers identifierSuffix_empty .)
    OP_SHRR         reduce using rule 507 (primary -> THIS DOT_Identifiers identifierSuffix_empty .)
    OP_SHL          reduce using rule 507 (primary -> THIS DOT_Identifiers identifierSuffix_empty .)
    OP_LE           reduce using rule 507 (primary -> THIS DOT_Identifiers identifierSuffix_empty .)
    OP_GE           reduce using rule 507 (primary -> THIS DOT_Identifiers identifierSuffix_empty .)
    LESS            reduce using rule 507 (primary -> THIS DOT_Identifiers identifierSuffix_empty .)
    MORE            reduce using rule 507 (primary -> THIS DOT_Identifiers identifierSuffix_empty .)
    INSTANCEOF      reduce using rule 507 (primary -> THIS DOT_Identifiers identifierSuffix_empty .)
    OP_EQ           reduce using rule 507 (primary -> THIS DOT_Identifiers identifierSuffix_empty .)
    OP_NE           reduce using rule 507 (primary -> THIS DOT_Identifiers identifierSuffix_empty .)
    AND             reduce using rule 507 (primary -> THIS DOT_Identifiers identifierSuffix_empty .)
    CARET           reduce using rule 507 (primary -> THIS DOT_Identifiers identifierSuffix_empty .)
    VERTICAL        reduce using rule 507 (primary -> THIS DOT_Identifiers identifierSuffix_empty .)
    OP_LAND         reduce using rule 507 (primary -> THIS DOT_Identifiers identifierSuffix_empty .)
    OP_LOR          reduce using rule 507 (primary -> THIS DOT_Identifiers identifierSuffix_empty .)
    QUES            reduce using rule 507 (primary -> THIS DOT_Identifiers identifierSuffix_empty .)
    EQUALS          reduce using rule 507 (primary -> THIS DOT_Identifiers identifierSuffix_empty .)
    ASS_ADD         reduce using rule 507 (primary -> THIS DOT_Identifiers identifierSuffix_empty .)
    ASS_SUB         reduce using rule 507 (primary -> THIS DOT_Identifiers identifierSuffix_empty .)
    ASS_MUL         reduce using rule 507 (primary -> THIS DOT_Identifiers identifierSuffix_empty .)
    ASS_DIV         reduce using rule 507 (primary -> THIS DOT_Identifiers identifierSuffix_empty .)
    ASS_AND         reduce using rule 507 (primary -> THIS DOT_Identifiers identifierSuffix_empty .)
    ASS_OR          reduce using rule 507 (primary -> THIS DOT_Identifiers identifierSuffix_empty .)
    ASS_XOR         reduce using rule 507 (primary -> THIS DOT_Identifiers identifierSuffix_empty .)
    ASS_MOD         reduce using rule 507 (primary -> THIS DOT_Identifiers identifierSuffix_empty .)
    ASS_SHL         reduce using rule 507 (primary -> THIS DOT_Identifiers identifierSuffix_empty .)
    ASS_SHRR        reduce using rule 507 (primary -> THIS DOT_Identifiers identifierSuffix_empty .)
    ASS_SHR         reduce using rule 507 (primary -> THIS DOT_Identifiers identifierSuffix_empty .)
    FRPAREN         reduce using rule 507 (primary -> THIS DOT_Identifiers identifierSuffix_empty .)
    SEMI            reduce using rule 507 (primary -> THIS DOT_Identifiers identifierSuffix_empty .)
    COMMA           reduce using rule 507 (primary -> THIS DOT_Identifiers identifierSuffix_empty .)
    BRPAREN         reduce using rule 507 (primary -> THIS DOT_Identifiers identifierSuffix_empty .)
    RPAREN          reduce using rule 507 (primary -> THIS DOT_Identifiers identifierSuffix_empty .)
    COLON           reduce using rule 507 (primary -> THIS DOT_Identifiers identifierSuffix_empty .)


state 353

    (517) FL_expression_FR -> FLPAREN expression . FRPAREN

    FRPAREN         shift and go to state 518


state 354

    (525) identifierSuffix -> DOT THIS .

    OP_INC          reduce using rule 525 (identifierSuffix -> DOT THIS .)
    OP_DEC          reduce using rule 525 (identifierSuffix -> DOT THIS .)
    DOT             reduce using rule 525 (identifierSuffix -> DOT THIS .)
    FLPAREN         reduce using rule 525 (identifierSuffix -> DOT THIS .)
    MULT            reduce using rule 525 (identifierSuffix -> DOT THIS .)
    SLASH           reduce using rule 525 (identifierSuffix -> DOT THIS .)
    PERCENT         reduce using rule 525 (identifierSuffix -> DOT THIS .)
    PLUS            reduce using rule 525 (identifierSuffix -> DOT THIS .)
    DASH            reduce using rule 525 (identifierSuffix -> DOT THIS .)
    OP_SHR          reduce using rule 525 (identifierSuffix -> DOT THIS .)
    OP_SHRR         reduce using rule 525 (identifierSuffix -> DOT THIS .)
    OP_SHL          reduce using rule 525 (identifierSuffix -> DOT THIS .)
    OP_LE           reduce using rule 525 (identifierSuffix -> DOT THIS .)
    OP_GE           reduce using rule 525 (identifierSuffix -> DOT THIS .)
    LESS            reduce using rule 525 (identifierSuffix -> DOT THIS .)
    MORE            reduce using rule 525 (identifierSuffix -> DOT THIS .)
    INSTANCEOF      reduce using rule 525 (identifierSuffix -> DOT THIS .)
    OP_EQ           reduce using rule 525 (identifierSuffix -> DOT THIS .)
    OP_NE           reduce using rule 525 (identifierSuffix -> DOT THIS .)
    AND             reduce using rule 525 (identifierSuffix -> DOT THIS .)
    CARET           reduce using rule 525 (identifierSuffix -> DOT THIS .)
    VERTICAL        reduce using rule 525 (identifierSuffix -> DOT THIS .)
    OP_LAND         reduce using rule 525 (identifierSuffix -> DOT THIS .)
    OP_LOR          reduce using rule 525 (identifierSuffix -> DOT THIS .)
    QUES            reduce using rule 525 (identifierSuffix -> DOT THIS .)
    EQUALS          reduce using rule 525 (identifierSuffix -> DOT THIS .)
    ASS_ADD         reduce using rule 525 (identifierSuffix -> DOT THIS .)
    ASS_SUB         reduce using rule 525 (identifierSuffix -> DOT THIS .)
    ASS_MUL         reduce using rule 525 (identifierSuffix -> DOT THIS .)
    ASS_DIV         reduce using rule 525 (identifierSuffix -> DOT THIS .)
    ASS_AND         reduce using rule 525 (identifierSuffix -> DOT THIS .)
    ASS_OR          reduce using rule 525 (identifierSuffix -> DOT THIS .)
    ASS_XOR         reduce using rule 525 (identifierSuffix -> DOT THIS .)
    ASS_MOD         reduce using rule 525 (identifierSuffix -> DOT THIS .)
    ASS_SHL         reduce using rule 525 (identifierSuffix -> DOT THIS .)
    ASS_SHRR        reduce using rule 525 (identifierSuffix -> DOT THIS .)
    ASS_SHR         reduce using rule 525 (identifierSuffix -> DOT THIS .)
    SEMI            reduce using rule 525 (identifierSuffix -> DOT THIS .)
    COLON           reduce using rule 525 (identifierSuffix -> DOT THIS .)
    RPAREN          reduce using rule 525 (identifierSuffix -> DOT THIS .)
    COMMA           reduce using rule 525 (identifierSuffix -> DOT THIS .)
    BRPAREN         reduce using rule 525 (identifierSuffix -> DOT THIS .)
    FRPAREN         reduce using rule 525 (identifierSuffix -> DOT THIS .)


state 355

    (524) identifierSuffix -> DOT explicitGenericInvocation .

    OP_INC          reduce using rule 524 (identifierSuffix -> DOT explicitGenericInvocation .)
    OP_DEC          reduce using rule 524 (identifierSuffix -> DOT explicitGenericInvocation .)
    DOT             reduce using rule 524 (identifierSuffix -> DOT explicitGenericInvocation .)
    FLPAREN         reduce using rule 524 (identifierSuffix -> DOT explicitGenericInvocation .)
    MULT            reduce using rule 524 (identifierSuffix -> DOT explicitGenericInvocation .)
    SLASH           reduce using rule 524 (identifierSuffix -> DOT explicitGenericInvocation .)
    PERCENT         reduce using rule 524 (identifierSuffix -> DOT explicitGenericInvocation .)
    PLUS            reduce using rule 524 (identifierSuffix -> DOT explicitGenericInvocation .)
    DASH            reduce using rule 524 (identifierSuffix -> DOT explicitGenericInvocation .)
    OP_SHR          reduce using rule 524 (identifierSuffix -> DOT explicitGenericInvocation .)
    OP_SHRR         reduce using rule 524 (identifierSuffix -> DOT explicitGenericInvocation .)
    OP_SHL          reduce using rule 524 (identifierSuffix -> DOT explicitGenericInvocation .)
    OP_LE           reduce using rule 524 (identifierSuffix -> DOT explicitGenericInvocation .)
    OP_GE           reduce using rule 524 (identifierSuffix -> DOT explicitGenericInvocation .)
    LESS            reduce using rule 524 (identifierSuffix -> DOT explicitGenericInvocation .)
    MORE            reduce using rule 524 (identifierSuffix -> DOT explicitGenericInvocation .)
    INSTANCEOF      reduce using rule 524 (identifierSuffix -> DOT explicitGenericInvocation .)
    OP_EQ           reduce using rule 524 (identifierSuffix -> DOT explicitGenericInvocation .)
    OP_NE           reduce using rule 524 (identifierSuffix -> DOT explicitGenericInvocation .)
    AND             reduce using rule 524 (identifierSuffix -> DOT explicitGenericInvocation .)
    CARET           reduce using rule 524 (identifierSuffix -> DOT explicitGenericInvocation .)
    VERTICAL        reduce using rule 524 (identifierSuffix -> DOT explicitGenericInvocation .)
    OP_LAND         reduce using rule 524 (identifierSuffix -> DOT explicitGenericInvocation .)
    OP_LOR          reduce using rule 524 (identifierSuffix -> DOT explicitGenericInvocation .)
    QUES            reduce using rule 524 (identifierSuffix -> DOT explicitGenericInvocation .)
    EQUALS          reduce using rule 524 (identifierSuffix -> DOT explicitGenericInvocation .)
    ASS_ADD         reduce using rule 524 (identifierSuffix -> DOT explicitGenericInvocation .)
    ASS_SUB         reduce using rule 524 (identifierSuffix -> DOT explicitGenericInvocation .)
    ASS_MUL         reduce using rule 524 (identifierSuffix -> DOT explicitGenericInvocation .)
    ASS_DIV         reduce using rule 524 (identifierSuffix -> DOT explicitGenericInvocation .)
    ASS_AND         reduce using rule 524 (identifierSuffix -> DOT explicitGenericInvocation .)
    ASS_OR          reduce using rule 524 (identifierSuffix -> DOT explicitGenericInvocation .)
    ASS_XOR         reduce using rule 524 (identifierSuffix -> DOT explicitGenericInvocation .)
    ASS_MOD         reduce using rule 524 (identifierSuffix -> DOT explicitGenericInvocation .)
    ASS_SHL         reduce using rule 524 (identifierSuffix -> DOT explicitGenericInvocation .)
    ASS_SHRR        reduce using rule 524 (identifierSuffix -> DOT explicitGenericInvocation .)
    ASS_SHR         reduce using rule 524 (identifierSuffix -> DOT explicitGenericInvocation .)
    SEMI            reduce using rule 524 (identifierSuffix -> DOT explicitGenericInvocation .)
    COLON           reduce using rule 524 (identifierSuffix -> DOT explicitGenericInvocation .)
    RPAREN          reduce using rule 524 (identifierSuffix -> DOT explicitGenericInvocation .)
    COMMA           reduce using rule 524 (identifierSuffix -> DOT explicitGenericInvocation .)
    BRPAREN         reduce using rule 524 (identifierSuffix -> DOT explicitGenericInvocation .)
    FRPAREN         reduce using rule 524 (identifierSuffix -> DOT explicitGenericInvocation .)


state 356

    (543) explicitGenericInvocation -> nonWildcardTypeArguments . Identifier arguments

    Identifier      shift and go to state 519


state 357

    (527) identifierSuffix -> DOT NEW . innerCreator
    (535) innerCreator -> . nonWildcardTypeArguments_empty Identifier classCreatorRest
    (533) nonWildcardTypeArguments_empty -> . nonWildcardTypeArguments
    (534) nonWildcardTypeArguments_empty -> .
    (544) nonWildcardTypeArguments -> . LESS typeList MORE

    Identifier      reduce using rule 534 (nonWildcardTypeArguments_empty -> .)
    LESS            shift and go to state 242

    nonWildcardTypeArguments_empty shift and go to state 520
    innerCreator                   shift and go to state 522
    nonWildcardTypeArguments       shift and go to state 521

state 358

    (526) identifierSuffix -> DOT SUPER . arguments
    (555) arguments -> . LPAREN expressionList_once RPAREN

    LPAREN          shift and go to state 199

    arguments                      shift and go to state 523

state 359

    (523) identifierSuffix -> DOT CLASS .

    OP_INC          reduce using rule 523 (identifierSuffix -> DOT CLASS .)
    OP_DEC          reduce using rule 523 (identifierSuffix -> DOT CLASS .)
    DOT             reduce using rule 523 (identifierSuffix -> DOT CLASS .)
    FLPAREN         reduce using rule 523 (identifierSuffix -> DOT CLASS .)
    MULT            reduce using rule 523 (identifierSuffix -> DOT CLASS .)
    SLASH           reduce using rule 523 (identifierSuffix -> DOT CLASS .)
    PERCENT         reduce using rule 523 (identifierSuffix -> DOT CLASS .)
    PLUS            reduce using rule 523 (identifierSuffix -> DOT CLASS .)
    DASH            reduce using rule 523 (identifierSuffix -> DOT CLASS .)
    OP_SHR          reduce using rule 523 (identifierSuffix -> DOT CLASS .)
    OP_SHRR         reduce using rule 523 (identifierSuffix -> DOT CLASS .)
    OP_SHL          reduce using rule 523 (identifierSuffix -> DOT CLASS .)
    OP_LE           reduce using rule 523 (identifierSuffix -> DOT CLASS .)
    OP_GE           reduce using rule 523 (identifierSuffix -> DOT CLASS .)
    LESS            reduce using rule 523 (identifierSuffix -> DOT CLASS .)
    MORE            reduce using rule 523 (identifierSuffix -> DOT CLASS .)
    INSTANCEOF      reduce using rule 523 (identifierSuffix -> DOT CLASS .)
    OP_EQ           reduce using rule 523 (identifierSuffix -> DOT CLASS .)
    OP_NE           reduce using rule 523 (identifierSuffix -> DOT CLASS .)
    AND             reduce using rule 523 (identifierSuffix -> DOT CLASS .)
    CARET           reduce using rule 523 (identifierSuffix -> DOT CLASS .)
    VERTICAL        reduce using rule 523 (identifierSuffix -> DOT CLASS .)
    OP_LAND         reduce using rule 523 (identifierSuffix -> DOT CLASS .)
    OP_LOR          reduce using rule 523 (identifierSuffix -> DOT CLASS .)
    QUES            reduce using rule 523 (identifierSuffix -> DOT CLASS .)
    EQUALS          reduce using rule 523 (identifierSuffix -> DOT CLASS .)
    ASS_ADD         reduce using rule 523 (identifierSuffix -> DOT CLASS .)
    ASS_SUB         reduce using rule 523 (identifierSuffix -> DOT CLASS .)
    ASS_MUL         reduce using rule 523 (identifierSuffix -> DOT CLASS .)
    ASS_DIV         reduce using rule 523 (identifierSuffix -> DOT CLASS .)
    ASS_AND         reduce using rule 523 (identifierSuffix -> DOT CLASS .)
    ASS_OR          reduce using rule 523 (identifierSuffix -> DOT CLASS .)
    ASS_XOR         reduce using rule 523 (identifierSuffix -> DOT CLASS .)
    ASS_MOD         reduce using rule 523 (identifierSuffix -> DOT CLASS .)
    ASS_SHL         reduce using rule 523 (identifierSuffix -> DOT CLASS .)
    ASS_SHRR        reduce using rule 523 (identifierSuffix -> DOT CLASS .)
    ASS_SHR         reduce using rule 523 (identifierSuffix -> DOT CLASS .)
    SEMI            reduce using rule 523 (identifierSuffix -> DOT CLASS .)
    COLON           reduce using rule 523 (identifierSuffix -> DOT CLASS .)
    RPAREN          reduce using rule 523 (identifierSuffix -> DOT CLASS .)
    COMMA           reduce using rule 523 (identifierSuffix -> DOT CLASS .)
    BRPAREN         reduce using rule 523 (identifierSuffix -> DOT CLASS .)
    FRPAREN         reduce using rule 523 (identifierSuffix -> DOT CLASS .)


state 360

    (517) FL_expression_FR -> FLPAREN . expression FRPAREN
    (404) expression -> . conditionalExpression assignmentOperator_expression_empty
    (420) conditionalExpression -> . conditionalOrExpression conditionalExpressionStats
    (421) conditionalExpression -> . conditionalOrExpression
    (425) conditionalOrExpression -> . conditionalAndExpression O_conditionalAndExpressions
    (426) conditionalOrExpression -> . conditionalAndExpression
    (430) conditionalAndExpression -> . inclusiveOrExpression O_inclusiveOrExpressions
    (431) conditionalAndExpression -> . inclusiveOrExpression
    (435) inclusiveOrExpression -> . exclusiveOrExpression V_exclusiveOrExpression
    (436) inclusiveOrExpression -> . exclusiveOrExpression
    (440) exclusiveOrExpression -> . andExpression CARET_andExpressions
    (441) exclusiveOrExpression -> . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    equalityExpression             shift and go to state 108
    inclusiveOrExpression          shift and go to state 99
    multiplicativeExpression       shift and go to state 128
    exclusiveOrExpression          shift and go to state 110
    conditionalAndExpression       shift and go to state 89
    shiftExpression                shift and go to state 130
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    integerLiteral                 shift and go to state 98
    additiveExpression             shift and go to state 102
    instanceOfExpression           shift and go to state 96
    conditionalExpression          shift and go to state 266
    unaryExpression                shift and go to state 131
    FloatingPointLiteral           shift and go to state 119
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    relationalExpression           shift and go to state 95
    conditionalOrExpression        shift and go to state 109
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    primitiveType                  shift and go to state 122
    andExpression                  shift and go to state 106
    expression                     shift and go to state 353

state 361

    (519) FL_expression_FRs -> FL_expression_FRs FL_expression_FR .

    FLPAREN         reduce using rule 519 (FL_expression_FRs -> FL_expression_FRs FL_expression_FR .)
    OP_INC          reduce using rule 519 (FL_expression_FRs -> FL_expression_FRs FL_expression_FR .)
    OP_DEC          reduce using rule 519 (FL_expression_FRs -> FL_expression_FRs FL_expression_FR .)
    DOT             reduce using rule 519 (FL_expression_FRs -> FL_expression_FRs FL_expression_FR .)
    MULT            reduce using rule 519 (FL_expression_FRs -> FL_expression_FRs FL_expression_FR .)
    SLASH           reduce using rule 519 (FL_expression_FRs -> FL_expression_FRs FL_expression_FR .)
    PERCENT         reduce using rule 519 (FL_expression_FRs -> FL_expression_FRs FL_expression_FR .)
    PLUS            reduce using rule 519 (FL_expression_FRs -> FL_expression_FRs FL_expression_FR .)
    DASH            reduce using rule 519 (FL_expression_FRs -> FL_expression_FRs FL_expression_FR .)
    OP_SHR          reduce using rule 519 (FL_expression_FRs -> FL_expression_FRs FL_expression_FR .)
    OP_SHRR         reduce using rule 519 (FL_expression_FRs -> FL_expression_FRs FL_expression_FR .)
    OP_SHL          reduce using rule 519 (FL_expression_FRs -> FL_expression_FRs FL_expression_FR .)
    OP_LE           reduce using rule 519 (FL_expression_FRs -> FL_expression_FRs FL_expression_FR .)
    OP_GE           reduce using rule 519 (FL_expression_FRs -> FL_expression_FRs FL_expression_FR .)
    LESS            reduce using rule 519 (FL_expression_FRs -> FL_expression_FRs FL_expression_FR .)
    MORE            reduce using rule 519 (FL_expression_FRs -> FL_expression_FRs FL_expression_FR .)
    INSTANCEOF      reduce using rule 519 (FL_expression_FRs -> FL_expression_FRs FL_expression_FR .)
    OP_EQ           reduce using rule 519 (FL_expression_FRs -> FL_expression_FRs FL_expression_FR .)
    OP_NE           reduce using rule 519 (FL_expression_FRs -> FL_expression_FRs FL_expression_FR .)
    AND             reduce using rule 519 (FL_expression_FRs -> FL_expression_FRs FL_expression_FR .)
    CARET           reduce using rule 519 (FL_expression_FRs -> FL_expression_FRs FL_expression_FR .)
    VERTICAL        reduce using rule 519 (FL_expression_FRs -> FL_expression_FRs FL_expression_FR .)
    OP_LAND         reduce using rule 519 (FL_expression_FRs -> FL_expression_FRs FL_expression_FR .)
    OP_LOR          reduce using rule 519 (FL_expression_FRs -> FL_expression_FRs FL_expression_FR .)
    QUES            reduce using rule 519 (FL_expression_FRs -> FL_expression_FRs FL_expression_FR .)
    RPAREN          reduce using rule 519 (FL_expression_FRs -> FL_expression_FRs FL_expression_FR .)
    COMMA           reduce using rule 519 (FL_expression_FRs -> FL_expression_FRs FL_expression_FR .)
    BRPAREN         reduce using rule 519 (FL_expression_FRs -> FL_expression_FRs FL_expression_FR .)
    EQUALS          reduce using rule 519 (FL_expression_FRs -> FL_expression_FRs FL_expression_FR .)
    ASS_ADD         reduce using rule 519 (FL_expression_FRs -> FL_expression_FRs FL_expression_FR .)
    ASS_SUB         reduce using rule 519 (FL_expression_FRs -> FL_expression_FRs FL_expression_FR .)
    ASS_MUL         reduce using rule 519 (FL_expression_FRs -> FL_expression_FRs FL_expression_FR .)
    ASS_DIV         reduce using rule 519 (FL_expression_FRs -> FL_expression_FRs FL_expression_FR .)
    ASS_AND         reduce using rule 519 (FL_expression_FRs -> FL_expression_FRs FL_expression_FR .)
    ASS_OR          reduce using rule 519 (FL_expression_FRs -> FL_expression_FRs FL_expression_FR .)
    ASS_XOR         reduce using rule 519 (FL_expression_FRs -> FL_expression_FRs FL_expression_FR .)
    ASS_MOD         reduce using rule 519 (FL_expression_FRs -> FL_expression_FRs FL_expression_FR .)
    ASS_SHL         reduce using rule 519 (FL_expression_FRs -> FL_expression_FRs FL_expression_FR .)
    ASS_SHRR        reduce using rule 519 (FL_expression_FRs -> FL_expression_FRs FL_expression_FR .)
    ASS_SHR         reduce using rule 519 (FL_expression_FRs -> FL_expression_FRs FL_expression_FR .)
    FRPAREN         reduce using rule 519 (FL_expression_FRs -> FL_expression_FRs FL_expression_FR .)
    COLON           reduce using rule 519 (FL_expression_FRs -> FL_expression_FRs FL_expression_FR .)
    SEMI            reduce using rule 519 (FL_expression_FRs -> FL_expression_FRs FL_expression_FR .)


state 362

    (555) arguments -> LPAREN expressionList_once . RPAREN

    RPAREN          shift and go to state 524


state 363

    (553) expressionList_once -> expressionList .

    RPAREN          reduce using rule 553 (expressionList_once -> expressionList .)


state 364

    (398) expressionList -> expression . COMMA_expressions
    (399) expressionList -> expression .
    (396) COMMA_expressions -> . COMMA_expression
    (397) COMMA_expressions -> . COMMA_expressions COMMA_expression
    (395) COMMA_expression -> . COMMA expression

    RPAREN          reduce using rule 399 (expressionList -> expression .)
    SEMI            reduce using rule 399 (expressionList -> expression .)
    COMMA           shift and go to state 527

    COMMA_expressions              shift and go to state 525
    COMMA_expression               shift and go to state 526

state 365

    (520) identifierSuffix -> arrays DOT . CLASS

    CLASS           shift and go to state 528


state 366

    (427) O_inclusiveOrExpression -> OP_LAND inclusiveOrExpression .

    OP_LAND         reduce using rule 427 (O_inclusiveOrExpression -> OP_LAND inclusiveOrExpression .)
    OP_LOR          reduce using rule 427 (O_inclusiveOrExpression -> OP_LAND inclusiveOrExpression .)
    QUES            reduce using rule 427 (O_inclusiveOrExpression -> OP_LAND inclusiveOrExpression .)
    RPAREN          reduce using rule 427 (O_inclusiveOrExpression -> OP_LAND inclusiveOrExpression .)
    COMMA           reduce using rule 427 (O_inclusiveOrExpression -> OP_LAND inclusiveOrExpression .)
    BRPAREN         reduce using rule 427 (O_inclusiveOrExpression -> OP_LAND inclusiveOrExpression .)
    EQUALS          reduce using rule 427 (O_inclusiveOrExpression -> OP_LAND inclusiveOrExpression .)
    ASS_ADD         reduce using rule 427 (O_inclusiveOrExpression -> OP_LAND inclusiveOrExpression .)
    ASS_SUB         reduce using rule 427 (O_inclusiveOrExpression -> OP_LAND inclusiveOrExpression .)
    ASS_MUL         reduce using rule 427 (O_inclusiveOrExpression -> OP_LAND inclusiveOrExpression .)
    ASS_DIV         reduce using rule 427 (O_inclusiveOrExpression -> OP_LAND inclusiveOrExpression .)
    ASS_AND         reduce using rule 427 (O_inclusiveOrExpression -> OP_LAND inclusiveOrExpression .)
    ASS_OR          reduce using rule 427 (O_inclusiveOrExpression -> OP_LAND inclusiveOrExpression .)
    ASS_XOR         reduce using rule 427 (O_inclusiveOrExpression -> OP_LAND inclusiveOrExpression .)
    ASS_MOD         reduce using rule 427 (O_inclusiveOrExpression -> OP_LAND inclusiveOrExpression .)
    ASS_SHL         reduce using rule 427 (O_inclusiveOrExpression -> OP_LAND inclusiveOrExpression .)
    ASS_SHRR        reduce using rule 427 (O_inclusiveOrExpression -> OP_LAND inclusiveOrExpression .)
    ASS_SHR         reduce using rule 427 (O_inclusiveOrExpression -> OP_LAND inclusiveOrExpression .)
    FRPAREN         reduce using rule 427 (O_inclusiveOrExpression -> OP_LAND inclusiveOrExpression .)
    COLON           reduce using rule 427 (O_inclusiveOrExpression -> OP_LAND inclusiveOrExpression .)
    SEMI            reduce using rule 427 (O_inclusiveOrExpression -> OP_LAND inclusiveOrExpression .)


state 367

    (429) O_inclusiveOrExpressions -> O_inclusiveOrExpressions O_inclusiveOrExpression .

    OP_LAND         reduce using rule 429 (O_inclusiveOrExpressions -> O_inclusiveOrExpressions O_inclusiveOrExpression .)
    OP_LOR          reduce using rule 429 (O_inclusiveOrExpressions -> O_inclusiveOrExpressions O_inclusiveOrExpression .)
    QUES            reduce using rule 429 (O_inclusiveOrExpressions -> O_inclusiveOrExpressions O_inclusiveOrExpression .)
    RPAREN          reduce using rule 429 (O_inclusiveOrExpressions -> O_inclusiveOrExpressions O_inclusiveOrExpression .)
    COMMA           reduce using rule 429 (O_inclusiveOrExpressions -> O_inclusiveOrExpressions O_inclusiveOrExpression .)
    BRPAREN         reduce using rule 429 (O_inclusiveOrExpressions -> O_inclusiveOrExpressions O_inclusiveOrExpression .)
    EQUALS          reduce using rule 429 (O_inclusiveOrExpressions -> O_inclusiveOrExpressions O_inclusiveOrExpression .)
    ASS_ADD         reduce using rule 429 (O_inclusiveOrExpressions -> O_inclusiveOrExpressions O_inclusiveOrExpression .)
    ASS_SUB         reduce using rule 429 (O_inclusiveOrExpressions -> O_inclusiveOrExpressions O_inclusiveOrExpression .)
    ASS_MUL         reduce using rule 429 (O_inclusiveOrExpressions -> O_inclusiveOrExpressions O_inclusiveOrExpression .)
    ASS_DIV         reduce using rule 429 (O_inclusiveOrExpressions -> O_inclusiveOrExpressions O_inclusiveOrExpression .)
    ASS_AND         reduce using rule 429 (O_inclusiveOrExpressions -> O_inclusiveOrExpressions O_inclusiveOrExpression .)
    ASS_OR          reduce using rule 429 (O_inclusiveOrExpressions -> O_inclusiveOrExpressions O_inclusiveOrExpression .)
    ASS_XOR         reduce using rule 429 (O_inclusiveOrExpressions -> O_inclusiveOrExpressions O_inclusiveOrExpression .)
    ASS_MOD         reduce using rule 429 (O_inclusiveOrExpressions -> O_inclusiveOrExpressions O_inclusiveOrExpression .)
    ASS_SHL         reduce using rule 429 (O_inclusiveOrExpressions -> O_inclusiveOrExpressions O_inclusiveOrExpression .)
    ASS_SHRR        reduce using rule 429 (O_inclusiveOrExpressions -> O_inclusiveOrExpressions O_inclusiveOrExpression .)
    ASS_SHR         reduce using rule 429 (O_inclusiveOrExpressions -> O_inclusiveOrExpressions O_inclusiveOrExpression .)
    FRPAREN         reduce using rule 429 (O_inclusiveOrExpressions -> O_inclusiveOrExpressions O_inclusiveOrExpression .)
    COLON           reduce using rule 429 (O_inclusiveOrExpressions -> O_inclusiveOrExpressions O_inclusiveOrExpression .)
    SEMI            reduce using rule 429 (O_inclusiveOrExpressions -> O_inclusiveOrExpressions O_inclusiveOrExpression .)


state 368

    (295) elementValuePair -> Identifier . EQUALS elementValue

    EQUALS          shift and go to state 214


state 369

    (290) elementValuePairsBody -> COMMA elementValuePair .

    COMMA           reduce using rule 290 (elementValuePairsBody -> COMMA elementValuePair .)
    RPAREN          reduce using rule 290 (elementValuePairsBody -> COMMA elementValuePair .)


state 370

    (292) elementValuePairsBodys -> elementValuePairsBodys elementValuePairsBody .

    COMMA           reduce using rule 292 (elementValuePairsBodys -> elementValuePairsBodys elementValuePairsBody .)
    RPAREN          reduce using rule 292 (elementValuePairsBodys -> elementValuePairsBodys elementValuePairsBody .)


state 371

    (465) sh_additiveExpression -> shiftOp additiveExpression .

    OP_SHR          reduce using rule 465 (sh_additiveExpression -> shiftOp additiveExpression .)
    OP_SHRR         reduce using rule 465 (sh_additiveExpression -> shiftOp additiveExpression .)
    OP_SHL          reduce using rule 465 (sh_additiveExpression -> shiftOp additiveExpression .)
    OP_LE           reduce using rule 465 (sh_additiveExpression -> shiftOp additiveExpression .)
    OP_GE           reduce using rule 465 (sh_additiveExpression -> shiftOp additiveExpression .)
    LESS            reduce using rule 465 (sh_additiveExpression -> shiftOp additiveExpression .)
    MORE            reduce using rule 465 (sh_additiveExpression -> shiftOp additiveExpression .)
    INSTANCEOF      reduce using rule 465 (sh_additiveExpression -> shiftOp additiveExpression .)
    OP_EQ           reduce using rule 465 (sh_additiveExpression -> shiftOp additiveExpression .)
    OP_NE           reduce using rule 465 (sh_additiveExpression -> shiftOp additiveExpression .)
    AND             reduce using rule 465 (sh_additiveExpression -> shiftOp additiveExpression .)
    CARET           reduce using rule 465 (sh_additiveExpression -> shiftOp additiveExpression .)
    VERTICAL        reduce using rule 465 (sh_additiveExpression -> shiftOp additiveExpression .)
    OP_LAND         reduce using rule 465 (sh_additiveExpression -> shiftOp additiveExpression .)
    OP_LOR          reduce using rule 465 (sh_additiveExpression -> shiftOp additiveExpression .)
    QUES            reduce using rule 465 (sh_additiveExpression -> shiftOp additiveExpression .)
    RPAREN          reduce using rule 465 (sh_additiveExpression -> shiftOp additiveExpression .)
    COMMA           reduce using rule 465 (sh_additiveExpression -> shiftOp additiveExpression .)
    BRPAREN         reduce using rule 465 (sh_additiveExpression -> shiftOp additiveExpression .)
    EQUALS          reduce using rule 465 (sh_additiveExpression -> shiftOp additiveExpression .)
    ASS_ADD         reduce using rule 465 (sh_additiveExpression -> shiftOp additiveExpression .)
    ASS_SUB         reduce using rule 465 (sh_additiveExpression -> shiftOp additiveExpression .)
    ASS_MUL         reduce using rule 465 (sh_additiveExpression -> shiftOp additiveExpression .)
    ASS_DIV         reduce using rule 465 (sh_additiveExpression -> shiftOp additiveExpression .)
    ASS_AND         reduce using rule 465 (sh_additiveExpression -> shiftOp additiveExpression .)
    ASS_OR          reduce using rule 465 (sh_additiveExpression -> shiftOp additiveExpression .)
    ASS_XOR         reduce using rule 465 (sh_additiveExpression -> shiftOp additiveExpression .)
    ASS_MOD         reduce using rule 465 (sh_additiveExpression -> shiftOp additiveExpression .)
    ASS_SHL         reduce using rule 465 (sh_additiveExpression -> shiftOp additiveExpression .)
    ASS_SHRR        reduce using rule 465 (sh_additiveExpression -> shiftOp additiveExpression .)
    ASS_SHR         reduce using rule 465 (sh_additiveExpression -> shiftOp additiveExpression .)
    FRPAREN         reduce using rule 465 (sh_additiveExpression -> shiftOp additiveExpression .)
    COLON           reduce using rule 465 (sh_additiveExpression -> shiftOp additiveExpression .)
    SEMI            reduce using rule 465 (sh_additiveExpression -> shiftOp additiveExpression .)


state 372

    (467) sh_additiveExpressions -> sh_additiveExpressions sh_additiveExpression .

    OP_SHR          reduce using rule 467 (sh_additiveExpressions -> sh_additiveExpressions sh_additiveExpression .)
    OP_SHRR         reduce using rule 467 (sh_additiveExpressions -> sh_additiveExpressions sh_additiveExpression .)
    OP_SHL          reduce using rule 467 (sh_additiveExpressions -> sh_additiveExpressions sh_additiveExpression .)
    OP_LE           reduce using rule 467 (sh_additiveExpressions -> sh_additiveExpressions sh_additiveExpression .)
    OP_GE           reduce using rule 467 (sh_additiveExpressions -> sh_additiveExpressions sh_additiveExpression .)
    LESS            reduce using rule 467 (sh_additiveExpressions -> sh_additiveExpressions sh_additiveExpression .)
    MORE            reduce using rule 467 (sh_additiveExpressions -> sh_additiveExpressions sh_additiveExpression .)
    INSTANCEOF      reduce using rule 467 (sh_additiveExpressions -> sh_additiveExpressions sh_additiveExpression .)
    OP_EQ           reduce using rule 467 (sh_additiveExpressions -> sh_additiveExpressions sh_additiveExpression .)
    OP_NE           reduce using rule 467 (sh_additiveExpressions -> sh_additiveExpressions sh_additiveExpression .)
    AND             reduce using rule 467 (sh_additiveExpressions -> sh_additiveExpressions sh_additiveExpression .)
    CARET           reduce using rule 467 (sh_additiveExpressions -> sh_additiveExpressions sh_additiveExpression .)
    VERTICAL        reduce using rule 467 (sh_additiveExpressions -> sh_additiveExpressions sh_additiveExpression .)
    OP_LAND         reduce using rule 467 (sh_additiveExpressions -> sh_additiveExpressions sh_additiveExpression .)
    OP_LOR          reduce using rule 467 (sh_additiveExpressions -> sh_additiveExpressions sh_additiveExpression .)
    QUES            reduce using rule 467 (sh_additiveExpressions -> sh_additiveExpressions sh_additiveExpression .)
    RPAREN          reduce using rule 467 (sh_additiveExpressions -> sh_additiveExpressions sh_additiveExpression .)
    COMMA           reduce using rule 467 (sh_additiveExpressions -> sh_additiveExpressions sh_additiveExpression .)
    BRPAREN         reduce using rule 467 (sh_additiveExpressions -> sh_additiveExpressions sh_additiveExpression .)
    EQUALS          reduce using rule 467 (sh_additiveExpressions -> sh_additiveExpressions sh_additiveExpression .)
    ASS_ADD         reduce using rule 467 (sh_additiveExpressions -> sh_additiveExpressions sh_additiveExpression .)
    ASS_SUB         reduce using rule 467 (sh_additiveExpressions -> sh_additiveExpressions sh_additiveExpression .)
    ASS_MUL         reduce using rule 467 (sh_additiveExpressions -> sh_additiveExpressions sh_additiveExpression .)
    ASS_DIV         reduce using rule 467 (sh_additiveExpressions -> sh_additiveExpressions sh_additiveExpression .)
    ASS_AND         reduce using rule 467 (sh_additiveExpressions -> sh_additiveExpressions sh_additiveExpression .)
    ASS_OR          reduce using rule 467 (sh_additiveExpressions -> sh_additiveExpressions sh_additiveExpression .)
    ASS_XOR         reduce using rule 467 (sh_additiveExpressions -> sh_additiveExpressions sh_additiveExpression .)
    ASS_MOD         reduce using rule 467 (sh_additiveExpressions -> sh_additiveExpressions sh_additiveExpression .)
    ASS_SHL         reduce using rule 467 (sh_additiveExpressions -> sh_additiveExpressions sh_additiveExpression .)
    ASS_SHRR        reduce using rule 467 (sh_additiveExpressions -> sh_additiveExpressions sh_additiveExpression .)
    ASS_SHR         reduce using rule 467 (sh_additiveExpressions -> sh_additiveExpressions sh_additiveExpression .)
    FRPAREN         reduce using rule 467 (sh_additiveExpressions -> sh_additiveExpressions sh_additiveExpression .)
    COLON           reduce using rule 467 (sh_additiveExpressions -> sh_additiveExpressions sh_additiveExpression .)
    SEMI            reduce using rule 467 (sh_additiveExpressions -> sh_additiveExpressions sh_additiveExpression .)


state 373

    (512) primary -> Identifier DOT_Identifiers identifierSuffix_empty .

    OP_INC          reduce using rule 512 (primary -> Identifier DOT_Identifiers identifierSuffix_empty .)
    OP_DEC          reduce using rule 512 (primary -> Identifier DOT_Identifiers identifierSuffix_empty .)
    DOT             reduce using rule 512 (primary -> Identifier DOT_Identifiers identifierSuffix_empty .)
    FLPAREN         reduce using rule 512 (primary -> Identifier DOT_Identifiers identifierSuffix_empty .)
    MULT            reduce using rule 512 (primary -> Identifier DOT_Identifiers identifierSuffix_empty .)
    SLASH           reduce using rule 512 (primary -> Identifier DOT_Identifiers identifierSuffix_empty .)
    PERCENT         reduce using rule 512 (primary -> Identifier DOT_Identifiers identifierSuffix_empty .)
    PLUS            reduce using rule 512 (primary -> Identifier DOT_Identifiers identifierSuffix_empty .)
    DASH            reduce using rule 512 (primary -> Identifier DOT_Identifiers identifierSuffix_empty .)
    OP_SHR          reduce using rule 512 (primary -> Identifier DOT_Identifiers identifierSuffix_empty .)
    OP_SHRR         reduce using rule 512 (primary -> Identifier DOT_Identifiers identifierSuffix_empty .)
    OP_SHL          reduce using rule 512 (primary -> Identifier DOT_Identifiers identifierSuffix_empty .)
    OP_LE           reduce using rule 512 (primary -> Identifier DOT_Identifiers identifierSuffix_empty .)
    OP_GE           reduce using rule 512 (primary -> Identifier DOT_Identifiers identifierSuffix_empty .)
    LESS            reduce using rule 512 (primary -> Identifier DOT_Identifiers identifierSuffix_empty .)
    MORE            reduce using rule 512 (primary -> Identifier DOT_Identifiers identifierSuffix_empty .)
    INSTANCEOF      reduce using rule 512 (primary -> Identifier DOT_Identifiers identifierSuffix_empty .)
    OP_EQ           reduce using rule 512 (primary -> Identifier DOT_Identifiers identifierSuffix_empty .)
    OP_NE           reduce using rule 512 (primary -> Identifier DOT_Identifiers identifierSuffix_empty .)
    AND             reduce using rule 512 (primary -> Identifier DOT_Identifiers identifierSuffix_empty .)
    CARET           reduce using rule 512 (primary -> Identifier DOT_Identifiers identifierSuffix_empty .)
    VERTICAL        reduce using rule 512 (primary -> Identifier DOT_Identifiers identifierSuffix_empty .)
    OP_LAND         reduce using rule 512 (primary -> Identifier DOT_Identifiers identifierSuffix_empty .)
    OP_LOR          reduce using rule 512 (primary -> Identifier DOT_Identifiers identifierSuffix_empty .)
    QUES            reduce using rule 512 (primary -> Identifier DOT_Identifiers identifierSuffix_empty .)
    EQUALS          reduce using rule 512 (primary -> Identifier DOT_Identifiers identifierSuffix_empty .)
    ASS_ADD         reduce using rule 512 (primary -> Identifier DOT_Identifiers identifierSuffix_empty .)
    ASS_SUB         reduce using rule 512 (primary -> Identifier DOT_Identifiers identifierSuffix_empty .)
    ASS_MUL         reduce using rule 512 (primary -> Identifier DOT_Identifiers identifierSuffix_empty .)
    ASS_DIV         reduce using rule 512 (primary -> Identifier DOT_Identifiers identifierSuffix_empty .)
    ASS_AND         reduce using rule 512 (primary -> Identifier DOT_Identifiers identifierSuffix_empty .)
    ASS_OR          reduce using rule 512 (primary -> Identifier DOT_Identifiers identifierSuffix_empty .)
    ASS_XOR         reduce using rule 512 (primary -> Identifier DOT_Identifiers identifierSuffix_empty .)
    ASS_MOD         reduce using rule 512 (primary -> Identifier DOT_Identifiers identifierSuffix_empty .)
    ASS_SHL         reduce using rule 512 (primary -> Identifier DOT_Identifiers identifierSuffix_empty .)
    ASS_SHRR        reduce using rule 512 (primary -> Identifier DOT_Identifiers identifierSuffix_empty .)
    ASS_SHR         reduce using rule 512 (primary -> Identifier DOT_Identifiers identifierSuffix_empty .)
    FRPAREN         reduce using rule 512 (primary -> Identifier DOT_Identifiers identifierSuffix_empty .)
    SEMI            reduce using rule 512 (primary -> Identifier DOT_Identifiers identifierSuffix_empty .)
    COMMA           reduce using rule 512 (primary -> Identifier DOT_Identifiers identifierSuffix_empty .)
    BRPAREN         reduce using rule 512 (primary -> Identifier DOT_Identifiers identifierSuffix_empty .)
    RPAREN          reduce using rule 512 (primary -> Identifier DOT_Identifiers identifierSuffix_empty .)
    COLON           reduce using rule 512 (primary -> Identifier DOT_Identifiers identifierSuffix_empty .)


state 374

    (295) elementValuePair -> Identifier EQUALS elementValue .

    COMMA           reduce using rule 295 (elementValuePair -> Identifier EQUALS elementValue .)
    RPAREN          reduce using rule 295 (elementValuePair -> Identifier EQUALS elementValue .)


state 375

    (439) CARET_andExpressions -> CARET_andExpressions CARET_andExpression .

    CARET           reduce using rule 439 (CARET_andExpressions -> CARET_andExpressions CARET_andExpression .)
    VERTICAL        reduce using rule 439 (CARET_andExpressions -> CARET_andExpressions CARET_andExpression .)
    OP_LAND         reduce using rule 439 (CARET_andExpressions -> CARET_andExpressions CARET_andExpression .)
    OP_LOR          reduce using rule 439 (CARET_andExpressions -> CARET_andExpressions CARET_andExpression .)
    QUES            reduce using rule 439 (CARET_andExpressions -> CARET_andExpressions CARET_andExpression .)
    RPAREN          reduce using rule 439 (CARET_andExpressions -> CARET_andExpressions CARET_andExpression .)
    COMMA           reduce using rule 439 (CARET_andExpressions -> CARET_andExpressions CARET_andExpression .)
    BRPAREN         reduce using rule 439 (CARET_andExpressions -> CARET_andExpressions CARET_andExpression .)
    EQUALS          reduce using rule 439 (CARET_andExpressions -> CARET_andExpressions CARET_andExpression .)
    ASS_ADD         reduce using rule 439 (CARET_andExpressions -> CARET_andExpressions CARET_andExpression .)
    ASS_SUB         reduce using rule 439 (CARET_andExpressions -> CARET_andExpressions CARET_andExpression .)
    ASS_MUL         reduce using rule 439 (CARET_andExpressions -> CARET_andExpressions CARET_andExpression .)
    ASS_DIV         reduce using rule 439 (CARET_andExpressions -> CARET_andExpressions CARET_andExpression .)
    ASS_AND         reduce using rule 439 (CARET_andExpressions -> CARET_andExpressions CARET_andExpression .)
    ASS_OR          reduce using rule 439 (CARET_andExpressions -> CARET_andExpressions CARET_andExpression .)
    ASS_XOR         reduce using rule 439 (CARET_andExpressions -> CARET_andExpressions CARET_andExpression .)
    ASS_MOD         reduce using rule 439 (CARET_andExpressions -> CARET_andExpressions CARET_andExpression .)
    ASS_SHL         reduce using rule 439 (CARET_andExpressions -> CARET_andExpressions CARET_andExpression .)
    ASS_SHRR        reduce using rule 439 (CARET_andExpressions -> CARET_andExpressions CARET_andExpression .)
    ASS_SHR         reduce using rule 439 (CARET_andExpressions -> CARET_andExpressions CARET_andExpression .)
    FRPAREN         reduce using rule 439 (CARET_andExpressions -> CARET_andExpressions CARET_andExpression .)
    COLON           reduce using rule 439 (CARET_andExpressions -> CARET_andExpressions CARET_andExpression .)
    SEMI            reduce using rule 439 (CARET_andExpressions -> CARET_andExpressions CARET_andExpression .)


state 376

    (437) CARET_andExpression -> CARET andExpression .

    CARET           reduce using rule 437 (CARET_andExpression -> CARET andExpression .)
    VERTICAL        reduce using rule 437 (CARET_andExpression -> CARET andExpression .)
    OP_LAND         reduce using rule 437 (CARET_andExpression -> CARET andExpression .)
    OP_LOR          reduce using rule 437 (CARET_andExpression -> CARET andExpression .)
    QUES            reduce using rule 437 (CARET_andExpression -> CARET andExpression .)
    RPAREN          reduce using rule 437 (CARET_andExpression -> CARET andExpression .)
    COMMA           reduce using rule 437 (CARET_andExpression -> CARET andExpression .)
    BRPAREN         reduce using rule 437 (CARET_andExpression -> CARET andExpression .)
    EQUALS          reduce using rule 437 (CARET_andExpression -> CARET andExpression .)
    ASS_ADD         reduce using rule 437 (CARET_andExpression -> CARET andExpression .)
    ASS_SUB         reduce using rule 437 (CARET_andExpression -> CARET andExpression .)
    ASS_MUL         reduce using rule 437 (CARET_andExpression -> CARET andExpression .)
    ASS_DIV         reduce using rule 437 (CARET_andExpression -> CARET andExpression .)
    ASS_AND         reduce using rule 437 (CARET_andExpression -> CARET andExpression .)
    ASS_OR          reduce using rule 437 (CARET_andExpression -> CARET andExpression .)
    ASS_XOR         reduce using rule 437 (CARET_andExpression -> CARET andExpression .)
    ASS_MOD         reduce using rule 437 (CARET_andExpression -> CARET andExpression .)
    ASS_SHL         reduce using rule 437 (CARET_andExpression -> CARET andExpression .)
    ASS_SHRR        reduce using rule 437 (CARET_andExpression -> CARET andExpression .)
    ASS_SHR         reduce using rule 437 (CARET_andExpression -> CARET andExpression .)
    FRPAREN         reduce using rule 437 (CARET_andExpression -> CARET andExpression .)
    COLON           reduce using rule 437 (CARET_andExpression -> CARET andExpression .)
    SEMI            reduce using rule 437 (CARET_andExpression -> CARET andExpression .)


state 377

    (307) elementValueArrayInitializer -> BLPAREN elementValueStatement COMMA_OR_empty . BRPAREN

    BRPAREN         shift and go to state 529


state 378

    (305) COMMA_OR_empty -> COMMA .

    BRPAREN         reduce using rule 305 (COMMA_OR_empty -> COMMA .)


state 379

    (302) elementValueStatement -> elementValue elementValueBodys .
    (301) elementValueBodys -> elementValueBodys . elementValueBody
    (299) elementValueBody -> . COMMA elementValue

  ! shift/reduce conflict for COMMA resolved as shift
    BRPAREN         reduce using rule 302 (elementValueStatement -> elementValue elementValueBodys .)
    COMMA           shift and go to state 380

  ! COMMA           [ reduce using rule 302 (elementValueStatement -> elementValue elementValueBodys .) ]

    elementValueBody               shift and go to state 530

state 380

    (299) elementValueBody -> COMMA . elementValue
    (296) elementValue -> . conditionalExpression
    (297) elementValue -> . annotation
    (298) elementValue -> . elementValueArrayInitializer
    (420) conditionalExpression -> . conditionalOrExpression conditionalExpressionStats
    (421) conditionalExpression -> . conditionalOrExpression
    (287) annotation -> . AT annotationName annotationBody
    (307) elementValueArrayInitializer -> . BLPAREN elementValueStatement COMMA_OR_empty BRPAREN
    (425) conditionalOrExpression -> . conditionalAndExpression O_conditionalAndExpressions
    (426) conditionalOrExpression -> . conditionalAndExpression
    (430) conditionalAndExpression -> . inclusiveOrExpression O_inclusiveOrExpressions
    (431) conditionalAndExpression -> . inclusiveOrExpression
    (435) inclusiveOrExpression -> . exclusiveOrExpression V_exclusiveOrExpression
    (436) inclusiveOrExpression -> . exclusiveOrExpression
    (440) exclusiveOrExpression -> . andExpression CARET_andExpressions
    (441) exclusiveOrExpression -> . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    AT              shift and go to state 133
    BLPAREN         shift and go to state 107
    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    equalityExpression             shift and go to state 108
    inclusiveOrExpression          shift and go to state 99
    multiplicativeExpression       shift and go to state 128
    exclusiveOrExpression          shift and go to state 110
    conditionalAndExpression       shift and go to state 89
    shiftExpression                shift and go to state 130
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    integerLiteral                 shift and go to state 98
    additiveExpression             shift and go to state 102
    instanceOfExpression           shift and go to state 96
    conditionalExpression          shift and go to state 118
    unaryExpression                shift and go to state 131
    FloatingPointLiteral           shift and go to state 119
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    relationalExpression           shift and go to state 95
    conditionalOrExpression        shift and go to state 109
    annotation                     shift and go to state 136
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    primitiveType                  shift and go to state 122
    elementValueArrayInitializer   shift and go to state 123
    andExpression                  shift and go to state 106
    elementValue                   shift and go to state 531

state 381

    (300) elementValueBodys -> elementValueBody .

    COMMA           reduce using rule 300 (elementValueBodys -> elementValueBody .)
    BRPAREN         reduce using rule 300 (elementValueBodys -> elementValueBody .)


state 382

    (444) AND_equalityExpressions -> AND_equalityExpressions AND_equalityExpression .

    AND             reduce using rule 444 (AND_equalityExpressions -> AND_equalityExpressions AND_equalityExpression .)
    CARET           reduce using rule 444 (AND_equalityExpressions -> AND_equalityExpressions AND_equalityExpression .)
    VERTICAL        reduce using rule 444 (AND_equalityExpressions -> AND_equalityExpressions AND_equalityExpression .)
    OP_LAND         reduce using rule 444 (AND_equalityExpressions -> AND_equalityExpressions AND_equalityExpression .)
    OP_LOR          reduce using rule 444 (AND_equalityExpressions -> AND_equalityExpressions AND_equalityExpression .)
    QUES            reduce using rule 444 (AND_equalityExpressions -> AND_equalityExpressions AND_equalityExpression .)
    RPAREN          reduce using rule 444 (AND_equalityExpressions -> AND_equalityExpressions AND_equalityExpression .)
    COMMA           reduce using rule 444 (AND_equalityExpressions -> AND_equalityExpressions AND_equalityExpression .)
    BRPAREN         reduce using rule 444 (AND_equalityExpressions -> AND_equalityExpressions AND_equalityExpression .)
    EQUALS          reduce using rule 444 (AND_equalityExpressions -> AND_equalityExpressions AND_equalityExpression .)
    ASS_ADD         reduce using rule 444 (AND_equalityExpressions -> AND_equalityExpressions AND_equalityExpression .)
    ASS_SUB         reduce using rule 444 (AND_equalityExpressions -> AND_equalityExpressions AND_equalityExpression .)
    ASS_MUL         reduce using rule 444 (AND_equalityExpressions -> AND_equalityExpressions AND_equalityExpression .)
    ASS_DIV         reduce using rule 444 (AND_equalityExpressions -> AND_equalityExpressions AND_equalityExpression .)
    ASS_AND         reduce using rule 444 (AND_equalityExpressions -> AND_equalityExpressions AND_equalityExpression .)
    ASS_OR          reduce using rule 444 (AND_equalityExpressions -> AND_equalityExpressions AND_equalityExpression .)
    ASS_XOR         reduce using rule 444 (AND_equalityExpressions -> AND_equalityExpressions AND_equalityExpression .)
    ASS_MOD         reduce using rule 444 (AND_equalityExpressions -> AND_equalityExpressions AND_equalityExpression .)
    ASS_SHL         reduce using rule 444 (AND_equalityExpressions -> AND_equalityExpressions AND_equalityExpression .)
    ASS_SHRR        reduce using rule 444 (AND_equalityExpressions -> AND_equalityExpressions AND_equalityExpression .)
    ASS_SHR         reduce using rule 444 (AND_equalityExpressions -> AND_equalityExpressions AND_equalityExpression .)
    FRPAREN         reduce using rule 444 (AND_equalityExpressions -> AND_equalityExpressions AND_equalityExpression .)
    COLON           reduce using rule 444 (AND_equalityExpressions -> AND_equalityExpressions AND_equalityExpression .)
    SEMI            reduce using rule 444 (AND_equalityExpressions -> AND_equalityExpressions AND_equalityExpression .)


state 383

    (442) AND_equalityExpression -> AND equalityExpression .

    AND             reduce using rule 442 (AND_equalityExpression -> AND equalityExpression .)
    CARET           reduce using rule 442 (AND_equalityExpression -> AND equalityExpression .)
    VERTICAL        reduce using rule 442 (AND_equalityExpression -> AND equalityExpression .)
    OP_LAND         reduce using rule 442 (AND_equalityExpression -> AND equalityExpression .)
    OP_LOR          reduce using rule 442 (AND_equalityExpression -> AND equalityExpression .)
    QUES            reduce using rule 442 (AND_equalityExpression -> AND equalityExpression .)
    RPAREN          reduce using rule 442 (AND_equalityExpression -> AND equalityExpression .)
    COMMA           reduce using rule 442 (AND_equalityExpression -> AND equalityExpression .)
    BRPAREN         reduce using rule 442 (AND_equalityExpression -> AND equalityExpression .)
    EQUALS          reduce using rule 442 (AND_equalityExpression -> AND equalityExpression .)
    ASS_ADD         reduce using rule 442 (AND_equalityExpression -> AND equalityExpression .)
    ASS_SUB         reduce using rule 442 (AND_equalityExpression -> AND equalityExpression .)
    ASS_MUL         reduce using rule 442 (AND_equalityExpression -> AND equalityExpression .)
    ASS_DIV         reduce using rule 442 (AND_equalityExpression -> AND equalityExpression .)
    ASS_AND         reduce using rule 442 (AND_equalityExpression -> AND equalityExpression .)
    ASS_OR          reduce using rule 442 (AND_equalityExpression -> AND equalityExpression .)
    ASS_XOR         reduce using rule 442 (AND_equalityExpression -> AND equalityExpression .)
    ASS_MOD         reduce using rule 442 (AND_equalityExpression -> AND equalityExpression .)
    ASS_SHL         reduce using rule 442 (AND_equalityExpression -> AND equalityExpression .)
    ASS_SHRR        reduce using rule 442 (AND_equalityExpression -> AND equalityExpression .)
    ASS_SHR         reduce using rule 442 (AND_equalityExpression -> AND equalityExpression .)
    FRPAREN         reduce using rule 442 (AND_equalityExpression -> AND equalityExpression .)
    COLON           reduce using rule 442 (AND_equalityExpression -> AND equalityExpression .)
    SEMI            reduce using rule 442 (AND_equalityExpression -> AND equalityExpression .)


state 384

    (419) conditionalExpressionStats -> conditionalExpressionStats conditionalExpressionStat .

    EQUALS          reduce using rule 419 (conditionalExpressionStats -> conditionalExpressionStats conditionalExpressionStat .)
    ASS_ADD         reduce using rule 419 (conditionalExpressionStats -> conditionalExpressionStats conditionalExpressionStat .)
    ASS_SUB         reduce using rule 419 (conditionalExpressionStats -> conditionalExpressionStats conditionalExpressionStat .)
    ASS_MUL         reduce using rule 419 (conditionalExpressionStats -> conditionalExpressionStats conditionalExpressionStat .)
    ASS_DIV         reduce using rule 419 (conditionalExpressionStats -> conditionalExpressionStats conditionalExpressionStat .)
    ASS_AND         reduce using rule 419 (conditionalExpressionStats -> conditionalExpressionStats conditionalExpressionStat .)
    ASS_OR          reduce using rule 419 (conditionalExpressionStats -> conditionalExpressionStats conditionalExpressionStat .)
    ASS_XOR         reduce using rule 419 (conditionalExpressionStats -> conditionalExpressionStats conditionalExpressionStat .)
    ASS_MOD         reduce using rule 419 (conditionalExpressionStats -> conditionalExpressionStats conditionalExpressionStat .)
    ASS_SHL         reduce using rule 419 (conditionalExpressionStats -> conditionalExpressionStats conditionalExpressionStat .)
    ASS_SHRR        reduce using rule 419 (conditionalExpressionStats -> conditionalExpressionStats conditionalExpressionStat .)
    ASS_SHR         reduce using rule 419 (conditionalExpressionStats -> conditionalExpressionStats conditionalExpressionStat .)
    RPAREN          reduce using rule 419 (conditionalExpressionStats -> conditionalExpressionStats conditionalExpressionStat .)
    FRPAREN         reduce using rule 419 (conditionalExpressionStats -> conditionalExpressionStats conditionalExpressionStat .)
    COMMA           reduce using rule 419 (conditionalExpressionStats -> conditionalExpressionStats conditionalExpressionStat .)
    COLON           reduce using rule 419 (conditionalExpressionStats -> conditionalExpressionStats conditionalExpressionStat .)
    SEMI            reduce using rule 419 (conditionalExpressionStats -> conditionalExpressionStats conditionalExpressionStat .)
    QUES            reduce using rule 419 (conditionalExpressionStats -> conditionalExpressionStats conditionalExpressionStat .)
    BRPAREN         reduce using rule 419 (conditionalExpressionStats -> conditionalExpressionStats conditionalExpressionStat .)


state 385

    (417) conditionalExpressionStat -> QUES expression . COLON expression

    COLON           shift and go to state 532


state 386

    (432) V_exclusiveOrExpression -> VERTICAL exclusiveOrExpression .

    OP_LAND         reduce using rule 432 (V_exclusiveOrExpression -> VERTICAL exclusiveOrExpression .)
    OP_LOR          reduce using rule 432 (V_exclusiveOrExpression -> VERTICAL exclusiveOrExpression .)
    QUES            reduce using rule 432 (V_exclusiveOrExpression -> VERTICAL exclusiveOrExpression .)
    RPAREN          reduce using rule 432 (V_exclusiveOrExpression -> VERTICAL exclusiveOrExpression .)
    COMMA           reduce using rule 432 (V_exclusiveOrExpression -> VERTICAL exclusiveOrExpression .)
    BRPAREN         reduce using rule 432 (V_exclusiveOrExpression -> VERTICAL exclusiveOrExpression .)
    EQUALS          reduce using rule 432 (V_exclusiveOrExpression -> VERTICAL exclusiveOrExpression .)
    ASS_ADD         reduce using rule 432 (V_exclusiveOrExpression -> VERTICAL exclusiveOrExpression .)
    ASS_SUB         reduce using rule 432 (V_exclusiveOrExpression -> VERTICAL exclusiveOrExpression .)
    ASS_MUL         reduce using rule 432 (V_exclusiveOrExpression -> VERTICAL exclusiveOrExpression .)
    ASS_DIV         reduce using rule 432 (V_exclusiveOrExpression -> VERTICAL exclusiveOrExpression .)
    ASS_AND         reduce using rule 432 (V_exclusiveOrExpression -> VERTICAL exclusiveOrExpression .)
    ASS_OR          reduce using rule 432 (V_exclusiveOrExpression -> VERTICAL exclusiveOrExpression .)
    ASS_XOR         reduce using rule 432 (V_exclusiveOrExpression -> VERTICAL exclusiveOrExpression .)
    ASS_MOD         reduce using rule 432 (V_exclusiveOrExpression -> VERTICAL exclusiveOrExpression .)
    ASS_SHL         reduce using rule 432 (V_exclusiveOrExpression -> VERTICAL exclusiveOrExpression .)
    ASS_SHRR        reduce using rule 432 (V_exclusiveOrExpression -> VERTICAL exclusiveOrExpression .)
    ASS_SHR         reduce using rule 432 (V_exclusiveOrExpression -> VERTICAL exclusiveOrExpression .)
    FRPAREN         reduce using rule 432 (V_exclusiveOrExpression -> VERTICAL exclusiveOrExpression .)
    COLON           reduce using rule 432 (V_exclusiveOrExpression -> VERTICAL exclusiveOrExpression .)
    SEMI            reduce using rule 432 (V_exclusiveOrExpression -> VERTICAL exclusiveOrExpression .)


state 387

    (550) selector -> FLPAREN expression . FRPAREN

    FRPAREN         shift and go to state 533


state 388

    (495) selectors -> selectors selector .

    OP_INC          reduce using rule 495 (selectors -> selectors selector .)
    OP_DEC          reduce using rule 495 (selectors -> selectors selector .)
    DOT             reduce using rule 495 (selectors -> selectors selector .)
    FLPAREN         reduce using rule 495 (selectors -> selectors selector .)
    MULT            reduce using rule 495 (selectors -> selectors selector .)
    SLASH           reduce using rule 495 (selectors -> selectors selector .)
    PERCENT         reduce using rule 495 (selectors -> selectors selector .)
    PLUS            reduce using rule 495 (selectors -> selectors selector .)
    DASH            reduce using rule 495 (selectors -> selectors selector .)
    OP_SHR          reduce using rule 495 (selectors -> selectors selector .)
    OP_SHRR         reduce using rule 495 (selectors -> selectors selector .)
    OP_SHL          reduce using rule 495 (selectors -> selectors selector .)
    OP_LE           reduce using rule 495 (selectors -> selectors selector .)
    OP_GE           reduce using rule 495 (selectors -> selectors selector .)
    LESS            reduce using rule 495 (selectors -> selectors selector .)
    MORE            reduce using rule 495 (selectors -> selectors selector .)
    INSTANCEOF      reduce using rule 495 (selectors -> selectors selector .)
    OP_EQ           reduce using rule 495 (selectors -> selectors selector .)
    OP_NE           reduce using rule 495 (selectors -> selectors selector .)
    AND             reduce using rule 495 (selectors -> selectors selector .)
    CARET           reduce using rule 495 (selectors -> selectors selector .)
    VERTICAL        reduce using rule 495 (selectors -> selectors selector .)
    OP_LAND         reduce using rule 495 (selectors -> selectors selector .)
    OP_LOR          reduce using rule 495 (selectors -> selectors selector .)
    QUES            reduce using rule 495 (selectors -> selectors selector .)
    RPAREN          reduce using rule 495 (selectors -> selectors selector .)
    COMMA           reduce using rule 495 (selectors -> selectors selector .)
    BRPAREN         reduce using rule 495 (selectors -> selectors selector .)
    EQUALS          reduce using rule 495 (selectors -> selectors selector .)
    ASS_ADD         reduce using rule 495 (selectors -> selectors selector .)
    ASS_SUB         reduce using rule 495 (selectors -> selectors selector .)
    ASS_MUL         reduce using rule 495 (selectors -> selectors selector .)
    ASS_DIV         reduce using rule 495 (selectors -> selectors selector .)
    ASS_AND         reduce using rule 495 (selectors -> selectors selector .)
    ASS_OR          reduce using rule 495 (selectors -> selectors selector .)
    ASS_XOR         reduce using rule 495 (selectors -> selectors selector .)
    ASS_MOD         reduce using rule 495 (selectors -> selectors selector .)
    ASS_SHL         reduce using rule 495 (selectors -> selectors selector .)
    ASS_SHRR        reduce using rule 495 (selectors -> selectors selector .)
    ASS_SHR         reduce using rule 495 (selectors -> selectors selector .)
    FRPAREN         reduce using rule 495 (selectors -> selectors selector .)
    COLON           reduce using rule 495 (selectors -> selectors selector .)
    SEMI            reduce using rule 495 (selectors -> selectors selector .)


state 389

    (499) unaryExpressionNotPlusMinus -> primary selectors INC_DEC_empty .

    MULT            reduce using rule 499 (unaryExpressionNotPlusMinus -> primary selectors INC_DEC_empty .)
    SLASH           reduce using rule 499 (unaryExpressionNotPlusMinus -> primary selectors INC_DEC_empty .)
    PERCENT         reduce using rule 499 (unaryExpressionNotPlusMinus -> primary selectors INC_DEC_empty .)
    PLUS            reduce using rule 499 (unaryExpressionNotPlusMinus -> primary selectors INC_DEC_empty .)
    DASH            reduce using rule 499 (unaryExpressionNotPlusMinus -> primary selectors INC_DEC_empty .)
    OP_SHR          reduce using rule 499 (unaryExpressionNotPlusMinus -> primary selectors INC_DEC_empty .)
    OP_SHRR         reduce using rule 499 (unaryExpressionNotPlusMinus -> primary selectors INC_DEC_empty .)
    OP_SHL          reduce using rule 499 (unaryExpressionNotPlusMinus -> primary selectors INC_DEC_empty .)
    OP_LE           reduce using rule 499 (unaryExpressionNotPlusMinus -> primary selectors INC_DEC_empty .)
    OP_GE           reduce using rule 499 (unaryExpressionNotPlusMinus -> primary selectors INC_DEC_empty .)
    LESS            reduce using rule 499 (unaryExpressionNotPlusMinus -> primary selectors INC_DEC_empty .)
    MORE            reduce using rule 499 (unaryExpressionNotPlusMinus -> primary selectors INC_DEC_empty .)
    INSTANCEOF      reduce using rule 499 (unaryExpressionNotPlusMinus -> primary selectors INC_DEC_empty .)
    OP_EQ           reduce using rule 499 (unaryExpressionNotPlusMinus -> primary selectors INC_DEC_empty .)
    OP_NE           reduce using rule 499 (unaryExpressionNotPlusMinus -> primary selectors INC_DEC_empty .)
    AND             reduce using rule 499 (unaryExpressionNotPlusMinus -> primary selectors INC_DEC_empty .)
    CARET           reduce using rule 499 (unaryExpressionNotPlusMinus -> primary selectors INC_DEC_empty .)
    VERTICAL        reduce using rule 499 (unaryExpressionNotPlusMinus -> primary selectors INC_DEC_empty .)
    OP_LAND         reduce using rule 499 (unaryExpressionNotPlusMinus -> primary selectors INC_DEC_empty .)
    OP_LOR          reduce using rule 499 (unaryExpressionNotPlusMinus -> primary selectors INC_DEC_empty .)
    QUES            reduce using rule 499 (unaryExpressionNotPlusMinus -> primary selectors INC_DEC_empty .)
    EQUALS          reduce using rule 499 (unaryExpressionNotPlusMinus -> primary selectors INC_DEC_empty .)
    ASS_ADD         reduce using rule 499 (unaryExpressionNotPlusMinus -> primary selectors INC_DEC_empty .)
    ASS_SUB         reduce using rule 499 (unaryExpressionNotPlusMinus -> primary selectors INC_DEC_empty .)
    ASS_MUL         reduce using rule 499 (unaryExpressionNotPlusMinus -> primary selectors INC_DEC_empty .)
    ASS_DIV         reduce using rule 499 (unaryExpressionNotPlusMinus -> primary selectors INC_DEC_empty .)
    ASS_AND         reduce using rule 499 (unaryExpressionNotPlusMinus -> primary selectors INC_DEC_empty .)
    ASS_OR          reduce using rule 499 (unaryExpressionNotPlusMinus -> primary selectors INC_DEC_empty .)
    ASS_XOR         reduce using rule 499 (unaryExpressionNotPlusMinus -> primary selectors INC_DEC_empty .)
    ASS_MOD         reduce using rule 499 (unaryExpressionNotPlusMinus -> primary selectors INC_DEC_empty .)
    ASS_SHL         reduce using rule 499 (unaryExpressionNotPlusMinus -> primary selectors INC_DEC_empty .)
    ASS_SHRR        reduce using rule 499 (unaryExpressionNotPlusMinus -> primary selectors INC_DEC_empty .)
    ASS_SHR         reduce using rule 499 (unaryExpressionNotPlusMinus -> primary selectors INC_DEC_empty .)
    RPAREN          reduce using rule 499 (unaryExpressionNotPlusMinus -> primary selectors INC_DEC_empty .)
    COMMA           reduce using rule 499 (unaryExpressionNotPlusMinus -> primary selectors INC_DEC_empty .)
    SEMI            reduce using rule 499 (unaryExpressionNotPlusMinus -> primary selectors INC_DEC_empty .)
    FRPAREN         reduce using rule 499 (unaryExpressionNotPlusMinus -> primary selectors INC_DEC_empty .)
    BRPAREN         reduce using rule 499 (unaryExpressionNotPlusMinus -> primary selectors INC_DEC_empty .)
    COLON           reduce using rule 499 (unaryExpressionNotPlusMinus -> primary selectors INC_DEC_empty .)


state 390

    (547) selector -> DOT THIS .

    OP_INC          reduce using rule 547 (selector -> DOT THIS .)
    OP_DEC          reduce using rule 547 (selector -> DOT THIS .)
    DOT             reduce using rule 547 (selector -> DOT THIS .)
    FLPAREN         reduce using rule 547 (selector -> DOT THIS .)
    MULT            reduce using rule 547 (selector -> DOT THIS .)
    SLASH           reduce using rule 547 (selector -> DOT THIS .)
    PERCENT         reduce using rule 547 (selector -> DOT THIS .)
    PLUS            reduce using rule 547 (selector -> DOT THIS .)
    DASH            reduce using rule 547 (selector -> DOT THIS .)
    OP_SHR          reduce using rule 547 (selector -> DOT THIS .)
    OP_SHRR         reduce using rule 547 (selector -> DOT THIS .)
    OP_SHL          reduce using rule 547 (selector -> DOT THIS .)
    OP_LE           reduce using rule 547 (selector -> DOT THIS .)
    OP_GE           reduce using rule 547 (selector -> DOT THIS .)
    LESS            reduce using rule 547 (selector -> DOT THIS .)
    MORE            reduce using rule 547 (selector -> DOT THIS .)
    INSTANCEOF      reduce using rule 547 (selector -> DOT THIS .)
    OP_EQ           reduce using rule 547 (selector -> DOT THIS .)
    OP_NE           reduce using rule 547 (selector -> DOT THIS .)
    AND             reduce using rule 547 (selector -> DOT THIS .)
    CARET           reduce using rule 547 (selector -> DOT THIS .)
    VERTICAL        reduce using rule 547 (selector -> DOT THIS .)
    OP_LAND         reduce using rule 547 (selector -> DOT THIS .)
    OP_LOR          reduce using rule 547 (selector -> DOT THIS .)
    QUES            reduce using rule 547 (selector -> DOT THIS .)
    RPAREN          reduce using rule 547 (selector -> DOT THIS .)
    COMMA           reduce using rule 547 (selector -> DOT THIS .)
    BRPAREN         reduce using rule 547 (selector -> DOT THIS .)
    EQUALS          reduce using rule 547 (selector -> DOT THIS .)
    ASS_ADD         reduce using rule 547 (selector -> DOT THIS .)
    ASS_SUB         reduce using rule 547 (selector -> DOT THIS .)
    ASS_MUL         reduce using rule 547 (selector -> DOT THIS .)
    ASS_DIV         reduce using rule 547 (selector -> DOT THIS .)
    ASS_AND         reduce using rule 547 (selector -> DOT THIS .)
    ASS_OR          reduce using rule 547 (selector -> DOT THIS .)
    ASS_XOR         reduce using rule 547 (selector -> DOT THIS .)
    ASS_MOD         reduce using rule 547 (selector -> DOT THIS .)
    ASS_SHL         reduce using rule 547 (selector -> DOT THIS .)
    ASS_SHRR        reduce using rule 547 (selector -> DOT THIS .)
    ASS_SHR         reduce using rule 547 (selector -> DOT THIS .)
    FRPAREN         reduce using rule 547 (selector -> DOT THIS .)
    COLON           reduce using rule 547 (selector -> DOT THIS .)
    SEMI            reduce using rule 547 (selector -> DOT THIS .)


state 391

    (549) selector -> DOT NEW . innerCreator
    (535) innerCreator -> . nonWildcardTypeArguments_empty Identifier classCreatorRest
    (533) nonWildcardTypeArguments_empty -> . nonWildcardTypeArguments
    (534) nonWildcardTypeArguments_empty -> .
    (544) nonWildcardTypeArguments -> . LESS typeList MORE

    Identifier      reduce using rule 534 (nonWildcardTypeArguments_empty -> .)
    LESS            shift and go to state 242

    nonWildcardTypeArguments_empty shift and go to state 520
    innerCreator                   shift and go to state 534
    nonWildcardTypeArguments       shift and go to state 521

state 392

    (545) selector -> DOT Identifier . arguments_once
    (546) selector -> DOT Identifier .
    (80) arguments_once -> . arguments
    (81) arguments_once -> .
    (555) arguments -> . LPAREN expressionList_once RPAREN

  ! reduce/reduce conflict for OP_INC resolved using rule 81 (arguments_once -> .)
  ! reduce/reduce conflict for OP_DEC resolved using rule 81 (arguments_once -> .)
  ! reduce/reduce conflict for DOT resolved using rule 81 (arguments_once -> .)
  ! reduce/reduce conflict for FLPAREN resolved using rule 81 (arguments_once -> .)
  ! reduce/reduce conflict for MULT resolved using rule 81 (arguments_once -> .)
  ! reduce/reduce conflict for SLASH resolved using rule 81 (arguments_once -> .)
  ! reduce/reduce conflict for PERCENT resolved using rule 81 (arguments_once -> .)
  ! reduce/reduce conflict for PLUS resolved using rule 81 (arguments_once -> .)
  ! reduce/reduce conflict for DASH resolved using rule 81 (arguments_once -> .)
  ! reduce/reduce conflict for OP_SHR resolved using rule 81 (arguments_once -> .)
  ! reduce/reduce conflict for OP_SHRR resolved using rule 81 (arguments_once -> .)
  ! reduce/reduce conflict for OP_SHL resolved using rule 81 (arguments_once -> .)
  ! reduce/reduce conflict for OP_LE resolved using rule 81 (arguments_once -> .)
  ! reduce/reduce conflict for OP_GE resolved using rule 81 (arguments_once -> .)
  ! reduce/reduce conflict for LESS resolved using rule 81 (arguments_once -> .)
  ! reduce/reduce conflict for MORE resolved using rule 81 (arguments_once -> .)
  ! reduce/reduce conflict for INSTANCEOF resolved using rule 81 (arguments_once -> .)
  ! reduce/reduce conflict for OP_EQ resolved using rule 81 (arguments_once -> .)
  ! reduce/reduce conflict for OP_NE resolved using rule 81 (arguments_once -> .)
  ! reduce/reduce conflict for AND resolved using rule 81 (arguments_once -> .)
  ! reduce/reduce conflict for CARET resolved using rule 81 (arguments_once -> .)
  ! reduce/reduce conflict for VERTICAL resolved using rule 81 (arguments_once -> .)
  ! reduce/reduce conflict for OP_LAND resolved using rule 81 (arguments_once -> .)
  ! reduce/reduce conflict for OP_LOR resolved using rule 81 (arguments_once -> .)
  ! reduce/reduce conflict for QUES resolved using rule 81 (arguments_once -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 81 (arguments_once -> .)
  ! reduce/reduce conflict for COMMA resolved using rule 81 (arguments_once -> .)
  ! reduce/reduce conflict for BRPAREN resolved using rule 81 (arguments_once -> .)
  ! reduce/reduce conflict for EQUALS resolved using rule 81 (arguments_once -> .)
  ! reduce/reduce conflict for ASS_ADD resolved using rule 81 (arguments_once -> .)
  ! reduce/reduce conflict for ASS_SUB resolved using rule 81 (arguments_once -> .)
  ! reduce/reduce conflict for ASS_MUL resolved using rule 81 (arguments_once -> .)
  ! reduce/reduce conflict for ASS_DIV resolved using rule 81 (arguments_once -> .)
  ! reduce/reduce conflict for ASS_AND resolved using rule 81 (arguments_once -> .)
  ! reduce/reduce conflict for ASS_OR resolved using rule 81 (arguments_once -> .)
  ! reduce/reduce conflict for ASS_XOR resolved using rule 81 (arguments_once -> .)
  ! reduce/reduce conflict for ASS_MOD resolved using rule 81 (arguments_once -> .)
  ! reduce/reduce conflict for ASS_SHL resolved using rule 81 (arguments_once -> .)
  ! reduce/reduce conflict for ASS_SHRR resolved using rule 81 (arguments_once -> .)
  ! reduce/reduce conflict for ASS_SHR resolved using rule 81 (arguments_once -> .)
  ! reduce/reduce conflict for FRPAREN resolved using rule 81 (arguments_once -> .)
  ! reduce/reduce conflict for COLON resolved using rule 81 (arguments_once -> .)
  ! reduce/reduce conflict for SEMI resolved using rule 81 (arguments_once -> .)
    OP_INC          reduce using rule 81 (arguments_once -> .)
    OP_DEC          reduce using rule 81 (arguments_once -> .)
    DOT             reduce using rule 81 (arguments_once -> .)
    FLPAREN         reduce using rule 81 (arguments_once -> .)
    MULT            reduce using rule 81 (arguments_once -> .)
    SLASH           reduce using rule 81 (arguments_once -> .)
    PERCENT         reduce using rule 81 (arguments_once -> .)
    PLUS            reduce using rule 81 (arguments_once -> .)
    DASH            reduce using rule 81 (arguments_once -> .)
    OP_SHR          reduce using rule 81 (arguments_once -> .)
    OP_SHRR         reduce using rule 81 (arguments_once -> .)
    OP_SHL          reduce using rule 81 (arguments_once -> .)
    OP_LE           reduce using rule 81 (arguments_once -> .)
    OP_GE           reduce using rule 81 (arguments_once -> .)
    LESS            reduce using rule 81 (arguments_once -> .)
    MORE            reduce using rule 81 (arguments_once -> .)
    INSTANCEOF      reduce using rule 81 (arguments_once -> .)
    OP_EQ           reduce using rule 81 (arguments_once -> .)
    OP_NE           reduce using rule 81 (arguments_once -> .)
    AND             reduce using rule 81 (arguments_once -> .)
    CARET           reduce using rule 81 (arguments_once -> .)
    VERTICAL        reduce using rule 81 (arguments_once -> .)
    OP_LAND         reduce using rule 81 (arguments_once -> .)
    OP_LOR          reduce using rule 81 (arguments_once -> .)
    QUES            reduce using rule 81 (arguments_once -> .)
    RPAREN          reduce using rule 81 (arguments_once -> .)
    COMMA           reduce using rule 81 (arguments_once -> .)
    BRPAREN         reduce using rule 81 (arguments_once -> .)
    EQUALS          reduce using rule 81 (arguments_once -> .)
    ASS_ADD         reduce using rule 81 (arguments_once -> .)
    ASS_SUB         reduce using rule 81 (arguments_once -> .)
    ASS_MUL         reduce using rule 81 (arguments_once -> .)
    ASS_DIV         reduce using rule 81 (arguments_once -> .)
    ASS_AND         reduce using rule 81 (arguments_once -> .)
    ASS_OR          reduce using rule 81 (arguments_once -> .)
    ASS_XOR         reduce using rule 81 (arguments_once -> .)
    ASS_MOD         reduce using rule 81 (arguments_once -> .)
    ASS_SHL         reduce using rule 81 (arguments_once -> .)
    ASS_SHRR        reduce using rule 81 (arguments_once -> .)
    ASS_SHR         reduce using rule 81 (arguments_once -> .)
    FRPAREN         reduce using rule 81 (arguments_once -> .)
    COLON           reduce using rule 81 (arguments_once -> .)
    SEMI            reduce using rule 81 (arguments_once -> .)
    LPAREN          shift and go to state 199

  ! OP_INC          [ reduce using rule 546 (selector -> DOT Identifier .) ]
  ! OP_DEC          [ reduce using rule 546 (selector -> DOT Identifier .) ]
  ! DOT             [ reduce using rule 546 (selector -> DOT Identifier .) ]
  ! FLPAREN         [ reduce using rule 546 (selector -> DOT Identifier .) ]
  ! MULT            [ reduce using rule 546 (selector -> DOT Identifier .) ]
  ! SLASH           [ reduce using rule 546 (selector -> DOT Identifier .) ]
  ! PERCENT         [ reduce using rule 546 (selector -> DOT Identifier .) ]
  ! PLUS            [ reduce using rule 546 (selector -> DOT Identifier .) ]
  ! DASH            [ reduce using rule 546 (selector -> DOT Identifier .) ]
  ! OP_SHR          [ reduce using rule 546 (selector -> DOT Identifier .) ]
  ! OP_SHRR         [ reduce using rule 546 (selector -> DOT Identifier .) ]
  ! OP_SHL          [ reduce using rule 546 (selector -> DOT Identifier .) ]
  ! OP_LE           [ reduce using rule 546 (selector -> DOT Identifier .) ]
  ! OP_GE           [ reduce using rule 546 (selector -> DOT Identifier .) ]
  ! LESS            [ reduce using rule 546 (selector -> DOT Identifier .) ]
  ! MORE            [ reduce using rule 546 (selector -> DOT Identifier .) ]
  ! INSTANCEOF      [ reduce using rule 546 (selector -> DOT Identifier .) ]
  ! OP_EQ           [ reduce using rule 546 (selector -> DOT Identifier .) ]
  ! OP_NE           [ reduce using rule 546 (selector -> DOT Identifier .) ]
  ! AND             [ reduce using rule 546 (selector -> DOT Identifier .) ]
  ! CARET           [ reduce using rule 546 (selector -> DOT Identifier .) ]
  ! VERTICAL        [ reduce using rule 546 (selector -> DOT Identifier .) ]
  ! OP_LAND         [ reduce using rule 546 (selector -> DOT Identifier .) ]
  ! OP_LOR          [ reduce using rule 546 (selector -> DOT Identifier .) ]
  ! QUES            [ reduce using rule 546 (selector -> DOT Identifier .) ]
  ! RPAREN          [ reduce using rule 546 (selector -> DOT Identifier .) ]
  ! COMMA           [ reduce using rule 546 (selector -> DOT Identifier .) ]
  ! BRPAREN         [ reduce using rule 546 (selector -> DOT Identifier .) ]
  ! EQUALS          [ reduce using rule 546 (selector -> DOT Identifier .) ]
  ! ASS_ADD         [ reduce using rule 546 (selector -> DOT Identifier .) ]
  ! ASS_SUB         [ reduce using rule 546 (selector -> DOT Identifier .) ]
  ! ASS_MUL         [ reduce using rule 546 (selector -> DOT Identifier .) ]
  ! ASS_DIV         [ reduce using rule 546 (selector -> DOT Identifier .) ]
  ! ASS_AND         [ reduce using rule 546 (selector -> DOT Identifier .) ]
  ! ASS_OR          [ reduce using rule 546 (selector -> DOT Identifier .) ]
  ! ASS_XOR         [ reduce using rule 546 (selector -> DOT Identifier .) ]
  ! ASS_MOD         [ reduce using rule 546 (selector -> DOT Identifier .) ]
  ! ASS_SHL         [ reduce using rule 546 (selector -> DOT Identifier .) ]
  ! ASS_SHRR        [ reduce using rule 546 (selector -> DOT Identifier .) ]
  ! ASS_SHR         [ reduce using rule 546 (selector -> DOT Identifier .) ]
  ! FRPAREN         [ reduce using rule 546 (selector -> DOT Identifier .) ]
  ! COLON           [ reduce using rule 546 (selector -> DOT Identifier .) ]
  ! SEMI            [ reduce using rule 546 (selector -> DOT Identifier .) ]

    arguments                      shift and go to state 517
    arguments_once                 shift and go to state 535

state 393

    (548) selector -> DOT SUPER . superSuffix
    (551) superSuffix -> . arguments
    (552) superSuffix -> . DOT Identifier arguments_once
    (555) arguments -> . LPAREN expressionList_once RPAREN

    DOT             shift and go to state 273
    LPAREN          shift and go to state 199

    superSuffix                    shift and go to state 536
    arguments                      shift and go to state 272

state 394

    (219) classOrInterfaceType -> Identifier classOrInterfaceTypeBody .

    LPAREN          reduce using rule 219 (classOrInterfaceType -> Identifier classOrInterfaceTypeBody .)
    FLPAREN         reduce using rule 219 (classOrInterfaceType -> Identifier classOrInterfaceTypeBody .)


state 395

    (536) arrayCreatorRest -> FLPAREN . FRPAREN arrays arrayInitializer
    (537) arrayCreatorRest -> FLPAREN . FRPAREN arrayInitializer
    (538) arrayCreatorRest -> FLPAREN . expression FRPAREN FL_expression_FRs arrays
    (539) arrayCreatorRest -> FLPAREN . expression FRPAREN
    (540) arrayCreatorRest -> FLPAREN . expression FRPAREN FL_expression_FRs
    (541) arrayCreatorRest -> FLPAREN . expression FRPAREN arrays
    (404) expression -> . conditionalExpression assignmentOperator_expression_empty
    (420) conditionalExpression -> . conditionalOrExpression conditionalExpressionStats
    (421) conditionalExpression -> . conditionalOrExpression
    (425) conditionalOrExpression -> . conditionalAndExpression O_conditionalAndExpressions
    (426) conditionalOrExpression -> . conditionalAndExpression
    (430) conditionalAndExpression -> . inclusiveOrExpression O_inclusiveOrExpressions
    (431) conditionalAndExpression -> . inclusiveOrExpression
    (435) inclusiveOrExpression -> . exclusiveOrExpression V_exclusiveOrExpression
    (436) inclusiveOrExpression -> . exclusiveOrExpression
    (440) exclusiveOrExpression -> . andExpression CARET_andExpressions
    (441) exclusiveOrExpression -> . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    FRPAREN         shift and go to state 537
    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    equalityExpression             shift and go to state 108
    additiveExpression             shift and go to state 102
    inclusiveOrExpression          shift and go to state 99
    multiplicativeExpression       shift and go to state 128
    exclusiveOrExpression          shift and go to state 110
    conditionalAndExpression       shift and go to state 89
    shiftExpression                shift and go to state 130
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    integerLiteral                 shift and go to state 98
    conditionalExpression          shift and go to state 266
    unaryExpression                shift and go to state 131
    FloatingPointLiteral           shift and go to state 119
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    relationalExpression           shift and go to state 95
    conditionalOrExpression        shift and go to state 109
    instanceOfExpression           shift and go to state 96
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    primitiveType                  shift and go to state 122
    andExpression                  shift and go to state 106
    expression                     shift and go to state 538

state 396

    (530) creator -> createdName classCreatorRest .

    OP_INC          reduce using rule 530 (creator -> createdName classCreatorRest .)
    OP_DEC          reduce using rule 530 (creator -> createdName classCreatorRest .)
    DOT             reduce using rule 530 (creator -> createdName classCreatorRest .)
    FLPAREN         reduce using rule 530 (creator -> createdName classCreatorRest .)
    MULT            reduce using rule 530 (creator -> createdName classCreatorRest .)
    SLASH           reduce using rule 530 (creator -> createdName classCreatorRest .)
    PERCENT         reduce using rule 530 (creator -> createdName classCreatorRest .)
    PLUS            reduce using rule 530 (creator -> createdName classCreatorRest .)
    DASH            reduce using rule 530 (creator -> createdName classCreatorRest .)
    OP_SHR          reduce using rule 530 (creator -> createdName classCreatorRest .)
    OP_SHRR         reduce using rule 530 (creator -> createdName classCreatorRest .)
    OP_SHL          reduce using rule 530 (creator -> createdName classCreatorRest .)
    OP_LE           reduce using rule 530 (creator -> createdName classCreatorRest .)
    OP_GE           reduce using rule 530 (creator -> createdName classCreatorRest .)
    LESS            reduce using rule 530 (creator -> createdName classCreatorRest .)
    MORE            reduce using rule 530 (creator -> createdName classCreatorRest .)
    INSTANCEOF      reduce using rule 530 (creator -> createdName classCreatorRest .)
    OP_EQ           reduce using rule 530 (creator -> createdName classCreatorRest .)
    OP_NE           reduce using rule 530 (creator -> createdName classCreatorRest .)
    AND             reduce using rule 530 (creator -> createdName classCreatorRest .)
    CARET           reduce using rule 530 (creator -> createdName classCreatorRest .)
    VERTICAL        reduce using rule 530 (creator -> createdName classCreatorRest .)
    OP_LAND         reduce using rule 530 (creator -> createdName classCreatorRest .)
    OP_LOR          reduce using rule 530 (creator -> createdName classCreatorRest .)
    QUES            reduce using rule 530 (creator -> createdName classCreatorRest .)
    RPAREN          reduce using rule 530 (creator -> createdName classCreatorRest .)
    COMMA           reduce using rule 530 (creator -> createdName classCreatorRest .)
    BRPAREN         reduce using rule 530 (creator -> createdName classCreatorRest .)
    EQUALS          reduce using rule 530 (creator -> createdName classCreatorRest .)
    ASS_ADD         reduce using rule 530 (creator -> createdName classCreatorRest .)
    ASS_SUB         reduce using rule 530 (creator -> createdName classCreatorRest .)
    ASS_MUL         reduce using rule 530 (creator -> createdName classCreatorRest .)
    ASS_DIV         reduce using rule 530 (creator -> createdName classCreatorRest .)
    ASS_AND         reduce using rule 530 (creator -> createdName classCreatorRest .)
    ASS_OR          reduce using rule 530 (creator -> createdName classCreatorRest .)
    ASS_XOR         reduce using rule 530 (creator -> createdName classCreatorRest .)
    ASS_MOD         reduce using rule 530 (creator -> createdName classCreatorRest .)
    ASS_SHL         reduce using rule 530 (creator -> createdName classCreatorRest .)
    ASS_SHRR        reduce using rule 530 (creator -> createdName classCreatorRest .)
    ASS_SHR         reduce using rule 530 (creator -> createdName classCreatorRest .)
    FRPAREN         reduce using rule 530 (creator -> createdName classCreatorRest .)
    COLON           reduce using rule 530 (creator -> createdName classCreatorRest .)
    SEMI            reduce using rule 530 (creator -> createdName classCreatorRest .)


state 397

    (542) classCreatorRest -> arguments . classBody_once
    (82) classBody_once -> . classBody
    (83) classBody_once -> .
    (101) classBody -> . BLPAREN classBodyDeclarations BRPAREN
    (102) classBody -> . BLPAREN BRPAREN

    OP_INC          reduce using rule 83 (classBody_once -> .)
    OP_DEC          reduce using rule 83 (classBody_once -> .)
    DOT             reduce using rule 83 (classBody_once -> .)
    FLPAREN         reduce using rule 83 (classBody_once -> .)
    MULT            reduce using rule 83 (classBody_once -> .)
    SLASH           reduce using rule 83 (classBody_once -> .)
    PERCENT         reduce using rule 83 (classBody_once -> .)
    PLUS            reduce using rule 83 (classBody_once -> .)
    DASH            reduce using rule 83 (classBody_once -> .)
    OP_SHR          reduce using rule 83 (classBody_once -> .)
    OP_SHRR         reduce using rule 83 (classBody_once -> .)
    OP_SHL          reduce using rule 83 (classBody_once -> .)
    OP_LE           reduce using rule 83 (classBody_once -> .)
    OP_GE           reduce using rule 83 (classBody_once -> .)
    LESS            reduce using rule 83 (classBody_once -> .)
    MORE            reduce using rule 83 (classBody_once -> .)
    INSTANCEOF      reduce using rule 83 (classBody_once -> .)
    OP_EQ           reduce using rule 83 (classBody_once -> .)
    OP_NE           reduce using rule 83 (classBody_once -> .)
    AND             reduce using rule 83 (classBody_once -> .)
    CARET           reduce using rule 83 (classBody_once -> .)
    VERTICAL        reduce using rule 83 (classBody_once -> .)
    OP_LAND         reduce using rule 83 (classBody_once -> .)
    OP_LOR          reduce using rule 83 (classBody_once -> .)
    QUES            reduce using rule 83 (classBody_once -> .)
    RPAREN          reduce using rule 83 (classBody_once -> .)
    COMMA           reduce using rule 83 (classBody_once -> .)
    BRPAREN         reduce using rule 83 (classBody_once -> .)
    EQUALS          reduce using rule 83 (classBody_once -> .)
    ASS_ADD         reduce using rule 83 (classBody_once -> .)
    ASS_SUB         reduce using rule 83 (classBody_once -> .)
    ASS_MUL         reduce using rule 83 (classBody_once -> .)
    ASS_DIV         reduce using rule 83 (classBody_once -> .)
    ASS_AND         reduce using rule 83 (classBody_once -> .)
    ASS_OR          reduce using rule 83 (classBody_once -> .)
    ASS_XOR         reduce using rule 83 (classBody_once -> .)
    ASS_MOD         reduce using rule 83 (classBody_once -> .)
    ASS_SHL         reduce using rule 83 (classBody_once -> .)
    ASS_SHRR        reduce using rule 83 (classBody_once -> .)
    ASS_SHR         reduce using rule 83 (classBody_once -> .)
    FRPAREN         reduce using rule 83 (classBody_once -> .)
    COLON           reduce using rule 83 (classBody_once -> .)
    SEMI            reduce using rule 83 (classBody_once -> .)
    BLPAREN         shift and go to state 306

    classBody_once                 shift and go to state 539
    classBody                      shift and go to state 540

state 398

    (529) creator -> createdName arrayCreatorRest .

    OP_INC          reduce using rule 529 (creator -> createdName arrayCreatorRest .)
    OP_DEC          reduce using rule 529 (creator -> createdName arrayCreatorRest .)
    DOT             reduce using rule 529 (creator -> createdName arrayCreatorRest .)
    FLPAREN         reduce using rule 529 (creator -> createdName arrayCreatorRest .)
    MULT            reduce using rule 529 (creator -> createdName arrayCreatorRest .)
    SLASH           reduce using rule 529 (creator -> createdName arrayCreatorRest .)
    PERCENT         reduce using rule 529 (creator -> createdName arrayCreatorRest .)
    PLUS            reduce using rule 529 (creator -> createdName arrayCreatorRest .)
    DASH            reduce using rule 529 (creator -> createdName arrayCreatorRest .)
    OP_SHR          reduce using rule 529 (creator -> createdName arrayCreatorRest .)
    OP_SHRR         reduce using rule 529 (creator -> createdName arrayCreatorRest .)
    OP_SHL          reduce using rule 529 (creator -> createdName arrayCreatorRest .)
    OP_LE           reduce using rule 529 (creator -> createdName arrayCreatorRest .)
    OP_GE           reduce using rule 529 (creator -> createdName arrayCreatorRest .)
    LESS            reduce using rule 529 (creator -> createdName arrayCreatorRest .)
    MORE            reduce using rule 529 (creator -> createdName arrayCreatorRest .)
    INSTANCEOF      reduce using rule 529 (creator -> createdName arrayCreatorRest .)
    OP_EQ           reduce using rule 529 (creator -> createdName arrayCreatorRest .)
    OP_NE           reduce using rule 529 (creator -> createdName arrayCreatorRest .)
    AND             reduce using rule 529 (creator -> createdName arrayCreatorRest .)
    CARET           reduce using rule 529 (creator -> createdName arrayCreatorRest .)
    VERTICAL        reduce using rule 529 (creator -> createdName arrayCreatorRest .)
    OP_LAND         reduce using rule 529 (creator -> createdName arrayCreatorRest .)
    OP_LOR          reduce using rule 529 (creator -> createdName arrayCreatorRest .)
    QUES            reduce using rule 529 (creator -> createdName arrayCreatorRest .)
    RPAREN          reduce using rule 529 (creator -> createdName arrayCreatorRest .)
    COMMA           reduce using rule 529 (creator -> createdName arrayCreatorRest .)
    BRPAREN         reduce using rule 529 (creator -> createdName arrayCreatorRest .)
    EQUALS          reduce using rule 529 (creator -> createdName arrayCreatorRest .)
    ASS_ADD         reduce using rule 529 (creator -> createdName arrayCreatorRest .)
    ASS_SUB         reduce using rule 529 (creator -> createdName arrayCreatorRest .)
    ASS_MUL         reduce using rule 529 (creator -> createdName arrayCreatorRest .)
    ASS_DIV         reduce using rule 529 (creator -> createdName arrayCreatorRest .)
    ASS_AND         reduce using rule 529 (creator -> createdName arrayCreatorRest .)
    ASS_OR          reduce using rule 529 (creator -> createdName arrayCreatorRest .)
    ASS_XOR         reduce using rule 529 (creator -> createdName arrayCreatorRest .)
    ASS_MOD         reduce using rule 529 (creator -> createdName arrayCreatorRest .)
    ASS_SHL         reduce using rule 529 (creator -> createdName arrayCreatorRest .)
    ASS_SHRR        reduce using rule 529 (creator -> createdName arrayCreatorRest .)
    ASS_SHR         reduce using rule 529 (creator -> createdName arrayCreatorRest .)
    FRPAREN         reduce using rule 529 (creator -> createdName arrayCreatorRest .)
    COLON           reduce using rule 529 (creator -> createdName arrayCreatorRest .)
    SEMI            reduce using rule 529 (creator -> createdName arrayCreatorRest .)


state 399

    (544) nonWildcardTypeArguments -> LESS typeList . MORE

    MORE            shift and go to state 541


state 400

    (528) creator -> nonWildcardTypeArguments createdName . classCreatorRest
    (542) classCreatorRest -> . arguments classBody_once
    (555) arguments -> . LPAREN expressionList_once RPAREN

    LPAREN          shift and go to state 199

    classCreatorRest               shift and go to state 542
    arguments                      shift and go to state 397

state 401

    (514) primary -> primitiveType arrays DOT . CLASS

    CLASS           shift and go to state 543


state 402

    (515) primary -> primitiveType DOT CLASS .

    OP_INC          reduce using rule 515 (primary -> primitiveType DOT CLASS .)
    OP_DEC          reduce using rule 515 (primary -> primitiveType DOT CLASS .)
    DOT             reduce using rule 515 (primary -> primitiveType DOT CLASS .)
    FLPAREN         reduce using rule 515 (primary -> primitiveType DOT CLASS .)
    MULT            reduce using rule 515 (primary -> primitiveType DOT CLASS .)
    SLASH           reduce using rule 515 (primary -> primitiveType DOT CLASS .)
    PERCENT         reduce using rule 515 (primary -> primitiveType DOT CLASS .)
    PLUS            reduce using rule 515 (primary -> primitiveType DOT CLASS .)
    DASH            reduce using rule 515 (primary -> primitiveType DOT CLASS .)
    OP_SHR          reduce using rule 515 (primary -> primitiveType DOT CLASS .)
    OP_SHRR         reduce using rule 515 (primary -> primitiveType DOT CLASS .)
    OP_SHL          reduce using rule 515 (primary -> primitiveType DOT CLASS .)
    OP_LE           reduce using rule 515 (primary -> primitiveType DOT CLASS .)
    OP_GE           reduce using rule 515 (primary -> primitiveType DOT CLASS .)
    LESS            reduce using rule 515 (primary -> primitiveType DOT CLASS .)
    MORE            reduce using rule 515 (primary -> primitiveType DOT CLASS .)
    INSTANCEOF      reduce using rule 515 (primary -> primitiveType DOT CLASS .)
    OP_EQ           reduce using rule 515 (primary -> primitiveType DOT CLASS .)
    OP_NE           reduce using rule 515 (primary -> primitiveType DOT CLASS .)
    AND             reduce using rule 515 (primary -> primitiveType DOT CLASS .)
    CARET           reduce using rule 515 (primary -> primitiveType DOT CLASS .)
    VERTICAL        reduce using rule 515 (primary -> primitiveType DOT CLASS .)
    OP_LAND         reduce using rule 515 (primary -> primitiveType DOT CLASS .)
    OP_LOR          reduce using rule 515 (primary -> primitiveType DOT CLASS .)
    QUES            reduce using rule 515 (primary -> primitiveType DOT CLASS .)
    EQUALS          reduce using rule 515 (primary -> primitiveType DOT CLASS .)
    ASS_ADD         reduce using rule 515 (primary -> primitiveType DOT CLASS .)
    ASS_SUB         reduce using rule 515 (primary -> primitiveType DOT CLASS .)
    ASS_MUL         reduce using rule 515 (primary -> primitiveType DOT CLASS .)
    ASS_DIV         reduce using rule 515 (primary -> primitiveType DOT CLASS .)
    ASS_AND         reduce using rule 515 (primary -> primitiveType DOT CLASS .)
    ASS_OR          reduce using rule 515 (primary -> primitiveType DOT CLASS .)
    ASS_XOR         reduce using rule 515 (primary -> primitiveType DOT CLASS .)
    ASS_MOD         reduce using rule 515 (primary -> primitiveType DOT CLASS .)
    ASS_SHL         reduce using rule 515 (primary -> primitiveType DOT CLASS .)
    ASS_SHRR        reduce using rule 515 (primary -> primitiveType DOT CLASS .)
    ASS_SHR         reduce using rule 515 (primary -> primitiveType DOT CLASS .)
    FRPAREN         reduce using rule 515 (primary -> primitiveType DOT CLASS .)
    SEMI            reduce using rule 515 (primary -> primitiveType DOT CLASS .)
    COMMA           reduce using rule 515 (primary -> primitiveType DOT CLASS .)
    BRPAREN         reduce using rule 515 (primary -> primitiveType DOT CLASS .)
    RPAREN          reduce using rule 515 (primary -> primitiveType DOT CLASS .)
    COLON           reduce using rule 515 (primary -> primitiveType DOT CLASS .)


state 403

    (476) add_multiplicativeExpressions -> add_multiplicativeExpressions add_multiplicativeExpression .

    PLUS            reduce using rule 476 (add_multiplicativeExpressions -> add_multiplicativeExpressions add_multiplicativeExpression .)
    DASH            reduce using rule 476 (add_multiplicativeExpressions -> add_multiplicativeExpressions add_multiplicativeExpression .)
    OP_SHR          reduce using rule 476 (add_multiplicativeExpressions -> add_multiplicativeExpressions add_multiplicativeExpression .)
    OP_SHRR         reduce using rule 476 (add_multiplicativeExpressions -> add_multiplicativeExpressions add_multiplicativeExpression .)
    OP_SHL          reduce using rule 476 (add_multiplicativeExpressions -> add_multiplicativeExpressions add_multiplicativeExpression .)
    OP_LE           reduce using rule 476 (add_multiplicativeExpressions -> add_multiplicativeExpressions add_multiplicativeExpression .)
    OP_GE           reduce using rule 476 (add_multiplicativeExpressions -> add_multiplicativeExpressions add_multiplicativeExpression .)
    LESS            reduce using rule 476 (add_multiplicativeExpressions -> add_multiplicativeExpressions add_multiplicativeExpression .)
    MORE            reduce using rule 476 (add_multiplicativeExpressions -> add_multiplicativeExpressions add_multiplicativeExpression .)
    INSTANCEOF      reduce using rule 476 (add_multiplicativeExpressions -> add_multiplicativeExpressions add_multiplicativeExpression .)
    OP_EQ           reduce using rule 476 (add_multiplicativeExpressions -> add_multiplicativeExpressions add_multiplicativeExpression .)
    OP_NE           reduce using rule 476 (add_multiplicativeExpressions -> add_multiplicativeExpressions add_multiplicativeExpression .)
    AND             reduce using rule 476 (add_multiplicativeExpressions -> add_multiplicativeExpressions add_multiplicativeExpression .)
    CARET           reduce using rule 476 (add_multiplicativeExpressions -> add_multiplicativeExpressions add_multiplicativeExpression .)
    VERTICAL        reduce using rule 476 (add_multiplicativeExpressions -> add_multiplicativeExpressions add_multiplicativeExpression .)
    OP_LAND         reduce using rule 476 (add_multiplicativeExpressions -> add_multiplicativeExpressions add_multiplicativeExpression .)
    OP_LOR          reduce using rule 476 (add_multiplicativeExpressions -> add_multiplicativeExpressions add_multiplicativeExpression .)
    QUES            reduce using rule 476 (add_multiplicativeExpressions -> add_multiplicativeExpressions add_multiplicativeExpression .)
    RPAREN          reduce using rule 476 (add_multiplicativeExpressions -> add_multiplicativeExpressions add_multiplicativeExpression .)
    COMMA           reduce using rule 476 (add_multiplicativeExpressions -> add_multiplicativeExpressions add_multiplicativeExpression .)
    BRPAREN         reduce using rule 476 (add_multiplicativeExpressions -> add_multiplicativeExpressions add_multiplicativeExpression .)
    EQUALS          reduce using rule 476 (add_multiplicativeExpressions -> add_multiplicativeExpressions add_multiplicativeExpression .)
    ASS_ADD         reduce using rule 476 (add_multiplicativeExpressions -> add_multiplicativeExpressions add_multiplicativeExpression .)
    ASS_SUB         reduce using rule 476 (add_multiplicativeExpressions -> add_multiplicativeExpressions add_multiplicativeExpression .)
    ASS_MUL         reduce using rule 476 (add_multiplicativeExpressions -> add_multiplicativeExpressions add_multiplicativeExpression .)
    ASS_DIV         reduce using rule 476 (add_multiplicativeExpressions -> add_multiplicativeExpressions add_multiplicativeExpression .)
    ASS_AND         reduce using rule 476 (add_multiplicativeExpressions -> add_multiplicativeExpressions add_multiplicativeExpression .)
    ASS_OR          reduce using rule 476 (add_multiplicativeExpressions -> add_multiplicativeExpressions add_multiplicativeExpression .)
    ASS_XOR         reduce using rule 476 (add_multiplicativeExpressions -> add_multiplicativeExpressions add_multiplicativeExpression .)
    ASS_MOD         reduce using rule 476 (add_multiplicativeExpressions -> add_multiplicativeExpressions add_multiplicativeExpression .)
    ASS_SHL         reduce using rule 476 (add_multiplicativeExpressions -> add_multiplicativeExpressions add_multiplicativeExpression .)
    ASS_SHRR        reduce using rule 476 (add_multiplicativeExpressions -> add_multiplicativeExpressions add_multiplicativeExpression .)
    ASS_SHR         reduce using rule 476 (add_multiplicativeExpressions -> add_multiplicativeExpressions add_multiplicativeExpression .)
    FRPAREN         reduce using rule 476 (add_multiplicativeExpressions -> add_multiplicativeExpressions add_multiplicativeExpression .)
    COLON           reduce using rule 476 (add_multiplicativeExpressions -> add_multiplicativeExpressions add_multiplicativeExpression .)
    SEMI            reduce using rule 476 (add_multiplicativeExpressions -> add_multiplicativeExpressions add_multiplicativeExpression .)


state 404

    (473) add_multiplicativeExpression -> PLUS multiplicativeExpression .

    PLUS            reduce using rule 473 (add_multiplicativeExpression -> PLUS multiplicativeExpression .)
    DASH            reduce using rule 473 (add_multiplicativeExpression -> PLUS multiplicativeExpression .)
    OP_SHR          reduce using rule 473 (add_multiplicativeExpression -> PLUS multiplicativeExpression .)
    OP_SHRR         reduce using rule 473 (add_multiplicativeExpression -> PLUS multiplicativeExpression .)
    OP_SHL          reduce using rule 473 (add_multiplicativeExpression -> PLUS multiplicativeExpression .)
    OP_LE           reduce using rule 473 (add_multiplicativeExpression -> PLUS multiplicativeExpression .)
    OP_GE           reduce using rule 473 (add_multiplicativeExpression -> PLUS multiplicativeExpression .)
    LESS            reduce using rule 473 (add_multiplicativeExpression -> PLUS multiplicativeExpression .)
    MORE            reduce using rule 473 (add_multiplicativeExpression -> PLUS multiplicativeExpression .)
    INSTANCEOF      reduce using rule 473 (add_multiplicativeExpression -> PLUS multiplicativeExpression .)
    OP_EQ           reduce using rule 473 (add_multiplicativeExpression -> PLUS multiplicativeExpression .)
    OP_NE           reduce using rule 473 (add_multiplicativeExpression -> PLUS multiplicativeExpression .)
    AND             reduce using rule 473 (add_multiplicativeExpression -> PLUS multiplicativeExpression .)
    CARET           reduce using rule 473 (add_multiplicativeExpression -> PLUS multiplicativeExpression .)
    VERTICAL        reduce using rule 473 (add_multiplicativeExpression -> PLUS multiplicativeExpression .)
    OP_LAND         reduce using rule 473 (add_multiplicativeExpression -> PLUS multiplicativeExpression .)
    OP_LOR          reduce using rule 473 (add_multiplicativeExpression -> PLUS multiplicativeExpression .)
    QUES            reduce using rule 473 (add_multiplicativeExpression -> PLUS multiplicativeExpression .)
    RPAREN          reduce using rule 473 (add_multiplicativeExpression -> PLUS multiplicativeExpression .)
    COMMA           reduce using rule 473 (add_multiplicativeExpression -> PLUS multiplicativeExpression .)
    BRPAREN         reduce using rule 473 (add_multiplicativeExpression -> PLUS multiplicativeExpression .)
    EQUALS          reduce using rule 473 (add_multiplicativeExpression -> PLUS multiplicativeExpression .)
    ASS_ADD         reduce using rule 473 (add_multiplicativeExpression -> PLUS multiplicativeExpression .)
    ASS_SUB         reduce using rule 473 (add_multiplicativeExpression -> PLUS multiplicativeExpression .)
    ASS_MUL         reduce using rule 473 (add_multiplicativeExpression -> PLUS multiplicativeExpression .)
    ASS_DIV         reduce using rule 473 (add_multiplicativeExpression -> PLUS multiplicativeExpression .)
    ASS_AND         reduce using rule 473 (add_multiplicativeExpression -> PLUS multiplicativeExpression .)
    ASS_OR          reduce using rule 473 (add_multiplicativeExpression -> PLUS multiplicativeExpression .)
    ASS_XOR         reduce using rule 473 (add_multiplicativeExpression -> PLUS multiplicativeExpression .)
    ASS_MOD         reduce using rule 473 (add_multiplicativeExpression -> PLUS multiplicativeExpression .)
    ASS_SHL         reduce using rule 473 (add_multiplicativeExpression -> PLUS multiplicativeExpression .)
    ASS_SHRR        reduce using rule 473 (add_multiplicativeExpression -> PLUS multiplicativeExpression .)
    ASS_SHR         reduce using rule 473 (add_multiplicativeExpression -> PLUS multiplicativeExpression .)
    FRPAREN         reduce using rule 473 (add_multiplicativeExpression -> PLUS multiplicativeExpression .)
    COLON           reduce using rule 473 (add_multiplicativeExpression -> PLUS multiplicativeExpression .)
    SEMI            reduce using rule 473 (add_multiplicativeExpression -> PLUS multiplicativeExpression .)


state 405

    (474) add_multiplicativeExpression -> DASH multiplicativeExpression .

    PLUS            reduce using rule 474 (add_multiplicativeExpression -> DASH multiplicativeExpression .)
    DASH            reduce using rule 474 (add_multiplicativeExpression -> DASH multiplicativeExpression .)
    OP_SHR          reduce using rule 474 (add_multiplicativeExpression -> DASH multiplicativeExpression .)
    OP_SHRR         reduce using rule 474 (add_multiplicativeExpression -> DASH multiplicativeExpression .)
    OP_SHL          reduce using rule 474 (add_multiplicativeExpression -> DASH multiplicativeExpression .)
    OP_LE           reduce using rule 474 (add_multiplicativeExpression -> DASH multiplicativeExpression .)
    OP_GE           reduce using rule 474 (add_multiplicativeExpression -> DASH multiplicativeExpression .)
    LESS            reduce using rule 474 (add_multiplicativeExpression -> DASH multiplicativeExpression .)
    MORE            reduce using rule 474 (add_multiplicativeExpression -> DASH multiplicativeExpression .)
    INSTANCEOF      reduce using rule 474 (add_multiplicativeExpression -> DASH multiplicativeExpression .)
    OP_EQ           reduce using rule 474 (add_multiplicativeExpression -> DASH multiplicativeExpression .)
    OP_NE           reduce using rule 474 (add_multiplicativeExpression -> DASH multiplicativeExpression .)
    AND             reduce using rule 474 (add_multiplicativeExpression -> DASH multiplicativeExpression .)
    CARET           reduce using rule 474 (add_multiplicativeExpression -> DASH multiplicativeExpression .)
    VERTICAL        reduce using rule 474 (add_multiplicativeExpression -> DASH multiplicativeExpression .)
    OP_LAND         reduce using rule 474 (add_multiplicativeExpression -> DASH multiplicativeExpression .)
    OP_LOR          reduce using rule 474 (add_multiplicativeExpression -> DASH multiplicativeExpression .)
    QUES            reduce using rule 474 (add_multiplicativeExpression -> DASH multiplicativeExpression .)
    RPAREN          reduce using rule 474 (add_multiplicativeExpression -> DASH multiplicativeExpression .)
    COMMA           reduce using rule 474 (add_multiplicativeExpression -> DASH multiplicativeExpression .)
    BRPAREN         reduce using rule 474 (add_multiplicativeExpression -> DASH multiplicativeExpression .)
    EQUALS          reduce using rule 474 (add_multiplicativeExpression -> DASH multiplicativeExpression .)
    ASS_ADD         reduce using rule 474 (add_multiplicativeExpression -> DASH multiplicativeExpression .)
    ASS_SUB         reduce using rule 474 (add_multiplicativeExpression -> DASH multiplicativeExpression .)
    ASS_MUL         reduce using rule 474 (add_multiplicativeExpression -> DASH multiplicativeExpression .)
    ASS_DIV         reduce using rule 474 (add_multiplicativeExpression -> DASH multiplicativeExpression .)
    ASS_AND         reduce using rule 474 (add_multiplicativeExpression -> DASH multiplicativeExpression .)
    ASS_OR          reduce using rule 474 (add_multiplicativeExpression -> DASH multiplicativeExpression .)
    ASS_XOR         reduce using rule 474 (add_multiplicativeExpression -> DASH multiplicativeExpression .)
    ASS_MOD         reduce using rule 474 (add_multiplicativeExpression -> DASH multiplicativeExpression .)
    ASS_SHL         reduce using rule 474 (add_multiplicativeExpression -> DASH multiplicativeExpression .)
    ASS_SHRR        reduce using rule 474 (add_multiplicativeExpression -> DASH multiplicativeExpression .)
    ASS_SHR         reduce using rule 474 (add_multiplicativeExpression -> DASH multiplicativeExpression .)
    FRPAREN         reduce using rule 474 (add_multiplicativeExpression -> DASH multiplicativeExpression .)
    COLON           reduce using rule 474 (add_multiplicativeExpression -> DASH multiplicativeExpression .)
    SEMI            reduce using rule 474 (add_multiplicativeExpression -> DASH multiplicativeExpression .)


state 406

    (458) re_shiftExpressions -> re_shiftExpressions re_shiftExpression .

    OP_LE           reduce using rule 458 (re_shiftExpressions -> re_shiftExpressions re_shiftExpression .)
    OP_GE           reduce using rule 458 (re_shiftExpressions -> re_shiftExpressions re_shiftExpression .)
    LESS            reduce using rule 458 (re_shiftExpressions -> re_shiftExpressions re_shiftExpression .)
    MORE            reduce using rule 458 (re_shiftExpressions -> re_shiftExpressions re_shiftExpression .)
    INSTANCEOF      reduce using rule 458 (re_shiftExpressions -> re_shiftExpressions re_shiftExpression .)
    OP_EQ           reduce using rule 458 (re_shiftExpressions -> re_shiftExpressions re_shiftExpression .)
    OP_NE           reduce using rule 458 (re_shiftExpressions -> re_shiftExpressions re_shiftExpression .)
    AND             reduce using rule 458 (re_shiftExpressions -> re_shiftExpressions re_shiftExpression .)
    CARET           reduce using rule 458 (re_shiftExpressions -> re_shiftExpressions re_shiftExpression .)
    VERTICAL        reduce using rule 458 (re_shiftExpressions -> re_shiftExpressions re_shiftExpression .)
    OP_LAND         reduce using rule 458 (re_shiftExpressions -> re_shiftExpressions re_shiftExpression .)
    OP_LOR          reduce using rule 458 (re_shiftExpressions -> re_shiftExpressions re_shiftExpression .)
    QUES            reduce using rule 458 (re_shiftExpressions -> re_shiftExpressions re_shiftExpression .)
    RPAREN          reduce using rule 458 (re_shiftExpressions -> re_shiftExpressions re_shiftExpression .)
    COMMA           reduce using rule 458 (re_shiftExpressions -> re_shiftExpressions re_shiftExpression .)
    BRPAREN         reduce using rule 458 (re_shiftExpressions -> re_shiftExpressions re_shiftExpression .)
    EQUALS          reduce using rule 458 (re_shiftExpressions -> re_shiftExpressions re_shiftExpression .)
    ASS_ADD         reduce using rule 458 (re_shiftExpressions -> re_shiftExpressions re_shiftExpression .)
    ASS_SUB         reduce using rule 458 (re_shiftExpressions -> re_shiftExpressions re_shiftExpression .)
    ASS_MUL         reduce using rule 458 (re_shiftExpressions -> re_shiftExpressions re_shiftExpression .)
    ASS_DIV         reduce using rule 458 (re_shiftExpressions -> re_shiftExpressions re_shiftExpression .)
    ASS_AND         reduce using rule 458 (re_shiftExpressions -> re_shiftExpressions re_shiftExpression .)
    ASS_OR          reduce using rule 458 (re_shiftExpressions -> re_shiftExpressions re_shiftExpression .)
    ASS_XOR         reduce using rule 458 (re_shiftExpressions -> re_shiftExpressions re_shiftExpression .)
    ASS_MOD         reduce using rule 458 (re_shiftExpressions -> re_shiftExpressions re_shiftExpression .)
    ASS_SHL         reduce using rule 458 (re_shiftExpressions -> re_shiftExpressions re_shiftExpression .)
    ASS_SHRR        reduce using rule 458 (re_shiftExpressions -> re_shiftExpressions re_shiftExpression .)
    ASS_SHR         reduce using rule 458 (re_shiftExpressions -> re_shiftExpressions re_shiftExpression .)
    FRPAREN         reduce using rule 458 (re_shiftExpressions -> re_shiftExpressions re_shiftExpression .)
    COLON           reduce using rule 458 (re_shiftExpressions -> re_shiftExpressions re_shiftExpression .)
    SEMI            reduce using rule 458 (re_shiftExpressions -> re_shiftExpressions re_shiftExpression .)


state 407

    (456) re_shiftExpression -> relationalOp shiftExpression .

    OP_LE           reduce using rule 456 (re_shiftExpression -> relationalOp shiftExpression .)
    OP_GE           reduce using rule 456 (re_shiftExpression -> relationalOp shiftExpression .)
    LESS            reduce using rule 456 (re_shiftExpression -> relationalOp shiftExpression .)
    MORE            reduce using rule 456 (re_shiftExpression -> relationalOp shiftExpression .)
    INSTANCEOF      reduce using rule 456 (re_shiftExpression -> relationalOp shiftExpression .)
    OP_EQ           reduce using rule 456 (re_shiftExpression -> relationalOp shiftExpression .)
    OP_NE           reduce using rule 456 (re_shiftExpression -> relationalOp shiftExpression .)
    AND             reduce using rule 456 (re_shiftExpression -> relationalOp shiftExpression .)
    CARET           reduce using rule 456 (re_shiftExpression -> relationalOp shiftExpression .)
    VERTICAL        reduce using rule 456 (re_shiftExpression -> relationalOp shiftExpression .)
    OP_LAND         reduce using rule 456 (re_shiftExpression -> relationalOp shiftExpression .)
    OP_LOR          reduce using rule 456 (re_shiftExpression -> relationalOp shiftExpression .)
    QUES            reduce using rule 456 (re_shiftExpression -> relationalOp shiftExpression .)
    RPAREN          reduce using rule 456 (re_shiftExpression -> relationalOp shiftExpression .)
    COMMA           reduce using rule 456 (re_shiftExpression -> relationalOp shiftExpression .)
    BRPAREN         reduce using rule 456 (re_shiftExpression -> relationalOp shiftExpression .)
    EQUALS          reduce using rule 456 (re_shiftExpression -> relationalOp shiftExpression .)
    ASS_ADD         reduce using rule 456 (re_shiftExpression -> relationalOp shiftExpression .)
    ASS_SUB         reduce using rule 456 (re_shiftExpression -> relationalOp shiftExpression .)
    ASS_MUL         reduce using rule 456 (re_shiftExpression -> relationalOp shiftExpression .)
    ASS_DIV         reduce using rule 456 (re_shiftExpression -> relationalOp shiftExpression .)
    ASS_AND         reduce using rule 456 (re_shiftExpression -> relationalOp shiftExpression .)
    ASS_OR          reduce using rule 456 (re_shiftExpression -> relationalOp shiftExpression .)
    ASS_XOR         reduce using rule 456 (re_shiftExpression -> relationalOp shiftExpression .)
    ASS_MOD         reduce using rule 456 (re_shiftExpression -> relationalOp shiftExpression .)
    ASS_SHL         reduce using rule 456 (re_shiftExpression -> relationalOp shiftExpression .)
    ASS_SHRR        reduce using rule 456 (re_shiftExpression -> relationalOp shiftExpression .)
    ASS_SHR         reduce using rule 456 (re_shiftExpression -> relationalOp shiftExpression .)
    FRPAREN         reduce using rule 456 (re_shiftExpression -> relationalOp shiftExpression .)
    COLON           reduce using rule 456 (re_shiftExpression -> relationalOp shiftExpression .)
    SEMI            reduce using rule 456 (re_shiftExpression -> relationalOp shiftExpression .)


state 408

    (483) mu_unaryExpressions -> mu_unaryExpressions mu_unaryExpression .

    MULT            reduce using rule 483 (mu_unaryExpressions -> mu_unaryExpressions mu_unaryExpression .)
    SLASH           reduce using rule 483 (mu_unaryExpressions -> mu_unaryExpressions mu_unaryExpression .)
    PERCENT         reduce using rule 483 (mu_unaryExpressions -> mu_unaryExpressions mu_unaryExpression .)
    PLUS            reduce using rule 483 (mu_unaryExpressions -> mu_unaryExpressions mu_unaryExpression .)
    DASH            reduce using rule 483 (mu_unaryExpressions -> mu_unaryExpressions mu_unaryExpression .)
    OP_SHR          reduce using rule 483 (mu_unaryExpressions -> mu_unaryExpressions mu_unaryExpression .)
    OP_SHRR         reduce using rule 483 (mu_unaryExpressions -> mu_unaryExpressions mu_unaryExpression .)
    OP_SHL          reduce using rule 483 (mu_unaryExpressions -> mu_unaryExpressions mu_unaryExpression .)
    OP_LE           reduce using rule 483 (mu_unaryExpressions -> mu_unaryExpressions mu_unaryExpression .)
    OP_GE           reduce using rule 483 (mu_unaryExpressions -> mu_unaryExpressions mu_unaryExpression .)
    LESS            reduce using rule 483 (mu_unaryExpressions -> mu_unaryExpressions mu_unaryExpression .)
    MORE            reduce using rule 483 (mu_unaryExpressions -> mu_unaryExpressions mu_unaryExpression .)
    INSTANCEOF      reduce using rule 483 (mu_unaryExpressions -> mu_unaryExpressions mu_unaryExpression .)
    OP_EQ           reduce using rule 483 (mu_unaryExpressions -> mu_unaryExpressions mu_unaryExpression .)
    OP_NE           reduce using rule 483 (mu_unaryExpressions -> mu_unaryExpressions mu_unaryExpression .)
    AND             reduce using rule 483 (mu_unaryExpressions -> mu_unaryExpressions mu_unaryExpression .)
    CARET           reduce using rule 483 (mu_unaryExpressions -> mu_unaryExpressions mu_unaryExpression .)
    VERTICAL        reduce using rule 483 (mu_unaryExpressions -> mu_unaryExpressions mu_unaryExpression .)
    OP_LAND         reduce using rule 483 (mu_unaryExpressions -> mu_unaryExpressions mu_unaryExpression .)
    OP_LOR          reduce using rule 483 (mu_unaryExpressions -> mu_unaryExpressions mu_unaryExpression .)
    QUES            reduce using rule 483 (mu_unaryExpressions -> mu_unaryExpressions mu_unaryExpression .)
    RPAREN          reduce using rule 483 (mu_unaryExpressions -> mu_unaryExpressions mu_unaryExpression .)
    COMMA           reduce using rule 483 (mu_unaryExpressions -> mu_unaryExpressions mu_unaryExpression .)
    BRPAREN         reduce using rule 483 (mu_unaryExpressions -> mu_unaryExpressions mu_unaryExpression .)
    EQUALS          reduce using rule 483 (mu_unaryExpressions -> mu_unaryExpressions mu_unaryExpression .)
    ASS_ADD         reduce using rule 483 (mu_unaryExpressions -> mu_unaryExpressions mu_unaryExpression .)
    ASS_SUB         reduce using rule 483 (mu_unaryExpressions -> mu_unaryExpressions mu_unaryExpression .)
    ASS_MUL         reduce using rule 483 (mu_unaryExpressions -> mu_unaryExpressions mu_unaryExpression .)
    ASS_DIV         reduce using rule 483 (mu_unaryExpressions -> mu_unaryExpressions mu_unaryExpression .)
    ASS_AND         reduce using rule 483 (mu_unaryExpressions -> mu_unaryExpressions mu_unaryExpression .)
    ASS_OR          reduce using rule 483 (mu_unaryExpressions -> mu_unaryExpressions mu_unaryExpression .)
    ASS_XOR         reduce using rule 483 (mu_unaryExpressions -> mu_unaryExpressions mu_unaryExpression .)
    ASS_MOD         reduce using rule 483 (mu_unaryExpressions -> mu_unaryExpressions mu_unaryExpression .)
    ASS_SHL         reduce using rule 483 (mu_unaryExpressions -> mu_unaryExpressions mu_unaryExpression .)
    ASS_SHRR        reduce using rule 483 (mu_unaryExpressions -> mu_unaryExpressions mu_unaryExpression .)
    ASS_SHR         reduce using rule 483 (mu_unaryExpressions -> mu_unaryExpressions mu_unaryExpression .)
    FRPAREN         reduce using rule 483 (mu_unaryExpressions -> mu_unaryExpressions mu_unaryExpression .)
    COLON           reduce using rule 483 (mu_unaryExpressions -> mu_unaryExpressions mu_unaryExpression .)
    SEMI            reduce using rule 483 (mu_unaryExpressions -> mu_unaryExpressions mu_unaryExpression .)


state 409

    (481) mu_unaryExpression -> PERCENT unaryExpression .

    MULT            reduce using rule 481 (mu_unaryExpression -> PERCENT unaryExpression .)
    SLASH           reduce using rule 481 (mu_unaryExpression -> PERCENT unaryExpression .)
    PERCENT         reduce using rule 481 (mu_unaryExpression -> PERCENT unaryExpression .)
    PLUS            reduce using rule 481 (mu_unaryExpression -> PERCENT unaryExpression .)
    DASH            reduce using rule 481 (mu_unaryExpression -> PERCENT unaryExpression .)
    OP_SHR          reduce using rule 481 (mu_unaryExpression -> PERCENT unaryExpression .)
    OP_SHRR         reduce using rule 481 (mu_unaryExpression -> PERCENT unaryExpression .)
    OP_SHL          reduce using rule 481 (mu_unaryExpression -> PERCENT unaryExpression .)
    OP_LE           reduce using rule 481 (mu_unaryExpression -> PERCENT unaryExpression .)
    OP_GE           reduce using rule 481 (mu_unaryExpression -> PERCENT unaryExpression .)
    LESS            reduce using rule 481 (mu_unaryExpression -> PERCENT unaryExpression .)
    MORE            reduce using rule 481 (mu_unaryExpression -> PERCENT unaryExpression .)
    INSTANCEOF      reduce using rule 481 (mu_unaryExpression -> PERCENT unaryExpression .)
    OP_EQ           reduce using rule 481 (mu_unaryExpression -> PERCENT unaryExpression .)
    OP_NE           reduce using rule 481 (mu_unaryExpression -> PERCENT unaryExpression .)
    AND             reduce using rule 481 (mu_unaryExpression -> PERCENT unaryExpression .)
    CARET           reduce using rule 481 (mu_unaryExpression -> PERCENT unaryExpression .)
    VERTICAL        reduce using rule 481 (mu_unaryExpression -> PERCENT unaryExpression .)
    OP_LAND         reduce using rule 481 (mu_unaryExpression -> PERCENT unaryExpression .)
    OP_LOR          reduce using rule 481 (mu_unaryExpression -> PERCENT unaryExpression .)
    QUES            reduce using rule 481 (mu_unaryExpression -> PERCENT unaryExpression .)
    RPAREN          reduce using rule 481 (mu_unaryExpression -> PERCENT unaryExpression .)
    COMMA           reduce using rule 481 (mu_unaryExpression -> PERCENT unaryExpression .)
    BRPAREN         reduce using rule 481 (mu_unaryExpression -> PERCENT unaryExpression .)
    EQUALS          reduce using rule 481 (mu_unaryExpression -> PERCENT unaryExpression .)
    ASS_ADD         reduce using rule 481 (mu_unaryExpression -> PERCENT unaryExpression .)
    ASS_SUB         reduce using rule 481 (mu_unaryExpression -> PERCENT unaryExpression .)
    ASS_MUL         reduce using rule 481 (mu_unaryExpression -> PERCENT unaryExpression .)
    ASS_DIV         reduce using rule 481 (mu_unaryExpression -> PERCENT unaryExpression .)
    ASS_AND         reduce using rule 481 (mu_unaryExpression -> PERCENT unaryExpression .)
    ASS_OR          reduce using rule 481 (mu_unaryExpression -> PERCENT unaryExpression .)
    ASS_XOR         reduce using rule 481 (mu_unaryExpression -> PERCENT unaryExpression .)
    ASS_MOD         reduce using rule 481 (mu_unaryExpression -> PERCENT unaryExpression .)
    ASS_SHL         reduce using rule 481 (mu_unaryExpression -> PERCENT unaryExpression .)
    ASS_SHRR        reduce using rule 481 (mu_unaryExpression -> PERCENT unaryExpression .)
    ASS_SHR         reduce using rule 481 (mu_unaryExpression -> PERCENT unaryExpression .)
    FRPAREN         reduce using rule 481 (mu_unaryExpression -> PERCENT unaryExpression .)
    COLON           reduce using rule 481 (mu_unaryExpression -> PERCENT unaryExpression .)
    SEMI            reduce using rule 481 (mu_unaryExpression -> PERCENT unaryExpression .)


state 410

    (480) mu_unaryExpression -> SLASH unaryExpression .

    MULT            reduce using rule 480 (mu_unaryExpression -> SLASH unaryExpression .)
    SLASH           reduce using rule 480 (mu_unaryExpression -> SLASH unaryExpression .)
    PERCENT         reduce using rule 480 (mu_unaryExpression -> SLASH unaryExpression .)
    PLUS            reduce using rule 480 (mu_unaryExpression -> SLASH unaryExpression .)
    DASH            reduce using rule 480 (mu_unaryExpression -> SLASH unaryExpression .)
    OP_SHR          reduce using rule 480 (mu_unaryExpression -> SLASH unaryExpression .)
    OP_SHRR         reduce using rule 480 (mu_unaryExpression -> SLASH unaryExpression .)
    OP_SHL          reduce using rule 480 (mu_unaryExpression -> SLASH unaryExpression .)
    OP_LE           reduce using rule 480 (mu_unaryExpression -> SLASH unaryExpression .)
    OP_GE           reduce using rule 480 (mu_unaryExpression -> SLASH unaryExpression .)
    LESS            reduce using rule 480 (mu_unaryExpression -> SLASH unaryExpression .)
    MORE            reduce using rule 480 (mu_unaryExpression -> SLASH unaryExpression .)
    INSTANCEOF      reduce using rule 480 (mu_unaryExpression -> SLASH unaryExpression .)
    OP_EQ           reduce using rule 480 (mu_unaryExpression -> SLASH unaryExpression .)
    OP_NE           reduce using rule 480 (mu_unaryExpression -> SLASH unaryExpression .)
    AND             reduce using rule 480 (mu_unaryExpression -> SLASH unaryExpression .)
    CARET           reduce using rule 480 (mu_unaryExpression -> SLASH unaryExpression .)
    VERTICAL        reduce using rule 480 (mu_unaryExpression -> SLASH unaryExpression .)
    OP_LAND         reduce using rule 480 (mu_unaryExpression -> SLASH unaryExpression .)
    OP_LOR          reduce using rule 480 (mu_unaryExpression -> SLASH unaryExpression .)
    QUES            reduce using rule 480 (mu_unaryExpression -> SLASH unaryExpression .)
    RPAREN          reduce using rule 480 (mu_unaryExpression -> SLASH unaryExpression .)
    COMMA           reduce using rule 480 (mu_unaryExpression -> SLASH unaryExpression .)
    BRPAREN         reduce using rule 480 (mu_unaryExpression -> SLASH unaryExpression .)
    EQUALS          reduce using rule 480 (mu_unaryExpression -> SLASH unaryExpression .)
    ASS_ADD         reduce using rule 480 (mu_unaryExpression -> SLASH unaryExpression .)
    ASS_SUB         reduce using rule 480 (mu_unaryExpression -> SLASH unaryExpression .)
    ASS_MUL         reduce using rule 480 (mu_unaryExpression -> SLASH unaryExpression .)
    ASS_DIV         reduce using rule 480 (mu_unaryExpression -> SLASH unaryExpression .)
    ASS_AND         reduce using rule 480 (mu_unaryExpression -> SLASH unaryExpression .)
    ASS_OR          reduce using rule 480 (mu_unaryExpression -> SLASH unaryExpression .)
    ASS_XOR         reduce using rule 480 (mu_unaryExpression -> SLASH unaryExpression .)
    ASS_MOD         reduce using rule 480 (mu_unaryExpression -> SLASH unaryExpression .)
    ASS_SHL         reduce using rule 480 (mu_unaryExpression -> SLASH unaryExpression .)
    ASS_SHRR        reduce using rule 480 (mu_unaryExpression -> SLASH unaryExpression .)
    ASS_SHR         reduce using rule 480 (mu_unaryExpression -> SLASH unaryExpression .)
    FRPAREN         reduce using rule 480 (mu_unaryExpression -> SLASH unaryExpression .)
    COLON           reduce using rule 480 (mu_unaryExpression -> SLASH unaryExpression .)
    SEMI            reduce using rule 480 (mu_unaryExpression -> SLASH unaryExpression .)


state 411

    (479) mu_unaryExpression -> MULT unaryExpression .

    MULT            reduce using rule 479 (mu_unaryExpression -> MULT unaryExpression .)
    SLASH           reduce using rule 479 (mu_unaryExpression -> MULT unaryExpression .)
    PERCENT         reduce using rule 479 (mu_unaryExpression -> MULT unaryExpression .)
    PLUS            reduce using rule 479 (mu_unaryExpression -> MULT unaryExpression .)
    DASH            reduce using rule 479 (mu_unaryExpression -> MULT unaryExpression .)
    OP_SHR          reduce using rule 479 (mu_unaryExpression -> MULT unaryExpression .)
    OP_SHRR         reduce using rule 479 (mu_unaryExpression -> MULT unaryExpression .)
    OP_SHL          reduce using rule 479 (mu_unaryExpression -> MULT unaryExpression .)
    OP_LE           reduce using rule 479 (mu_unaryExpression -> MULT unaryExpression .)
    OP_GE           reduce using rule 479 (mu_unaryExpression -> MULT unaryExpression .)
    LESS            reduce using rule 479 (mu_unaryExpression -> MULT unaryExpression .)
    MORE            reduce using rule 479 (mu_unaryExpression -> MULT unaryExpression .)
    INSTANCEOF      reduce using rule 479 (mu_unaryExpression -> MULT unaryExpression .)
    OP_EQ           reduce using rule 479 (mu_unaryExpression -> MULT unaryExpression .)
    OP_NE           reduce using rule 479 (mu_unaryExpression -> MULT unaryExpression .)
    AND             reduce using rule 479 (mu_unaryExpression -> MULT unaryExpression .)
    CARET           reduce using rule 479 (mu_unaryExpression -> MULT unaryExpression .)
    VERTICAL        reduce using rule 479 (mu_unaryExpression -> MULT unaryExpression .)
    OP_LAND         reduce using rule 479 (mu_unaryExpression -> MULT unaryExpression .)
    OP_LOR          reduce using rule 479 (mu_unaryExpression -> MULT unaryExpression .)
    QUES            reduce using rule 479 (mu_unaryExpression -> MULT unaryExpression .)
    RPAREN          reduce using rule 479 (mu_unaryExpression -> MULT unaryExpression .)
    COMMA           reduce using rule 479 (mu_unaryExpression -> MULT unaryExpression .)
    BRPAREN         reduce using rule 479 (mu_unaryExpression -> MULT unaryExpression .)
    EQUALS          reduce using rule 479 (mu_unaryExpression -> MULT unaryExpression .)
    ASS_ADD         reduce using rule 479 (mu_unaryExpression -> MULT unaryExpression .)
    ASS_SUB         reduce using rule 479 (mu_unaryExpression -> MULT unaryExpression .)
    ASS_MUL         reduce using rule 479 (mu_unaryExpression -> MULT unaryExpression .)
    ASS_DIV         reduce using rule 479 (mu_unaryExpression -> MULT unaryExpression .)
    ASS_AND         reduce using rule 479 (mu_unaryExpression -> MULT unaryExpression .)
    ASS_OR          reduce using rule 479 (mu_unaryExpression -> MULT unaryExpression .)
    ASS_XOR         reduce using rule 479 (mu_unaryExpression -> MULT unaryExpression .)
    ASS_MOD         reduce using rule 479 (mu_unaryExpression -> MULT unaryExpression .)
    ASS_SHL         reduce using rule 479 (mu_unaryExpression -> MULT unaryExpression .)
    ASS_SHRR        reduce using rule 479 (mu_unaryExpression -> MULT unaryExpression .)
    ASS_SHR         reduce using rule 479 (mu_unaryExpression -> MULT unaryExpression .)
    FRPAREN         reduce using rule 479 (mu_unaryExpression -> MULT unaryExpression .)
    COLON           reduce using rule 479 (mu_unaryExpression -> MULT unaryExpression .)
    SEMI            reduce using rule 479 (mu_unaryExpression -> MULT unaryExpression .)


state 412

    (502) castExpression -> LPAREN type RPAREN . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 544
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    primitiveType                  shift and go to state 122
    literal                        shift and go to state 116
    FloatingPointLiteral           shift and go to state 119
    booleanLiteral                 shift and go to state 92
    integerLiteral                 shift and go to state 98

state 413

    (409) assignmentOperator -> ASS_DIV .

    PLUS            reduce using rule 409 (assignmentOperator -> ASS_DIV .)
    DASH            reduce using rule 409 (assignmentOperator -> ASS_DIV .)
    OP_INC          reduce using rule 409 (assignmentOperator -> ASS_DIV .)
    OP_DEC          reduce using rule 409 (assignmentOperator -> ASS_DIV .)
    TILDE           reduce using rule 409 (assignmentOperator -> ASS_DIV .)
    EXCLAMATION     reduce using rule 409 (assignmentOperator -> ASS_DIV .)
    LPAREN          reduce using rule 409 (assignmentOperator -> ASS_DIV .)
    THIS            reduce using rule 409 (assignmentOperator -> ASS_DIV .)
    SUPER           reduce using rule 409 (assignmentOperator -> ASS_DIV .)
    NEW             reduce using rule 409 (assignmentOperator -> ASS_DIV .)
    Identifier      reduce using rule 409 (assignmentOperator -> ASS_DIV .)
    VOID            reduce using rule 409 (assignmentOperator -> ASS_DIV .)
    CharacterLiteral reduce using rule 409 (assignmentOperator -> ASS_DIV .)
    StringLiteral   reduce using rule 409 (assignmentOperator -> ASS_DIV .)
    NULL            reduce using rule 409 (assignmentOperator -> ASS_DIV .)
    BOOLEAN         reduce using rule 409 (assignmentOperator -> ASS_DIV .)
    CHAR            reduce using rule 409 (assignmentOperator -> ASS_DIV .)
    BYTE            reduce using rule 409 (assignmentOperator -> ASS_DIV .)
    SHORT           reduce using rule 409 (assignmentOperator -> ASS_DIV .)
    INT             reduce using rule 409 (assignmentOperator -> ASS_DIV .)
    LONG            reduce using rule 409 (assignmentOperator -> ASS_DIV .)
    FLOAT           reduce using rule 409 (assignmentOperator -> ASS_DIV .)
    DOUBLE          reduce using rule 409 (assignmentOperator -> ASS_DIV .)
    LONG_NUMBER     reduce using rule 409 (assignmentOperator -> ASS_DIV .)
    LONG_HEX_NUMBER reduce using rule 409 (assignmentOperator -> ASS_DIV .)
    NON_INTEGER_1   reduce using rule 409 (assignmentOperator -> ASS_DIV .)
    NON_INTEGER_2   reduce using rule 409 (assignmentOperator -> ASS_DIV .)
    NON_INTEGER_3   reduce using rule 409 (assignmentOperator -> ASS_DIV .)
    NON_INTEGER_4   reduce using rule 409 (assignmentOperator -> ASS_DIV .)
    TRUE            reduce using rule 409 (assignmentOperator -> ASS_DIV .)
    FALSE           reduce using rule 409 (assignmentOperator -> ASS_DIV .)


state 414

    (406) assignmentOperator -> ASS_ADD .

    PLUS            reduce using rule 406 (assignmentOperator -> ASS_ADD .)
    DASH            reduce using rule 406 (assignmentOperator -> ASS_ADD .)
    OP_INC          reduce using rule 406 (assignmentOperator -> ASS_ADD .)
    OP_DEC          reduce using rule 406 (assignmentOperator -> ASS_ADD .)
    TILDE           reduce using rule 406 (assignmentOperator -> ASS_ADD .)
    EXCLAMATION     reduce using rule 406 (assignmentOperator -> ASS_ADD .)
    LPAREN          reduce using rule 406 (assignmentOperator -> ASS_ADD .)
    THIS            reduce using rule 406 (assignmentOperator -> ASS_ADD .)
    SUPER           reduce using rule 406 (assignmentOperator -> ASS_ADD .)
    NEW             reduce using rule 406 (assignmentOperator -> ASS_ADD .)
    Identifier      reduce using rule 406 (assignmentOperator -> ASS_ADD .)
    VOID            reduce using rule 406 (assignmentOperator -> ASS_ADD .)
    CharacterLiteral reduce using rule 406 (assignmentOperator -> ASS_ADD .)
    StringLiteral   reduce using rule 406 (assignmentOperator -> ASS_ADD .)
    NULL            reduce using rule 406 (assignmentOperator -> ASS_ADD .)
    BOOLEAN         reduce using rule 406 (assignmentOperator -> ASS_ADD .)
    CHAR            reduce using rule 406 (assignmentOperator -> ASS_ADD .)
    BYTE            reduce using rule 406 (assignmentOperator -> ASS_ADD .)
    SHORT           reduce using rule 406 (assignmentOperator -> ASS_ADD .)
    INT             reduce using rule 406 (assignmentOperator -> ASS_ADD .)
    LONG            reduce using rule 406 (assignmentOperator -> ASS_ADD .)
    FLOAT           reduce using rule 406 (assignmentOperator -> ASS_ADD .)
    DOUBLE          reduce using rule 406 (assignmentOperator -> ASS_ADD .)
    LONG_NUMBER     reduce using rule 406 (assignmentOperator -> ASS_ADD .)
    LONG_HEX_NUMBER reduce using rule 406 (assignmentOperator -> ASS_ADD .)
    NON_INTEGER_1   reduce using rule 406 (assignmentOperator -> ASS_ADD .)
    NON_INTEGER_2   reduce using rule 406 (assignmentOperator -> ASS_ADD .)
    NON_INTEGER_3   reduce using rule 406 (assignmentOperator -> ASS_ADD .)
    NON_INTEGER_4   reduce using rule 406 (assignmentOperator -> ASS_ADD .)
    TRUE            reduce using rule 406 (assignmentOperator -> ASS_ADD .)
    FALSE           reduce using rule 406 (assignmentOperator -> ASS_ADD .)


state 415

    (412) assignmentOperator -> ASS_XOR .

    PLUS            reduce using rule 412 (assignmentOperator -> ASS_XOR .)
    DASH            reduce using rule 412 (assignmentOperator -> ASS_XOR .)
    OP_INC          reduce using rule 412 (assignmentOperator -> ASS_XOR .)
    OP_DEC          reduce using rule 412 (assignmentOperator -> ASS_XOR .)
    TILDE           reduce using rule 412 (assignmentOperator -> ASS_XOR .)
    EXCLAMATION     reduce using rule 412 (assignmentOperator -> ASS_XOR .)
    LPAREN          reduce using rule 412 (assignmentOperator -> ASS_XOR .)
    THIS            reduce using rule 412 (assignmentOperator -> ASS_XOR .)
    SUPER           reduce using rule 412 (assignmentOperator -> ASS_XOR .)
    NEW             reduce using rule 412 (assignmentOperator -> ASS_XOR .)
    Identifier      reduce using rule 412 (assignmentOperator -> ASS_XOR .)
    VOID            reduce using rule 412 (assignmentOperator -> ASS_XOR .)
    CharacterLiteral reduce using rule 412 (assignmentOperator -> ASS_XOR .)
    StringLiteral   reduce using rule 412 (assignmentOperator -> ASS_XOR .)
    NULL            reduce using rule 412 (assignmentOperator -> ASS_XOR .)
    BOOLEAN         reduce using rule 412 (assignmentOperator -> ASS_XOR .)
    CHAR            reduce using rule 412 (assignmentOperator -> ASS_XOR .)
    BYTE            reduce using rule 412 (assignmentOperator -> ASS_XOR .)
    SHORT           reduce using rule 412 (assignmentOperator -> ASS_XOR .)
    INT             reduce using rule 412 (assignmentOperator -> ASS_XOR .)
    LONG            reduce using rule 412 (assignmentOperator -> ASS_XOR .)
    FLOAT           reduce using rule 412 (assignmentOperator -> ASS_XOR .)
    DOUBLE          reduce using rule 412 (assignmentOperator -> ASS_XOR .)
    LONG_NUMBER     reduce using rule 412 (assignmentOperator -> ASS_XOR .)
    LONG_HEX_NUMBER reduce using rule 412 (assignmentOperator -> ASS_XOR .)
    NON_INTEGER_1   reduce using rule 412 (assignmentOperator -> ASS_XOR .)
    NON_INTEGER_2   reduce using rule 412 (assignmentOperator -> ASS_XOR .)
    NON_INTEGER_3   reduce using rule 412 (assignmentOperator -> ASS_XOR .)
    NON_INTEGER_4   reduce using rule 412 (assignmentOperator -> ASS_XOR .)
    TRUE            reduce using rule 412 (assignmentOperator -> ASS_XOR .)
    FALSE           reduce using rule 412 (assignmentOperator -> ASS_XOR .)


state 416

    (415) assignmentOperator -> ASS_SHRR .

    PLUS            reduce using rule 415 (assignmentOperator -> ASS_SHRR .)
    DASH            reduce using rule 415 (assignmentOperator -> ASS_SHRR .)
    OP_INC          reduce using rule 415 (assignmentOperator -> ASS_SHRR .)
    OP_DEC          reduce using rule 415 (assignmentOperator -> ASS_SHRR .)
    TILDE           reduce using rule 415 (assignmentOperator -> ASS_SHRR .)
    EXCLAMATION     reduce using rule 415 (assignmentOperator -> ASS_SHRR .)
    LPAREN          reduce using rule 415 (assignmentOperator -> ASS_SHRR .)
    THIS            reduce using rule 415 (assignmentOperator -> ASS_SHRR .)
    SUPER           reduce using rule 415 (assignmentOperator -> ASS_SHRR .)
    NEW             reduce using rule 415 (assignmentOperator -> ASS_SHRR .)
    Identifier      reduce using rule 415 (assignmentOperator -> ASS_SHRR .)
    VOID            reduce using rule 415 (assignmentOperator -> ASS_SHRR .)
    CharacterLiteral reduce using rule 415 (assignmentOperator -> ASS_SHRR .)
    StringLiteral   reduce using rule 415 (assignmentOperator -> ASS_SHRR .)
    NULL            reduce using rule 415 (assignmentOperator -> ASS_SHRR .)
    BOOLEAN         reduce using rule 415 (assignmentOperator -> ASS_SHRR .)
    CHAR            reduce using rule 415 (assignmentOperator -> ASS_SHRR .)
    BYTE            reduce using rule 415 (assignmentOperator -> ASS_SHRR .)
    SHORT           reduce using rule 415 (assignmentOperator -> ASS_SHRR .)
    INT             reduce using rule 415 (assignmentOperator -> ASS_SHRR .)
    LONG            reduce using rule 415 (assignmentOperator -> ASS_SHRR .)
    FLOAT           reduce using rule 415 (assignmentOperator -> ASS_SHRR .)
    DOUBLE          reduce using rule 415 (assignmentOperator -> ASS_SHRR .)
    LONG_NUMBER     reduce using rule 415 (assignmentOperator -> ASS_SHRR .)
    LONG_HEX_NUMBER reduce using rule 415 (assignmentOperator -> ASS_SHRR .)
    NON_INTEGER_1   reduce using rule 415 (assignmentOperator -> ASS_SHRR .)
    NON_INTEGER_2   reduce using rule 415 (assignmentOperator -> ASS_SHRR .)
    NON_INTEGER_3   reduce using rule 415 (assignmentOperator -> ASS_SHRR .)
    NON_INTEGER_4   reduce using rule 415 (assignmentOperator -> ASS_SHRR .)
    TRUE            reduce using rule 415 (assignmentOperator -> ASS_SHRR .)
    FALSE           reduce using rule 415 (assignmentOperator -> ASS_SHRR .)


state 417

    (411) assignmentOperator -> ASS_OR .

    PLUS            reduce using rule 411 (assignmentOperator -> ASS_OR .)
    DASH            reduce using rule 411 (assignmentOperator -> ASS_OR .)
    OP_INC          reduce using rule 411 (assignmentOperator -> ASS_OR .)
    OP_DEC          reduce using rule 411 (assignmentOperator -> ASS_OR .)
    TILDE           reduce using rule 411 (assignmentOperator -> ASS_OR .)
    EXCLAMATION     reduce using rule 411 (assignmentOperator -> ASS_OR .)
    LPAREN          reduce using rule 411 (assignmentOperator -> ASS_OR .)
    THIS            reduce using rule 411 (assignmentOperator -> ASS_OR .)
    SUPER           reduce using rule 411 (assignmentOperator -> ASS_OR .)
    NEW             reduce using rule 411 (assignmentOperator -> ASS_OR .)
    Identifier      reduce using rule 411 (assignmentOperator -> ASS_OR .)
    VOID            reduce using rule 411 (assignmentOperator -> ASS_OR .)
    CharacterLiteral reduce using rule 411 (assignmentOperator -> ASS_OR .)
    StringLiteral   reduce using rule 411 (assignmentOperator -> ASS_OR .)
    NULL            reduce using rule 411 (assignmentOperator -> ASS_OR .)
    BOOLEAN         reduce using rule 411 (assignmentOperator -> ASS_OR .)
    CHAR            reduce using rule 411 (assignmentOperator -> ASS_OR .)
    BYTE            reduce using rule 411 (assignmentOperator -> ASS_OR .)
    SHORT           reduce using rule 411 (assignmentOperator -> ASS_OR .)
    INT             reduce using rule 411 (assignmentOperator -> ASS_OR .)
    LONG            reduce using rule 411 (assignmentOperator -> ASS_OR .)
    FLOAT           reduce using rule 411 (assignmentOperator -> ASS_OR .)
    DOUBLE          reduce using rule 411 (assignmentOperator -> ASS_OR .)
    LONG_NUMBER     reduce using rule 411 (assignmentOperator -> ASS_OR .)
    LONG_HEX_NUMBER reduce using rule 411 (assignmentOperator -> ASS_OR .)
    NON_INTEGER_1   reduce using rule 411 (assignmentOperator -> ASS_OR .)
    NON_INTEGER_2   reduce using rule 411 (assignmentOperator -> ASS_OR .)
    NON_INTEGER_3   reduce using rule 411 (assignmentOperator -> ASS_OR .)
    NON_INTEGER_4   reduce using rule 411 (assignmentOperator -> ASS_OR .)
    TRUE            reduce using rule 411 (assignmentOperator -> ASS_OR .)
    FALSE           reduce using rule 411 (assignmentOperator -> ASS_OR .)


state 418

    (402) assignmentOperator_expression_empty -> assignmentOperator . expression
    (404) expression -> . conditionalExpression assignmentOperator_expression_empty
    (420) conditionalExpression -> . conditionalOrExpression conditionalExpressionStats
    (421) conditionalExpression -> . conditionalOrExpression
    (425) conditionalOrExpression -> . conditionalAndExpression O_conditionalAndExpressions
    (426) conditionalOrExpression -> . conditionalAndExpression
    (430) conditionalAndExpression -> . inclusiveOrExpression O_inclusiveOrExpressions
    (431) conditionalAndExpression -> . inclusiveOrExpression
    (435) inclusiveOrExpression -> . exclusiveOrExpression V_exclusiveOrExpression
    (436) inclusiveOrExpression -> . exclusiveOrExpression
    (440) exclusiveOrExpression -> . andExpression CARET_andExpressions
    (441) exclusiveOrExpression -> . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    equalityExpression             shift and go to state 108
    inclusiveOrExpression          shift and go to state 99
    multiplicativeExpression       shift and go to state 128
    exclusiveOrExpression          shift and go to state 110
    conditionalAndExpression       shift and go to state 89
    FloatingPointLiteral           shift and go to state 119
    shiftExpression                shift and go to state 130
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    integerLiteral                 shift and go to state 98
    additiveExpression             shift and go to state 102
    instanceOfExpression           shift and go to state 96
    conditionalExpression          shift and go to state 266
    unaryExpression                shift and go to state 131
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    relationalExpression           shift and go to state 95
    conditionalOrExpression        shift and go to state 109
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    primitiveType                  shift and go to state 122
    andExpression                  shift and go to state 106
    expression                     shift and go to state 545

state 419

    (405) assignmentOperator -> EQUALS .

    PLUS            reduce using rule 405 (assignmentOperator -> EQUALS .)
    DASH            reduce using rule 405 (assignmentOperator -> EQUALS .)
    OP_INC          reduce using rule 405 (assignmentOperator -> EQUALS .)
    OP_DEC          reduce using rule 405 (assignmentOperator -> EQUALS .)
    TILDE           reduce using rule 405 (assignmentOperator -> EQUALS .)
    EXCLAMATION     reduce using rule 405 (assignmentOperator -> EQUALS .)
    LPAREN          reduce using rule 405 (assignmentOperator -> EQUALS .)
    THIS            reduce using rule 405 (assignmentOperator -> EQUALS .)
    SUPER           reduce using rule 405 (assignmentOperator -> EQUALS .)
    NEW             reduce using rule 405 (assignmentOperator -> EQUALS .)
    Identifier      reduce using rule 405 (assignmentOperator -> EQUALS .)
    VOID            reduce using rule 405 (assignmentOperator -> EQUALS .)
    CharacterLiteral reduce using rule 405 (assignmentOperator -> EQUALS .)
    StringLiteral   reduce using rule 405 (assignmentOperator -> EQUALS .)
    NULL            reduce using rule 405 (assignmentOperator -> EQUALS .)
    BOOLEAN         reduce using rule 405 (assignmentOperator -> EQUALS .)
    CHAR            reduce using rule 405 (assignmentOperator -> EQUALS .)
    BYTE            reduce using rule 405 (assignmentOperator -> EQUALS .)
    SHORT           reduce using rule 405 (assignmentOperator -> EQUALS .)
    INT             reduce using rule 405 (assignmentOperator -> EQUALS .)
    LONG            reduce using rule 405 (assignmentOperator -> EQUALS .)
    FLOAT           reduce using rule 405 (assignmentOperator -> EQUALS .)
    DOUBLE          reduce using rule 405 (assignmentOperator -> EQUALS .)
    LONG_NUMBER     reduce using rule 405 (assignmentOperator -> EQUALS .)
    LONG_HEX_NUMBER reduce using rule 405 (assignmentOperator -> EQUALS .)
    NON_INTEGER_1   reduce using rule 405 (assignmentOperator -> EQUALS .)
    NON_INTEGER_2   reduce using rule 405 (assignmentOperator -> EQUALS .)
    NON_INTEGER_3   reduce using rule 405 (assignmentOperator -> EQUALS .)
    NON_INTEGER_4   reduce using rule 405 (assignmentOperator -> EQUALS .)
    TRUE            reduce using rule 405 (assignmentOperator -> EQUALS .)
    FALSE           reduce using rule 405 (assignmentOperator -> EQUALS .)


state 420

    (408) assignmentOperator -> ASS_MUL .

    PLUS            reduce using rule 408 (assignmentOperator -> ASS_MUL .)
    DASH            reduce using rule 408 (assignmentOperator -> ASS_MUL .)
    OP_INC          reduce using rule 408 (assignmentOperator -> ASS_MUL .)
    OP_DEC          reduce using rule 408 (assignmentOperator -> ASS_MUL .)
    TILDE           reduce using rule 408 (assignmentOperator -> ASS_MUL .)
    EXCLAMATION     reduce using rule 408 (assignmentOperator -> ASS_MUL .)
    LPAREN          reduce using rule 408 (assignmentOperator -> ASS_MUL .)
    THIS            reduce using rule 408 (assignmentOperator -> ASS_MUL .)
    SUPER           reduce using rule 408 (assignmentOperator -> ASS_MUL .)
    NEW             reduce using rule 408 (assignmentOperator -> ASS_MUL .)
    Identifier      reduce using rule 408 (assignmentOperator -> ASS_MUL .)
    VOID            reduce using rule 408 (assignmentOperator -> ASS_MUL .)
    CharacterLiteral reduce using rule 408 (assignmentOperator -> ASS_MUL .)
    StringLiteral   reduce using rule 408 (assignmentOperator -> ASS_MUL .)
    NULL            reduce using rule 408 (assignmentOperator -> ASS_MUL .)
    BOOLEAN         reduce using rule 408 (assignmentOperator -> ASS_MUL .)
    CHAR            reduce using rule 408 (assignmentOperator -> ASS_MUL .)
    BYTE            reduce using rule 408 (assignmentOperator -> ASS_MUL .)
    SHORT           reduce using rule 408 (assignmentOperator -> ASS_MUL .)
    INT             reduce using rule 408 (assignmentOperator -> ASS_MUL .)
    LONG            reduce using rule 408 (assignmentOperator -> ASS_MUL .)
    FLOAT           reduce using rule 408 (assignmentOperator -> ASS_MUL .)
    DOUBLE          reduce using rule 408 (assignmentOperator -> ASS_MUL .)
    LONG_NUMBER     reduce using rule 408 (assignmentOperator -> ASS_MUL .)
    LONG_HEX_NUMBER reduce using rule 408 (assignmentOperator -> ASS_MUL .)
    NON_INTEGER_1   reduce using rule 408 (assignmentOperator -> ASS_MUL .)
    NON_INTEGER_2   reduce using rule 408 (assignmentOperator -> ASS_MUL .)
    NON_INTEGER_3   reduce using rule 408 (assignmentOperator -> ASS_MUL .)
    NON_INTEGER_4   reduce using rule 408 (assignmentOperator -> ASS_MUL .)
    TRUE            reduce using rule 408 (assignmentOperator -> ASS_MUL .)
    FALSE           reduce using rule 408 (assignmentOperator -> ASS_MUL .)


state 421

    (410) assignmentOperator -> ASS_AND .

    PLUS            reduce using rule 410 (assignmentOperator -> ASS_AND .)
    DASH            reduce using rule 410 (assignmentOperator -> ASS_AND .)
    OP_INC          reduce using rule 410 (assignmentOperator -> ASS_AND .)
    OP_DEC          reduce using rule 410 (assignmentOperator -> ASS_AND .)
    TILDE           reduce using rule 410 (assignmentOperator -> ASS_AND .)
    EXCLAMATION     reduce using rule 410 (assignmentOperator -> ASS_AND .)
    LPAREN          reduce using rule 410 (assignmentOperator -> ASS_AND .)
    THIS            reduce using rule 410 (assignmentOperator -> ASS_AND .)
    SUPER           reduce using rule 410 (assignmentOperator -> ASS_AND .)
    NEW             reduce using rule 410 (assignmentOperator -> ASS_AND .)
    Identifier      reduce using rule 410 (assignmentOperator -> ASS_AND .)
    VOID            reduce using rule 410 (assignmentOperator -> ASS_AND .)
    CharacterLiteral reduce using rule 410 (assignmentOperator -> ASS_AND .)
    StringLiteral   reduce using rule 410 (assignmentOperator -> ASS_AND .)
    NULL            reduce using rule 410 (assignmentOperator -> ASS_AND .)
    BOOLEAN         reduce using rule 410 (assignmentOperator -> ASS_AND .)
    CHAR            reduce using rule 410 (assignmentOperator -> ASS_AND .)
    BYTE            reduce using rule 410 (assignmentOperator -> ASS_AND .)
    SHORT           reduce using rule 410 (assignmentOperator -> ASS_AND .)
    INT             reduce using rule 410 (assignmentOperator -> ASS_AND .)
    LONG            reduce using rule 410 (assignmentOperator -> ASS_AND .)
    FLOAT           reduce using rule 410 (assignmentOperator -> ASS_AND .)
    DOUBLE          reduce using rule 410 (assignmentOperator -> ASS_AND .)
    LONG_NUMBER     reduce using rule 410 (assignmentOperator -> ASS_AND .)
    LONG_HEX_NUMBER reduce using rule 410 (assignmentOperator -> ASS_AND .)
    NON_INTEGER_1   reduce using rule 410 (assignmentOperator -> ASS_AND .)
    NON_INTEGER_2   reduce using rule 410 (assignmentOperator -> ASS_AND .)
    NON_INTEGER_3   reduce using rule 410 (assignmentOperator -> ASS_AND .)
    NON_INTEGER_4   reduce using rule 410 (assignmentOperator -> ASS_AND .)
    TRUE            reduce using rule 410 (assignmentOperator -> ASS_AND .)
    FALSE           reduce using rule 410 (assignmentOperator -> ASS_AND .)


state 422

    (407) assignmentOperator -> ASS_SUB .

    PLUS            reduce using rule 407 (assignmentOperator -> ASS_SUB .)
    DASH            reduce using rule 407 (assignmentOperator -> ASS_SUB .)
    OP_INC          reduce using rule 407 (assignmentOperator -> ASS_SUB .)
    OP_DEC          reduce using rule 407 (assignmentOperator -> ASS_SUB .)
    TILDE           reduce using rule 407 (assignmentOperator -> ASS_SUB .)
    EXCLAMATION     reduce using rule 407 (assignmentOperator -> ASS_SUB .)
    LPAREN          reduce using rule 407 (assignmentOperator -> ASS_SUB .)
    THIS            reduce using rule 407 (assignmentOperator -> ASS_SUB .)
    SUPER           reduce using rule 407 (assignmentOperator -> ASS_SUB .)
    NEW             reduce using rule 407 (assignmentOperator -> ASS_SUB .)
    Identifier      reduce using rule 407 (assignmentOperator -> ASS_SUB .)
    VOID            reduce using rule 407 (assignmentOperator -> ASS_SUB .)
    CharacterLiteral reduce using rule 407 (assignmentOperator -> ASS_SUB .)
    StringLiteral   reduce using rule 407 (assignmentOperator -> ASS_SUB .)
    NULL            reduce using rule 407 (assignmentOperator -> ASS_SUB .)
    BOOLEAN         reduce using rule 407 (assignmentOperator -> ASS_SUB .)
    CHAR            reduce using rule 407 (assignmentOperator -> ASS_SUB .)
    BYTE            reduce using rule 407 (assignmentOperator -> ASS_SUB .)
    SHORT           reduce using rule 407 (assignmentOperator -> ASS_SUB .)
    INT             reduce using rule 407 (assignmentOperator -> ASS_SUB .)
    LONG            reduce using rule 407 (assignmentOperator -> ASS_SUB .)
    FLOAT           reduce using rule 407 (assignmentOperator -> ASS_SUB .)
    DOUBLE          reduce using rule 407 (assignmentOperator -> ASS_SUB .)
    LONG_NUMBER     reduce using rule 407 (assignmentOperator -> ASS_SUB .)
    LONG_HEX_NUMBER reduce using rule 407 (assignmentOperator -> ASS_SUB .)
    NON_INTEGER_1   reduce using rule 407 (assignmentOperator -> ASS_SUB .)
    NON_INTEGER_2   reduce using rule 407 (assignmentOperator -> ASS_SUB .)
    NON_INTEGER_3   reduce using rule 407 (assignmentOperator -> ASS_SUB .)
    NON_INTEGER_4   reduce using rule 407 (assignmentOperator -> ASS_SUB .)
    TRUE            reduce using rule 407 (assignmentOperator -> ASS_SUB .)
    FALSE           reduce using rule 407 (assignmentOperator -> ASS_SUB .)


state 423

    (416) assignmentOperator -> ASS_SHR .

    PLUS            reduce using rule 416 (assignmentOperator -> ASS_SHR .)
    DASH            reduce using rule 416 (assignmentOperator -> ASS_SHR .)
    OP_INC          reduce using rule 416 (assignmentOperator -> ASS_SHR .)
    OP_DEC          reduce using rule 416 (assignmentOperator -> ASS_SHR .)
    TILDE           reduce using rule 416 (assignmentOperator -> ASS_SHR .)
    EXCLAMATION     reduce using rule 416 (assignmentOperator -> ASS_SHR .)
    LPAREN          reduce using rule 416 (assignmentOperator -> ASS_SHR .)
    THIS            reduce using rule 416 (assignmentOperator -> ASS_SHR .)
    SUPER           reduce using rule 416 (assignmentOperator -> ASS_SHR .)
    NEW             reduce using rule 416 (assignmentOperator -> ASS_SHR .)
    Identifier      reduce using rule 416 (assignmentOperator -> ASS_SHR .)
    VOID            reduce using rule 416 (assignmentOperator -> ASS_SHR .)
    CharacterLiteral reduce using rule 416 (assignmentOperator -> ASS_SHR .)
    StringLiteral   reduce using rule 416 (assignmentOperator -> ASS_SHR .)
    NULL            reduce using rule 416 (assignmentOperator -> ASS_SHR .)
    BOOLEAN         reduce using rule 416 (assignmentOperator -> ASS_SHR .)
    CHAR            reduce using rule 416 (assignmentOperator -> ASS_SHR .)
    BYTE            reduce using rule 416 (assignmentOperator -> ASS_SHR .)
    SHORT           reduce using rule 416 (assignmentOperator -> ASS_SHR .)
    INT             reduce using rule 416 (assignmentOperator -> ASS_SHR .)
    LONG            reduce using rule 416 (assignmentOperator -> ASS_SHR .)
    FLOAT           reduce using rule 416 (assignmentOperator -> ASS_SHR .)
    DOUBLE          reduce using rule 416 (assignmentOperator -> ASS_SHR .)
    LONG_NUMBER     reduce using rule 416 (assignmentOperator -> ASS_SHR .)
    LONG_HEX_NUMBER reduce using rule 416 (assignmentOperator -> ASS_SHR .)
    NON_INTEGER_1   reduce using rule 416 (assignmentOperator -> ASS_SHR .)
    NON_INTEGER_2   reduce using rule 416 (assignmentOperator -> ASS_SHR .)
    NON_INTEGER_3   reduce using rule 416 (assignmentOperator -> ASS_SHR .)
    NON_INTEGER_4   reduce using rule 416 (assignmentOperator -> ASS_SHR .)
    TRUE            reduce using rule 416 (assignmentOperator -> ASS_SHR .)
    FALSE           reduce using rule 416 (assignmentOperator -> ASS_SHR .)


state 424

    (404) expression -> conditionalExpression assignmentOperator_expression_empty .

    SEMI            reduce using rule 404 (expression -> conditionalExpression assignmentOperator_expression_empty .)
    COMMA           reduce using rule 404 (expression -> conditionalExpression assignmentOperator_expression_empty .)
    RPAREN          reduce using rule 404 (expression -> conditionalExpression assignmentOperator_expression_empty .)
    BRPAREN         reduce using rule 404 (expression -> conditionalExpression assignmentOperator_expression_empty .)
    COLON           reduce using rule 404 (expression -> conditionalExpression assignmentOperator_expression_empty .)
    EQUALS          reduce using rule 404 (expression -> conditionalExpression assignmentOperator_expression_empty .)
    ASS_ADD         reduce using rule 404 (expression -> conditionalExpression assignmentOperator_expression_empty .)
    ASS_SUB         reduce using rule 404 (expression -> conditionalExpression assignmentOperator_expression_empty .)
    ASS_MUL         reduce using rule 404 (expression -> conditionalExpression assignmentOperator_expression_empty .)
    ASS_DIV         reduce using rule 404 (expression -> conditionalExpression assignmentOperator_expression_empty .)
    ASS_AND         reduce using rule 404 (expression -> conditionalExpression assignmentOperator_expression_empty .)
    ASS_OR          reduce using rule 404 (expression -> conditionalExpression assignmentOperator_expression_empty .)
    ASS_XOR         reduce using rule 404 (expression -> conditionalExpression assignmentOperator_expression_empty .)
    ASS_MOD         reduce using rule 404 (expression -> conditionalExpression assignmentOperator_expression_empty .)
    ASS_SHL         reduce using rule 404 (expression -> conditionalExpression assignmentOperator_expression_empty .)
    ASS_SHRR        reduce using rule 404 (expression -> conditionalExpression assignmentOperator_expression_empty .)
    ASS_SHR         reduce using rule 404 (expression -> conditionalExpression assignmentOperator_expression_empty .)
    FRPAREN         reduce using rule 404 (expression -> conditionalExpression assignmentOperator_expression_empty .)
    QUES            reduce using rule 404 (expression -> conditionalExpression assignmentOperator_expression_empty .)


state 425

    (414) assignmentOperator -> ASS_SHL .

    PLUS            reduce using rule 414 (assignmentOperator -> ASS_SHL .)
    DASH            reduce using rule 414 (assignmentOperator -> ASS_SHL .)
    OP_INC          reduce using rule 414 (assignmentOperator -> ASS_SHL .)
    OP_DEC          reduce using rule 414 (assignmentOperator -> ASS_SHL .)
    TILDE           reduce using rule 414 (assignmentOperator -> ASS_SHL .)
    EXCLAMATION     reduce using rule 414 (assignmentOperator -> ASS_SHL .)
    LPAREN          reduce using rule 414 (assignmentOperator -> ASS_SHL .)
    THIS            reduce using rule 414 (assignmentOperator -> ASS_SHL .)
    SUPER           reduce using rule 414 (assignmentOperator -> ASS_SHL .)
    NEW             reduce using rule 414 (assignmentOperator -> ASS_SHL .)
    Identifier      reduce using rule 414 (assignmentOperator -> ASS_SHL .)
    VOID            reduce using rule 414 (assignmentOperator -> ASS_SHL .)
    CharacterLiteral reduce using rule 414 (assignmentOperator -> ASS_SHL .)
    StringLiteral   reduce using rule 414 (assignmentOperator -> ASS_SHL .)
    NULL            reduce using rule 414 (assignmentOperator -> ASS_SHL .)
    BOOLEAN         reduce using rule 414 (assignmentOperator -> ASS_SHL .)
    CHAR            reduce using rule 414 (assignmentOperator -> ASS_SHL .)
    BYTE            reduce using rule 414 (assignmentOperator -> ASS_SHL .)
    SHORT           reduce using rule 414 (assignmentOperator -> ASS_SHL .)
    INT             reduce using rule 414 (assignmentOperator -> ASS_SHL .)
    LONG            reduce using rule 414 (assignmentOperator -> ASS_SHL .)
    FLOAT           reduce using rule 414 (assignmentOperator -> ASS_SHL .)
    DOUBLE          reduce using rule 414 (assignmentOperator -> ASS_SHL .)
    LONG_NUMBER     reduce using rule 414 (assignmentOperator -> ASS_SHL .)
    LONG_HEX_NUMBER reduce using rule 414 (assignmentOperator -> ASS_SHL .)
    NON_INTEGER_1   reduce using rule 414 (assignmentOperator -> ASS_SHL .)
    NON_INTEGER_2   reduce using rule 414 (assignmentOperator -> ASS_SHL .)
    NON_INTEGER_3   reduce using rule 414 (assignmentOperator -> ASS_SHL .)
    NON_INTEGER_4   reduce using rule 414 (assignmentOperator -> ASS_SHL .)
    TRUE            reduce using rule 414 (assignmentOperator -> ASS_SHL .)
    FALSE           reduce using rule 414 (assignmentOperator -> ASS_SHL .)


state 426

    (413) assignmentOperator -> ASS_MOD .

    PLUS            reduce using rule 413 (assignmentOperator -> ASS_MOD .)
    DASH            reduce using rule 413 (assignmentOperator -> ASS_MOD .)
    OP_INC          reduce using rule 413 (assignmentOperator -> ASS_MOD .)
    OP_DEC          reduce using rule 413 (assignmentOperator -> ASS_MOD .)
    TILDE           reduce using rule 413 (assignmentOperator -> ASS_MOD .)
    EXCLAMATION     reduce using rule 413 (assignmentOperator -> ASS_MOD .)
    LPAREN          reduce using rule 413 (assignmentOperator -> ASS_MOD .)
    THIS            reduce using rule 413 (assignmentOperator -> ASS_MOD .)
    SUPER           reduce using rule 413 (assignmentOperator -> ASS_MOD .)
    NEW             reduce using rule 413 (assignmentOperator -> ASS_MOD .)
    Identifier      reduce using rule 413 (assignmentOperator -> ASS_MOD .)
    VOID            reduce using rule 413 (assignmentOperator -> ASS_MOD .)
    CharacterLiteral reduce using rule 413 (assignmentOperator -> ASS_MOD .)
    StringLiteral   reduce using rule 413 (assignmentOperator -> ASS_MOD .)
    NULL            reduce using rule 413 (assignmentOperator -> ASS_MOD .)
    BOOLEAN         reduce using rule 413 (assignmentOperator -> ASS_MOD .)
    CHAR            reduce using rule 413 (assignmentOperator -> ASS_MOD .)
    BYTE            reduce using rule 413 (assignmentOperator -> ASS_MOD .)
    SHORT           reduce using rule 413 (assignmentOperator -> ASS_MOD .)
    INT             reduce using rule 413 (assignmentOperator -> ASS_MOD .)
    LONG            reduce using rule 413 (assignmentOperator -> ASS_MOD .)
    FLOAT           reduce using rule 413 (assignmentOperator -> ASS_MOD .)
    DOUBLE          reduce using rule 413 (assignmentOperator -> ASS_MOD .)
    LONG_NUMBER     reduce using rule 413 (assignmentOperator -> ASS_MOD .)
    LONG_HEX_NUMBER reduce using rule 413 (assignmentOperator -> ASS_MOD .)
    NON_INTEGER_1   reduce using rule 413 (assignmentOperator -> ASS_MOD .)
    NON_INTEGER_2   reduce using rule 413 (assignmentOperator -> ASS_MOD .)
    NON_INTEGER_3   reduce using rule 413 (assignmentOperator -> ASS_MOD .)
    NON_INTEGER_4   reduce using rule 413 (assignmentOperator -> ASS_MOD .)
    TRUE            reduce using rule 413 (assignmentOperator -> ASS_MOD .)
    FALSE           reduce using rule 413 (assignmentOperator -> ASS_MOD .)


state 427

    (267) DOT_Identifier -> DOT . Identifier
    (268) DOT_Identifier -> DOT . MULT
    (523) identifierSuffix -> DOT . CLASS
    (524) identifierSuffix -> DOT . explicitGenericInvocation
    (525) identifierSuffix -> DOT . THIS
    (526) identifierSuffix -> DOT . SUPER arguments
    (527) identifierSuffix -> DOT . NEW innerCreator
    (215) classOrInterfaceTypeStatement -> DOT . Identifier typeArguments
    (216) classOrInterfaceTypeStatement -> DOT . Identifier
    (543) explicitGenericInvocation -> . nonWildcardTypeArguments Identifier arguments
    (544) nonWildcardTypeArguments -> . LESS typeList MORE

    Identifier      shift and go to state 546
    MULT            shift and go to state 68
    CLASS           shift and go to state 359
    THIS            shift and go to state 354
    SUPER           shift and go to state 358
    NEW             shift and go to state 357
    LESS            shift and go to state 242

    explicitGenericInvocation      shift and go to state 355
    nonWildcardTypeArguments       shift and go to state 356

state 428

    (210) type_body -> Identifier arrays .
    (138) arrays -> arrays . array
    (520) identifierSuffix -> arrays . DOT CLASS
    (137) array -> . FLPAREN FRPAREN

    RPAREN          reduce using rule 210 (type_body -> Identifier arrays .)
    Identifier      reduce using rule 210 (type_body -> Identifier arrays .)
    DOT             shift and go to state 365
    FLPAREN         shift and go to state 153

    array                          shift and go to state 308

state 429

    (206) type -> primitiveType arrays .
    (514) primary -> primitiveType arrays . DOT CLASS
    (138) arrays -> arrays . array
    (137) array -> . FLPAREN FRPAREN

    Identifier      reduce using rule 206 (type -> primitiveType arrays .)
    RPAREN          reduce using rule 206 (type -> primitiveType arrays .)
    DOT             shift and go to state 401
    FLPAREN         shift and go to state 153

    array                          shift and go to state 308

state 430

    (501) castExpression -> LPAREN primitiveType RPAREN . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    unaryExpression                shift and go to state 547
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    primitiveType                  shift and go to state 122
    literal                        shift and go to state 116
    FloatingPointLiteral           shift and go to state 119
    booleanLiteral                 shift and go to state 92
    integerLiteral                 shift and go to state 98

state 431

    (503) castExpression -> LPAREN expression RPAREN . unaryExpressionNotPlusMinus
    (394) parExpression -> LPAREN expression RPAREN .
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    OP_INC          reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    OP_DEC          reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    DOT             reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    FLPAREN         reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    MULT            reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    SLASH           reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    PERCENT         reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    DASH            reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    OP_SHR          reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    OP_SHRR         reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    OP_SHL          reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    OP_LE           reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    OP_GE           reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    LESS            reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    MORE            reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    INSTANCEOF      reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    OP_EQ           reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    OP_NE           reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    AND             reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    CARET           reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    VERTICAL        reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    OP_LAND         reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    OP_LOR          reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    QUES            reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    ASS_ADD         reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    ASS_SUB         reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    ASS_MUL         reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    ASS_DIV         reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    ASS_AND         reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    ASS_OR          reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    ASS_XOR         reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    ASS_MOD         reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    ASS_SHL         reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    ASS_SHRR        reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    ASS_SHR         reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    BRPAREN         reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    FRPAREN         reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    COLON           reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 548
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    primitiveType                  shift and go to state 122
    literal                        shift and go to state 116
    FloatingPointLiteral           shift and go to state 119
    booleanLiteral                 shift and go to state 92
    integerLiteral                 shift and go to state 98

state 432

    (552) superSuffix -> DOT Identifier . arguments_once
    (80) arguments_once -> . arguments
    (81) arguments_once -> .
    (555) arguments -> . LPAREN expressionList_once RPAREN

    OP_INC          reduce using rule 81 (arguments_once -> .)
    OP_DEC          reduce using rule 81 (arguments_once -> .)
    DOT             reduce using rule 81 (arguments_once -> .)
    FLPAREN         reduce using rule 81 (arguments_once -> .)
    MULT            reduce using rule 81 (arguments_once -> .)
    SLASH           reduce using rule 81 (arguments_once -> .)
    PERCENT         reduce using rule 81 (arguments_once -> .)
    PLUS            reduce using rule 81 (arguments_once -> .)
    DASH            reduce using rule 81 (arguments_once -> .)
    OP_SHR          reduce using rule 81 (arguments_once -> .)
    OP_SHRR         reduce using rule 81 (arguments_once -> .)
    OP_SHL          reduce using rule 81 (arguments_once -> .)
    OP_LE           reduce using rule 81 (arguments_once -> .)
    OP_GE           reduce using rule 81 (arguments_once -> .)
    LESS            reduce using rule 81 (arguments_once -> .)
    MORE            reduce using rule 81 (arguments_once -> .)
    INSTANCEOF      reduce using rule 81 (arguments_once -> .)
    OP_EQ           reduce using rule 81 (arguments_once -> .)
    OP_NE           reduce using rule 81 (arguments_once -> .)
    AND             reduce using rule 81 (arguments_once -> .)
    CARET           reduce using rule 81 (arguments_once -> .)
    VERTICAL        reduce using rule 81 (arguments_once -> .)
    OP_LAND         reduce using rule 81 (arguments_once -> .)
    OP_LOR          reduce using rule 81 (arguments_once -> .)
    QUES            reduce using rule 81 (arguments_once -> .)
    RPAREN          reduce using rule 81 (arguments_once -> .)
    COMMA           reduce using rule 81 (arguments_once -> .)
    BRPAREN         reduce using rule 81 (arguments_once -> .)
    EQUALS          reduce using rule 81 (arguments_once -> .)
    ASS_ADD         reduce using rule 81 (arguments_once -> .)
    ASS_SUB         reduce using rule 81 (arguments_once -> .)
    ASS_MUL         reduce using rule 81 (arguments_once -> .)
    ASS_DIV         reduce using rule 81 (arguments_once -> .)
    ASS_AND         reduce using rule 81 (arguments_once -> .)
    ASS_OR          reduce using rule 81 (arguments_once -> .)
    ASS_XOR         reduce using rule 81 (arguments_once -> .)
    ASS_MOD         reduce using rule 81 (arguments_once -> .)
    ASS_SHL         reduce using rule 81 (arguments_once -> .)
    ASS_SHRR        reduce using rule 81 (arguments_once -> .)
    ASS_SHR         reduce using rule 81 (arguments_once -> .)
    FRPAREN         reduce using rule 81 (arguments_once -> .)
    COLON           reduce using rule 81 (arguments_once -> .)
    SEMI            reduce using rule 81 (arguments_once -> .)
    LPAREN          shift and go to state 199

    arguments                      shift and go to state 517
    arguments_once                 shift and go to state 549

state 433

    (311) annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .

    SEMI            reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    PUBLIC          reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    PROTECTED       reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    PRIVATE         reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    ABSTRACT        reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    STATIC          reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    FINAL           reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    STRICTFP        reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    CLASS           reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    ENUM            reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    INTERFACE       reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    AT              reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    $end            reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    BRPAREN         reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    ASSERT          reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    IF              reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    FOR             reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    WHILE           reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    DO              reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    TRY             reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    SWITCH          reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    SYNCHRONIZED    reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    RETURN          reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    THROW           reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    BREAK           reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    CONTINUE        reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    Identifier      reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    BLPAREN         reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    BOOLEAN         reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    CHAR            reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    BYTE            reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    SHORT           reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    INT             reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    LONG            reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    FLOAT           reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    DOUBLE          reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    PLUS            reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    DASH            reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    OP_INC          reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    OP_DEC          reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    TILDE           reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    EXCLAMATION     reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    LPAREN          reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    THIS            reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    SUPER           reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    NEW             reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    VOID            reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    CharacterLiteral reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    StringLiteral   reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    NULL            reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    LONG_NUMBER     reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    LONG_HEX_NUMBER reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    NON_INTEGER_1   reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    NON_INTEGER_2   reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    NON_INTEGER_3   reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    NON_INTEGER_4   reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    TRUE            reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    FALSE           reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    CASE            reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    DEFAULT         reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    NATIVE          reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    TRANSIENT       reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    VOLATILE        reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)
    LESS            reduce using rule 311 (annotationTypeBody -> BLPAREN annotationTypeElementDeclarations BRPAREN .)


state 434

    (310) annotationTypeElementDeclarations -> annotationTypeElementDeclarations annotationTypeElementDeclaration .

    BRPAREN         reduce using rule 310 (annotationTypeElementDeclarations -> annotationTypeElementDeclarations annotationTypeElementDeclaration .)
    PUBLIC          reduce using rule 310 (annotationTypeElementDeclarations -> annotationTypeElementDeclarations annotationTypeElementDeclaration .)
    PROTECTED       reduce using rule 310 (annotationTypeElementDeclarations -> annotationTypeElementDeclarations annotationTypeElementDeclaration .)
    PRIVATE         reduce using rule 310 (annotationTypeElementDeclarations -> annotationTypeElementDeclarations annotationTypeElementDeclaration .)
    STATIC          reduce using rule 310 (annotationTypeElementDeclarations -> annotationTypeElementDeclarations annotationTypeElementDeclaration .)
    ABSTRACT        reduce using rule 310 (annotationTypeElementDeclarations -> annotationTypeElementDeclarations annotationTypeElementDeclaration .)
    FINAL           reduce using rule 310 (annotationTypeElementDeclarations -> annotationTypeElementDeclarations annotationTypeElementDeclaration .)
    NATIVE          reduce using rule 310 (annotationTypeElementDeclarations -> annotationTypeElementDeclarations annotationTypeElementDeclaration .)
    SYNCHRONIZED    reduce using rule 310 (annotationTypeElementDeclarations -> annotationTypeElementDeclarations annotationTypeElementDeclaration .)
    TRANSIENT       reduce using rule 310 (annotationTypeElementDeclarations -> annotationTypeElementDeclarations annotationTypeElementDeclaration .)
    VOLATILE        reduce using rule 310 (annotationTypeElementDeclarations -> annotationTypeElementDeclarations annotationTypeElementDeclaration .)
    STRICTFP        reduce using rule 310 (annotationTypeElementDeclarations -> annotationTypeElementDeclarations annotationTypeElementDeclaration .)
    CLASS           reduce using rule 310 (annotationTypeElementDeclarations -> annotationTypeElementDeclarations annotationTypeElementDeclaration .)
    INTERFACE       reduce using rule 310 (annotationTypeElementDeclarations -> annotationTypeElementDeclarations annotationTypeElementDeclaration .)
    ENUM            reduce using rule 310 (annotationTypeElementDeclarations -> annotationTypeElementDeclarations annotationTypeElementDeclaration .)
    AT              reduce using rule 310 (annotationTypeElementDeclarations -> annotationTypeElementDeclarations annotationTypeElementDeclaration .)
    Identifier      reduce using rule 310 (annotationTypeElementDeclarations -> annotationTypeElementDeclarations annotationTypeElementDeclaration .)
    BOOLEAN         reduce using rule 310 (annotationTypeElementDeclarations -> annotationTypeElementDeclarations annotationTypeElementDeclaration .)
    CHAR            reduce using rule 310 (annotationTypeElementDeclarations -> annotationTypeElementDeclarations annotationTypeElementDeclaration .)
    BYTE            reduce using rule 310 (annotationTypeElementDeclarations -> annotationTypeElementDeclarations annotationTypeElementDeclaration .)
    SHORT           reduce using rule 310 (annotationTypeElementDeclarations -> annotationTypeElementDeclarations annotationTypeElementDeclaration .)
    INT             reduce using rule 310 (annotationTypeElementDeclarations -> annotationTypeElementDeclarations annotationTypeElementDeclaration .)
    LONG            reduce using rule 310 (annotationTypeElementDeclarations -> annotationTypeElementDeclarations annotationTypeElementDeclaration .)
    FLOAT           reduce using rule 310 (annotationTypeElementDeclarations -> annotationTypeElementDeclarations annotationTypeElementDeclaration .)
    DOUBLE          reduce using rule 310 (annotationTypeElementDeclarations -> annotationTypeElementDeclarations annotationTypeElementDeclaration .)


state 435

    (319) annotationTypeElementRest -> normalInterfaceDeclaration SEMI_OR_empty .

    BRPAREN         reduce using rule 319 (annotationTypeElementRest -> normalInterfaceDeclaration SEMI_OR_empty .)
    PUBLIC          reduce using rule 319 (annotationTypeElementRest -> normalInterfaceDeclaration SEMI_OR_empty .)
    PROTECTED       reduce using rule 319 (annotationTypeElementRest -> normalInterfaceDeclaration SEMI_OR_empty .)
    PRIVATE         reduce using rule 319 (annotationTypeElementRest -> normalInterfaceDeclaration SEMI_OR_empty .)
    STATIC          reduce using rule 319 (annotationTypeElementRest -> normalInterfaceDeclaration SEMI_OR_empty .)
    ABSTRACT        reduce using rule 319 (annotationTypeElementRest -> normalInterfaceDeclaration SEMI_OR_empty .)
    FINAL           reduce using rule 319 (annotationTypeElementRest -> normalInterfaceDeclaration SEMI_OR_empty .)
    NATIVE          reduce using rule 319 (annotationTypeElementRest -> normalInterfaceDeclaration SEMI_OR_empty .)
    SYNCHRONIZED    reduce using rule 319 (annotationTypeElementRest -> normalInterfaceDeclaration SEMI_OR_empty .)
    TRANSIENT       reduce using rule 319 (annotationTypeElementRest -> normalInterfaceDeclaration SEMI_OR_empty .)
    VOLATILE        reduce using rule 319 (annotationTypeElementRest -> normalInterfaceDeclaration SEMI_OR_empty .)
    STRICTFP        reduce using rule 319 (annotationTypeElementRest -> normalInterfaceDeclaration SEMI_OR_empty .)
    CLASS           reduce using rule 319 (annotationTypeElementRest -> normalInterfaceDeclaration SEMI_OR_empty .)
    INTERFACE       reduce using rule 319 (annotationTypeElementRest -> normalInterfaceDeclaration SEMI_OR_empty .)
    ENUM            reduce using rule 319 (annotationTypeElementRest -> normalInterfaceDeclaration SEMI_OR_empty .)
    AT              reduce using rule 319 (annotationTypeElementRest -> normalInterfaceDeclaration SEMI_OR_empty .)
    Identifier      reduce using rule 319 (annotationTypeElementRest -> normalInterfaceDeclaration SEMI_OR_empty .)
    BOOLEAN         reduce using rule 319 (annotationTypeElementRest -> normalInterfaceDeclaration SEMI_OR_empty .)
    CHAR            reduce using rule 319 (annotationTypeElementRest -> normalInterfaceDeclaration SEMI_OR_empty .)
    BYTE            reduce using rule 319 (annotationTypeElementRest -> normalInterfaceDeclaration SEMI_OR_empty .)
    SHORT           reduce using rule 319 (annotationTypeElementRest -> normalInterfaceDeclaration SEMI_OR_empty .)
    INT             reduce using rule 319 (annotationTypeElementRest -> normalInterfaceDeclaration SEMI_OR_empty .)
    LONG            reduce using rule 319 (annotationTypeElementRest -> normalInterfaceDeclaration SEMI_OR_empty .)
    FLOAT           reduce using rule 319 (annotationTypeElementRest -> normalInterfaceDeclaration SEMI_OR_empty .)
    DOUBLE          reduce using rule 319 (annotationTypeElementRest -> normalInterfaceDeclaration SEMI_OR_empty .)


state 436

    (315) SEMI_OR_empty -> SEMI .

    BRPAREN         reduce using rule 315 (SEMI_OR_empty -> SEMI .)
    PUBLIC          reduce using rule 315 (SEMI_OR_empty -> SEMI .)
    PROTECTED       reduce using rule 315 (SEMI_OR_empty -> SEMI .)
    PRIVATE         reduce using rule 315 (SEMI_OR_empty -> SEMI .)
    STATIC          reduce using rule 315 (SEMI_OR_empty -> SEMI .)
    ABSTRACT        reduce using rule 315 (SEMI_OR_empty -> SEMI .)
    FINAL           reduce using rule 315 (SEMI_OR_empty -> SEMI .)
    NATIVE          reduce using rule 315 (SEMI_OR_empty -> SEMI .)
    SYNCHRONIZED    reduce using rule 315 (SEMI_OR_empty -> SEMI .)
    TRANSIENT       reduce using rule 315 (SEMI_OR_empty -> SEMI .)
    VOLATILE        reduce using rule 315 (SEMI_OR_empty -> SEMI .)
    STRICTFP        reduce using rule 315 (SEMI_OR_empty -> SEMI .)
    CLASS           reduce using rule 315 (SEMI_OR_empty -> SEMI .)
    INTERFACE       reduce using rule 315 (SEMI_OR_empty -> SEMI .)
    ENUM            reduce using rule 315 (SEMI_OR_empty -> SEMI .)
    AT              reduce using rule 315 (SEMI_OR_empty -> SEMI .)
    Identifier      reduce using rule 315 (SEMI_OR_empty -> SEMI .)
    BOOLEAN         reduce using rule 315 (SEMI_OR_empty -> SEMI .)
    CHAR            reduce using rule 315 (SEMI_OR_empty -> SEMI .)
    BYTE            reduce using rule 315 (SEMI_OR_empty -> SEMI .)
    SHORT           reduce using rule 315 (SEMI_OR_empty -> SEMI .)
    INT             reduce using rule 315 (SEMI_OR_empty -> SEMI .)
    LONG            reduce using rule 315 (SEMI_OR_empty -> SEMI .)
    FLOAT           reduce using rule 315 (SEMI_OR_empty -> SEMI .)
    DOUBLE          reduce using rule 315 (SEMI_OR_empty -> SEMI .)


state 437

    (318) annotationTypeElementRest -> normalClassDeclaration SEMI_OR_empty .

    BRPAREN         reduce using rule 318 (annotationTypeElementRest -> normalClassDeclaration SEMI_OR_empty .)
    PUBLIC          reduce using rule 318 (annotationTypeElementRest -> normalClassDeclaration SEMI_OR_empty .)
    PROTECTED       reduce using rule 318 (annotationTypeElementRest -> normalClassDeclaration SEMI_OR_empty .)
    PRIVATE         reduce using rule 318 (annotationTypeElementRest -> normalClassDeclaration SEMI_OR_empty .)
    STATIC          reduce using rule 318 (annotationTypeElementRest -> normalClassDeclaration SEMI_OR_empty .)
    ABSTRACT        reduce using rule 318 (annotationTypeElementRest -> normalClassDeclaration SEMI_OR_empty .)
    FINAL           reduce using rule 318 (annotationTypeElementRest -> normalClassDeclaration SEMI_OR_empty .)
    NATIVE          reduce using rule 318 (annotationTypeElementRest -> normalClassDeclaration SEMI_OR_empty .)
    SYNCHRONIZED    reduce using rule 318 (annotationTypeElementRest -> normalClassDeclaration SEMI_OR_empty .)
    TRANSIENT       reduce using rule 318 (annotationTypeElementRest -> normalClassDeclaration SEMI_OR_empty .)
    VOLATILE        reduce using rule 318 (annotationTypeElementRest -> normalClassDeclaration SEMI_OR_empty .)
    STRICTFP        reduce using rule 318 (annotationTypeElementRest -> normalClassDeclaration SEMI_OR_empty .)
    CLASS           reduce using rule 318 (annotationTypeElementRest -> normalClassDeclaration SEMI_OR_empty .)
    INTERFACE       reduce using rule 318 (annotationTypeElementRest -> normalClassDeclaration SEMI_OR_empty .)
    ENUM            reduce using rule 318 (annotationTypeElementRest -> normalClassDeclaration SEMI_OR_empty .)
    AT              reduce using rule 318 (annotationTypeElementRest -> normalClassDeclaration SEMI_OR_empty .)
    Identifier      reduce using rule 318 (annotationTypeElementRest -> normalClassDeclaration SEMI_OR_empty .)
    BOOLEAN         reduce using rule 318 (annotationTypeElementRest -> normalClassDeclaration SEMI_OR_empty .)
    CHAR            reduce using rule 318 (annotationTypeElementRest -> normalClassDeclaration SEMI_OR_empty .)
    BYTE            reduce using rule 318 (annotationTypeElementRest -> normalClassDeclaration SEMI_OR_empty .)
    SHORT           reduce using rule 318 (annotationTypeElementRest -> normalClassDeclaration SEMI_OR_empty .)
    INT             reduce using rule 318 (annotationTypeElementRest -> normalClassDeclaration SEMI_OR_empty .)
    LONG            reduce using rule 318 (annotationTypeElementRest -> normalClassDeclaration SEMI_OR_empty .)
    FLOAT           reduce using rule 318 (annotationTypeElementRest -> normalClassDeclaration SEMI_OR_empty .)
    DOUBLE          reduce using rule 318 (annotationTypeElementRest -> normalClassDeclaration SEMI_OR_empty .)


state 438

    (317) annotationTypeElementRest -> type annotationMethodOrConstantRest . SEMI

    SEMI            shift and go to state 550


state 439

    (327) annotationConstantRest -> variableDeclarators .

    SEMI            reduce using rule 327 (annotationConstantRest -> variableDeclarators .)


state 440

    (323) annotationMethodOrConstantRest -> annotationConstantRest .

    SEMI            reduce using rule 323 (annotationMethodOrConstantRest -> annotationConstantRest .)


state 441

    (169) variableDeclarator -> variableDeclaratorId . EQUALS_variableInitializer
    (170) variableDeclarator -> variableDeclaratorId .
    (168) EQUALS_variableInitializer -> . EQUALS variableInitializer

    COMMA           reduce using rule 170 (variableDeclarator -> variableDeclaratorId .)
    SEMI            reduce using rule 170 (variableDeclarator -> variableDeclaratorId .)
    EQUALS          shift and go to state 552

    EQUALS_variableInitializer     shift and go to state 551

state 442

    (326) annotationMethodRest -> Identifier . LPAREN RPAREN defaultValue_or_empty
    (178) variableDeclaratorId -> Identifier . arrays
    (179) variableDeclaratorId -> Identifier .
    (138) arrays -> . arrays array
    (139) arrays -> . array
    (137) array -> . FLPAREN FRPAREN

    LPAREN          shift and go to state 554
    EQUALS          reduce using rule 179 (variableDeclaratorId -> Identifier .)
    COMMA           reduce using rule 179 (variableDeclaratorId -> Identifier .)
    SEMI            reduce using rule 179 (variableDeclaratorId -> Identifier .)
    FLPAREN         shift and go to state 153

    arrays                         shift and go to state 553
    array                          shift and go to state 154

state 443

    (322) annotationMethodOrConstantRest -> annotationMethodRest .

    SEMI            reduce using rule 322 (annotationMethodOrConstantRest -> annotationMethodRest .)


state 444

    (166) variableDeclarators -> variableDeclarator . COMMA_VARS
    (167) variableDeclarators -> variableDeclarator .
    (164) COMMA_VARS -> . COMMA_VAR
    (165) COMMA_VARS -> . COMMA_VARS COMMA_VAR
    (163) COMMA_VAR -> . COMMA variableDeclarator

    SEMI            reduce using rule 167 (variableDeclarators -> variableDeclarator .)
    COMMA           shift and go to state 555

    COMMA_VARS                     shift and go to state 556
    COMMA_VAR                      shift and go to state 557

state 445

    (320) annotationTypeElementRest -> enumDeclaration SEMI_OR_empty .

    BRPAREN         reduce using rule 320 (annotationTypeElementRest -> enumDeclaration SEMI_OR_empty .)
    PUBLIC          reduce using rule 320 (annotationTypeElementRest -> enumDeclaration SEMI_OR_empty .)
    PROTECTED       reduce using rule 320 (annotationTypeElementRest -> enumDeclaration SEMI_OR_empty .)
    PRIVATE         reduce using rule 320 (annotationTypeElementRest -> enumDeclaration SEMI_OR_empty .)
    STATIC          reduce using rule 320 (annotationTypeElementRest -> enumDeclaration SEMI_OR_empty .)
    ABSTRACT        reduce using rule 320 (annotationTypeElementRest -> enumDeclaration SEMI_OR_empty .)
    FINAL           reduce using rule 320 (annotationTypeElementRest -> enumDeclaration SEMI_OR_empty .)
    NATIVE          reduce using rule 320 (annotationTypeElementRest -> enumDeclaration SEMI_OR_empty .)
    SYNCHRONIZED    reduce using rule 320 (annotationTypeElementRest -> enumDeclaration SEMI_OR_empty .)
    TRANSIENT       reduce using rule 320 (annotationTypeElementRest -> enumDeclaration SEMI_OR_empty .)
    VOLATILE        reduce using rule 320 (annotationTypeElementRest -> enumDeclaration SEMI_OR_empty .)
    STRICTFP        reduce using rule 320 (annotationTypeElementRest -> enumDeclaration SEMI_OR_empty .)
    CLASS           reduce using rule 320 (annotationTypeElementRest -> enumDeclaration SEMI_OR_empty .)
    INTERFACE       reduce using rule 320 (annotationTypeElementRest -> enumDeclaration SEMI_OR_empty .)
    ENUM            reduce using rule 320 (annotationTypeElementRest -> enumDeclaration SEMI_OR_empty .)
    AT              reduce using rule 320 (annotationTypeElementRest -> enumDeclaration SEMI_OR_empty .)
    Identifier      reduce using rule 320 (annotationTypeElementRest -> enumDeclaration SEMI_OR_empty .)
    BOOLEAN         reduce using rule 320 (annotationTypeElementRest -> enumDeclaration SEMI_OR_empty .)
    CHAR            reduce using rule 320 (annotationTypeElementRest -> enumDeclaration SEMI_OR_empty .)
    BYTE            reduce using rule 320 (annotationTypeElementRest -> enumDeclaration SEMI_OR_empty .)
    SHORT           reduce using rule 320 (annotationTypeElementRest -> enumDeclaration SEMI_OR_empty .)
    INT             reduce using rule 320 (annotationTypeElementRest -> enumDeclaration SEMI_OR_empty .)
    LONG            reduce using rule 320 (annotationTypeElementRest -> enumDeclaration SEMI_OR_empty .)
    FLOAT           reduce using rule 320 (annotationTypeElementRest -> enumDeclaration SEMI_OR_empty .)
    DOUBLE          reduce using rule 320 (annotationTypeElementRest -> enumDeclaration SEMI_OR_empty .)


state 446

    (313) annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .

    BRPAREN         reduce using rule 313 (annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .)
    PUBLIC          reduce using rule 313 (annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .)
    PROTECTED       reduce using rule 313 (annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .)
    PRIVATE         reduce using rule 313 (annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .)
    STATIC          reduce using rule 313 (annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .)
    ABSTRACT        reduce using rule 313 (annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .)
    FINAL           reduce using rule 313 (annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .)
    NATIVE          reduce using rule 313 (annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .)
    SYNCHRONIZED    reduce using rule 313 (annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .)
    TRANSIENT       reduce using rule 313 (annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .)
    VOLATILE        reduce using rule 313 (annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .)
    STRICTFP        reduce using rule 313 (annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .)
    CLASS           reduce using rule 313 (annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .)
    INTERFACE       reduce using rule 313 (annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .)
    ENUM            reduce using rule 313 (annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .)
    AT              reduce using rule 313 (annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .)
    Identifier      reduce using rule 313 (annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .)
    BOOLEAN         reduce using rule 313 (annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .)
    CHAR            reduce using rule 313 (annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .)
    BYTE            reduce using rule 313 (annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .)
    SHORT           reduce using rule 313 (annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .)
    INT             reduce using rule 313 (annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .)
    LONG            reduce using rule 313 (annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .)
    FLOAT           reduce using rule 313 (annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .)
    DOUBLE          reduce using rule 313 (annotationTypeElementDeclaration -> modifiers annotationTypeElementRest .)


state 447

    (41) modifiers -> modifiers modifier .

    PUBLIC          reduce using rule 41 (modifiers -> modifiers modifier .)
    PROTECTED       reduce using rule 41 (modifiers -> modifiers modifier .)
    PRIVATE         reduce using rule 41 (modifiers -> modifiers modifier .)
    STATIC          reduce using rule 41 (modifiers -> modifiers modifier .)
    ABSTRACT        reduce using rule 41 (modifiers -> modifiers modifier .)
    FINAL           reduce using rule 41 (modifiers -> modifiers modifier .)
    NATIVE          reduce using rule 41 (modifiers -> modifiers modifier .)
    SYNCHRONIZED    reduce using rule 41 (modifiers -> modifiers modifier .)
    TRANSIENT       reduce using rule 41 (modifiers -> modifiers modifier .)
    VOLATILE        reduce using rule 41 (modifiers -> modifiers modifier .)
    STRICTFP        reduce using rule 41 (modifiers -> modifiers modifier .)
    CLASS           reduce using rule 41 (modifiers -> modifiers modifier .)
    INTERFACE       reduce using rule 41 (modifiers -> modifiers modifier .)
    ENUM            reduce using rule 41 (modifiers -> modifiers modifier .)
    AT              reduce using rule 41 (modifiers -> modifiers modifier .)
    Identifier      reduce using rule 41 (modifiers -> modifiers modifier .)
    BOOLEAN         reduce using rule 41 (modifiers -> modifiers modifier .)
    CHAR            reduce using rule 41 (modifiers -> modifiers modifier .)
    BYTE            reduce using rule 41 (modifiers -> modifiers modifier .)
    SHORT           reduce using rule 41 (modifiers -> modifiers modifier .)
    INT             reduce using rule 41 (modifiers -> modifiers modifier .)
    LONG            reduce using rule 41 (modifiers -> modifiers modifier .)
    FLOAT           reduce using rule 41 (modifiers -> modifiers modifier .)
    DOUBLE          reduce using rule 41 (modifiers -> modifiers modifier .)
    VOID            reduce using rule 41 (modifiers -> modifiers modifier .)
    LESS            reduce using rule 41 (modifiers -> modifiers modifier .)


state 448

    (321) annotationTypeElementRest -> annotationTypeDeclaration SEMI_OR_empty .

    BRPAREN         reduce using rule 321 (annotationTypeElementRest -> annotationTypeDeclaration SEMI_OR_empty .)
    PUBLIC          reduce using rule 321 (annotationTypeElementRest -> annotationTypeDeclaration SEMI_OR_empty .)
    PROTECTED       reduce using rule 321 (annotationTypeElementRest -> annotationTypeDeclaration SEMI_OR_empty .)
    PRIVATE         reduce using rule 321 (annotationTypeElementRest -> annotationTypeDeclaration SEMI_OR_empty .)
    STATIC          reduce using rule 321 (annotationTypeElementRest -> annotationTypeDeclaration SEMI_OR_empty .)
    ABSTRACT        reduce using rule 321 (annotationTypeElementRest -> annotationTypeDeclaration SEMI_OR_empty .)
    FINAL           reduce using rule 321 (annotationTypeElementRest -> annotationTypeDeclaration SEMI_OR_empty .)
    NATIVE          reduce using rule 321 (annotationTypeElementRest -> annotationTypeDeclaration SEMI_OR_empty .)
    SYNCHRONIZED    reduce using rule 321 (annotationTypeElementRest -> annotationTypeDeclaration SEMI_OR_empty .)
    TRANSIENT       reduce using rule 321 (annotationTypeElementRest -> annotationTypeDeclaration SEMI_OR_empty .)
    VOLATILE        reduce using rule 321 (annotationTypeElementRest -> annotationTypeDeclaration SEMI_OR_empty .)
    STRICTFP        reduce using rule 321 (annotationTypeElementRest -> annotationTypeDeclaration SEMI_OR_empty .)
    CLASS           reduce using rule 321 (annotationTypeElementRest -> annotationTypeDeclaration SEMI_OR_empty .)
    INTERFACE       reduce using rule 321 (annotationTypeElementRest -> annotationTypeDeclaration SEMI_OR_empty .)
    ENUM            reduce using rule 321 (annotationTypeElementRest -> annotationTypeDeclaration SEMI_OR_empty .)
    AT              reduce using rule 321 (annotationTypeElementRest -> annotationTypeDeclaration SEMI_OR_empty .)
    Identifier      reduce using rule 321 (annotationTypeElementRest -> annotationTypeDeclaration SEMI_OR_empty .)
    BOOLEAN         reduce using rule 321 (annotationTypeElementRest -> annotationTypeDeclaration SEMI_OR_empty .)
    CHAR            reduce using rule 321 (annotationTypeElementRest -> annotationTypeDeclaration SEMI_OR_empty .)
    BYTE            reduce using rule 321 (annotationTypeElementRest -> annotationTypeDeclaration SEMI_OR_empty .)
    SHORT           reduce using rule 321 (annotationTypeElementRest -> annotationTypeDeclaration SEMI_OR_empty .)
    INT             reduce using rule 321 (annotationTypeElementRest -> annotationTypeDeclaration SEMI_OR_empty .)
    LONG            reduce using rule 321 (annotationTypeElementRest -> annotationTypeDeclaration SEMI_OR_empty .)
    FLOAT           reduce using rule 321 (annotationTypeElementRest -> annotationTypeDeclaration SEMI_OR_empty .)
    DOUBLE          reduce using rule 321 (annotationTypeElementRest -> annotationTypeDeclaration SEMI_OR_empty .)


state 449

    (127) interfaceBodyDeclaration -> SEMI .

    BRPAREN         reduce using rule 127 (interfaceBodyDeclaration -> SEMI .)
    SEMI            reduce using rule 127 (interfaceBodyDeclaration -> SEMI .)
    PUBLIC          reduce using rule 127 (interfaceBodyDeclaration -> SEMI .)
    PROTECTED       reduce using rule 127 (interfaceBodyDeclaration -> SEMI .)
    PRIVATE         reduce using rule 127 (interfaceBodyDeclaration -> SEMI .)
    STATIC          reduce using rule 127 (interfaceBodyDeclaration -> SEMI .)
    ABSTRACT        reduce using rule 127 (interfaceBodyDeclaration -> SEMI .)
    FINAL           reduce using rule 127 (interfaceBodyDeclaration -> SEMI .)
    NATIVE          reduce using rule 127 (interfaceBodyDeclaration -> SEMI .)
    SYNCHRONIZED    reduce using rule 127 (interfaceBodyDeclaration -> SEMI .)
    TRANSIENT       reduce using rule 127 (interfaceBodyDeclaration -> SEMI .)
    VOLATILE        reduce using rule 127 (interfaceBodyDeclaration -> SEMI .)
    STRICTFP        reduce using rule 127 (interfaceBodyDeclaration -> SEMI .)
    AT              reduce using rule 127 (interfaceBodyDeclaration -> SEMI .)


state 450

    (106) interfaceBody -> BLPAREN BRPAREN .

    SEMI            reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    PUBLIC          reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    PROTECTED       reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    PRIVATE         reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    ABSTRACT        reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    STATIC          reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    FINAL           reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    STRICTFP        reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    CLASS           reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    ENUM            reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    INTERFACE       reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    AT              reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    $end            reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    BRPAREN         reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    ASSERT          reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    IF              reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    FOR             reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    WHILE           reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    DO              reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    TRY             reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    SWITCH          reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    SYNCHRONIZED    reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    RETURN          reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    THROW           reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    BREAK           reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    CONTINUE        reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    Identifier      reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    BLPAREN         reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    BOOLEAN         reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    CHAR            reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    BYTE            reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    SHORT           reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    INT             reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    LONG            reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    FLOAT           reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    DOUBLE          reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    PLUS            reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    DASH            reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    OP_INC          reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    OP_DEC          reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    TILDE           reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    EXCLAMATION     reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    LPAREN          reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    THIS            reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    SUPER           reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    NEW             reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    VOID            reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    CharacterLiteral reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    StringLiteral   reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    NULL            reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    LONG_NUMBER     reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    LONG_HEX_NUMBER reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    NON_INTEGER_1   reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    NON_INTEGER_2   reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    NON_INTEGER_3   reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    NON_INTEGER_4   reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    TRUE            reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    FALSE           reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    CASE            reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    DEFAULT         reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    NATIVE          reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    TRANSIENT       reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    VOLATILE        reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)
    LESS            reduce using rule 106 (interfaceBody -> BLPAREN BRPAREN .)


state 451

    (105) interfaceBody -> BLPAREN interfaceBodyDeclarations . BRPAREN
    (104) interfaceBodyDeclarations -> interfaceBodyDeclarations . interfaceBodyDeclaration
    (126) interfaceBodyDeclaration -> . modifiers interfaceMemberDecl
    (127) interfaceBodyDeclaration -> . SEMI
    (40) modifiers -> . modifier
    (41) modifiers -> . modifiers modifier
    (190) modifier -> . annotation
    (191) modifier -> . PUBLIC
    (192) modifier -> . PROTECTED
    (193) modifier -> . PRIVATE
    (194) modifier -> . STATIC
    (195) modifier -> . ABSTRACT
    (196) modifier -> . FINAL
    (197) modifier -> . NATIVE
    (198) modifier -> . SYNCHRONIZED
    (199) modifier -> . TRANSIENT
    (200) modifier -> . VOLATILE
    (201) modifier -> . STRICTFP
    (287) annotation -> . AT annotationName annotationBody

    BRPAREN         shift and go to state 558
    SEMI            shift and go to state 449
    PUBLIC          shift and go to state 297
    PROTECTED       shift and go to state 278
    PRIVATE         shift and go to state 284
    STATIC          shift and go to state 279
    ABSTRACT        shift and go to state 276
    FINAL           shift and go to state 281
    NATIVE          shift and go to state 282
    SYNCHRONIZED    shift and go to state 275
    TRANSIENT       shift and go to state 286
    VOLATILE        shift and go to state 295
    STRICTFP        shift and go to state 285
    AT              shift and go to state 133

    modifiers                      shift and go to state 453
    interfaceBodyDeclaration       shift and go to state 559
    modifier                       shift and go to state 296
    annotation                     shift and go to state 291

state 452

    (103) interfaceBodyDeclarations -> interfaceBodyDeclaration .

    BRPAREN         reduce using rule 103 (interfaceBodyDeclarations -> interfaceBodyDeclaration .)
    SEMI            reduce using rule 103 (interfaceBodyDeclarations -> interfaceBodyDeclaration .)
    PUBLIC          reduce using rule 103 (interfaceBodyDeclarations -> interfaceBodyDeclaration .)
    PROTECTED       reduce using rule 103 (interfaceBodyDeclarations -> interfaceBodyDeclaration .)
    PRIVATE         reduce using rule 103 (interfaceBodyDeclarations -> interfaceBodyDeclaration .)
    STATIC          reduce using rule 103 (interfaceBodyDeclarations -> interfaceBodyDeclaration .)
    ABSTRACT        reduce using rule 103 (interfaceBodyDeclarations -> interfaceBodyDeclaration .)
    FINAL           reduce using rule 103 (interfaceBodyDeclarations -> interfaceBodyDeclaration .)
    NATIVE          reduce using rule 103 (interfaceBodyDeclarations -> interfaceBodyDeclaration .)
    SYNCHRONIZED    reduce using rule 103 (interfaceBodyDeclarations -> interfaceBodyDeclaration .)
    TRANSIENT       reduce using rule 103 (interfaceBodyDeclarations -> interfaceBodyDeclaration .)
    VOLATILE        reduce using rule 103 (interfaceBodyDeclarations -> interfaceBodyDeclaration .)
    STRICTFP        reduce using rule 103 (interfaceBodyDeclarations -> interfaceBodyDeclaration .)
    AT              reduce using rule 103 (interfaceBodyDeclarations -> interfaceBodyDeclaration .)


state 453

    (126) interfaceBodyDeclaration -> modifiers . interfaceMemberDecl
    (41) modifiers -> modifiers . modifier
    (128) interfaceMemberDecl -> . interfaceMethodOrFieldDecl
    (129) interfaceMemberDecl -> . interfaceGenericMethodDecl
    (130) interfaceMemberDecl -> . VOID Identifier voidInterfaceMethodDeclaratorRest
    (131) interfaceMemberDecl -> . interfaceDeclaration
    (132) interfaceMemberDecl -> . classDeclaration
    (190) modifier -> . annotation
    (191) modifier -> . PUBLIC
    (192) modifier -> . PROTECTED
    (193) modifier -> . PRIVATE
    (194) modifier -> . STATIC
    (195) modifier -> . ABSTRACT
    (196) modifier -> . FINAL
    (197) modifier -> . NATIVE
    (198) modifier -> . SYNCHRONIZED
    (199) modifier -> . TRANSIENT
    (200) modifier -> . VOLATILE
    (201) modifier -> . STRICTFP
    (133) interfaceMethodOrFieldDecl -> . type Identifier interfaceMethodOrFieldRest
    (156) interfaceGenericMethodDecl -> . typeParameters type Identifier interfaceMethodDeclaratorRest
    (157) interfaceGenericMethodDecl -> . typeParameters VOID Identifier interfaceMethodDeclaratorRest
    (89) interfaceDeclaration -> . normalInterfaceDeclaration
    (90) interfaceDeclaration -> . annotationTypeDeclaration
    (42) classDeclaration -> . normalClassDeclaration
    (43) classDeclaration -> . enumDeclaration
    (287) annotation -> . AT annotationName annotationBody
    (205) type -> . type_body
    (206) type -> . primitiveType arrays
    (207) type -> . primitiveType
    (52) typeParameters -> . LESS typeParameter dotTypeParameters MORE
    (53) typeParameters -> . LESS typeParameter MORE
    (54) typeParameters -> .
    (95) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody
    (308) annotationTypeDeclaration -> . AT INTERFACE Identifier annotationTypeBody
    (48) normalClassDeclaration -> . CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody
    (63) enumDeclaration -> . ENUM Identifier IMPLEMENTS_typeList enumBody
    (208) type_body -> . Identifier classOrInterfaceTypeBody arrays
    (209) type_body -> . Identifier classOrInterfaceTypeBody
    (210) type_body -> . Identifier arrays
    (211) type_body -> . Identifier
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE

  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for Identifier resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    VOID            shift and go to state 560
    PUBLIC          shift and go to state 297
    PROTECTED       shift and go to state 278
    PRIVATE         shift and go to state 284
    STATIC          shift and go to state 279
    ABSTRACT        shift and go to state 276
    FINAL           shift and go to state 281
    NATIVE          shift and go to state 282
    SYNCHRONIZED    shift and go to state 275
    TRANSIENT       shift and go to state 286
    VOLATILE        shift and go to state 295
    STRICTFP        shift and go to state 285
    AT              shift and go to state 330
    LESS            shift and go to state 45
    INTERFACE       shift and go to state 23
    CLASS           shift and go to state 12
    ENUM            shift and go to state 15
    Identifier      shift and go to state 80
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72

  ! VOID            [ reduce using rule 54 (typeParameters -> .) ]
  ! Identifier      [ reduce using rule 54 (typeParameters -> .) ]
  ! BOOLEAN         [ reduce using rule 54 (typeParameters -> .) ]
  ! CHAR            [ reduce using rule 54 (typeParameters -> .) ]
  ! BYTE            [ reduce using rule 54 (typeParameters -> .) ]
  ! SHORT           [ reduce using rule 54 (typeParameters -> .) ]
  ! INT             [ reduce using rule 54 (typeParameters -> .) ]
  ! LONG            [ reduce using rule 54 (typeParameters -> .) ]
  ! FLOAT           [ reduce using rule 54 (typeParameters -> .) ]
  ! DOUBLE          [ reduce using rule 54 (typeParameters -> .) ]

    interfaceMethodOrFieldDecl     shift and go to state 561
    primitiveType                  shift and go to state 74
    typeParameters                 shift and go to state 562
    normalInterfaceDeclaration     shift and go to state 5
    normalClassDeclaration         shift and go to state 7
    interfaceMemberDecl            shift and go to state 563
    interfaceGenericMethodDecl     shift and go to state 565
    type                           shift and go to state 566
    enumDeclaration                shift and go to state 13
    classDeclaration               shift and go to state 567
    annotation                     shift and go to state 291
    type_body                      shift and go to state 77
    annotationTypeDeclaration      shift and go to state 21
    interfaceDeclaration           shift and go to state 564
    modifier                       shift and go to state 447

state 454

    (61) typeBound -> type and_types .
    (60) and_types -> and_types . and_type
    (58) and_type -> . AND type

    MORE            reduce using rule 61 (typeBound -> type and_types .)
    COMMA           reduce using rule 61 (typeBound -> type and_types .)
    AND             shift and go to state 455

    and_type                       shift and go to state 568

state 455

    (58) and_type -> AND . type
    (205) type -> . type_body
    (206) type -> . primitiveType arrays
    (207) type -> . primitiveType
    (208) type_body -> . Identifier classOrInterfaceTypeBody arrays
    (209) type_body -> . Identifier classOrInterfaceTypeBody
    (210) type_body -> . Identifier arrays
    (211) type_body -> . Identifier
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE

    Identifier      shift and go to state 80
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72

    type                           shift and go to state 569
    primitiveType                  shift and go to state 74
    type_body                      shift and go to state 77

state 456

    (59) and_types -> and_type .

    AND             reduce using rule 59 (and_types -> and_type .)
    MORE            reduce using rule 59 (and_types -> and_type .)
    COMMA           reduce using rule 59 (and_types -> and_type .)


state 457

    (101) classBody -> BLPAREN classBodyDeclarations . BRPAREN
    (86) classBodyDeclarations -> classBodyDeclarations . classBodyDeclaration
    (107) classBodyDeclaration -> . SEMI
    (108) classBodyDeclaration -> . STATIC block
    (109) classBodyDeclaration -> . block
    (110) classBodyDeclaration -> . modifiers memberDecl
    (111) classBodyDeclaration -> . memberDecl
    (329) block -> . BLPAREN blockStatements BRPAREN
    (330) block -> . BLPAREN BRPAREN
    (40) modifiers -> . modifier
    (41) modifiers -> . modifiers modifier
    (112) memberDecl -> . genericMethodOrConstructorDecl
    (113) memberDecl -> . memberDeclaration
    (114) memberDecl -> . VOID Identifier voidMethodDeclaratorRest
    (115) memberDecl -> . Identifier constructorDeclaratorRest
    (116) memberDecl -> . interfaceDeclaration
    (117) memberDecl -> . classDeclaration
    (190) modifier -> . annotation
    (191) modifier -> . PUBLIC
    (192) modifier -> . PROTECTED
    (193) modifier -> . PRIVATE
    (194) modifier -> . STATIC
    (195) modifier -> . ABSTRACT
    (196) modifier -> . FINAL
    (197) modifier -> . NATIVE
    (198) modifier -> . SYNCHRONIZED
    (199) modifier -> . TRANSIENT
    (200) modifier -> . VOLATILE
    (201) modifier -> . STRICTFP
    (120) genericMethodOrConstructorDecl -> . typeParameters genericMethodOrConstructorRest
    (118) memberDeclaration -> . type methodDeclaration
    (119) memberDeclaration -> . type fieldDeclaration
    (89) interfaceDeclaration -> . normalInterfaceDeclaration
    (90) interfaceDeclaration -> . annotationTypeDeclaration
    (42) classDeclaration -> . normalClassDeclaration
    (43) classDeclaration -> . enumDeclaration
    (287) annotation -> . AT annotationName annotationBody
    (52) typeParameters -> . LESS typeParameter dotTypeParameters MORE
    (53) typeParameters -> . LESS typeParameter MORE
    (54) typeParameters -> .
    (205) type -> . type_body
    (206) type -> . primitiveType arrays
    (207) type -> . primitiveType
    (95) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody
    (308) annotationTypeDeclaration -> . AT INTERFACE Identifier annotationTypeBody
    (48) normalClassDeclaration -> . CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody
    (63) enumDeclaration -> . ENUM Identifier IMPLEMENTS_typeList enumBody
    (208) type_body -> . Identifier classOrInterfaceTypeBody arrays
    (209) type_body -> . Identifier classOrInterfaceTypeBody
    (210) type_body -> . Identifier arrays
    (211) type_body -> . Identifier
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE

  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for Identifier resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    BRPAREN         shift and go to state 570
    SEMI            shift and go to state 325
    STATIC          shift and go to state 323
    BLPAREN         shift and go to state 335
    VOID            shift and go to state 322
    Identifier      shift and go to state 331
    PUBLIC          shift and go to state 297
    PROTECTED       shift and go to state 278
    PRIVATE         shift and go to state 284
    ABSTRACT        shift and go to state 276
    FINAL           shift and go to state 281
    NATIVE          shift and go to state 282
    SYNCHRONIZED    shift and go to state 275
    TRANSIENT       shift and go to state 286
    VOLATILE        shift and go to state 295
    STRICTFP        shift and go to state 285
    AT              shift and go to state 330
    LESS            shift and go to state 45
    INTERFACE       shift and go to state 23
    CLASS           shift and go to state 12
    ENUM            shift and go to state 15
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72

  ! VOID            [ reduce using rule 54 (typeParameters -> .) ]
  ! Identifier      [ reduce using rule 54 (typeParameters -> .) ]
  ! BOOLEAN         [ reduce using rule 54 (typeParameters -> .) ]
  ! CHAR            [ reduce using rule 54 (typeParameters -> .) ]
  ! BYTE            [ reduce using rule 54 (typeParameters -> .) ]
  ! SHORT           [ reduce using rule 54 (typeParameters -> .) ]
  ! INT             [ reduce using rule 54 (typeParameters -> .) ]
  ! LONG            [ reduce using rule 54 (typeParameters -> .) ]
  ! FLOAT           [ reduce using rule 54 (typeParameters -> .) ]
  ! DOUBLE          [ reduce using rule 54 (typeParameters -> .) ]

    memberDecl                     shift and go to state 334
    primitiveType                  shift and go to state 74
    typeParameters                 shift and go to state 324
    normalInterfaceDeclaration     shift and go to state 5
    memberDeclaration              shift and go to state 326
    type                           shift and go to state 327
    enumDeclaration                shift and go to state 13
    genericMethodOrConstructorDecl shift and go to state 328
    classDeclaration               shift and go to state 329
    annotation                     shift and go to state 291
    modifiers                      shift and go to state 332
    normalClassDeclaration         shift and go to state 7
    type_body                      shift and go to state 77
    annotationTypeDeclaration      shift and go to state 21
    interfaceDeclaration           shift and go to state 336
    classBodyDeclaration           shift and go to state 484
    modifier                       shift and go to state 296
    block                          shift and go to state 338

state 458

    (102) classBody -> BLPAREN BRPAREN .

    OP_INC          reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    OP_DEC          reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    DOT             reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    FLPAREN         reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    MULT            reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    SLASH           reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    PERCENT         reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    PLUS            reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    DASH            reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    OP_SHR          reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    OP_SHRR         reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    OP_SHL          reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    OP_LE           reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    OP_GE           reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    LESS            reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    MORE            reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    INSTANCEOF      reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    OP_EQ           reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    OP_NE           reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    AND             reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    CARET           reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    VERTICAL        reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    OP_LAND         reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    OP_LOR          reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    QUES            reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    RPAREN          reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    COMMA           reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    BRPAREN         reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    EQUALS          reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    ASS_ADD         reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    ASS_SUB         reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    ASS_MUL         reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    ASS_DIV         reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    ASS_AND         reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    ASS_OR          reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    ASS_XOR         reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    ASS_MOD         reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    ASS_SHL         reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    ASS_SHRR        reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    ASS_SHR         reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    FRPAREN         reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    COLON           reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    SEMI            reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    PUBLIC          reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    PROTECTED       reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    PRIVATE         reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    ABSTRACT        reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    STATIC          reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    FINAL           reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    STRICTFP        reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    CLASS           reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    ENUM            reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    INTERFACE       reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    AT              reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    $end            reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    ASSERT          reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    IF              reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    FOR             reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    WHILE           reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    DO              reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    TRY             reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    SWITCH          reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    SYNCHRONIZED    reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    RETURN          reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    THROW           reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    BREAK           reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    CONTINUE        reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    Identifier      reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    BLPAREN         reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    BOOLEAN         reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    CHAR            reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    BYTE            reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    SHORT           reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    INT             reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    LONG            reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    FLOAT           reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    DOUBLE          reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    TILDE           reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    EXCLAMATION     reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    LPAREN          reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    THIS            reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    SUPER           reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    NEW             reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    VOID            reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    CharacterLiteral reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    StringLiteral   reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    NULL            reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    LONG_NUMBER     reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    LONG_HEX_NUMBER reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    NON_INTEGER_1   reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    NON_INTEGER_2   reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    NON_INTEGER_3   reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    NON_INTEGER_4   reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    TRUE            reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    FALSE           reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    CASE            reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    DEFAULT         reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    NATIVE          reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    TRANSIENT       reduce using rule 102 (classBody -> BLPAREN BRPAREN .)
    VOLATILE        reduce using rule 102 (classBody -> BLPAREN BRPAREN .)


state 459

    (234) typeArguments -> LESS typeArgument COMMA_typeArguments . MORE
    (233) COMMA_typeArguments -> COMMA_typeArguments . COMMA_typeArgument
    (231) COMMA_typeArgument -> . COMMA typeArgument

    MORE            shift and go to state 572
    COMMA           shift and go to state 461

    COMMA_typeArgument             shift and go to state 571

state 460

    (232) COMMA_typeArguments -> COMMA_typeArgument .

    MORE            reduce using rule 232 (COMMA_typeArguments -> COMMA_typeArgument .)
    COMMA           reduce using rule 232 (COMMA_typeArguments -> COMMA_typeArgument .)


state 461

    (231) COMMA_typeArgument -> COMMA . typeArgument
    (239) typeArgument -> . type
    (240) typeArgument -> . QUES typeArgumentStatment
    (205) type -> . type_body
    (206) type -> . primitiveType arrays
    (207) type -> . primitiveType
    (208) type_body -> . Identifier classOrInterfaceTypeBody arrays
    (209) type_body -> . Identifier classOrInterfaceTypeBody
    (210) type_body -> . Identifier arrays
    (211) type_body -> . Identifier
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE

    QUES            shift and go to state 312
    Identifier      shift and go to state 80
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72

    primitiveType                  shift and go to state 74
    typeArgument                   shift and go to state 573
    type_body                      shift and go to state 77
    type                           shift and go to state 313

state 462

    (235) typeArguments -> LESS typeArgument MORE .

    DOT             reduce using rule 235 (typeArguments -> LESS typeArgument MORE .)
    FLPAREN         reduce using rule 235 (typeArguments -> LESS typeArgument MORE .)
    COMMA           reduce using rule 235 (typeArguments -> LESS typeArgument MORE .)
    BLPAREN         reduce using rule 235 (typeArguments -> LESS typeArgument MORE .)
    IMPLEMENTS      reduce using rule 235 (typeArguments -> LESS typeArgument MORE .)
    Identifier      reduce using rule 235 (typeArguments -> LESS typeArgument MORE .)
    AND             reduce using rule 235 (typeArguments -> LESS typeArgument MORE .)
    MORE            reduce using rule 235 (typeArguments -> LESS typeArgument MORE .)
    OP_EQ           reduce using rule 235 (typeArguments -> LESS typeArgument MORE .)
    OP_NE           reduce using rule 235 (typeArguments -> LESS typeArgument MORE .)
    CARET           reduce using rule 235 (typeArguments -> LESS typeArgument MORE .)
    VERTICAL        reduce using rule 235 (typeArguments -> LESS typeArgument MORE .)
    OP_LAND         reduce using rule 235 (typeArguments -> LESS typeArgument MORE .)
    OP_LOR          reduce using rule 235 (typeArguments -> LESS typeArgument MORE .)
    QUES            reduce using rule 235 (typeArguments -> LESS typeArgument MORE .)
    RPAREN          reduce using rule 235 (typeArguments -> LESS typeArgument MORE .)
    BRPAREN         reduce using rule 235 (typeArguments -> LESS typeArgument MORE .)
    EQUALS          reduce using rule 235 (typeArguments -> LESS typeArgument MORE .)
    ASS_ADD         reduce using rule 235 (typeArguments -> LESS typeArgument MORE .)
    ASS_SUB         reduce using rule 235 (typeArguments -> LESS typeArgument MORE .)
    ASS_MUL         reduce using rule 235 (typeArguments -> LESS typeArgument MORE .)
    ASS_DIV         reduce using rule 235 (typeArguments -> LESS typeArgument MORE .)
    ASS_AND         reduce using rule 235 (typeArguments -> LESS typeArgument MORE .)
    ASS_OR          reduce using rule 235 (typeArguments -> LESS typeArgument MORE .)
    ASS_XOR         reduce using rule 235 (typeArguments -> LESS typeArgument MORE .)
    ASS_MOD         reduce using rule 235 (typeArguments -> LESS typeArgument MORE .)
    ASS_SHL         reduce using rule 235 (typeArguments -> LESS typeArgument MORE .)
    ASS_SHRR        reduce using rule 235 (typeArguments -> LESS typeArgument MORE .)
    ASS_SHR         reduce using rule 235 (typeArguments -> LESS typeArgument MORE .)
    FRPAREN         reduce using rule 235 (typeArguments -> LESS typeArgument MORE .)
    COLON           reduce using rule 235 (typeArguments -> LESS typeArgument MORE .)
    SEMI            reduce using rule 235 (typeArguments -> LESS typeArgument MORE .)
    OP_ARRAY        reduce using rule 235 (typeArguments -> LESS typeArgument MORE .)
    LPAREN          reduce using rule 235 (typeArguments -> LESS typeArgument MORE .)


state 463

    (240) typeArgument -> QUES typeArgumentStatment .

    MORE            reduce using rule 240 (typeArgument -> QUES typeArgumentStatment .)
    COMMA           reduce using rule 240 (typeArgument -> QUES typeArgumentStatment .)


state 464

    (237) typeArgumentStatment -> SUPER . type
    (205) type -> . type_body
    (206) type -> . primitiveType arrays
    (207) type -> . primitiveType
    (208) type_body -> . Identifier classOrInterfaceTypeBody arrays
    (209) type_body -> . Identifier classOrInterfaceTypeBody
    (210) type_body -> . Identifier arrays
    (211) type_body -> . Identifier
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE

    Identifier      shift and go to state 80
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72

    type                           shift and go to state 574
    primitiveType                  shift and go to state 74
    type_body                      shift and go to state 77

state 465

    (236) typeArgumentStatment -> EXTENDS . type
    (205) type -> . type_body
    (206) type -> . primitiveType arrays
    (207) type -> . primitiveType
    (208) type_body -> . Identifier classOrInterfaceTypeBody arrays
    (209) type_body -> . Identifier classOrInterfaceTypeBody
    (210) type_body -> . Identifier arrays
    (211) type_body -> . Identifier
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE

    Identifier      shift and go to state 80
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72

    type                           shift and go to state 575
    primitiveType                  shift and go to state 74
    type_body                      shift and go to state 77

state 466

    (238) typeArgumentStatment -> empty .

    MORE            reduce using rule 238 (typeArgumentStatment -> empty .)
    COMMA           reduce using rule 238 (typeArgumentStatment -> empty .)


state 467

    (215) classOrInterfaceTypeStatement -> DOT Identifier typeArguments .

    DOT             reduce using rule 215 (classOrInterfaceTypeStatement -> DOT Identifier typeArguments .)
    FLPAREN         reduce using rule 215 (classOrInterfaceTypeStatement -> DOT Identifier typeArguments .)
    COMMA           reduce using rule 215 (classOrInterfaceTypeStatement -> DOT Identifier typeArguments .)
    BLPAREN         reduce using rule 215 (classOrInterfaceTypeStatement -> DOT Identifier typeArguments .)
    IMPLEMENTS      reduce using rule 215 (classOrInterfaceTypeStatement -> DOT Identifier typeArguments .)
    Identifier      reduce using rule 215 (classOrInterfaceTypeStatement -> DOT Identifier typeArguments .)
    AND             reduce using rule 215 (classOrInterfaceTypeStatement -> DOT Identifier typeArguments .)
    MORE            reduce using rule 215 (classOrInterfaceTypeStatement -> DOT Identifier typeArguments .)
    OP_EQ           reduce using rule 215 (classOrInterfaceTypeStatement -> DOT Identifier typeArguments .)
    OP_NE           reduce using rule 215 (classOrInterfaceTypeStatement -> DOT Identifier typeArguments .)
    CARET           reduce using rule 215 (classOrInterfaceTypeStatement -> DOT Identifier typeArguments .)
    VERTICAL        reduce using rule 215 (classOrInterfaceTypeStatement -> DOT Identifier typeArguments .)
    OP_LAND         reduce using rule 215 (classOrInterfaceTypeStatement -> DOT Identifier typeArguments .)
    OP_LOR          reduce using rule 215 (classOrInterfaceTypeStatement -> DOT Identifier typeArguments .)
    QUES            reduce using rule 215 (classOrInterfaceTypeStatement -> DOT Identifier typeArguments .)
    RPAREN          reduce using rule 215 (classOrInterfaceTypeStatement -> DOT Identifier typeArguments .)
    BRPAREN         reduce using rule 215 (classOrInterfaceTypeStatement -> DOT Identifier typeArguments .)
    EQUALS          reduce using rule 215 (classOrInterfaceTypeStatement -> DOT Identifier typeArguments .)
    ASS_ADD         reduce using rule 215 (classOrInterfaceTypeStatement -> DOT Identifier typeArguments .)
    ASS_SUB         reduce using rule 215 (classOrInterfaceTypeStatement -> DOT Identifier typeArguments .)
    ASS_MUL         reduce using rule 215 (classOrInterfaceTypeStatement -> DOT Identifier typeArguments .)
    ASS_DIV         reduce using rule 215 (classOrInterfaceTypeStatement -> DOT Identifier typeArguments .)
    ASS_AND         reduce using rule 215 (classOrInterfaceTypeStatement -> DOT Identifier typeArguments .)
    ASS_OR          reduce using rule 215 (classOrInterfaceTypeStatement -> DOT Identifier typeArguments .)
    ASS_XOR         reduce using rule 215 (classOrInterfaceTypeStatement -> DOT Identifier typeArguments .)
    ASS_MOD         reduce using rule 215 (classOrInterfaceTypeStatement -> DOT Identifier typeArguments .)
    ASS_SHL         reduce using rule 215 (classOrInterfaceTypeStatement -> DOT Identifier typeArguments .)
    ASS_SHRR        reduce using rule 215 (classOrInterfaceTypeStatement -> DOT Identifier typeArguments .)
    ASS_SHR         reduce using rule 215 (classOrInterfaceTypeStatement -> DOT Identifier typeArguments .)
    FRPAREN         reduce using rule 215 (classOrInterfaceTypeStatement -> DOT Identifier typeArguments .)
    COLON           reduce using rule 215 (classOrInterfaceTypeStatement -> DOT Identifier typeArguments .)
    SEMI            reduce using rule 215 (classOrInterfaceTypeStatement -> DOT Identifier typeArguments .)
    OP_ARRAY        reduce using rule 215 (classOrInterfaceTypeStatement -> DOT Identifier typeArguments .)
    LPAREN          reduce using rule 215 (classOrInterfaceTypeStatement -> DOT Identifier typeArguments .)


state 468

    (73) COMMA_enumConstant -> COMMA enumConstant .

    COMMA           reduce using rule 73 (COMMA_enumConstant -> COMMA enumConstant .)
    SEMI            reduce using rule 73 (COMMA_enumConstant -> COMMA enumConstant .)
    BRPAREN         reduce using rule 73 (COMMA_enumConstant -> COMMA enumConstant .)


state 469

    (75) COMMA_enumConstants -> COMMA_enumConstant COMMA_enumConstants .

    COMMA           reduce using rule 75 (COMMA_enumConstants -> COMMA_enumConstant COMMA_enumConstants .)
    SEMI            reduce using rule 75 (COMMA_enumConstants -> COMMA_enumConstant COMMA_enumConstants .)
    BRPAREN         reduce using rule 75 (COMMA_enumConstants -> COMMA_enumConstant COMMA_enumConstants .)


state 470

    (114) memberDecl -> VOID Identifier . voidMethodDeclaratorRest
    (148) voidMethodDeclaratorRest -> . formalParameters throwList methodBody
    (149) voidMethodDeclaratorRest -> . formalParameters throwList SEMI
    (150) voidMethodDeclaratorRest -> . formalParameters methodBody
    (151) voidMethodDeclaratorRest -> . formalParameters SEMI
    (246) formalParameters -> . LPAREN formalParameterDecls RPAREN

    LPAREN          shift and go to state 482

    formalParameters               shift and go to state 576
    voidMethodDeclaratorRest       shift and go to state 577

state 471

    (108) classBodyDeclaration -> STATIC block .

    BRPAREN         reduce using rule 108 (classBodyDeclaration -> STATIC block .)
    SEMI            reduce using rule 108 (classBodyDeclaration -> STATIC block .)
    STATIC          reduce using rule 108 (classBodyDeclaration -> STATIC block .)
    BLPAREN         reduce using rule 108 (classBodyDeclaration -> STATIC block .)
    VOID            reduce using rule 108 (classBodyDeclaration -> STATIC block .)
    Identifier      reduce using rule 108 (classBodyDeclaration -> STATIC block .)
    PUBLIC          reduce using rule 108 (classBodyDeclaration -> STATIC block .)
    PROTECTED       reduce using rule 108 (classBodyDeclaration -> STATIC block .)
    PRIVATE         reduce using rule 108 (classBodyDeclaration -> STATIC block .)
    ABSTRACT        reduce using rule 108 (classBodyDeclaration -> STATIC block .)
    FINAL           reduce using rule 108 (classBodyDeclaration -> STATIC block .)
    NATIVE          reduce using rule 108 (classBodyDeclaration -> STATIC block .)
    SYNCHRONIZED    reduce using rule 108 (classBodyDeclaration -> STATIC block .)
    TRANSIENT       reduce using rule 108 (classBodyDeclaration -> STATIC block .)
    VOLATILE        reduce using rule 108 (classBodyDeclaration -> STATIC block .)
    STRICTFP        reduce using rule 108 (classBodyDeclaration -> STATIC block .)
    AT              reduce using rule 108 (classBodyDeclaration -> STATIC block .)
    LESS            reduce using rule 108 (classBodyDeclaration -> STATIC block .)
    INTERFACE       reduce using rule 108 (classBodyDeclaration -> STATIC block .)
    CLASS           reduce using rule 108 (classBodyDeclaration -> STATIC block .)
    ENUM            reduce using rule 108 (classBodyDeclaration -> STATIC block .)
    BOOLEAN         reduce using rule 108 (classBodyDeclaration -> STATIC block .)
    CHAR            reduce using rule 108 (classBodyDeclaration -> STATIC block .)
    BYTE            reduce using rule 108 (classBodyDeclaration -> STATIC block .)
    SHORT           reduce using rule 108 (classBodyDeclaration -> STATIC block .)
    INT             reduce using rule 108 (classBodyDeclaration -> STATIC block .)
    LONG            reduce using rule 108 (classBodyDeclaration -> STATIC block .)
    FLOAT           reduce using rule 108 (classBodyDeclaration -> STATIC block .)
    DOUBLE          reduce using rule 108 (classBodyDeclaration -> STATIC block .)


state 472

    (122) genericMethodOrConstructorRest -> VOID . Identifier methodDeclaratorRest

    Identifier      shift and go to state 578


state 473

    (120) genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .

    BRPAREN         reduce using rule 120 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    SEMI            reduce using rule 120 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    STATIC          reduce using rule 120 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    BLPAREN         reduce using rule 120 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    VOID            reduce using rule 120 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    Identifier      reduce using rule 120 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    PUBLIC          reduce using rule 120 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    PROTECTED       reduce using rule 120 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    PRIVATE         reduce using rule 120 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    ABSTRACT        reduce using rule 120 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    FINAL           reduce using rule 120 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    NATIVE          reduce using rule 120 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    SYNCHRONIZED    reduce using rule 120 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    TRANSIENT       reduce using rule 120 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    VOLATILE        reduce using rule 120 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    STRICTFP        reduce using rule 120 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    AT              reduce using rule 120 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    LESS            reduce using rule 120 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    INTERFACE       reduce using rule 120 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    CLASS           reduce using rule 120 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    ENUM            reduce using rule 120 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    BOOLEAN         reduce using rule 120 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    CHAR            reduce using rule 120 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    BYTE            reduce using rule 120 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    SHORT           reduce using rule 120 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    INT             reduce using rule 120 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    LONG            reduce using rule 120 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    FLOAT           reduce using rule 120 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)
    DOUBLE          reduce using rule 120 (genericMethodOrConstructorDecl -> typeParameters genericMethodOrConstructorRest .)


state 474

    (123) genericMethodOrConstructorRest -> Identifier . constructorDeclaratorRest
    (208) type_body -> Identifier . classOrInterfaceTypeBody arrays
    (209) type_body -> Identifier . classOrInterfaceTypeBody
    (210) type_body -> Identifier . arrays
    (211) type_body -> Identifier .
    (160) constructorDeclaratorRest -> . formalParameters throwList constructorBody
    (161) constructorDeclaratorRest -> . formalParameters constructorBody
    (212) classOrInterfaceTypeBody -> . typeArguments classOrInterfaceTypeStatements
    (213) classOrInterfaceTypeBody -> . typeArguments
    (214) classOrInterfaceTypeBody -> . classOrInterfaceTypeStatements
    (138) arrays -> . arrays array
    (139) arrays -> . array
    (246) formalParameters -> . LPAREN formalParameterDecls RPAREN
    (234) typeArguments -> . LESS typeArgument COMMA_typeArguments MORE
    (235) typeArguments -> . LESS typeArgument MORE
    (217) classOrInterfaceTypeStatements -> . classOrInterfaceTypeStatement
    (218) classOrInterfaceTypeStatements -> . classOrInterfaceTypeStatements classOrInterfaceTypeStatement
    (137) array -> . FLPAREN FRPAREN
    (215) classOrInterfaceTypeStatement -> . DOT Identifier typeArguments
    (216) classOrInterfaceTypeStatement -> . DOT Identifier

    Identifier      reduce using rule 211 (type_body -> Identifier .)
    LPAREN          shift and go to state 482
    LESS            shift and go to state 156
    FLPAREN         shift and go to state 153
    DOT             shift and go to state 161

    classOrInterfaceTypeBody       shift and go to state 155
    arrays                         shift and go to state 157
    constructorDeclaratorRest      shift and go to state 579
    formalParameters               shift and go to state 481
    typeArguments                  shift and go to state 158
    classOrInterfaceTypeStatements shift and go to state 159
    array                          shift and go to state 154
    classOrInterfaceTypeStatement  shift and go to state 160

state 475

    (121) genericMethodOrConstructorRest -> type . Identifier methodDeclaratorRest

    Identifier      shift and go to state 580


state 476

    (125) fieldDeclaration -> variableDeclarators . SEMI

    SEMI            shift and go to state 581


state 477

    (119) memberDeclaration -> type fieldDeclaration .

    SEMI            reduce using rule 119 (memberDeclaration -> type fieldDeclaration .)
    STATIC          reduce using rule 119 (memberDeclaration -> type fieldDeclaration .)
    BLPAREN         reduce using rule 119 (memberDeclaration -> type fieldDeclaration .)
    VOID            reduce using rule 119 (memberDeclaration -> type fieldDeclaration .)
    Identifier      reduce using rule 119 (memberDeclaration -> type fieldDeclaration .)
    PUBLIC          reduce using rule 119 (memberDeclaration -> type fieldDeclaration .)
    PROTECTED       reduce using rule 119 (memberDeclaration -> type fieldDeclaration .)
    PRIVATE         reduce using rule 119 (memberDeclaration -> type fieldDeclaration .)
    ABSTRACT        reduce using rule 119 (memberDeclaration -> type fieldDeclaration .)
    FINAL           reduce using rule 119 (memberDeclaration -> type fieldDeclaration .)
    NATIVE          reduce using rule 119 (memberDeclaration -> type fieldDeclaration .)
    SYNCHRONIZED    reduce using rule 119 (memberDeclaration -> type fieldDeclaration .)
    TRANSIENT       reduce using rule 119 (memberDeclaration -> type fieldDeclaration .)
    VOLATILE        reduce using rule 119 (memberDeclaration -> type fieldDeclaration .)
    STRICTFP        reduce using rule 119 (memberDeclaration -> type fieldDeclaration .)
    AT              reduce using rule 119 (memberDeclaration -> type fieldDeclaration .)
    LESS            reduce using rule 119 (memberDeclaration -> type fieldDeclaration .)
    INTERFACE       reduce using rule 119 (memberDeclaration -> type fieldDeclaration .)
    CLASS           reduce using rule 119 (memberDeclaration -> type fieldDeclaration .)
    ENUM            reduce using rule 119 (memberDeclaration -> type fieldDeclaration .)
    BOOLEAN         reduce using rule 119 (memberDeclaration -> type fieldDeclaration .)
    CHAR            reduce using rule 119 (memberDeclaration -> type fieldDeclaration .)
    BYTE            reduce using rule 119 (memberDeclaration -> type fieldDeclaration .)
    SHORT           reduce using rule 119 (memberDeclaration -> type fieldDeclaration .)
    INT             reduce using rule 119 (memberDeclaration -> type fieldDeclaration .)
    LONG            reduce using rule 119 (memberDeclaration -> type fieldDeclaration .)
    FLOAT           reduce using rule 119 (memberDeclaration -> type fieldDeclaration .)
    DOUBLE          reduce using rule 119 (memberDeclaration -> type fieldDeclaration .)
    BRPAREN         reduce using rule 119 (memberDeclaration -> type fieldDeclaration .)


state 478

    (124) methodDeclaration -> Identifier . methodDeclaratorRest
    (178) variableDeclaratorId -> Identifier . arrays
    (179) variableDeclaratorId -> Identifier .
    (140) methodDeclaratorRest -> . formalParameters arrays throwList methodBody
    (141) methodDeclaratorRest -> . formalParameters arrays throwList SEMI
    (142) methodDeclaratorRest -> . formalParameters throwList SEMI
    (143) methodDeclaratorRest -> . formalParameters throwList methodBody
    (144) methodDeclaratorRest -> . formalParameters arrays methodBody
    (145) methodDeclaratorRest -> . formalParameters arrays SEMI
    (146) methodDeclaratorRest -> . formalParameters methodBody
    (147) methodDeclaratorRest -> . formalParameters SEMI
    (138) arrays -> . arrays array
    (139) arrays -> . array
    (246) formalParameters -> . LPAREN formalParameterDecls RPAREN
    (137) array -> . FLPAREN FRPAREN

    EQUALS          reduce using rule 179 (variableDeclaratorId -> Identifier .)
    COMMA           reduce using rule 179 (variableDeclaratorId -> Identifier .)
    SEMI            reduce using rule 179 (variableDeclaratorId -> Identifier .)
    LPAREN          shift and go to state 482
    FLPAREN         shift and go to state 153

    arrays                         shift and go to state 553
    formalParameters               shift and go to state 582
    methodDeclaratorRest           shift and go to state 583
    array                          shift and go to state 154

state 479

    (118) memberDeclaration -> type methodDeclaration .

    SEMI            reduce using rule 118 (memberDeclaration -> type methodDeclaration .)
    STATIC          reduce using rule 118 (memberDeclaration -> type methodDeclaration .)
    BLPAREN         reduce using rule 118 (memberDeclaration -> type methodDeclaration .)
    VOID            reduce using rule 118 (memberDeclaration -> type methodDeclaration .)
    Identifier      reduce using rule 118 (memberDeclaration -> type methodDeclaration .)
    PUBLIC          reduce using rule 118 (memberDeclaration -> type methodDeclaration .)
    PROTECTED       reduce using rule 118 (memberDeclaration -> type methodDeclaration .)
    PRIVATE         reduce using rule 118 (memberDeclaration -> type methodDeclaration .)
    ABSTRACT        reduce using rule 118 (memberDeclaration -> type methodDeclaration .)
    FINAL           reduce using rule 118 (memberDeclaration -> type methodDeclaration .)
    NATIVE          reduce using rule 118 (memberDeclaration -> type methodDeclaration .)
    SYNCHRONIZED    reduce using rule 118 (memberDeclaration -> type methodDeclaration .)
    TRANSIENT       reduce using rule 118 (memberDeclaration -> type methodDeclaration .)
    VOLATILE        reduce using rule 118 (memberDeclaration -> type methodDeclaration .)
    STRICTFP        reduce using rule 118 (memberDeclaration -> type methodDeclaration .)
    AT              reduce using rule 118 (memberDeclaration -> type methodDeclaration .)
    LESS            reduce using rule 118 (memberDeclaration -> type methodDeclaration .)
    INTERFACE       reduce using rule 118 (memberDeclaration -> type methodDeclaration .)
    CLASS           reduce using rule 118 (memberDeclaration -> type methodDeclaration .)
    ENUM            reduce using rule 118 (memberDeclaration -> type methodDeclaration .)
    BOOLEAN         reduce using rule 118 (memberDeclaration -> type methodDeclaration .)
    CHAR            reduce using rule 118 (memberDeclaration -> type methodDeclaration .)
    BYTE            reduce using rule 118 (memberDeclaration -> type methodDeclaration .)
    SHORT           reduce using rule 118 (memberDeclaration -> type methodDeclaration .)
    INT             reduce using rule 118 (memberDeclaration -> type methodDeclaration .)
    LONG            reduce using rule 118 (memberDeclaration -> type methodDeclaration .)
    FLOAT           reduce using rule 118 (memberDeclaration -> type methodDeclaration .)
    DOUBLE          reduce using rule 118 (memberDeclaration -> type methodDeclaration .)
    BRPAREN         reduce using rule 118 (memberDeclaration -> type methodDeclaration .)


state 480

    (115) memberDecl -> Identifier constructorDeclaratorRest .

    SEMI            reduce using rule 115 (memberDecl -> Identifier constructorDeclaratorRest .)
    STATIC          reduce using rule 115 (memberDecl -> Identifier constructorDeclaratorRest .)
    BLPAREN         reduce using rule 115 (memberDecl -> Identifier constructorDeclaratorRest .)
    VOID            reduce using rule 115 (memberDecl -> Identifier constructorDeclaratorRest .)
    Identifier      reduce using rule 115 (memberDecl -> Identifier constructorDeclaratorRest .)
    PUBLIC          reduce using rule 115 (memberDecl -> Identifier constructorDeclaratorRest .)
    PROTECTED       reduce using rule 115 (memberDecl -> Identifier constructorDeclaratorRest .)
    PRIVATE         reduce using rule 115 (memberDecl -> Identifier constructorDeclaratorRest .)
    ABSTRACT        reduce using rule 115 (memberDecl -> Identifier constructorDeclaratorRest .)
    FINAL           reduce using rule 115 (memberDecl -> Identifier constructorDeclaratorRest .)
    NATIVE          reduce using rule 115 (memberDecl -> Identifier constructorDeclaratorRest .)
    SYNCHRONIZED    reduce using rule 115 (memberDecl -> Identifier constructorDeclaratorRest .)
    TRANSIENT       reduce using rule 115 (memberDecl -> Identifier constructorDeclaratorRest .)
    VOLATILE        reduce using rule 115 (memberDecl -> Identifier constructorDeclaratorRest .)
    STRICTFP        reduce using rule 115 (memberDecl -> Identifier constructorDeclaratorRest .)
    AT              reduce using rule 115 (memberDecl -> Identifier constructorDeclaratorRest .)
    LESS            reduce using rule 115 (memberDecl -> Identifier constructorDeclaratorRest .)
    INTERFACE       reduce using rule 115 (memberDecl -> Identifier constructorDeclaratorRest .)
    CLASS           reduce using rule 115 (memberDecl -> Identifier constructorDeclaratorRest .)
    ENUM            reduce using rule 115 (memberDecl -> Identifier constructorDeclaratorRest .)
    BOOLEAN         reduce using rule 115 (memberDecl -> Identifier constructorDeclaratorRest .)
    CHAR            reduce using rule 115 (memberDecl -> Identifier constructorDeclaratorRest .)
    BYTE            reduce using rule 115 (memberDecl -> Identifier constructorDeclaratorRest .)
    SHORT           reduce using rule 115 (memberDecl -> Identifier constructorDeclaratorRest .)
    INT             reduce using rule 115 (memberDecl -> Identifier constructorDeclaratorRest .)
    LONG            reduce using rule 115 (memberDecl -> Identifier constructorDeclaratorRest .)
    FLOAT           reduce using rule 115 (memberDecl -> Identifier constructorDeclaratorRest .)
    DOUBLE          reduce using rule 115 (memberDecl -> Identifier constructorDeclaratorRest .)
    BRPAREN         reduce using rule 115 (memberDecl -> Identifier constructorDeclaratorRest .)


state 481

    (160) constructorDeclaratorRest -> formalParameters . throwList constructorBody
    (161) constructorDeclaratorRest -> formalParameters . constructorBody
    (136) throwList -> . THROWS qualifiedNameList
    (257) constructorBody -> . BLPAREN explicitConstructorInvocation blockStatements BRPAREN
    (258) constructorBody -> . BLPAREN explicitConstructorInvocation BRPAREN
    (259) constructorBody -> . BLPAREN blockStatements BRPAREN
    (260) constructorBody -> . BLPAREN BRPAREN

    THROWS          shift and go to state 586
    BLPAREN         shift and go to state 585

    throwList                      shift and go to state 584
    constructorBody                shift and go to state 587

state 482

    (246) formalParameters -> LPAREN . formalParameterDecls RPAREN
    (247) formalParameterDecls -> . variableModifiers type formalParameterDeclsRest
    (248) formalParameterDecls -> . type formalParameterDeclsRest
    (249) formalParameterDecls -> . empty
    (337) variableModifiers -> . variableModifier
    (338) variableModifiers -> . variableModifiers variableModifier
    (205) type -> . type_body
    (206) type -> . primitiveType arrays
    (207) type -> . primitiveType
    (562) empty -> .
    (229) variableModifier -> . FINAL
    (230) variableModifier -> . annotation
    (208) type_body -> . Identifier classOrInterfaceTypeBody arrays
    (209) type_body -> . Identifier classOrInterfaceTypeBody
    (210) type_body -> . Identifier arrays
    (211) type_body -> . Identifier
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (287) annotation -> . AT annotationName annotationBody

    RPAREN          reduce using rule 562 (empty -> .)
    FINAL           shift and go to state 589
    Identifier      shift and go to state 80
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    AT              shift and go to state 133

    variableModifiers              shift and go to state 592
    formalParameterDecls           shift and go to state 588
    type_body                      shift and go to state 77
    variableModifier               shift and go to state 487
    primitiveType                  shift and go to state 74
    type                           shift and go to state 590
    annotation                     shift and go to state 593
    empty                          shift and go to state 591

state 483

    (110) classBodyDeclaration -> modifiers memberDecl .

    BRPAREN         reduce using rule 110 (classBodyDeclaration -> modifiers memberDecl .)
    SEMI            reduce using rule 110 (classBodyDeclaration -> modifiers memberDecl .)
    STATIC          reduce using rule 110 (classBodyDeclaration -> modifiers memberDecl .)
    BLPAREN         reduce using rule 110 (classBodyDeclaration -> modifiers memberDecl .)
    VOID            reduce using rule 110 (classBodyDeclaration -> modifiers memberDecl .)
    Identifier      reduce using rule 110 (classBodyDeclaration -> modifiers memberDecl .)
    PUBLIC          reduce using rule 110 (classBodyDeclaration -> modifiers memberDecl .)
    PROTECTED       reduce using rule 110 (classBodyDeclaration -> modifiers memberDecl .)
    PRIVATE         reduce using rule 110 (classBodyDeclaration -> modifiers memberDecl .)
    ABSTRACT        reduce using rule 110 (classBodyDeclaration -> modifiers memberDecl .)
    FINAL           reduce using rule 110 (classBodyDeclaration -> modifiers memberDecl .)
    NATIVE          reduce using rule 110 (classBodyDeclaration -> modifiers memberDecl .)
    SYNCHRONIZED    reduce using rule 110 (classBodyDeclaration -> modifiers memberDecl .)
    TRANSIENT       reduce using rule 110 (classBodyDeclaration -> modifiers memberDecl .)
    VOLATILE        reduce using rule 110 (classBodyDeclaration -> modifiers memberDecl .)
    STRICTFP        reduce using rule 110 (classBodyDeclaration -> modifiers memberDecl .)
    AT              reduce using rule 110 (classBodyDeclaration -> modifiers memberDecl .)
    LESS            reduce using rule 110 (classBodyDeclaration -> modifiers memberDecl .)
    INTERFACE       reduce using rule 110 (classBodyDeclaration -> modifiers memberDecl .)
    CLASS           reduce using rule 110 (classBodyDeclaration -> modifiers memberDecl .)
    ENUM            reduce using rule 110 (classBodyDeclaration -> modifiers memberDecl .)
    BOOLEAN         reduce using rule 110 (classBodyDeclaration -> modifiers memberDecl .)
    CHAR            reduce using rule 110 (classBodyDeclaration -> modifiers memberDecl .)
    BYTE            reduce using rule 110 (classBodyDeclaration -> modifiers memberDecl .)
    SHORT           reduce using rule 110 (classBodyDeclaration -> modifiers memberDecl .)
    INT             reduce using rule 110 (classBodyDeclaration -> modifiers memberDecl .)
    LONG            reduce using rule 110 (classBodyDeclaration -> modifiers memberDecl .)
    FLOAT           reduce using rule 110 (classBodyDeclaration -> modifiers memberDecl .)
    DOUBLE          reduce using rule 110 (classBodyDeclaration -> modifiers memberDecl .)


state 484

    (86) classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .

    BRPAREN         reduce using rule 86 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    SEMI            reduce using rule 86 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    STATIC          reduce using rule 86 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    BLPAREN         reduce using rule 86 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    VOID            reduce using rule 86 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    Identifier      reduce using rule 86 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    PUBLIC          reduce using rule 86 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    PROTECTED       reduce using rule 86 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    PRIVATE         reduce using rule 86 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    ABSTRACT        reduce using rule 86 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    FINAL           reduce using rule 86 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    NATIVE          reduce using rule 86 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    SYNCHRONIZED    reduce using rule 86 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    TRANSIENT       reduce using rule 86 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    VOLATILE        reduce using rule 86 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    STRICTFP        reduce using rule 86 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    AT              reduce using rule 86 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    LESS            reduce using rule 86 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    INTERFACE       reduce using rule 86 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    CLASS           reduce using rule 86 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    ENUM            reduce using rule 86 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    BOOLEAN         reduce using rule 86 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    CHAR            reduce using rule 86 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    BYTE            reduce using rule 86 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    SHORT           reduce using rule 86 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    INT             reduce using rule 86 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    LONG            reduce using rule 86 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    FLOAT           reduce using rule 86 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    DOUBLE          reduce using rule 86 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)


state 485

    (255) blockStatements -> blockStatement .

    BRPAREN         reduce using rule 255 (blockStatements -> blockStatement .)
    ASSERT          reduce using rule 255 (blockStatements -> blockStatement .)
    IF              reduce using rule 255 (blockStatements -> blockStatement .)
    FOR             reduce using rule 255 (blockStatements -> blockStatement .)
    WHILE           reduce using rule 255 (blockStatements -> blockStatement .)
    DO              reduce using rule 255 (blockStatements -> blockStatement .)
    TRY             reduce using rule 255 (blockStatements -> blockStatement .)
    SWITCH          reduce using rule 255 (blockStatements -> blockStatement .)
    SYNCHRONIZED    reduce using rule 255 (blockStatements -> blockStatement .)
    RETURN          reduce using rule 255 (blockStatements -> blockStatement .)
    THROW           reduce using rule 255 (blockStatements -> blockStatement .)
    BREAK           reduce using rule 255 (blockStatements -> blockStatement .)
    CONTINUE        reduce using rule 255 (blockStatements -> blockStatement .)
    SEMI            reduce using rule 255 (blockStatements -> blockStatement .)
    Identifier      reduce using rule 255 (blockStatements -> blockStatement .)
    BLPAREN         reduce using rule 255 (blockStatements -> blockStatement .)
    PUBLIC          reduce using rule 255 (blockStatements -> blockStatement .)
    PROTECTED       reduce using rule 255 (blockStatements -> blockStatement .)
    PRIVATE         reduce using rule 255 (blockStatements -> blockStatement .)
    ABSTRACT        reduce using rule 255 (blockStatements -> blockStatement .)
    STATIC          reduce using rule 255 (blockStatements -> blockStatement .)
    FINAL           reduce using rule 255 (blockStatements -> blockStatement .)
    STRICTFP        reduce using rule 255 (blockStatements -> blockStatement .)
    CLASS           reduce using rule 255 (blockStatements -> blockStatement .)
    ENUM            reduce using rule 255 (blockStatements -> blockStatement .)
    INTERFACE       reduce using rule 255 (blockStatements -> blockStatement .)
    AT              reduce using rule 255 (blockStatements -> blockStatement .)
    BOOLEAN         reduce using rule 255 (blockStatements -> blockStatement .)
    CHAR            reduce using rule 255 (blockStatements -> blockStatement .)
    BYTE            reduce using rule 255 (blockStatements -> blockStatement .)
    SHORT           reduce using rule 255 (blockStatements -> blockStatement .)
    INT             reduce using rule 255 (blockStatements -> blockStatement .)
    LONG            reduce using rule 255 (blockStatements -> blockStatement .)
    FLOAT           reduce using rule 255 (blockStatements -> blockStatement .)
    DOUBLE          reduce using rule 255 (blockStatements -> blockStatement .)
    PLUS            reduce using rule 255 (blockStatements -> blockStatement .)
    DASH            reduce using rule 255 (blockStatements -> blockStatement .)
    OP_INC          reduce using rule 255 (blockStatements -> blockStatement .)
    OP_DEC          reduce using rule 255 (blockStatements -> blockStatement .)
    TILDE           reduce using rule 255 (blockStatements -> blockStatement .)
    EXCLAMATION     reduce using rule 255 (blockStatements -> blockStatement .)
    LPAREN          reduce using rule 255 (blockStatements -> blockStatement .)
    THIS            reduce using rule 255 (blockStatements -> blockStatement .)
    SUPER           reduce using rule 255 (blockStatements -> blockStatement .)
    NEW             reduce using rule 255 (blockStatements -> blockStatement .)
    VOID            reduce using rule 255 (blockStatements -> blockStatement .)
    CharacterLiteral reduce using rule 255 (blockStatements -> blockStatement .)
    StringLiteral   reduce using rule 255 (blockStatements -> blockStatement .)
    NULL            reduce using rule 255 (blockStatements -> blockStatement .)
    LONG_NUMBER     reduce using rule 255 (blockStatements -> blockStatement .)
    LONG_HEX_NUMBER reduce using rule 255 (blockStatements -> blockStatement .)
    NON_INTEGER_1   reduce using rule 255 (blockStatements -> blockStatement .)
    NON_INTEGER_2   reduce using rule 255 (blockStatements -> blockStatement .)
    NON_INTEGER_3   reduce using rule 255 (blockStatements -> blockStatement .)
    NON_INTEGER_4   reduce using rule 255 (blockStatements -> blockStatement .)
    TRUE            reduce using rule 255 (blockStatements -> blockStatement .)
    FALSE           reduce using rule 255 (blockStatements -> blockStatement .)
    CASE            reduce using rule 255 (blockStatements -> blockStatement .)
    DEFAULT         reduce using rule 255 (blockStatements -> blockStatement .)


state 486

    (332) blockStatement -> classOrInterfaceDeclaration .

    BRPAREN         reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    ASSERT          reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    IF              reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    FOR             reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    WHILE           reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    DO              reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    TRY             reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    SWITCH          reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    SYNCHRONIZED    reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    RETURN          reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    THROW           reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    BREAK           reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    CONTINUE        reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    SEMI            reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    Identifier      reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    BLPAREN         reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    PUBLIC          reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    PROTECTED       reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    PRIVATE         reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    ABSTRACT        reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    STATIC          reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    FINAL           reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    STRICTFP        reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    CLASS           reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    ENUM            reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    INTERFACE       reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    AT              reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    BOOLEAN         reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    CHAR            reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    BYTE            reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    SHORT           reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    INT             reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    LONG            reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    FLOAT           reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    DOUBLE          reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    PLUS            reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    DASH            reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    OP_INC          reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    OP_DEC          reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    TILDE           reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    EXCLAMATION     reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    LPAREN          reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    THIS            reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    SUPER           reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    NEW             reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    VOID            reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    CharacterLiteral reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    StringLiteral   reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    NULL            reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    LONG_NUMBER     reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    LONG_HEX_NUMBER reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    NON_INTEGER_1   reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    NON_INTEGER_2   reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    NON_INTEGER_3   reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    NON_INTEGER_4   reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    TRUE            reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    FALSE           reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    CASE            reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)
    DEFAULT         reduce using rule 332 (blockStatement -> classOrInterfaceDeclaration .)


state 487

    (337) variableModifiers -> variableModifier .

    FINAL           reduce using rule 337 (variableModifiers -> variableModifier .)
    Identifier      reduce using rule 337 (variableModifiers -> variableModifier .)
    BOOLEAN         reduce using rule 337 (variableModifiers -> variableModifier .)
    CHAR            reduce using rule 337 (variableModifiers -> variableModifier .)
    BYTE            reduce using rule 337 (variableModifiers -> variableModifier .)
    SHORT           reduce using rule 337 (variableModifiers -> variableModifier .)
    INT             reduce using rule 337 (variableModifiers -> variableModifier .)
    LONG            reduce using rule 337 (variableModifiers -> variableModifier .)
    FLOAT           reduce using rule 337 (variableModifiers -> variableModifier .)
    DOUBLE          reduce using rule 337 (variableModifiers -> variableModifier .)
    AT              reduce using rule 337 (variableModifiers -> variableModifier .)


state 488

    (331) blockStatement -> localVariableDeclarationStatement .

    BRPAREN         reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    ASSERT          reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    IF              reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    FOR             reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    WHILE           reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    DO              reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    TRY             reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    SWITCH          reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    SYNCHRONIZED    reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    RETURN          reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    THROW           reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    BREAK           reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    CONTINUE        reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    SEMI            reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    Identifier      reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    BLPAREN         reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    PUBLIC          reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    PROTECTED       reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    PRIVATE         reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    ABSTRACT        reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    STATIC          reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    FINAL           reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    STRICTFP        reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    CLASS           reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    ENUM            reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    INTERFACE       reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    AT              reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    BOOLEAN         reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    CHAR            reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    BYTE            reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    SHORT           reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    INT             reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    LONG            reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    FLOAT           reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    DOUBLE          reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    PLUS            reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    DASH            reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    OP_INC          reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    OP_DEC          reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    TILDE           reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    EXCLAMATION     reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    LPAREN          reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    THIS            reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    SUPER           reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    NEW             reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    VOID            reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    CharacterLiteral reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    StringLiteral   reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    NULL            reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    LONG_NUMBER     reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    LONG_HEX_NUMBER reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    NON_INTEGER_1   reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    NON_INTEGER_2   reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    NON_INTEGER_3   reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    NON_INTEGER_4   reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    TRUE            reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    FALSE           reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    CASE            reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)
    DEFAULT         reduce using rule 331 (blockStatement -> localVariableDeclarationStatement .)


state 489

    (358) statement -> RETURN . expression_or_empty SEMI
    (343) expression_or_empty -> . expression
    (344) expression_or_empty -> .
    (404) expression -> . conditionalExpression assignmentOperator_expression_empty
    (420) conditionalExpression -> . conditionalOrExpression conditionalExpressionStats
    (421) conditionalExpression -> . conditionalOrExpression
    (425) conditionalOrExpression -> . conditionalAndExpression O_conditionalAndExpressions
    (426) conditionalOrExpression -> . conditionalAndExpression
    (430) conditionalAndExpression -> . inclusiveOrExpression O_inclusiveOrExpressions
    (431) conditionalAndExpression -> . inclusiveOrExpression
    (435) inclusiveOrExpression -> . exclusiveOrExpression V_exclusiveOrExpression
    (436) inclusiveOrExpression -> . exclusiveOrExpression
    (440) exclusiveOrExpression -> . andExpression CARET_andExpressions
    (441) exclusiveOrExpression -> . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    SEMI            reduce using rule 344 (expression_or_empty -> .)
    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    equalityExpression             shift and go to state 108
    expression_or_empty            shift and go to state 594
    inclusiveOrExpression          shift and go to state 99
    multiplicativeExpression       shift and go to state 128
    exclusiveOrExpression          shift and go to state 110
    conditionalAndExpression       shift and go to state 89
    shiftExpression                shift and go to state 130
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    integerLiteral                 shift and go to state 98
    additiveExpression             shift and go to state 102
    instanceOfExpression           shift and go to state 96
    conditionalExpression          shift and go to state 266
    unaryExpression                shift and go to state 131
    FloatingPointLiteral           shift and go to state 119
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    relationalExpression           shift and go to state 95
    conditionalOrExpression        shift and go to state 109
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    primitiveType                  shift and go to state 122
    andExpression                  shift and go to state 106
    expression                     shift and go to state 595

state 490

    (357) statement -> SYNCHRONIZED . parExpression block
    (394) parExpression -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 597

    parExpression                  shift and go to state 596

state 491

    (38) classOrInterfaceModifier -> FINAL .
    (229) variableModifier -> FINAL .

  ! reduce/reduce conflict for FINAL resolved using rule 38 (classOrInterfaceModifier -> FINAL .)
  ! reduce/reduce conflict for AT resolved using rule 38 (classOrInterfaceModifier -> FINAL .)
    PUBLIC          reduce using rule 38 (classOrInterfaceModifier -> FINAL .)
    PROTECTED       reduce using rule 38 (classOrInterfaceModifier -> FINAL .)
    PRIVATE         reduce using rule 38 (classOrInterfaceModifier -> FINAL .)
    ABSTRACT        reduce using rule 38 (classOrInterfaceModifier -> FINAL .)
    STATIC          reduce using rule 38 (classOrInterfaceModifier -> FINAL .)
    FINAL           reduce using rule 38 (classOrInterfaceModifier -> FINAL .)
    STRICTFP        reduce using rule 38 (classOrInterfaceModifier -> FINAL .)
    CLASS           reduce using rule 38 (classOrInterfaceModifier -> FINAL .)
    ENUM            reduce using rule 38 (classOrInterfaceModifier -> FINAL .)
    INTERFACE       reduce using rule 38 (classOrInterfaceModifier -> FINAL .)
    AT              reduce using rule 38 (classOrInterfaceModifier -> FINAL .)
    Identifier      reduce using rule 229 (variableModifier -> FINAL .)
    BOOLEAN         reduce using rule 229 (variableModifier -> FINAL .)
    CHAR            reduce using rule 229 (variableModifier -> FINAL .)
    BYTE            reduce using rule 229 (variableModifier -> FINAL .)
    SHORT           reduce using rule 229 (variableModifier -> FINAL .)
    INT             reduce using rule 229 (variableModifier -> FINAL .)
    LONG            reduce using rule 229 (variableModifier -> FINAL .)
    FLOAT           reduce using rule 229 (variableModifier -> FINAL .)
    DOUBLE          reduce using rule 229 (variableModifier -> FINAL .)

  ! FINAL           [ reduce using rule 229 (variableModifier -> FINAL .) ]
  ! AT              [ reduce using rule 229 (variableModifier -> FINAL .) ]


state 492

    (350) statement -> FOR . LPAREN forControl RPAREN statement

    LPAREN          shift and go to state 598


state 493

    (335) localVariableDeclaration -> variableModifiers . type variableDeclarators
    (338) variableModifiers -> variableModifiers . variableModifier
    (205) type -> . type_body
    (206) type -> . primitiveType arrays
    (207) type -> . primitiveType
    (229) variableModifier -> . FINAL
    (230) variableModifier -> . annotation
    (208) type_body -> . Identifier classOrInterfaceTypeBody arrays
    (209) type_body -> . Identifier classOrInterfaceTypeBody
    (210) type_body -> . Identifier arrays
    (211) type_body -> . Identifier
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (287) annotation -> . AT annotationName annotationBody

    FINAL           shift and go to state 589
    Identifier      shift and go to state 80
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    AT              shift and go to state 133

    primitiveType                  shift and go to state 74
    variableModifier               shift and go to state 600
    type_body                      shift and go to state 77
    type                           shift and go to state 599
    annotation                     shift and go to state 593

state 494

    (353) statement -> TRY . block catches FINALLY block
    (354) statement -> TRY . block catches
    (355) statement -> TRY . block FINALLY block
    (329) block -> . BLPAREN blockStatements BRPAREN
    (330) block -> . BLPAREN BRPAREN

    BLPAREN         shift and go to state 335

    block                          shift and go to state 601

state 495

    (364) statement -> Identifier . COLON statement
    (208) type_body -> Identifier . classOrInterfaceTypeBody arrays
    (209) type_body -> Identifier . classOrInterfaceTypeBody
    (210) type_body -> Identifier . arrays
    (211) type_body -> Identifier .
    (512) primary -> Identifier . DOT_Identifiers identifierSuffix_empty
    (513) primary -> Identifier . identifierSuffix_empty
    (212) classOrInterfaceTypeBody -> . typeArguments classOrInterfaceTypeStatements
    (213) classOrInterfaceTypeBody -> . typeArguments
    (214) classOrInterfaceTypeBody -> . classOrInterfaceTypeStatements
    (138) arrays -> . arrays array
    (139) arrays -> . array
    (269) DOT_Identifiers -> . DOT_Identifier
    (270) DOT_Identifiers -> . DOT_Identifiers DOT_Identifier
    (504) identifierSuffix_empty -> . identifierSuffix
    (505) identifierSuffix_empty -> .
    (234) typeArguments -> . LESS typeArgument COMMA_typeArguments MORE
    (235) typeArguments -> . LESS typeArgument MORE
    (217) classOrInterfaceTypeStatements -> . classOrInterfaceTypeStatement
    (218) classOrInterfaceTypeStatements -> . classOrInterfaceTypeStatements classOrInterfaceTypeStatement
    (137) array -> . FLPAREN FRPAREN
    (267) DOT_Identifier -> . DOT Identifier
    (268) DOT_Identifier -> . DOT MULT
    (520) identifierSuffix -> . arrays DOT CLASS
    (521) identifierSuffix -> . FL_expression_FRs
    (522) identifierSuffix -> . arguments
    (523) identifierSuffix -> . DOT CLASS
    (524) identifierSuffix -> . DOT explicitGenericInvocation
    (525) identifierSuffix -> . DOT THIS
    (526) identifierSuffix -> . DOT SUPER arguments
    (527) identifierSuffix -> . DOT NEW innerCreator
    (215) classOrInterfaceTypeStatement -> . DOT Identifier typeArguments
    (216) classOrInterfaceTypeStatement -> . DOT Identifier
    (518) FL_expression_FRs -> . FL_expression_FR
    (519) FL_expression_FRs -> . FL_expression_FRs FL_expression_FR
    (555) arguments -> . LPAREN expressionList_once RPAREN
    (517) FL_expression_FR -> . FLPAREN expression FRPAREN

  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for FLPAREN resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
    COLON           shift and go to state 602
    Identifier      reduce using rule 211 (type_body -> Identifier .)
    OP_INC          reduce using rule 505 (identifierSuffix_empty -> .)
    OP_DEC          reduce using rule 505 (identifierSuffix_empty -> .)
    MULT            reduce using rule 505 (identifierSuffix_empty -> .)
    SLASH           reduce using rule 505 (identifierSuffix_empty -> .)
    PERCENT         reduce using rule 505 (identifierSuffix_empty -> .)
    PLUS            reduce using rule 505 (identifierSuffix_empty -> .)
    DASH            reduce using rule 505 (identifierSuffix_empty -> .)
    OP_SHR          reduce using rule 505 (identifierSuffix_empty -> .)
    OP_SHRR         reduce using rule 505 (identifierSuffix_empty -> .)
    OP_SHL          reduce using rule 505 (identifierSuffix_empty -> .)
    OP_LE           reduce using rule 505 (identifierSuffix_empty -> .)
    OP_GE           reduce using rule 505 (identifierSuffix_empty -> .)
    MORE            reduce using rule 505 (identifierSuffix_empty -> .)
    INSTANCEOF      reduce using rule 505 (identifierSuffix_empty -> .)
    OP_EQ           reduce using rule 505 (identifierSuffix_empty -> .)
    OP_NE           reduce using rule 505 (identifierSuffix_empty -> .)
    AND             reduce using rule 505 (identifierSuffix_empty -> .)
    CARET           reduce using rule 505 (identifierSuffix_empty -> .)
    VERTICAL        reduce using rule 505 (identifierSuffix_empty -> .)
    OP_LAND         reduce using rule 505 (identifierSuffix_empty -> .)
    OP_LOR          reduce using rule 505 (identifierSuffix_empty -> .)
    QUES            reduce using rule 505 (identifierSuffix_empty -> .)
    EQUALS          reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_ADD         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_SUB         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_MUL         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_DIV         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_AND         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_OR          reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_XOR         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_MOD         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_SHL         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_SHRR        reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_SHR         reduce using rule 505 (identifierSuffix_empty -> .)
    SEMI            reduce using rule 505 (identifierSuffix_empty -> .)
    LESS            shift and go to state 156
    FLPAREN         shift and go to state 193
    DOT             shift and go to state 427
    LPAREN          shift and go to state 199

  ! DOT             [ reduce using rule 505 (identifierSuffix_empty -> .) ]
  ! FLPAREN         [ reduce using rule 505 (identifierSuffix_empty -> .) ]
  ! LESS            [ reduce using rule 505 (identifierSuffix_empty -> .) ]

    FL_expression_FRs              shift and go to state 196
    identifierSuffix               shift and go to state 197
    classOrInterfaceTypeBody       shift and go to state 155
    FL_expression_FR               shift and go to state 192
    arrays                         shift and go to state 428
    typeArguments                  shift and go to state 158
    DOT_Identifier                 shift and go to state 48
    identifierSuffix_empty         shift and go to state 215
    arguments                      shift and go to state 195
    DOT_Identifiers                shift and go to state 213
    classOrInterfaceTypeStatements shift and go to state 159
    array                          shift and go to state 154
    classOrInterfaceTypeStatement  shift and go to state 160

state 496

    (361) statement -> CONTINUE . Identifier_or_empty SEMI
    (345) Identifier_or_empty -> . Identifier
    (346) Identifier_or_empty -> .

    Identifier      shift and go to state 603
    SEMI            reduce using rule 346 (Identifier_or_empty -> .)

    Identifier_or_empty            shift and go to state 604

state 497

    (400) statementExpression -> expression .

    SEMI            reduce using rule 400 (statementExpression -> expression .)


state 498

    (347) statement -> block .

    BRPAREN         reduce using rule 347 (statement -> block .)
    ASSERT          reduce using rule 347 (statement -> block .)
    IF              reduce using rule 347 (statement -> block .)
    FOR             reduce using rule 347 (statement -> block .)
    WHILE           reduce using rule 347 (statement -> block .)
    DO              reduce using rule 347 (statement -> block .)
    TRY             reduce using rule 347 (statement -> block .)
    SWITCH          reduce using rule 347 (statement -> block .)
    SYNCHRONIZED    reduce using rule 347 (statement -> block .)
    RETURN          reduce using rule 347 (statement -> block .)
    THROW           reduce using rule 347 (statement -> block .)
    BREAK           reduce using rule 347 (statement -> block .)
    CONTINUE        reduce using rule 347 (statement -> block .)
    SEMI            reduce using rule 347 (statement -> block .)
    Identifier      reduce using rule 347 (statement -> block .)
    BLPAREN         reduce using rule 347 (statement -> block .)
    PUBLIC          reduce using rule 347 (statement -> block .)
    PROTECTED       reduce using rule 347 (statement -> block .)
    PRIVATE         reduce using rule 347 (statement -> block .)
    ABSTRACT        reduce using rule 347 (statement -> block .)
    STATIC          reduce using rule 347 (statement -> block .)
    FINAL           reduce using rule 347 (statement -> block .)
    STRICTFP        reduce using rule 347 (statement -> block .)
    CLASS           reduce using rule 347 (statement -> block .)
    ENUM            reduce using rule 347 (statement -> block .)
    INTERFACE       reduce using rule 347 (statement -> block .)
    AT              reduce using rule 347 (statement -> block .)
    BOOLEAN         reduce using rule 347 (statement -> block .)
    CHAR            reduce using rule 347 (statement -> block .)
    BYTE            reduce using rule 347 (statement -> block .)
    SHORT           reduce using rule 347 (statement -> block .)
    INT             reduce using rule 347 (statement -> block .)
    LONG            reduce using rule 347 (statement -> block .)
    FLOAT           reduce using rule 347 (statement -> block .)
    DOUBLE          reduce using rule 347 (statement -> block .)
    PLUS            reduce using rule 347 (statement -> block .)
    DASH            reduce using rule 347 (statement -> block .)
    OP_INC          reduce using rule 347 (statement -> block .)
    OP_DEC          reduce using rule 347 (statement -> block .)
    TILDE           reduce using rule 347 (statement -> block .)
    EXCLAMATION     reduce using rule 347 (statement -> block .)
    LPAREN          reduce using rule 347 (statement -> block .)
    THIS            reduce using rule 347 (statement -> block .)
    SUPER           reduce using rule 347 (statement -> block .)
    NEW             reduce using rule 347 (statement -> block .)
    VOID            reduce using rule 347 (statement -> block .)
    CharacterLiteral reduce using rule 347 (statement -> block .)
    StringLiteral   reduce using rule 347 (statement -> block .)
    NULL            reduce using rule 347 (statement -> block .)
    LONG_NUMBER     reduce using rule 347 (statement -> block .)
    LONG_HEX_NUMBER reduce using rule 347 (statement -> block .)
    NON_INTEGER_1   reduce using rule 347 (statement -> block .)
    NON_INTEGER_2   reduce using rule 347 (statement -> block .)
    NON_INTEGER_3   reduce using rule 347 (statement -> block .)
    NON_INTEGER_4   reduce using rule 347 (statement -> block .)
    TRUE            reduce using rule 347 (statement -> block .)
    FALSE           reduce using rule 347 (statement -> block .)
    ELSE            reduce using rule 347 (statement -> block .)
    CASE            reduce using rule 347 (statement -> block .)
    DEFAULT         reduce using rule 347 (statement -> block .)


state 499

    (334) localVariableDeclarationStatement -> localVariableDeclaration . SEMI

    SEMI            shift and go to state 605


state 500

    (351) statement -> WHILE . parExpression statement
    (394) parExpression -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 597

    parExpression                  shift and go to state 606

state 501

    (356) statement -> SWITCH . parExpression BLPAREN switchBlockStatementGroups BRPAREN
    (394) parExpression -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 597

    parExpression                  shift and go to state 607

state 502

    (333) blockStatement -> statement .

    BRPAREN         reduce using rule 333 (blockStatement -> statement .)
    ASSERT          reduce using rule 333 (blockStatement -> statement .)
    IF              reduce using rule 333 (blockStatement -> statement .)
    FOR             reduce using rule 333 (blockStatement -> statement .)
    WHILE           reduce using rule 333 (blockStatement -> statement .)
    DO              reduce using rule 333 (blockStatement -> statement .)
    TRY             reduce using rule 333 (blockStatement -> statement .)
    SWITCH          reduce using rule 333 (blockStatement -> statement .)
    SYNCHRONIZED    reduce using rule 333 (blockStatement -> statement .)
    RETURN          reduce using rule 333 (blockStatement -> statement .)
    THROW           reduce using rule 333 (blockStatement -> statement .)
    BREAK           reduce using rule 333 (blockStatement -> statement .)
    CONTINUE        reduce using rule 333 (blockStatement -> statement .)
    SEMI            reduce using rule 333 (blockStatement -> statement .)
    Identifier      reduce using rule 333 (blockStatement -> statement .)
    BLPAREN         reduce using rule 333 (blockStatement -> statement .)
    PUBLIC          reduce using rule 333 (blockStatement -> statement .)
    PROTECTED       reduce using rule 333 (blockStatement -> statement .)
    PRIVATE         reduce using rule 333 (blockStatement -> statement .)
    ABSTRACT        reduce using rule 333 (blockStatement -> statement .)
    STATIC          reduce using rule 333 (blockStatement -> statement .)
    FINAL           reduce using rule 333 (blockStatement -> statement .)
    STRICTFP        reduce using rule 333 (blockStatement -> statement .)
    CLASS           reduce using rule 333 (blockStatement -> statement .)
    ENUM            reduce using rule 333 (blockStatement -> statement .)
    INTERFACE       reduce using rule 333 (blockStatement -> statement .)
    AT              reduce using rule 333 (blockStatement -> statement .)
    BOOLEAN         reduce using rule 333 (blockStatement -> statement .)
    CHAR            reduce using rule 333 (blockStatement -> statement .)
    BYTE            reduce using rule 333 (blockStatement -> statement .)
    SHORT           reduce using rule 333 (blockStatement -> statement .)
    INT             reduce using rule 333 (blockStatement -> statement .)
    LONG            reduce using rule 333 (blockStatement -> statement .)
    FLOAT           reduce using rule 333 (blockStatement -> statement .)
    DOUBLE          reduce using rule 333 (blockStatement -> statement .)
    PLUS            reduce using rule 333 (blockStatement -> statement .)
    DASH            reduce using rule 333 (blockStatement -> statement .)
    OP_INC          reduce using rule 333 (blockStatement -> statement .)
    OP_DEC          reduce using rule 333 (blockStatement -> statement .)
    TILDE           reduce using rule 333 (blockStatement -> statement .)
    EXCLAMATION     reduce using rule 333 (blockStatement -> statement .)
    LPAREN          reduce using rule 333 (blockStatement -> statement .)
    THIS            reduce using rule 333 (blockStatement -> statement .)
    SUPER           reduce using rule 333 (blockStatement -> statement .)
    NEW             reduce using rule 333 (blockStatement -> statement .)
    VOID            reduce using rule 333 (blockStatement -> statement .)
    CharacterLiteral reduce using rule 333 (blockStatement -> statement .)
    StringLiteral   reduce using rule 333 (blockStatement -> statement .)
    NULL            reduce using rule 333 (blockStatement -> statement .)
    LONG_NUMBER     reduce using rule 333 (blockStatement -> statement .)
    LONG_HEX_NUMBER reduce using rule 333 (blockStatement -> statement .)
    NON_INTEGER_1   reduce using rule 333 (blockStatement -> statement .)
    NON_INTEGER_2   reduce using rule 333 (blockStatement -> statement .)
    NON_INTEGER_3   reduce using rule 333 (blockStatement -> statement .)
    NON_INTEGER_4   reduce using rule 333 (blockStatement -> statement .)
    TRUE            reduce using rule 333 (blockStatement -> statement .)
    FALSE           reduce using rule 333 (blockStatement -> statement .)
    CASE            reduce using rule 333 (blockStatement -> statement .)
    DEFAULT         reduce using rule 333 (blockStatement -> statement .)


state 503

    (336) localVariableDeclaration -> type . variableDeclarators
    (166) variableDeclarators -> . variableDeclarator COMMA_VARS
    (167) variableDeclarators -> . variableDeclarator
    (169) variableDeclarator -> . variableDeclaratorId EQUALS_variableInitializer
    (170) variableDeclarator -> . variableDeclaratorId
    (178) variableDeclaratorId -> . Identifier arrays
    (179) variableDeclaratorId -> . Identifier

    Identifier      shift and go to state 609

    variableDeclarators            shift and go to state 608
    variableDeclaratorId           shift and go to state 441
    variableDeclarator             shift and go to state 444

state 504

    (206) type -> primitiveType . arrays
    (207) type -> primitiveType .
    (514) primary -> primitiveType . arrays DOT CLASS
    (515) primary -> primitiveType . DOT CLASS
    (138) arrays -> . arrays array
    (139) arrays -> . array
    (137) array -> . FLPAREN FRPAREN

    Identifier      reduce using rule 207 (type -> primitiveType .)
    DOT             shift and go to state 248
    FLPAREN         shift and go to state 153

    arrays                         shift and go to state 429
    array                          shift and go to state 154

state 505

    (360) statement -> BREAK . Identifier_or_empty SEMI
    (345) Identifier_or_empty -> . Identifier
    (346) Identifier_or_empty -> .

    Identifier      shift and go to state 603
    SEMI            reduce using rule 346 (Identifier_or_empty -> .)

    Identifier_or_empty            shift and go to state 610

state 506

    (352) statement -> DO . statement WHILE parExpression SEMI
    (347) statement -> . block
    (348) statement -> . ASSERT expression expression_colon_or_empty SEMI
    (349) statement -> . IF parExpression statement else_statement
    (350) statement -> . FOR LPAREN forControl RPAREN statement
    (351) statement -> . WHILE parExpression statement
    (352) statement -> . DO statement WHILE parExpression SEMI
    (353) statement -> . TRY block catches FINALLY block
    (354) statement -> . TRY block catches
    (355) statement -> . TRY block FINALLY block
    (356) statement -> . SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN
    (357) statement -> . SYNCHRONIZED parExpression block
    (358) statement -> . RETURN expression_or_empty SEMI
    (359) statement -> . THROW expression SEMI
    (360) statement -> . BREAK Identifier_or_empty SEMI
    (361) statement -> . CONTINUE Identifier_or_empty SEMI
    (362) statement -> . SEMI
    (363) statement -> . statementExpression SEMI
    (364) statement -> . Identifier COLON statement
    (329) block -> . BLPAREN blockStatements BRPAREN
    (330) block -> . BLPAREN BRPAREN
    (400) statementExpression -> . expression
    (404) expression -> . conditionalExpression assignmentOperator_expression_empty
    (420) conditionalExpression -> . conditionalOrExpression conditionalExpressionStats
    (421) conditionalExpression -> . conditionalOrExpression
    (425) conditionalOrExpression -> . conditionalAndExpression O_conditionalAndExpressions
    (426) conditionalOrExpression -> . conditionalAndExpression
    (430) conditionalAndExpression -> . inclusiveOrExpression O_inclusiveOrExpressions
    (431) conditionalAndExpression -> . inclusiveOrExpression
    (435) inclusiveOrExpression -> . exclusiveOrExpression V_exclusiveOrExpression
    (436) inclusiveOrExpression -> . exclusiveOrExpression
    (440) exclusiveOrExpression -> . andExpression CARET_andExpressions
    (441) exclusiveOrExpression -> . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    ASSERT          shift and go to state 507
    IF              shift and go to state 513
    FOR             shift and go to state 492
    WHILE           shift and go to state 500
    DO              shift and go to state 506
    TRY             shift and go to state 494
    SWITCH          shift and go to state 501
    SYNCHRONIZED    shift and go to state 490
    RETURN          shift and go to state 489
    THROW           shift and go to state 514
    BREAK           shift and go to state 505
    CONTINUE        shift and go to state 496
    SEMI            shift and go to state 508
    Identifier      shift and go to state 611
    BLPAREN         shift and go to state 335
    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    equalityExpression             shift and go to state 108
    inclusiveOrExpression          shift and go to state 99
    multiplicativeExpression       shift and go to state 128
    exclusiveOrExpression          shift and go to state 110
    conditionalAndExpression       shift and go to state 89
    FloatingPointLiteral           shift and go to state 119
    shiftExpression                shift and go to state 130
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    statement                      shift and go to state 612
    additiveExpression             shift and go to state 102
    instanceOfExpression           shift and go to state 96
    conditionalExpression          shift and go to state 266
    unaryExpression                shift and go to state 131
    integerLiteral                 shift and go to state 98
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    relationalExpression           shift and go to state 95
    conditionalOrExpression        shift and go to state 109
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    primitiveType                  shift and go to state 122
    statementExpression            shift and go to state 509
    andExpression                  shift and go to state 106
    expression                     shift and go to state 497
    block                          shift and go to state 498

state 507

    (348) statement -> ASSERT . expression expression_colon_or_empty SEMI
    (404) expression -> . conditionalExpression assignmentOperator_expression_empty
    (420) conditionalExpression -> . conditionalOrExpression conditionalExpressionStats
    (421) conditionalExpression -> . conditionalOrExpression
    (425) conditionalOrExpression -> . conditionalAndExpression O_conditionalAndExpressions
    (426) conditionalOrExpression -> . conditionalAndExpression
    (430) conditionalAndExpression -> . inclusiveOrExpression O_inclusiveOrExpressions
    (431) conditionalAndExpression -> . inclusiveOrExpression
    (435) inclusiveOrExpression -> . exclusiveOrExpression V_exclusiveOrExpression
    (436) inclusiveOrExpression -> . exclusiveOrExpression
    (440) exclusiveOrExpression -> . andExpression CARET_andExpressions
    (441) exclusiveOrExpression -> . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    equalityExpression             shift and go to state 108
    inclusiveOrExpression          shift and go to state 99
    multiplicativeExpression       shift and go to state 128
    exclusiveOrExpression          shift and go to state 110
    conditionalAndExpression       shift and go to state 89
    shiftExpression                shift and go to state 130
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    integerLiteral                 shift and go to state 98
    additiveExpression             shift and go to state 102
    conditionalExpression          shift and go to state 266
    unaryExpression                shift and go to state 131
    FloatingPointLiteral           shift and go to state 119
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    relationalExpression           shift and go to state 95
    conditionalOrExpression        shift and go to state 109
    instanceOfExpression           shift and go to state 96
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    primitiveType                  shift and go to state 122
    andExpression                  shift and go to state 106
    expression                     shift and go to state 613

state 508

    (362) statement -> SEMI .

    BRPAREN         reduce using rule 362 (statement -> SEMI .)
    ASSERT          reduce using rule 362 (statement -> SEMI .)
    IF              reduce using rule 362 (statement -> SEMI .)
    FOR             reduce using rule 362 (statement -> SEMI .)
    WHILE           reduce using rule 362 (statement -> SEMI .)
    DO              reduce using rule 362 (statement -> SEMI .)
    TRY             reduce using rule 362 (statement -> SEMI .)
    SWITCH          reduce using rule 362 (statement -> SEMI .)
    SYNCHRONIZED    reduce using rule 362 (statement -> SEMI .)
    RETURN          reduce using rule 362 (statement -> SEMI .)
    THROW           reduce using rule 362 (statement -> SEMI .)
    BREAK           reduce using rule 362 (statement -> SEMI .)
    CONTINUE        reduce using rule 362 (statement -> SEMI .)
    SEMI            reduce using rule 362 (statement -> SEMI .)
    Identifier      reduce using rule 362 (statement -> SEMI .)
    BLPAREN         reduce using rule 362 (statement -> SEMI .)
    PUBLIC          reduce using rule 362 (statement -> SEMI .)
    PROTECTED       reduce using rule 362 (statement -> SEMI .)
    PRIVATE         reduce using rule 362 (statement -> SEMI .)
    ABSTRACT        reduce using rule 362 (statement -> SEMI .)
    STATIC          reduce using rule 362 (statement -> SEMI .)
    FINAL           reduce using rule 362 (statement -> SEMI .)
    STRICTFP        reduce using rule 362 (statement -> SEMI .)
    CLASS           reduce using rule 362 (statement -> SEMI .)
    ENUM            reduce using rule 362 (statement -> SEMI .)
    INTERFACE       reduce using rule 362 (statement -> SEMI .)
    AT              reduce using rule 362 (statement -> SEMI .)
    BOOLEAN         reduce using rule 362 (statement -> SEMI .)
    CHAR            reduce using rule 362 (statement -> SEMI .)
    BYTE            reduce using rule 362 (statement -> SEMI .)
    SHORT           reduce using rule 362 (statement -> SEMI .)
    INT             reduce using rule 362 (statement -> SEMI .)
    LONG            reduce using rule 362 (statement -> SEMI .)
    FLOAT           reduce using rule 362 (statement -> SEMI .)
    DOUBLE          reduce using rule 362 (statement -> SEMI .)
    PLUS            reduce using rule 362 (statement -> SEMI .)
    DASH            reduce using rule 362 (statement -> SEMI .)
    OP_INC          reduce using rule 362 (statement -> SEMI .)
    OP_DEC          reduce using rule 362 (statement -> SEMI .)
    TILDE           reduce using rule 362 (statement -> SEMI .)
    EXCLAMATION     reduce using rule 362 (statement -> SEMI .)
    LPAREN          reduce using rule 362 (statement -> SEMI .)
    THIS            reduce using rule 362 (statement -> SEMI .)
    SUPER           reduce using rule 362 (statement -> SEMI .)
    NEW             reduce using rule 362 (statement -> SEMI .)
    VOID            reduce using rule 362 (statement -> SEMI .)
    CharacterLiteral reduce using rule 362 (statement -> SEMI .)
    StringLiteral   reduce using rule 362 (statement -> SEMI .)
    NULL            reduce using rule 362 (statement -> SEMI .)
    LONG_NUMBER     reduce using rule 362 (statement -> SEMI .)
    LONG_HEX_NUMBER reduce using rule 362 (statement -> SEMI .)
    NON_INTEGER_1   reduce using rule 362 (statement -> SEMI .)
    NON_INTEGER_2   reduce using rule 362 (statement -> SEMI .)
    NON_INTEGER_3   reduce using rule 362 (statement -> SEMI .)
    NON_INTEGER_4   reduce using rule 362 (statement -> SEMI .)
    TRUE            reduce using rule 362 (statement -> SEMI .)
    FALSE           reduce using rule 362 (statement -> SEMI .)
    ELSE            reduce using rule 362 (statement -> SEMI .)
    CASE            reduce using rule 362 (statement -> SEMI .)
    DEFAULT         reduce using rule 362 (statement -> SEMI .)


state 509

    (363) statement -> statementExpression . SEMI

    SEMI            shift and go to state 614


state 510

    (329) block -> BLPAREN blockStatements . BRPAREN
    (256) blockStatements -> blockStatements . blockStatement
    (331) blockStatement -> . localVariableDeclarationStatement
    (332) blockStatement -> . classOrInterfaceDeclaration
    (333) blockStatement -> . statement
    (334) localVariableDeclarationStatement -> . localVariableDeclaration SEMI
    (26) classOrInterfaceDeclaration -> . classOrInterfaceModifiers classDeclaration
    (27) classOrInterfaceDeclaration -> . classOrInterfaceModifiers interfaceDeclaration
    (28) classOrInterfaceDeclaration -> . classDeclaration
    (29) classOrInterfaceDeclaration -> . interfaceDeclaration
    (347) statement -> . block
    (348) statement -> . ASSERT expression expression_colon_or_empty SEMI
    (349) statement -> . IF parExpression statement else_statement
    (350) statement -> . FOR LPAREN forControl RPAREN statement
    (351) statement -> . WHILE parExpression statement
    (352) statement -> . DO statement WHILE parExpression SEMI
    (353) statement -> . TRY block catches FINALLY block
    (354) statement -> . TRY block catches
    (355) statement -> . TRY block FINALLY block
    (356) statement -> . SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN
    (357) statement -> . SYNCHRONIZED parExpression block
    (358) statement -> . RETURN expression_or_empty SEMI
    (359) statement -> . THROW expression SEMI
    (360) statement -> . BREAK Identifier_or_empty SEMI
    (361) statement -> . CONTINUE Identifier_or_empty SEMI
    (362) statement -> . SEMI
    (363) statement -> . statementExpression SEMI
    (364) statement -> . Identifier COLON statement
    (335) localVariableDeclaration -> . variableModifiers type variableDeclarators
    (336) localVariableDeclaration -> . type variableDeclarators
    (30) classOrInterfaceModifiers -> . classOrInterfaceModifier
    (31) classOrInterfaceModifiers -> . classOrInterfaceModifiers classOrInterfaceModifier
    (42) classDeclaration -> . normalClassDeclaration
    (43) classDeclaration -> . enumDeclaration
    (89) interfaceDeclaration -> . normalInterfaceDeclaration
    (90) interfaceDeclaration -> . annotationTypeDeclaration
    (329) block -> . BLPAREN blockStatements BRPAREN
    (330) block -> . BLPAREN BRPAREN
    (400) statementExpression -> . expression
    (337) variableModifiers -> . variableModifier
    (338) variableModifiers -> . variableModifiers variableModifier
    (205) type -> . type_body
    (206) type -> . primitiveType arrays
    (207) type -> . primitiveType
    (32) classOrInterfaceModifier -> . annotation
    (33) classOrInterfaceModifier -> . PUBLIC
    (34) classOrInterfaceModifier -> . PROTECTED
    (35) classOrInterfaceModifier -> . PRIVATE
    (36) classOrInterfaceModifier -> . ABSTRACT
    (37) classOrInterfaceModifier -> . STATIC
    (38) classOrInterfaceModifier -> . FINAL
    (39) classOrInterfaceModifier -> . STRICTFP
    (48) normalClassDeclaration -> . CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody
    (63) enumDeclaration -> . ENUM Identifier IMPLEMENTS_typeList enumBody
    (95) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody
    (308) annotationTypeDeclaration -> . AT INTERFACE Identifier annotationTypeBody
    (404) expression -> . conditionalExpression assignmentOperator_expression_empty
    (229) variableModifier -> . FINAL
    (230) variableModifier -> . annotation
    (208) type_body -> . Identifier classOrInterfaceTypeBody arrays
    (209) type_body -> . Identifier classOrInterfaceTypeBody
    (210) type_body -> . Identifier arrays
    (211) type_body -> . Identifier
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (287) annotation -> . AT annotationName annotationBody
    (420) conditionalExpression -> . conditionalOrExpression conditionalExpressionStats
    (421) conditionalExpression -> . conditionalOrExpression
    (425) conditionalOrExpression -> . conditionalAndExpression O_conditionalAndExpressions
    (426) conditionalOrExpression -> . conditionalAndExpression
    (430) conditionalAndExpression -> . inclusiveOrExpression O_inclusiveOrExpressions
    (431) conditionalAndExpression -> . inclusiveOrExpression
    (435) inclusiveOrExpression -> . exclusiveOrExpression V_exclusiveOrExpression
    (436) inclusiveOrExpression -> . exclusiveOrExpression
    (440) exclusiveOrExpression -> . andExpression CARET_andExpressions
    (441) exclusiveOrExpression -> . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    BRPAREN         shift and go to state 616
    ASSERT          shift and go to state 507
    IF              shift and go to state 513
    FOR             shift and go to state 492
    WHILE           shift and go to state 500
    DO              shift and go to state 506
    TRY             shift and go to state 494
    SWITCH          shift and go to state 501
    SYNCHRONIZED    shift and go to state 490
    RETURN          shift and go to state 489
    THROW           shift and go to state 514
    BREAK           shift and go to state 505
    CONTINUE        shift and go to state 496
    SEMI            shift and go to state 508
    Identifier      shift and go to state 495
    BLPAREN         shift and go to state 335
    PUBLIC          shift and go to state 24
    PROTECTED       shift and go to state 3
    PRIVATE         shift and go to state 9
    ABSTRACT        shift and go to state 2
    STATIC          shift and go to state 4
    FINAL           shift and go to state 491
    STRICTFP        shift and go to state 10
    CLASS           shift and go to state 12
    ENUM            shift and go to state 15
    INTERFACE       shift and go to state 23
    AT              shift and go to state 18
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    equalityExpression             shift and go to state 108
    localVariableDeclaration       shift and go to state 499
    inclusiveOrExpression          shift and go to state 99
    multiplicativeExpression       shift and go to state 128
    exclusiveOrExpression          shift and go to state 110
    conditionalAndExpression       shift and go to state 89
    FloatingPointLiteral           shift and go to state 119
    primitiveType                  shift and go to state 504
    blockStatement                 shift and go to state 615
    normalInterfaceDeclaration     shift and go to state 5
    shiftExpression                shift and go to state 130
    primary                        shift and go to state 111
    normalClassDeclaration         shift and go to state 7
    unaryExpression                shift and go to state 131
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    classOrInterfaceModifiers      shift and go to state 22
    statement                      shift and go to state 502
    type                           shift and go to state 503
    additiveExpression             shift and go to state 102
    instanceOfExpression           shift and go to state 96
    conditionalExpression          shift and go to state 266
    enumDeclaration                shift and go to state 13
    classOrInterfaceDeclaration    shift and go to state 486
    integerLiteral                 shift and go to state 98
    parExpression                  shift and go to state 132
    classOrInterfaceModifier       shift and go to state 20
    relationalExpression           shift and go to state 95
    variableModifier               shift and go to state 487
    classDeclaration               shift and go to state 17
    conditionalOrExpression        shift and go to state 109
    localVariableDeclarationStatement shift and go to state 488
    annotation                     shift and go to state 512
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    variableModifiers              shift and go to state 493
    type_body                      shift and go to state 77
    annotationTypeDeclaration      shift and go to state 21
    statementExpression            shift and go to state 509
    interfaceDeclaration           shift and go to state 1
    andExpression                  shift and go to state 106
    expression                     shift and go to state 497
    block                          shift and go to state 498

state 511

    (330) block -> BLPAREN BRPAREN .

    BRPAREN         reduce using rule 330 (block -> BLPAREN BRPAREN .)
    ASSERT          reduce using rule 330 (block -> BLPAREN BRPAREN .)
    IF              reduce using rule 330 (block -> BLPAREN BRPAREN .)
    FOR             reduce using rule 330 (block -> BLPAREN BRPAREN .)
    WHILE           reduce using rule 330 (block -> BLPAREN BRPAREN .)
    DO              reduce using rule 330 (block -> BLPAREN BRPAREN .)
    TRY             reduce using rule 330 (block -> BLPAREN BRPAREN .)
    SWITCH          reduce using rule 330 (block -> BLPAREN BRPAREN .)
    SYNCHRONIZED    reduce using rule 330 (block -> BLPAREN BRPAREN .)
    RETURN          reduce using rule 330 (block -> BLPAREN BRPAREN .)
    THROW           reduce using rule 330 (block -> BLPAREN BRPAREN .)
    BREAK           reduce using rule 330 (block -> BLPAREN BRPAREN .)
    CONTINUE        reduce using rule 330 (block -> BLPAREN BRPAREN .)
    SEMI            reduce using rule 330 (block -> BLPAREN BRPAREN .)
    Identifier      reduce using rule 330 (block -> BLPAREN BRPAREN .)
    BLPAREN         reduce using rule 330 (block -> BLPAREN BRPAREN .)
    PUBLIC          reduce using rule 330 (block -> BLPAREN BRPAREN .)
    PROTECTED       reduce using rule 330 (block -> BLPAREN BRPAREN .)
    PRIVATE         reduce using rule 330 (block -> BLPAREN BRPAREN .)
    ABSTRACT        reduce using rule 330 (block -> BLPAREN BRPAREN .)
    STATIC          reduce using rule 330 (block -> BLPAREN BRPAREN .)
    FINAL           reduce using rule 330 (block -> BLPAREN BRPAREN .)
    STRICTFP        reduce using rule 330 (block -> BLPAREN BRPAREN .)
    CLASS           reduce using rule 330 (block -> BLPAREN BRPAREN .)
    ENUM            reduce using rule 330 (block -> BLPAREN BRPAREN .)
    INTERFACE       reduce using rule 330 (block -> BLPAREN BRPAREN .)
    AT              reduce using rule 330 (block -> BLPAREN BRPAREN .)
    BOOLEAN         reduce using rule 330 (block -> BLPAREN BRPAREN .)
    CHAR            reduce using rule 330 (block -> BLPAREN BRPAREN .)
    BYTE            reduce using rule 330 (block -> BLPAREN BRPAREN .)
    SHORT           reduce using rule 330 (block -> BLPAREN BRPAREN .)
    INT             reduce using rule 330 (block -> BLPAREN BRPAREN .)
    LONG            reduce using rule 330 (block -> BLPAREN BRPAREN .)
    FLOAT           reduce using rule 330 (block -> BLPAREN BRPAREN .)
    DOUBLE          reduce using rule 330 (block -> BLPAREN BRPAREN .)
    PLUS            reduce using rule 330 (block -> BLPAREN BRPAREN .)
    DASH            reduce using rule 330 (block -> BLPAREN BRPAREN .)
    OP_INC          reduce using rule 330 (block -> BLPAREN BRPAREN .)
    OP_DEC          reduce using rule 330 (block -> BLPAREN BRPAREN .)
    TILDE           reduce using rule 330 (block -> BLPAREN BRPAREN .)
    EXCLAMATION     reduce using rule 330 (block -> BLPAREN BRPAREN .)
    LPAREN          reduce using rule 330 (block -> BLPAREN BRPAREN .)
    THIS            reduce using rule 330 (block -> BLPAREN BRPAREN .)
    SUPER           reduce using rule 330 (block -> BLPAREN BRPAREN .)
    NEW             reduce using rule 330 (block -> BLPAREN BRPAREN .)
    VOID            reduce using rule 330 (block -> BLPAREN BRPAREN .)
    CharacterLiteral reduce using rule 330 (block -> BLPAREN BRPAREN .)
    StringLiteral   reduce using rule 330 (block -> BLPAREN BRPAREN .)
    NULL            reduce using rule 330 (block -> BLPAREN BRPAREN .)
    LONG_NUMBER     reduce using rule 330 (block -> BLPAREN BRPAREN .)
    LONG_HEX_NUMBER reduce using rule 330 (block -> BLPAREN BRPAREN .)
    NON_INTEGER_1   reduce using rule 330 (block -> BLPAREN BRPAREN .)
    NON_INTEGER_2   reduce using rule 330 (block -> BLPAREN BRPAREN .)
    NON_INTEGER_3   reduce using rule 330 (block -> BLPAREN BRPAREN .)
    NON_INTEGER_4   reduce using rule 330 (block -> BLPAREN BRPAREN .)
    TRUE            reduce using rule 330 (block -> BLPAREN BRPAREN .)
    FALSE           reduce using rule 330 (block -> BLPAREN BRPAREN .)
    NATIVE          reduce using rule 330 (block -> BLPAREN BRPAREN .)
    TRANSIENT       reduce using rule 330 (block -> BLPAREN BRPAREN .)
    VOLATILE        reduce using rule 330 (block -> BLPAREN BRPAREN .)
    LESS            reduce using rule 330 (block -> BLPAREN BRPAREN .)
    CASE            reduce using rule 330 (block -> BLPAREN BRPAREN .)
    DEFAULT         reduce using rule 330 (block -> BLPAREN BRPAREN .)
    ELSE            reduce using rule 330 (block -> BLPAREN BRPAREN .)
    CATCH           reduce using rule 330 (block -> BLPAREN BRPAREN .)
    FINALLY         reduce using rule 330 (block -> BLPAREN BRPAREN .)


state 512

    (32) classOrInterfaceModifier -> annotation .
    (230) variableModifier -> annotation .

  ! reduce/reduce conflict for FINAL resolved using rule 32 (classOrInterfaceModifier -> annotation .)
  ! reduce/reduce conflict for AT resolved using rule 32 (classOrInterfaceModifier -> annotation .)
    PUBLIC          reduce using rule 32 (classOrInterfaceModifier -> annotation .)
    PROTECTED       reduce using rule 32 (classOrInterfaceModifier -> annotation .)
    PRIVATE         reduce using rule 32 (classOrInterfaceModifier -> annotation .)
    ABSTRACT        reduce using rule 32 (classOrInterfaceModifier -> annotation .)
    STATIC          reduce using rule 32 (classOrInterfaceModifier -> annotation .)
    FINAL           reduce using rule 32 (classOrInterfaceModifier -> annotation .)
    STRICTFP        reduce using rule 32 (classOrInterfaceModifier -> annotation .)
    CLASS           reduce using rule 32 (classOrInterfaceModifier -> annotation .)
    ENUM            reduce using rule 32 (classOrInterfaceModifier -> annotation .)
    INTERFACE       reduce using rule 32 (classOrInterfaceModifier -> annotation .)
    AT              reduce using rule 32 (classOrInterfaceModifier -> annotation .)
    Identifier      reduce using rule 230 (variableModifier -> annotation .)
    BOOLEAN         reduce using rule 230 (variableModifier -> annotation .)
    CHAR            reduce using rule 230 (variableModifier -> annotation .)
    BYTE            reduce using rule 230 (variableModifier -> annotation .)
    SHORT           reduce using rule 230 (variableModifier -> annotation .)
    INT             reduce using rule 230 (variableModifier -> annotation .)
    LONG            reduce using rule 230 (variableModifier -> annotation .)
    FLOAT           reduce using rule 230 (variableModifier -> annotation .)
    DOUBLE          reduce using rule 230 (variableModifier -> annotation .)

  ! FINAL           [ reduce using rule 230 (variableModifier -> annotation .) ]
  ! AT              [ reduce using rule 230 (variableModifier -> annotation .) ]


state 513

    (349) statement -> IF . parExpression statement else_statement
    (394) parExpression -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 597

    parExpression                  shift and go to state 617

state 514

    (359) statement -> THROW . expression SEMI
    (404) expression -> . conditionalExpression assignmentOperator_expression_empty
    (420) conditionalExpression -> . conditionalOrExpression conditionalExpressionStats
    (421) conditionalExpression -> . conditionalOrExpression
    (425) conditionalOrExpression -> . conditionalAndExpression O_conditionalAndExpressions
    (426) conditionalOrExpression -> . conditionalAndExpression
    (430) conditionalAndExpression -> . inclusiveOrExpression O_inclusiveOrExpressions
    (431) conditionalAndExpression -> . inclusiveOrExpression
    (435) inclusiveOrExpression -> . exclusiveOrExpression V_exclusiveOrExpression
    (436) inclusiveOrExpression -> . exclusiveOrExpression
    (440) exclusiveOrExpression -> . andExpression CARET_andExpressions
    (441) exclusiveOrExpression -> . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    equalityExpression             shift and go to state 108
    inclusiveOrExpression          shift and go to state 99
    multiplicativeExpression       shift and go to state 128
    exclusiveOrExpression          shift and go to state 110
    conditionalAndExpression       shift and go to state 89
    shiftExpression                shift and go to state 130
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    integerLiteral                 shift and go to state 98
    additiveExpression             shift and go to state 102
    instanceOfExpression           shift and go to state 96
    conditionalExpression          shift and go to state 266
    unaryExpression                shift and go to state 131
    FloatingPointLiteral           shift and go to state 119
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    relationalExpression           shift and go to state 95
    conditionalOrExpression        shift and go to state 109
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    primitiveType                  shift and go to state 122
    andExpression                  shift and go to state 106
    expression                     shift and go to state 618

state 515

    (64) enumBodyStatement -> enumConstants COMMA enumBodyDeclarations .

    BRPAREN         reduce using rule 64 (enumBodyStatement -> enumConstants COMMA enumBodyDeclarations .)


state 516

    (84) enumConstant -> annotations_once Identifier arguments_once . classBody_once
    (82) classBody_once -> . classBody
    (83) classBody_once -> .
    (101) classBody -> . BLPAREN classBodyDeclarations BRPAREN
    (102) classBody -> . BLPAREN BRPAREN

    COMMA           reduce using rule 83 (classBody_once -> .)
    SEMI            reduce using rule 83 (classBody_once -> .)
    BRPAREN         reduce using rule 83 (classBody_once -> .)
    BLPAREN         shift and go to state 306

    classBody                      shift and go to state 540
    classBody_once                 shift and go to state 619

state 517

    (80) arguments_once -> arguments .

    OP_INC          reduce using rule 80 (arguments_once -> arguments .)
    OP_DEC          reduce using rule 80 (arguments_once -> arguments .)
    DOT             reduce using rule 80 (arguments_once -> arguments .)
    FLPAREN         reduce using rule 80 (arguments_once -> arguments .)
    MULT            reduce using rule 80 (arguments_once -> arguments .)
    SLASH           reduce using rule 80 (arguments_once -> arguments .)
    PERCENT         reduce using rule 80 (arguments_once -> arguments .)
    PLUS            reduce using rule 80 (arguments_once -> arguments .)
    DASH            reduce using rule 80 (arguments_once -> arguments .)
    OP_SHR          reduce using rule 80 (arguments_once -> arguments .)
    OP_SHRR         reduce using rule 80 (arguments_once -> arguments .)
    OP_SHL          reduce using rule 80 (arguments_once -> arguments .)
    OP_LE           reduce using rule 80 (arguments_once -> arguments .)
    OP_GE           reduce using rule 80 (arguments_once -> arguments .)
    LESS            reduce using rule 80 (arguments_once -> arguments .)
    MORE            reduce using rule 80 (arguments_once -> arguments .)
    INSTANCEOF      reduce using rule 80 (arguments_once -> arguments .)
    OP_EQ           reduce using rule 80 (arguments_once -> arguments .)
    OP_NE           reduce using rule 80 (arguments_once -> arguments .)
    AND             reduce using rule 80 (arguments_once -> arguments .)
    CARET           reduce using rule 80 (arguments_once -> arguments .)
    VERTICAL        reduce using rule 80 (arguments_once -> arguments .)
    OP_LAND         reduce using rule 80 (arguments_once -> arguments .)
    OP_LOR          reduce using rule 80 (arguments_once -> arguments .)
    QUES            reduce using rule 80 (arguments_once -> arguments .)
    RPAREN          reduce using rule 80 (arguments_once -> arguments .)
    COMMA           reduce using rule 80 (arguments_once -> arguments .)
    BRPAREN         reduce using rule 80 (arguments_once -> arguments .)
    EQUALS          reduce using rule 80 (arguments_once -> arguments .)
    ASS_ADD         reduce using rule 80 (arguments_once -> arguments .)
    ASS_SUB         reduce using rule 80 (arguments_once -> arguments .)
    ASS_MUL         reduce using rule 80 (arguments_once -> arguments .)
    ASS_DIV         reduce using rule 80 (arguments_once -> arguments .)
    ASS_AND         reduce using rule 80 (arguments_once -> arguments .)
    ASS_OR          reduce using rule 80 (arguments_once -> arguments .)
    ASS_XOR         reduce using rule 80 (arguments_once -> arguments .)
    ASS_MOD         reduce using rule 80 (arguments_once -> arguments .)
    ASS_SHL         reduce using rule 80 (arguments_once -> arguments .)
    ASS_SHRR        reduce using rule 80 (arguments_once -> arguments .)
    ASS_SHR         reduce using rule 80 (arguments_once -> arguments .)
    FRPAREN         reduce using rule 80 (arguments_once -> arguments .)
    COLON           reduce using rule 80 (arguments_once -> arguments .)
    SEMI            reduce using rule 80 (arguments_once -> arguments .)
    BLPAREN         reduce using rule 80 (arguments_once -> arguments .)


state 518

    (517) FL_expression_FR -> FLPAREN expression FRPAREN .

    FLPAREN         reduce using rule 517 (FL_expression_FR -> FLPAREN expression FRPAREN .)
    OP_INC          reduce using rule 517 (FL_expression_FR -> FLPAREN expression FRPAREN .)
    OP_DEC          reduce using rule 517 (FL_expression_FR -> FLPAREN expression FRPAREN .)
    DOT             reduce using rule 517 (FL_expression_FR -> FLPAREN expression FRPAREN .)
    MULT            reduce using rule 517 (FL_expression_FR -> FLPAREN expression FRPAREN .)
    SLASH           reduce using rule 517 (FL_expression_FR -> FLPAREN expression FRPAREN .)
    PERCENT         reduce using rule 517 (FL_expression_FR -> FLPAREN expression FRPAREN .)
    PLUS            reduce using rule 517 (FL_expression_FR -> FLPAREN expression FRPAREN .)
    DASH            reduce using rule 517 (FL_expression_FR -> FLPAREN expression FRPAREN .)
    OP_SHR          reduce using rule 517 (FL_expression_FR -> FLPAREN expression FRPAREN .)
    OP_SHRR         reduce using rule 517 (FL_expression_FR -> FLPAREN expression FRPAREN .)
    OP_SHL          reduce using rule 517 (FL_expression_FR -> FLPAREN expression FRPAREN .)
    OP_LE           reduce using rule 517 (FL_expression_FR -> FLPAREN expression FRPAREN .)
    OP_GE           reduce using rule 517 (FL_expression_FR -> FLPAREN expression FRPAREN .)
    LESS            reduce using rule 517 (FL_expression_FR -> FLPAREN expression FRPAREN .)
    MORE            reduce using rule 517 (FL_expression_FR -> FLPAREN expression FRPAREN .)
    INSTANCEOF      reduce using rule 517 (FL_expression_FR -> FLPAREN expression FRPAREN .)
    OP_EQ           reduce using rule 517 (FL_expression_FR -> FLPAREN expression FRPAREN .)
    OP_NE           reduce using rule 517 (FL_expression_FR -> FLPAREN expression FRPAREN .)
    AND             reduce using rule 517 (FL_expression_FR -> FLPAREN expression FRPAREN .)
    CARET           reduce using rule 517 (FL_expression_FR -> FLPAREN expression FRPAREN .)
    VERTICAL        reduce using rule 517 (FL_expression_FR -> FLPAREN expression FRPAREN .)
    OP_LAND         reduce using rule 517 (FL_expression_FR -> FLPAREN expression FRPAREN .)
    OP_LOR          reduce using rule 517 (FL_expression_FR -> FLPAREN expression FRPAREN .)
    QUES            reduce using rule 517 (FL_expression_FR -> FLPAREN expression FRPAREN .)
    RPAREN          reduce using rule 517 (FL_expression_FR -> FLPAREN expression FRPAREN .)
    COMMA           reduce using rule 517 (FL_expression_FR -> FLPAREN expression FRPAREN .)
    BRPAREN         reduce using rule 517 (FL_expression_FR -> FLPAREN expression FRPAREN .)
    EQUALS          reduce using rule 517 (FL_expression_FR -> FLPAREN expression FRPAREN .)
    ASS_ADD         reduce using rule 517 (FL_expression_FR -> FLPAREN expression FRPAREN .)
    ASS_SUB         reduce using rule 517 (FL_expression_FR -> FLPAREN expression FRPAREN .)
    ASS_MUL         reduce using rule 517 (FL_expression_FR -> FLPAREN expression FRPAREN .)
    ASS_DIV         reduce using rule 517 (FL_expression_FR -> FLPAREN expression FRPAREN .)
    ASS_AND         reduce using rule 517 (FL_expression_FR -> FLPAREN expression FRPAREN .)
    ASS_OR          reduce using rule 517 (FL_expression_FR -> FLPAREN expression FRPAREN .)
    ASS_XOR         reduce using rule 517 (FL_expression_FR -> FLPAREN expression FRPAREN .)
    ASS_MOD         reduce using rule 517 (FL_expression_FR -> FLPAREN expression FRPAREN .)
    ASS_SHL         reduce using rule 517 (FL_expression_FR -> FLPAREN expression FRPAREN .)
    ASS_SHRR        reduce using rule 517 (FL_expression_FR -> FLPAREN expression FRPAREN .)
    ASS_SHR         reduce using rule 517 (FL_expression_FR -> FLPAREN expression FRPAREN .)
    FRPAREN         reduce using rule 517 (FL_expression_FR -> FLPAREN expression FRPAREN .)
    COLON           reduce using rule 517 (FL_expression_FR -> FLPAREN expression FRPAREN .)
    SEMI            reduce using rule 517 (FL_expression_FR -> FLPAREN expression FRPAREN .)


state 519

    (543) explicitGenericInvocation -> nonWildcardTypeArguments Identifier . arguments
    (555) arguments -> . LPAREN expressionList_once RPAREN

    LPAREN          shift and go to state 199

    arguments                      shift and go to state 620

state 520

    (535) innerCreator -> nonWildcardTypeArguments_empty . Identifier classCreatorRest

    Identifier      shift and go to state 621


state 521

    (533) nonWildcardTypeArguments_empty -> nonWildcardTypeArguments .

    Identifier      reduce using rule 533 (nonWildcardTypeArguments_empty -> nonWildcardTypeArguments .)


state 522

    (527) identifierSuffix -> DOT NEW innerCreator .

    OP_INC          reduce using rule 527 (identifierSuffix -> DOT NEW innerCreator .)
    OP_DEC          reduce using rule 527 (identifierSuffix -> DOT NEW innerCreator .)
    DOT             reduce using rule 527 (identifierSuffix -> DOT NEW innerCreator .)
    FLPAREN         reduce using rule 527 (identifierSuffix -> DOT NEW innerCreator .)
    MULT            reduce using rule 527 (identifierSuffix -> DOT NEW innerCreator .)
    SLASH           reduce using rule 527 (identifierSuffix -> DOT NEW innerCreator .)
    PERCENT         reduce using rule 527 (identifierSuffix -> DOT NEW innerCreator .)
    PLUS            reduce using rule 527 (identifierSuffix -> DOT NEW innerCreator .)
    DASH            reduce using rule 527 (identifierSuffix -> DOT NEW innerCreator .)
    OP_SHR          reduce using rule 527 (identifierSuffix -> DOT NEW innerCreator .)
    OP_SHRR         reduce using rule 527 (identifierSuffix -> DOT NEW innerCreator .)
    OP_SHL          reduce using rule 527 (identifierSuffix -> DOT NEW innerCreator .)
    OP_LE           reduce using rule 527 (identifierSuffix -> DOT NEW innerCreator .)
    OP_GE           reduce using rule 527 (identifierSuffix -> DOT NEW innerCreator .)
    LESS            reduce using rule 527 (identifierSuffix -> DOT NEW innerCreator .)
    MORE            reduce using rule 527 (identifierSuffix -> DOT NEW innerCreator .)
    INSTANCEOF      reduce using rule 527 (identifierSuffix -> DOT NEW innerCreator .)
    OP_EQ           reduce using rule 527 (identifierSuffix -> DOT NEW innerCreator .)
    OP_NE           reduce using rule 527 (identifierSuffix -> DOT NEW innerCreator .)
    AND             reduce using rule 527 (identifierSuffix -> DOT NEW innerCreator .)
    CARET           reduce using rule 527 (identifierSuffix -> DOT NEW innerCreator .)
    VERTICAL        reduce using rule 527 (identifierSuffix -> DOT NEW innerCreator .)
    OP_LAND         reduce using rule 527 (identifierSuffix -> DOT NEW innerCreator .)
    OP_LOR          reduce using rule 527 (identifierSuffix -> DOT NEW innerCreator .)
    QUES            reduce using rule 527 (identifierSuffix -> DOT NEW innerCreator .)
    EQUALS          reduce using rule 527 (identifierSuffix -> DOT NEW innerCreator .)
    ASS_ADD         reduce using rule 527 (identifierSuffix -> DOT NEW innerCreator .)
    ASS_SUB         reduce using rule 527 (identifierSuffix -> DOT NEW innerCreator .)
    ASS_MUL         reduce using rule 527 (identifierSuffix -> DOT NEW innerCreator .)
    ASS_DIV         reduce using rule 527 (identifierSuffix -> DOT NEW innerCreator .)
    ASS_AND         reduce using rule 527 (identifierSuffix -> DOT NEW innerCreator .)
    ASS_OR          reduce using rule 527 (identifierSuffix -> DOT NEW innerCreator .)
    ASS_XOR         reduce using rule 527 (identifierSuffix -> DOT NEW innerCreator .)
    ASS_MOD         reduce using rule 527 (identifierSuffix -> DOT NEW innerCreator .)
    ASS_SHL         reduce using rule 527 (identifierSuffix -> DOT NEW innerCreator .)
    ASS_SHRR        reduce using rule 527 (identifierSuffix -> DOT NEW innerCreator .)
    ASS_SHR         reduce using rule 527 (identifierSuffix -> DOT NEW innerCreator .)
    SEMI            reduce using rule 527 (identifierSuffix -> DOT NEW innerCreator .)
    COLON           reduce using rule 527 (identifierSuffix -> DOT NEW innerCreator .)
    RPAREN          reduce using rule 527 (identifierSuffix -> DOT NEW innerCreator .)
    COMMA           reduce using rule 527 (identifierSuffix -> DOT NEW innerCreator .)
    BRPAREN         reduce using rule 527 (identifierSuffix -> DOT NEW innerCreator .)
    FRPAREN         reduce using rule 527 (identifierSuffix -> DOT NEW innerCreator .)


state 523

    (526) identifierSuffix -> DOT SUPER arguments .

    OP_INC          reduce using rule 526 (identifierSuffix -> DOT SUPER arguments .)
    OP_DEC          reduce using rule 526 (identifierSuffix -> DOT SUPER arguments .)
    DOT             reduce using rule 526 (identifierSuffix -> DOT SUPER arguments .)
    FLPAREN         reduce using rule 526 (identifierSuffix -> DOT SUPER arguments .)
    MULT            reduce using rule 526 (identifierSuffix -> DOT SUPER arguments .)
    SLASH           reduce using rule 526 (identifierSuffix -> DOT SUPER arguments .)
    PERCENT         reduce using rule 526 (identifierSuffix -> DOT SUPER arguments .)
    PLUS            reduce using rule 526 (identifierSuffix -> DOT SUPER arguments .)
    DASH            reduce using rule 526 (identifierSuffix -> DOT SUPER arguments .)
    OP_SHR          reduce using rule 526 (identifierSuffix -> DOT SUPER arguments .)
    OP_SHRR         reduce using rule 526 (identifierSuffix -> DOT SUPER arguments .)
    OP_SHL          reduce using rule 526 (identifierSuffix -> DOT SUPER arguments .)
    OP_LE           reduce using rule 526 (identifierSuffix -> DOT SUPER arguments .)
    OP_GE           reduce using rule 526 (identifierSuffix -> DOT SUPER arguments .)
    LESS            reduce using rule 526 (identifierSuffix -> DOT SUPER arguments .)
    MORE            reduce using rule 526 (identifierSuffix -> DOT SUPER arguments .)
    INSTANCEOF      reduce using rule 526 (identifierSuffix -> DOT SUPER arguments .)
    OP_EQ           reduce using rule 526 (identifierSuffix -> DOT SUPER arguments .)
    OP_NE           reduce using rule 526 (identifierSuffix -> DOT SUPER arguments .)
    AND             reduce using rule 526 (identifierSuffix -> DOT SUPER arguments .)
    CARET           reduce using rule 526 (identifierSuffix -> DOT SUPER arguments .)
    VERTICAL        reduce using rule 526 (identifierSuffix -> DOT SUPER arguments .)
    OP_LAND         reduce using rule 526 (identifierSuffix -> DOT SUPER arguments .)
    OP_LOR          reduce using rule 526 (identifierSuffix -> DOT SUPER arguments .)
    QUES            reduce using rule 526 (identifierSuffix -> DOT SUPER arguments .)
    EQUALS          reduce using rule 526 (identifierSuffix -> DOT SUPER arguments .)
    ASS_ADD         reduce using rule 526 (identifierSuffix -> DOT SUPER arguments .)
    ASS_SUB         reduce using rule 526 (identifierSuffix -> DOT SUPER arguments .)
    ASS_MUL         reduce using rule 526 (identifierSuffix -> DOT SUPER arguments .)
    ASS_DIV         reduce using rule 526 (identifierSuffix -> DOT SUPER arguments .)
    ASS_AND         reduce using rule 526 (identifierSuffix -> DOT SUPER arguments .)
    ASS_OR          reduce using rule 526 (identifierSuffix -> DOT SUPER arguments .)
    ASS_XOR         reduce using rule 526 (identifierSuffix -> DOT SUPER arguments .)
    ASS_MOD         reduce using rule 526 (identifierSuffix -> DOT SUPER arguments .)
    ASS_SHL         reduce using rule 526 (identifierSuffix -> DOT SUPER arguments .)
    ASS_SHRR        reduce using rule 526 (identifierSuffix -> DOT SUPER arguments .)
    ASS_SHR         reduce using rule 526 (identifierSuffix -> DOT SUPER arguments .)
    SEMI            reduce using rule 526 (identifierSuffix -> DOT SUPER arguments .)
    COLON           reduce using rule 526 (identifierSuffix -> DOT SUPER arguments .)
    RPAREN          reduce using rule 526 (identifierSuffix -> DOT SUPER arguments .)
    COMMA           reduce using rule 526 (identifierSuffix -> DOT SUPER arguments .)
    BRPAREN         reduce using rule 526 (identifierSuffix -> DOT SUPER arguments .)
    FRPAREN         reduce using rule 526 (identifierSuffix -> DOT SUPER arguments .)


state 524

    (555) arguments -> LPAREN expressionList_once RPAREN .

    OP_INC          reduce using rule 555 (arguments -> LPAREN expressionList_once RPAREN .)
    OP_DEC          reduce using rule 555 (arguments -> LPAREN expressionList_once RPAREN .)
    DOT             reduce using rule 555 (arguments -> LPAREN expressionList_once RPAREN .)
    FLPAREN         reduce using rule 555 (arguments -> LPAREN expressionList_once RPAREN .)
    MULT            reduce using rule 555 (arguments -> LPAREN expressionList_once RPAREN .)
    SLASH           reduce using rule 555 (arguments -> LPAREN expressionList_once RPAREN .)
    PERCENT         reduce using rule 555 (arguments -> LPAREN expressionList_once RPAREN .)
    PLUS            reduce using rule 555 (arguments -> LPAREN expressionList_once RPAREN .)
    DASH            reduce using rule 555 (arguments -> LPAREN expressionList_once RPAREN .)
    OP_SHR          reduce using rule 555 (arguments -> LPAREN expressionList_once RPAREN .)
    OP_SHRR         reduce using rule 555 (arguments -> LPAREN expressionList_once RPAREN .)
    OP_SHL          reduce using rule 555 (arguments -> LPAREN expressionList_once RPAREN .)
    OP_LE           reduce using rule 555 (arguments -> LPAREN expressionList_once RPAREN .)
    OP_GE           reduce using rule 555 (arguments -> LPAREN expressionList_once RPAREN .)
    LESS            reduce using rule 555 (arguments -> LPAREN expressionList_once RPAREN .)
    MORE            reduce using rule 555 (arguments -> LPAREN expressionList_once RPAREN .)
    INSTANCEOF      reduce using rule 555 (arguments -> LPAREN expressionList_once RPAREN .)
    OP_EQ           reduce using rule 555 (arguments -> LPAREN expressionList_once RPAREN .)
    OP_NE           reduce using rule 555 (arguments -> LPAREN expressionList_once RPAREN .)
    AND             reduce using rule 555 (arguments -> LPAREN expressionList_once RPAREN .)
    CARET           reduce using rule 555 (arguments -> LPAREN expressionList_once RPAREN .)
    VERTICAL        reduce using rule 555 (arguments -> LPAREN expressionList_once RPAREN .)
    OP_LAND         reduce using rule 555 (arguments -> LPAREN expressionList_once RPAREN .)
    OP_LOR          reduce using rule 555 (arguments -> LPAREN expressionList_once RPAREN .)
    QUES            reduce using rule 555 (arguments -> LPAREN expressionList_once RPAREN .)
    RPAREN          reduce using rule 555 (arguments -> LPAREN expressionList_once RPAREN .)
    COMMA           reduce using rule 555 (arguments -> LPAREN expressionList_once RPAREN .)
    BRPAREN         reduce using rule 555 (arguments -> LPAREN expressionList_once RPAREN .)
    EQUALS          reduce using rule 555 (arguments -> LPAREN expressionList_once RPAREN .)
    ASS_ADD         reduce using rule 555 (arguments -> LPAREN expressionList_once RPAREN .)
    ASS_SUB         reduce using rule 555 (arguments -> LPAREN expressionList_once RPAREN .)
    ASS_MUL         reduce using rule 555 (arguments -> LPAREN expressionList_once RPAREN .)
    ASS_DIV         reduce using rule 555 (arguments -> LPAREN expressionList_once RPAREN .)
    ASS_AND         reduce using rule 555 (arguments -> LPAREN expressionList_once RPAREN .)
    ASS_OR          reduce using rule 555 (arguments -> LPAREN expressionList_once RPAREN .)
    ASS_XOR         reduce using rule 555 (arguments -> LPAREN expressionList_once RPAREN .)
    ASS_MOD         reduce using rule 555 (arguments -> LPAREN expressionList_once RPAREN .)
    ASS_SHL         reduce using rule 555 (arguments -> LPAREN expressionList_once RPAREN .)
    ASS_SHRR        reduce using rule 555 (arguments -> LPAREN expressionList_once RPAREN .)
    ASS_SHR         reduce using rule 555 (arguments -> LPAREN expressionList_once RPAREN .)
    FRPAREN         reduce using rule 555 (arguments -> LPAREN expressionList_once RPAREN .)
    COLON           reduce using rule 555 (arguments -> LPAREN expressionList_once RPAREN .)
    SEMI            reduce using rule 555 (arguments -> LPAREN expressionList_once RPAREN .)
    BLPAREN         reduce using rule 555 (arguments -> LPAREN expressionList_once RPAREN .)


state 525

    (398) expressionList -> expression COMMA_expressions .
    (397) COMMA_expressions -> COMMA_expressions . COMMA_expression
    (395) COMMA_expression -> . COMMA expression

    RPAREN          reduce using rule 398 (expressionList -> expression COMMA_expressions .)
    SEMI            reduce using rule 398 (expressionList -> expression COMMA_expressions .)
    COMMA           shift and go to state 527

    COMMA_expression               shift and go to state 622

state 526

    (396) COMMA_expressions -> COMMA_expression .

    COMMA           reduce using rule 396 (COMMA_expressions -> COMMA_expression .)
    RPAREN          reduce using rule 396 (COMMA_expressions -> COMMA_expression .)
    SEMI            reduce using rule 396 (COMMA_expressions -> COMMA_expression .)


state 527

    (395) COMMA_expression -> COMMA . expression
    (404) expression -> . conditionalExpression assignmentOperator_expression_empty
    (420) conditionalExpression -> . conditionalOrExpression conditionalExpressionStats
    (421) conditionalExpression -> . conditionalOrExpression
    (425) conditionalOrExpression -> . conditionalAndExpression O_conditionalAndExpressions
    (426) conditionalOrExpression -> . conditionalAndExpression
    (430) conditionalAndExpression -> . inclusiveOrExpression O_inclusiveOrExpressions
    (431) conditionalAndExpression -> . inclusiveOrExpression
    (435) inclusiveOrExpression -> . exclusiveOrExpression V_exclusiveOrExpression
    (436) inclusiveOrExpression -> . exclusiveOrExpression
    (440) exclusiveOrExpression -> . andExpression CARET_andExpressions
    (441) exclusiveOrExpression -> . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    equalityExpression             shift and go to state 108
    inclusiveOrExpression          shift and go to state 99
    multiplicativeExpression       shift and go to state 128
    exclusiveOrExpression          shift and go to state 110
    conditionalAndExpression       shift and go to state 89
    shiftExpression                shift and go to state 130
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    integerLiteral                 shift and go to state 98
    additiveExpression             shift and go to state 102
    instanceOfExpression           shift and go to state 96
    conditionalExpression          shift and go to state 266
    unaryExpression                shift and go to state 131
    FloatingPointLiteral           shift and go to state 119
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    relationalExpression           shift and go to state 95
    conditionalOrExpression        shift and go to state 109
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    primitiveType                  shift and go to state 122
    andExpression                  shift and go to state 106
    expression                     shift and go to state 623

state 528

    (520) identifierSuffix -> arrays DOT CLASS .

    OP_INC          reduce using rule 520 (identifierSuffix -> arrays DOT CLASS .)
    OP_DEC          reduce using rule 520 (identifierSuffix -> arrays DOT CLASS .)
    DOT             reduce using rule 520 (identifierSuffix -> arrays DOT CLASS .)
    FLPAREN         reduce using rule 520 (identifierSuffix -> arrays DOT CLASS .)
    MULT            reduce using rule 520 (identifierSuffix -> arrays DOT CLASS .)
    SLASH           reduce using rule 520 (identifierSuffix -> arrays DOT CLASS .)
    PERCENT         reduce using rule 520 (identifierSuffix -> arrays DOT CLASS .)
    PLUS            reduce using rule 520 (identifierSuffix -> arrays DOT CLASS .)
    DASH            reduce using rule 520 (identifierSuffix -> arrays DOT CLASS .)
    OP_SHR          reduce using rule 520 (identifierSuffix -> arrays DOT CLASS .)
    OP_SHRR         reduce using rule 520 (identifierSuffix -> arrays DOT CLASS .)
    OP_SHL          reduce using rule 520 (identifierSuffix -> arrays DOT CLASS .)
    OP_LE           reduce using rule 520 (identifierSuffix -> arrays DOT CLASS .)
    OP_GE           reduce using rule 520 (identifierSuffix -> arrays DOT CLASS .)
    LESS            reduce using rule 520 (identifierSuffix -> arrays DOT CLASS .)
    MORE            reduce using rule 520 (identifierSuffix -> arrays DOT CLASS .)
    INSTANCEOF      reduce using rule 520 (identifierSuffix -> arrays DOT CLASS .)
    OP_EQ           reduce using rule 520 (identifierSuffix -> arrays DOT CLASS .)
    OP_NE           reduce using rule 520 (identifierSuffix -> arrays DOT CLASS .)
    AND             reduce using rule 520 (identifierSuffix -> arrays DOT CLASS .)
    CARET           reduce using rule 520 (identifierSuffix -> arrays DOT CLASS .)
    VERTICAL        reduce using rule 520 (identifierSuffix -> arrays DOT CLASS .)
    OP_LAND         reduce using rule 520 (identifierSuffix -> arrays DOT CLASS .)
    OP_LOR          reduce using rule 520 (identifierSuffix -> arrays DOT CLASS .)
    QUES            reduce using rule 520 (identifierSuffix -> arrays DOT CLASS .)
    EQUALS          reduce using rule 520 (identifierSuffix -> arrays DOT CLASS .)
    ASS_ADD         reduce using rule 520 (identifierSuffix -> arrays DOT CLASS .)
    ASS_SUB         reduce using rule 520 (identifierSuffix -> arrays DOT CLASS .)
    ASS_MUL         reduce using rule 520 (identifierSuffix -> arrays DOT CLASS .)
    ASS_DIV         reduce using rule 520 (identifierSuffix -> arrays DOT CLASS .)
    ASS_AND         reduce using rule 520 (identifierSuffix -> arrays DOT CLASS .)
    ASS_OR          reduce using rule 520 (identifierSuffix -> arrays DOT CLASS .)
    ASS_XOR         reduce using rule 520 (identifierSuffix -> arrays DOT CLASS .)
    ASS_MOD         reduce using rule 520 (identifierSuffix -> arrays DOT CLASS .)
    ASS_SHL         reduce using rule 520 (identifierSuffix -> arrays DOT CLASS .)
    ASS_SHRR        reduce using rule 520 (identifierSuffix -> arrays DOT CLASS .)
    ASS_SHR         reduce using rule 520 (identifierSuffix -> arrays DOT CLASS .)
    SEMI            reduce using rule 520 (identifierSuffix -> arrays DOT CLASS .)
    COLON           reduce using rule 520 (identifierSuffix -> arrays DOT CLASS .)
    RPAREN          reduce using rule 520 (identifierSuffix -> arrays DOT CLASS .)
    COMMA           reduce using rule 520 (identifierSuffix -> arrays DOT CLASS .)
    BRPAREN         reduce using rule 520 (identifierSuffix -> arrays DOT CLASS .)
    FRPAREN         reduce using rule 520 (identifierSuffix -> arrays DOT CLASS .)


state 529

    (307) elementValueArrayInitializer -> BLPAREN elementValueStatement COMMA_OR_empty BRPAREN .

    RPAREN          reduce using rule 307 (elementValueArrayInitializer -> BLPAREN elementValueStatement COMMA_OR_empty BRPAREN .)
    SEMI            reduce using rule 307 (elementValueArrayInitializer -> BLPAREN elementValueStatement COMMA_OR_empty BRPAREN .)
    COMMA           reduce using rule 307 (elementValueArrayInitializer -> BLPAREN elementValueStatement COMMA_OR_empty BRPAREN .)
    BRPAREN         reduce using rule 307 (elementValueArrayInitializer -> BLPAREN elementValueStatement COMMA_OR_empty BRPAREN .)


state 530

    (301) elementValueBodys -> elementValueBodys elementValueBody .

    COMMA           reduce using rule 301 (elementValueBodys -> elementValueBodys elementValueBody .)
    BRPAREN         reduce using rule 301 (elementValueBodys -> elementValueBodys elementValueBody .)


state 531

    (299) elementValueBody -> COMMA elementValue .

    COMMA           reduce using rule 299 (elementValueBody -> COMMA elementValue .)
    BRPAREN         reduce using rule 299 (elementValueBody -> COMMA elementValue .)


state 532

    (417) conditionalExpressionStat -> QUES expression COLON . expression
    (404) expression -> . conditionalExpression assignmentOperator_expression_empty
    (420) conditionalExpression -> . conditionalOrExpression conditionalExpressionStats
    (421) conditionalExpression -> . conditionalOrExpression
    (425) conditionalOrExpression -> . conditionalAndExpression O_conditionalAndExpressions
    (426) conditionalOrExpression -> . conditionalAndExpression
    (430) conditionalAndExpression -> . inclusiveOrExpression O_inclusiveOrExpressions
    (431) conditionalAndExpression -> . inclusiveOrExpression
    (435) inclusiveOrExpression -> . exclusiveOrExpression V_exclusiveOrExpression
    (436) inclusiveOrExpression -> . exclusiveOrExpression
    (440) exclusiveOrExpression -> . andExpression CARET_andExpressions
    (441) exclusiveOrExpression -> . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    equalityExpression             shift and go to state 108
    inclusiveOrExpression          shift and go to state 99
    multiplicativeExpression       shift and go to state 128
    exclusiveOrExpression          shift and go to state 110
    conditionalAndExpression       shift and go to state 89
    shiftExpression                shift and go to state 130
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    integerLiteral                 shift and go to state 98
    additiveExpression             shift and go to state 102
    instanceOfExpression           shift and go to state 96
    conditionalExpression          shift and go to state 266
    unaryExpression                shift and go to state 131
    FloatingPointLiteral           shift and go to state 119
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    relationalExpression           shift and go to state 95
    conditionalOrExpression        shift and go to state 109
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    primitiveType                  shift and go to state 122
    andExpression                  shift and go to state 106
    expression                     shift and go to state 624

state 533

    (550) selector -> FLPAREN expression FRPAREN .

    OP_INC          reduce using rule 550 (selector -> FLPAREN expression FRPAREN .)
    OP_DEC          reduce using rule 550 (selector -> FLPAREN expression FRPAREN .)
    DOT             reduce using rule 550 (selector -> FLPAREN expression FRPAREN .)
    FLPAREN         reduce using rule 550 (selector -> FLPAREN expression FRPAREN .)
    MULT            reduce using rule 550 (selector -> FLPAREN expression FRPAREN .)
    SLASH           reduce using rule 550 (selector -> FLPAREN expression FRPAREN .)
    PERCENT         reduce using rule 550 (selector -> FLPAREN expression FRPAREN .)
    PLUS            reduce using rule 550 (selector -> FLPAREN expression FRPAREN .)
    DASH            reduce using rule 550 (selector -> FLPAREN expression FRPAREN .)
    OP_SHR          reduce using rule 550 (selector -> FLPAREN expression FRPAREN .)
    OP_SHRR         reduce using rule 550 (selector -> FLPAREN expression FRPAREN .)
    OP_SHL          reduce using rule 550 (selector -> FLPAREN expression FRPAREN .)
    OP_LE           reduce using rule 550 (selector -> FLPAREN expression FRPAREN .)
    OP_GE           reduce using rule 550 (selector -> FLPAREN expression FRPAREN .)
    LESS            reduce using rule 550 (selector -> FLPAREN expression FRPAREN .)
    MORE            reduce using rule 550 (selector -> FLPAREN expression FRPAREN .)
    INSTANCEOF      reduce using rule 550 (selector -> FLPAREN expression FRPAREN .)
    OP_EQ           reduce using rule 550 (selector -> FLPAREN expression FRPAREN .)
    OP_NE           reduce using rule 550 (selector -> FLPAREN expression FRPAREN .)
    AND             reduce using rule 550 (selector -> FLPAREN expression FRPAREN .)
    CARET           reduce using rule 550 (selector -> FLPAREN expression FRPAREN .)
    VERTICAL        reduce using rule 550 (selector -> FLPAREN expression FRPAREN .)
    OP_LAND         reduce using rule 550 (selector -> FLPAREN expression FRPAREN .)
    OP_LOR          reduce using rule 550 (selector -> FLPAREN expression FRPAREN .)
    QUES            reduce using rule 550 (selector -> FLPAREN expression FRPAREN .)
    RPAREN          reduce using rule 550 (selector -> FLPAREN expression FRPAREN .)
    COMMA           reduce using rule 550 (selector -> FLPAREN expression FRPAREN .)
    BRPAREN         reduce using rule 550 (selector -> FLPAREN expression FRPAREN .)
    EQUALS          reduce using rule 550 (selector -> FLPAREN expression FRPAREN .)
    ASS_ADD         reduce using rule 550 (selector -> FLPAREN expression FRPAREN .)
    ASS_SUB         reduce using rule 550 (selector -> FLPAREN expression FRPAREN .)
    ASS_MUL         reduce using rule 550 (selector -> FLPAREN expression FRPAREN .)
    ASS_DIV         reduce using rule 550 (selector -> FLPAREN expression FRPAREN .)
    ASS_AND         reduce using rule 550 (selector -> FLPAREN expression FRPAREN .)
    ASS_OR          reduce using rule 550 (selector -> FLPAREN expression FRPAREN .)
    ASS_XOR         reduce using rule 550 (selector -> FLPAREN expression FRPAREN .)
    ASS_MOD         reduce using rule 550 (selector -> FLPAREN expression FRPAREN .)
    ASS_SHL         reduce using rule 550 (selector -> FLPAREN expression FRPAREN .)
    ASS_SHRR        reduce using rule 550 (selector -> FLPAREN expression FRPAREN .)
    ASS_SHR         reduce using rule 550 (selector -> FLPAREN expression FRPAREN .)
    FRPAREN         reduce using rule 550 (selector -> FLPAREN expression FRPAREN .)
    COLON           reduce using rule 550 (selector -> FLPAREN expression FRPAREN .)
    SEMI            reduce using rule 550 (selector -> FLPAREN expression FRPAREN .)


state 534

    (549) selector -> DOT NEW innerCreator .

    OP_INC          reduce using rule 549 (selector -> DOT NEW innerCreator .)
    OP_DEC          reduce using rule 549 (selector -> DOT NEW innerCreator .)
    DOT             reduce using rule 549 (selector -> DOT NEW innerCreator .)
    FLPAREN         reduce using rule 549 (selector -> DOT NEW innerCreator .)
    MULT            reduce using rule 549 (selector -> DOT NEW innerCreator .)
    SLASH           reduce using rule 549 (selector -> DOT NEW innerCreator .)
    PERCENT         reduce using rule 549 (selector -> DOT NEW innerCreator .)
    PLUS            reduce using rule 549 (selector -> DOT NEW innerCreator .)
    DASH            reduce using rule 549 (selector -> DOT NEW innerCreator .)
    OP_SHR          reduce using rule 549 (selector -> DOT NEW innerCreator .)
    OP_SHRR         reduce using rule 549 (selector -> DOT NEW innerCreator .)
    OP_SHL          reduce using rule 549 (selector -> DOT NEW innerCreator .)
    OP_LE           reduce using rule 549 (selector -> DOT NEW innerCreator .)
    OP_GE           reduce using rule 549 (selector -> DOT NEW innerCreator .)
    LESS            reduce using rule 549 (selector -> DOT NEW innerCreator .)
    MORE            reduce using rule 549 (selector -> DOT NEW innerCreator .)
    INSTANCEOF      reduce using rule 549 (selector -> DOT NEW innerCreator .)
    OP_EQ           reduce using rule 549 (selector -> DOT NEW innerCreator .)
    OP_NE           reduce using rule 549 (selector -> DOT NEW innerCreator .)
    AND             reduce using rule 549 (selector -> DOT NEW innerCreator .)
    CARET           reduce using rule 549 (selector -> DOT NEW innerCreator .)
    VERTICAL        reduce using rule 549 (selector -> DOT NEW innerCreator .)
    OP_LAND         reduce using rule 549 (selector -> DOT NEW innerCreator .)
    OP_LOR          reduce using rule 549 (selector -> DOT NEW innerCreator .)
    QUES            reduce using rule 549 (selector -> DOT NEW innerCreator .)
    RPAREN          reduce using rule 549 (selector -> DOT NEW innerCreator .)
    COMMA           reduce using rule 549 (selector -> DOT NEW innerCreator .)
    BRPAREN         reduce using rule 549 (selector -> DOT NEW innerCreator .)
    EQUALS          reduce using rule 549 (selector -> DOT NEW innerCreator .)
    ASS_ADD         reduce using rule 549 (selector -> DOT NEW innerCreator .)
    ASS_SUB         reduce using rule 549 (selector -> DOT NEW innerCreator .)
    ASS_MUL         reduce using rule 549 (selector -> DOT NEW innerCreator .)
    ASS_DIV         reduce using rule 549 (selector -> DOT NEW innerCreator .)
    ASS_AND         reduce using rule 549 (selector -> DOT NEW innerCreator .)
    ASS_OR          reduce using rule 549 (selector -> DOT NEW innerCreator .)
    ASS_XOR         reduce using rule 549 (selector -> DOT NEW innerCreator .)
    ASS_MOD         reduce using rule 549 (selector -> DOT NEW innerCreator .)
    ASS_SHL         reduce using rule 549 (selector -> DOT NEW innerCreator .)
    ASS_SHRR        reduce using rule 549 (selector -> DOT NEW innerCreator .)
    ASS_SHR         reduce using rule 549 (selector -> DOT NEW innerCreator .)
    FRPAREN         reduce using rule 549 (selector -> DOT NEW innerCreator .)
    COLON           reduce using rule 549 (selector -> DOT NEW innerCreator .)
    SEMI            reduce using rule 549 (selector -> DOT NEW innerCreator .)


state 535

    (545) selector -> DOT Identifier arguments_once .

    OP_INC          reduce using rule 545 (selector -> DOT Identifier arguments_once .)
    OP_DEC          reduce using rule 545 (selector -> DOT Identifier arguments_once .)
    DOT             reduce using rule 545 (selector -> DOT Identifier arguments_once .)
    FLPAREN         reduce using rule 545 (selector -> DOT Identifier arguments_once .)
    MULT            reduce using rule 545 (selector -> DOT Identifier arguments_once .)
    SLASH           reduce using rule 545 (selector -> DOT Identifier arguments_once .)
    PERCENT         reduce using rule 545 (selector -> DOT Identifier arguments_once .)
    PLUS            reduce using rule 545 (selector -> DOT Identifier arguments_once .)
    DASH            reduce using rule 545 (selector -> DOT Identifier arguments_once .)
    OP_SHR          reduce using rule 545 (selector -> DOT Identifier arguments_once .)
    OP_SHRR         reduce using rule 545 (selector -> DOT Identifier arguments_once .)
    OP_SHL          reduce using rule 545 (selector -> DOT Identifier arguments_once .)
    OP_LE           reduce using rule 545 (selector -> DOT Identifier arguments_once .)
    OP_GE           reduce using rule 545 (selector -> DOT Identifier arguments_once .)
    LESS            reduce using rule 545 (selector -> DOT Identifier arguments_once .)
    MORE            reduce using rule 545 (selector -> DOT Identifier arguments_once .)
    INSTANCEOF      reduce using rule 545 (selector -> DOT Identifier arguments_once .)
    OP_EQ           reduce using rule 545 (selector -> DOT Identifier arguments_once .)
    OP_NE           reduce using rule 545 (selector -> DOT Identifier arguments_once .)
    AND             reduce using rule 545 (selector -> DOT Identifier arguments_once .)
    CARET           reduce using rule 545 (selector -> DOT Identifier arguments_once .)
    VERTICAL        reduce using rule 545 (selector -> DOT Identifier arguments_once .)
    OP_LAND         reduce using rule 545 (selector -> DOT Identifier arguments_once .)
    OP_LOR          reduce using rule 545 (selector -> DOT Identifier arguments_once .)
    QUES            reduce using rule 545 (selector -> DOT Identifier arguments_once .)
    RPAREN          reduce using rule 545 (selector -> DOT Identifier arguments_once .)
    COMMA           reduce using rule 545 (selector -> DOT Identifier arguments_once .)
    BRPAREN         reduce using rule 545 (selector -> DOT Identifier arguments_once .)
    EQUALS          reduce using rule 545 (selector -> DOT Identifier arguments_once .)
    ASS_ADD         reduce using rule 545 (selector -> DOT Identifier arguments_once .)
    ASS_SUB         reduce using rule 545 (selector -> DOT Identifier arguments_once .)
    ASS_MUL         reduce using rule 545 (selector -> DOT Identifier arguments_once .)
    ASS_DIV         reduce using rule 545 (selector -> DOT Identifier arguments_once .)
    ASS_AND         reduce using rule 545 (selector -> DOT Identifier arguments_once .)
    ASS_OR          reduce using rule 545 (selector -> DOT Identifier arguments_once .)
    ASS_XOR         reduce using rule 545 (selector -> DOT Identifier arguments_once .)
    ASS_MOD         reduce using rule 545 (selector -> DOT Identifier arguments_once .)
    ASS_SHL         reduce using rule 545 (selector -> DOT Identifier arguments_once .)
    ASS_SHRR        reduce using rule 545 (selector -> DOT Identifier arguments_once .)
    ASS_SHR         reduce using rule 545 (selector -> DOT Identifier arguments_once .)
    FRPAREN         reduce using rule 545 (selector -> DOT Identifier arguments_once .)
    COLON           reduce using rule 545 (selector -> DOT Identifier arguments_once .)
    SEMI            reduce using rule 545 (selector -> DOT Identifier arguments_once .)


state 536

    (548) selector -> DOT SUPER superSuffix .

    OP_INC          reduce using rule 548 (selector -> DOT SUPER superSuffix .)
    OP_DEC          reduce using rule 548 (selector -> DOT SUPER superSuffix .)
    DOT             reduce using rule 548 (selector -> DOT SUPER superSuffix .)
    FLPAREN         reduce using rule 548 (selector -> DOT SUPER superSuffix .)
    MULT            reduce using rule 548 (selector -> DOT SUPER superSuffix .)
    SLASH           reduce using rule 548 (selector -> DOT SUPER superSuffix .)
    PERCENT         reduce using rule 548 (selector -> DOT SUPER superSuffix .)
    PLUS            reduce using rule 548 (selector -> DOT SUPER superSuffix .)
    DASH            reduce using rule 548 (selector -> DOT SUPER superSuffix .)
    OP_SHR          reduce using rule 548 (selector -> DOT SUPER superSuffix .)
    OP_SHRR         reduce using rule 548 (selector -> DOT SUPER superSuffix .)
    OP_SHL          reduce using rule 548 (selector -> DOT SUPER superSuffix .)
    OP_LE           reduce using rule 548 (selector -> DOT SUPER superSuffix .)
    OP_GE           reduce using rule 548 (selector -> DOT SUPER superSuffix .)
    LESS            reduce using rule 548 (selector -> DOT SUPER superSuffix .)
    MORE            reduce using rule 548 (selector -> DOT SUPER superSuffix .)
    INSTANCEOF      reduce using rule 548 (selector -> DOT SUPER superSuffix .)
    OP_EQ           reduce using rule 548 (selector -> DOT SUPER superSuffix .)
    OP_NE           reduce using rule 548 (selector -> DOT SUPER superSuffix .)
    AND             reduce using rule 548 (selector -> DOT SUPER superSuffix .)
    CARET           reduce using rule 548 (selector -> DOT SUPER superSuffix .)
    VERTICAL        reduce using rule 548 (selector -> DOT SUPER superSuffix .)
    OP_LAND         reduce using rule 548 (selector -> DOT SUPER superSuffix .)
    OP_LOR          reduce using rule 548 (selector -> DOT SUPER superSuffix .)
    QUES            reduce using rule 548 (selector -> DOT SUPER superSuffix .)
    RPAREN          reduce using rule 548 (selector -> DOT SUPER superSuffix .)
    COMMA           reduce using rule 548 (selector -> DOT SUPER superSuffix .)
    BRPAREN         reduce using rule 548 (selector -> DOT SUPER superSuffix .)
    EQUALS          reduce using rule 548 (selector -> DOT SUPER superSuffix .)
    ASS_ADD         reduce using rule 548 (selector -> DOT SUPER superSuffix .)
    ASS_SUB         reduce using rule 548 (selector -> DOT SUPER superSuffix .)
    ASS_MUL         reduce using rule 548 (selector -> DOT SUPER superSuffix .)
    ASS_DIV         reduce using rule 548 (selector -> DOT SUPER superSuffix .)
    ASS_AND         reduce using rule 548 (selector -> DOT SUPER superSuffix .)
    ASS_OR          reduce using rule 548 (selector -> DOT SUPER superSuffix .)
    ASS_XOR         reduce using rule 548 (selector -> DOT SUPER superSuffix .)
    ASS_MOD         reduce using rule 548 (selector -> DOT SUPER superSuffix .)
    ASS_SHL         reduce using rule 548 (selector -> DOT SUPER superSuffix .)
    ASS_SHRR        reduce using rule 548 (selector -> DOT SUPER superSuffix .)
    ASS_SHR         reduce using rule 548 (selector -> DOT SUPER superSuffix .)
    FRPAREN         reduce using rule 548 (selector -> DOT SUPER superSuffix .)
    COLON           reduce using rule 548 (selector -> DOT SUPER superSuffix .)
    SEMI            reduce using rule 548 (selector -> DOT SUPER superSuffix .)


state 537

    (536) arrayCreatorRest -> FLPAREN FRPAREN . arrays arrayInitializer
    (537) arrayCreatorRest -> FLPAREN FRPAREN . arrayInitializer
    (138) arrays -> . arrays array
    (139) arrays -> . array
    (189) arrayInitializer -> . BLPAREN array_body BRPAREN
    (137) array -> . FLPAREN FRPAREN

    BLPAREN         shift and go to state 627
    FLPAREN         shift and go to state 153

    arrays                         shift and go to state 626
    arrayInitializer               shift and go to state 625
    array                          shift and go to state 154

state 538

    (538) arrayCreatorRest -> FLPAREN expression . FRPAREN FL_expression_FRs arrays
    (539) arrayCreatorRest -> FLPAREN expression . FRPAREN
    (540) arrayCreatorRest -> FLPAREN expression . FRPAREN FL_expression_FRs
    (541) arrayCreatorRest -> FLPAREN expression . FRPAREN arrays

    FRPAREN         shift and go to state 628


state 539

    (542) classCreatorRest -> arguments classBody_once .

    OP_INC          reduce using rule 542 (classCreatorRest -> arguments classBody_once .)
    OP_DEC          reduce using rule 542 (classCreatorRest -> arguments classBody_once .)
    DOT             reduce using rule 542 (classCreatorRest -> arguments classBody_once .)
    FLPAREN         reduce using rule 542 (classCreatorRest -> arguments classBody_once .)
    MULT            reduce using rule 542 (classCreatorRest -> arguments classBody_once .)
    SLASH           reduce using rule 542 (classCreatorRest -> arguments classBody_once .)
    PERCENT         reduce using rule 542 (classCreatorRest -> arguments classBody_once .)
    PLUS            reduce using rule 542 (classCreatorRest -> arguments classBody_once .)
    DASH            reduce using rule 542 (classCreatorRest -> arguments classBody_once .)
    OP_SHR          reduce using rule 542 (classCreatorRest -> arguments classBody_once .)
    OP_SHRR         reduce using rule 542 (classCreatorRest -> arguments classBody_once .)
    OP_SHL          reduce using rule 542 (classCreatorRest -> arguments classBody_once .)
    OP_LE           reduce using rule 542 (classCreatorRest -> arguments classBody_once .)
    OP_GE           reduce using rule 542 (classCreatorRest -> arguments classBody_once .)
    LESS            reduce using rule 542 (classCreatorRest -> arguments classBody_once .)
    MORE            reduce using rule 542 (classCreatorRest -> arguments classBody_once .)
    INSTANCEOF      reduce using rule 542 (classCreatorRest -> arguments classBody_once .)
    OP_EQ           reduce using rule 542 (classCreatorRest -> arguments classBody_once .)
    OP_NE           reduce using rule 542 (classCreatorRest -> arguments classBody_once .)
    AND             reduce using rule 542 (classCreatorRest -> arguments classBody_once .)
    CARET           reduce using rule 542 (classCreatorRest -> arguments classBody_once .)
    VERTICAL        reduce using rule 542 (classCreatorRest -> arguments classBody_once .)
    OP_LAND         reduce using rule 542 (classCreatorRest -> arguments classBody_once .)
    OP_LOR          reduce using rule 542 (classCreatorRest -> arguments classBody_once .)
    QUES            reduce using rule 542 (classCreatorRest -> arguments classBody_once .)
    RPAREN          reduce using rule 542 (classCreatorRest -> arguments classBody_once .)
    COMMA           reduce using rule 542 (classCreatorRest -> arguments classBody_once .)
    BRPAREN         reduce using rule 542 (classCreatorRest -> arguments classBody_once .)
    EQUALS          reduce using rule 542 (classCreatorRest -> arguments classBody_once .)
    ASS_ADD         reduce using rule 542 (classCreatorRest -> arguments classBody_once .)
    ASS_SUB         reduce using rule 542 (classCreatorRest -> arguments classBody_once .)
    ASS_MUL         reduce using rule 542 (classCreatorRest -> arguments classBody_once .)
    ASS_DIV         reduce using rule 542 (classCreatorRest -> arguments classBody_once .)
    ASS_AND         reduce using rule 542 (classCreatorRest -> arguments classBody_once .)
    ASS_OR          reduce using rule 542 (classCreatorRest -> arguments classBody_once .)
    ASS_XOR         reduce using rule 542 (classCreatorRest -> arguments classBody_once .)
    ASS_MOD         reduce using rule 542 (classCreatorRest -> arguments classBody_once .)
    ASS_SHL         reduce using rule 542 (classCreatorRest -> arguments classBody_once .)
    ASS_SHRR        reduce using rule 542 (classCreatorRest -> arguments classBody_once .)
    ASS_SHR         reduce using rule 542 (classCreatorRest -> arguments classBody_once .)
    FRPAREN         reduce using rule 542 (classCreatorRest -> arguments classBody_once .)
    COLON           reduce using rule 542 (classCreatorRest -> arguments classBody_once .)
    SEMI            reduce using rule 542 (classCreatorRest -> arguments classBody_once .)


state 540

    (82) classBody_once -> classBody .

    COMMA           reduce using rule 82 (classBody_once -> classBody .)
    SEMI            reduce using rule 82 (classBody_once -> classBody .)
    BRPAREN         reduce using rule 82 (classBody_once -> classBody .)
    OP_INC          reduce using rule 82 (classBody_once -> classBody .)
    OP_DEC          reduce using rule 82 (classBody_once -> classBody .)
    DOT             reduce using rule 82 (classBody_once -> classBody .)
    FLPAREN         reduce using rule 82 (classBody_once -> classBody .)
    MULT            reduce using rule 82 (classBody_once -> classBody .)
    SLASH           reduce using rule 82 (classBody_once -> classBody .)
    PERCENT         reduce using rule 82 (classBody_once -> classBody .)
    PLUS            reduce using rule 82 (classBody_once -> classBody .)
    DASH            reduce using rule 82 (classBody_once -> classBody .)
    OP_SHR          reduce using rule 82 (classBody_once -> classBody .)
    OP_SHRR         reduce using rule 82 (classBody_once -> classBody .)
    OP_SHL          reduce using rule 82 (classBody_once -> classBody .)
    OP_LE           reduce using rule 82 (classBody_once -> classBody .)
    OP_GE           reduce using rule 82 (classBody_once -> classBody .)
    LESS            reduce using rule 82 (classBody_once -> classBody .)
    MORE            reduce using rule 82 (classBody_once -> classBody .)
    INSTANCEOF      reduce using rule 82 (classBody_once -> classBody .)
    OP_EQ           reduce using rule 82 (classBody_once -> classBody .)
    OP_NE           reduce using rule 82 (classBody_once -> classBody .)
    AND             reduce using rule 82 (classBody_once -> classBody .)
    CARET           reduce using rule 82 (classBody_once -> classBody .)
    VERTICAL        reduce using rule 82 (classBody_once -> classBody .)
    OP_LAND         reduce using rule 82 (classBody_once -> classBody .)
    OP_LOR          reduce using rule 82 (classBody_once -> classBody .)
    QUES            reduce using rule 82 (classBody_once -> classBody .)
    RPAREN          reduce using rule 82 (classBody_once -> classBody .)
    EQUALS          reduce using rule 82 (classBody_once -> classBody .)
    ASS_ADD         reduce using rule 82 (classBody_once -> classBody .)
    ASS_SUB         reduce using rule 82 (classBody_once -> classBody .)
    ASS_MUL         reduce using rule 82 (classBody_once -> classBody .)
    ASS_DIV         reduce using rule 82 (classBody_once -> classBody .)
    ASS_AND         reduce using rule 82 (classBody_once -> classBody .)
    ASS_OR          reduce using rule 82 (classBody_once -> classBody .)
    ASS_XOR         reduce using rule 82 (classBody_once -> classBody .)
    ASS_MOD         reduce using rule 82 (classBody_once -> classBody .)
    ASS_SHL         reduce using rule 82 (classBody_once -> classBody .)
    ASS_SHRR        reduce using rule 82 (classBody_once -> classBody .)
    ASS_SHR         reduce using rule 82 (classBody_once -> classBody .)
    FRPAREN         reduce using rule 82 (classBody_once -> classBody .)
    COLON           reduce using rule 82 (classBody_once -> classBody .)


state 541

    (544) nonWildcardTypeArguments -> LESS typeList MORE .

    Identifier      reduce using rule 544 (nonWildcardTypeArguments -> LESS typeList MORE .)
    SUPER           reduce using rule 544 (nonWildcardTypeArguments -> LESS typeList MORE .)
    BOOLEAN         reduce using rule 544 (nonWildcardTypeArguments -> LESS typeList MORE .)
    CHAR            reduce using rule 544 (nonWildcardTypeArguments -> LESS typeList MORE .)
    BYTE            reduce using rule 544 (nonWildcardTypeArguments -> LESS typeList MORE .)
    SHORT           reduce using rule 544 (nonWildcardTypeArguments -> LESS typeList MORE .)
    INT             reduce using rule 544 (nonWildcardTypeArguments -> LESS typeList MORE .)
    LONG            reduce using rule 544 (nonWildcardTypeArguments -> LESS typeList MORE .)
    FLOAT           reduce using rule 544 (nonWildcardTypeArguments -> LESS typeList MORE .)
    DOUBLE          reduce using rule 544 (nonWildcardTypeArguments -> LESS typeList MORE .)
    THIS            reduce using rule 544 (nonWildcardTypeArguments -> LESS typeList MORE .)


state 542

    (528) creator -> nonWildcardTypeArguments createdName classCreatorRest .

    OP_INC          reduce using rule 528 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    OP_DEC          reduce using rule 528 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    DOT             reduce using rule 528 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    FLPAREN         reduce using rule 528 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    MULT            reduce using rule 528 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    SLASH           reduce using rule 528 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    PERCENT         reduce using rule 528 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    PLUS            reduce using rule 528 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    DASH            reduce using rule 528 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    OP_SHR          reduce using rule 528 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    OP_SHRR         reduce using rule 528 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    OP_SHL          reduce using rule 528 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    OP_LE           reduce using rule 528 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    OP_GE           reduce using rule 528 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    LESS            reduce using rule 528 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    MORE            reduce using rule 528 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    INSTANCEOF      reduce using rule 528 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    OP_EQ           reduce using rule 528 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    OP_NE           reduce using rule 528 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    AND             reduce using rule 528 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    CARET           reduce using rule 528 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    VERTICAL        reduce using rule 528 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    OP_LAND         reduce using rule 528 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    OP_LOR          reduce using rule 528 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    QUES            reduce using rule 528 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    RPAREN          reduce using rule 528 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    COMMA           reduce using rule 528 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    BRPAREN         reduce using rule 528 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    EQUALS          reduce using rule 528 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    ASS_ADD         reduce using rule 528 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    ASS_SUB         reduce using rule 528 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    ASS_MUL         reduce using rule 528 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    ASS_DIV         reduce using rule 528 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    ASS_AND         reduce using rule 528 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    ASS_OR          reduce using rule 528 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    ASS_XOR         reduce using rule 528 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    ASS_MOD         reduce using rule 528 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    ASS_SHL         reduce using rule 528 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    ASS_SHRR        reduce using rule 528 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    ASS_SHR         reduce using rule 528 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    FRPAREN         reduce using rule 528 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    COLON           reduce using rule 528 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)
    SEMI            reduce using rule 528 (creator -> nonWildcardTypeArguments createdName classCreatorRest .)


state 543

    (514) primary -> primitiveType arrays DOT CLASS .

    OP_INC          reduce using rule 514 (primary -> primitiveType arrays DOT CLASS .)
    OP_DEC          reduce using rule 514 (primary -> primitiveType arrays DOT CLASS .)
    DOT             reduce using rule 514 (primary -> primitiveType arrays DOT CLASS .)
    FLPAREN         reduce using rule 514 (primary -> primitiveType arrays DOT CLASS .)
    MULT            reduce using rule 514 (primary -> primitiveType arrays DOT CLASS .)
    SLASH           reduce using rule 514 (primary -> primitiveType arrays DOT CLASS .)
    PERCENT         reduce using rule 514 (primary -> primitiveType arrays DOT CLASS .)
    PLUS            reduce using rule 514 (primary -> primitiveType arrays DOT CLASS .)
    DASH            reduce using rule 514 (primary -> primitiveType arrays DOT CLASS .)
    OP_SHR          reduce using rule 514 (primary -> primitiveType arrays DOT CLASS .)
    OP_SHRR         reduce using rule 514 (primary -> primitiveType arrays DOT CLASS .)
    OP_SHL          reduce using rule 514 (primary -> primitiveType arrays DOT CLASS .)
    OP_LE           reduce using rule 514 (primary -> primitiveType arrays DOT CLASS .)
    OP_GE           reduce using rule 514 (primary -> primitiveType arrays DOT CLASS .)
    LESS            reduce using rule 514 (primary -> primitiveType arrays DOT CLASS .)
    MORE            reduce using rule 514 (primary -> primitiveType arrays DOT CLASS .)
    INSTANCEOF      reduce using rule 514 (primary -> primitiveType arrays DOT CLASS .)
    OP_EQ           reduce using rule 514 (primary -> primitiveType arrays DOT CLASS .)
    OP_NE           reduce using rule 514 (primary -> primitiveType arrays DOT CLASS .)
    AND             reduce using rule 514 (primary -> primitiveType arrays DOT CLASS .)
    CARET           reduce using rule 514 (primary -> primitiveType arrays DOT CLASS .)
    VERTICAL        reduce using rule 514 (primary -> primitiveType arrays DOT CLASS .)
    OP_LAND         reduce using rule 514 (primary -> primitiveType arrays DOT CLASS .)
    OP_LOR          reduce using rule 514 (primary -> primitiveType arrays DOT CLASS .)
    QUES            reduce using rule 514 (primary -> primitiveType arrays DOT CLASS .)
    EQUALS          reduce using rule 514 (primary -> primitiveType arrays DOT CLASS .)
    ASS_ADD         reduce using rule 514 (primary -> primitiveType arrays DOT CLASS .)
    ASS_SUB         reduce using rule 514 (primary -> primitiveType arrays DOT CLASS .)
    ASS_MUL         reduce using rule 514 (primary -> primitiveType arrays DOT CLASS .)
    ASS_DIV         reduce using rule 514 (primary -> primitiveType arrays DOT CLASS .)
    ASS_AND         reduce using rule 514 (primary -> primitiveType arrays DOT CLASS .)
    ASS_OR          reduce using rule 514 (primary -> primitiveType arrays DOT CLASS .)
    ASS_XOR         reduce using rule 514 (primary -> primitiveType arrays DOT CLASS .)
    ASS_MOD         reduce using rule 514 (primary -> primitiveType arrays DOT CLASS .)
    ASS_SHL         reduce using rule 514 (primary -> primitiveType arrays DOT CLASS .)
    ASS_SHRR        reduce using rule 514 (primary -> primitiveType arrays DOT CLASS .)
    ASS_SHR         reduce using rule 514 (primary -> primitiveType arrays DOT CLASS .)
    FRPAREN         reduce using rule 514 (primary -> primitiveType arrays DOT CLASS .)
    SEMI            reduce using rule 514 (primary -> primitiveType arrays DOT CLASS .)
    COMMA           reduce using rule 514 (primary -> primitiveType arrays DOT CLASS .)
    BRPAREN         reduce using rule 514 (primary -> primitiveType arrays DOT CLASS .)
    RPAREN          reduce using rule 514 (primary -> primitiveType arrays DOT CLASS .)
    COLON           reduce using rule 514 (primary -> primitiveType arrays DOT CLASS .)


state 544

    (502) castExpression -> LPAREN type RPAREN unaryExpressionNotPlusMinus .

    MULT            reduce using rule 502 (castExpression -> LPAREN type RPAREN unaryExpressionNotPlusMinus .)
    SLASH           reduce using rule 502 (castExpression -> LPAREN type RPAREN unaryExpressionNotPlusMinus .)
    PERCENT         reduce using rule 502 (castExpression -> LPAREN type RPAREN unaryExpressionNotPlusMinus .)
    PLUS            reduce using rule 502 (castExpression -> LPAREN type RPAREN unaryExpressionNotPlusMinus .)
    DASH            reduce using rule 502 (castExpression -> LPAREN type RPAREN unaryExpressionNotPlusMinus .)
    OP_SHR          reduce using rule 502 (castExpression -> LPAREN type RPAREN unaryExpressionNotPlusMinus .)
    OP_SHRR         reduce using rule 502 (castExpression -> LPAREN type RPAREN unaryExpressionNotPlusMinus .)
    OP_SHL          reduce using rule 502 (castExpression -> LPAREN type RPAREN unaryExpressionNotPlusMinus .)
    OP_LE           reduce using rule 502 (castExpression -> LPAREN type RPAREN unaryExpressionNotPlusMinus .)
    OP_GE           reduce using rule 502 (castExpression -> LPAREN type RPAREN unaryExpressionNotPlusMinus .)
    LESS            reduce using rule 502 (castExpression -> LPAREN type RPAREN unaryExpressionNotPlusMinus .)
    MORE            reduce using rule 502 (castExpression -> LPAREN type RPAREN unaryExpressionNotPlusMinus .)
    INSTANCEOF      reduce using rule 502 (castExpression -> LPAREN type RPAREN unaryExpressionNotPlusMinus .)
    OP_EQ           reduce using rule 502 (castExpression -> LPAREN type RPAREN unaryExpressionNotPlusMinus .)
    OP_NE           reduce using rule 502 (castExpression -> LPAREN type RPAREN unaryExpressionNotPlusMinus .)
    AND             reduce using rule 502 (castExpression -> LPAREN type RPAREN unaryExpressionNotPlusMinus .)
    CARET           reduce using rule 502 (castExpression -> LPAREN type RPAREN unaryExpressionNotPlusMinus .)
    VERTICAL        reduce using rule 502 (castExpression -> LPAREN type RPAREN unaryExpressionNotPlusMinus .)
    OP_LAND         reduce using rule 502 (castExpression -> LPAREN type RPAREN unaryExpressionNotPlusMinus .)
    OP_LOR          reduce using rule 502 (castExpression -> LPAREN type RPAREN unaryExpressionNotPlusMinus .)
    QUES            reduce using rule 502 (castExpression -> LPAREN type RPAREN unaryExpressionNotPlusMinus .)
    EQUALS          reduce using rule 502 (castExpression -> LPAREN type RPAREN unaryExpressionNotPlusMinus .)
    ASS_ADD         reduce using rule 502 (castExpression -> LPAREN type RPAREN unaryExpressionNotPlusMinus .)
    ASS_SUB         reduce using rule 502 (castExpression -> LPAREN type RPAREN unaryExpressionNotPlusMinus .)
    ASS_MUL         reduce using rule 502 (castExpression -> LPAREN type RPAREN unaryExpressionNotPlusMinus .)
    ASS_DIV         reduce using rule 502 (castExpression -> LPAREN type RPAREN unaryExpressionNotPlusMinus .)
    ASS_AND         reduce using rule 502 (castExpression -> LPAREN type RPAREN unaryExpressionNotPlusMinus .)
    ASS_OR          reduce using rule 502 (castExpression -> LPAREN type RPAREN unaryExpressionNotPlusMinus .)
    ASS_XOR         reduce using rule 502 (castExpression -> LPAREN type RPAREN unaryExpressionNotPlusMinus .)
    ASS_MOD         reduce using rule 502 (castExpression -> LPAREN type RPAREN unaryExpressionNotPlusMinus .)
    ASS_SHL         reduce using rule 502 (castExpression -> LPAREN type RPAREN unaryExpressionNotPlusMinus .)
    ASS_SHRR        reduce using rule 502 (castExpression -> LPAREN type RPAREN unaryExpressionNotPlusMinus .)
    ASS_SHR         reduce using rule 502 (castExpression -> LPAREN type RPAREN unaryExpressionNotPlusMinus .)
    FRPAREN         reduce using rule 502 (castExpression -> LPAREN type RPAREN unaryExpressionNotPlusMinus .)
    SEMI            reduce using rule 502 (castExpression -> LPAREN type RPAREN unaryExpressionNotPlusMinus .)
    RPAREN          reduce using rule 502 (castExpression -> LPAREN type RPAREN unaryExpressionNotPlusMinus .)
    COMMA           reduce using rule 502 (castExpression -> LPAREN type RPAREN unaryExpressionNotPlusMinus .)
    BRPAREN         reduce using rule 502 (castExpression -> LPAREN type RPAREN unaryExpressionNotPlusMinus .)
    COLON           reduce using rule 502 (castExpression -> LPAREN type RPAREN unaryExpressionNotPlusMinus .)


state 545

    (402) assignmentOperator_expression_empty -> assignmentOperator expression .

    EQUALS          reduce using rule 402 (assignmentOperator_expression_empty -> assignmentOperator expression .)
    ASS_ADD         reduce using rule 402 (assignmentOperator_expression_empty -> assignmentOperator expression .)
    ASS_SUB         reduce using rule 402 (assignmentOperator_expression_empty -> assignmentOperator expression .)
    ASS_MUL         reduce using rule 402 (assignmentOperator_expression_empty -> assignmentOperator expression .)
    ASS_DIV         reduce using rule 402 (assignmentOperator_expression_empty -> assignmentOperator expression .)
    ASS_AND         reduce using rule 402 (assignmentOperator_expression_empty -> assignmentOperator expression .)
    ASS_OR          reduce using rule 402 (assignmentOperator_expression_empty -> assignmentOperator expression .)
    ASS_XOR         reduce using rule 402 (assignmentOperator_expression_empty -> assignmentOperator expression .)
    ASS_MOD         reduce using rule 402 (assignmentOperator_expression_empty -> assignmentOperator expression .)
    ASS_SHL         reduce using rule 402 (assignmentOperator_expression_empty -> assignmentOperator expression .)
    ASS_SHRR        reduce using rule 402 (assignmentOperator_expression_empty -> assignmentOperator expression .)
    ASS_SHR         reduce using rule 402 (assignmentOperator_expression_empty -> assignmentOperator expression .)
    RPAREN          reduce using rule 402 (assignmentOperator_expression_empty -> assignmentOperator expression .)
    FRPAREN         reduce using rule 402 (assignmentOperator_expression_empty -> assignmentOperator expression .)
    COMMA           reduce using rule 402 (assignmentOperator_expression_empty -> assignmentOperator expression .)
    COLON           reduce using rule 402 (assignmentOperator_expression_empty -> assignmentOperator expression .)
    SEMI            reduce using rule 402 (assignmentOperator_expression_empty -> assignmentOperator expression .)
    QUES            reduce using rule 402 (assignmentOperator_expression_empty -> assignmentOperator expression .)
    BRPAREN         reduce using rule 402 (assignmentOperator_expression_empty -> assignmentOperator expression .)


state 546

    (267) DOT_Identifier -> DOT Identifier .
    (215) classOrInterfaceTypeStatement -> DOT Identifier . typeArguments
    (216) classOrInterfaceTypeStatement -> DOT Identifier .
    (234) typeArguments -> . LESS typeArgument COMMA_typeArguments MORE
    (235) typeArguments -> . LESS typeArgument MORE

  ! reduce/reduce conflict for DOT resolved using rule 216 (classOrInterfaceTypeStatement -> DOT Identifier .)
  ! reduce/reduce conflict for FLPAREN resolved using rule 216 (classOrInterfaceTypeStatement -> DOT Identifier .)
  ! reduce/reduce conflict for RPAREN resolved using rule 216 (classOrInterfaceTypeStatement -> DOT Identifier .)
  ! shift/reduce conflict for LESS resolved as shift
    LPAREN          reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    OP_INC          reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    OP_DEC          reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    MULT            reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    SLASH           reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    PERCENT         reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    PLUS            reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    DASH            reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    OP_SHR          reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    OP_SHRR         reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    OP_SHL          reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    OP_LE           reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    OP_GE           reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    MORE            reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    INSTANCEOF      reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    OP_EQ           reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    OP_NE           reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    AND             reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    CARET           reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    VERTICAL        reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    OP_LAND         reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    OP_LOR          reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    QUES            reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    EQUALS          reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    ASS_ADD         reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    ASS_SUB         reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    ASS_MUL         reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    ASS_DIV         reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    ASS_AND         reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    ASS_OR          reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    ASS_XOR         reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    ASS_MOD         reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    ASS_SHL         reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    ASS_SHRR        reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    ASS_SHR         reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    COMMA           reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    SEMI            reduce using rule 267 (DOT_Identifier -> DOT Identifier .)
    DOT             reduce using rule 216 (classOrInterfaceTypeStatement -> DOT Identifier .)
    FLPAREN         reduce using rule 216 (classOrInterfaceTypeStatement -> DOT Identifier .)
    RPAREN          reduce using rule 216 (classOrInterfaceTypeStatement -> DOT Identifier .)
    Identifier      reduce using rule 216 (classOrInterfaceTypeStatement -> DOT Identifier .)
    LESS            shift and go to state 156

  ! DOT             [ reduce using rule 267 (DOT_Identifier -> DOT Identifier .) ]
  ! FLPAREN         [ reduce using rule 267 (DOT_Identifier -> DOT Identifier .) ]
  ! LESS            [ reduce using rule 267 (DOT_Identifier -> DOT Identifier .) ]
  ! RPAREN          [ reduce using rule 267 (DOT_Identifier -> DOT Identifier .) ]

    typeArguments                  shift and go to state 467

state 547

    (501) castExpression -> LPAREN primitiveType RPAREN unaryExpression .

    MULT            reduce using rule 501 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    SLASH           reduce using rule 501 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    PERCENT         reduce using rule 501 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    PLUS            reduce using rule 501 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    DASH            reduce using rule 501 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    OP_SHR          reduce using rule 501 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    OP_SHRR         reduce using rule 501 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    OP_SHL          reduce using rule 501 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    OP_LE           reduce using rule 501 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    OP_GE           reduce using rule 501 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    LESS            reduce using rule 501 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    MORE            reduce using rule 501 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    INSTANCEOF      reduce using rule 501 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    OP_EQ           reduce using rule 501 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    OP_NE           reduce using rule 501 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    AND             reduce using rule 501 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    CARET           reduce using rule 501 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    VERTICAL        reduce using rule 501 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    OP_LAND         reduce using rule 501 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    OP_LOR          reduce using rule 501 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    QUES            reduce using rule 501 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    EQUALS          reduce using rule 501 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    ASS_ADD         reduce using rule 501 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    ASS_SUB         reduce using rule 501 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    ASS_MUL         reduce using rule 501 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    ASS_DIV         reduce using rule 501 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    ASS_AND         reduce using rule 501 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    ASS_OR          reduce using rule 501 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    ASS_XOR         reduce using rule 501 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    ASS_MOD         reduce using rule 501 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    ASS_SHL         reduce using rule 501 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    ASS_SHRR        reduce using rule 501 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    ASS_SHR         reduce using rule 501 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    FRPAREN         reduce using rule 501 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    SEMI            reduce using rule 501 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    RPAREN          reduce using rule 501 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    COMMA           reduce using rule 501 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    BRPAREN         reduce using rule 501 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)
    COLON           reduce using rule 501 (castExpression -> LPAREN primitiveType RPAREN unaryExpression .)


state 548

    (503) castExpression -> LPAREN expression RPAREN unaryExpressionNotPlusMinus .

    MULT            reduce using rule 503 (castExpression -> LPAREN expression RPAREN unaryExpressionNotPlusMinus .)
    SLASH           reduce using rule 503 (castExpression -> LPAREN expression RPAREN unaryExpressionNotPlusMinus .)
    PERCENT         reduce using rule 503 (castExpression -> LPAREN expression RPAREN unaryExpressionNotPlusMinus .)
    PLUS            reduce using rule 503 (castExpression -> LPAREN expression RPAREN unaryExpressionNotPlusMinus .)
    DASH            reduce using rule 503 (castExpression -> LPAREN expression RPAREN unaryExpressionNotPlusMinus .)
    OP_SHR          reduce using rule 503 (castExpression -> LPAREN expression RPAREN unaryExpressionNotPlusMinus .)
    OP_SHRR         reduce using rule 503 (castExpression -> LPAREN expression RPAREN unaryExpressionNotPlusMinus .)
    OP_SHL          reduce using rule 503 (castExpression -> LPAREN expression RPAREN unaryExpressionNotPlusMinus .)
    OP_LE           reduce using rule 503 (castExpression -> LPAREN expression RPAREN unaryExpressionNotPlusMinus .)
    OP_GE           reduce using rule 503 (castExpression -> LPAREN expression RPAREN unaryExpressionNotPlusMinus .)
    LESS            reduce using rule 503 (castExpression -> LPAREN expression RPAREN unaryExpressionNotPlusMinus .)
    MORE            reduce using rule 503 (castExpression -> LPAREN expression RPAREN unaryExpressionNotPlusMinus .)
    INSTANCEOF      reduce using rule 503 (castExpression -> LPAREN expression RPAREN unaryExpressionNotPlusMinus .)
    OP_EQ           reduce using rule 503 (castExpression -> LPAREN expression RPAREN unaryExpressionNotPlusMinus .)
    OP_NE           reduce using rule 503 (castExpression -> LPAREN expression RPAREN unaryExpressionNotPlusMinus .)
    AND             reduce using rule 503 (castExpression -> LPAREN expression RPAREN unaryExpressionNotPlusMinus .)
    CARET           reduce using rule 503 (castExpression -> LPAREN expression RPAREN unaryExpressionNotPlusMinus .)
    VERTICAL        reduce using rule 503 (castExpression -> LPAREN expression RPAREN unaryExpressionNotPlusMinus .)
    OP_LAND         reduce using rule 503 (castExpression -> LPAREN expression RPAREN unaryExpressionNotPlusMinus .)
    OP_LOR          reduce using rule 503 (castExpression -> LPAREN expression RPAREN unaryExpressionNotPlusMinus .)
    QUES            reduce using rule 503 (castExpression -> LPAREN expression RPAREN unaryExpressionNotPlusMinus .)
    EQUALS          reduce using rule 503 (castExpression -> LPAREN expression RPAREN unaryExpressionNotPlusMinus .)
    ASS_ADD         reduce using rule 503 (castExpression -> LPAREN expression RPAREN unaryExpressionNotPlusMinus .)
    ASS_SUB         reduce using rule 503 (castExpression -> LPAREN expression RPAREN unaryExpressionNotPlusMinus .)
    ASS_MUL         reduce using rule 503 (castExpression -> LPAREN expression RPAREN unaryExpressionNotPlusMinus .)
    ASS_DIV         reduce using rule 503 (castExpression -> LPAREN expression RPAREN unaryExpressionNotPlusMinus .)
    ASS_AND         reduce using rule 503 (castExpression -> LPAREN expression RPAREN unaryExpressionNotPlusMinus .)
    ASS_OR          reduce using rule 503 (castExpression -> LPAREN expression RPAREN unaryExpressionNotPlusMinus .)
    ASS_XOR         reduce using rule 503 (castExpression -> LPAREN expression RPAREN unaryExpressionNotPlusMinus .)
    ASS_MOD         reduce using rule 503 (castExpression -> LPAREN expression RPAREN unaryExpressionNotPlusMinus .)
    ASS_SHL         reduce using rule 503 (castExpression -> LPAREN expression RPAREN unaryExpressionNotPlusMinus .)
    ASS_SHRR        reduce using rule 503 (castExpression -> LPAREN expression RPAREN unaryExpressionNotPlusMinus .)
    ASS_SHR         reduce using rule 503 (castExpression -> LPAREN expression RPAREN unaryExpressionNotPlusMinus .)
    FRPAREN         reduce using rule 503 (castExpression -> LPAREN expression RPAREN unaryExpressionNotPlusMinus .)
    SEMI            reduce using rule 503 (castExpression -> LPAREN expression RPAREN unaryExpressionNotPlusMinus .)
    RPAREN          reduce using rule 503 (castExpression -> LPAREN expression RPAREN unaryExpressionNotPlusMinus .)
    COMMA           reduce using rule 503 (castExpression -> LPAREN expression RPAREN unaryExpressionNotPlusMinus .)
    BRPAREN         reduce using rule 503 (castExpression -> LPAREN expression RPAREN unaryExpressionNotPlusMinus .)
    COLON           reduce using rule 503 (castExpression -> LPAREN expression RPAREN unaryExpressionNotPlusMinus .)


state 549

    (552) superSuffix -> DOT Identifier arguments_once .

    OP_INC          reduce using rule 552 (superSuffix -> DOT Identifier arguments_once .)
    OP_DEC          reduce using rule 552 (superSuffix -> DOT Identifier arguments_once .)
    DOT             reduce using rule 552 (superSuffix -> DOT Identifier arguments_once .)
    FLPAREN         reduce using rule 552 (superSuffix -> DOT Identifier arguments_once .)
    MULT            reduce using rule 552 (superSuffix -> DOT Identifier arguments_once .)
    SLASH           reduce using rule 552 (superSuffix -> DOT Identifier arguments_once .)
    PERCENT         reduce using rule 552 (superSuffix -> DOT Identifier arguments_once .)
    PLUS            reduce using rule 552 (superSuffix -> DOT Identifier arguments_once .)
    DASH            reduce using rule 552 (superSuffix -> DOT Identifier arguments_once .)
    OP_SHR          reduce using rule 552 (superSuffix -> DOT Identifier arguments_once .)
    OP_SHRR         reduce using rule 552 (superSuffix -> DOT Identifier arguments_once .)
    OP_SHL          reduce using rule 552 (superSuffix -> DOT Identifier arguments_once .)
    OP_LE           reduce using rule 552 (superSuffix -> DOT Identifier arguments_once .)
    OP_GE           reduce using rule 552 (superSuffix -> DOT Identifier arguments_once .)
    LESS            reduce using rule 552 (superSuffix -> DOT Identifier arguments_once .)
    MORE            reduce using rule 552 (superSuffix -> DOT Identifier arguments_once .)
    INSTANCEOF      reduce using rule 552 (superSuffix -> DOT Identifier arguments_once .)
    OP_EQ           reduce using rule 552 (superSuffix -> DOT Identifier arguments_once .)
    OP_NE           reduce using rule 552 (superSuffix -> DOT Identifier arguments_once .)
    AND             reduce using rule 552 (superSuffix -> DOT Identifier arguments_once .)
    CARET           reduce using rule 552 (superSuffix -> DOT Identifier arguments_once .)
    VERTICAL        reduce using rule 552 (superSuffix -> DOT Identifier arguments_once .)
    OP_LAND         reduce using rule 552 (superSuffix -> DOT Identifier arguments_once .)
    OP_LOR          reduce using rule 552 (superSuffix -> DOT Identifier arguments_once .)
    QUES            reduce using rule 552 (superSuffix -> DOT Identifier arguments_once .)
    EQUALS          reduce using rule 552 (superSuffix -> DOT Identifier arguments_once .)
    ASS_ADD         reduce using rule 552 (superSuffix -> DOT Identifier arguments_once .)
    ASS_SUB         reduce using rule 552 (superSuffix -> DOT Identifier arguments_once .)
    ASS_MUL         reduce using rule 552 (superSuffix -> DOT Identifier arguments_once .)
    ASS_DIV         reduce using rule 552 (superSuffix -> DOT Identifier arguments_once .)
    ASS_AND         reduce using rule 552 (superSuffix -> DOT Identifier arguments_once .)
    ASS_OR          reduce using rule 552 (superSuffix -> DOT Identifier arguments_once .)
    ASS_XOR         reduce using rule 552 (superSuffix -> DOT Identifier arguments_once .)
    ASS_MOD         reduce using rule 552 (superSuffix -> DOT Identifier arguments_once .)
    ASS_SHL         reduce using rule 552 (superSuffix -> DOT Identifier arguments_once .)
    ASS_SHRR        reduce using rule 552 (superSuffix -> DOT Identifier arguments_once .)
    ASS_SHR         reduce using rule 552 (superSuffix -> DOT Identifier arguments_once .)
    SEMI            reduce using rule 552 (superSuffix -> DOT Identifier arguments_once .)
    RPAREN          reduce using rule 552 (superSuffix -> DOT Identifier arguments_once .)
    COMMA           reduce using rule 552 (superSuffix -> DOT Identifier arguments_once .)
    BRPAREN         reduce using rule 552 (superSuffix -> DOT Identifier arguments_once .)
    FRPAREN         reduce using rule 552 (superSuffix -> DOT Identifier arguments_once .)
    COLON           reduce using rule 552 (superSuffix -> DOT Identifier arguments_once .)


state 550

    (317) annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .

    BRPAREN         reduce using rule 317 (annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .)
    PUBLIC          reduce using rule 317 (annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .)
    PROTECTED       reduce using rule 317 (annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .)
    PRIVATE         reduce using rule 317 (annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .)
    STATIC          reduce using rule 317 (annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .)
    ABSTRACT        reduce using rule 317 (annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .)
    FINAL           reduce using rule 317 (annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .)
    NATIVE          reduce using rule 317 (annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .)
    SYNCHRONIZED    reduce using rule 317 (annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .)
    TRANSIENT       reduce using rule 317 (annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .)
    VOLATILE        reduce using rule 317 (annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .)
    STRICTFP        reduce using rule 317 (annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .)
    CLASS           reduce using rule 317 (annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .)
    INTERFACE       reduce using rule 317 (annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .)
    ENUM            reduce using rule 317 (annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .)
    AT              reduce using rule 317 (annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .)
    Identifier      reduce using rule 317 (annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .)
    BOOLEAN         reduce using rule 317 (annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .)
    CHAR            reduce using rule 317 (annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .)
    BYTE            reduce using rule 317 (annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .)
    SHORT           reduce using rule 317 (annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .)
    INT             reduce using rule 317 (annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .)
    LONG            reduce using rule 317 (annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .)
    FLOAT           reduce using rule 317 (annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .)
    DOUBLE          reduce using rule 317 (annotationTypeElementRest -> type annotationMethodOrConstantRest SEMI .)


state 551

    (169) variableDeclarator -> variableDeclaratorId EQUALS_variableInitializer .

    COMMA           reduce using rule 169 (variableDeclarator -> variableDeclaratorId EQUALS_variableInitializer .)
    SEMI            reduce using rule 169 (variableDeclarator -> variableDeclaratorId EQUALS_variableInitializer .)


state 552

    (168) EQUALS_variableInitializer -> EQUALS . variableInitializer
    (180) variableInitializer -> . arrayInitializer
    (181) variableInitializer -> . expression
    (189) arrayInitializer -> . BLPAREN array_body BRPAREN
    (404) expression -> . conditionalExpression assignmentOperator_expression_empty
    (420) conditionalExpression -> . conditionalOrExpression conditionalExpressionStats
    (421) conditionalExpression -> . conditionalOrExpression
    (425) conditionalOrExpression -> . conditionalAndExpression O_conditionalAndExpressions
    (426) conditionalOrExpression -> . conditionalAndExpression
    (430) conditionalAndExpression -> . inclusiveOrExpression O_inclusiveOrExpressions
    (431) conditionalAndExpression -> . inclusiveOrExpression
    (435) inclusiveOrExpression -> . exclusiveOrExpression V_exclusiveOrExpression
    (436) inclusiveOrExpression -> . exclusiveOrExpression
    (440) exclusiveOrExpression -> . andExpression CARET_andExpressions
    (441) exclusiveOrExpression -> . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    BLPAREN         shift and go to state 627
    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    equalityExpression             shift and go to state 108
    inclusiveOrExpression          shift and go to state 99
    multiplicativeExpression       shift and go to state 128
    exclusiveOrExpression          shift and go to state 110
    conditionalAndExpression       shift and go to state 89
    shiftExpression                shift and go to state 130
    arrayInitializer               shift and go to state 629
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    integerLiteral                 shift and go to state 98
    additiveExpression             shift and go to state 102
    conditionalExpression          shift and go to state 266
    unaryExpression                shift and go to state 131
    FloatingPointLiteral           shift and go to state 119
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    relationalExpression           shift and go to state 95
    conditionalOrExpression        shift and go to state 109
    instanceOfExpression           shift and go to state 96
    castExpression                 shift and go to state 137
    variableInitializer            shift and go to state 630
    unaryExpressionNotPlusMinus    shift and go to state 105
    primitiveType                  shift and go to state 122
    andExpression                  shift and go to state 106
    expression                     shift and go to state 631

state 553

    (178) variableDeclaratorId -> Identifier arrays .
    (138) arrays -> arrays . array
    (137) array -> . FLPAREN FRPAREN

    RPAREN          reduce using rule 178 (variableDeclaratorId -> Identifier arrays .)
    EQUALS          reduce using rule 178 (variableDeclaratorId -> Identifier arrays .)
    COMMA           reduce using rule 178 (variableDeclaratorId -> Identifier arrays .)
    SEMI            reduce using rule 178 (variableDeclaratorId -> Identifier arrays .)
    FLPAREN         shift and go to state 153

    array                          shift and go to state 308

state 554

    (326) annotationMethodRest -> Identifier LPAREN . RPAREN defaultValue_or_empty

    RPAREN          shift and go to state 632


state 555

    (163) COMMA_VAR -> COMMA . variableDeclarator
    (169) variableDeclarator -> . variableDeclaratorId EQUALS_variableInitializer
    (170) variableDeclarator -> . variableDeclaratorId
    (178) variableDeclaratorId -> . Identifier arrays
    (179) variableDeclaratorId -> . Identifier

    Identifier      shift and go to state 609

    variableDeclaratorId           shift and go to state 441
    variableDeclarator             shift and go to state 633

state 556

    (166) variableDeclarators -> variableDeclarator COMMA_VARS .
    (165) COMMA_VARS -> COMMA_VARS . COMMA_VAR
    (163) COMMA_VAR -> . COMMA variableDeclarator

    SEMI            reduce using rule 166 (variableDeclarators -> variableDeclarator COMMA_VARS .)
    COMMA           shift and go to state 555

    COMMA_VAR                      shift and go to state 634

state 557

    (164) COMMA_VARS -> COMMA_VAR .

    COMMA           reduce using rule 164 (COMMA_VARS -> COMMA_VAR .)
    SEMI            reduce using rule 164 (COMMA_VARS -> COMMA_VAR .)


state 558

    (105) interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .

    SEMI            reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    PUBLIC          reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    PROTECTED       reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    PRIVATE         reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    ABSTRACT        reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    STATIC          reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    FINAL           reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    STRICTFP        reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    CLASS           reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    ENUM            reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    INTERFACE       reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    AT              reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    $end            reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    BRPAREN         reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    ASSERT          reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    IF              reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    FOR             reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    WHILE           reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    DO              reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    TRY             reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    SWITCH          reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    SYNCHRONIZED    reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    RETURN          reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    THROW           reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    BREAK           reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    CONTINUE        reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    Identifier      reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    BLPAREN         reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    BOOLEAN         reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    CHAR            reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    BYTE            reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    SHORT           reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    INT             reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    LONG            reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    FLOAT           reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    DOUBLE          reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    PLUS            reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    DASH            reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    OP_INC          reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    OP_DEC          reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    TILDE           reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    EXCLAMATION     reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    LPAREN          reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    THIS            reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    SUPER           reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    NEW             reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    VOID            reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    CharacterLiteral reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    StringLiteral   reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    NULL            reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    LONG_NUMBER     reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    LONG_HEX_NUMBER reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    NON_INTEGER_1   reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    NON_INTEGER_2   reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    NON_INTEGER_3   reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    NON_INTEGER_4   reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    TRUE            reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    FALSE           reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    CASE            reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    DEFAULT         reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    NATIVE          reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    TRANSIENT       reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    VOLATILE        reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)
    LESS            reduce using rule 105 (interfaceBody -> BLPAREN interfaceBodyDeclarations BRPAREN .)


state 559

    (104) interfaceBodyDeclarations -> interfaceBodyDeclarations interfaceBodyDeclaration .

    BRPAREN         reduce using rule 104 (interfaceBodyDeclarations -> interfaceBodyDeclarations interfaceBodyDeclaration .)
    SEMI            reduce using rule 104 (interfaceBodyDeclarations -> interfaceBodyDeclarations interfaceBodyDeclaration .)
    PUBLIC          reduce using rule 104 (interfaceBodyDeclarations -> interfaceBodyDeclarations interfaceBodyDeclaration .)
    PROTECTED       reduce using rule 104 (interfaceBodyDeclarations -> interfaceBodyDeclarations interfaceBodyDeclaration .)
    PRIVATE         reduce using rule 104 (interfaceBodyDeclarations -> interfaceBodyDeclarations interfaceBodyDeclaration .)
    STATIC          reduce using rule 104 (interfaceBodyDeclarations -> interfaceBodyDeclarations interfaceBodyDeclaration .)
    ABSTRACT        reduce using rule 104 (interfaceBodyDeclarations -> interfaceBodyDeclarations interfaceBodyDeclaration .)
    FINAL           reduce using rule 104 (interfaceBodyDeclarations -> interfaceBodyDeclarations interfaceBodyDeclaration .)
    NATIVE          reduce using rule 104 (interfaceBodyDeclarations -> interfaceBodyDeclarations interfaceBodyDeclaration .)
    SYNCHRONIZED    reduce using rule 104 (interfaceBodyDeclarations -> interfaceBodyDeclarations interfaceBodyDeclaration .)
    TRANSIENT       reduce using rule 104 (interfaceBodyDeclarations -> interfaceBodyDeclarations interfaceBodyDeclaration .)
    VOLATILE        reduce using rule 104 (interfaceBodyDeclarations -> interfaceBodyDeclarations interfaceBodyDeclaration .)
    STRICTFP        reduce using rule 104 (interfaceBodyDeclarations -> interfaceBodyDeclarations interfaceBodyDeclaration .)
    AT              reduce using rule 104 (interfaceBodyDeclarations -> interfaceBodyDeclarations interfaceBodyDeclaration .)


state 560

    (130) interfaceMemberDecl -> VOID . Identifier voidInterfaceMethodDeclaratorRest

    Identifier      shift and go to state 635


state 561

    (128) interfaceMemberDecl -> interfaceMethodOrFieldDecl .

    BRPAREN         reduce using rule 128 (interfaceMemberDecl -> interfaceMethodOrFieldDecl .)
    SEMI            reduce using rule 128 (interfaceMemberDecl -> interfaceMethodOrFieldDecl .)
    PUBLIC          reduce using rule 128 (interfaceMemberDecl -> interfaceMethodOrFieldDecl .)
    PROTECTED       reduce using rule 128 (interfaceMemberDecl -> interfaceMethodOrFieldDecl .)
    PRIVATE         reduce using rule 128 (interfaceMemberDecl -> interfaceMethodOrFieldDecl .)
    STATIC          reduce using rule 128 (interfaceMemberDecl -> interfaceMethodOrFieldDecl .)
    ABSTRACT        reduce using rule 128 (interfaceMemberDecl -> interfaceMethodOrFieldDecl .)
    FINAL           reduce using rule 128 (interfaceMemberDecl -> interfaceMethodOrFieldDecl .)
    NATIVE          reduce using rule 128 (interfaceMemberDecl -> interfaceMethodOrFieldDecl .)
    SYNCHRONIZED    reduce using rule 128 (interfaceMemberDecl -> interfaceMethodOrFieldDecl .)
    TRANSIENT       reduce using rule 128 (interfaceMemberDecl -> interfaceMethodOrFieldDecl .)
    VOLATILE        reduce using rule 128 (interfaceMemberDecl -> interfaceMethodOrFieldDecl .)
    STRICTFP        reduce using rule 128 (interfaceMemberDecl -> interfaceMethodOrFieldDecl .)
    AT              reduce using rule 128 (interfaceMemberDecl -> interfaceMethodOrFieldDecl .)


state 562

    (156) interfaceGenericMethodDecl -> typeParameters . type Identifier interfaceMethodDeclaratorRest
    (157) interfaceGenericMethodDecl -> typeParameters . VOID Identifier interfaceMethodDeclaratorRest
    (205) type -> . type_body
    (206) type -> . primitiveType arrays
    (207) type -> . primitiveType
    (208) type_body -> . Identifier classOrInterfaceTypeBody arrays
    (209) type_body -> . Identifier classOrInterfaceTypeBody
    (210) type_body -> . Identifier arrays
    (211) type_body -> . Identifier
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE

    VOID            shift and go to state 636
    Identifier      shift and go to state 80
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72

    primitiveType                  shift and go to state 74
    type_body                      shift and go to state 77
    type                           shift and go to state 637

state 563

    (126) interfaceBodyDeclaration -> modifiers interfaceMemberDecl .

    BRPAREN         reduce using rule 126 (interfaceBodyDeclaration -> modifiers interfaceMemberDecl .)
    SEMI            reduce using rule 126 (interfaceBodyDeclaration -> modifiers interfaceMemberDecl .)
    PUBLIC          reduce using rule 126 (interfaceBodyDeclaration -> modifiers interfaceMemberDecl .)
    PROTECTED       reduce using rule 126 (interfaceBodyDeclaration -> modifiers interfaceMemberDecl .)
    PRIVATE         reduce using rule 126 (interfaceBodyDeclaration -> modifiers interfaceMemberDecl .)
    STATIC          reduce using rule 126 (interfaceBodyDeclaration -> modifiers interfaceMemberDecl .)
    ABSTRACT        reduce using rule 126 (interfaceBodyDeclaration -> modifiers interfaceMemberDecl .)
    FINAL           reduce using rule 126 (interfaceBodyDeclaration -> modifiers interfaceMemberDecl .)
    NATIVE          reduce using rule 126 (interfaceBodyDeclaration -> modifiers interfaceMemberDecl .)
    SYNCHRONIZED    reduce using rule 126 (interfaceBodyDeclaration -> modifiers interfaceMemberDecl .)
    TRANSIENT       reduce using rule 126 (interfaceBodyDeclaration -> modifiers interfaceMemberDecl .)
    VOLATILE        reduce using rule 126 (interfaceBodyDeclaration -> modifiers interfaceMemberDecl .)
    STRICTFP        reduce using rule 126 (interfaceBodyDeclaration -> modifiers interfaceMemberDecl .)
    AT              reduce using rule 126 (interfaceBodyDeclaration -> modifiers interfaceMemberDecl .)


state 564

    (131) interfaceMemberDecl -> interfaceDeclaration .

    BRPAREN         reduce using rule 131 (interfaceMemberDecl -> interfaceDeclaration .)
    SEMI            reduce using rule 131 (interfaceMemberDecl -> interfaceDeclaration .)
    PUBLIC          reduce using rule 131 (interfaceMemberDecl -> interfaceDeclaration .)
    PROTECTED       reduce using rule 131 (interfaceMemberDecl -> interfaceDeclaration .)
    PRIVATE         reduce using rule 131 (interfaceMemberDecl -> interfaceDeclaration .)
    STATIC          reduce using rule 131 (interfaceMemberDecl -> interfaceDeclaration .)
    ABSTRACT        reduce using rule 131 (interfaceMemberDecl -> interfaceDeclaration .)
    FINAL           reduce using rule 131 (interfaceMemberDecl -> interfaceDeclaration .)
    NATIVE          reduce using rule 131 (interfaceMemberDecl -> interfaceDeclaration .)
    SYNCHRONIZED    reduce using rule 131 (interfaceMemberDecl -> interfaceDeclaration .)
    TRANSIENT       reduce using rule 131 (interfaceMemberDecl -> interfaceDeclaration .)
    VOLATILE        reduce using rule 131 (interfaceMemberDecl -> interfaceDeclaration .)
    STRICTFP        reduce using rule 131 (interfaceMemberDecl -> interfaceDeclaration .)
    AT              reduce using rule 131 (interfaceMemberDecl -> interfaceDeclaration .)


state 565

    (129) interfaceMemberDecl -> interfaceGenericMethodDecl .

    BRPAREN         reduce using rule 129 (interfaceMemberDecl -> interfaceGenericMethodDecl .)
    SEMI            reduce using rule 129 (interfaceMemberDecl -> interfaceGenericMethodDecl .)
    PUBLIC          reduce using rule 129 (interfaceMemberDecl -> interfaceGenericMethodDecl .)
    PROTECTED       reduce using rule 129 (interfaceMemberDecl -> interfaceGenericMethodDecl .)
    PRIVATE         reduce using rule 129 (interfaceMemberDecl -> interfaceGenericMethodDecl .)
    STATIC          reduce using rule 129 (interfaceMemberDecl -> interfaceGenericMethodDecl .)
    ABSTRACT        reduce using rule 129 (interfaceMemberDecl -> interfaceGenericMethodDecl .)
    FINAL           reduce using rule 129 (interfaceMemberDecl -> interfaceGenericMethodDecl .)
    NATIVE          reduce using rule 129 (interfaceMemberDecl -> interfaceGenericMethodDecl .)
    SYNCHRONIZED    reduce using rule 129 (interfaceMemberDecl -> interfaceGenericMethodDecl .)
    TRANSIENT       reduce using rule 129 (interfaceMemberDecl -> interfaceGenericMethodDecl .)
    VOLATILE        reduce using rule 129 (interfaceMemberDecl -> interfaceGenericMethodDecl .)
    STRICTFP        reduce using rule 129 (interfaceMemberDecl -> interfaceGenericMethodDecl .)
    AT              reduce using rule 129 (interfaceMemberDecl -> interfaceGenericMethodDecl .)


state 566

    (133) interfaceMethodOrFieldDecl -> type . Identifier interfaceMethodOrFieldRest

    Identifier      shift and go to state 638


state 567

    (132) interfaceMemberDecl -> classDeclaration .

    BRPAREN         reduce using rule 132 (interfaceMemberDecl -> classDeclaration .)
    SEMI            reduce using rule 132 (interfaceMemberDecl -> classDeclaration .)
    PUBLIC          reduce using rule 132 (interfaceMemberDecl -> classDeclaration .)
    PROTECTED       reduce using rule 132 (interfaceMemberDecl -> classDeclaration .)
    PRIVATE         reduce using rule 132 (interfaceMemberDecl -> classDeclaration .)
    STATIC          reduce using rule 132 (interfaceMemberDecl -> classDeclaration .)
    ABSTRACT        reduce using rule 132 (interfaceMemberDecl -> classDeclaration .)
    FINAL           reduce using rule 132 (interfaceMemberDecl -> classDeclaration .)
    NATIVE          reduce using rule 132 (interfaceMemberDecl -> classDeclaration .)
    SYNCHRONIZED    reduce using rule 132 (interfaceMemberDecl -> classDeclaration .)
    TRANSIENT       reduce using rule 132 (interfaceMemberDecl -> classDeclaration .)
    VOLATILE        reduce using rule 132 (interfaceMemberDecl -> classDeclaration .)
    STRICTFP        reduce using rule 132 (interfaceMemberDecl -> classDeclaration .)
    AT              reduce using rule 132 (interfaceMemberDecl -> classDeclaration .)


state 568

    (60) and_types -> and_types and_type .

    AND             reduce using rule 60 (and_types -> and_types and_type .)
    MORE            reduce using rule 60 (and_types -> and_types and_type .)
    COMMA           reduce using rule 60 (and_types -> and_types and_type .)


state 569

    (58) and_type -> AND type .

    AND             reduce using rule 58 (and_type -> AND type .)
    MORE            reduce using rule 58 (and_type -> AND type .)
    COMMA           reduce using rule 58 (and_type -> AND type .)


state 570

    (101) classBody -> BLPAREN classBodyDeclarations BRPAREN .

    OP_INC          reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    OP_DEC          reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    DOT             reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    FLPAREN         reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    MULT            reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    SLASH           reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    PERCENT         reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    PLUS            reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    DASH            reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    OP_SHR          reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    OP_SHRR         reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    OP_SHL          reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    OP_LE           reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    OP_GE           reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    LESS            reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    MORE            reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    INSTANCEOF      reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    OP_EQ           reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    OP_NE           reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    AND             reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    CARET           reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    VERTICAL        reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    OP_LAND         reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    OP_LOR          reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    QUES            reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    RPAREN          reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    COMMA           reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    BRPAREN         reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    EQUALS          reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    ASS_ADD         reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    ASS_SUB         reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    ASS_MUL         reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    ASS_DIV         reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    ASS_AND         reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    ASS_OR          reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    ASS_XOR         reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    ASS_MOD         reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    ASS_SHL         reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    ASS_SHRR        reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    ASS_SHR         reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    FRPAREN         reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    COLON           reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    SEMI            reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    PUBLIC          reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    PROTECTED       reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    PRIVATE         reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    ABSTRACT        reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    STATIC          reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    FINAL           reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    STRICTFP        reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    CLASS           reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    ENUM            reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    INTERFACE       reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    AT              reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    $end            reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    ASSERT          reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    IF              reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    FOR             reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    WHILE           reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    DO              reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    TRY             reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    SWITCH          reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    SYNCHRONIZED    reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    RETURN          reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    THROW           reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    BREAK           reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    CONTINUE        reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    Identifier      reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    BLPAREN         reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    BOOLEAN         reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    CHAR            reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    BYTE            reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    SHORT           reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    INT             reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    LONG            reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    FLOAT           reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    DOUBLE          reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    TILDE           reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    EXCLAMATION     reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    LPAREN          reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    THIS            reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    SUPER           reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    NEW             reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    VOID            reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    CharacterLiteral reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    StringLiteral   reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    NULL            reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    LONG_NUMBER     reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    LONG_HEX_NUMBER reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    NON_INTEGER_1   reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    NON_INTEGER_2   reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    NON_INTEGER_3   reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    NON_INTEGER_4   reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    TRUE            reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    FALSE           reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    CASE            reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    DEFAULT         reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    NATIVE          reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    TRANSIENT       reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)
    VOLATILE        reduce using rule 101 (classBody -> BLPAREN classBodyDeclarations BRPAREN .)


state 571

    (233) COMMA_typeArguments -> COMMA_typeArguments COMMA_typeArgument .

    MORE            reduce using rule 233 (COMMA_typeArguments -> COMMA_typeArguments COMMA_typeArgument .)
    COMMA           reduce using rule 233 (COMMA_typeArguments -> COMMA_typeArguments COMMA_typeArgument .)


state 572

    (234) typeArguments -> LESS typeArgument COMMA_typeArguments MORE .

    DOT             reduce using rule 234 (typeArguments -> LESS typeArgument COMMA_typeArguments MORE .)
    FLPAREN         reduce using rule 234 (typeArguments -> LESS typeArgument COMMA_typeArguments MORE .)
    COMMA           reduce using rule 234 (typeArguments -> LESS typeArgument COMMA_typeArguments MORE .)
    BLPAREN         reduce using rule 234 (typeArguments -> LESS typeArgument COMMA_typeArguments MORE .)
    IMPLEMENTS      reduce using rule 234 (typeArguments -> LESS typeArgument COMMA_typeArguments MORE .)
    Identifier      reduce using rule 234 (typeArguments -> LESS typeArgument COMMA_typeArguments MORE .)
    AND             reduce using rule 234 (typeArguments -> LESS typeArgument COMMA_typeArguments MORE .)
    MORE            reduce using rule 234 (typeArguments -> LESS typeArgument COMMA_typeArguments MORE .)
    OP_EQ           reduce using rule 234 (typeArguments -> LESS typeArgument COMMA_typeArguments MORE .)
    OP_NE           reduce using rule 234 (typeArguments -> LESS typeArgument COMMA_typeArguments MORE .)
    CARET           reduce using rule 234 (typeArguments -> LESS typeArgument COMMA_typeArguments MORE .)
    VERTICAL        reduce using rule 234 (typeArguments -> LESS typeArgument COMMA_typeArguments MORE .)
    OP_LAND         reduce using rule 234 (typeArguments -> LESS typeArgument COMMA_typeArguments MORE .)
    OP_LOR          reduce using rule 234 (typeArguments -> LESS typeArgument COMMA_typeArguments MORE .)
    QUES            reduce using rule 234 (typeArguments -> LESS typeArgument COMMA_typeArguments MORE .)
    RPAREN          reduce using rule 234 (typeArguments -> LESS typeArgument COMMA_typeArguments MORE .)
    BRPAREN         reduce using rule 234 (typeArguments -> LESS typeArgument COMMA_typeArguments MORE .)
    EQUALS          reduce using rule 234 (typeArguments -> LESS typeArgument COMMA_typeArguments MORE .)
    ASS_ADD         reduce using rule 234 (typeArguments -> LESS typeArgument COMMA_typeArguments MORE .)
    ASS_SUB         reduce using rule 234 (typeArguments -> LESS typeArgument COMMA_typeArguments MORE .)
    ASS_MUL         reduce using rule 234 (typeArguments -> LESS typeArgument COMMA_typeArguments MORE .)
    ASS_DIV         reduce using rule 234 (typeArguments -> LESS typeArgument COMMA_typeArguments MORE .)
    ASS_AND         reduce using rule 234 (typeArguments -> LESS typeArgument COMMA_typeArguments MORE .)
    ASS_OR          reduce using rule 234 (typeArguments -> LESS typeArgument COMMA_typeArguments MORE .)
    ASS_XOR         reduce using rule 234 (typeArguments -> LESS typeArgument COMMA_typeArguments MORE .)
    ASS_MOD         reduce using rule 234 (typeArguments -> LESS typeArgument COMMA_typeArguments MORE .)
    ASS_SHL         reduce using rule 234 (typeArguments -> LESS typeArgument COMMA_typeArguments MORE .)
    ASS_SHRR        reduce using rule 234 (typeArguments -> LESS typeArgument COMMA_typeArguments MORE .)
    ASS_SHR         reduce using rule 234 (typeArguments -> LESS typeArgument COMMA_typeArguments MORE .)
    FRPAREN         reduce using rule 234 (typeArguments -> LESS typeArgument COMMA_typeArguments MORE .)
    COLON           reduce using rule 234 (typeArguments -> LESS typeArgument COMMA_typeArguments MORE .)
    SEMI            reduce using rule 234 (typeArguments -> LESS typeArgument COMMA_typeArguments MORE .)
    OP_ARRAY        reduce using rule 234 (typeArguments -> LESS typeArgument COMMA_typeArguments MORE .)
    LPAREN          reduce using rule 234 (typeArguments -> LESS typeArgument COMMA_typeArguments MORE .)


state 573

    (231) COMMA_typeArgument -> COMMA typeArgument .

    MORE            reduce using rule 231 (COMMA_typeArgument -> COMMA typeArgument .)
    COMMA           reduce using rule 231 (COMMA_typeArgument -> COMMA typeArgument .)


state 574

    (237) typeArgumentStatment -> SUPER type .

    MORE            reduce using rule 237 (typeArgumentStatment -> SUPER type .)
    COMMA           reduce using rule 237 (typeArgumentStatment -> SUPER type .)


state 575

    (236) typeArgumentStatment -> EXTENDS type .

    MORE            reduce using rule 236 (typeArgumentStatment -> EXTENDS type .)
    COMMA           reduce using rule 236 (typeArgumentStatment -> EXTENDS type .)


state 576

    (148) voidMethodDeclaratorRest -> formalParameters . throwList methodBody
    (149) voidMethodDeclaratorRest -> formalParameters . throwList SEMI
    (150) voidMethodDeclaratorRest -> formalParameters . methodBody
    (151) voidMethodDeclaratorRest -> formalParameters . SEMI
    (136) throwList -> . THROWS qualifiedNameList
    (254) methodBody -> . block
    (329) block -> . BLPAREN blockStatements BRPAREN
    (330) block -> . BLPAREN BRPAREN

    SEMI            shift and go to state 640
    THROWS          shift and go to state 586
    BLPAREN         shift and go to state 335

    methodBody                     shift and go to state 639
    throwList                      shift and go to state 641
    block                          shift and go to state 642

state 577

    (114) memberDecl -> VOID Identifier voidMethodDeclaratorRest .

    SEMI            reduce using rule 114 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    STATIC          reduce using rule 114 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    BLPAREN         reduce using rule 114 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    VOID            reduce using rule 114 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    Identifier      reduce using rule 114 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    PUBLIC          reduce using rule 114 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    PROTECTED       reduce using rule 114 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    PRIVATE         reduce using rule 114 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    ABSTRACT        reduce using rule 114 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    FINAL           reduce using rule 114 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    NATIVE          reduce using rule 114 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    SYNCHRONIZED    reduce using rule 114 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    TRANSIENT       reduce using rule 114 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    VOLATILE        reduce using rule 114 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    STRICTFP        reduce using rule 114 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    AT              reduce using rule 114 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    LESS            reduce using rule 114 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    INTERFACE       reduce using rule 114 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    CLASS           reduce using rule 114 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    ENUM            reduce using rule 114 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    BOOLEAN         reduce using rule 114 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    CHAR            reduce using rule 114 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    BYTE            reduce using rule 114 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    SHORT           reduce using rule 114 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    INT             reduce using rule 114 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    LONG            reduce using rule 114 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    FLOAT           reduce using rule 114 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    DOUBLE          reduce using rule 114 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)
    BRPAREN         reduce using rule 114 (memberDecl -> VOID Identifier voidMethodDeclaratorRest .)


state 578

    (122) genericMethodOrConstructorRest -> VOID Identifier . methodDeclaratorRest
    (140) methodDeclaratorRest -> . formalParameters arrays throwList methodBody
    (141) methodDeclaratorRest -> . formalParameters arrays throwList SEMI
    (142) methodDeclaratorRest -> . formalParameters throwList SEMI
    (143) methodDeclaratorRest -> . formalParameters throwList methodBody
    (144) methodDeclaratorRest -> . formalParameters arrays methodBody
    (145) methodDeclaratorRest -> . formalParameters arrays SEMI
    (146) methodDeclaratorRest -> . formalParameters methodBody
    (147) methodDeclaratorRest -> . formalParameters SEMI
    (246) formalParameters -> . LPAREN formalParameterDecls RPAREN

    LPAREN          shift and go to state 482

    formalParameters               shift and go to state 582
    methodDeclaratorRest           shift and go to state 643

state 579

    (123) genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .

    SEMI            reduce using rule 123 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    STATIC          reduce using rule 123 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    BLPAREN         reduce using rule 123 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    VOID            reduce using rule 123 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    Identifier      reduce using rule 123 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    PUBLIC          reduce using rule 123 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    PROTECTED       reduce using rule 123 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    PRIVATE         reduce using rule 123 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    ABSTRACT        reduce using rule 123 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    FINAL           reduce using rule 123 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    NATIVE          reduce using rule 123 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    SYNCHRONIZED    reduce using rule 123 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    TRANSIENT       reduce using rule 123 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    VOLATILE        reduce using rule 123 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    STRICTFP        reduce using rule 123 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    AT              reduce using rule 123 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    LESS            reduce using rule 123 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    INTERFACE       reduce using rule 123 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    CLASS           reduce using rule 123 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    ENUM            reduce using rule 123 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    BOOLEAN         reduce using rule 123 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    CHAR            reduce using rule 123 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    BYTE            reduce using rule 123 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    SHORT           reduce using rule 123 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    INT             reduce using rule 123 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    LONG            reduce using rule 123 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    FLOAT           reduce using rule 123 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    DOUBLE          reduce using rule 123 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)
    BRPAREN         reduce using rule 123 (genericMethodOrConstructorRest -> Identifier constructorDeclaratorRest .)


state 580

    (121) genericMethodOrConstructorRest -> type Identifier . methodDeclaratorRest
    (140) methodDeclaratorRest -> . formalParameters arrays throwList methodBody
    (141) methodDeclaratorRest -> . formalParameters arrays throwList SEMI
    (142) methodDeclaratorRest -> . formalParameters throwList SEMI
    (143) methodDeclaratorRest -> . formalParameters throwList methodBody
    (144) methodDeclaratorRest -> . formalParameters arrays methodBody
    (145) methodDeclaratorRest -> . formalParameters arrays SEMI
    (146) methodDeclaratorRest -> . formalParameters methodBody
    (147) methodDeclaratorRest -> . formalParameters SEMI
    (246) formalParameters -> . LPAREN formalParameterDecls RPAREN

    LPAREN          shift and go to state 482

    formalParameters               shift and go to state 582
    methodDeclaratorRest           shift and go to state 644

state 581

    (125) fieldDeclaration -> variableDeclarators SEMI .

    SEMI            reduce using rule 125 (fieldDeclaration -> variableDeclarators SEMI .)
    STATIC          reduce using rule 125 (fieldDeclaration -> variableDeclarators SEMI .)
    BLPAREN         reduce using rule 125 (fieldDeclaration -> variableDeclarators SEMI .)
    VOID            reduce using rule 125 (fieldDeclaration -> variableDeclarators SEMI .)
    Identifier      reduce using rule 125 (fieldDeclaration -> variableDeclarators SEMI .)
    PUBLIC          reduce using rule 125 (fieldDeclaration -> variableDeclarators SEMI .)
    PROTECTED       reduce using rule 125 (fieldDeclaration -> variableDeclarators SEMI .)
    PRIVATE         reduce using rule 125 (fieldDeclaration -> variableDeclarators SEMI .)
    ABSTRACT        reduce using rule 125 (fieldDeclaration -> variableDeclarators SEMI .)
    FINAL           reduce using rule 125 (fieldDeclaration -> variableDeclarators SEMI .)
    NATIVE          reduce using rule 125 (fieldDeclaration -> variableDeclarators SEMI .)
    SYNCHRONIZED    reduce using rule 125 (fieldDeclaration -> variableDeclarators SEMI .)
    TRANSIENT       reduce using rule 125 (fieldDeclaration -> variableDeclarators SEMI .)
    VOLATILE        reduce using rule 125 (fieldDeclaration -> variableDeclarators SEMI .)
    STRICTFP        reduce using rule 125 (fieldDeclaration -> variableDeclarators SEMI .)
    AT              reduce using rule 125 (fieldDeclaration -> variableDeclarators SEMI .)
    LESS            reduce using rule 125 (fieldDeclaration -> variableDeclarators SEMI .)
    INTERFACE       reduce using rule 125 (fieldDeclaration -> variableDeclarators SEMI .)
    CLASS           reduce using rule 125 (fieldDeclaration -> variableDeclarators SEMI .)
    ENUM            reduce using rule 125 (fieldDeclaration -> variableDeclarators SEMI .)
    BOOLEAN         reduce using rule 125 (fieldDeclaration -> variableDeclarators SEMI .)
    CHAR            reduce using rule 125 (fieldDeclaration -> variableDeclarators SEMI .)
    BYTE            reduce using rule 125 (fieldDeclaration -> variableDeclarators SEMI .)
    SHORT           reduce using rule 125 (fieldDeclaration -> variableDeclarators SEMI .)
    INT             reduce using rule 125 (fieldDeclaration -> variableDeclarators SEMI .)
    LONG            reduce using rule 125 (fieldDeclaration -> variableDeclarators SEMI .)
    FLOAT           reduce using rule 125 (fieldDeclaration -> variableDeclarators SEMI .)
    DOUBLE          reduce using rule 125 (fieldDeclaration -> variableDeclarators SEMI .)
    BRPAREN         reduce using rule 125 (fieldDeclaration -> variableDeclarators SEMI .)


state 582

    (140) methodDeclaratorRest -> formalParameters . arrays throwList methodBody
    (141) methodDeclaratorRest -> formalParameters . arrays throwList SEMI
    (142) methodDeclaratorRest -> formalParameters . throwList SEMI
    (143) methodDeclaratorRest -> formalParameters . throwList methodBody
    (144) methodDeclaratorRest -> formalParameters . arrays methodBody
    (145) methodDeclaratorRest -> formalParameters . arrays SEMI
    (146) methodDeclaratorRest -> formalParameters . methodBody
    (147) methodDeclaratorRest -> formalParameters . SEMI
    (138) arrays -> . arrays array
    (139) arrays -> . array
    (136) throwList -> . THROWS qualifiedNameList
    (254) methodBody -> . block
    (137) array -> . FLPAREN FRPAREN
    (329) block -> . BLPAREN blockStatements BRPAREN
    (330) block -> . BLPAREN BRPAREN

    SEMI            shift and go to state 646
    THROWS          shift and go to state 586
    FLPAREN         shift and go to state 153
    BLPAREN         shift and go to state 335

    methodBody                     shift and go to state 645
    arrays                         shift and go to state 647
    throwList                      shift and go to state 648
    array                          shift and go to state 154
    block                          shift and go to state 642

state 583

    (124) methodDeclaration -> Identifier methodDeclaratorRest .

    SEMI            reduce using rule 124 (methodDeclaration -> Identifier methodDeclaratorRest .)
    STATIC          reduce using rule 124 (methodDeclaration -> Identifier methodDeclaratorRest .)
    BLPAREN         reduce using rule 124 (methodDeclaration -> Identifier methodDeclaratorRest .)
    VOID            reduce using rule 124 (methodDeclaration -> Identifier methodDeclaratorRest .)
    Identifier      reduce using rule 124 (methodDeclaration -> Identifier methodDeclaratorRest .)
    PUBLIC          reduce using rule 124 (methodDeclaration -> Identifier methodDeclaratorRest .)
    PROTECTED       reduce using rule 124 (methodDeclaration -> Identifier methodDeclaratorRest .)
    PRIVATE         reduce using rule 124 (methodDeclaration -> Identifier methodDeclaratorRest .)
    ABSTRACT        reduce using rule 124 (methodDeclaration -> Identifier methodDeclaratorRest .)
    FINAL           reduce using rule 124 (methodDeclaration -> Identifier methodDeclaratorRest .)
    NATIVE          reduce using rule 124 (methodDeclaration -> Identifier methodDeclaratorRest .)
    SYNCHRONIZED    reduce using rule 124 (methodDeclaration -> Identifier methodDeclaratorRest .)
    TRANSIENT       reduce using rule 124 (methodDeclaration -> Identifier methodDeclaratorRest .)
    VOLATILE        reduce using rule 124 (methodDeclaration -> Identifier methodDeclaratorRest .)
    STRICTFP        reduce using rule 124 (methodDeclaration -> Identifier methodDeclaratorRest .)
    AT              reduce using rule 124 (methodDeclaration -> Identifier methodDeclaratorRest .)
    LESS            reduce using rule 124 (methodDeclaration -> Identifier methodDeclaratorRest .)
    INTERFACE       reduce using rule 124 (methodDeclaration -> Identifier methodDeclaratorRest .)
    CLASS           reduce using rule 124 (methodDeclaration -> Identifier methodDeclaratorRest .)
    ENUM            reduce using rule 124 (methodDeclaration -> Identifier methodDeclaratorRest .)
    BOOLEAN         reduce using rule 124 (methodDeclaration -> Identifier methodDeclaratorRest .)
    CHAR            reduce using rule 124 (methodDeclaration -> Identifier methodDeclaratorRest .)
    BYTE            reduce using rule 124 (methodDeclaration -> Identifier methodDeclaratorRest .)
    SHORT           reduce using rule 124 (methodDeclaration -> Identifier methodDeclaratorRest .)
    INT             reduce using rule 124 (methodDeclaration -> Identifier methodDeclaratorRest .)
    LONG            reduce using rule 124 (methodDeclaration -> Identifier methodDeclaratorRest .)
    FLOAT           reduce using rule 124 (methodDeclaration -> Identifier methodDeclaratorRest .)
    DOUBLE          reduce using rule 124 (methodDeclaration -> Identifier methodDeclaratorRest .)
    BRPAREN         reduce using rule 124 (methodDeclaration -> Identifier methodDeclaratorRest .)


state 584

    (160) constructorDeclaratorRest -> formalParameters throwList . constructorBody
    (257) constructorBody -> . BLPAREN explicitConstructorInvocation blockStatements BRPAREN
    (258) constructorBody -> . BLPAREN explicitConstructorInvocation BRPAREN
    (259) constructorBody -> . BLPAREN blockStatements BRPAREN
    (260) constructorBody -> . BLPAREN BRPAREN

    BLPAREN         shift and go to state 585

    constructorBody                shift and go to state 649

state 585

    (257) constructorBody -> BLPAREN . explicitConstructorInvocation blockStatements BRPAREN
    (258) constructorBody -> BLPAREN . explicitConstructorInvocation BRPAREN
    (259) constructorBody -> BLPAREN . blockStatements BRPAREN
    (260) constructorBody -> BLPAREN . BRPAREN
    (261) explicitConstructorInvocation -> . nonWildcardTypeArguments THIS arguments SEMI
    (262) explicitConstructorInvocation -> . nonWildcardTypeArguments SUPER arguments SEMI
    (263) explicitConstructorInvocation -> . THIS arguments SEMI
    (264) explicitConstructorInvocation -> . SUPER arguments SEMI
    (265) explicitConstructorInvocation -> . primary DOT nonWildcardTypeArguments SUPER arguments SEMI
    (266) explicitConstructorInvocation -> . primary DOT SUPER arguments SEMI
    (255) blockStatements -> . blockStatement
    (256) blockStatements -> . blockStatements blockStatement
    (544) nonWildcardTypeArguments -> . LESS typeList MORE
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (331) blockStatement -> . localVariableDeclarationStatement
    (332) blockStatement -> . classOrInterfaceDeclaration
    (333) blockStatement -> . statement
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (334) localVariableDeclarationStatement -> . localVariableDeclaration SEMI
    (26) classOrInterfaceDeclaration -> . classOrInterfaceModifiers classDeclaration
    (27) classOrInterfaceDeclaration -> . classOrInterfaceModifiers interfaceDeclaration
    (28) classOrInterfaceDeclaration -> . classDeclaration
    (29) classOrInterfaceDeclaration -> . interfaceDeclaration
    (347) statement -> . block
    (348) statement -> . ASSERT expression expression_colon_or_empty SEMI
    (349) statement -> . IF parExpression statement else_statement
    (350) statement -> . FOR LPAREN forControl RPAREN statement
    (351) statement -> . WHILE parExpression statement
    (352) statement -> . DO statement WHILE parExpression SEMI
    (353) statement -> . TRY block catches FINALLY block
    (354) statement -> . TRY block catches
    (355) statement -> . TRY block FINALLY block
    (356) statement -> . SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN
    (357) statement -> . SYNCHRONIZED parExpression block
    (358) statement -> . RETURN expression_or_empty SEMI
    (359) statement -> . THROW expression SEMI
    (360) statement -> . BREAK Identifier_or_empty SEMI
    (361) statement -> . CONTINUE Identifier_or_empty SEMI
    (362) statement -> . SEMI
    (363) statement -> . statementExpression SEMI
    (364) statement -> . Identifier COLON statement
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE
    (335) localVariableDeclaration -> . variableModifiers type variableDeclarators
    (336) localVariableDeclaration -> . type variableDeclarators
    (30) classOrInterfaceModifiers -> . classOrInterfaceModifier
    (31) classOrInterfaceModifiers -> . classOrInterfaceModifiers classOrInterfaceModifier
    (42) classDeclaration -> . normalClassDeclaration
    (43) classDeclaration -> . enumDeclaration
    (89) interfaceDeclaration -> . normalInterfaceDeclaration
    (90) interfaceDeclaration -> . annotationTypeDeclaration
    (329) block -> . BLPAREN blockStatements BRPAREN
    (330) block -> . BLPAREN BRPAREN
    (400) statementExpression -> . expression
    (337) variableModifiers -> . variableModifier
    (338) variableModifiers -> . variableModifiers variableModifier
    (205) type -> . type_body
    (206) type -> . primitiveType arrays
    (207) type -> . primitiveType
    (32) classOrInterfaceModifier -> . annotation
    (33) classOrInterfaceModifier -> . PUBLIC
    (34) classOrInterfaceModifier -> . PROTECTED
    (35) classOrInterfaceModifier -> . PRIVATE
    (36) classOrInterfaceModifier -> . ABSTRACT
    (37) classOrInterfaceModifier -> . STATIC
    (38) classOrInterfaceModifier -> . FINAL
    (39) classOrInterfaceModifier -> . STRICTFP
    (48) normalClassDeclaration -> . CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody
    (63) enumDeclaration -> . ENUM Identifier IMPLEMENTS_typeList enumBody
    (95) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody
    (308) annotationTypeDeclaration -> . AT INTERFACE Identifier annotationTypeBody
    (404) expression -> . conditionalExpression assignmentOperator_expression_empty
    (229) variableModifier -> . FINAL
    (230) variableModifier -> . annotation
    (208) type_body -> . Identifier classOrInterfaceTypeBody arrays
    (209) type_body -> . Identifier classOrInterfaceTypeBody
    (210) type_body -> . Identifier arrays
    (211) type_body -> . Identifier
    (287) annotation -> . AT annotationName annotationBody
    (420) conditionalExpression -> . conditionalOrExpression conditionalExpressionStats
    (421) conditionalExpression -> . conditionalOrExpression
    (425) conditionalOrExpression -> . conditionalAndExpression O_conditionalAndExpressions
    (426) conditionalOrExpression -> . conditionalAndExpression
    (430) conditionalAndExpression -> . inclusiveOrExpression O_inclusiveOrExpressions
    (431) conditionalAndExpression -> . inclusiveOrExpression
    (435) inclusiveOrExpression -> . exclusiveOrExpression V_exclusiveOrExpression
    (436) inclusiveOrExpression -> . exclusiveOrExpression
    (440) exclusiveOrExpression -> . andExpression CARET_andExpressions
    (441) exclusiveOrExpression -> . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus

    BRPAREN         shift and go to state 656
    THIS            shift and go to state 651
    SUPER           shift and go to state 659
    LESS            shift and go to state 242
    NEW             shift and go to state 115
    Identifier      shift and go to state 652
    VOID            shift and go to state 88
    LPAREN          shift and go to state 657
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    ASSERT          shift and go to state 507
    IF              shift and go to state 513
    FOR             shift and go to state 492
    WHILE           shift and go to state 500
    DO              shift and go to state 506
    TRY             shift and go to state 494
    SWITCH          shift and go to state 501
    SYNCHRONIZED    shift and go to state 490
    RETURN          shift and go to state 489
    THROW           shift and go to state 514
    BREAK           shift and go to state 505
    CONTINUE        shift and go to state 496
    SEMI            shift and go to state 508
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120
    BLPAREN         shift and go to state 335
    PUBLIC          shift and go to state 24
    PROTECTED       shift and go to state 3
    PRIVATE         shift and go to state 9
    ABSTRACT        shift and go to state 2
    STATIC          shift and go to state 4
    FINAL           shift and go to state 491
    STRICTFP        shift and go to state 10
    CLASS           shift and go to state 12
    ENUM            shift and go to state 15
    INTERFACE       shift and go to state 23
    AT              shift and go to state 18
    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87

    conditionalAndExpression       shift and go to state 89
    blockStatement                 shift and go to state 485
    booleanLiteral                 shift and go to state 92
    nonWildcardTypeArguments       shift and go to state 650
    classOrInterfaceDeclaration    shift and go to state 486
    relationalExpression           shift and go to state 95
    variableModifier               shift and go to state 487
    localVariableDeclarationStatement shift and go to state 488
    instanceOfExpression           shift and go to state 96
    type_body                      shift and go to state 77
    inclusiveOrExpression          shift and go to state 99
    additiveExpression             shift and go to state 102
    classDeclaration               shift and go to state 17
    unaryExpressionNotPlusMinus    shift and go to state 105
    annotationTypeDeclaration      shift and go to state 21
    interfaceDeclaration           shift and go to state 1
    andExpression                  shift and go to state 106
    expression                     shift and go to state 497
    block                          shift and go to state 498
    equalityExpression             shift and go to state 108
    localVariableDeclaration       shift and go to state 499
    exclusiveOrExpression          shift and go to state 110
    primary                        shift and go to state 653
    literal                        shift and go to state 116
    statement                      shift and go to state 502
    type                           shift and go to state 503
    conditionalExpression          shift and go to state 266
    enumDeclaration                shift and go to state 13
    FloatingPointLiteral           shift and go to state 119
    primitiveType                  shift and go to state 654
    variableModifiers              shift and go to state 493
    multiplicativeExpression       shift and go to state 128
    normalInterfaceDeclaration     shift and go to state 5
    shiftExpression                shift and go to state 130
    normalClassDeclaration         shift and go to state 7
    statementExpression            shift and go to state 509
    classOrInterfaceModifiers      shift and go to state 22
    integerLiteral                 shift and go to state 98
    blockStatements                shift and go to state 655
    unaryExpression                shift and go to state 131
    parExpression                  shift and go to state 132
    conditionalOrExpression        shift and go to state 109
    annotation                     shift and go to state 512
    castExpression                 shift and go to state 137
    classOrInterfaceModifier       shift and go to state 20
    explicitConstructorInvocation  shift and go to state 658

state 586

    (136) throwList -> THROWS . qualifiedNameList
    (244) qualifiedNameList -> . qualifiedName COMMA_qualifiedNames
    (245) qualifiedNameList -> . qualifiedName
    (271) qualifiedName -> . Identifier DOT_Identifiers
    (272) qualifiedName -> . Identifier

    Identifier      shift and go to state 31

    qualifiedNameList              shift and go to state 660
    qualifiedName                  shift and go to state 661

state 587

    (161) constructorDeclaratorRest -> formalParameters constructorBody .

    SEMI            reduce using rule 161 (constructorDeclaratorRest -> formalParameters constructorBody .)
    STATIC          reduce using rule 161 (constructorDeclaratorRest -> formalParameters constructorBody .)
    BLPAREN         reduce using rule 161 (constructorDeclaratorRest -> formalParameters constructorBody .)
    VOID            reduce using rule 161 (constructorDeclaratorRest -> formalParameters constructorBody .)
    Identifier      reduce using rule 161 (constructorDeclaratorRest -> formalParameters constructorBody .)
    PUBLIC          reduce using rule 161 (constructorDeclaratorRest -> formalParameters constructorBody .)
    PROTECTED       reduce using rule 161 (constructorDeclaratorRest -> formalParameters constructorBody .)
    PRIVATE         reduce using rule 161 (constructorDeclaratorRest -> formalParameters constructorBody .)
    ABSTRACT        reduce using rule 161 (constructorDeclaratorRest -> formalParameters constructorBody .)
    FINAL           reduce using rule 161 (constructorDeclaratorRest -> formalParameters constructorBody .)
    NATIVE          reduce using rule 161 (constructorDeclaratorRest -> formalParameters constructorBody .)
    SYNCHRONIZED    reduce using rule 161 (constructorDeclaratorRest -> formalParameters constructorBody .)
    TRANSIENT       reduce using rule 161 (constructorDeclaratorRest -> formalParameters constructorBody .)
    VOLATILE        reduce using rule 161 (constructorDeclaratorRest -> formalParameters constructorBody .)
    STRICTFP        reduce using rule 161 (constructorDeclaratorRest -> formalParameters constructorBody .)
    AT              reduce using rule 161 (constructorDeclaratorRest -> formalParameters constructorBody .)
    LESS            reduce using rule 161 (constructorDeclaratorRest -> formalParameters constructorBody .)
    INTERFACE       reduce using rule 161 (constructorDeclaratorRest -> formalParameters constructorBody .)
    CLASS           reduce using rule 161 (constructorDeclaratorRest -> formalParameters constructorBody .)
    ENUM            reduce using rule 161 (constructorDeclaratorRest -> formalParameters constructorBody .)
    BOOLEAN         reduce using rule 161 (constructorDeclaratorRest -> formalParameters constructorBody .)
    CHAR            reduce using rule 161 (constructorDeclaratorRest -> formalParameters constructorBody .)
    BYTE            reduce using rule 161 (constructorDeclaratorRest -> formalParameters constructorBody .)
    SHORT           reduce using rule 161 (constructorDeclaratorRest -> formalParameters constructorBody .)
    INT             reduce using rule 161 (constructorDeclaratorRest -> formalParameters constructorBody .)
    LONG            reduce using rule 161 (constructorDeclaratorRest -> formalParameters constructorBody .)
    FLOAT           reduce using rule 161 (constructorDeclaratorRest -> formalParameters constructorBody .)
    DOUBLE          reduce using rule 161 (constructorDeclaratorRest -> formalParameters constructorBody .)
    BRPAREN         reduce using rule 161 (constructorDeclaratorRest -> formalParameters constructorBody .)


state 588

    (246) formalParameters -> LPAREN formalParameterDecls . RPAREN

    RPAREN          shift and go to state 662


state 589

    (229) variableModifier -> FINAL .

    FINAL           reduce using rule 229 (variableModifier -> FINAL .)
    Identifier      reduce using rule 229 (variableModifier -> FINAL .)
    BOOLEAN         reduce using rule 229 (variableModifier -> FINAL .)
    CHAR            reduce using rule 229 (variableModifier -> FINAL .)
    BYTE            reduce using rule 229 (variableModifier -> FINAL .)
    SHORT           reduce using rule 229 (variableModifier -> FINAL .)
    INT             reduce using rule 229 (variableModifier -> FINAL .)
    LONG            reduce using rule 229 (variableModifier -> FINAL .)
    FLOAT           reduce using rule 229 (variableModifier -> FINAL .)
    DOUBLE          reduce using rule 229 (variableModifier -> FINAL .)
    AT              reduce using rule 229 (variableModifier -> FINAL .)


state 590

    (248) formalParameterDecls -> type . formalParameterDeclsRest
    (252) formalParameterDeclsRest -> . variableDeclaratorId formalParameterDeclsRestBody
    (253) formalParameterDeclsRest -> . OP_ARRAY variableDeclaratorId
    (178) variableDeclaratorId -> . Identifier arrays
    (179) variableDeclaratorId -> . Identifier

    OP_ARRAY        shift and go to state 664
    Identifier      shift and go to state 609

    variableDeclaratorId           shift and go to state 665
    formalParameterDeclsRest       shift and go to state 663

state 591

    (249) formalParameterDecls -> empty .

    RPAREN          reduce using rule 249 (formalParameterDecls -> empty .)


state 592

    (247) formalParameterDecls -> variableModifiers . type formalParameterDeclsRest
    (338) variableModifiers -> variableModifiers . variableModifier
    (205) type -> . type_body
    (206) type -> . primitiveType arrays
    (207) type -> . primitiveType
    (229) variableModifier -> . FINAL
    (230) variableModifier -> . annotation
    (208) type_body -> . Identifier classOrInterfaceTypeBody arrays
    (209) type_body -> . Identifier classOrInterfaceTypeBody
    (210) type_body -> . Identifier arrays
    (211) type_body -> . Identifier
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (287) annotation -> . AT annotationName annotationBody

    FINAL           shift and go to state 589
    Identifier      shift and go to state 80
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    AT              shift and go to state 133

    primitiveType                  shift and go to state 74
    variableModifier               shift and go to state 600
    type_body                      shift and go to state 77
    type                           shift and go to state 666
    annotation                     shift and go to state 593

state 593

    (230) variableModifier -> annotation .

    FINAL           reduce using rule 230 (variableModifier -> annotation .)
    Identifier      reduce using rule 230 (variableModifier -> annotation .)
    BOOLEAN         reduce using rule 230 (variableModifier -> annotation .)
    CHAR            reduce using rule 230 (variableModifier -> annotation .)
    BYTE            reduce using rule 230 (variableModifier -> annotation .)
    SHORT           reduce using rule 230 (variableModifier -> annotation .)
    INT             reduce using rule 230 (variableModifier -> annotation .)
    LONG            reduce using rule 230 (variableModifier -> annotation .)
    FLOAT           reduce using rule 230 (variableModifier -> annotation .)
    DOUBLE          reduce using rule 230 (variableModifier -> annotation .)
    AT              reduce using rule 230 (variableModifier -> annotation .)


state 594

    (358) statement -> RETURN expression_or_empty . SEMI

    SEMI            shift and go to state 667


state 595

    (343) expression_or_empty -> expression .

    SEMI            reduce using rule 343 (expression_or_empty -> expression .)


state 596

    (357) statement -> SYNCHRONIZED parExpression . block
    (329) block -> . BLPAREN blockStatements BRPAREN
    (330) block -> . BLPAREN BRPAREN

    BLPAREN         shift and go to state 335

    block                          shift and go to state 668

state 597

    (394) parExpression -> LPAREN . expression RPAREN
    (404) expression -> . conditionalExpression assignmentOperator_expression_empty
    (420) conditionalExpression -> . conditionalOrExpression conditionalExpressionStats
    (421) conditionalExpression -> . conditionalOrExpression
    (425) conditionalOrExpression -> . conditionalAndExpression O_conditionalAndExpressions
    (426) conditionalOrExpression -> . conditionalAndExpression
    (430) conditionalAndExpression -> . inclusiveOrExpression O_inclusiveOrExpressions
    (431) conditionalAndExpression -> . inclusiveOrExpression
    (435) inclusiveOrExpression -> . exclusiveOrExpression V_exclusiveOrExpression
    (436) inclusiveOrExpression -> . exclusiveOrExpression
    (440) exclusiveOrExpression -> . andExpression CARET_andExpressions
    (441) exclusiveOrExpression -> . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    equalityExpression             shift and go to state 108
    inclusiveOrExpression          shift and go to state 99
    multiplicativeExpression       shift and go to state 128
    exclusiveOrExpression          shift and go to state 110
    conditionalAndExpression       shift and go to state 89
    shiftExpression                shift and go to state 130
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    integerLiteral                 shift and go to state 98
    additiveExpression             shift and go to state 102
    instanceOfExpression           shift and go to state 96
    conditionalExpression          shift and go to state 266
    unaryExpression                shift and go to state 131
    FloatingPointLiteral           shift and go to state 119
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    relationalExpression           shift and go to state 95
    conditionalOrExpression        shift and go to state 109
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    primitiveType                  shift and go to state 122
    andExpression                  shift and go to state 106
    expression                     shift and go to state 669

state 598

    (350) statement -> FOR LPAREN . forControl RPAREN statement
    (387) forControl -> . enhancedForControl
    (388) forControl -> . forInit_or_empty SEMI expression_or_empty SEMI forUpdate_empty
    (391) enhancedForControl -> . variableModifiers type Identifier COLON expression
    (392) enhancedForControl -> . type Identifier COLON expression
    (383) forInit_or_empty -> . forInit
    (384) forInit_or_empty -> .
    (337) variableModifiers -> . variableModifier
    (338) variableModifiers -> . variableModifiers variableModifier
    (205) type -> . type_body
    (206) type -> . primitiveType arrays
    (207) type -> . primitiveType
    (389) forInit -> . localVariableDeclaration
    (390) forInit -> . expressionList
    (229) variableModifier -> . FINAL
    (230) variableModifier -> . annotation
    (208) type_body -> . Identifier classOrInterfaceTypeBody arrays
    (209) type_body -> . Identifier classOrInterfaceTypeBody
    (210) type_body -> . Identifier arrays
    (211) type_body -> . Identifier
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (335) localVariableDeclaration -> . variableModifiers type variableDeclarators
    (336) localVariableDeclaration -> . type variableDeclarators
    (398) expressionList -> . expression COMMA_expressions
    (399) expressionList -> . expression
    (287) annotation -> . AT annotationName annotationBody
    (404) expression -> . conditionalExpression assignmentOperator_expression_empty
    (420) conditionalExpression -> . conditionalOrExpression conditionalExpressionStats
    (421) conditionalExpression -> . conditionalOrExpression
    (425) conditionalOrExpression -> . conditionalAndExpression O_conditionalAndExpressions
    (426) conditionalOrExpression -> . conditionalAndExpression
    (430) conditionalAndExpression -> . inclusiveOrExpression O_inclusiveOrExpressions
    (431) conditionalAndExpression -> . inclusiveOrExpression
    (435) inclusiveOrExpression -> . exclusiveOrExpression V_exclusiveOrExpression
    (436) inclusiveOrExpression -> . exclusiveOrExpression
    (440) exclusiveOrExpression -> . andExpression CARET_andExpressions
    (441) exclusiveOrExpression -> . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    SEMI            reduce using rule 384 (forInit_or_empty -> .)
    FINAL           shift and go to state 589
    Identifier      shift and go to state 267
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    AT              shift and go to state 133
    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    equalityExpression             shift and go to state 108
    inclusiveOrExpression          shift and go to state 99
    multiplicativeExpression       shift and go to state 128
    exclusiveOrExpression          shift and go to state 110
    conditionalAndExpression       shift and go to state 89
    localVariableDeclaration       shift and go to state 674
    primitiveType                  shift and go to state 504
    unaryExpression                shift and go to state 131
    shiftExpression                shift and go to state 130
    forInit_or_empty               shift and go to state 673
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    expressionList                 shift and go to state 675
    FloatingPointLiteral           shift and go to state 119
    type                           shift and go to state 676
    parExpression                  shift and go to state 132
    additiveExpression             shift and go to state 102
    instanceOfExpression           shift and go to state 96
    conditionalExpression          shift and go to state 266
    forInit                        shift and go to state 670
    integerLiteral                 shift and go to state 98
    forControl                     shift and go to state 671
    primary                        shift and go to state 111
    relationalExpression           shift and go to state 95
    variableModifier               shift and go to state 487
    conditionalOrExpression        shift and go to state 109
    annotation                     shift and go to state 593
    enhancedForControl             shift and go to state 672
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    variableModifiers              shift and go to state 677
    type_body                      shift and go to state 77
    andExpression                  shift and go to state 106
    expression                     shift and go to state 364

state 599

    (335) localVariableDeclaration -> variableModifiers type . variableDeclarators
    (166) variableDeclarators -> . variableDeclarator COMMA_VARS
    (167) variableDeclarators -> . variableDeclarator
    (169) variableDeclarator -> . variableDeclaratorId EQUALS_variableInitializer
    (170) variableDeclarator -> . variableDeclaratorId
    (178) variableDeclaratorId -> . Identifier arrays
    (179) variableDeclaratorId -> . Identifier

    Identifier      shift and go to state 609

    variableDeclarators            shift and go to state 678
    variableDeclaratorId           shift and go to state 441
    variableDeclarator             shift and go to state 444

state 600

    (338) variableModifiers -> variableModifiers variableModifier .

    FINAL           reduce using rule 338 (variableModifiers -> variableModifiers variableModifier .)
    Identifier      reduce using rule 338 (variableModifiers -> variableModifiers variableModifier .)
    BOOLEAN         reduce using rule 338 (variableModifiers -> variableModifiers variableModifier .)
    CHAR            reduce using rule 338 (variableModifiers -> variableModifiers variableModifier .)
    BYTE            reduce using rule 338 (variableModifiers -> variableModifiers variableModifier .)
    SHORT           reduce using rule 338 (variableModifiers -> variableModifiers variableModifier .)
    INT             reduce using rule 338 (variableModifiers -> variableModifiers variableModifier .)
    LONG            reduce using rule 338 (variableModifiers -> variableModifiers variableModifier .)
    FLOAT           reduce using rule 338 (variableModifiers -> variableModifiers variableModifier .)
    DOUBLE          reduce using rule 338 (variableModifiers -> variableModifiers variableModifier .)
    AT              reduce using rule 338 (variableModifiers -> variableModifiers variableModifier .)


state 601

    (353) statement -> TRY block . catches FINALLY block
    (354) statement -> TRY block . catches
    (355) statement -> TRY block . FINALLY block
    (367) catches -> . catchClause catchClauses
    (368) catches -> . catchClause
    (369) catchClause -> . CATCH LPAREN formalParameter RPAREN block

    FINALLY         shift and go to state 681
    CATCH           shift and go to state 682

    catches                        shift and go to state 679
    catchClause                    shift and go to state 680

state 602

    (364) statement -> Identifier COLON . statement
    (347) statement -> . block
    (348) statement -> . ASSERT expression expression_colon_or_empty SEMI
    (349) statement -> . IF parExpression statement else_statement
    (350) statement -> . FOR LPAREN forControl RPAREN statement
    (351) statement -> . WHILE parExpression statement
    (352) statement -> . DO statement WHILE parExpression SEMI
    (353) statement -> . TRY block catches FINALLY block
    (354) statement -> . TRY block catches
    (355) statement -> . TRY block FINALLY block
    (356) statement -> . SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN
    (357) statement -> . SYNCHRONIZED parExpression block
    (358) statement -> . RETURN expression_or_empty SEMI
    (359) statement -> . THROW expression SEMI
    (360) statement -> . BREAK Identifier_or_empty SEMI
    (361) statement -> . CONTINUE Identifier_or_empty SEMI
    (362) statement -> . SEMI
    (363) statement -> . statementExpression SEMI
    (364) statement -> . Identifier COLON statement
    (329) block -> . BLPAREN blockStatements BRPAREN
    (330) block -> . BLPAREN BRPAREN
    (400) statementExpression -> . expression
    (404) expression -> . conditionalExpression assignmentOperator_expression_empty
    (420) conditionalExpression -> . conditionalOrExpression conditionalExpressionStats
    (421) conditionalExpression -> . conditionalOrExpression
    (425) conditionalOrExpression -> . conditionalAndExpression O_conditionalAndExpressions
    (426) conditionalOrExpression -> . conditionalAndExpression
    (430) conditionalAndExpression -> . inclusiveOrExpression O_inclusiveOrExpressions
    (431) conditionalAndExpression -> . inclusiveOrExpression
    (435) inclusiveOrExpression -> . exclusiveOrExpression V_exclusiveOrExpression
    (436) inclusiveOrExpression -> . exclusiveOrExpression
    (440) exclusiveOrExpression -> . andExpression CARET_andExpressions
    (441) exclusiveOrExpression -> . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    ASSERT          shift and go to state 507
    IF              shift and go to state 513
    FOR             shift and go to state 492
    WHILE           shift and go to state 500
    DO              shift and go to state 506
    TRY             shift and go to state 494
    SWITCH          shift and go to state 501
    SYNCHRONIZED    shift and go to state 490
    RETURN          shift and go to state 489
    THROW           shift and go to state 514
    BREAK           shift and go to state 505
    CONTINUE        shift and go to state 496
    SEMI            shift and go to state 508
    Identifier      shift and go to state 611
    BLPAREN         shift and go to state 335
    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    equalityExpression             shift and go to state 108
    inclusiveOrExpression          shift and go to state 99
    multiplicativeExpression       shift and go to state 128
    exclusiveOrExpression          shift and go to state 110
    conditionalAndExpression       shift and go to state 89
    FloatingPointLiteral           shift and go to state 119
    shiftExpression                shift and go to state 130
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    statement                      shift and go to state 683
    additiveExpression             shift and go to state 102
    instanceOfExpression           shift and go to state 96
    conditionalExpression          shift and go to state 266
    unaryExpression                shift and go to state 131
    integerLiteral                 shift and go to state 98
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    relationalExpression           shift and go to state 95
    conditionalOrExpression        shift and go to state 109
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    primitiveType                  shift and go to state 122
    statementExpression            shift and go to state 509
    andExpression                  shift and go to state 106
    expression                     shift and go to state 497
    block                          shift and go to state 498

state 603

    (345) Identifier_or_empty -> Identifier .

    SEMI            reduce using rule 345 (Identifier_or_empty -> Identifier .)


state 604

    (361) statement -> CONTINUE Identifier_or_empty . SEMI

    SEMI            shift and go to state 684


state 605

    (334) localVariableDeclarationStatement -> localVariableDeclaration SEMI .

    ASSERT          reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    IF              reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    FOR             reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    WHILE           reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    DO              reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    TRY             reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    SWITCH          reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    SYNCHRONIZED    reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    RETURN          reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    THROW           reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    BREAK           reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    CONTINUE        reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    SEMI            reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    Identifier      reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    BLPAREN         reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    PUBLIC          reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    PROTECTED       reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    PRIVATE         reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    ABSTRACT        reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    STATIC          reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    FINAL           reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    STRICTFP        reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    CLASS           reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    ENUM            reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    INTERFACE       reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    AT              reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    BOOLEAN         reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    CHAR            reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    BYTE            reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    SHORT           reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    INT             reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    LONG            reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    FLOAT           reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    DOUBLE          reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    PLUS            reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    DASH            reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    OP_INC          reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    OP_DEC          reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    TILDE           reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    EXCLAMATION     reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    LPAREN          reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    THIS            reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    SUPER           reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    NEW             reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    VOID            reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    CharacterLiteral reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    StringLiteral   reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    NULL            reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    LONG_NUMBER     reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    LONG_HEX_NUMBER reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    NON_INTEGER_1   reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    NON_INTEGER_2   reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    NON_INTEGER_3   reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    NON_INTEGER_4   reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    TRUE            reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    FALSE           reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    CASE            reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    DEFAULT         reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    BRPAREN         reduce using rule 334 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)


state 606

    (351) statement -> WHILE parExpression . statement
    (347) statement -> . block
    (348) statement -> . ASSERT expression expression_colon_or_empty SEMI
    (349) statement -> . IF parExpression statement else_statement
    (350) statement -> . FOR LPAREN forControl RPAREN statement
    (351) statement -> . WHILE parExpression statement
    (352) statement -> . DO statement WHILE parExpression SEMI
    (353) statement -> . TRY block catches FINALLY block
    (354) statement -> . TRY block catches
    (355) statement -> . TRY block FINALLY block
    (356) statement -> . SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN
    (357) statement -> . SYNCHRONIZED parExpression block
    (358) statement -> . RETURN expression_or_empty SEMI
    (359) statement -> . THROW expression SEMI
    (360) statement -> . BREAK Identifier_or_empty SEMI
    (361) statement -> . CONTINUE Identifier_or_empty SEMI
    (362) statement -> . SEMI
    (363) statement -> . statementExpression SEMI
    (364) statement -> . Identifier COLON statement
    (329) block -> . BLPAREN blockStatements BRPAREN
    (330) block -> . BLPAREN BRPAREN
    (400) statementExpression -> . expression
    (404) expression -> . conditionalExpression assignmentOperator_expression_empty
    (420) conditionalExpression -> . conditionalOrExpression conditionalExpressionStats
    (421) conditionalExpression -> . conditionalOrExpression
    (425) conditionalOrExpression -> . conditionalAndExpression O_conditionalAndExpressions
    (426) conditionalOrExpression -> . conditionalAndExpression
    (430) conditionalAndExpression -> . inclusiveOrExpression O_inclusiveOrExpressions
    (431) conditionalAndExpression -> . inclusiveOrExpression
    (435) inclusiveOrExpression -> . exclusiveOrExpression V_exclusiveOrExpression
    (436) inclusiveOrExpression -> . exclusiveOrExpression
    (440) exclusiveOrExpression -> . andExpression CARET_andExpressions
    (441) exclusiveOrExpression -> . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    ASSERT          shift and go to state 507
    IF              shift and go to state 513
    FOR             shift and go to state 492
    WHILE           shift and go to state 500
    DO              shift and go to state 506
    TRY             shift and go to state 494
    SWITCH          shift and go to state 501
    SYNCHRONIZED    shift and go to state 490
    RETURN          shift and go to state 489
    THROW           shift and go to state 514
    BREAK           shift and go to state 505
    CONTINUE        shift and go to state 496
    SEMI            shift and go to state 508
    Identifier      shift and go to state 611
    BLPAREN         shift and go to state 335
    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    equalityExpression             shift and go to state 108
    inclusiveOrExpression          shift and go to state 99
    multiplicativeExpression       shift and go to state 128
    exclusiveOrExpression          shift and go to state 110
    conditionalAndExpression       shift and go to state 89
    FloatingPointLiteral           shift and go to state 119
    shiftExpression                shift and go to state 130
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    statement                      shift and go to state 685
    additiveExpression             shift and go to state 102
    instanceOfExpression           shift and go to state 96
    conditionalExpression          shift and go to state 266
    unaryExpression                shift and go to state 131
    integerLiteral                 shift and go to state 98
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    relationalExpression           shift and go to state 95
    conditionalOrExpression        shift and go to state 109
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    primitiveType                  shift and go to state 122
    statementExpression            shift and go to state 509
    andExpression                  shift and go to state 106
    expression                     shift and go to state 497
    block                          shift and go to state 498

state 607

    (356) statement -> SWITCH parExpression . BLPAREN switchBlockStatementGroups BRPAREN

    BLPAREN         shift and go to state 686


state 608

    (336) localVariableDeclaration -> type variableDeclarators .

    SEMI            reduce using rule 336 (localVariableDeclaration -> type variableDeclarators .)


state 609

    (178) variableDeclaratorId -> Identifier . arrays
    (179) variableDeclaratorId -> Identifier .
    (138) arrays -> . arrays array
    (139) arrays -> . array
    (137) array -> . FLPAREN FRPAREN

    RPAREN          reduce using rule 179 (variableDeclaratorId -> Identifier .)
    EQUALS          reduce using rule 179 (variableDeclaratorId -> Identifier .)
    COMMA           reduce using rule 179 (variableDeclaratorId -> Identifier .)
    SEMI            reduce using rule 179 (variableDeclaratorId -> Identifier .)
    FLPAREN         shift and go to state 153

    arrays                         shift and go to state 553
    array                          shift and go to state 154

state 610

    (360) statement -> BREAK Identifier_or_empty . SEMI

    SEMI            shift and go to state 687


state 611

    (364) statement -> Identifier . COLON statement
    (512) primary -> Identifier . DOT_Identifiers identifierSuffix_empty
    (513) primary -> Identifier . identifierSuffix_empty
    (269) DOT_Identifiers -> . DOT_Identifier
    (270) DOT_Identifiers -> . DOT_Identifiers DOT_Identifier
    (504) identifierSuffix_empty -> . identifierSuffix
    (505) identifierSuffix_empty -> .
    (267) DOT_Identifier -> . DOT Identifier
    (268) DOT_Identifier -> . DOT MULT
    (520) identifierSuffix -> . arrays DOT CLASS
    (521) identifierSuffix -> . FL_expression_FRs
    (522) identifierSuffix -> . arguments
    (523) identifierSuffix -> . DOT CLASS
    (524) identifierSuffix -> . DOT explicitGenericInvocation
    (525) identifierSuffix -> . DOT THIS
    (526) identifierSuffix -> . DOT SUPER arguments
    (527) identifierSuffix -> . DOT NEW innerCreator
    (138) arrays -> . arrays array
    (139) arrays -> . array
    (518) FL_expression_FRs -> . FL_expression_FR
    (519) FL_expression_FRs -> . FL_expression_FRs FL_expression_FR
    (555) arguments -> . LPAREN expressionList_once RPAREN
    (137) array -> . FLPAREN FRPAREN
    (517) FL_expression_FR -> . FLPAREN expression FRPAREN

  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for FLPAREN resolved as shift
    COLON           shift and go to state 602
    OP_INC          reduce using rule 505 (identifierSuffix_empty -> .)
    OP_DEC          reduce using rule 505 (identifierSuffix_empty -> .)
    MULT            reduce using rule 505 (identifierSuffix_empty -> .)
    SLASH           reduce using rule 505 (identifierSuffix_empty -> .)
    PERCENT         reduce using rule 505 (identifierSuffix_empty -> .)
    PLUS            reduce using rule 505 (identifierSuffix_empty -> .)
    DASH            reduce using rule 505 (identifierSuffix_empty -> .)
    OP_SHR          reduce using rule 505 (identifierSuffix_empty -> .)
    OP_SHRR         reduce using rule 505 (identifierSuffix_empty -> .)
    OP_SHL          reduce using rule 505 (identifierSuffix_empty -> .)
    OP_LE           reduce using rule 505 (identifierSuffix_empty -> .)
    OP_GE           reduce using rule 505 (identifierSuffix_empty -> .)
    LESS            reduce using rule 505 (identifierSuffix_empty -> .)
    MORE            reduce using rule 505 (identifierSuffix_empty -> .)
    INSTANCEOF      reduce using rule 505 (identifierSuffix_empty -> .)
    OP_EQ           reduce using rule 505 (identifierSuffix_empty -> .)
    OP_NE           reduce using rule 505 (identifierSuffix_empty -> .)
    AND             reduce using rule 505 (identifierSuffix_empty -> .)
    CARET           reduce using rule 505 (identifierSuffix_empty -> .)
    VERTICAL        reduce using rule 505 (identifierSuffix_empty -> .)
    OP_LAND         reduce using rule 505 (identifierSuffix_empty -> .)
    OP_LOR          reduce using rule 505 (identifierSuffix_empty -> .)
    QUES            reduce using rule 505 (identifierSuffix_empty -> .)
    EQUALS          reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_ADD         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_SUB         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_MUL         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_DIV         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_AND         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_OR          reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_XOR         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_MOD         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_SHL         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_SHRR        reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_SHR         reduce using rule 505 (identifierSuffix_empty -> .)
    SEMI            reduce using rule 505 (identifierSuffix_empty -> .)
    DOT             shift and go to state 194
    LPAREN          shift and go to state 199
    FLPAREN         shift and go to state 193

  ! DOT             [ reduce using rule 505 (identifierSuffix_empty -> .) ]
  ! FLPAREN         [ reduce using rule 505 (identifierSuffix_empty -> .) ]

    FL_expression_FRs              shift and go to state 196
    identifierSuffix               shift and go to state 197
    FL_expression_FR               shift and go to state 192
    arrays                         shift and go to state 200
    DOT_Identifiers                shift and go to state 213
    identifierSuffix_empty         shift and go to state 215
    arguments                      shift and go to state 195
    DOT_Identifier                 shift and go to state 48
    array                          shift and go to state 154

state 612

    (352) statement -> DO statement . WHILE parExpression SEMI

    WHILE           shift and go to state 688


state 613

    (348) statement -> ASSERT expression . expression_colon_or_empty SEMI
    (339) expression_colon_or_empty -> . COLON expression
    (340) expression_colon_or_empty -> .

    COLON           shift and go to state 690
    SEMI            reduce using rule 340 (expression_colon_or_empty -> .)

    expression_colon_or_empty      shift and go to state 689

state 614

    (363) statement -> statementExpression SEMI .

    BRPAREN         reduce using rule 363 (statement -> statementExpression SEMI .)
    ASSERT          reduce using rule 363 (statement -> statementExpression SEMI .)
    IF              reduce using rule 363 (statement -> statementExpression SEMI .)
    FOR             reduce using rule 363 (statement -> statementExpression SEMI .)
    WHILE           reduce using rule 363 (statement -> statementExpression SEMI .)
    DO              reduce using rule 363 (statement -> statementExpression SEMI .)
    TRY             reduce using rule 363 (statement -> statementExpression SEMI .)
    SWITCH          reduce using rule 363 (statement -> statementExpression SEMI .)
    SYNCHRONIZED    reduce using rule 363 (statement -> statementExpression SEMI .)
    RETURN          reduce using rule 363 (statement -> statementExpression SEMI .)
    THROW           reduce using rule 363 (statement -> statementExpression SEMI .)
    BREAK           reduce using rule 363 (statement -> statementExpression SEMI .)
    CONTINUE        reduce using rule 363 (statement -> statementExpression SEMI .)
    SEMI            reduce using rule 363 (statement -> statementExpression SEMI .)
    Identifier      reduce using rule 363 (statement -> statementExpression SEMI .)
    BLPAREN         reduce using rule 363 (statement -> statementExpression SEMI .)
    PUBLIC          reduce using rule 363 (statement -> statementExpression SEMI .)
    PROTECTED       reduce using rule 363 (statement -> statementExpression SEMI .)
    PRIVATE         reduce using rule 363 (statement -> statementExpression SEMI .)
    ABSTRACT        reduce using rule 363 (statement -> statementExpression SEMI .)
    STATIC          reduce using rule 363 (statement -> statementExpression SEMI .)
    FINAL           reduce using rule 363 (statement -> statementExpression SEMI .)
    STRICTFP        reduce using rule 363 (statement -> statementExpression SEMI .)
    CLASS           reduce using rule 363 (statement -> statementExpression SEMI .)
    ENUM            reduce using rule 363 (statement -> statementExpression SEMI .)
    INTERFACE       reduce using rule 363 (statement -> statementExpression SEMI .)
    AT              reduce using rule 363 (statement -> statementExpression SEMI .)
    BOOLEAN         reduce using rule 363 (statement -> statementExpression SEMI .)
    CHAR            reduce using rule 363 (statement -> statementExpression SEMI .)
    BYTE            reduce using rule 363 (statement -> statementExpression SEMI .)
    SHORT           reduce using rule 363 (statement -> statementExpression SEMI .)
    INT             reduce using rule 363 (statement -> statementExpression SEMI .)
    LONG            reduce using rule 363 (statement -> statementExpression SEMI .)
    FLOAT           reduce using rule 363 (statement -> statementExpression SEMI .)
    DOUBLE          reduce using rule 363 (statement -> statementExpression SEMI .)
    PLUS            reduce using rule 363 (statement -> statementExpression SEMI .)
    DASH            reduce using rule 363 (statement -> statementExpression SEMI .)
    OP_INC          reduce using rule 363 (statement -> statementExpression SEMI .)
    OP_DEC          reduce using rule 363 (statement -> statementExpression SEMI .)
    TILDE           reduce using rule 363 (statement -> statementExpression SEMI .)
    EXCLAMATION     reduce using rule 363 (statement -> statementExpression SEMI .)
    LPAREN          reduce using rule 363 (statement -> statementExpression SEMI .)
    THIS            reduce using rule 363 (statement -> statementExpression SEMI .)
    SUPER           reduce using rule 363 (statement -> statementExpression SEMI .)
    NEW             reduce using rule 363 (statement -> statementExpression SEMI .)
    VOID            reduce using rule 363 (statement -> statementExpression SEMI .)
    CharacterLiteral reduce using rule 363 (statement -> statementExpression SEMI .)
    StringLiteral   reduce using rule 363 (statement -> statementExpression SEMI .)
    NULL            reduce using rule 363 (statement -> statementExpression SEMI .)
    LONG_NUMBER     reduce using rule 363 (statement -> statementExpression SEMI .)
    LONG_HEX_NUMBER reduce using rule 363 (statement -> statementExpression SEMI .)
    NON_INTEGER_1   reduce using rule 363 (statement -> statementExpression SEMI .)
    NON_INTEGER_2   reduce using rule 363 (statement -> statementExpression SEMI .)
    NON_INTEGER_3   reduce using rule 363 (statement -> statementExpression SEMI .)
    NON_INTEGER_4   reduce using rule 363 (statement -> statementExpression SEMI .)
    TRUE            reduce using rule 363 (statement -> statementExpression SEMI .)
    FALSE           reduce using rule 363 (statement -> statementExpression SEMI .)
    ELSE            reduce using rule 363 (statement -> statementExpression SEMI .)
    CASE            reduce using rule 363 (statement -> statementExpression SEMI .)
    DEFAULT         reduce using rule 363 (statement -> statementExpression SEMI .)


state 615

    (256) blockStatements -> blockStatements blockStatement .

    BRPAREN         reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    ASSERT          reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    IF              reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    FOR             reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    WHILE           reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    DO              reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    TRY             reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    SWITCH          reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    SYNCHRONIZED    reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    RETURN          reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    THROW           reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    BREAK           reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    CONTINUE        reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    SEMI            reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    Identifier      reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    BLPAREN         reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    PUBLIC          reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    PROTECTED       reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    PRIVATE         reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    ABSTRACT        reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    STATIC          reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    FINAL           reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    STRICTFP        reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    CLASS           reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    ENUM            reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    INTERFACE       reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    AT              reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    BOOLEAN         reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    CHAR            reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    BYTE            reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    SHORT           reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    INT             reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    LONG            reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    FLOAT           reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    DOUBLE          reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    PLUS            reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    DASH            reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    OP_INC          reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    OP_DEC          reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    TILDE           reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    EXCLAMATION     reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    LPAREN          reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    THIS            reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    SUPER           reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    NEW             reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    VOID            reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    CharacterLiteral reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    StringLiteral   reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    NULL            reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    LONG_NUMBER     reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    LONG_HEX_NUMBER reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    NON_INTEGER_1   reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    NON_INTEGER_2   reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    NON_INTEGER_3   reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    NON_INTEGER_4   reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    TRUE            reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    FALSE           reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    CASE            reduce using rule 256 (blockStatements -> blockStatements blockStatement .)
    DEFAULT         reduce using rule 256 (blockStatements -> blockStatements blockStatement .)


state 616

    (329) block -> BLPAREN blockStatements BRPAREN .

    BRPAREN         reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    ASSERT          reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    IF              reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    FOR             reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    WHILE           reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    DO              reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    TRY             reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    SWITCH          reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    SYNCHRONIZED    reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    RETURN          reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    THROW           reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    BREAK           reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    CONTINUE        reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    SEMI            reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    Identifier      reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    BLPAREN         reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    PUBLIC          reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    PROTECTED       reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    PRIVATE         reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    ABSTRACT        reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    STATIC          reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    FINAL           reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    STRICTFP        reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    CLASS           reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    ENUM            reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    INTERFACE       reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    AT              reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    BOOLEAN         reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    CHAR            reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    BYTE            reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    SHORT           reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    INT             reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    LONG            reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    FLOAT           reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    DOUBLE          reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    PLUS            reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    DASH            reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    OP_INC          reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    OP_DEC          reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    TILDE           reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    EXCLAMATION     reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    LPAREN          reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    THIS            reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    SUPER           reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    NEW             reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    VOID            reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    CharacterLiteral reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    StringLiteral   reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    NULL            reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    LONG_NUMBER     reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    LONG_HEX_NUMBER reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    NON_INTEGER_1   reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    NON_INTEGER_2   reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    NON_INTEGER_3   reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    NON_INTEGER_4   reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    TRUE            reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    FALSE           reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    NATIVE          reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    TRANSIENT       reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    VOLATILE        reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    LESS            reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    CASE            reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    DEFAULT         reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    ELSE            reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    CATCH           reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)
    FINALLY         reduce using rule 329 (block -> BLPAREN blockStatements BRPAREN .)


state 617

    (349) statement -> IF parExpression . statement else_statement
    (347) statement -> . block
    (348) statement -> . ASSERT expression expression_colon_or_empty SEMI
    (349) statement -> . IF parExpression statement else_statement
    (350) statement -> . FOR LPAREN forControl RPAREN statement
    (351) statement -> . WHILE parExpression statement
    (352) statement -> . DO statement WHILE parExpression SEMI
    (353) statement -> . TRY block catches FINALLY block
    (354) statement -> . TRY block catches
    (355) statement -> . TRY block FINALLY block
    (356) statement -> . SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN
    (357) statement -> . SYNCHRONIZED parExpression block
    (358) statement -> . RETURN expression_or_empty SEMI
    (359) statement -> . THROW expression SEMI
    (360) statement -> . BREAK Identifier_or_empty SEMI
    (361) statement -> . CONTINUE Identifier_or_empty SEMI
    (362) statement -> . SEMI
    (363) statement -> . statementExpression SEMI
    (364) statement -> . Identifier COLON statement
    (329) block -> . BLPAREN blockStatements BRPAREN
    (330) block -> . BLPAREN BRPAREN
    (400) statementExpression -> . expression
    (404) expression -> . conditionalExpression assignmentOperator_expression_empty
    (420) conditionalExpression -> . conditionalOrExpression conditionalExpressionStats
    (421) conditionalExpression -> . conditionalOrExpression
    (425) conditionalOrExpression -> . conditionalAndExpression O_conditionalAndExpressions
    (426) conditionalOrExpression -> . conditionalAndExpression
    (430) conditionalAndExpression -> . inclusiveOrExpression O_inclusiveOrExpressions
    (431) conditionalAndExpression -> . inclusiveOrExpression
    (435) inclusiveOrExpression -> . exclusiveOrExpression V_exclusiveOrExpression
    (436) inclusiveOrExpression -> . exclusiveOrExpression
    (440) exclusiveOrExpression -> . andExpression CARET_andExpressions
    (441) exclusiveOrExpression -> . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    ASSERT          shift and go to state 507
    IF              shift and go to state 513
    FOR             shift and go to state 492
    WHILE           shift and go to state 500
    DO              shift and go to state 506
    TRY             shift and go to state 494
    SWITCH          shift and go to state 501
    SYNCHRONIZED    shift and go to state 490
    RETURN          shift and go to state 489
    THROW           shift and go to state 514
    BREAK           shift and go to state 505
    CONTINUE        shift and go to state 496
    SEMI            shift and go to state 508
    Identifier      shift and go to state 611
    BLPAREN         shift and go to state 335
    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    equalityExpression             shift and go to state 108
    inclusiveOrExpression          shift and go to state 99
    multiplicativeExpression       shift and go to state 128
    exclusiveOrExpression          shift and go to state 110
    conditionalAndExpression       shift and go to state 89
    FloatingPointLiteral           shift and go to state 119
    shiftExpression                shift and go to state 130
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    statement                      shift and go to state 691
    additiveExpression             shift and go to state 102
    instanceOfExpression           shift and go to state 96
    conditionalExpression          shift and go to state 266
    unaryExpression                shift and go to state 131
    integerLiteral                 shift and go to state 98
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    relationalExpression           shift and go to state 95
    conditionalOrExpression        shift and go to state 109
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    primitiveType                  shift and go to state 122
    statementExpression            shift and go to state 509
    andExpression                  shift and go to state 106
    expression                     shift and go to state 497
    block                          shift and go to state 498

state 618

    (359) statement -> THROW expression . SEMI

    SEMI            shift and go to state 692


state 619

    (84) enumConstant -> annotations_once Identifier arguments_once classBody_once .

    COMMA           reduce using rule 84 (enumConstant -> annotations_once Identifier arguments_once classBody_once .)
    SEMI            reduce using rule 84 (enumConstant -> annotations_once Identifier arguments_once classBody_once .)
    BRPAREN         reduce using rule 84 (enumConstant -> annotations_once Identifier arguments_once classBody_once .)


state 620

    (543) explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .

    OP_INC          reduce using rule 543 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    OP_DEC          reduce using rule 543 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    DOT             reduce using rule 543 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    FLPAREN         reduce using rule 543 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    MULT            reduce using rule 543 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    SLASH           reduce using rule 543 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    PERCENT         reduce using rule 543 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    PLUS            reduce using rule 543 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    DASH            reduce using rule 543 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    OP_SHR          reduce using rule 543 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    OP_SHRR         reduce using rule 543 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    OP_SHL          reduce using rule 543 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    OP_LE           reduce using rule 543 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    OP_GE           reduce using rule 543 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    LESS            reduce using rule 543 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    MORE            reduce using rule 543 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    INSTANCEOF      reduce using rule 543 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    OP_EQ           reduce using rule 543 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    OP_NE           reduce using rule 543 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    AND             reduce using rule 543 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    CARET           reduce using rule 543 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    VERTICAL        reduce using rule 543 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    OP_LAND         reduce using rule 543 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    OP_LOR          reduce using rule 543 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    QUES            reduce using rule 543 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    EQUALS          reduce using rule 543 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    ASS_ADD         reduce using rule 543 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    ASS_SUB         reduce using rule 543 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    ASS_MUL         reduce using rule 543 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    ASS_DIV         reduce using rule 543 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    ASS_AND         reduce using rule 543 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    ASS_OR          reduce using rule 543 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    ASS_XOR         reduce using rule 543 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    ASS_MOD         reduce using rule 543 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    ASS_SHL         reduce using rule 543 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    ASS_SHRR        reduce using rule 543 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    ASS_SHR         reduce using rule 543 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    RPAREN          reduce using rule 543 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    COMMA           reduce using rule 543 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    SEMI            reduce using rule 543 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    BRPAREN         reduce using rule 543 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    FRPAREN         reduce using rule 543 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)
    COLON           reduce using rule 543 (explicitGenericInvocation -> nonWildcardTypeArguments Identifier arguments .)


state 621

    (535) innerCreator -> nonWildcardTypeArguments_empty Identifier . classCreatorRest
    (542) classCreatorRest -> . arguments classBody_once
    (555) arguments -> . LPAREN expressionList_once RPAREN

    LPAREN          shift and go to state 199

    classCreatorRest               shift and go to state 693
    arguments                      shift and go to state 397

state 622

    (397) COMMA_expressions -> COMMA_expressions COMMA_expression .

    COMMA           reduce using rule 397 (COMMA_expressions -> COMMA_expressions COMMA_expression .)
    RPAREN          reduce using rule 397 (COMMA_expressions -> COMMA_expressions COMMA_expression .)
    SEMI            reduce using rule 397 (COMMA_expressions -> COMMA_expressions COMMA_expression .)


state 623

    (395) COMMA_expression -> COMMA expression .

    COMMA           reduce using rule 395 (COMMA_expression -> COMMA expression .)
    RPAREN          reduce using rule 395 (COMMA_expression -> COMMA expression .)
    SEMI            reduce using rule 395 (COMMA_expression -> COMMA expression .)


state 624

    (417) conditionalExpressionStat -> QUES expression COLON expression .

    EQUALS          reduce using rule 417 (conditionalExpressionStat -> QUES expression COLON expression .)
    ASS_ADD         reduce using rule 417 (conditionalExpressionStat -> QUES expression COLON expression .)
    ASS_SUB         reduce using rule 417 (conditionalExpressionStat -> QUES expression COLON expression .)
    ASS_MUL         reduce using rule 417 (conditionalExpressionStat -> QUES expression COLON expression .)
    ASS_DIV         reduce using rule 417 (conditionalExpressionStat -> QUES expression COLON expression .)
    ASS_AND         reduce using rule 417 (conditionalExpressionStat -> QUES expression COLON expression .)
    ASS_OR          reduce using rule 417 (conditionalExpressionStat -> QUES expression COLON expression .)
    ASS_XOR         reduce using rule 417 (conditionalExpressionStat -> QUES expression COLON expression .)
    ASS_MOD         reduce using rule 417 (conditionalExpressionStat -> QUES expression COLON expression .)
    ASS_SHL         reduce using rule 417 (conditionalExpressionStat -> QUES expression COLON expression .)
    ASS_SHRR        reduce using rule 417 (conditionalExpressionStat -> QUES expression COLON expression .)
    ASS_SHR         reduce using rule 417 (conditionalExpressionStat -> QUES expression COLON expression .)
    RPAREN          reduce using rule 417 (conditionalExpressionStat -> QUES expression COLON expression .)
    FRPAREN         reduce using rule 417 (conditionalExpressionStat -> QUES expression COLON expression .)
    COMMA           reduce using rule 417 (conditionalExpressionStat -> QUES expression COLON expression .)
    COLON           reduce using rule 417 (conditionalExpressionStat -> QUES expression COLON expression .)
    SEMI            reduce using rule 417 (conditionalExpressionStat -> QUES expression COLON expression .)
    QUES            reduce using rule 417 (conditionalExpressionStat -> QUES expression COLON expression .)
    BRPAREN         reduce using rule 417 (conditionalExpressionStat -> QUES expression COLON expression .)


state 625

    (537) arrayCreatorRest -> FLPAREN FRPAREN arrayInitializer .

    OP_INC          reduce using rule 537 (arrayCreatorRest -> FLPAREN FRPAREN arrayInitializer .)
    OP_DEC          reduce using rule 537 (arrayCreatorRest -> FLPAREN FRPAREN arrayInitializer .)
    DOT             reduce using rule 537 (arrayCreatorRest -> FLPAREN FRPAREN arrayInitializer .)
    FLPAREN         reduce using rule 537 (arrayCreatorRest -> FLPAREN FRPAREN arrayInitializer .)
    MULT            reduce using rule 537 (arrayCreatorRest -> FLPAREN FRPAREN arrayInitializer .)
    SLASH           reduce using rule 537 (arrayCreatorRest -> FLPAREN FRPAREN arrayInitializer .)
    PERCENT         reduce using rule 537 (arrayCreatorRest -> FLPAREN FRPAREN arrayInitializer .)
    PLUS            reduce using rule 537 (arrayCreatorRest -> FLPAREN FRPAREN arrayInitializer .)
    DASH            reduce using rule 537 (arrayCreatorRest -> FLPAREN FRPAREN arrayInitializer .)
    OP_SHR          reduce using rule 537 (arrayCreatorRest -> FLPAREN FRPAREN arrayInitializer .)
    OP_SHRR         reduce using rule 537 (arrayCreatorRest -> FLPAREN FRPAREN arrayInitializer .)
    OP_SHL          reduce using rule 537 (arrayCreatorRest -> FLPAREN FRPAREN arrayInitializer .)
    OP_LE           reduce using rule 537 (arrayCreatorRest -> FLPAREN FRPAREN arrayInitializer .)
    OP_GE           reduce using rule 537 (arrayCreatorRest -> FLPAREN FRPAREN arrayInitializer .)
    LESS            reduce using rule 537 (arrayCreatorRest -> FLPAREN FRPAREN arrayInitializer .)
    MORE            reduce using rule 537 (arrayCreatorRest -> FLPAREN FRPAREN arrayInitializer .)
    INSTANCEOF      reduce using rule 537 (arrayCreatorRest -> FLPAREN FRPAREN arrayInitializer .)
    OP_EQ           reduce using rule 537 (arrayCreatorRest -> FLPAREN FRPAREN arrayInitializer .)
    OP_NE           reduce using rule 537 (arrayCreatorRest -> FLPAREN FRPAREN arrayInitializer .)
    AND             reduce using rule 537 (arrayCreatorRest -> FLPAREN FRPAREN arrayInitializer .)
    CARET           reduce using rule 537 (arrayCreatorRest -> FLPAREN FRPAREN arrayInitializer .)
    VERTICAL        reduce using rule 537 (arrayCreatorRest -> FLPAREN FRPAREN arrayInitializer .)
    OP_LAND         reduce using rule 537 (arrayCreatorRest -> FLPAREN FRPAREN arrayInitializer .)
    OP_LOR          reduce using rule 537 (arrayCreatorRest -> FLPAREN FRPAREN arrayInitializer .)
    QUES            reduce using rule 537 (arrayCreatorRest -> FLPAREN FRPAREN arrayInitializer .)
    RPAREN          reduce using rule 537 (arrayCreatorRest -> FLPAREN FRPAREN arrayInitializer .)
    COMMA           reduce using rule 537 (arrayCreatorRest -> FLPAREN FRPAREN arrayInitializer .)
    BRPAREN         reduce using rule 537 (arrayCreatorRest -> FLPAREN FRPAREN arrayInitializer .)
    EQUALS          reduce using rule 537 (arrayCreatorRest -> FLPAREN FRPAREN arrayInitializer .)
    ASS_ADD         reduce using rule 537 (arrayCreatorRest -> FLPAREN FRPAREN arrayInitializer .)
    ASS_SUB         reduce using rule 537 (arrayCreatorRest -> FLPAREN FRPAREN arrayInitializer .)
    ASS_MUL         reduce using rule 537 (arrayCreatorRest -> FLPAREN FRPAREN arrayInitializer .)
    ASS_DIV         reduce using rule 537 (arrayCreatorRest -> FLPAREN FRPAREN arrayInitializer .)
    ASS_AND         reduce using rule 537 (arrayCreatorRest -> FLPAREN FRPAREN arrayInitializer .)
    ASS_OR          reduce using rule 537 (arrayCreatorRest -> FLPAREN FRPAREN arrayInitializer .)
    ASS_XOR         reduce using rule 537 (arrayCreatorRest -> FLPAREN FRPAREN arrayInitializer .)
    ASS_MOD         reduce using rule 537 (arrayCreatorRest -> FLPAREN FRPAREN arrayInitializer .)
    ASS_SHL         reduce using rule 537 (arrayCreatorRest -> FLPAREN FRPAREN arrayInitializer .)
    ASS_SHRR        reduce using rule 537 (arrayCreatorRest -> FLPAREN FRPAREN arrayInitializer .)
    ASS_SHR         reduce using rule 537 (arrayCreatorRest -> FLPAREN FRPAREN arrayInitializer .)
    FRPAREN         reduce using rule 537 (arrayCreatorRest -> FLPAREN FRPAREN arrayInitializer .)
    COLON           reduce using rule 537 (arrayCreatorRest -> FLPAREN FRPAREN arrayInitializer .)
    SEMI            reduce using rule 537 (arrayCreatorRest -> FLPAREN FRPAREN arrayInitializer .)


state 626

    (536) arrayCreatorRest -> FLPAREN FRPAREN arrays . arrayInitializer
    (138) arrays -> arrays . array
    (189) arrayInitializer -> . BLPAREN array_body BRPAREN
    (137) array -> . FLPAREN FRPAREN

    BLPAREN         shift and go to state 627
    FLPAREN         shift and go to state 153

    arrayInitializer               shift and go to state 694
    array                          shift and go to state 308

state 627

    (189) arrayInitializer -> BLPAREN . array_body BRPAREN
    (187) array_body -> . variableInitializer COMMA_variableInitializers COMMA_once
    (188) array_body -> . variableInitializer COMMA_once
    (180) variableInitializer -> . arrayInitializer
    (181) variableInitializer -> . expression
    (189) arrayInitializer -> . BLPAREN array_body BRPAREN
    (404) expression -> . conditionalExpression assignmentOperator_expression_empty
    (420) conditionalExpression -> . conditionalOrExpression conditionalExpressionStats
    (421) conditionalExpression -> . conditionalOrExpression
    (425) conditionalOrExpression -> . conditionalAndExpression O_conditionalAndExpressions
    (426) conditionalOrExpression -> . conditionalAndExpression
    (430) conditionalAndExpression -> . inclusiveOrExpression O_inclusiveOrExpressions
    (431) conditionalAndExpression -> . inclusiveOrExpression
    (435) inclusiveOrExpression -> . exclusiveOrExpression V_exclusiveOrExpression
    (436) inclusiveOrExpression -> . exclusiveOrExpression
    (440) exclusiveOrExpression -> . andExpression CARET_andExpressions
    (441) exclusiveOrExpression -> . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    BLPAREN         shift and go to state 627
    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    equalityExpression             shift and go to state 108
    inclusiveOrExpression          shift and go to state 99
    multiplicativeExpression       shift and go to state 128
    exclusiveOrExpression          shift and go to state 110
    conditionalAndExpression       shift and go to state 89
    FloatingPointLiteral           shift and go to state 119
    shiftExpression                shift and go to state 130
    arrayInitializer               shift and go to state 629
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    array_body                     shift and go to state 695
    integerLiteral                 shift and go to state 98
    additiveExpression             shift and go to state 102
    conditionalExpression          shift and go to state 266
    unaryExpression                shift and go to state 131
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    relationalExpression           shift and go to state 95
    conditionalOrExpression        shift and go to state 109
    instanceOfExpression           shift and go to state 96
    castExpression                 shift and go to state 137
    variableInitializer            shift and go to state 696
    unaryExpressionNotPlusMinus    shift and go to state 105
    primitiveType                  shift and go to state 122
    andExpression                  shift and go to state 106
    expression                     shift and go to state 631

state 628

    (538) arrayCreatorRest -> FLPAREN expression FRPAREN . FL_expression_FRs arrays
    (539) arrayCreatorRest -> FLPAREN expression FRPAREN .
    (540) arrayCreatorRest -> FLPAREN expression FRPAREN . FL_expression_FRs
    (541) arrayCreatorRest -> FLPAREN expression FRPAREN . arrays
    (518) FL_expression_FRs -> . FL_expression_FR
    (519) FL_expression_FRs -> . FL_expression_FRs FL_expression_FR
    (138) arrays -> . arrays array
    (139) arrays -> . array
    (517) FL_expression_FR -> . FLPAREN expression FRPAREN
    (137) array -> . FLPAREN FRPAREN

  ! shift/reduce conflict for FLPAREN resolved as shift
    OP_INC          reduce using rule 539 (arrayCreatorRest -> FLPAREN expression FRPAREN .)
    OP_DEC          reduce using rule 539 (arrayCreatorRest -> FLPAREN expression FRPAREN .)
    DOT             reduce using rule 539 (arrayCreatorRest -> FLPAREN expression FRPAREN .)
    MULT            reduce using rule 539 (arrayCreatorRest -> FLPAREN expression FRPAREN .)
    SLASH           reduce using rule 539 (arrayCreatorRest -> FLPAREN expression FRPAREN .)
    PERCENT         reduce using rule 539 (arrayCreatorRest -> FLPAREN expression FRPAREN .)
    PLUS            reduce using rule 539 (arrayCreatorRest -> FLPAREN expression FRPAREN .)
    DASH            reduce using rule 539 (arrayCreatorRest -> FLPAREN expression FRPAREN .)
    OP_SHR          reduce using rule 539 (arrayCreatorRest -> FLPAREN expression FRPAREN .)
    OP_SHRR         reduce using rule 539 (arrayCreatorRest -> FLPAREN expression FRPAREN .)
    OP_SHL          reduce using rule 539 (arrayCreatorRest -> FLPAREN expression FRPAREN .)
    OP_LE           reduce using rule 539 (arrayCreatorRest -> FLPAREN expression FRPAREN .)
    OP_GE           reduce using rule 539 (arrayCreatorRest -> FLPAREN expression FRPAREN .)
    LESS            reduce using rule 539 (arrayCreatorRest -> FLPAREN expression FRPAREN .)
    MORE            reduce using rule 539 (arrayCreatorRest -> FLPAREN expression FRPAREN .)
    INSTANCEOF      reduce using rule 539 (arrayCreatorRest -> FLPAREN expression FRPAREN .)
    OP_EQ           reduce using rule 539 (arrayCreatorRest -> FLPAREN expression FRPAREN .)
    OP_NE           reduce using rule 539 (arrayCreatorRest -> FLPAREN expression FRPAREN .)
    AND             reduce using rule 539 (arrayCreatorRest -> FLPAREN expression FRPAREN .)
    CARET           reduce using rule 539 (arrayCreatorRest -> FLPAREN expression FRPAREN .)
    VERTICAL        reduce using rule 539 (arrayCreatorRest -> FLPAREN expression FRPAREN .)
    OP_LAND         reduce using rule 539 (arrayCreatorRest -> FLPAREN expression FRPAREN .)
    OP_LOR          reduce using rule 539 (arrayCreatorRest -> FLPAREN expression FRPAREN .)
    QUES            reduce using rule 539 (arrayCreatorRest -> FLPAREN expression FRPAREN .)
    RPAREN          reduce using rule 539 (arrayCreatorRest -> FLPAREN expression FRPAREN .)
    COMMA           reduce using rule 539 (arrayCreatorRest -> FLPAREN expression FRPAREN .)
    BRPAREN         reduce using rule 539 (arrayCreatorRest -> FLPAREN expression FRPAREN .)
    EQUALS          reduce using rule 539 (arrayCreatorRest -> FLPAREN expression FRPAREN .)
    ASS_ADD         reduce using rule 539 (arrayCreatorRest -> FLPAREN expression FRPAREN .)
    ASS_SUB         reduce using rule 539 (arrayCreatorRest -> FLPAREN expression FRPAREN .)
    ASS_MUL         reduce using rule 539 (arrayCreatorRest -> FLPAREN expression FRPAREN .)
    ASS_DIV         reduce using rule 539 (arrayCreatorRest -> FLPAREN expression FRPAREN .)
    ASS_AND         reduce using rule 539 (arrayCreatorRest -> FLPAREN expression FRPAREN .)
    ASS_OR          reduce using rule 539 (arrayCreatorRest -> FLPAREN expression FRPAREN .)
    ASS_XOR         reduce using rule 539 (arrayCreatorRest -> FLPAREN expression FRPAREN .)
    ASS_MOD         reduce using rule 539 (arrayCreatorRest -> FLPAREN expression FRPAREN .)
    ASS_SHL         reduce using rule 539 (arrayCreatorRest -> FLPAREN expression FRPAREN .)
    ASS_SHRR        reduce using rule 539 (arrayCreatorRest -> FLPAREN expression FRPAREN .)
    ASS_SHR         reduce using rule 539 (arrayCreatorRest -> FLPAREN expression FRPAREN .)
    FRPAREN         reduce using rule 539 (arrayCreatorRest -> FLPAREN expression FRPAREN .)
    COLON           reduce using rule 539 (arrayCreatorRest -> FLPAREN expression FRPAREN .)
    SEMI            reduce using rule 539 (arrayCreatorRest -> FLPAREN expression FRPAREN .)
    FLPAREN         shift and go to state 699

  ! FLPAREN         [ reduce using rule 539 (arrayCreatorRest -> FLPAREN expression FRPAREN .) ]

    FL_expression_FRs              shift and go to state 697
    arrays                         shift and go to state 698
    array                          shift and go to state 154
    FL_expression_FR               shift and go to state 192

state 629

    (180) variableInitializer -> arrayInitializer .

    COMMA           reduce using rule 180 (variableInitializer -> arrayInitializer .)
    SEMI            reduce using rule 180 (variableInitializer -> arrayInitializer .)
    BRPAREN         reduce using rule 180 (variableInitializer -> arrayInitializer .)


state 630

    (168) EQUALS_variableInitializer -> EQUALS variableInitializer .

    COMMA           reduce using rule 168 (EQUALS_variableInitializer -> EQUALS variableInitializer .)
    SEMI            reduce using rule 168 (EQUALS_variableInitializer -> EQUALS variableInitializer .)


state 631

    (181) variableInitializer -> expression .

    COMMA           reduce using rule 181 (variableInitializer -> expression .)
    SEMI            reduce using rule 181 (variableInitializer -> expression .)
    BRPAREN         reduce using rule 181 (variableInitializer -> expression .)


state 632

    (326) annotationMethodRest -> Identifier LPAREN RPAREN . defaultValue_or_empty
    (324) defaultValue_or_empty -> . defaultValue
    (325) defaultValue_or_empty -> .
    (328) defaultValue -> . DEFAULT elementValue

    SEMI            reduce using rule 325 (defaultValue_or_empty -> .)
    DEFAULT         shift and go to state 700

    defaultValue                   shift and go to state 701
    defaultValue_or_empty          shift and go to state 702

state 633

    (163) COMMA_VAR -> COMMA variableDeclarator .

    COMMA           reduce using rule 163 (COMMA_VAR -> COMMA variableDeclarator .)
    SEMI            reduce using rule 163 (COMMA_VAR -> COMMA variableDeclarator .)


state 634

    (165) COMMA_VARS -> COMMA_VARS COMMA_VAR .

    COMMA           reduce using rule 165 (COMMA_VARS -> COMMA_VARS COMMA_VAR .)
    SEMI            reduce using rule 165 (COMMA_VARS -> COMMA_VARS COMMA_VAR .)


state 635

    (130) interfaceMemberDecl -> VOID Identifier . voidInterfaceMethodDeclaratorRest
    (158) voidInterfaceMethodDeclaratorRest -> . formalParameters throwList SEMI
    (159) voidInterfaceMethodDeclaratorRest -> . formalParameters SEMI
    (246) formalParameters -> . LPAREN formalParameterDecls RPAREN

    LPAREN          shift and go to state 482

    formalParameters               shift and go to state 703
    voidInterfaceMethodDeclaratorRest shift and go to state 704

state 636

    (157) interfaceGenericMethodDecl -> typeParameters VOID . Identifier interfaceMethodDeclaratorRest

    Identifier      shift and go to state 705


state 637

    (156) interfaceGenericMethodDecl -> typeParameters type . Identifier interfaceMethodDeclaratorRest

    Identifier      shift and go to state 706


state 638

    (133) interfaceMethodOrFieldDecl -> type Identifier . interfaceMethodOrFieldRest
    (134) interfaceMethodOrFieldRest -> . constantDeclaratorsRest SEMI
    (135) interfaceMethodOrFieldRest -> . interfaceMethodDeclaratorRest
    (174) constantDeclaratorsRest -> . constantDeclaratorRest COMMA_consts
    (175) constantDeclaratorsRest -> . constantDeclaratorRest
    (152) interfaceMethodDeclaratorRest -> . formalParameters arrays throwList SEMI
    (153) interfaceMethodDeclaratorRest -> . formalParameters throwList SEMI
    (154) interfaceMethodDeclaratorRest -> . formalParameters arrays SEMI
    (155) interfaceMethodDeclaratorRest -> . formalParameters SEMI
    (176) constantDeclaratorRest -> . arrays EQUALS variableInitializer
    (177) constantDeclaratorRest -> . EQUALS variableInitializer
    (246) formalParameters -> . LPAREN formalParameterDecls RPAREN
    (138) arrays -> . arrays array
    (139) arrays -> . array
    (137) array -> . FLPAREN FRPAREN

    EQUALS          shift and go to state 712
    LPAREN          shift and go to state 482
    FLPAREN         shift and go to state 153

    interfaceMethodDeclaratorRest  shift and go to state 707
    formalParameters               shift and go to state 708
    arrays                         shift and go to state 709
    interfaceMethodOrFieldRest     shift and go to state 710
    constantDeclaratorsRest        shift and go to state 711
    constantDeclaratorRest         shift and go to state 713
    array                          shift and go to state 154

state 639

    (150) voidMethodDeclaratorRest -> formalParameters methodBody .

    SEMI            reduce using rule 150 (voidMethodDeclaratorRest -> formalParameters methodBody .)
    STATIC          reduce using rule 150 (voidMethodDeclaratorRest -> formalParameters methodBody .)
    BLPAREN         reduce using rule 150 (voidMethodDeclaratorRest -> formalParameters methodBody .)
    VOID            reduce using rule 150 (voidMethodDeclaratorRest -> formalParameters methodBody .)
    Identifier      reduce using rule 150 (voidMethodDeclaratorRest -> formalParameters methodBody .)
    PUBLIC          reduce using rule 150 (voidMethodDeclaratorRest -> formalParameters methodBody .)
    PROTECTED       reduce using rule 150 (voidMethodDeclaratorRest -> formalParameters methodBody .)
    PRIVATE         reduce using rule 150 (voidMethodDeclaratorRest -> formalParameters methodBody .)
    ABSTRACT        reduce using rule 150 (voidMethodDeclaratorRest -> formalParameters methodBody .)
    FINAL           reduce using rule 150 (voidMethodDeclaratorRest -> formalParameters methodBody .)
    NATIVE          reduce using rule 150 (voidMethodDeclaratorRest -> formalParameters methodBody .)
    SYNCHRONIZED    reduce using rule 150 (voidMethodDeclaratorRest -> formalParameters methodBody .)
    TRANSIENT       reduce using rule 150 (voidMethodDeclaratorRest -> formalParameters methodBody .)
    VOLATILE        reduce using rule 150 (voidMethodDeclaratorRest -> formalParameters methodBody .)
    STRICTFP        reduce using rule 150 (voidMethodDeclaratorRest -> formalParameters methodBody .)
    AT              reduce using rule 150 (voidMethodDeclaratorRest -> formalParameters methodBody .)
    LESS            reduce using rule 150 (voidMethodDeclaratorRest -> formalParameters methodBody .)
    INTERFACE       reduce using rule 150 (voidMethodDeclaratorRest -> formalParameters methodBody .)
    CLASS           reduce using rule 150 (voidMethodDeclaratorRest -> formalParameters methodBody .)
    ENUM            reduce using rule 150 (voidMethodDeclaratorRest -> formalParameters methodBody .)
    BOOLEAN         reduce using rule 150 (voidMethodDeclaratorRest -> formalParameters methodBody .)
    CHAR            reduce using rule 150 (voidMethodDeclaratorRest -> formalParameters methodBody .)
    BYTE            reduce using rule 150 (voidMethodDeclaratorRest -> formalParameters methodBody .)
    SHORT           reduce using rule 150 (voidMethodDeclaratorRest -> formalParameters methodBody .)
    INT             reduce using rule 150 (voidMethodDeclaratorRest -> formalParameters methodBody .)
    LONG            reduce using rule 150 (voidMethodDeclaratorRest -> formalParameters methodBody .)
    FLOAT           reduce using rule 150 (voidMethodDeclaratorRest -> formalParameters methodBody .)
    DOUBLE          reduce using rule 150 (voidMethodDeclaratorRest -> formalParameters methodBody .)
    BRPAREN         reduce using rule 150 (voidMethodDeclaratorRest -> formalParameters methodBody .)


state 640

    (151) voidMethodDeclaratorRest -> formalParameters SEMI .

    SEMI            reduce using rule 151 (voidMethodDeclaratorRest -> formalParameters SEMI .)
    STATIC          reduce using rule 151 (voidMethodDeclaratorRest -> formalParameters SEMI .)
    BLPAREN         reduce using rule 151 (voidMethodDeclaratorRest -> formalParameters SEMI .)
    VOID            reduce using rule 151 (voidMethodDeclaratorRest -> formalParameters SEMI .)
    Identifier      reduce using rule 151 (voidMethodDeclaratorRest -> formalParameters SEMI .)
    PUBLIC          reduce using rule 151 (voidMethodDeclaratorRest -> formalParameters SEMI .)
    PROTECTED       reduce using rule 151 (voidMethodDeclaratorRest -> formalParameters SEMI .)
    PRIVATE         reduce using rule 151 (voidMethodDeclaratorRest -> formalParameters SEMI .)
    ABSTRACT        reduce using rule 151 (voidMethodDeclaratorRest -> formalParameters SEMI .)
    FINAL           reduce using rule 151 (voidMethodDeclaratorRest -> formalParameters SEMI .)
    NATIVE          reduce using rule 151 (voidMethodDeclaratorRest -> formalParameters SEMI .)
    SYNCHRONIZED    reduce using rule 151 (voidMethodDeclaratorRest -> formalParameters SEMI .)
    TRANSIENT       reduce using rule 151 (voidMethodDeclaratorRest -> formalParameters SEMI .)
    VOLATILE        reduce using rule 151 (voidMethodDeclaratorRest -> formalParameters SEMI .)
    STRICTFP        reduce using rule 151 (voidMethodDeclaratorRest -> formalParameters SEMI .)
    AT              reduce using rule 151 (voidMethodDeclaratorRest -> formalParameters SEMI .)
    LESS            reduce using rule 151 (voidMethodDeclaratorRest -> formalParameters SEMI .)
    INTERFACE       reduce using rule 151 (voidMethodDeclaratorRest -> formalParameters SEMI .)
    CLASS           reduce using rule 151 (voidMethodDeclaratorRest -> formalParameters SEMI .)
    ENUM            reduce using rule 151 (voidMethodDeclaratorRest -> formalParameters SEMI .)
    BOOLEAN         reduce using rule 151 (voidMethodDeclaratorRest -> formalParameters SEMI .)
    CHAR            reduce using rule 151 (voidMethodDeclaratorRest -> formalParameters SEMI .)
    BYTE            reduce using rule 151 (voidMethodDeclaratorRest -> formalParameters SEMI .)
    SHORT           reduce using rule 151 (voidMethodDeclaratorRest -> formalParameters SEMI .)
    INT             reduce using rule 151 (voidMethodDeclaratorRest -> formalParameters SEMI .)
    LONG            reduce using rule 151 (voidMethodDeclaratorRest -> formalParameters SEMI .)
    FLOAT           reduce using rule 151 (voidMethodDeclaratorRest -> formalParameters SEMI .)
    DOUBLE          reduce using rule 151 (voidMethodDeclaratorRest -> formalParameters SEMI .)
    BRPAREN         reduce using rule 151 (voidMethodDeclaratorRest -> formalParameters SEMI .)


state 641

    (148) voidMethodDeclaratorRest -> formalParameters throwList . methodBody
    (149) voidMethodDeclaratorRest -> formalParameters throwList . SEMI
    (254) methodBody -> . block
    (329) block -> . BLPAREN blockStatements BRPAREN
    (330) block -> . BLPAREN BRPAREN

    SEMI            shift and go to state 715
    BLPAREN         shift and go to state 335

    methodBody                     shift and go to state 714
    block                          shift and go to state 642

state 642

    (254) methodBody -> block .

    SEMI            reduce using rule 254 (methodBody -> block .)
    STATIC          reduce using rule 254 (methodBody -> block .)
    BLPAREN         reduce using rule 254 (methodBody -> block .)
    VOID            reduce using rule 254 (methodBody -> block .)
    Identifier      reduce using rule 254 (methodBody -> block .)
    PUBLIC          reduce using rule 254 (methodBody -> block .)
    PROTECTED       reduce using rule 254 (methodBody -> block .)
    PRIVATE         reduce using rule 254 (methodBody -> block .)
    ABSTRACT        reduce using rule 254 (methodBody -> block .)
    FINAL           reduce using rule 254 (methodBody -> block .)
    NATIVE          reduce using rule 254 (methodBody -> block .)
    SYNCHRONIZED    reduce using rule 254 (methodBody -> block .)
    TRANSIENT       reduce using rule 254 (methodBody -> block .)
    VOLATILE        reduce using rule 254 (methodBody -> block .)
    STRICTFP        reduce using rule 254 (methodBody -> block .)
    AT              reduce using rule 254 (methodBody -> block .)
    LESS            reduce using rule 254 (methodBody -> block .)
    INTERFACE       reduce using rule 254 (methodBody -> block .)
    CLASS           reduce using rule 254 (methodBody -> block .)
    ENUM            reduce using rule 254 (methodBody -> block .)
    BOOLEAN         reduce using rule 254 (methodBody -> block .)
    CHAR            reduce using rule 254 (methodBody -> block .)
    BYTE            reduce using rule 254 (methodBody -> block .)
    SHORT           reduce using rule 254 (methodBody -> block .)
    INT             reduce using rule 254 (methodBody -> block .)
    LONG            reduce using rule 254 (methodBody -> block .)
    FLOAT           reduce using rule 254 (methodBody -> block .)
    DOUBLE          reduce using rule 254 (methodBody -> block .)
    BRPAREN         reduce using rule 254 (methodBody -> block .)


state 643

    (122) genericMethodOrConstructorRest -> VOID Identifier methodDeclaratorRest .

    SEMI            reduce using rule 122 (genericMethodOrConstructorRest -> VOID Identifier methodDeclaratorRest .)
    STATIC          reduce using rule 122 (genericMethodOrConstructorRest -> VOID Identifier methodDeclaratorRest .)
    BLPAREN         reduce using rule 122 (genericMethodOrConstructorRest -> VOID Identifier methodDeclaratorRest .)
    VOID            reduce using rule 122 (genericMethodOrConstructorRest -> VOID Identifier methodDeclaratorRest .)
    Identifier      reduce using rule 122 (genericMethodOrConstructorRest -> VOID Identifier methodDeclaratorRest .)
    PUBLIC          reduce using rule 122 (genericMethodOrConstructorRest -> VOID Identifier methodDeclaratorRest .)
    PROTECTED       reduce using rule 122 (genericMethodOrConstructorRest -> VOID Identifier methodDeclaratorRest .)
    PRIVATE         reduce using rule 122 (genericMethodOrConstructorRest -> VOID Identifier methodDeclaratorRest .)
    ABSTRACT        reduce using rule 122 (genericMethodOrConstructorRest -> VOID Identifier methodDeclaratorRest .)
    FINAL           reduce using rule 122 (genericMethodOrConstructorRest -> VOID Identifier methodDeclaratorRest .)
    NATIVE          reduce using rule 122 (genericMethodOrConstructorRest -> VOID Identifier methodDeclaratorRest .)
    SYNCHRONIZED    reduce using rule 122 (genericMethodOrConstructorRest -> VOID Identifier methodDeclaratorRest .)
    TRANSIENT       reduce using rule 122 (genericMethodOrConstructorRest -> VOID Identifier methodDeclaratorRest .)
    VOLATILE        reduce using rule 122 (genericMethodOrConstructorRest -> VOID Identifier methodDeclaratorRest .)
    STRICTFP        reduce using rule 122 (genericMethodOrConstructorRest -> VOID Identifier methodDeclaratorRest .)
    AT              reduce using rule 122 (genericMethodOrConstructorRest -> VOID Identifier methodDeclaratorRest .)
    LESS            reduce using rule 122 (genericMethodOrConstructorRest -> VOID Identifier methodDeclaratorRest .)
    INTERFACE       reduce using rule 122 (genericMethodOrConstructorRest -> VOID Identifier methodDeclaratorRest .)
    CLASS           reduce using rule 122 (genericMethodOrConstructorRest -> VOID Identifier methodDeclaratorRest .)
    ENUM            reduce using rule 122 (genericMethodOrConstructorRest -> VOID Identifier methodDeclaratorRest .)
    BOOLEAN         reduce using rule 122 (genericMethodOrConstructorRest -> VOID Identifier methodDeclaratorRest .)
    CHAR            reduce using rule 122 (genericMethodOrConstructorRest -> VOID Identifier methodDeclaratorRest .)
    BYTE            reduce using rule 122 (genericMethodOrConstructorRest -> VOID Identifier methodDeclaratorRest .)
    SHORT           reduce using rule 122 (genericMethodOrConstructorRest -> VOID Identifier methodDeclaratorRest .)
    INT             reduce using rule 122 (genericMethodOrConstructorRest -> VOID Identifier methodDeclaratorRest .)
    LONG            reduce using rule 122 (genericMethodOrConstructorRest -> VOID Identifier methodDeclaratorRest .)
    FLOAT           reduce using rule 122 (genericMethodOrConstructorRest -> VOID Identifier methodDeclaratorRest .)
    DOUBLE          reduce using rule 122 (genericMethodOrConstructorRest -> VOID Identifier methodDeclaratorRest .)
    BRPAREN         reduce using rule 122 (genericMethodOrConstructorRest -> VOID Identifier methodDeclaratorRest .)


state 644

    (121) genericMethodOrConstructorRest -> type Identifier methodDeclaratorRest .

    SEMI            reduce using rule 121 (genericMethodOrConstructorRest -> type Identifier methodDeclaratorRest .)
    STATIC          reduce using rule 121 (genericMethodOrConstructorRest -> type Identifier methodDeclaratorRest .)
    BLPAREN         reduce using rule 121 (genericMethodOrConstructorRest -> type Identifier methodDeclaratorRest .)
    VOID            reduce using rule 121 (genericMethodOrConstructorRest -> type Identifier methodDeclaratorRest .)
    Identifier      reduce using rule 121 (genericMethodOrConstructorRest -> type Identifier methodDeclaratorRest .)
    PUBLIC          reduce using rule 121 (genericMethodOrConstructorRest -> type Identifier methodDeclaratorRest .)
    PROTECTED       reduce using rule 121 (genericMethodOrConstructorRest -> type Identifier methodDeclaratorRest .)
    PRIVATE         reduce using rule 121 (genericMethodOrConstructorRest -> type Identifier methodDeclaratorRest .)
    ABSTRACT        reduce using rule 121 (genericMethodOrConstructorRest -> type Identifier methodDeclaratorRest .)
    FINAL           reduce using rule 121 (genericMethodOrConstructorRest -> type Identifier methodDeclaratorRest .)
    NATIVE          reduce using rule 121 (genericMethodOrConstructorRest -> type Identifier methodDeclaratorRest .)
    SYNCHRONIZED    reduce using rule 121 (genericMethodOrConstructorRest -> type Identifier methodDeclaratorRest .)
    TRANSIENT       reduce using rule 121 (genericMethodOrConstructorRest -> type Identifier methodDeclaratorRest .)
    VOLATILE        reduce using rule 121 (genericMethodOrConstructorRest -> type Identifier methodDeclaratorRest .)
    STRICTFP        reduce using rule 121 (genericMethodOrConstructorRest -> type Identifier methodDeclaratorRest .)
    AT              reduce using rule 121 (genericMethodOrConstructorRest -> type Identifier methodDeclaratorRest .)
    LESS            reduce using rule 121 (genericMethodOrConstructorRest -> type Identifier methodDeclaratorRest .)
    INTERFACE       reduce using rule 121 (genericMethodOrConstructorRest -> type Identifier methodDeclaratorRest .)
    CLASS           reduce using rule 121 (genericMethodOrConstructorRest -> type Identifier methodDeclaratorRest .)
    ENUM            reduce using rule 121 (genericMethodOrConstructorRest -> type Identifier methodDeclaratorRest .)
    BOOLEAN         reduce using rule 121 (genericMethodOrConstructorRest -> type Identifier methodDeclaratorRest .)
    CHAR            reduce using rule 121 (genericMethodOrConstructorRest -> type Identifier methodDeclaratorRest .)
    BYTE            reduce using rule 121 (genericMethodOrConstructorRest -> type Identifier methodDeclaratorRest .)
    SHORT           reduce using rule 121 (genericMethodOrConstructorRest -> type Identifier methodDeclaratorRest .)
    INT             reduce using rule 121 (genericMethodOrConstructorRest -> type Identifier methodDeclaratorRest .)
    LONG            reduce using rule 121 (genericMethodOrConstructorRest -> type Identifier methodDeclaratorRest .)
    FLOAT           reduce using rule 121 (genericMethodOrConstructorRest -> type Identifier methodDeclaratorRest .)
    DOUBLE          reduce using rule 121 (genericMethodOrConstructorRest -> type Identifier methodDeclaratorRest .)
    BRPAREN         reduce using rule 121 (genericMethodOrConstructorRest -> type Identifier methodDeclaratorRest .)


state 645

    (146) methodDeclaratorRest -> formalParameters methodBody .

    SEMI            reduce using rule 146 (methodDeclaratorRest -> formalParameters methodBody .)
    STATIC          reduce using rule 146 (methodDeclaratorRest -> formalParameters methodBody .)
    BLPAREN         reduce using rule 146 (methodDeclaratorRest -> formalParameters methodBody .)
    VOID            reduce using rule 146 (methodDeclaratorRest -> formalParameters methodBody .)
    Identifier      reduce using rule 146 (methodDeclaratorRest -> formalParameters methodBody .)
    PUBLIC          reduce using rule 146 (methodDeclaratorRest -> formalParameters methodBody .)
    PROTECTED       reduce using rule 146 (methodDeclaratorRest -> formalParameters methodBody .)
    PRIVATE         reduce using rule 146 (methodDeclaratorRest -> formalParameters methodBody .)
    ABSTRACT        reduce using rule 146 (methodDeclaratorRest -> formalParameters methodBody .)
    FINAL           reduce using rule 146 (methodDeclaratorRest -> formalParameters methodBody .)
    NATIVE          reduce using rule 146 (methodDeclaratorRest -> formalParameters methodBody .)
    SYNCHRONIZED    reduce using rule 146 (methodDeclaratorRest -> formalParameters methodBody .)
    TRANSIENT       reduce using rule 146 (methodDeclaratorRest -> formalParameters methodBody .)
    VOLATILE        reduce using rule 146 (methodDeclaratorRest -> formalParameters methodBody .)
    STRICTFP        reduce using rule 146 (methodDeclaratorRest -> formalParameters methodBody .)
    AT              reduce using rule 146 (methodDeclaratorRest -> formalParameters methodBody .)
    LESS            reduce using rule 146 (methodDeclaratorRest -> formalParameters methodBody .)
    INTERFACE       reduce using rule 146 (methodDeclaratorRest -> formalParameters methodBody .)
    CLASS           reduce using rule 146 (methodDeclaratorRest -> formalParameters methodBody .)
    ENUM            reduce using rule 146 (methodDeclaratorRest -> formalParameters methodBody .)
    BOOLEAN         reduce using rule 146 (methodDeclaratorRest -> formalParameters methodBody .)
    CHAR            reduce using rule 146 (methodDeclaratorRest -> formalParameters methodBody .)
    BYTE            reduce using rule 146 (methodDeclaratorRest -> formalParameters methodBody .)
    SHORT           reduce using rule 146 (methodDeclaratorRest -> formalParameters methodBody .)
    INT             reduce using rule 146 (methodDeclaratorRest -> formalParameters methodBody .)
    LONG            reduce using rule 146 (methodDeclaratorRest -> formalParameters methodBody .)
    FLOAT           reduce using rule 146 (methodDeclaratorRest -> formalParameters methodBody .)
    DOUBLE          reduce using rule 146 (methodDeclaratorRest -> formalParameters methodBody .)
    BRPAREN         reduce using rule 146 (methodDeclaratorRest -> formalParameters methodBody .)


state 646

    (147) methodDeclaratorRest -> formalParameters SEMI .

    SEMI            reduce using rule 147 (methodDeclaratorRest -> formalParameters SEMI .)
    STATIC          reduce using rule 147 (methodDeclaratorRest -> formalParameters SEMI .)
    BLPAREN         reduce using rule 147 (methodDeclaratorRest -> formalParameters SEMI .)
    VOID            reduce using rule 147 (methodDeclaratorRest -> formalParameters SEMI .)
    Identifier      reduce using rule 147 (methodDeclaratorRest -> formalParameters SEMI .)
    PUBLIC          reduce using rule 147 (methodDeclaratorRest -> formalParameters SEMI .)
    PROTECTED       reduce using rule 147 (methodDeclaratorRest -> formalParameters SEMI .)
    PRIVATE         reduce using rule 147 (methodDeclaratorRest -> formalParameters SEMI .)
    ABSTRACT        reduce using rule 147 (methodDeclaratorRest -> formalParameters SEMI .)
    FINAL           reduce using rule 147 (methodDeclaratorRest -> formalParameters SEMI .)
    NATIVE          reduce using rule 147 (methodDeclaratorRest -> formalParameters SEMI .)
    SYNCHRONIZED    reduce using rule 147 (methodDeclaratorRest -> formalParameters SEMI .)
    TRANSIENT       reduce using rule 147 (methodDeclaratorRest -> formalParameters SEMI .)
    VOLATILE        reduce using rule 147 (methodDeclaratorRest -> formalParameters SEMI .)
    STRICTFP        reduce using rule 147 (methodDeclaratorRest -> formalParameters SEMI .)
    AT              reduce using rule 147 (methodDeclaratorRest -> formalParameters SEMI .)
    LESS            reduce using rule 147 (methodDeclaratorRest -> formalParameters SEMI .)
    INTERFACE       reduce using rule 147 (methodDeclaratorRest -> formalParameters SEMI .)
    CLASS           reduce using rule 147 (methodDeclaratorRest -> formalParameters SEMI .)
    ENUM            reduce using rule 147 (methodDeclaratorRest -> formalParameters SEMI .)
    BOOLEAN         reduce using rule 147 (methodDeclaratorRest -> formalParameters SEMI .)
    CHAR            reduce using rule 147 (methodDeclaratorRest -> formalParameters SEMI .)
    BYTE            reduce using rule 147 (methodDeclaratorRest -> formalParameters SEMI .)
    SHORT           reduce using rule 147 (methodDeclaratorRest -> formalParameters SEMI .)
    INT             reduce using rule 147 (methodDeclaratorRest -> formalParameters SEMI .)
    LONG            reduce using rule 147 (methodDeclaratorRest -> formalParameters SEMI .)
    FLOAT           reduce using rule 147 (methodDeclaratorRest -> formalParameters SEMI .)
    DOUBLE          reduce using rule 147 (methodDeclaratorRest -> formalParameters SEMI .)
    BRPAREN         reduce using rule 147 (methodDeclaratorRest -> formalParameters SEMI .)


state 647

    (140) methodDeclaratorRest -> formalParameters arrays . throwList methodBody
    (141) methodDeclaratorRest -> formalParameters arrays . throwList SEMI
    (144) methodDeclaratorRest -> formalParameters arrays . methodBody
    (145) methodDeclaratorRest -> formalParameters arrays . SEMI
    (138) arrays -> arrays . array
    (136) throwList -> . THROWS qualifiedNameList
    (254) methodBody -> . block
    (137) array -> . FLPAREN FRPAREN
    (329) block -> . BLPAREN blockStatements BRPAREN
    (330) block -> . BLPAREN BRPAREN

    SEMI            shift and go to state 717
    THROWS          shift and go to state 586
    FLPAREN         shift and go to state 153
    BLPAREN         shift and go to state 335

    methodBody                     shift and go to state 716
    throwList                      shift and go to state 718
    array                          shift and go to state 308
    block                          shift and go to state 642

state 648

    (142) methodDeclaratorRest -> formalParameters throwList . SEMI
    (143) methodDeclaratorRest -> formalParameters throwList . methodBody
    (254) methodBody -> . block
    (329) block -> . BLPAREN blockStatements BRPAREN
    (330) block -> . BLPAREN BRPAREN

    SEMI            shift and go to state 720
    BLPAREN         shift and go to state 335

    methodBody                     shift and go to state 719
    block                          shift and go to state 642

state 649

    (160) constructorDeclaratorRest -> formalParameters throwList constructorBody .

    SEMI            reduce using rule 160 (constructorDeclaratorRest -> formalParameters throwList constructorBody .)
    STATIC          reduce using rule 160 (constructorDeclaratorRest -> formalParameters throwList constructorBody .)
    BLPAREN         reduce using rule 160 (constructorDeclaratorRest -> formalParameters throwList constructorBody .)
    VOID            reduce using rule 160 (constructorDeclaratorRest -> formalParameters throwList constructorBody .)
    Identifier      reduce using rule 160 (constructorDeclaratorRest -> formalParameters throwList constructorBody .)
    PUBLIC          reduce using rule 160 (constructorDeclaratorRest -> formalParameters throwList constructorBody .)
    PROTECTED       reduce using rule 160 (constructorDeclaratorRest -> formalParameters throwList constructorBody .)
    PRIVATE         reduce using rule 160 (constructorDeclaratorRest -> formalParameters throwList constructorBody .)
    ABSTRACT        reduce using rule 160 (constructorDeclaratorRest -> formalParameters throwList constructorBody .)
    FINAL           reduce using rule 160 (constructorDeclaratorRest -> formalParameters throwList constructorBody .)
    NATIVE          reduce using rule 160 (constructorDeclaratorRest -> formalParameters throwList constructorBody .)
    SYNCHRONIZED    reduce using rule 160 (constructorDeclaratorRest -> formalParameters throwList constructorBody .)
    TRANSIENT       reduce using rule 160 (constructorDeclaratorRest -> formalParameters throwList constructorBody .)
    VOLATILE        reduce using rule 160 (constructorDeclaratorRest -> formalParameters throwList constructorBody .)
    STRICTFP        reduce using rule 160 (constructorDeclaratorRest -> formalParameters throwList constructorBody .)
    AT              reduce using rule 160 (constructorDeclaratorRest -> formalParameters throwList constructorBody .)
    LESS            reduce using rule 160 (constructorDeclaratorRest -> formalParameters throwList constructorBody .)
    INTERFACE       reduce using rule 160 (constructorDeclaratorRest -> formalParameters throwList constructorBody .)
    CLASS           reduce using rule 160 (constructorDeclaratorRest -> formalParameters throwList constructorBody .)
    ENUM            reduce using rule 160 (constructorDeclaratorRest -> formalParameters throwList constructorBody .)
    BOOLEAN         reduce using rule 160 (constructorDeclaratorRest -> formalParameters throwList constructorBody .)
    CHAR            reduce using rule 160 (constructorDeclaratorRest -> formalParameters throwList constructorBody .)
    BYTE            reduce using rule 160 (constructorDeclaratorRest -> formalParameters throwList constructorBody .)
    SHORT           reduce using rule 160 (constructorDeclaratorRest -> formalParameters throwList constructorBody .)
    INT             reduce using rule 160 (constructorDeclaratorRest -> formalParameters throwList constructorBody .)
    LONG            reduce using rule 160 (constructorDeclaratorRest -> formalParameters throwList constructorBody .)
    FLOAT           reduce using rule 160 (constructorDeclaratorRest -> formalParameters throwList constructorBody .)
    DOUBLE          reduce using rule 160 (constructorDeclaratorRest -> formalParameters throwList constructorBody .)
    BRPAREN         reduce using rule 160 (constructorDeclaratorRest -> formalParameters throwList constructorBody .)


state 650

    (261) explicitConstructorInvocation -> nonWildcardTypeArguments . THIS arguments SEMI
    (262) explicitConstructorInvocation -> nonWildcardTypeArguments . SUPER arguments SEMI

    THIS            shift and go to state 721
    SUPER           shift and go to state 722


state 651

    (263) explicitConstructorInvocation -> THIS . arguments SEMI
    (507) primary -> THIS . DOT_Identifiers identifierSuffix_empty
    (508) primary -> THIS . identifierSuffix_empty
    (555) arguments -> . LPAREN expressionList_once RPAREN
    (269) DOT_Identifiers -> . DOT_Identifier
    (270) DOT_Identifiers -> . DOT_Identifiers DOT_Identifier
    (504) identifierSuffix_empty -> . identifierSuffix
    (505) identifierSuffix_empty -> .
    (267) DOT_Identifier -> . DOT Identifier
    (268) DOT_Identifier -> . DOT MULT
    (520) identifierSuffix -> . arrays DOT CLASS
    (521) identifierSuffix -> . FL_expression_FRs
    (522) identifierSuffix -> . arguments
    (523) identifierSuffix -> . DOT CLASS
    (524) identifierSuffix -> . DOT explicitGenericInvocation
    (525) identifierSuffix -> . DOT THIS
    (526) identifierSuffix -> . DOT SUPER arguments
    (527) identifierSuffix -> . DOT NEW innerCreator
    (138) arrays -> . arrays array
    (139) arrays -> . array
    (518) FL_expression_FRs -> . FL_expression_FR
    (519) FL_expression_FRs -> . FL_expression_FRs FL_expression_FR
    (137) array -> . FLPAREN FRPAREN
    (517) FL_expression_FR -> . FLPAREN expression FRPAREN

  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for FLPAREN resolved as shift
    LPAREN          shift and go to state 199
    OP_INC          reduce using rule 505 (identifierSuffix_empty -> .)
    OP_DEC          reduce using rule 505 (identifierSuffix_empty -> .)
    MULT            reduce using rule 505 (identifierSuffix_empty -> .)
    SLASH           reduce using rule 505 (identifierSuffix_empty -> .)
    PERCENT         reduce using rule 505 (identifierSuffix_empty -> .)
    PLUS            reduce using rule 505 (identifierSuffix_empty -> .)
    DASH            reduce using rule 505 (identifierSuffix_empty -> .)
    OP_SHR          reduce using rule 505 (identifierSuffix_empty -> .)
    OP_SHRR         reduce using rule 505 (identifierSuffix_empty -> .)
    OP_SHL          reduce using rule 505 (identifierSuffix_empty -> .)
    OP_LE           reduce using rule 505 (identifierSuffix_empty -> .)
    OP_GE           reduce using rule 505 (identifierSuffix_empty -> .)
    LESS            reduce using rule 505 (identifierSuffix_empty -> .)
    MORE            reduce using rule 505 (identifierSuffix_empty -> .)
    INSTANCEOF      reduce using rule 505 (identifierSuffix_empty -> .)
    OP_EQ           reduce using rule 505 (identifierSuffix_empty -> .)
    OP_NE           reduce using rule 505 (identifierSuffix_empty -> .)
    AND             reduce using rule 505 (identifierSuffix_empty -> .)
    CARET           reduce using rule 505 (identifierSuffix_empty -> .)
    VERTICAL        reduce using rule 505 (identifierSuffix_empty -> .)
    OP_LAND         reduce using rule 505 (identifierSuffix_empty -> .)
    OP_LOR          reduce using rule 505 (identifierSuffix_empty -> .)
    QUES            reduce using rule 505 (identifierSuffix_empty -> .)
    EQUALS          reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_ADD         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_SUB         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_MUL         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_DIV         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_AND         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_OR          reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_XOR         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_MOD         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_SHL         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_SHRR        reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_SHR         reduce using rule 505 (identifierSuffix_empty -> .)
    SEMI            reduce using rule 505 (identifierSuffix_empty -> .)
    DOT             shift and go to state 194
    FLPAREN         shift and go to state 193

  ! DOT             [ reduce using rule 505 (identifierSuffix_empty -> .) ]
  ! FLPAREN         [ reduce using rule 505 (identifierSuffix_empty -> .) ]

    FL_expression_FRs              shift and go to state 196
    identifierSuffix               shift and go to state 197
    FL_expression_FR               shift and go to state 192
    arrays                         shift and go to state 200
    DOT_Identifiers                shift and go to state 191
    identifierSuffix_empty         shift and go to state 198
    arguments                      shift and go to state 723
    DOT_Identifier                 shift and go to state 48
    array                          shift and go to state 154

state 652

    (512) primary -> Identifier . DOT_Identifiers identifierSuffix_empty
    (513) primary -> Identifier . identifierSuffix_empty
    (364) statement -> Identifier . COLON statement
    (208) type_body -> Identifier . classOrInterfaceTypeBody arrays
    (209) type_body -> Identifier . classOrInterfaceTypeBody
    (210) type_body -> Identifier . arrays
    (211) type_body -> Identifier .
    (269) DOT_Identifiers -> . DOT_Identifier
    (270) DOT_Identifiers -> . DOT_Identifiers DOT_Identifier
    (504) identifierSuffix_empty -> . identifierSuffix
    (505) identifierSuffix_empty -> .
    (212) classOrInterfaceTypeBody -> . typeArguments classOrInterfaceTypeStatements
    (213) classOrInterfaceTypeBody -> . typeArguments
    (214) classOrInterfaceTypeBody -> . classOrInterfaceTypeStatements
    (138) arrays -> . arrays array
    (139) arrays -> . array
    (267) DOT_Identifier -> . DOT Identifier
    (268) DOT_Identifier -> . DOT MULT
    (520) identifierSuffix -> . arrays DOT CLASS
    (521) identifierSuffix -> . FL_expression_FRs
    (522) identifierSuffix -> . arguments
    (523) identifierSuffix -> . DOT CLASS
    (524) identifierSuffix -> . DOT explicitGenericInvocation
    (525) identifierSuffix -> . DOT THIS
    (526) identifierSuffix -> . DOT SUPER arguments
    (527) identifierSuffix -> . DOT NEW innerCreator
    (234) typeArguments -> . LESS typeArgument COMMA_typeArguments MORE
    (235) typeArguments -> . LESS typeArgument MORE
    (217) classOrInterfaceTypeStatements -> . classOrInterfaceTypeStatement
    (218) classOrInterfaceTypeStatements -> . classOrInterfaceTypeStatements classOrInterfaceTypeStatement
    (137) array -> . FLPAREN FRPAREN
    (518) FL_expression_FRs -> . FL_expression_FR
    (519) FL_expression_FRs -> . FL_expression_FRs FL_expression_FR
    (555) arguments -> . LPAREN expressionList_once RPAREN
    (215) classOrInterfaceTypeStatement -> . DOT Identifier typeArguments
    (216) classOrInterfaceTypeStatement -> . DOT Identifier
    (517) FL_expression_FR -> . FLPAREN expression FRPAREN

  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for FLPAREN resolved as shift
    COLON           shift and go to state 602
    Identifier      reduce using rule 211 (type_body -> Identifier .)
    OP_INC          reduce using rule 505 (identifierSuffix_empty -> .)
    OP_DEC          reduce using rule 505 (identifierSuffix_empty -> .)
    MULT            reduce using rule 505 (identifierSuffix_empty -> .)
    SLASH           reduce using rule 505 (identifierSuffix_empty -> .)
    PERCENT         reduce using rule 505 (identifierSuffix_empty -> .)
    PLUS            reduce using rule 505 (identifierSuffix_empty -> .)
    DASH            reduce using rule 505 (identifierSuffix_empty -> .)
    OP_SHR          reduce using rule 505 (identifierSuffix_empty -> .)
    OP_SHRR         reduce using rule 505 (identifierSuffix_empty -> .)
    OP_SHL          reduce using rule 505 (identifierSuffix_empty -> .)
    OP_LE           reduce using rule 505 (identifierSuffix_empty -> .)
    OP_GE           reduce using rule 505 (identifierSuffix_empty -> .)
    MORE            reduce using rule 505 (identifierSuffix_empty -> .)
    INSTANCEOF      reduce using rule 505 (identifierSuffix_empty -> .)
    OP_EQ           reduce using rule 505 (identifierSuffix_empty -> .)
    OP_NE           reduce using rule 505 (identifierSuffix_empty -> .)
    AND             reduce using rule 505 (identifierSuffix_empty -> .)
    CARET           reduce using rule 505 (identifierSuffix_empty -> .)
    VERTICAL        reduce using rule 505 (identifierSuffix_empty -> .)
    OP_LAND         reduce using rule 505 (identifierSuffix_empty -> .)
    OP_LOR          reduce using rule 505 (identifierSuffix_empty -> .)
    QUES            reduce using rule 505 (identifierSuffix_empty -> .)
    EQUALS          reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_ADD         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_SUB         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_MUL         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_DIV         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_AND         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_OR          reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_XOR         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_MOD         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_SHL         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_SHRR        reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_SHR         reduce using rule 505 (identifierSuffix_empty -> .)
    SEMI            reduce using rule 505 (identifierSuffix_empty -> .)
    DOT             shift and go to state 427
    LESS            shift and go to state 156
    FLPAREN         shift and go to state 193
    LPAREN          shift and go to state 199

  ! DOT             [ reduce using rule 505 (identifierSuffix_empty -> .) ]
  ! FLPAREN         [ reduce using rule 505 (identifierSuffix_empty -> .) ]
  ! LESS            [ reduce using rule 505 (identifierSuffix_empty -> .) ]

    FL_expression_FRs              shift and go to state 196
    identifierSuffix               shift and go to state 197
    classOrInterfaceTypeBody       shift and go to state 155
    FL_expression_FR               shift and go to state 192
    arrays                         shift and go to state 428
    typeArguments                  shift and go to state 158
    DOT_Identifiers                shift and go to state 213
    identifierSuffix_empty         shift and go to state 215
    arguments                      shift and go to state 195
    DOT_Identifier                 shift and go to state 48
    classOrInterfaceTypeStatements shift and go to state 159
    array                          shift and go to state 154
    classOrInterfaceTypeStatement  shift and go to state 160

state 653

    (265) explicitConstructorInvocation -> primary . DOT nonWildcardTypeArguments SUPER arguments SEMI
    (266) explicitConstructorInvocation -> primary . DOT SUPER arguments SEMI
    (499) unaryExpressionNotPlusMinus -> primary . selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> primary . INC_DEC_empty
    (494) selectors -> . selector
    (495) selectors -> . selectors selector
    (491) INC_DEC_empty -> . OP_INC
    (492) INC_DEC_empty -> . OP_DEC
    (493) INC_DEC_empty -> . empty
    (545) selector -> . DOT Identifier arguments_once
    (546) selector -> . DOT Identifier
    (547) selector -> . DOT THIS
    (548) selector -> . DOT SUPER superSuffix
    (549) selector -> . DOT NEW innerCreator
    (550) selector -> . FLPAREN expression FRPAREN
    (562) empty -> .

    DOT             shift and go to state 724
    OP_INC          shift and go to state 231
    OP_DEC          shift and go to state 233
    FLPAREN         shift and go to state 229
    MULT            reduce using rule 562 (empty -> .)
    SLASH           reduce using rule 562 (empty -> .)
    PERCENT         reduce using rule 562 (empty -> .)
    PLUS            reduce using rule 562 (empty -> .)
    DASH            reduce using rule 562 (empty -> .)
    OP_SHR          reduce using rule 562 (empty -> .)
    OP_SHRR         reduce using rule 562 (empty -> .)
    OP_SHL          reduce using rule 562 (empty -> .)
    OP_LE           reduce using rule 562 (empty -> .)
    OP_GE           reduce using rule 562 (empty -> .)
    LESS            reduce using rule 562 (empty -> .)
    MORE            reduce using rule 562 (empty -> .)
    INSTANCEOF      reduce using rule 562 (empty -> .)
    OP_EQ           reduce using rule 562 (empty -> .)
    OP_NE           reduce using rule 562 (empty -> .)
    AND             reduce using rule 562 (empty -> .)
    CARET           reduce using rule 562 (empty -> .)
    VERTICAL        reduce using rule 562 (empty -> .)
    OP_LAND         reduce using rule 562 (empty -> .)
    OP_LOR          reduce using rule 562 (empty -> .)
    QUES            reduce using rule 562 (empty -> .)
    EQUALS          reduce using rule 562 (empty -> .)
    ASS_ADD         reduce using rule 562 (empty -> .)
    ASS_SUB         reduce using rule 562 (empty -> .)
    ASS_MUL         reduce using rule 562 (empty -> .)
    ASS_DIV         reduce using rule 562 (empty -> .)
    ASS_AND         reduce using rule 562 (empty -> .)
    ASS_OR          reduce using rule 562 (empty -> .)
    ASS_XOR         reduce using rule 562 (empty -> .)
    ASS_MOD         reduce using rule 562 (empty -> .)
    ASS_SHL         reduce using rule 562 (empty -> .)
    ASS_SHRR        reduce using rule 562 (empty -> .)
    ASS_SHR         reduce using rule 562 (empty -> .)
    SEMI            reduce using rule 562 (empty -> .)

    selector                       shift and go to state 230
    empty                          shift and go to state 232
    selectors                      shift and go to state 234
    INC_DEC_empty                  shift and go to state 236

state 654

    (514) primary -> primitiveType . arrays DOT CLASS
    (515) primary -> primitiveType . DOT CLASS
    (206) type -> primitiveType . arrays
    (207) type -> primitiveType .
    (138) arrays -> . arrays array
    (139) arrays -> . array
    (137) array -> . FLPAREN FRPAREN

    DOT             shift and go to state 248
    Identifier      reduce using rule 207 (type -> primitiveType .)
    FLPAREN         shift and go to state 153

    arrays                         shift and go to state 725
    array                          shift and go to state 154

state 655

    (259) constructorBody -> BLPAREN blockStatements . BRPAREN
    (256) blockStatements -> blockStatements . blockStatement
    (331) blockStatement -> . localVariableDeclarationStatement
    (332) blockStatement -> . classOrInterfaceDeclaration
    (333) blockStatement -> . statement
    (334) localVariableDeclarationStatement -> . localVariableDeclaration SEMI
    (26) classOrInterfaceDeclaration -> . classOrInterfaceModifiers classDeclaration
    (27) classOrInterfaceDeclaration -> . classOrInterfaceModifiers interfaceDeclaration
    (28) classOrInterfaceDeclaration -> . classDeclaration
    (29) classOrInterfaceDeclaration -> . interfaceDeclaration
    (347) statement -> . block
    (348) statement -> . ASSERT expression expression_colon_or_empty SEMI
    (349) statement -> . IF parExpression statement else_statement
    (350) statement -> . FOR LPAREN forControl RPAREN statement
    (351) statement -> . WHILE parExpression statement
    (352) statement -> . DO statement WHILE parExpression SEMI
    (353) statement -> . TRY block catches FINALLY block
    (354) statement -> . TRY block catches
    (355) statement -> . TRY block FINALLY block
    (356) statement -> . SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN
    (357) statement -> . SYNCHRONIZED parExpression block
    (358) statement -> . RETURN expression_or_empty SEMI
    (359) statement -> . THROW expression SEMI
    (360) statement -> . BREAK Identifier_or_empty SEMI
    (361) statement -> . CONTINUE Identifier_or_empty SEMI
    (362) statement -> . SEMI
    (363) statement -> . statementExpression SEMI
    (364) statement -> . Identifier COLON statement
    (335) localVariableDeclaration -> . variableModifiers type variableDeclarators
    (336) localVariableDeclaration -> . type variableDeclarators
    (30) classOrInterfaceModifiers -> . classOrInterfaceModifier
    (31) classOrInterfaceModifiers -> . classOrInterfaceModifiers classOrInterfaceModifier
    (42) classDeclaration -> . normalClassDeclaration
    (43) classDeclaration -> . enumDeclaration
    (89) interfaceDeclaration -> . normalInterfaceDeclaration
    (90) interfaceDeclaration -> . annotationTypeDeclaration
    (329) block -> . BLPAREN blockStatements BRPAREN
    (330) block -> . BLPAREN BRPAREN
    (400) statementExpression -> . expression
    (337) variableModifiers -> . variableModifier
    (338) variableModifiers -> . variableModifiers variableModifier
    (205) type -> . type_body
    (206) type -> . primitiveType arrays
    (207) type -> . primitiveType
    (32) classOrInterfaceModifier -> . annotation
    (33) classOrInterfaceModifier -> . PUBLIC
    (34) classOrInterfaceModifier -> . PROTECTED
    (35) classOrInterfaceModifier -> . PRIVATE
    (36) classOrInterfaceModifier -> . ABSTRACT
    (37) classOrInterfaceModifier -> . STATIC
    (38) classOrInterfaceModifier -> . FINAL
    (39) classOrInterfaceModifier -> . STRICTFP
    (48) normalClassDeclaration -> . CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody
    (63) enumDeclaration -> . ENUM Identifier IMPLEMENTS_typeList enumBody
    (95) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody
    (308) annotationTypeDeclaration -> . AT INTERFACE Identifier annotationTypeBody
    (404) expression -> . conditionalExpression assignmentOperator_expression_empty
    (229) variableModifier -> . FINAL
    (230) variableModifier -> . annotation
    (208) type_body -> . Identifier classOrInterfaceTypeBody arrays
    (209) type_body -> . Identifier classOrInterfaceTypeBody
    (210) type_body -> . Identifier arrays
    (211) type_body -> . Identifier
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (287) annotation -> . AT annotationName annotationBody
    (420) conditionalExpression -> . conditionalOrExpression conditionalExpressionStats
    (421) conditionalExpression -> . conditionalOrExpression
    (425) conditionalOrExpression -> . conditionalAndExpression O_conditionalAndExpressions
    (426) conditionalOrExpression -> . conditionalAndExpression
    (430) conditionalAndExpression -> . inclusiveOrExpression O_inclusiveOrExpressions
    (431) conditionalAndExpression -> . inclusiveOrExpression
    (435) inclusiveOrExpression -> . exclusiveOrExpression V_exclusiveOrExpression
    (436) inclusiveOrExpression -> . exclusiveOrExpression
    (440) exclusiveOrExpression -> . andExpression CARET_andExpressions
    (441) exclusiveOrExpression -> . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    BRPAREN         shift and go to state 726
    ASSERT          shift and go to state 507
    IF              shift and go to state 513
    FOR             shift and go to state 492
    WHILE           shift and go to state 500
    DO              shift and go to state 506
    TRY             shift and go to state 494
    SWITCH          shift and go to state 501
    SYNCHRONIZED    shift and go to state 490
    RETURN          shift and go to state 489
    THROW           shift and go to state 514
    BREAK           shift and go to state 505
    CONTINUE        shift and go to state 496
    SEMI            shift and go to state 508
    Identifier      shift and go to state 495
    BLPAREN         shift and go to state 335
    PUBLIC          shift and go to state 24
    PROTECTED       shift and go to state 3
    PRIVATE         shift and go to state 9
    ABSTRACT        shift and go to state 2
    STATIC          shift and go to state 4
    FINAL           shift and go to state 491
    STRICTFP        shift and go to state 10
    CLASS           shift and go to state 12
    ENUM            shift and go to state 15
    INTERFACE       shift and go to state 23
    AT              shift and go to state 18
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    equalityExpression             shift and go to state 108
    localVariableDeclaration       shift and go to state 499
    inclusiveOrExpression          shift and go to state 99
    multiplicativeExpression       shift and go to state 128
    exclusiveOrExpression          shift and go to state 110
    conditionalAndExpression       shift and go to state 89
    FloatingPointLiteral           shift and go to state 119
    primitiveType                  shift and go to state 504
    blockStatement                 shift and go to state 615
    normalInterfaceDeclaration     shift and go to state 5
    shiftExpression                shift and go to state 130
    primary                        shift and go to state 111
    normalClassDeclaration         shift and go to state 7
    unaryExpression                shift and go to state 131
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    classOrInterfaceModifiers      shift and go to state 22
    statement                      shift and go to state 502
    type                           shift and go to state 503
    additiveExpression             shift and go to state 102
    instanceOfExpression           shift and go to state 96
    conditionalExpression          shift and go to state 266
    enumDeclaration                shift and go to state 13
    classOrInterfaceDeclaration    shift and go to state 486
    integerLiteral                 shift and go to state 98
    parExpression                  shift and go to state 132
    classOrInterfaceModifier       shift and go to state 20
    relationalExpression           shift and go to state 95
    variableModifier               shift and go to state 487
    classDeclaration               shift and go to state 17
    conditionalOrExpression        shift and go to state 109
    localVariableDeclarationStatement shift and go to state 488
    annotation                     shift and go to state 512
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    variableModifiers              shift and go to state 493
    type_body                      shift and go to state 77
    annotationTypeDeclaration      shift and go to state 21
    statementExpression            shift and go to state 509
    interfaceDeclaration           shift and go to state 1
    andExpression                  shift and go to state 106
    expression                     shift and go to state 497
    block                          shift and go to state 498

state 656

    (260) constructorBody -> BLPAREN BRPAREN .

    SEMI            reduce using rule 260 (constructorBody -> BLPAREN BRPAREN .)
    STATIC          reduce using rule 260 (constructorBody -> BLPAREN BRPAREN .)
    BLPAREN         reduce using rule 260 (constructorBody -> BLPAREN BRPAREN .)
    VOID            reduce using rule 260 (constructorBody -> BLPAREN BRPAREN .)
    Identifier      reduce using rule 260 (constructorBody -> BLPAREN BRPAREN .)
    PUBLIC          reduce using rule 260 (constructorBody -> BLPAREN BRPAREN .)
    PROTECTED       reduce using rule 260 (constructorBody -> BLPAREN BRPAREN .)
    PRIVATE         reduce using rule 260 (constructorBody -> BLPAREN BRPAREN .)
    ABSTRACT        reduce using rule 260 (constructorBody -> BLPAREN BRPAREN .)
    FINAL           reduce using rule 260 (constructorBody -> BLPAREN BRPAREN .)
    NATIVE          reduce using rule 260 (constructorBody -> BLPAREN BRPAREN .)
    SYNCHRONIZED    reduce using rule 260 (constructorBody -> BLPAREN BRPAREN .)
    TRANSIENT       reduce using rule 260 (constructorBody -> BLPAREN BRPAREN .)
    VOLATILE        reduce using rule 260 (constructorBody -> BLPAREN BRPAREN .)
    STRICTFP        reduce using rule 260 (constructorBody -> BLPAREN BRPAREN .)
    AT              reduce using rule 260 (constructorBody -> BLPAREN BRPAREN .)
    LESS            reduce using rule 260 (constructorBody -> BLPAREN BRPAREN .)
    INTERFACE       reduce using rule 260 (constructorBody -> BLPAREN BRPAREN .)
    CLASS           reduce using rule 260 (constructorBody -> BLPAREN BRPAREN .)
    ENUM            reduce using rule 260 (constructorBody -> BLPAREN BRPAREN .)
    BOOLEAN         reduce using rule 260 (constructorBody -> BLPAREN BRPAREN .)
    CHAR            reduce using rule 260 (constructorBody -> BLPAREN BRPAREN .)
    BYTE            reduce using rule 260 (constructorBody -> BLPAREN BRPAREN .)
    SHORT           reduce using rule 260 (constructorBody -> BLPAREN BRPAREN .)
    INT             reduce using rule 260 (constructorBody -> BLPAREN BRPAREN .)
    LONG            reduce using rule 260 (constructorBody -> BLPAREN BRPAREN .)
    FLOAT           reduce using rule 260 (constructorBody -> BLPAREN BRPAREN .)
    DOUBLE          reduce using rule 260 (constructorBody -> BLPAREN BRPAREN .)
    BRPAREN         reduce using rule 260 (constructorBody -> BLPAREN BRPAREN .)


state 657

    (394) parExpression -> LPAREN . expression RPAREN
    (501) castExpression -> LPAREN . primitiveType RPAREN unaryExpression
    (502) castExpression -> LPAREN . type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> LPAREN . expression RPAREN unaryExpressionNotPlusMinus
    (404) expression -> . conditionalExpression assignmentOperator_expression_empty
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (205) type -> . type_body
    (206) type -> . primitiveType arrays
    (207) type -> . primitiveType
    (420) conditionalExpression -> . conditionalOrExpression conditionalExpressionStats
    (421) conditionalExpression -> . conditionalOrExpression
    (208) type_body -> . Identifier classOrInterfaceTypeBody arrays
    (209) type_body -> . Identifier classOrInterfaceTypeBody
    (210) type_body -> . Identifier arrays
    (211) type_body -> . Identifier
    (425) conditionalOrExpression -> . conditionalAndExpression O_conditionalAndExpressions
    (426) conditionalOrExpression -> . conditionalAndExpression
    (430) conditionalAndExpression -> . inclusiveOrExpression O_inclusiveOrExpressions
    (431) conditionalAndExpression -> . inclusiveOrExpression
    (435) inclusiveOrExpression -> . exclusiveOrExpression V_exclusiveOrExpression
    (436) inclusiveOrExpression -> . exclusiveOrExpression
    (440) exclusiveOrExpression -> . andExpression CARET_andExpressions
    (441) exclusiveOrExpression -> . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    Identifier      shift and go to state 267
    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    equalityExpression             shift and go to state 108
    inclusiveOrExpression          shift and go to state 99
    multiplicativeExpression       shift and go to state 128
    exclusiveOrExpression          shift and go to state 110
    conditionalAndExpression       shift and go to state 89
    type_body                      shift and go to state 77
    shiftExpression                shift and go to state 130
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    type                           shift and go to state 265
    integerLiteral                 shift and go to state 98
    additiveExpression             shift and go to state 102
    instanceOfExpression           shift and go to state 96
    conditionalExpression          shift and go to state 266
    unaryExpression                shift and go to state 131
    FloatingPointLiteral           shift and go to state 119
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    relationalExpression           shift and go to state 95
    conditionalOrExpression        shift and go to state 109
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    primitiveType                  shift and go to state 268
    andExpression                  shift and go to state 106
    expression                     shift and go to state 727

state 658

    (257) constructorBody -> BLPAREN explicitConstructorInvocation . blockStatements BRPAREN
    (258) constructorBody -> BLPAREN explicitConstructorInvocation . BRPAREN
    (255) blockStatements -> . blockStatement
    (256) blockStatements -> . blockStatements blockStatement
    (331) blockStatement -> . localVariableDeclarationStatement
    (332) blockStatement -> . classOrInterfaceDeclaration
    (333) blockStatement -> . statement
    (334) localVariableDeclarationStatement -> . localVariableDeclaration SEMI
    (26) classOrInterfaceDeclaration -> . classOrInterfaceModifiers classDeclaration
    (27) classOrInterfaceDeclaration -> . classOrInterfaceModifiers interfaceDeclaration
    (28) classOrInterfaceDeclaration -> . classDeclaration
    (29) classOrInterfaceDeclaration -> . interfaceDeclaration
    (347) statement -> . block
    (348) statement -> . ASSERT expression expression_colon_or_empty SEMI
    (349) statement -> . IF parExpression statement else_statement
    (350) statement -> . FOR LPAREN forControl RPAREN statement
    (351) statement -> . WHILE parExpression statement
    (352) statement -> . DO statement WHILE parExpression SEMI
    (353) statement -> . TRY block catches FINALLY block
    (354) statement -> . TRY block catches
    (355) statement -> . TRY block FINALLY block
    (356) statement -> . SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN
    (357) statement -> . SYNCHRONIZED parExpression block
    (358) statement -> . RETURN expression_or_empty SEMI
    (359) statement -> . THROW expression SEMI
    (360) statement -> . BREAK Identifier_or_empty SEMI
    (361) statement -> . CONTINUE Identifier_or_empty SEMI
    (362) statement -> . SEMI
    (363) statement -> . statementExpression SEMI
    (364) statement -> . Identifier COLON statement
    (335) localVariableDeclaration -> . variableModifiers type variableDeclarators
    (336) localVariableDeclaration -> . type variableDeclarators
    (30) classOrInterfaceModifiers -> . classOrInterfaceModifier
    (31) classOrInterfaceModifiers -> . classOrInterfaceModifiers classOrInterfaceModifier
    (42) classDeclaration -> . normalClassDeclaration
    (43) classDeclaration -> . enumDeclaration
    (89) interfaceDeclaration -> . normalInterfaceDeclaration
    (90) interfaceDeclaration -> . annotationTypeDeclaration
    (329) block -> . BLPAREN blockStatements BRPAREN
    (330) block -> . BLPAREN BRPAREN
    (400) statementExpression -> . expression
    (337) variableModifiers -> . variableModifier
    (338) variableModifiers -> . variableModifiers variableModifier
    (205) type -> . type_body
    (206) type -> . primitiveType arrays
    (207) type -> . primitiveType
    (32) classOrInterfaceModifier -> . annotation
    (33) classOrInterfaceModifier -> . PUBLIC
    (34) classOrInterfaceModifier -> . PROTECTED
    (35) classOrInterfaceModifier -> . PRIVATE
    (36) classOrInterfaceModifier -> . ABSTRACT
    (37) classOrInterfaceModifier -> . STATIC
    (38) classOrInterfaceModifier -> . FINAL
    (39) classOrInterfaceModifier -> . STRICTFP
    (48) normalClassDeclaration -> . CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody
    (63) enumDeclaration -> . ENUM Identifier IMPLEMENTS_typeList enumBody
    (95) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody
    (308) annotationTypeDeclaration -> . AT INTERFACE Identifier annotationTypeBody
    (404) expression -> . conditionalExpression assignmentOperator_expression_empty
    (229) variableModifier -> . FINAL
    (230) variableModifier -> . annotation
    (208) type_body -> . Identifier classOrInterfaceTypeBody arrays
    (209) type_body -> . Identifier classOrInterfaceTypeBody
    (210) type_body -> . Identifier arrays
    (211) type_body -> . Identifier
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (287) annotation -> . AT annotationName annotationBody
    (420) conditionalExpression -> . conditionalOrExpression conditionalExpressionStats
    (421) conditionalExpression -> . conditionalOrExpression
    (425) conditionalOrExpression -> . conditionalAndExpression O_conditionalAndExpressions
    (426) conditionalOrExpression -> . conditionalAndExpression
    (430) conditionalAndExpression -> . inclusiveOrExpression O_inclusiveOrExpressions
    (431) conditionalAndExpression -> . inclusiveOrExpression
    (435) inclusiveOrExpression -> . exclusiveOrExpression V_exclusiveOrExpression
    (436) inclusiveOrExpression -> . exclusiveOrExpression
    (440) exclusiveOrExpression -> . andExpression CARET_andExpressions
    (441) exclusiveOrExpression -> . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    BRPAREN         shift and go to state 729
    ASSERT          shift and go to state 507
    IF              shift and go to state 513
    FOR             shift and go to state 492
    WHILE           shift and go to state 500
    DO              shift and go to state 506
    TRY             shift and go to state 494
    SWITCH          shift and go to state 501
    SYNCHRONIZED    shift and go to state 490
    RETURN          shift and go to state 489
    THROW           shift and go to state 514
    BREAK           shift and go to state 505
    CONTINUE        shift and go to state 496
    SEMI            shift and go to state 508
    Identifier      shift and go to state 495
    BLPAREN         shift and go to state 335
    PUBLIC          shift and go to state 24
    PROTECTED       shift and go to state 3
    PRIVATE         shift and go to state 9
    ABSTRACT        shift and go to state 2
    STATIC          shift and go to state 4
    FINAL           shift and go to state 491
    STRICTFP        shift and go to state 10
    CLASS           shift and go to state 12
    ENUM            shift and go to state 15
    INTERFACE       shift and go to state 23
    AT              shift and go to state 18
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    equalityExpression             shift and go to state 108
    localVariableDeclaration       shift and go to state 499
    inclusiveOrExpression          shift and go to state 99
    multiplicativeExpression       shift and go to state 128
    exclusiveOrExpression          shift and go to state 110
    conditionalAndExpression       shift and go to state 89
    FloatingPointLiteral           shift and go to state 119
    primitiveType                  shift and go to state 504
    blockStatement                 shift and go to state 485
    normalInterfaceDeclaration     shift and go to state 5
    shiftExpression                shift and go to state 130
    primary                        shift and go to state 111
    normalClassDeclaration         shift and go to state 7
    unaryExpression                shift and go to state 131
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    classOrInterfaceModifiers      shift and go to state 22
    statement                      shift and go to state 502
    type                           shift and go to state 503
    blockStatements                shift and go to state 728
    additiveExpression             shift and go to state 102
    instanceOfExpression           shift and go to state 96
    conditionalExpression          shift and go to state 266
    enumDeclaration                shift and go to state 13
    classOrInterfaceDeclaration    shift and go to state 486
    integerLiteral                 shift and go to state 98
    parExpression                  shift and go to state 132
    classOrInterfaceModifier       shift and go to state 20
    relationalExpression           shift and go to state 95
    variableModifier               shift and go to state 487
    classDeclaration               shift and go to state 17
    conditionalOrExpression        shift and go to state 109
    localVariableDeclarationStatement shift and go to state 488
    annotation                     shift and go to state 512
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    variableModifiers              shift and go to state 493
    type_body                      shift and go to state 77
    annotationTypeDeclaration      shift and go to state 21
    statementExpression            shift and go to state 509
    interfaceDeclaration           shift and go to state 1
    andExpression                  shift and go to state 106
    expression                     shift and go to state 497
    block                          shift and go to state 498

state 659

    (264) explicitConstructorInvocation -> SUPER . arguments SEMI
    (509) primary -> SUPER . superSuffix
    (555) arguments -> . LPAREN expressionList_once RPAREN
    (551) superSuffix -> . arguments
    (552) superSuffix -> . DOT Identifier arguments_once

    LPAREN          shift and go to state 199
    DOT             shift and go to state 273

    superSuffix                    shift and go to state 271
    arguments                      shift and go to state 730

state 660

    (136) throwList -> THROWS qualifiedNameList .

    SEMI            reduce using rule 136 (throwList -> THROWS qualifiedNameList .)
    BLPAREN         reduce using rule 136 (throwList -> THROWS qualifiedNameList .)


state 661

    (244) qualifiedNameList -> qualifiedName . COMMA_qualifiedNames
    (245) qualifiedNameList -> qualifiedName .
    (242) COMMA_qualifiedNames -> . COMMA_qualifiedName
    (243) COMMA_qualifiedNames -> . COMMA_qualifiedNames COMMA_qualifiedName
    (241) COMMA_qualifiedName -> . COMMA qualifiedName

    BLPAREN         reduce using rule 245 (qualifiedNameList -> qualifiedName .)
    SEMI            reduce using rule 245 (qualifiedNameList -> qualifiedName .)
    COMMA           shift and go to state 732

    COMMA_qualifiedName            shift and go to state 731
    COMMA_qualifiedNames           shift and go to state 733

state 662

    (246) formalParameters -> LPAREN formalParameterDecls RPAREN .

    SEMI            reduce using rule 246 (formalParameters -> LPAREN formalParameterDecls RPAREN .)
    THROWS          reduce using rule 246 (formalParameters -> LPAREN formalParameterDecls RPAREN .)
    FLPAREN         reduce using rule 246 (formalParameters -> LPAREN formalParameterDecls RPAREN .)
    BLPAREN         reduce using rule 246 (formalParameters -> LPAREN formalParameterDecls RPAREN .)


state 663

    (248) formalParameterDecls -> type formalParameterDeclsRest .

    RPAREN          reduce using rule 248 (formalParameterDecls -> type formalParameterDeclsRest .)


state 664

    (253) formalParameterDeclsRest -> OP_ARRAY . variableDeclaratorId
    (178) variableDeclaratorId -> . Identifier arrays
    (179) variableDeclaratorId -> . Identifier

    Identifier      shift and go to state 609

    variableDeclaratorId           shift and go to state 734

state 665

    (252) formalParameterDeclsRest -> variableDeclaratorId . formalParameterDeclsRestBody
    (250) formalParameterDeclsRestBody -> . COMMA formalParameterDecls
    (251) formalParameterDeclsRestBody -> .

    COMMA           shift and go to state 736
    RPAREN          reduce using rule 251 (formalParameterDeclsRestBody -> .)

    formalParameterDeclsRestBody   shift and go to state 735

state 666

    (247) formalParameterDecls -> variableModifiers type . formalParameterDeclsRest
    (252) formalParameterDeclsRest -> . variableDeclaratorId formalParameterDeclsRestBody
    (253) formalParameterDeclsRest -> . OP_ARRAY variableDeclaratorId
    (178) variableDeclaratorId -> . Identifier arrays
    (179) variableDeclaratorId -> . Identifier

    OP_ARRAY        shift and go to state 664
    Identifier      shift and go to state 609

    formalParameterDeclsRest       shift and go to state 737
    variableDeclaratorId           shift and go to state 665

state 667

    (358) statement -> RETURN expression_or_empty SEMI .

    BRPAREN         reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    ASSERT          reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    IF              reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    FOR             reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    WHILE           reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    DO              reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    TRY             reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    SWITCH          reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    SYNCHRONIZED    reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    RETURN          reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    THROW           reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    BREAK           reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    CONTINUE        reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    SEMI            reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    Identifier      reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    BLPAREN         reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    PUBLIC          reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    PROTECTED       reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    PRIVATE         reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    ABSTRACT        reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    STATIC          reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    FINAL           reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    STRICTFP        reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    CLASS           reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    ENUM            reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    INTERFACE       reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    AT              reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    BOOLEAN         reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    CHAR            reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    BYTE            reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    SHORT           reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    INT             reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    LONG            reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    FLOAT           reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    DOUBLE          reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    PLUS            reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    DASH            reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    OP_INC          reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    OP_DEC          reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    TILDE           reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    EXCLAMATION     reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    LPAREN          reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    THIS            reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    SUPER           reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    NEW             reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    VOID            reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    CharacterLiteral reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    StringLiteral   reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    NULL            reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    LONG_NUMBER     reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    LONG_HEX_NUMBER reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    NON_INTEGER_1   reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    NON_INTEGER_2   reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    NON_INTEGER_3   reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    NON_INTEGER_4   reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    TRUE            reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    FALSE           reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    ELSE            reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    CASE            reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)
    DEFAULT         reduce using rule 358 (statement -> RETURN expression_or_empty SEMI .)


state 668

    (357) statement -> SYNCHRONIZED parExpression block .

    BRPAREN         reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    ASSERT          reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    IF              reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    FOR             reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    WHILE           reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    DO              reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    TRY             reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    SWITCH          reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    SYNCHRONIZED    reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    RETURN          reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    THROW           reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    BREAK           reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    CONTINUE        reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    SEMI            reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    Identifier      reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    BLPAREN         reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    PUBLIC          reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    PROTECTED       reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    PRIVATE         reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    ABSTRACT        reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    STATIC          reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    FINAL           reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    STRICTFP        reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    CLASS           reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    ENUM            reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    INTERFACE       reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    AT              reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    BOOLEAN         reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    CHAR            reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    BYTE            reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    SHORT           reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    INT             reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    LONG            reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    FLOAT           reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    DOUBLE          reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    PLUS            reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    DASH            reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    OP_INC          reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    OP_DEC          reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    TILDE           reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    EXCLAMATION     reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    LPAREN          reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    THIS            reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    SUPER           reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    NEW             reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    VOID            reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    CharacterLiteral reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    StringLiteral   reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    NULL            reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    LONG_NUMBER     reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    LONG_HEX_NUMBER reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    NON_INTEGER_1   reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    NON_INTEGER_2   reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    NON_INTEGER_3   reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    NON_INTEGER_4   reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    TRUE            reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    FALSE           reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    ELSE            reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    CASE            reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)
    DEFAULT         reduce using rule 357 (statement -> SYNCHRONIZED parExpression block .)


state 669

    (394) parExpression -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 738


state 670

    (383) forInit_or_empty -> forInit .

    SEMI            reduce using rule 383 (forInit_or_empty -> forInit .)


state 671

    (350) statement -> FOR LPAREN forControl . RPAREN statement

    RPAREN          shift and go to state 739


state 672

    (387) forControl -> enhancedForControl .

    RPAREN          reduce using rule 387 (forControl -> enhancedForControl .)


state 673

    (388) forControl -> forInit_or_empty . SEMI expression_or_empty SEMI forUpdate_empty

    SEMI            shift and go to state 740


state 674

    (389) forInit -> localVariableDeclaration .

    SEMI            reduce using rule 389 (forInit -> localVariableDeclaration .)


state 675

    (390) forInit -> expressionList .

    SEMI            reduce using rule 390 (forInit -> expressionList .)


state 676

    (392) enhancedForControl -> type . Identifier COLON expression
    (336) localVariableDeclaration -> type . variableDeclarators
    (166) variableDeclarators -> . variableDeclarator COMMA_VARS
    (167) variableDeclarators -> . variableDeclarator
    (169) variableDeclarator -> . variableDeclaratorId EQUALS_variableInitializer
    (170) variableDeclarator -> . variableDeclaratorId
    (178) variableDeclaratorId -> . Identifier arrays
    (179) variableDeclaratorId -> . Identifier

    Identifier      shift and go to state 741

    variableDeclarators            shift and go to state 608
    variableDeclaratorId           shift and go to state 441
    variableDeclarator             shift and go to state 444

state 677

    (391) enhancedForControl -> variableModifiers . type Identifier COLON expression
    (338) variableModifiers -> variableModifiers . variableModifier
    (335) localVariableDeclaration -> variableModifiers . type variableDeclarators
    (205) type -> . type_body
    (206) type -> . primitiveType arrays
    (207) type -> . primitiveType
    (229) variableModifier -> . FINAL
    (230) variableModifier -> . annotation
    (208) type_body -> . Identifier classOrInterfaceTypeBody arrays
    (209) type_body -> . Identifier classOrInterfaceTypeBody
    (210) type_body -> . Identifier arrays
    (211) type_body -> . Identifier
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (287) annotation -> . AT annotationName annotationBody

    FINAL           shift and go to state 589
    Identifier      shift and go to state 80
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    AT              shift and go to state 133

    type                           shift and go to state 742
    type_body                      shift and go to state 77
    variableModifier               shift and go to state 600
    primitiveType                  shift and go to state 74
    annotation                     shift and go to state 593

state 678

    (335) localVariableDeclaration -> variableModifiers type variableDeclarators .

    SEMI            reduce using rule 335 (localVariableDeclaration -> variableModifiers type variableDeclarators .)


state 679

    (353) statement -> TRY block catches . FINALLY block
    (354) statement -> TRY block catches .

    FINALLY         shift and go to state 743
    BRPAREN         reduce using rule 354 (statement -> TRY block catches .)
    ASSERT          reduce using rule 354 (statement -> TRY block catches .)
    IF              reduce using rule 354 (statement -> TRY block catches .)
    FOR             reduce using rule 354 (statement -> TRY block catches .)
    WHILE           reduce using rule 354 (statement -> TRY block catches .)
    DO              reduce using rule 354 (statement -> TRY block catches .)
    TRY             reduce using rule 354 (statement -> TRY block catches .)
    SWITCH          reduce using rule 354 (statement -> TRY block catches .)
    SYNCHRONIZED    reduce using rule 354 (statement -> TRY block catches .)
    RETURN          reduce using rule 354 (statement -> TRY block catches .)
    THROW           reduce using rule 354 (statement -> TRY block catches .)
    BREAK           reduce using rule 354 (statement -> TRY block catches .)
    CONTINUE        reduce using rule 354 (statement -> TRY block catches .)
    SEMI            reduce using rule 354 (statement -> TRY block catches .)
    Identifier      reduce using rule 354 (statement -> TRY block catches .)
    BLPAREN         reduce using rule 354 (statement -> TRY block catches .)
    PUBLIC          reduce using rule 354 (statement -> TRY block catches .)
    PROTECTED       reduce using rule 354 (statement -> TRY block catches .)
    PRIVATE         reduce using rule 354 (statement -> TRY block catches .)
    ABSTRACT        reduce using rule 354 (statement -> TRY block catches .)
    STATIC          reduce using rule 354 (statement -> TRY block catches .)
    FINAL           reduce using rule 354 (statement -> TRY block catches .)
    STRICTFP        reduce using rule 354 (statement -> TRY block catches .)
    CLASS           reduce using rule 354 (statement -> TRY block catches .)
    ENUM            reduce using rule 354 (statement -> TRY block catches .)
    INTERFACE       reduce using rule 354 (statement -> TRY block catches .)
    AT              reduce using rule 354 (statement -> TRY block catches .)
    BOOLEAN         reduce using rule 354 (statement -> TRY block catches .)
    CHAR            reduce using rule 354 (statement -> TRY block catches .)
    BYTE            reduce using rule 354 (statement -> TRY block catches .)
    SHORT           reduce using rule 354 (statement -> TRY block catches .)
    INT             reduce using rule 354 (statement -> TRY block catches .)
    LONG            reduce using rule 354 (statement -> TRY block catches .)
    FLOAT           reduce using rule 354 (statement -> TRY block catches .)
    DOUBLE          reduce using rule 354 (statement -> TRY block catches .)
    PLUS            reduce using rule 354 (statement -> TRY block catches .)
    DASH            reduce using rule 354 (statement -> TRY block catches .)
    OP_INC          reduce using rule 354 (statement -> TRY block catches .)
    OP_DEC          reduce using rule 354 (statement -> TRY block catches .)
    TILDE           reduce using rule 354 (statement -> TRY block catches .)
    EXCLAMATION     reduce using rule 354 (statement -> TRY block catches .)
    LPAREN          reduce using rule 354 (statement -> TRY block catches .)
    THIS            reduce using rule 354 (statement -> TRY block catches .)
    SUPER           reduce using rule 354 (statement -> TRY block catches .)
    NEW             reduce using rule 354 (statement -> TRY block catches .)
    VOID            reduce using rule 354 (statement -> TRY block catches .)
    CharacterLiteral reduce using rule 354 (statement -> TRY block catches .)
    StringLiteral   reduce using rule 354 (statement -> TRY block catches .)
    NULL            reduce using rule 354 (statement -> TRY block catches .)
    LONG_NUMBER     reduce using rule 354 (statement -> TRY block catches .)
    LONG_HEX_NUMBER reduce using rule 354 (statement -> TRY block catches .)
    NON_INTEGER_1   reduce using rule 354 (statement -> TRY block catches .)
    NON_INTEGER_2   reduce using rule 354 (statement -> TRY block catches .)
    NON_INTEGER_3   reduce using rule 354 (statement -> TRY block catches .)
    NON_INTEGER_4   reduce using rule 354 (statement -> TRY block catches .)
    TRUE            reduce using rule 354 (statement -> TRY block catches .)
    FALSE           reduce using rule 354 (statement -> TRY block catches .)
    ELSE            reduce using rule 354 (statement -> TRY block catches .)
    CASE            reduce using rule 354 (statement -> TRY block catches .)
    DEFAULT         reduce using rule 354 (statement -> TRY block catches .)


state 680

    (367) catches -> catchClause . catchClauses
    (368) catches -> catchClause .
    (365) catchClauses -> . catchClause
    (366) catchClauses -> . catchClauses catchClause
    (369) catchClause -> . CATCH LPAREN formalParameter RPAREN block

    FINALLY         reduce using rule 368 (catches -> catchClause .)
    BRPAREN         reduce using rule 368 (catches -> catchClause .)
    ASSERT          reduce using rule 368 (catches -> catchClause .)
    IF              reduce using rule 368 (catches -> catchClause .)
    FOR             reduce using rule 368 (catches -> catchClause .)
    WHILE           reduce using rule 368 (catches -> catchClause .)
    DO              reduce using rule 368 (catches -> catchClause .)
    TRY             reduce using rule 368 (catches -> catchClause .)
    SWITCH          reduce using rule 368 (catches -> catchClause .)
    SYNCHRONIZED    reduce using rule 368 (catches -> catchClause .)
    RETURN          reduce using rule 368 (catches -> catchClause .)
    THROW           reduce using rule 368 (catches -> catchClause .)
    BREAK           reduce using rule 368 (catches -> catchClause .)
    CONTINUE        reduce using rule 368 (catches -> catchClause .)
    SEMI            reduce using rule 368 (catches -> catchClause .)
    Identifier      reduce using rule 368 (catches -> catchClause .)
    BLPAREN         reduce using rule 368 (catches -> catchClause .)
    PUBLIC          reduce using rule 368 (catches -> catchClause .)
    PROTECTED       reduce using rule 368 (catches -> catchClause .)
    PRIVATE         reduce using rule 368 (catches -> catchClause .)
    ABSTRACT        reduce using rule 368 (catches -> catchClause .)
    STATIC          reduce using rule 368 (catches -> catchClause .)
    FINAL           reduce using rule 368 (catches -> catchClause .)
    STRICTFP        reduce using rule 368 (catches -> catchClause .)
    CLASS           reduce using rule 368 (catches -> catchClause .)
    ENUM            reduce using rule 368 (catches -> catchClause .)
    INTERFACE       reduce using rule 368 (catches -> catchClause .)
    AT              reduce using rule 368 (catches -> catchClause .)
    BOOLEAN         reduce using rule 368 (catches -> catchClause .)
    CHAR            reduce using rule 368 (catches -> catchClause .)
    BYTE            reduce using rule 368 (catches -> catchClause .)
    SHORT           reduce using rule 368 (catches -> catchClause .)
    INT             reduce using rule 368 (catches -> catchClause .)
    LONG            reduce using rule 368 (catches -> catchClause .)
    FLOAT           reduce using rule 368 (catches -> catchClause .)
    DOUBLE          reduce using rule 368 (catches -> catchClause .)
    PLUS            reduce using rule 368 (catches -> catchClause .)
    DASH            reduce using rule 368 (catches -> catchClause .)
    OP_INC          reduce using rule 368 (catches -> catchClause .)
    OP_DEC          reduce using rule 368 (catches -> catchClause .)
    TILDE           reduce using rule 368 (catches -> catchClause .)
    EXCLAMATION     reduce using rule 368 (catches -> catchClause .)
    LPAREN          reduce using rule 368 (catches -> catchClause .)
    THIS            reduce using rule 368 (catches -> catchClause .)
    SUPER           reduce using rule 368 (catches -> catchClause .)
    NEW             reduce using rule 368 (catches -> catchClause .)
    VOID            reduce using rule 368 (catches -> catchClause .)
    CharacterLiteral reduce using rule 368 (catches -> catchClause .)
    StringLiteral   reduce using rule 368 (catches -> catchClause .)
    NULL            reduce using rule 368 (catches -> catchClause .)
    LONG_NUMBER     reduce using rule 368 (catches -> catchClause .)
    LONG_HEX_NUMBER reduce using rule 368 (catches -> catchClause .)
    NON_INTEGER_1   reduce using rule 368 (catches -> catchClause .)
    NON_INTEGER_2   reduce using rule 368 (catches -> catchClause .)
    NON_INTEGER_3   reduce using rule 368 (catches -> catchClause .)
    NON_INTEGER_4   reduce using rule 368 (catches -> catchClause .)
    TRUE            reduce using rule 368 (catches -> catchClause .)
    FALSE           reduce using rule 368 (catches -> catchClause .)
    ELSE            reduce using rule 368 (catches -> catchClause .)
    CASE            reduce using rule 368 (catches -> catchClause .)
    DEFAULT         reduce using rule 368 (catches -> catchClause .)
    CATCH           shift and go to state 682

    catchClause                    shift and go to state 744
    catchClauses                   shift and go to state 745

state 681

    (355) statement -> TRY block FINALLY . block
    (329) block -> . BLPAREN blockStatements BRPAREN
    (330) block -> . BLPAREN BRPAREN

    BLPAREN         shift and go to state 335

    block                          shift and go to state 746

state 682

    (369) catchClause -> CATCH . LPAREN formalParameter RPAREN block

    LPAREN          shift and go to state 747


state 683

    (364) statement -> Identifier COLON statement .

    BRPAREN         reduce using rule 364 (statement -> Identifier COLON statement .)
    ASSERT          reduce using rule 364 (statement -> Identifier COLON statement .)
    IF              reduce using rule 364 (statement -> Identifier COLON statement .)
    FOR             reduce using rule 364 (statement -> Identifier COLON statement .)
    WHILE           reduce using rule 364 (statement -> Identifier COLON statement .)
    DO              reduce using rule 364 (statement -> Identifier COLON statement .)
    TRY             reduce using rule 364 (statement -> Identifier COLON statement .)
    SWITCH          reduce using rule 364 (statement -> Identifier COLON statement .)
    SYNCHRONIZED    reduce using rule 364 (statement -> Identifier COLON statement .)
    RETURN          reduce using rule 364 (statement -> Identifier COLON statement .)
    THROW           reduce using rule 364 (statement -> Identifier COLON statement .)
    BREAK           reduce using rule 364 (statement -> Identifier COLON statement .)
    CONTINUE        reduce using rule 364 (statement -> Identifier COLON statement .)
    SEMI            reduce using rule 364 (statement -> Identifier COLON statement .)
    Identifier      reduce using rule 364 (statement -> Identifier COLON statement .)
    BLPAREN         reduce using rule 364 (statement -> Identifier COLON statement .)
    PUBLIC          reduce using rule 364 (statement -> Identifier COLON statement .)
    PROTECTED       reduce using rule 364 (statement -> Identifier COLON statement .)
    PRIVATE         reduce using rule 364 (statement -> Identifier COLON statement .)
    ABSTRACT        reduce using rule 364 (statement -> Identifier COLON statement .)
    STATIC          reduce using rule 364 (statement -> Identifier COLON statement .)
    FINAL           reduce using rule 364 (statement -> Identifier COLON statement .)
    STRICTFP        reduce using rule 364 (statement -> Identifier COLON statement .)
    CLASS           reduce using rule 364 (statement -> Identifier COLON statement .)
    ENUM            reduce using rule 364 (statement -> Identifier COLON statement .)
    INTERFACE       reduce using rule 364 (statement -> Identifier COLON statement .)
    AT              reduce using rule 364 (statement -> Identifier COLON statement .)
    BOOLEAN         reduce using rule 364 (statement -> Identifier COLON statement .)
    CHAR            reduce using rule 364 (statement -> Identifier COLON statement .)
    BYTE            reduce using rule 364 (statement -> Identifier COLON statement .)
    SHORT           reduce using rule 364 (statement -> Identifier COLON statement .)
    INT             reduce using rule 364 (statement -> Identifier COLON statement .)
    LONG            reduce using rule 364 (statement -> Identifier COLON statement .)
    FLOAT           reduce using rule 364 (statement -> Identifier COLON statement .)
    DOUBLE          reduce using rule 364 (statement -> Identifier COLON statement .)
    PLUS            reduce using rule 364 (statement -> Identifier COLON statement .)
    DASH            reduce using rule 364 (statement -> Identifier COLON statement .)
    OP_INC          reduce using rule 364 (statement -> Identifier COLON statement .)
    OP_DEC          reduce using rule 364 (statement -> Identifier COLON statement .)
    TILDE           reduce using rule 364 (statement -> Identifier COLON statement .)
    EXCLAMATION     reduce using rule 364 (statement -> Identifier COLON statement .)
    LPAREN          reduce using rule 364 (statement -> Identifier COLON statement .)
    THIS            reduce using rule 364 (statement -> Identifier COLON statement .)
    SUPER           reduce using rule 364 (statement -> Identifier COLON statement .)
    NEW             reduce using rule 364 (statement -> Identifier COLON statement .)
    VOID            reduce using rule 364 (statement -> Identifier COLON statement .)
    CharacterLiteral reduce using rule 364 (statement -> Identifier COLON statement .)
    StringLiteral   reduce using rule 364 (statement -> Identifier COLON statement .)
    NULL            reduce using rule 364 (statement -> Identifier COLON statement .)
    LONG_NUMBER     reduce using rule 364 (statement -> Identifier COLON statement .)
    LONG_HEX_NUMBER reduce using rule 364 (statement -> Identifier COLON statement .)
    NON_INTEGER_1   reduce using rule 364 (statement -> Identifier COLON statement .)
    NON_INTEGER_2   reduce using rule 364 (statement -> Identifier COLON statement .)
    NON_INTEGER_3   reduce using rule 364 (statement -> Identifier COLON statement .)
    NON_INTEGER_4   reduce using rule 364 (statement -> Identifier COLON statement .)
    TRUE            reduce using rule 364 (statement -> Identifier COLON statement .)
    FALSE           reduce using rule 364 (statement -> Identifier COLON statement .)
    ELSE            reduce using rule 364 (statement -> Identifier COLON statement .)
    CASE            reduce using rule 364 (statement -> Identifier COLON statement .)
    DEFAULT         reduce using rule 364 (statement -> Identifier COLON statement .)


state 684

    (361) statement -> CONTINUE Identifier_or_empty SEMI .

    BRPAREN         reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    ASSERT          reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    IF              reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    FOR             reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    WHILE           reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    DO              reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    TRY             reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    SWITCH          reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    SYNCHRONIZED    reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    RETURN          reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    THROW           reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    BREAK           reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    CONTINUE        reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    SEMI            reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    Identifier      reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    BLPAREN         reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    PUBLIC          reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    PROTECTED       reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    PRIVATE         reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    ABSTRACT        reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    STATIC          reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    FINAL           reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    STRICTFP        reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    CLASS           reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    ENUM            reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    INTERFACE       reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    AT              reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    BOOLEAN         reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    CHAR            reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    BYTE            reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    SHORT           reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    INT             reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    LONG            reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    FLOAT           reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    DOUBLE          reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    PLUS            reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    DASH            reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    OP_INC          reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    OP_DEC          reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    TILDE           reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    EXCLAMATION     reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    LPAREN          reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    THIS            reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    SUPER           reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    NEW             reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    VOID            reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    CharacterLiteral reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    StringLiteral   reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    NULL            reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    LONG_NUMBER     reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    LONG_HEX_NUMBER reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    NON_INTEGER_1   reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    NON_INTEGER_2   reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    NON_INTEGER_3   reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    NON_INTEGER_4   reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    TRUE            reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    FALSE           reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    ELSE            reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    CASE            reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)
    DEFAULT         reduce using rule 361 (statement -> CONTINUE Identifier_or_empty SEMI .)


state 685

    (351) statement -> WHILE parExpression statement .

    BRPAREN         reduce using rule 351 (statement -> WHILE parExpression statement .)
    ASSERT          reduce using rule 351 (statement -> WHILE parExpression statement .)
    IF              reduce using rule 351 (statement -> WHILE parExpression statement .)
    FOR             reduce using rule 351 (statement -> WHILE parExpression statement .)
    WHILE           reduce using rule 351 (statement -> WHILE parExpression statement .)
    DO              reduce using rule 351 (statement -> WHILE parExpression statement .)
    TRY             reduce using rule 351 (statement -> WHILE parExpression statement .)
    SWITCH          reduce using rule 351 (statement -> WHILE parExpression statement .)
    SYNCHRONIZED    reduce using rule 351 (statement -> WHILE parExpression statement .)
    RETURN          reduce using rule 351 (statement -> WHILE parExpression statement .)
    THROW           reduce using rule 351 (statement -> WHILE parExpression statement .)
    BREAK           reduce using rule 351 (statement -> WHILE parExpression statement .)
    CONTINUE        reduce using rule 351 (statement -> WHILE parExpression statement .)
    SEMI            reduce using rule 351 (statement -> WHILE parExpression statement .)
    Identifier      reduce using rule 351 (statement -> WHILE parExpression statement .)
    BLPAREN         reduce using rule 351 (statement -> WHILE parExpression statement .)
    PUBLIC          reduce using rule 351 (statement -> WHILE parExpression statement .)
    PROTECTED       reduce using rule 351 (statement -> WHILE parExpression statement .)
    PRIVATE         reduce using rule 351 (statement -> WHILE parExpression statement .)
    ABSTRACT        reduce using rule 351 (statement -> WHILE parExpression statement .)
    STATIC          reduce using rule 351 (statement -> WHILE parExpression statement .)
    FINAL           reduce using rule 351 (statement -> WHILE parExpression statement .)
    STRICTFP        reduce using rule 351 (statement -> WHILE parExpression statement .)
    CLASS           reduce using rule 351 (statement -> WHILE parExpression statement .)
    ENUM            reduce using rule 351 (statement -> WHILE parExpression statement .)
    INTERFACE       reduce using rule 351 (statement -> WHILE parExpression statement .)
    AT              reduce using rule 351 (statement -> WHILE parExpression statement .)
    BOOLEAN         reduce using rule 351 (statement -> WHILE parExpression statement .)
    CHAR            reduce using rule 351 (statement -> WHILE parExpression statement .)
    BYTE            reduce using rule 351 (statement -> WHILE parExpression statement .)
    SHORT           reduce using rule 351 (statement -> WHILE parExpression statement .)
    INT             reduce using rule 351 (statement -> WHILE parExpression statement .)
    LONG            reduce using rule 351 (statement -> WHILE parExpression statement .)
    FLOAT           reduce using rule 351 (statement -> WHILE parExpression statement .)
    DOUBLE          reduce using rule 351 (statement -> WHILE parExpression statement .)
    PLUS            reduce using rule 351 (statement -> WHILE parExpression statement .)
    DASH            reduce using rule 351 (statement -> WHILE parExpression statement .)
    OP_INC          reduce using rule 351 (statement -> WHILE parExpression statement .)
    OP_DEC          reduce using rule 351 (statement -> WHILE parExpression statement .)
    TILDE           reduce using rule 351 (statement -> WHILE parExpression statement .)
    EXCLAMATION     reduce using rule 351 (statement -> WHILE parExpression statement .)
    LPAREN          reduce using rule 351 (statement -> WHILE parExpression statement .)
    THIS            reduce using rule 351 (statement -> WHILE parExpression statement .)
    SUPER           reduce using rule 351 (statement -> WHILE parExpression statement .)
    NEW             reduce using rule 351 (statement -> WHILE parExpression statement .)
    VOID            reduce using rule 351 (statement -> WHILE parExpression statement .)
    CharacterLiteral reduce using rule 351 (statement -> WHILE parExpression statement .)
    StringLiteral   reduce using rule 351 (statement -> WHILE parExpression statement .)
    NULL            reduce using rule 351 (statement -> WHILE parExpression statement .)
    LONG_NUMBER     reduce using rule 351 (statement -> WHILE parExpression statement .)
    LONG_HEX_NUMBER reduce using rule 351 (statement -> WHILE parExpression statement .)
    NON_INTEGER_1   reduce using rule 351 (statement -> WHILE parExpression statement .)
    NON_INTEGER_2   reduce using rule 351 (statement -> WHILE parExpression statement .)
    NON_INTEGER_3   reduce using rule 351 (statement -> WHILE parExpression statement .)
    NON_INTEGER_4   reduce using rule 351 (statement -> WHILE parExpression statement .)
    TRUE            reduce using rule 351 (statement -> WHILE parExpression statement .)
    FALSE           reduce using rule 351 (statement -> WHILE parExpression statement .)
    ELSE            reduce using rule 351 (statement -> WHILE parExpression statement .)
    CASE            reduce using rule 351 (statement -> WHILE parExpression statement .)
    DEFAULT         reduce using rule 351 (statement -> WHILE parExpression statement .)


state 686

    (356) statement -> SWITCH parExpression BLPAREN . switchBlockStatementGroups BRPAREN
    (374) switchBlockStatementGroups -> . switchBlockStatementGroupStats
    (375) switchBlockStatementGroups -> .
    (372) switchBlockStatementGroupStats -> . switchBlockStatementGroup
    (373) switchBlockStatementGroupStats -> . switchBlockStatementGroupStats switchBlockStatementGroup
    (378) switchBlockStatementGroup -> . switchLabels blockStatements
    (379) switchBlockStatementGroup -> . switchLabels
    (376) switchLabels -> . switchLabel
    (377) switchLabels -> . switchLabels switchLabel
    (380) switchLabel -> . CASE constantExpression COLON
    (381) switchLabel -> . CASE enumConstantName COLON
    (382) switchLabel -> . DEFAULT COLON

    BRPAREN         reduce using rule 375 (switchBlockStatementGroups -> .)
    CASE            shift and go to state 749
    DEFAULT         shift and go to state 752

    switchBlockStatementGroups     shift and go to state 748
    switchLabel                    shift and go to state 750
    switchBlockStatementGroupStats shift and go to state 751
    switchLabels                   shift and go to state 753
    switchBlockStatementGroup      shift and go to state 754

state 687

    (360) statement -> BREAK Identifier_or_empty SEMI .

    BRPAREN         reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    ASSERT          reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    IF              reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    FOR             reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    WHILE           reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    DO              reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    TRY             reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    SWITCH          reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    SYNCHRONIZED    reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    RETURN          reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    THROW           reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    BREAK           reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    CONTINUE        reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    SEMI            reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    Identifier      reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    BLPAREN         reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    PUBLIC          reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    PROTECTED       reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    PRIVATE         reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    ABSTRACT        reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    STATIC          reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    FINAL           reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    STRICTFP        reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    CLASS           reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    ENUM            reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    INTERFACE       reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    AT              reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    BOOLEAN         reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    CHAR            reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    BYTE            reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    SHORT           reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    INT             reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    LONG            reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    FLOAT           reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    DOUBLE          reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    PLUS            reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    DASH            reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    OP_INC          reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    OP_DEC          reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    TILDE           reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    EXCLAMATION     reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    LPAREN          reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    THIS            reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    SUPER           reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    NEW             reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    VOID            reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    CharacterLiteral reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    StringLiteral   reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    NULL            reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    LONG_NUMBER     reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    LONG_HEX_NUMBER reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    NON_INTEGER_1   reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    NON_INTEGER_2   reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    NON_INTEGER_3   reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    NON_INTEGER_4   reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    TRUE            reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    FALSE           reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    ELSE            reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    CASE            reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)
    DEFAULT         reduce using rule 360 (statement -> BREAK Identifier_or_empty SEMI .)


state 688

    (352) statement -> DO statement WHILE . parExpression SEMI
    (394) parExpression -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 597

    parExpression                  shift and go to state 755

state 689

    (348) statement -> ASSERT expression expression_colon_or_empty . SEMI

    SEMI            shift and go to state 756


state 690

    (339) expression_colon_or_empty -> COLON . expression
    (404) expression -> . conditionalExpression assignmentOperator_expression_empty
    (420) conditionalExpression -> . conditionalOrExpression conditionalExpressionStats
    (421) conditionalExpression -> . conditionalOrExpression
    (425) conditionalOrExpression -> . conditionalAndExpression O_conditionalAndExpressions
    (426) conditionalOrExpression -> . conditionalAndExpression
    (430) conditionalAndExpression -> . inclusiveOrExpression O_inclusiveOrExpressions
    (431) conditionalAndExpression -> . inclusiveOrExpression
    (435) inclusiveOrExpression -> . exclusiveOrExpression V_exclusiveOrExpression
    (436) inclusiveOrExpression -> . exclusiveOrExpression
    (440) exclusiveOrExpression -> . andExpression CARET_andExpressions
    (441) exclusiveOrExpression -> . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    equalityExpression             shift and go to state 108
    inclusiveOrExpression          shift and go to state 99
    multiplicativeExpression       shift and go to state 128
    exclusiveOrExpression          shift and go to state 110
    conditionalAndExpression       shift and go to state 89
    shiftExpression                shift and go to state 130
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    integerLiteral                 shift and go to state 98
    additiveExpression             shift and go to state 102
    instanceOfExpression           shift and go to state 96
    conditionalExpression          shift and go to state 266
    unaryExpression                shift and go to state 131
    FloatingPointLiteral           shift and go to state 119
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    relationalExpression           shift and go to state 95
    conditionalOrExpression        shift and go to state 109
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    primitiveType                  shift and go to state 122
    andExpression                  shift and go to state 106
    expression                     shift and go to state 757

state 691

    (349) statement -> IF parExpression statement . else_statement
    (341) else_statement -> . ELSE statement
    (342) else_statement -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 759
    BRPAREN         reduce using rule 342 (else_statement -> .)
    ASSERT          reduce using rule 342 (else_statement -> .)
    IF              reduce using rule 342 (else_statement -> .)
    FOR             reduce using rule 342 (else_statement -> .)
    WHILE           reduce using rule 342 (else_statement -> .)
    DO              reduce using rule 342 (else_statement -> .)
    TRY             reduce using rule 342 (else_statement -> .)
    SWITCH          reduce using rule 342 (else_statement -> .)
    SYNCHRONIZED    reduce using rule 342 (else_statement -> .)
    RETURN          reduce using rule 342 (else_statement -> .)
    THROW           reduce using rule 342 (else_statement -> .)
    BREAK           reduce using rule 342 (else_statement -> .)
    CONTINUE        reduce using rule 342 (else_statement -> .)
    SEMI            reduce using rule 342 (else_statement -> .)
    Identifier      reduce using rule 342 (else_statement -> .)
    BLPAREN         reduce using rule 342 (else_statement -> .)
    PUBLIC          reduce using rule 342 (else_statement -> .)
    PROTECTED       reduce using rule 342 (else_statement -> .)
    PRIVATE         reduce using rule 342 (else_statement -> .)
    ABSTRACT        reduce using rule 342 (else_statement -> .)
    STATIC          reduce using rule 342 (else_statement -> .)
    FINAL           reduce using rule 342 (else_statement -> .)
    STRICTFP        reduce using rule 342 (else_statement -> .)
    CLASS           reduce using rule 342 (else_statement -> .)
    ENUM            reduce using rule 342 (else_statement -> .)
    INTERFACE       reduce using rule 342 (else_statement -> .)
    AT              reduce using rule 342 (else_statement -> .)
    BOOLEAN         reduce using rule 342 (else_statement -> .)
    CHAR            reduce using rule 342 (else_statement -> .)
    BYTE            reduce using rule 342 (else_statement -> .)
    SHORT           reduce using rule 342 (else_statement -> .)
    INT             reduce using rule 342 (else_statement -> .)
    LONG            reduce using rule 342 (else_statement -> .)
    FLOAT           reduce using rule 342 (else_statement -> .)
    DOUBLE          reduce using rule 342 (else_statement -> .)
    PLUS            reduce using rule 342 (else_statement -> .)
    DASH            reduce using rule 342 (else_statement -> .)
    OP_INC          reduce using rule 342 (else_statement -> .)
    OP_DEC          reduce using rule 342 (else_statement -> .)
    TILDE           reduce using rule 342 (else_statement -> .)
    EXCLAMATION     reduce using rule 342 (else_statement -> .)
    LPAREN          reduce using rule 342 (else_statement -> .)
    THIS            reduce using rule 342 (else_statement -> .)
    SUPER           reduce using rule 342 (else_statement -> .)
    NEW             reduce using rule 342 (else_statement -> .)
    VOID            reduce using rule 342 (else_statement -> .)
    CharacterLiteral reduce using rule 342 (else_statement -> .)
    StringLiteral   reduce using rule 342 (else_statement -> .)
    NULL            reduce using rule 342 (else_statement -> .)
    LONG_NUMBER     reduce using rule 342 (else_statement -> .)
    LONG_HEX_NUMBER reduce using rule 342 (else_statement -> .)
    NON_INTEGER_1   reduce using rule 342 (else_statement -> .)
    NON_INTEGER_2   reduce using rule 342 (else_statement -> .)
    NON_INTEGER_3   reduce using rule 342 (else_statement -> .)
    NON_INTEGER_4   reduce using rule 342 (else_statement -> .)
    TRUE            reduce using rule 342 (else_statement -> .)
    FALSE           reduce using rule 342 (else_statement -> .)
    CASE            reduce using rule 342 (else_statement -> .)
    DEFAULT         reduce using rule 342 (else_statement -> .)

  ! ELSE            [ reduce using rule 342 (else_statement -> .) ]

    else_statement                 shift and go to state 758

state 692

    (359) statement -> THROW expression SEMI .

    BRPAREN         reduce using rule 359 (statement -> THROW expression SEMI .)
    ASSERT          reduce using rule 359 (statement -> THROW expression SEMI .)
    IF              reduce using rule 359 (statement -> THROW expression SEMI .)
    FOR             reduce using rule 359 (statement -> THROW expression SEMI .)
    WHILE           reduce using rule 359 (statement -> THROW expression SEMI .)
    DO              reduce using rule 359 (statement -> THROW expression SEMI .)
    TRY             reduce using rule 359 (statement -> THROW expression SEMI .)
    SWITCH          reduce using rule 359 (statement -> THROW expression SEMI .)
    SYNCHRONIZED    reduce using rule 359 (statement -> THROW expression SEMI .)
    RETURN          reduce using rule 359 (statement -> THROW expression SEMI .)
    THROW           reduce using rule 359 (statement -> THROW expression SEMI .)
    BREAK           reduce using rule 359 (statement -> THROW expression SEMI .)
    CONTINUE        reduce using rule 359 (statement -> THROW expression SEMI .)
    SEMI            reduce using rule 359 (statement -> THROW expression SEMI .)
    Identifier      reduce using rule 359 (statement -> THROW expression SEMI .)
    BLPAREN         reduce using rule 359 (statement -> THROW expression SEMI .)
    PUBLIC          reduce using rule 359 (statement -> THROW expression SEMI .)
    PROTECTED       reduce using rule 359 (statement -> THROW expression SEMI .)
    PRIVATE         reduce using rule 359 (statement -> THROW expression SEMI .)
    ABSTRACT        reduce using rule 359 (statement -> THROW expression SEMI .)
    STATIC          reduce using rule 359 (statement -> THROW expression SEMI .)
    FINAL           reduce using rule 359 (statement -> THROW expression SEMI .)
    STRICTFP        reduce using rule 359 (statement -> THROW expression SEMI .)
    CLASS           reduce using rule 359 (statement -> THROW expression SEMI .)
    ENUM            reduce using rule 359 (statement -> THROW expression SEMI .)
    INTERFACE       reduce using rule 359 (statement -> THROW expression SEMI .)
    AT              reduce using rule 359 (statement -> THROW expression SEMI .)
    BOOLEAN         reduce using rule 359 (statement -> THROW expression SEMI .)
    CHAR            reduce using rule 359 (statement -> THROW expression SEMI .)
    BYTE            reduce using rule 359 (statement -> THROW expression SEMI .)
    SHORT           reduce using rule 359 (statement -> THROW expression SEMI .)
    INT             reduce using rule 359 (statement -> THROW expression SEMI .)
    LONG            reduce using rule 359 (statement -> THROW expression SEMI .)
    FLOAT           reduce using rule 359 (statement -> THROW expression SEMI .)
    DOUBLE          reduce using rule 359 (statement -> THROW expression SEMI .)
    PLUS            reduce using rule 359 (statement -> THROW expression SEMI .)
    DASH            reduce using rule 359 (statement -> THROW expression SEMI .)
    OP_INC          reduce using rule 359 (statement -> THROW expression SEMI .)
    OP_DEC          reduce using rule 359 (statement -> THROW expression SEMI .)
    TILDE           reduce using rule 359 (statement -> THROW expression SEMI .)
    EXCLAMATION     reduce using rule 359 (statement -> THROW expression SEMI .)
    LPAREN          reduce using rule 359 (statement -> THROW expression SEMI .)
    THIS            reduce using rule 359 (statement -> THROW expression SEMI .)
    SUPER           reduce using rule 359 (statement -> THROW expression SEMI .)
    NEW             reduce using rule 359 (statement -> THROW expression SEMI .)
    VOID            reduce using rule 359 (statement -> THROW expression SEMI .)
    CharacterLiteral reduce using rule 359 (statement -> THROW expression SEMI .)
    StringLiteral   reduce using rule 359 (statement -> THROW expression SEMI .)
    NULL            reduce using rule 359 (statement -> THROW expression SEMI .)
    LONG_NUMBER     reduce using rule 359 (statement -> THROW expression SEMI .)
    LONG_HEX_NUMBER reduce using rule 359 (statement -> THROW expression SEMI .)
    NON_INTEGER_1   reduce using rule 359 (statement -> THROW expression SEMI .)
    NON_INTEGER_2   reduce using rule 359 (statement -> THROW expression SEMI .)
    NON_INTEGER_3   reduce using rule 359 (statement -> THROW expression SEMI .)
    NON_INTEGER_4   reduce using rule 359 (statement -> THROW expression SEMI .)
    TRUE            reduce using rule 359 (statement -> THROW expression SEMI .)
    FALSE           reduce using rule 359 (statement -> THROW expression SEMI .)
    ELSE            reduce using rule 359 (statement -> THROW expression SEMI .)
    CASE            reduce using rule 359 (statement -> THROW expression SEMI .)
    DEFAULT         reduce using rule 359 (statement -> THROW expression SEMI .)


state 693

    (535) innerCreator -> nonWildcardTypeArguments_empty Identifier classCreatorRest .

    OP_INC          reduce using rule 535 (innerCreator -> nonWildcardTypeArguments_empty Identifier classCreatorRest .)
    OP_DEC          reduce using rule 535 (innerCreator -> nonWildcardTypeArguments_empty Identifier classCreatorRest .)
    DOT             reduce using rule 535 (innerCreator -> nonWildcardTypeArguments_empty Identifier classCreatorRest .)
    FLPAREN         reduce using rule 535 (innerCreator -> nonWildcardTypeArguments_empty Identifier classCreatorRest .)
    MULT            reduce using rule 535 (innerCreator -> nonWildcardTypeArguments_empty Identifier classCreatorRest .)
    SLASH           reduce using rule 535 (innerCreator -> nonWildcardTypeArguments_empty Identifier classCreatorRest .)
    PERCENT         reduce using rule 535 (innerCreator -> nonWildcardTypeArguments_empty Identifier classCreatorRest .)
    PLUS            reduce using rule 535 (innerCreator -> nonWildcardTypeArguments_empty Identifier classCreatorRest .)
    DASH            reduce using rule 535 (innerCreator -> nonWildcardTypeArguments_empty Identifier classCreatorRest .)
    OP_SHR          reduce using rule 535 (innerCreator -> nonWildcardTypeArguments_empty Identifier classCreatorRest .)
    OP_SHRR         reduce using rule 535 (innerCreator -> nonWildcardTypeArguments_empty Identifier classCreatorRest .)
    OP_SHL          reduce using rule 535 (innerCreator -> nonWildcardTypeArguments_empty Identifier classCreatorRest .)
    OP_LE           reduce using rule 535 (innerCreator -> nonWildcardTypeArguments_empty Identifier classCreatorRest .)
    OP_GE           reduce using rule 535 (innerCreator -> nonWildcardTypeArguments_empty Identifier classCreatorRest .)
    LESS            reduce using rule 535 (innerCreator -> nonWildcardTypeArguments_empty Identifier classCreatorRest .)
    MORE            reduce using rule 535 (innerCreator -> nonWildcardTypeArguments_empty Identifier classCreatorRest .)
    INSTANCEOF      reduce using rule 535 (innerCreator -> nonWildcardTypeArguments_empty Identifier classCreatorRest .)
    OP_EQ           reduce using rule 535 (innerCreator -> nonWildcardTypeArguments_empty Identifier classCreatorRest .)
    OP_NE           reduce using rule 535 (innerCreator -> nonWildcardTypeArguments_empty Identifier classCreatorRest .)
    AND             reduce using rule 535 (innerCreator -> nonWildcardTypeArguments_empty Identifier classCreatorRest .)
    CARET           reduce using rule 535 (innerCreator -> nonWildcardTypeArguments_empty Identifier classCreatorRest .)
    VERTICAL        reduce using rule 535 (innerCreator -> nonWildcardTypeArguments_empty Identifier classCreatorRest .)
    OP_LAND         reduce using rule 535 (innerCreator -> nonWildcardTypeArguments_empty Identifier classCreatorRest .)
    OP_LOR          reduce using rule 535 (innerCreator -> nonWildcardTypeArguments_empty Identifier classCreatorRest .)
    QUES            reduce using rule 535 (innerCreator -> nonWildcardTypeArguments_empty Identifier classCreatorRest .)
    RPAREN          reduce using rule 535 (innerCreator -> nonWildcardTypeArguments_empty Identifier classCreatorRest .)
    COMMA           reduce using rule 535 (innerCreator -> nonWildcardTypeArguments_empty Identifier classCreatorRest .)
    BRPAREN         reduce using rule 535 (innerCreator -> nonWildcardTypeArguments_empty Identifier classCreatorRest .)
    EQUALS          reduce using rule 535 (innerCreator -> nonWildcardTypeArguments_empty Identifier classCreatorRest .)
    ASS_ADD         reduce using rule 535 (innerCreator -> nonWildcardTypeArguments_empty Identifier classCreatorRest .)
    ASS_SUB         reduce using rule 535 (innerCreator -> nonWildcardTypeArguments_empty Identifier classCreatorRest .)
    ASS_MUL         reduce using rule 535 (innerCreator -> nonWildcardTypeArguments_empty Identifier classCreatorRest .)
    ASS_DIV         reduce using rule 535 (innerCreator -> nonWildcardTypeArguments_empty Identifier classCreatorRest .)
    ASS_AND         reduce using rule 535 (innerCreator -> nonWildcardTypeArguments_empty Identifier classCreatorRest .)
    ASS_OR          reduce using rule 535 (innerCreator -> nonWildcardTypeArguments_empty Identifier classCreatorRest .)
    ASS_XOR         reduce using rule 535 (innerCreator -> nonWildcardTypeArguments_empty Identifier classCreatorRest .)
    ASS_MOD         reduce using rule 535 (innerCreator -> nonWildcardTypeArguments_empty Identifier classCreatorRest .)
    ASS_SHL         reduce using rule 535 (innerCreator -> nonWildcardTypeArguments_empty Identifier classCreatorRest .)
    ASS_SHRR        reduce using rule 535 (innerCreator -> nonWildcardTypeArguments_empty Identifier classCreatorRest .)
    ASS_SHR         reduce using rule 535 (innerCreator -> nonWildcardTypeArguments_empty Identifier classCreatorRest .)
    FRPAREN         reduce using rule 535 (innerCreator -> nonWildcardTypeArguments_empty Identifier classCreatorRest .)
    COLON           reduce using rule 535 (innerCreator -> nonWildcardTypeArguments_empty Identifier classCreatorRest .)
    SEMI            reduce using rule 535 (innerCreator -> nonWildcardTypeArguments_empty Identifier classCreatorRest .)


state 694

    (536) arrayCreatorRest -> FLPAREN FRPAREN arrays arrayInitializer .

    OP_INC          reduce using rule 536 (arrayCreatorRest -> FLPAREN FRPAREN arrays arrayInitializer .)
    OP_DEC          reduce using rule 536 (arrayCreatorRest -> FLPAREN FRPAREN arrays arrayInitializer .)
    DOT             reduce using rule 536 (arrayCreatorRest -> FLPAREN FRPAREN arrays arrayInitializer .)
    FLPAREN         reduce using rule 536 (arrayCreatorRest -> FLPAREN FRPAREN arrays arrayInitializer .)
    MULT            reduce using rule 536 (arrayCreatorRest -> FLPAREN FRPAREN arrays arrayInitializer .)
    SLASH           reduce using rule 536 (arrayCreatorRest -> FLPAREN FRPAREN arrays arrayInitializer .)
    PERCENT         reduce using rule 536 (arrayCreatorRest -> FLPAREN FRPAREN arrays arrayInitializer .)
    PLUS            reduce using rule 536 (arrayCreatorRest -> FLPAREN FRPAREN arrays arrayInitializer .)
    DASH            reduce using rule 536 (arrayCreatorRest -> FLPAREN FRPAREN arrays arrayInitializer .)
    OP_SHR          reduce using rule 536 (arrayCreatorRest -> FLPAREN FRPAREN arrays arrayInitializer .)
    OP_SHRR         reduce using rule 536 (arrayCreatorRest -> FLPAREN FRPAREN arrays arrayInitializer .)
    OP_SHL          reduce using rule 536 (arrayCreatorRest -> FLPAREN FRPAREN arrays arrayInitializer .)
    OP_LE           reduce using rule 536 (arrayCreatorRest -> FLPAREN FRPAREN arrays arrayInitializer .)
    OP_GE           reduce using rule 536 (arrayCreatorRest -> FLPAREN FRPAREN arrays arrayInitializer .)
    LESS            reduce using rule 536 (arrayCreatorRest -> FLPAREN FRPAREN arrays arrayInitializer .)
    MORE            reduce using rule 536 (arrayCreatorRest -> FLPAREN FRPAREN arrays arrayInitializer .)
    INSTANCEOF      reduce using rule 536 (arrayCreatorRest -> FLPAREN FRPAREN arrays arrayInitializer .)
    OP_EQ           reduce using rule 536 (arrayCreatorRest -> FLPAREN FRPAREN arrays arrayInitializer .)
    OP_NE           reduce using rule 536 (arrayCreatorRest -> FLPAREN FRPAREN arrays arrayInitializer .)
    AND             reduce using rule 536 (arrayCreatorRest -> FLPAREN FRPAREN arrays arrayInitializer .)
    CARET           reduce using rule 536 (arrayCreatorRest -> FLPAREN FRPAREN arrays arrayInitializer .)
    VERTICAL        reduce using rule 536 (arrayCreatorRest -> FLPAREN FRPAREN arrays arrayInitializer .)
    OP_LAND         reduce using rule 536 (arrayCreatorRest -> FLPAREN FRPAREN arrays arrayInitializer .)
    OP_LOR          reduce using rule 536 (arrayCreatorRest -> FLPAREN FRPAREN arrays arrayInitializer .)
    QUES            reduce using rule 536 (arrayCreatorRest -> FLPAREN FRPAREN arrays arrayInitializer .)
    RPAREN          reduce using rule 536 (arrayCreatorRest -> FLPAREN FRPAREN arrays arrayInitializer .)
    COMMA           reduce using rule 536 (arrayCreatorRest -> FLPAREN FRPAREN arrays arrayInitializer .)
    BRPAREN         reduce using rule 536 (arrayCreatorRest -> FLPAREN FRPAREN arrays arrayInitializer .)
    EQUALS          reduce using rule 536 (arrayCreatorRest -> FLPAREN FRPAREN arrays arrayInitializer .)
    ASS_ADD         reduce using rule 536 (arrayCreatorRest -> FLPAREN FRPAREN arrays arrayInitializer .)
    ASS_SUB         reduce using rule 536 (arrayCreatorRest -> FLPAREN FRPAREN arrays arrayInitializer .)
    ASS_MUL         reduce using rule 536 (arrayCreatorRest -> FLPAREN FRPAREN arrays arrayInitializer .)
    ASS_DIV         reduce using rule 536 (arrayCreatorRest -> FLPAREN FRPAREN arrays arrayInitializer .)
    ASS_AND         reduce using rule 536 (arrayCreatorRest -> FLPAREN FRPAREN arrays arrayInitializer .)
    ASS_OR          reduce using rule 536 (arrayCreatorRest -> FLPAREN FRPAREN arrays arrayInitializer .)
    ASS_XOR         reduce using rule 536 (arrayCreatorRest -> FLPAREN FRPAREN arrays arrayInitializer .)
    ASS_MOD         reduce using rule 536 (arrayCreatorRest -> FLPAREN FRPAREN arrays arrayInitializer .)
    ASS_SHL         reduce using rule 536 (arrayCreatorRest -> FLPAREN FRPAREN arrays arrayInitializer .)
    ASS_SHRR        reduce using rule 536 (arrayCreatorRest -> FLPAREN FRPAREN arrays arrayInitializer .)
    ASS_SHR         reduce using rule 536 (arrayCreatorRest -> FLPAREN FRPAREN arrays arrayInitializer .)
    FRPAREN         reduce using rule 536 (arrayCreatorRest -> FLPAREN FRPAREN arrays arrayInitializer .)
    COLON           reduce using rule 536 (arrayCreatorRest -> FLPAREN FRPAREN arrays arrayInitializer .)
    SEMI            reduce using rule 536 (arrayCreatorRest -> FLPAREN FRPAREN arrays arrayInitializer .)


state 695

    (189) arrayInitializer -> BLPAREN array_body . BRPAREN

    BRPAREN         shift and go to state 760


state 696

    (187) array_body -> variableInitializer . COMMA_variableInitializers COMMA_once
    (188) array_body -> variableInitializer . COMMA_once
    (183) COMMA_variableInitializers -> . COMMA_variableInitializer
    (184) COMMA_variableInitializers -> . COMMA_variableInitializers COMMA variableInitializer
    (185) COMMA_once -> . COMMA
    (186) COMMA_once -> .
    (182) COMMA_variableInitializer -> . COMMA variableInitializer

    COMMA           shift and go to state 763
    BRPAREN         reduce using rule 186 (COMMA_once -> .)

    COMMA_variableInitializers     shift and go to state 761
    COMMA_variableInitializer      shift and go to state 762
    COMMA_once                     shift and go to state 764

state 697

    (538) arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs . arrays
    (540) arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs .
    (519) FL_expression_FRs -> FL_expression_FRs . FL_expression_FR
    (138) arrays -> . arrays array
    (139) arrays -> . array
    (517) FL_expression_FR -> . FLPAREN expression FRPAREN
    (137) array -> . FLPAREN FRPAREN

  ! shift/reduce conflict for FLPAREN resolved as shift
    OP_INC          reduce using rule 540 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs .)
    OP_DEC          reduce using rule 540 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs .)
    DOT             reduce using rule 540 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs .)
    MULT            reduce using rule 540 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs .)
    SLASH           reduce using rule 540 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs .)
    PERCENT         reduce using rule 540 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs .)
    PLUS            reduce using rule 540 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs .)
    DASH            reduce using rule 540 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs .)
    OP_SHR          reduce using rule 540 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs .)
    OP_SHRR         reduce using rule 540 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs .)
    OP_SHL          reduce using rule 540 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs .)
    OP_LE           reduce using rule 540 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs .)
    OP_GE           reduce using rule 540 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs .)
    LESS            reduce using rule 540 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs .)
    MORE            reduce using rule 540 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs .)
    INSTANCEOF      reduce using rule 540 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs .)
    OP_EQ           reduce using rule 540 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs .)
    OP_NE           reduce using rule 540 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs .)
    AND             reduce using rule 540 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs .)
    CARET           reduce using rule 540 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs .)
    VERTICAL        reduce using rule 540 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs .)
    OP_LAND         reduce using rule 540 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs .)
    OP_LOR          reduce using rule 540 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs .)
    QUES            reduce using rule 540 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs .)
    RPAREN          reduce using rule 540 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs .)
    COMMA           reduce using rule 540 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs .)
    BRPAREN         reduce using rule 540 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs .)
    EQUALS          reduce using rule 540 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs .)
    ASS_ADD         reduce using rule 540 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs .)
    ASS_SUB         reduce using rule 540 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs .)
    ASS_MUL         reduce using rule 540 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs .)
    ASS_DIV         reduce using rule 540 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs .)
    ASS_AND         reduce using rule 540 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs .)
    ASS_OR          reduce using rule 540 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs .)
    ASS_XOR         reduce using rule 540 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs .)
    ASS_MOD         reduce using rule 540 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs .)
    ASS_SHL         reduce using rule 540 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs .)
    ASS_SHRR        reduce using rule 540 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs .)
    ASS_SHR         reduce using rule 540 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs .)
    FRPAREN         reduce using rule 540 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs .)
    COLON           reduce using rule 540 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs .)
    SEMI            reduce using rule 540 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs .)
    FLPAREN         shift and go to state 699

  ! FLPAREN         [ reduce using rule 540 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs .) ]

    arrays                         shift and go to state 765
    array                          shift and go to state 154
    FL_expression_FR               shift and go to state 361

state 698

    (541) arrayCreatorRest -> FLPAREN expression FRPAREN arrays .
    (138) arrays -> arrays . array
    (137) array -> . FLPAREN FRPAREN

  ! shift/reduce conflict for FLPAREN resolved as shift
    OP_INC          reduce using rule 541 (arrayCreatorRest -> FLPAREN expression FRPAREN arrays .)
    OP_DEC          reduce using rule 541 (arrayCreatorRest -> FLPAREN expression FRPAREN arrays .)
    DOT             reduce using rule 541 (arrayCreatorRest -> FLPAREN expression FRPAREN arrays .)
    MULT            reduce using rule 541 (arrayCreatorRest -> FLPAREN expression FRPAREN arrays .)
    SLASH           reduce using rule 541 (arrayCreatorRest -> FLPAREN expression FRPAREN arrays .)
    PERCENT         reduce using rule 541 (arrayCreatorRest -> FLPAREN expression FRPAREN arrays .)
    PLUS            reduce using rule 541 (arrayCreatorRest -> FLPAREN expression FRPAREN arrays .)
    DASH            reduce using rule 541 (arrayCreatorRest -> FLPAREN expression FRPAREN arrays .)
    OP_SHR          reduce using rule 541 (arrayCreatorRest -> FLPAREN expression FRPAREN arrays .)
    OP_SHRR         reduce using rule 541 (arrayCreatorRest -> FLPAREN expression FRPAREN arrays .)
    OP_SHL          reduce using rule 541 (arrayCreatorRest -> FLPAREN expression FRPAREN arrays .)
    OP_LE           reduce using rule 541 (arrayCreatorRest -> FLPAREN expression FRPAREN arrays .)
    OP_GE           reduce using rule 541 (arrayCreatorRest -> FLPAREN expression FRPAREN arrays .)
    LESS            reduce using rule 541 (arrayCreatorRest -> FLPAREN expression FRPAREN arrays .)
    MORE            reduce using rule 541 (arrayCreatorRest -> FLPAREN expression FRPAREN arrays .)
    INSTANCEOF      reduce using rule 541 (arrayCreatorRest -> FLPAREN expression FRPAREN arrays .)
    OP_EQ           reduce using rule 541 (arrayCreatorRest -> FLPAREN expression FRPAREN arrays .)
    OP_NE           reduce using rule 541 (arrayCreatorRest -> FLPAREN expression FRPAREN arrays .)
    AND             reduce using rule 541 (arrayCreatorRest -> FLPAREN expression FRPAREN arrays .)
    CARET           reduce using rule 541 (arrayCreatorRest -> FLPAREN expression FRPAREN arrays .)
    VERTICAL        reduce using rule 541 (arrayCreatorRest -> FLPAREN expression FRPAREN arrays .)
    OP_LAND         reduce using rule 541 (arrayCreatorRest -> FLPAREN expression FRPAREN arrays .)
    OP_LOR          reduce using rule 541 (arrayCreatorRest -> FLPAREN expression FRPAREN arrays .)
    QUES            reduce using rule 541 (arrayCreatorRest -> FLPAREN expression FRPAREN arrays .)
    RPAREN          reduce using rule 541 (arrayCreatorRest -> FLPAREN expression FRPAREN arrays .)
    COMMA           reduce using rule 541 (arrayCreatorRest -> FLPAREN expression FRPAREN arrays .)
    BRPAREN         reduce using rule 541 (arrayCreatorRest -> FLPAREN expression FRPAREN arrays .)
    EQUALS          reduce using rule 541 (arrayCreatorRest -> FLPAREN expression FRPAREN arrays .)
    ASS_ADD         reduce using rule 541 (arrayCreatorRest -> FLPAREN expression FRPAREN arrays .)
    ASS_SUB         reduce using rule 541 (arrayCreatorRest -> FLPAREN expression FRPAREN arrays .)
    ASS_MUL         reduce using rule 541 (arrayCreatorRest -> FLPAREN expression FRPAREN arrays .)
    ASS_DIV         reduce using rule 541 (arrayCreatorRest -> FLPAREN expression FRPAREN arrays .)
    ASS_AND         reduce using rule 541 (arrayCreatorRest -> FLPAREN expression FRPAREN arrays .)
    ASS_OR          reduce using rule 541 (arrayCreatorRest -> FLPAREN expression FRPAREN arrays .)
    ASS_XOR         reduce using rule 541 (arrayCreatorRest -> FLPAREN expression FRPAREN arrays .)
    ASS_MOD         reduce using rule 541 (arrayCreatorRest -> FLPAREN expression FRPAREN arrays .)
    ASS_SHL         reduce using rule 541 (arrayCreatorRest -> FLPAREN expression FRPAREN arrays .)
    ASS_SHRR        reduce using rule 541 (arrayCreatorRest -> FLPAREN expression FRPAREN arrays .)
    ASS_SHR         reduce using rule 541 (arrayCreatorRest -> FLPAREN expression FRPAREN arrays .)
    FRPAREN         reduce using rule 541 (arrayCreatorRest -> FLPAREN expression FRPAREN arrays .)
    COLON           reduce using rule 541 (arrayCreatorRest -> FLPAREN expression FRPAREN arrays .)
    SEMI            reduce using rule 541 (arrayCreatorRest -> FLPAREN expression FRPAREN arrays .)
    FLPAREN         shift and go to state 153

  ! FLPAREN         [ reduce using rule 541 (arrayCreatorRest -> FLPAREN expression FRPAREN arrays .) ]

    array                          shift and go to state 308

state 699

    (517) FL_expression_FR -> FLPAREN . expression FRPAREN
    (137) array -> FLPAREN . FRPAREN
    (404) expression -> . conditionalExpression assignmentOperator_expression_empty
    (420) conditionalExpression -> . conditionalOrExpression conditionalExpressionStats
    (421) conditionalExpression -> . conditionalOrExpression
    (425) conditionalOrExpression -> . conditionalAndExpression O_conditionalAndExpressions
    (426) conditionalOrExpression -> . conditionalAndExpression
    (430) conditionalAndExpression -> . inclusiveOrExpression O_inclusiveOrExpressions
    (431) conditionalAndExpression -> . inclusiveOrExpression
    (435) inclusiveOrExpression -> . exclusiveOrExpression V_exclusiveOrExpression
    (436) inclusiveOrExpression -> . exclusiveOrExpression
    (440) exclusiveOrExpression -> . andExpression CARET_andExpressions
    (441) exclusiveOrExpression -> . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    FRPAREN         shift and go to state 309
    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    equalityExpression             shift and go to state 108
    inclusiveOrExpression          shift and go to state 99
    multiplicativeExpression       shift and go to state 128
    exclusiveOrExpression          shift and go to state 110
    conditionalAndExpression       shift and go to state 89
    shiftExpression                shift and go to state 130
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    integerLiteral                 shift and go to state 98
    additiveExpression             shift and go to state 102
    instanceOfExpression           shift and go to state 96
    conditionalExpression          shift and go to state 266
    unaryExpression                shift and go to state 131
    FloatingPointLiteral           shift and go to state 119
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    relationalExpression           shift and go to state 95
    conditionalOrExpression        shift and go to state 109
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    primitiveType                  shift and go to state 122
    andExpression                  shift and go to state 106
    expression                     shift and go to state 353

state 700

    (328) defaultValue -> DEFAULT . elementValue
    (296) elementValue -> . conditionalExpression
    (297) elementValue -> . annotation
    (298) elementValue -> . elementValueArrayInitializer
    (420) conditionalExpression -> . conditionalOrExpression conditionalExpressionStats
    (421) conditionalExpression -> . conditionalOrExpression
    (287) annotation -> . AT annotationName annotationBody
    (307) elementValueArrayInitializer -> . BLPAREN elementValueStatement COMMA_OR_empty BRPAREN
    (425) conditionalOrExpression -> . conditionalAndExpression O_conditionalAndExpressions
    (426) conditionalOrExpression -> . conditionalAndExpression
    (430) conditionalAndExpression -> . inclusiveOrExpression O_inclusiveOrExpressions
    (431) conditionalAndExpression -> . inclusiveOrExpression
    (435) inclusiveOrExpression -> . exclusiveOrExpression V_exclusiveOrExpression
    (436) inclusiveOrExpression -> . exclusiveOrExpression
    (440) exclusiveOrExpression -> . andExpression CARET_andExpressions
    (441) exclusiveOrExpression -> . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    AT              shift and go to state 133
    BLPAREN         shift and go to state 107
    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    equalityExpression             shift and go to state 108
    inclusiveOrExpression          shift and go to state 99
    multiplicativeExpression       shift and go to state 128
    exclusiveOrExpression          shift and go to state 110
    conditionalAndExpression       shift and go to state 89
    shiftExpression                shift and go to state 130
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    integerLiteral                 shift and go to state 98
    additiveExpression             shift and go to state 102
    instanceOfExpression           shift and go to state 96
    conditionalExpression          shift and go to state 118
    unaryExpression                shift and go to state 131
    FloatingPointLiteral           shift and go to state 119
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    relationalExpression           shift and go to state 95
    conditionalOrExpression        shift and go to state 109
    annotation                     shift and go to state 136
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    primitiveType                  shift and go to state 122
    elementValueArrayInitializer   shift and go to state 123
    andExpression                  shift and go to state 106
    elementValue                   shift and go to state 766

state 701

    (324) defaultValue_or_empty -> defaultValue .

    SEMI            reduce using rule 324 (defaultValue_or_empty -> defaultValue .)


state 702

    (326) annotationMethodRest -> Identifier LPAREN RPAREN defaultValue_or_empty .

    SEMI            reduce using rule 326 (annotationMethodRest -> Identifier LPAREN RPAREN defaultValue_or_empty .)


state 703

    (158) voidInterfaceMethodDeclaratorRest -> formalParameters . throwList SEMI
    (159) voidInterfaceMethodDeclaratorRest -> formalParameters . SEMI
    (136) throwList -> . THROWS qualifiedNameList

    SEMI            shift and go to state 767
    THROWS          shift and go to state 586

    throwList                      shift and go to state 768

state 704

    (130) interfaceMemberDecl -> VOID Identifier voidInterfaceMethodDeclaratorRest .

    BRPAREN         reduce using rule 130 (interfaceMemberDecl -> VOID Identifier voidInterfaceMethodDeclaratorRest .)
    SEMI            reduce using rule 130 (interfaceMemberDecl -> VOID Identifier voidInterfaceMethodDeclaratorRest .)
    PUBLIC          reduce using rule 130 (interfaceMemberDecl -> VOID Identifier voidInterfaceMethodDeclaratorRest .)
    PROTECTED       reduce using rule 130 (interfaceMemberDecl -> VOID Identifier voidInterfaceMethodDeclaratorRest .)
    PRIVATE         reduce using rule 130 (interfaceMemberDecl -> VOID Identifier voidInterfaceMethodDeclaratorRest .)
    STATIC          reduce using rule 130 (interfaceMemberDecl -> VOID Identifier voidInterfaceMethodDeclaratorRest .)
    ABSTRACT        reduce using rule 130 (interfaceMemberDecl -> VOID Identifier voidInterfaceMethodDeclaratorRest .)
    FINAL           reduce using rule 130 (interfaceMemberDecl -> VOID Identifier voidInterfaceMethodDeclaratorRest .)
    NATIVE          reduce using rule 130 (interfaceMemberDecl -> VOID Identifier voidInterfaceMethodDeclaratorRest .)
    SYNCHRONIZED    reduce using rule 130 (interfaceMemberDecl -> VOID Identifier voidInterfaceMethodDeclaratorRest .)
    TRANSIENT       reduce using rule 130 (interfaceMemberDecl -> VOID Identifier voidInterfaceMethodDeclaratorRest .)
    VOLATILE        reduce using rule 130 (interfaceMemberDecl -> VOID Identifier voidInterfaceMethodDeclaratorRest .)
    STRICTFP        reduce using rule 130 (interfaceMemberDecl -> VOID Identifier voidInterfaceMethodDeclaratorRest .)
    AT              reduce using rule 130 (interfaceMemberDecl -> VOID Identifier voidInterfaceMethodDeclaratorRest .)


state 705

    (157) interfaceGenericMethodDecl -> typeParameters VOID Identifier . interfaceMethodDeclaratorRest
    (152) interfaceMethodDeclaratorRest -> . formalParameters arrays throwList SEMI
    (153) interfaceMethodDeclaratorRest -> . formalParameters throwList SEMI
    (154) interfaceMethodDeclaratorRest -> . formalParameters arrays SEMI
    (155) interfaceMethodDeclaratorRest -> . formalParameters SEMI
    (246) formalParameters -> . LPAREN formalParameterDecls RPAREN

    LPAREN          shift and go to state 482

    interfaceMethodDeclaratorRest  shift and go to state 769
    formalParameters               shift and go to state 708

state 706

    (156) interfaceGenericMethodDecl -> typeParameters type Identifier . interfaceMethodDeclaratorRest
    (152) interfaceMethodDeclaratorRest -> . formalParameters arrays throwList SEMI
    (153) interfaceMethodDeclaratorRest -> . formalParameters throwList SEMI
    (154) interfaceMethodDeclaratorRest -> . formalParameters arrays SEMI
    (155) interfaceMethodDeclaratorRest -> . formalParameters SEMI
    (246) formalParameters -> . LPAREN formalParameterDecls RPAREN

    LPAREN          shift and go to state 482

    interfaceMethodDeclaratorRest  shift and go to state 770
    formalParameters               shift and go to state 708

state 707

    (135) interfaceMethodOrFieldRest -> interfaceMethodDeclaratorRest .

    BRPAREN         reduce using rule 135 (interfaceMethodOrFieldRest -> interfaceMethodDeclaratorRest .)
    SEMI            reduce using rule 135 (interfaceMethodOrFieldRest -> interfaceMethodDeclaratorRest .)
    PUBLIC          reduce using rule 135 (interfaceMethodOrFieldRest -> interfaceMethodDeclaratorRest .)
    PROTECTED       reduce using rule 135 (interfaceMethodOrFieldRest -> interfaceMethodDeclaratorRest .)
    PRIVATE         reduce using rule 135 (interfaceMethodOrFieldRest -> interfaceMethodDeclaratorRest .)
    STATIC          reduce using rule 135 (interfaceMethodOrFieldRest -> interfaceMethodDeclaratorRest .)
    ABSTRACT        reduce using rule 135 (interfaceMethodOrFieldRest -> interfaceMethodDeclaratorRest .)
    FINAL           reduce using rule 135 (interfaceMethodOrFieldRest -> interfaceMethodDeclaratorRest .)
    NATIVE          reduce using rule 135 (interfaceMethodOrFieldRest -> interfaceMethodDeclaratorRest .)
    SYNCHRONIZED    reduce using rule 135 (interfaceMethodOrFieldRest -> interfaceMethodDeclaratorRest .)
    TRANSIENT       reduce using rule 135 (interfaceMethodOrFieldRest -> interfaceMethodDeclaratorRest .)
    VOLATILE        reduce using rule 135 (interfaceMethodOrFieldRest -> interfaceMethodDeclaratorRest .)
    STRICTFP        reduce using rule 135 (interfaceMethodOrFieldRest -> interfaceMethodDeclaratorRest .)
    AT              reduce using rule 135 (interfaceMethodOrFieldRest -> interfaceMethodDeclaratorRest .)


state 708

    (152) interfaceMethodDeclaratorRest -> formalParameters . arrays throwList SEMI
    (153) interfaceMethodDeclaratorRest -> formalParameters . throwList SEMI
    (154) interfaceMethodDeclaratorRest -> formalParameters . arrays SEMI
    (155) interfaceMethodDeclaratorRest -> formalParameters . SEMI
    (138) arrays -> . arrays array
    (139) arrays -> . array
    (136) throwList -> . THROWS qualifiedNameList
    (137) array -> . FLPAREN FRPAREN

    SEMI            shift and go to state 771
    THROWS          shift and go to state 586
    FLPAREN         shift and go to state 153

    arrays                         shift and go to state 772
    array                          shift and go to state 154
    throwList                      shift and go to state 773

state 709

    (176) constantDeclaratorRest -> arrays . EQUALS variableInitializer
    (138) arrays -> arrays . array
    (137) array -> . FLPAREN FRPAREN

    EQUALS          shift and go to state 774
    FLPAREN         shift and go to state 153

    array                          shift and go to state 308

state 710

    (133) interfaceMethodOrFieldDecl -> type Identifier interfaceMethodOrFieldRest .

    BRPAREN         reduce using rule 133 (interfaceMethodOrFieldDecl -> type Identifier interfaceMethodOrFieldRest .)
    SEMI            reduce using rule 133 (interfaceMethodOrFieldDecl -> type Identifier interfaceMethodOrFieldRest .)
    PUBLIC          reduce using rule 133 (interfaceMethodOrFieldDecl -> type Identifier interfaceMethodOrFieldRest .)
    PROTECTED       reduce using rule 133 (interfaceMethodOrFieldDecl -> type Identifier interfaceMethodOrFieldRest .)
    PRIVATE         reduce using rule 133 (interfaceMethodOrFieldDecl -> type Identifier interfaceMethodOrFieldRest .)
    STATIC          reduce using rule 133 (interfaceMethodOrFieldDecl -> type Identifier interfaceMethodOrFieldRest .)
    ABSTRACT        reduce using rule 133 (interfaceMethodOrFieldDecl -> type Identifier interfaceMethodOrFieldRest .)
    FINAL           reduce using rule 133 (interfaceMethodOrFieldDecl -> type Identifier interfaceMethodOrFieldRest .)
    NATIVE          reduce using rule 133 (interfaceMethodOrFieldDecl -> type Identifier interfaceMethodOrFieldRest .)
    SYNCHRONIZED    reduce using rule 133 (interfaceMethodOrFieldDecl -> type Identifier interfaceMethodOrFieldRest .)
    TRANSIENT       reduce using rule 133 (interfaceMethodOrFieldDecl -> type Identifier interfaceMethodOrFieldRest .)
    VOLATILE        reduce using rule 133 (interfaceMethodOrFieldDecl -> type Identifier interfaceMethodOrFieldRest .)
    STRICTFP        reduce using rule 133 (interfaceMethodOrFieldDecl -> type Identifier interfaceMethodOrFieldRest .)
    AT              reduce using rule 133 (interfaceMethodOrFieldDecl -> type Identifier interfaceMethodOrFieldRest .)


state 711

    (134) interfaceMethodOrFieldRest -> constantDeclaratorsRest . SEMI

    SEMI            shift and go to state 775


state 712

    (177) constantDeclaratorRest -> EQUALS . variableInitializer
    (180) variableInitializer -> . arrayInitializer
    (181) variableInitializer -> . expression
    (189) arrayInitializer -> . BLPAREN array_body BRPAREN
    (404) expression -> . conditionalExpression assignmentOperator_expression_empty
    (420) conditionalExpression -> . conditionalOrExpression conditionalExpressionStats
    (421) conditionalExpression -> . conditionalOrExpression
    (425) conditionalOrExpression -> . conditionalAndExpression O_conditionalAndExpressions
    (426) conditionalOrExpression -> . conditionalAndExpression
    (430) conditionalAndExpression -> . inclusiveOrExpression O_inclusiveOrExpressions
    (431) conditionalAndExpression -> . inclusiveOrExpression
    (435) inclusiveOrExpression -> . exclusiveOrExpression V_exclusiveOrExpression
    (436) inclusiveOrExpression -> . exclusiveOrExpression
    (440) exclusiveOrExpression -> . andExpression CARET_andExpressions
    (441) exclusiveOrExpression -> . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    BLPAREN         shift and go to state 627
    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    equalityExpression             shift and go to state 108
    inclusiveOrExpression          shift and go to state 99
    multiplicativeExpression       shift and go to state 128
    exclusiveOrExpression          shift and go to state 110
    conditionalAndExpression       shift and go to state 89
    shiftExpression                shift and go to state 130
    arrayInitializer               shift and go to state 629
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    integerLiteral                 shift and go to state 98
    additiveExpression             shift and go to state 102
    conditionalExpression          shift and go to state 266
    unaryExpression                shift and go to state 131
    FloatingPointLiteral           shift and go to state 119
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    relationalExpression           shift and go to state 95
    conditionalOrExpression        shift and go to state 109
    instanceOfExpression           shift and go to state 96
    castExpression                 shift and go to state 137
    variableInitializer            shift and go to state 776
    unaryExpressionNotPlusMinus    shift and go to state 105
    primitiveType                  shift and go to state 122
    andExpression                  shift and go to state 106
    expression                     shift and go to state 631

state 713

    (174) constantDeclaratorsRest -> constantDeclaratorRest . COMMA_consts
    (175) constantDeclaratorsRest -> constantDeclaratorRest .
    (172) COMMA_consts -> . COMMA_const
    (173) COMMA_consts -> . COMMA_consts COMMA_const
    (171) COMMA_const -> . COMMA constantDeclarator

    SEMI            reduce using rule 175 (constantDeclaratorsRest -> constantDeclaratorRest .)
    COMMA           shift and go to state 778

    COMMA_consts                   shift and go to state 777
    COMMA_const                    shift and go to state 779

state 714

    (148) voidMethodDeclaratorRest -> formalParameters throwList methodBody .

    SEMI            reduce using rule 148 (voidMethodDeclaratorRest -> formalParameters throwList methodBody .)
    STATIC          reduce using rule 148 (voidMethodDeclaratorRest -> formalParameters throwList methodBody .)
    BLPAREN         reduce using rule 148 (voidMethodDeclaratorRest -> formalParameters throwList methodBody .)
    VOID            reduce using rule 148 (voidMethodDeclaratorRest -> formalParameters throwList methodBody .)
    Identifier      reduce using rule 148 (voidMethodDeclaratorRest -> formalParameters throwList methodBody .)
    PUBLIC          reduce using rule 148 (voidMethodDeclaratorRest -> formalParameters throwList methodBody .)
    PROTECTED       reduce using rule 148 (voidMethodDeclaratorRest -> formalParameters throwList methodBody .)
    PRIVATE         reduce using rule 148 (voidMethodDeclaratorRest -> formalParameters throwList methodBody .)
    ABSTRACT        reduce using rule 148 (voidMethodDeclaratorRest -> formalParameters throwList methodBody .)
    FINAL           reduce using rule 148 (voidMethodDeclaratorRest -> formalParameters throwList methodBody .)
    NATIVE          reduce using rule 148 (voidMethodDeclaratorRest -> formalParameters throwList methodBody .)
    SYNCHRONIZED    reduce using rule 148 (voidMethodDeclaratorRest -> formalParameters throwList methodBody .)
    TRANSIENT       reduce using rule 148 (voidMethodDeclaratorRest -> formalParameters throwList methodBody .)
    VOLATILE        reduce using rule 148 (voidMethodDeclaratorRest -> formalParameters throwList methodBody .)
    STRICTFP        reduce using rule 148 (voidMethodDeclaratorRest -> formalParameters throwList methodBody .)
    AT              reduce using rule 148 (voidMethodDeclaratorRest -> formalParameters throwList methodBody .)
    LESS            reduce using rule 148 (voidMethodDeclaratorRest -> formalParameters throwList methodBody .)
    INTERFACE       reduce using rule 148 (voidMethodDeclaratorRest -> formalParameters throwList methodBody .)
    CLASS           reduce using rule 148 (voidMethodDeclaratorRest -> formalParameters throwList methodBody .)
    ENUM            reduce using rule 148 (voidMethodDeclaratorRest -> formalParameters throwList methodBody .)
    BOOLEAN         reduce using rule 148 (voidMethodDeclaratorRest -> formalParameters throwList methodBody .)
    CHAR            reduce using rule 148 (voidMethodDeclaratorRest -> formalParameters throwList methodBody .)
    BYTE            reduce using rule 148 (voidMethodDeclaratorRest -> formalParameters throwList methodBody .)
    SHORT           reduce using rule 148 (voidMethodDeclaratorRest -> formalParameters throwList methodBody .)
    INT             reduce using rule 148 (voidMethodDeclaratorRest -> formalParameters throwList methodBody .)
    LONG            reduce using rule 148 (voidMethodDeclaratorRest -> formalParameters throwList methodBody .)
    FLOAT           reduce using rule 148 (voidMethodDeclaratorRest -> formalParameters throwList methodBody .)
    DOUBLE          reduce using rule 148 (voidMethodDeclaratorRest -> formalParameters throwList methodBody .)
    BRPAREN         reduce using rule 148 (voidMethodDeclaratorRest -> formalParameters throwList methodBody .)


state 715

    (149) voidMethodDeclaratorRest -> formalParameters throwList SEMI .

    SEMI            reduce using rule 149 (voidMethodDeclaratorRest -> formalParameters throwList SEMI .)
    STATIC          reduce using rule 149 (voidMethodDeclaratorRest -> formalParameters throwList SEMI .)
    BLPAREN         reduce using rule 149 (voidMethodDeclaratorRest -> formalParameters throwList SEMI .)
    VOID            reduce using rule 149 (voidMethodDeclaratorRest -> formalParameters throwList SEMI .)
    Identifier      reduce using rule 149 (voidMethodDeclaratorRest -> formalParameters throwList SEMI .)
    PUBLIC          reduce using rule 149 (voidMethodDeclaratorRest -> formalParameters throwList SEMI .)
    PROTECTED       reduce using rule 149 (voidMethodDeclaratorRest -> formalParameters throwList SEMI .)
    PRIVATE         reduce using rule 149 (voidMethodDeclaratorRest -> formalParameters throwList SEMI .)
    ABSTRACT        reduce using rule 149 (voidMethodDeclaratorRest -> formalParameters throwList SEMI .)
    FINAL           reduce using rule 149 (voidMethodDeclaratorRest -> formalParameters throwList SEMI .)
    NATIVE          reduce using rule 149 (voidMethodDeclaratorRest -> formalParameters throwList SEMI .)
    SYNCHRONIZED    reduce using rule 149 (voidMethodDeclaratorRest -> formalParameters throwList SEMI .)
    TRANSIENT       reduce using rule 149 (voidMethodDeclaratorRest -> formalParameters throwList SEMI .)
    VOLATILE        reduce using rule 149 (voidMethodDeclaratorRest -> formalParameters throwList SEMI .)
    STRICTFP        reduce using rule 149 (voidMethodDeclaratorRest -> formalParameters throwList SEMI .)
    AT              reduce using rule 149 (voidMethodDeclaratorRest -> formalParameters throwList SEMI .)
    LESS            reduce using rule 149 (voidMethodDeclaratorRest -> formalParameters throwList SEMI .)
    INTERFACE       reduce using rule 149 (voidMethodDeclaratorRest -> formalParameters throwList SEMI .)
    CLASS           reduce using rule 149 (voidMethodDeclaratorRest -> formalParameters throwList SEMI .)
    ENUM            reduce using rule 149 (voidMethodDeclaratorRest -> formalParameters throwList SEMI .)
    BOOLEAN         reduce using rule 149 (voidMethodDeclaratorRest -> formalParameters throwList SEMI .)
    CHAR            reduce using rule 149 (voidMethodDeclaratorRest -> formalParameters throwList SEMI .)
    BYTE            reduce using rule 149 (voidMethodDeclaratorRest -> formalParameters throwList SEMI .)
    SHORT           reduce using rule 149 (voidMethodDeclaratorRest -> formalParameters throwList SEMI .)
    INT             reduce using rule 149 (voidMethodDeclaratorRest -> formalParameters throwList SEMI .)
    LONG            reduce using rule 149 (voidMethodDeclaratorRest -> formalParameters throwList SEMI .)
    FLOAT           reduce using rule 149 (voidMethodDeclaratorRest -> formalParameters throwList SEMI .)
    DOUBLE          reduce using rule 149 (voidMethodDeclaratorRest -> formalParameters throwList SEMI .)
    BRPAREN         reduce using rule 149 (voidMethodDeclaratorRest -> formalParameters throwList SEMI .)


state 716

    (144) methodDeclaratorRest -> formalParameters arrays methodBody .

    SEMI            reduce using rule 144 (methodDeclaratorRest -> formalParameters arrays methodBody .)
    STATIC          reduce using rule 144 (methodDeclaratorRest -> formalParameters arrays methodBody .)
    BLPAREN         reduce using rule 144 (methodDeclaratorRest -> formalParameters arrays methodBody .)
    VOID            reduce using rule 144 (methodDeclaratorRest -> formalParameters arrays methodBody .)
    Identifier      reduce using rule 144 (methodDeclaratorRest -> formalParameters arrays methodBody .)
    PUBLIC          reduce using rule 144 (methodDeclaratorRest -> formalParameters arrays methodBody .)
    PROTECTED       reduce using rule 144 (methodDeclaratorRest -> formalParameters arrays methodBody .)
    PRIVATE         reduce using rule 144 (methodDeclaratorRest -> formalParameters arrays methodBody .)
    ABSTRACT        reduce using rule 144 (methodDeclaratorRest -> formalParameters arrays methodBody .)
    FINAL           reduce using rule 144 (methodDeclaratorRest -> formalParameters arrays methodBody .)
    NATIVE          reduce using rule 144 (methodDeclaratorRest -> formalParameters arrays methodBody .)
    SYNCHRONIZED    reduce using rule 144 (methodDeclaratorRest -> formalParameters arrays methodBody .)
    TRANSIENT       reduce using rule 144 (methodDeclaratorRest -> formalParameters arrays methodBody .)
    VOLATILE        reduce using rule 144 (methodDeclaratorRest -> formalParameters arrays methodBody .)
    STRICTFP        reduce using rule 144 (methodDeclaratorRest -> formalParameters arrays methodBody .)
    AT              reduce using rule 144 (methodDeclaratorRest -> formalParameters arrays methodBody .)
    LESS            reduce using rule 144 (methodDeclaratorRest -> formalParameters arrays methodBody .)
    INTERFACE       reduce using rule 144 (methodDeclaratorRest -> formalParameters arrays methodBody .)
    CLASS           reduce using rule 144 (methodDeclaratorRest -> formalParameters arrays methodBody .)
    ENUM            reduce using rule 144 (methodDeclaratorRest -> formalParameters arrays methodBody .)
    BOOLEAN         reduce using rule 144 (methodDeclaratorRest -> formalParameters arrays methodBody .)
    CHAR            reduce using rule 144 (methodDeclaratorRest -> formalParameters arrays methodBody .)
    BYTE            reduce using rule 144 (methodDeclaratorRest -> formalParameters arrays methodBody .)
    SHORT           reduce using rule 144 (methodDeclaratorRest -> formalParameters arrays methodBody .)
    INT             reduce using rule 144 (methodDeclaratorRest -> formalParameters arrays methodBody .)
    LONG            reduce using rule 144 (methodDeclaratorRest -> formalParameters arrays methodBody .)
    FLOAT           reduce using rule 144 (methodDeclaratorRest -> formalParameters arrays methodBody .)
    DOUBLE          reduce using rule 144 (methodDeclaratorRest -> formalParameters arrays methodBody .)
    BRPAREN         reduce using rule 144 (methodDeclaratorRest -> formalParameters arrays methodBody .)


state 717

    (145) methodDeclaratorRest -> formalParameters arrays SEMI .

    SEMI            reduce using rule 145 (methodDeclaratorRest -> formalParameters arrays SEMI .)
    STATIC          reduce using rule 145 (methodDeclaratorRest -> formalParameters arrays SEMI .)
    BLPAREN         reduce using rule 145 (methodDeclaratorRest -> formalParameters arrays SEMI .)
    VOID            reduce using rule 145 (methodDeclaratorRest -> formalParameters arrays SEMI .)
    Identifier      reduce using rule 145 (methodDeclaratorRest -> formalParameters arrays SEMI .)
    PUBLIC          reduce using rule 145 (methodDeclaratorRest -> formalParameters arrays SEMI .)
    PROTECTED       reduce using rule 145 (methodDeclaratorRest -> formalParameters arrays SEMI .)
    PRIVATE         reduce using rule 145 (methodDeclaratorRest -> formalParameters arrays SEMI .)
    ABSTRACT        reduce using rule 145 (methodDeclaratorRest -> formalParameters arrays SEMI .)
    FINAL           reduce using rule 145 (methodDeclaratorRest -> formalParameters arrays SEMI .)
    NATIVE          reduce using rule 145 (methodDeclaratorRest -> formalParameters arrays SEMI .)
    SYNCHRONIZED    reduce using rule 145 (methodDeclaratorRest -> formalParameters arrays SEMI .)
    TRANSIENT       reduce using rule 145 (methodDeclaratorRest -> formalParameters arrays SEMI .)
    VOLATILE        reduce using rule 145 (methodDeclaratorRest -> formalParameters arrays SEMI .)
    STRICTFP        reduce using rule 145 (methodDeclaratorRest -> formalParameters arrays SEMI .)
    AT              reduce using rule 145 (methodDeclaratorRest -> formalParameters arrays SEMI .)
    LESS            reduce using rule 145 (methodDeclaratorRest -> formalParameters arrays SEMI .)
    INTERFACE       reduce using rule 145 (methodDeclaratorRest -> formalParameters arrays SEMI .)
    CLASS           reduce using rule 145 (methodDeclaratorRest -> formalParameters arrays SEMI .)
    ENUM            reduce using rule 145 (methodDeclaratorRest -> formalParameters arrays SEMI .)
    BOOLEAN         reduce using rule 145 (methodDeclaratorRest -> formalParameters arrays SEMI .)
    CHAR            reduce using rule 145 (methodDeclaratorRest -> formalParameters arrays SEMI .)
    BYTE            reduce using rule 145 (methodDeclaratorRest -> formalParameters arrays SEMI .)
    SHORT           reduce using rule 145 (methodDeclaratorRest -> formalParameters arrays SEMI .)
    INT             reduce using rule 145 (methodDeclaratorRest -> formalParameters arrays SEMI .)
    LONG            reduce using rule 145 (methodDeclaratorRest -> formalParameters arrays SEMI .)
    FLOAT           reduce using rule 145 (methodDeclaratorRest -> formalParameters arrays SEMI .)
    DOUBLE          reduce using rule 145 (methodDeclaratorRest -> formalParameters arrays SEMI .)
    BRPAREN         reduce using rule 145 (methodDeclaratorRest -> formalParameters arrays SEMI .)


state 718

    (140) methodDeclaratorRest -> formalParameters arrays throwList . methodBody
    (141) methodDeclaratorRest -> formalParameters arrays throwList . SEMI
    (254) methodBody -> . block
    (329) block -> . BLPAREN blockStatements BRPAREN
    (330) block -> . BLPAREN BRPAREN

    SEMI            shift and go to state 781
    BLPAREN         shift and go to state 335

    methodBody                     shift and go to state 780
    block                          shift and go to state 642

state 719

    (143) methodDeclaratorRest -> formalParameters throwList methodBody .

    SEMI            reduce using rule 143 (methodDeclaratorRest -> formalParameters throwList methodBody .)
    STATIC          reduce using rule 143 (methodDeclaratorRest -> formalParameters throwList methodBody .)
    BLPAREN         reduce using rule 143 (methodDeclaratorRest -> formalParameters throwList methodBody .)
    VOID            reduce using rule 143 (methodDeclaratorRest -> formalParameters throwList methodBody .)
    Identifier      reduce using rule 143 (methodDeclaratorRest -> formalParameters throwList methodBody .)
    PUBLIC          reduce using rule 143 (methodDeclaratorRest -> formalParameters throwList methodBody .)
    PROTECTED       reduce using rule 143 (methodDeclaratorRest -> formalParameters throwList methodBody .)
    PRIVATE         reduce using rule 143 (methodDeclaratorRest -> formalParameters throwList methodBody .)
    ABSTRACT        reduce using rule 143 (methodDeclaratorRest -> formalParameters throwList methodBody .)
    FINAL           reduce using rule 143 (methodDeclaratorRest -> formalParameters throwList methodBody .)
    NATIVE          reduce using rule 143 (methodDeclaratorRest -> formalParameters throwList methodBody .)
    SYNCHRONIZED    reduce using rule 143 (methodDeclaratorRest -> formalParameters throwList methodBody .)
    TRANSIENT       reduce using rule 143 (methodDeclaratorRest -> formalParameters throwList methodBody .)
    VOLATILE        reduce using rule 143 (methodDeclaratorRest -> formalParameters throwList methodBody .)
    STRICTFP        reduce using rule 143 (methodDeclaratorRest -> formalParameters throwList methodBody .)
    AT              reduce using rule 143 (methodDeclaratorRest -> formalParameters throwList methodBody .)
    LESS            reduce using rule 143 (methodDeclaratorRest -> formalParameters throwList methodBody .)
    INTERFACE       reduce using rule 143 (methodDeclaratorRest -> formalParameters throwList methodBody .)
    CLASS           reduce using rule 143 (methodDeclaratorRest -> formalParameters throwList methodBody .)
    ENUM            reduce using rule 143 (methodDeclaratorRest -> formalParameters throwList methodBody .)
    BOOLEAN         reduce using rule 143 (methodDeclaratorRest -> formalParameters throwList methodBody .)
    CHAR            reduce using rule 143 (methodDeclaratorRest -> formalParameters throwList methodBody .)
    BYTE            reduce using rule 143 (methodDeclaratorRest -> formalParameters throwList methodBody .)
    SHORT           reduce using rule 143 (methodDeclaratorRest -> formalParameters throwList methodBody .)
    INT             reduce using rule 143 (methodDeclaratorRest -> formalParameters throwList methodBody .)
    LONG            reduce using rule 143 (methodDeclaratorRest -> formalParameters throwList methodBody .)
    FLOAT           reduce using rule 143 (methodDeclaratorRest -> formalParameters throwList methodBody .)
    DOUBLE          reduce using rule 143 (methodDeclaratorRest -> formalParameters throwList methodBody .)
    BRPAREN         reduce using rule 143 (methodDeclaratorRest -> formalParameters throwList methodBody .)


state 720

    (142) methodDeclaratorRest -> formalParameters throwList SEMI .

    SEMI            reduce using rule 142 (methodDeclaratorRest -> formalParameters throwList SEMI .)
    STATIC          reduce using rule 142 (methodDeclaratorRest -> formalParameters throwList SEMI .)
    BLPAREN         reduce using rule 142 (methodDeclaratorRest -> formalParameters throwList SEMI .)
    VOID            reduce using rule 142 (methodDeclaratorRest -> formalParameters throwList SEMI .)
    Identifier      reduce using rule 142 (methodDeclaratorRest -> formalParameters throwList SEMI .)
    PUBLIC          reduce using rule 142 (methodDeclaratorRest -> formalParameters throwList SEMI .)
    PROTECTED       reduce using rule 142 (methodDeclaratorRest -> formalParameters throwList SEMI .)
    PRIVATE         reduce using rule 142 (methodDeclaratorRest -> formalParameters throwList SEMI .)
    ABSTRACT        reduce using rule 142 (methodDeclaratorRest -> formalParameters throwList SEMI .)
    FINAL           reduce using rule 142 (methodDeclaratorRest -> formalParameters throwList SEMI .)
    NATIVE          reduce using rule 142 (methodDeclaratorRest -> formalParameters throwList SEMI .)
    SYNCHRONIZED    reduce using rule 142 (methodDeclaratorRest -> formalParameters throwList SEMI .)
    TRANSIENT       reduce using rule 142 (methodDeclaratorRest -> formalParameters throwList SEMI .)
    VOLATILE        reduce using rule 142 (methodDeclaratorRest -> formalParameters throwList SEMI .)
    STRICTFP        reduce using rule 142 (methodDeclaratorRest -> formalParameters throwList SEMI .)
    AT              reduce using rule 142 (methodDeclaratorRest -> formalParameters throwList SEMI .)
    LESS            reduce using rule 142 (methodDeclaratorRest -> formalParameters throwList SEMI .)
    INTERFACE       reduce using rule 142 (methodDeclaratorRest -> formalParameters throwList SEMI .)
    CLASS           reduce using rule 142 (methodDeclaratorRest -> formalParameters throwList SEMI .)
    ENUM            reduce using rule 142 (methodDeclaratorRest -> formalParameters throwList SEMI .)
    BOOLEAN         reduce using rule 142 (methodDeclaratorRest -> formalParameters throwList SEMI .)
    CHAR            reduce using rule 142 (methodDeclaratorRest -> formalParameters throwList SEMI .)
    BYTE            reduce using rule 142 (methodDeclaratorRest -> formalParameters throwList SEMI .)
    SHORT           reduce using rule 142 (methodDeclaratorRest -> formalParameters throwList SEMI .)
    INT             reduce using rule 142 (methodDeclaratorRest -> formalParameters throwList SEMI .)
    LONG            reduce using rule 142 (methodDeclaratorRest -> formalParameters throwList SEMI .)
    FLOAT           reduce using rule 142 (methodDeclaratorRest -> formalParameters throwList SEMI .)
    DOUBLE          reduce using rule 142 (methodDeclaratorRest -> formalParameters throwList SEMI .)
    BRPAREN         reduce using rule 142 (methodDeclaratorRest -> formalParameters throwList SEMI .)


state 721

    (261) explicitConstructorInvocation -> nonWildcardTypeArguments THIS . arguments SEMI
    (555) arguments -> . LPAREN expressionList_once RPAREN

    LPAREN          shift and go to state 199

    arguments                      shift and go to state 782

state 722

    (262) explicitConstructorInvocation -> nonWildcardTypeArguments SUPER . arguments SEMI
    (555) arguments -> . LPAREN expressionList_once RPAREN

    LPAREN          shift and go to state 199

    arguments                      shift and go to state 783

state 723

    (263) explicitConstructorInvocation -> THIS arguments . SEMI
    (522) identifierSuffix -> arguments .

  ! shift/reduce conflict for SEMI resolved as shift
    SEMI            shift and go to state 784
    DOT             reduce using rule 522 (identifierSuffix -> arguments .)
    OP_INC          reduce using rule 522 (identifierSuffix -> arguments .)
    OP_DEC          reduce using rule 522 (identifierSuffix -> arguments .)
    FLPAREN         reduce using rule 522 (identifierSuffix -> arguments .)
    MULT            reduce using rule 522 (identifierSuffix -> arguments .)
    SLASH           reduce using rule 522 (identifierSuffix -> arguments .)
    PERCENT         reduce using rule 522 (identifierSuffix -> arguments .)
    PLUS            reduce using rule 522 (identifierSuffix -> arguments .)
    DASH            reduce using rule 522 (identifierSuffix -> arguments .)
    OP_SHR          reduce using rule 522 (identifierSuffix -> arguments .)
    OP_SHRR         reduce using rule 522 (identifierSuffix -> arguments .)
    OP_SHL          reduce using rule 522 (identifierSuffix -> arguments .)
    OP_LE           reduce using rule 522 (identifierSuffix -> arguments .)
    OP_GE           reduce using rule 522 (identifierSuffix -> arguments .)
    LESS            reduce using rule 522 (identifierSuffix -> arguments .)
    MORE            reduce using rule 522 (identifierSuffix -> arguments .)
    INSTANCEOF      reduce using rule 522 (identifierSuffix -> arguments .)
    OP_EQ           reduce using rule 522 (identifierSuffix -> arguments .)
    OP_NE           reduce using rule 522 (identifierSuffix -> arguments .)
    AND             reduce using rule 522 (identifierSuffix -> arguments .)
    CARET           reduce using rule 522 (identifierSuffix -> arguments .)
    VERTICAL        reduce using rule 522 (identifierSuffix -> arguments .)
    OP_LAND         reduce using rule 522 (identifierSuffix -> arguments .)
    OP_LOR          reduce using rule 522 (identifierSuffix -> arguments .)
    QUES            reduce using rule 522 (identifierSuffix -> arguments .)
    EQUALS          reduce using rule 522 (identifierSuffix -> arguments .)
    ASS_ADD         reduce using rule 522 (identifierSuffix -> arguments .)
    ASS_SUB         reduce using rule 522 (identifierSuffix -> arguments .)
    ASS_MUL         reduce using rule 522 (identifierSuffix -> arguments .)
    ASS_DIV         reduce using rule 522 (identifierSuffix -> arguments .)
    ASS_AND         reduce using rule 522 (identifierSuffix -> arguments .)
    ASS_OR          reduce using rule 522 (identifierSuffix -> arguments .)
    ASS_XOR         reduce using rule 522 (identifierSuffix -> arguments .)
    ASS_MOD         reduce using rule 522 (identifierSuffix -> arguments .)
    ASS_SHL         reduce using rule 522 (identifierSuffix -> arguments .)
    ASS_SHRR        reduce using rule 522 (identifierSuffix -> arguments .)
    ASS_SHR         reduce using rule 522 (identifierSuffix -> arguments .)

  ! SEMI            [ reduce using rule 522 (identifierSuffix -> arguments .) ]


state 724

    (265) explicitConstructorInvocation -> primary DOT . nonWildcardTypeArguments SUPER arguments SEMI
    (266) explicitConstructorInvocation -> primary DOT . SUPER arguments SEMI
    (545) selector -> DOT . Identifier arguments_once
    (546) selector -> DOT . Identifier
    (547) selector -> DOT . THIS
    (548) selector -> DOT . SUPER superSuffix
    (549) selector -> DOT . NEW innerCreator
    (544) nonWildcardTypeArguments -> . LESS typeList MORE

    SUPER           shift and go to state 786
    Identifier      shift and go to state 392
    THIS            shift and go to state 390
    NEW             shift and go to state 391
    LESS            shift and go to state 242

    nonWildcardTypeArguments       shift and go to state 785

state 725

    (514) primary -> primitiveType arrays . DOT CLASS
    (206) type -> primitiveType arrays .
    (138) arrays -> arrays . array
    (137) array -> . FLPAREN FRPAREN

    DOT             shift and go to state 401
    Identifier      reduce using rule 206 (type -> primitiveType arrays .)
    FLPAREN         shift and go to state 153

    array                          shift and go to state 308

state 726

    (259) constructorBody -> BLPAREN blockStatements BRPAREN .

    SEMI            reduce using rule 259 (constructorBody -> BLPAREN blockStatements BRPAREN .)
    STATIC          reduce using rule 259 (constructorBody -> BLPAREN blockStatements BRPAREN .)
    BLPAREN         reduce using rule 259 (constructorBody -> BLPAREN blockStatements BRPAREN .)
    VOID            reduce using rule 259 (constructorBody -> BLPAREN blockStatements BRPAREN .)
    Identifier      reduce using rule 259 (constructorBody -> BLPAREN blockStatements BRPAREN .)
    PUBLIC          reduce using rule 259 (constructorBody -> BLPAREN blockStatements BRPAREN .)
    PROTECTED       reduce using rule 259 (constructorBody -> BLPAREN blockStatements BRPAREN .)
    PRIVATE         reduce using rule 259 (constructorBody -> BLPAREN blockStatements BRPAREN .)
    ABSTRACT        reduce using rule 259 (constructorBody -> BLPAREN blockStatements BRPAREN .)
    FINAL           reduce using rule 259 (constructorBody -> BLPAREN blockStatements BRPAREN .)
    NATIVE          reduce using rule 259 (constructorBody -> BLPAREN blockStatements BRPAREN .)
    SYNCHRONIZED    reduce using rule 259 (constructorBody -> BLPAREN blockStatements BRPAREN .)
    TRANSIENT       reduce using rule 259 (constructorBody -> BLPAREN blockStatements BRPAREN .)
    VOLATILE        reduce using rule 259 (constructorBody -> BLPAREN blockStatements BRPAREN .)
    STRICTFP        reduce using rule 259 (constructorBody -> BLPAREN blockStatements BRPAREN .)
    AT              reduce using rule 259 (constructorBody -> BLPAREN blockStatements BRPAREN .)
    LESS            reduce using rule 259 (constructorBody -> BLPAREN blockStatements BRPAREN .)
    INTERFACE       reduce using rule 259 (constructorBody -> BLPAREN blockStatements BRPAREN .)
    CLASS           reduce using rule 259 (constructorBody -> BLPAREN blockStatements BRPAREN .)
    ENUM            reduce using rule 259 (constructorBody -> BLPAREN blockStatements BRPAREN .)
    BOOLEAN         reduce using rule 259 (constructorBody -> BLPAREN blockStatements BRPAREN .)
    CHAR            reduce using rule 259 (constructorBody -> BLPAREN blockStatements BRPAREN .)
    BYTE            reduce using rule 259 (constructorBody -> BLPAREN blockStatements BRPAREN .)
    SHORT           reduce using rule 259 (constructorBody -> BLPAREN blockStatements BRPAREN .)
    INT             reduce using rule 259 (constructorBody -> BLPAREN blockStatements BRPAREN .)
    LONG            reduce using rule 259 (constructorBody -> BLPAREN blockStatements BRPAREN .)
    FLOAT           reduce using rule 259 (constructorBody -> BLPAREN blockStatements BRPAREN .)
    DOUBLE          reduce using rule 259 (constructorBody -> BLPAREN blockStatements BRPAREN .)
    BRPAREN         reduce using rule 259 (constructorBody -> BLPAREN blockStatements BRPAREN .)


state 727

    (394) parExpression -> LPAREN expression . RPAREN
    (503) castExpression -> LPAREN expression . RPAREN unaryExpressionNotPlusMinus

    RPAREN          shift and go to state 787


state 728

    (257) constructorBody -> BLPAREN explicitConstructorInvocation blockStatements . BRPAREN
    (256) blockStatements -> blockStatements . blockStatement
    (331) blockStatement -> . localVariableDeclarationStatement
    (332) blockStatement -> . classOrInterfaceDeclaration
    (333) blockStatement -> . statement
    (334) localVariableDeclarationStatement -> . localVariableDeclaration SEMI
    (26) classOrInterfaceDeclaration -> . classOrInterfaceModifiers classDeclaration
    (27) classOrInterfaceDeclaration -> . classOrInterfaceModifiers interfaceDeclaration
    (28) classOrInterfaceDeclaration -> . classDeclaration
    (29) classOrInterfaceDeclaration -> . interfaceDeclaration
    (347) statement -> . block
    (348) statement -> . ASSERT expression expression_colon_or_empty SEMI
    (349) statement -> . IF parExpression statement else_statement
    (350) statement -> . FOR LPAREN forControl RPAREN statement
    (351) statement -> . WHILE parExpression statement
    (352) statement -> . DO statement WHILE parExpression SEMI
    (353) statement -> . TRY block catches FINALLY block
    (354) statement -> . TRY block catches
    (355) statement -> . TRY block FINALLY block
    (356) statement -> . SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN
    (357) statement -> . SYNCHRONIZED parExpression block
    (358) statement -> . RETURN expression_or_empty SEMI
    (359) statement -> . THROW expression SEMI
    (360) statement -> . BREAK Identifier_or_empty SEMI
    (361) statement -> . CONTINUE Identifier_or_empty SEMI
    (362) statement -> . SEMI
    (363) statement -> . statementExpression SEMI
    (364) statement -> . Identifier COLON statement
    (335) localVariableDeclaration -> . variableModifiers type variableDeclarators
    (336) localVariableDeclaration -> . type variableDeclarators
    (30) classOrInterfaceModifiers -> . classOrInterfaceModifier
    (31) classOrInterfaceModifiers -> . classOrInterfaceModifiers classOrInterfaceModifier
    (42) classDeclaration -> . normalClassDeclaration
    (43) classDeclaration -> . enumDeclaration
    (89) interfaceDeclaration -> . normalInterfaceDeclaration
    (90) interfaceDeclaration -> . annotationTypeDeclaration
    (329) block -> . BLPAREN blockStatements BRPAREN
    (330) block -> . BLPAREN BRPAREN
    (400) statementExpression -> . expression
    (337) variableModifiers -> . variableModifier
    (338) variableModifiers -> . variableModifiers variableModifier
    (205) type -> . type_body
    (206) type -> . primitiveType arrays
    (207) type -> . primitiveType
    (32) classOrInterfaceModifier -> . annotation
    (33) classOrInterfaceModifier -> . PUBLIC
    (34) classOrInterfaceModifier -> . PROTECTED
    (35) classOrInterfaceModifier -> . PRIVATE
    (36) classOrInterfaceModifier -> . ABSTRACT
    (37) classOrInterfaceModifier -> . STATIC
    (38) classOrInterfaceModifier -> . FINAL
    (39) classOrInterfaceModifier -> . STRICTFP
    (48) normalClassDeclaration -> . CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody
    (63) enumDeclaration -> . ENUM Identifier IMPLEMENTS_typeList enumBody
    (95) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody
    (308) annotationTypeDeclaration -> . AT INTERFACE Identifier annotationTypeBody
    (404) expression -> . conditionalExpression assignmentOperator_expression_empty
    (229) variableModifier -> . FINAL
    (230) variableModifier -> . annotation
    (208) type_body -> . Identifier classOrInterfaceTypeBody arrays
    (209) type_body -> . Identifier classOrInterfaceTypeBody
    (210) type_body -> . Identifier arrays
    (211) type_body -> . Identifier
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (287) annotation -> . AT annotationName annotationBody
    (420) conditionalExpression -> . conditionalOrExpression conditionalExpressionStats
    (421) conditionalExpression -> . conditionalOrExpression
    (425) conditionalOrExpression -> . conditionalAndExpression O_conditionalAndExpressions
    (426) conditionalOrExpression -> . conditionalAndExpression
    (430) conditionalAndExpression -> . inclusiveOrExpression O_inclusiveOrExpressions
    (431) conditionalAndExpression -> . inclusiveOrExpression
    (435) inclusiveOrExpression -> . exclusiveOrExpression V_exclusiveOrExpression
    (436) inclusiveOrExpression -> . exclusiveOrExpression
    (440) exclusiveOrExpression -> . andExpression CARET_andExpressions
    (441) exclusiveOrExpression -> . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    BRPAREN         shift and go to state 788
    ASSERT          shift and go to state 507
    IF              shift and go to state 513
    FOR             shift and go to state 492
    WHILE           shift and go to state 500
    DO              shift and go to state 506
    TRY             shift and go to state 494
    SWITCH          shift and go to state 501
    SYNCHRONIZED    shift and go to state 490
    RETURN          shift and go to state 489
    THROW           shift and go to state 514
    BREAK           shift and go to state 505
    CONTINUE        shift and go to state 496
    SEMI            shift and go to state 508
    Identifier      shift and go to state 495
    BLPAREN         shift and go to state 335
    PUBLIC          shift and go to state 24
    PROTECTED       shift and go to state 3
    PRIVATE         shift and go to state 9
    ABSTRACT        shift and go to state 2
    STATIC          shift and go to state 4
    FINAL           shift and go to state 491
    STRICTFP        shift and go to state 10
    CLASS           shift and go to state 12
    ENUM            shift and go to state 15
    INTERFACE       shift and go to state 23
    AT              shift and go to state 18
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    equalityExpression             shift and go to state 108
    localVariableDeclaration       shift and go to state 499
    inclusiveOrExpression          shift and go to state 99
    multiplicativeExpression       shift and go to state 128
    exclusiveOrExpression          shift and go to state 110
    conditionalAndExpression       shift and go to state 89
    FloatingPointLiteral           shift and go to state 119
    primitiveType                  shift and go to state 504
    blockStatement                 shift and go to state 615
    normalInterfaceDeclaration     shift and go to state 5
    shiftExpression                shift and go to state 130
    primary                        shift and go to state 111
    normalClassDeclaration         shift and go to state 7
    unaryExpression                shift and go to state 131
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    classOrInterfaceModifiers      shift and go to state 22
    statement                      shift and go to state 502
    type                           shift and go to state 503
    additiveExpression             shift and go to state 102
    instanceOfExpression           shift and go to state 96
    conditionalExpression          shift and go to state 266
    enumDeclaration                shift and go to state 13
    classOrInterfaceDeclaration    shift and go to state 486
    integerLiteral                 shift and go to state 98
    parExpression                  shift and go to state 132
    classOrInterfaceModifier       shift and go to state 20
    relationalExpression           shift and go to state 95
    variableModifier               shift and go to state 487
    classDeclaration               shift and go to state 17
    conditionalOrExpression        shift and go to state 109
    localVariableDeclarationStatement shift and go to state 488
    annotation                     shift and go to state 512
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    variableModifiers              shift and go to state 493
    type_body                      shift and go to state 77
    annotationTypeDeclaration      shift and go to state 21
    statementExpression            shift and go to state 509
    interfaceDeclaration           shift and go to state 1
    andExpression                  shift and go to state 106
    expression                     shift and go to state 497
    block                          shift and go to state 498

state 729

    (258) constructorBody -> BLPAREN explicitConstructorInvocation BRPAREN .

    SEMI            reduce using rule 258 (constructorBody -> BLPAREN explicitConstructorInvocation BRPAREN .)
    STATIC          reduce using rule 258 (constructorBody -> BLPAREN explicitConstructorInvocation BRPAREN .)
    BLPAREN         reduce using rule 258 (constructorBody -> BLPAREN explicitConstructorInvocation BRPAREN .)
    VOID            reduce using rule 258 (constructorBody -> BLPAREN explicitConstructorInvocation BRPAREN .)
    Identifier      reduce using rule 258 (constructorBody -> BLPAREN explicitConstructorInvocation BRPAREN .)
    PUBLIC          reduce using rule 258 (constructorBody -> BLPAREN explicitConstructorInvocation BRPAREN .)
    PROTECTED       reduce using rule 258 (constructorBody -> BLPAREN explicitConstructorInvocation BRPAREN .)
    PRIVATE         reduce using rule 258 (constructorBody -> BLPAREN explicitConstructorInvocation BRPAREN .)
    ABSTRACT        reduce using rule 258 (constructorBody -> BLPAREN explicitConstructorInvocation BRPAREN .)
    FINAL           reduce using rule 258 (constructorBody -> BLPAREN explicitConstructorInvocation BRPAREN .)
    NATIVE          reduce using rule 258 (constructorBody -> BLPAREN explicitConstructorInvocation BRPAREN .)
    SYNCHRONIZED    reduce using rule 258 (constructorBody -> BLPAREN explicitConstructorInvocation BRPAREN .)
    TRANSIENT       reduce using rule 258 (constructorBody -> BLPAREN explicitConstructorInvocation BRPAREN .)
    VOLATILE        reduce using rule 258 (constructorBody -> BLPAREN explicitConstructorInvocation BRPAREN .)
    STRICTFP        reduce using rule 258 (constructorBody -> BLPAREN explicitConstructorInvocation BRPAREN .)
    AT              reduce using rule 258 (constructorBody -> BLPAREN explicitConstructorInvocation BRPAREN .)
    LESS            reduce using rule 258 (constructorBody -> BLPAREN explicitConstructorInvocation BRPAREN .)
    INTERFACE       reduce using rule 258 (constructorBody -> BLPAREN explicitConstructorInvocation BRPAREN .)
    CLASS           reduce using rule 258 (constructorBody -> BLPAREN explicitConstructorInvocation BRPAREN .)
    ENUM            reduce using rule 258 (constructorBody -> BLPAREN explicitConstructorInvocation BRPAREN .)
    BOOLEAN         reduce using rule 258 (constructorBody -> BLPAREN explicitConstructorInvocation BRPAREN .)
    CHAR            reduce using rule 258 (constructorBody -> BLPAREN explicitConstructorInvocation BRPAREN .)
    BYTE            reduce using rule 258 (constructorBody -> BLPAREN explicitConstructorInvocation BRPAREN .)
    SHORT           reduce using rule 258 (constructorBody -> BLPAREN explicitConstructorInvocation BRPAREN .)
    INT             reduce using rule 258 (constructorBody -> BLPAREN explicitConstructorInvocation BRPAREN .)
    LONG            reduce using rule 258 (constructorBody -> BLPAREN explicitConstructorInvocation BRPAREN .)
    FLOAT           reduce using rule 258 (constructorBody -> BLPAREN explicitConstructorInvocation BRPAREN .)
    DOUBLE          reduce using rule 258 (constructorBody -> BLPAREN explicitConstructorInvocation BRPAREN .)
    BRPAREN         reduce using rule 258 (constructorBody -> BLPAREN explicitConstructorInvocation BRPAREN .)


state 730

    (264) explicitConstructorInvocation -> SUPER arguments . SEMI
    (551) superSuffix -> arguments .

  ! shift/reduce conflict for SEMI resolved as shift
    SEMI            shift and go to state 789
    DOT             reduce using rule 551 (superSuffix -> arguments .)
    OP_INC          reduce using rule 551 (superSuffix -> arguments .)
    OP_DEC          reduce using rule 551 (superSuffix -> arguments .)
    FLPAREN         reduce using rule 551 (superSuffix -> arguments .)
    MULT            reduce using rule 551 (superSuffix -> arguments .)
    SLASH           reduce using rule 551 (superSuffix -> arguments .)
    PERCENT         reduce using rule 551 (superSuffix -> arguments .)
    PLUS            reduce using rule 551 (superSuffix -> arguments .)
    DASH            reduce using rule 551 (superSuffix -> arguments .)
    OP_SHR          reduce using rule 551 (superSuffix -> arguments .)
    OP_SHRR         reduce using rule 551 (superSuffix -> arguments .)
    OP_SHL          reduce using rule 551 (superSuffix -> arguments .)
    OP_LE           reduce using rule 551 (superSuffix -> arguments .)
    OP_GE           reduce using rule 551 (superSuffix -> arguments .)
    LESS            reduce using rule 551 (superSuffix -> arguments .)
    MORE            reduce using rule 551 (superSuffix -> arguments .)
    INSTANCEOF      reduce using rule 551 (superSuffix -> arguments .)
    OP_EQ           reduce using rule 551 (superSuffix -> arguments .)
    OP_NE           reduce using rule 551 (superSuffix -> arguments .)
    AND             reduce using rule 551 (superSuffix -> arguments .)
    CARET           reduce using rule 551 (superSuffix -> arguments .)
    VERTICAL        reduce using rule 551 (superSuffix -> arguments .)
    OP_LAND         reduce using rule 551 (superSuffix -> arguments .)
    OP_LOR          reduce using rule 551 (superSuffix -> arguments .)
    QUES            reduce using rule 551 (superSuffix -> arguments .)
    EQUALS          reduce using rule 551 (superSuffix -> arguments .)
    ASS_ADD         reduce using rule 551 (superSuffix -> arguments .)
    ASS_SUB         reduce using rule 551 (superSuffix -> arguments .)
    ASS_MUL         reduce using rule 551 (superSuffix -> arguments .)
    ASS_DIV         reduce using rule 551 (superSuffix -> arguments .)
    ASS_AND         reduce using rule 551 (superSuffix -> arguments .)
    ASS_OR          reduce using rule 551 (superSuffix -> arguments .)
    ASS_XOR         reduce using rule 551 (superSuffix -> arguments .)
    ASS_MOD         reduce using rule 551 (superSuffix -> arguments .)
    ASS_SHL         reduce using rule 551 (superSuffix -> arguments .)
    ASS_SHRR        reduce using rule 551 (superSuffix -> arguments .)
    ASS_SHR         reduce using rule 551 (superSuffix -> arguments .)

  ! SEMI            [ reduce using rule 551 (superSuffix -> arguments .) ]


state 731

    (242) COMMA_qualifiedNames -> COMMA_qualifiedName .

    COMMA           reduce using rule 242 (COMMA_qualifiedNames -> COMMA_qualifiedName .)
    BLPAREN         reduce using rule 242 (COMMA_qualifiedNames -> COMMA_qualifiedName .)
    SEMI            reduce using rule 242 (COMMA_qualifiedNames -> COMMA_qualifiedName .)


state 732

    (241) COMMA_qualifiedName -> COMMA . qualifiedName
    (271) qualifiedName -> . Identifier DOT_Identifiers
    (272) qualifiedName -> . Identifier

    Identifier      shift and go to state 31

    qualifiedName                  shift and go to state 790

state 733

    (244) qualifiedNameList -> qualifiedName COMMA_qualifiedNames .
    (243) COMMA_qualifiedNames -> COMMA_qualifiedNames . COMMA_qualifiedName
    (241) COMMA_qualifiedName -> . COMMA qualifiedName

    BLPAREN         reduce using rule 244 (qualifiedNameList -> qualifiedName COMMA_qualifiedNames .)
    SEMI            reduce using rule 244 (qualifiedNameList -> qualifiedName COMMA_qualifiedNames .)
    COMMA           shift and go to state 732

    COMMA_qualifiedName            shift and go to state 791

state 734

    (253) formalParameterDeclsRest -> OP_ARRAY variableDeclaratorId .

    RPAREN          reduce using rule 253 (formalParameterDeclsRest -> OP_ARRAY variableDeclaratorId .)


state 735

    (252) formalParameterDeclsRest -> variableDeclaratorId formalParameterDeclsRestBody .

    RPAREN          reduce using rule 252 (formalParameterDeclsRest -> variableDeclaratorId formalParameterDeclsRestBody .)


state 736

    (250) formalParameterDeclsRestBody -> COMMA . formalParameterDecls
    (247) formalParameterDecls -> . variableModifiers type formalParameterDeclsRest
    (248) formalParameterDecls -> . type formalParameterDeclsRest
    (249) formalParameterDecls -> . empty
    (337) variableModifiers -> . variableModifier
    (338) variableModifiers -> . variableModifiers variableModifier
    (205) type -> . type_body
    (206) type -> . primitiveType arrays
    (207) type -> . primitiveType
    (562) empty -> .
    (229) variableModifier -> . FINAL
    (230) variableModifier -> . annotation
    (208) type_body -> . Identifier classOrInterfaceTypeBody arrays
    (209) type_body -> . Identifier classOrInterfaceTypeBody
    (210) type_body -> . Identifier arrays
    (211) type_body -> . Identifier
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (287) annotation -> . AT annotationName annotationBody

    RPAREN          reduce using rule 562 (empty -> .)
    FINAL           shift and go to state 589
    Identifier      shift and go to state 80
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    AT              shift and go to state 133

    variableModifiers              shift and go to state 592
    formalParameterDecls           shift and go to state 792
    type_body                      shift and go to state 77
    variableModifier               shift and go to state 487
    primitiveType                  shift and go to state 74
    type                           shift and go to state 590
    annotation                     shift and go to state 593
    empty                          shift and go to state 591

state 737

    (247) formalParameterDecls -> variableModifiers type formalParameterDeclsRest .

    RPAREN          reduce using rule 247 (formalParameterDecls -> variableModifiers type formalParameterDeclsRest .)


state 738

    (394) parExpression -> LPAREN expression RPAREN .

    BLPAREN         reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    ASSERT          reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    IF              reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    FOR             reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    DO              reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    TRY             reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    SWITCH          reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    SYNCHRONIZED    reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    RETURN          reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    THROW           reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    BREAK           reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    CONTINUE        reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    Identifier      reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    DASH            reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    OP_INC          reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    OP_DEC          reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    TILDE           reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    EXCLAMATION     reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    THIS            reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    SUPER           reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    NEW             reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    VOID            reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    CharacterLiteral reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    StringLiteral   reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    NULL            reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    BOOLEAN         reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    CHAR            reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    BYTE            reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    SHORT           reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    INT             reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    LONG            reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    FLOAT           reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    DOUBLE          reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    LONG_NUMBER     reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    LONG_HEX_NUMBER reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    NON_INTEGER_1   reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    NON_INTEGER_2   reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    NON_INTEGER_3   reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    NON_INTEGER_4   reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    TRUE            reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    FALSE           reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)


state 739

    (350) statement -> FOR LPAREN forControl RPAREN . statement
    (347) statement -> . block
    (348) statement -> . ASSERT expression expression_colon_or_empty SEMI
    (349) statement -> . IF parExpression statement else_statement
    (350) statement -> . FOR LPAREN forControl RPAREN statement
    (351) statement -> . WHILE parExpression statement
    (352) statement -> . DO statement WHILE parExpression SEMI
    (353) statement -> . TRY block catches FINALLY block
    (354) statement -> . TRY block catches
    (355) statement -> . TRY block FINALLY block
    (356) statement -> . SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN
    (357) statement -> . SYNCHRONIZED parExpression block
    (358) statement -> . RETURN expression_or_empty SEMI
    (359) statement -> . THROW expression SEMI
    (360) statement -> . BREAK Identifier_or_empty SEMI
    (361) statement -> . CONTINUE Identifier_or_empty SEMI
    (362) statement -> . SEMI
    (363) statement -> . statementExpression SEMI
    (364) statement -> . Identifier COLON statement
    (329) block -> . BLPAREN blockStatements BRPAREN
    (330) block -> . BLPAREN BRPAREN
    (400) statementExpression -> . expression
    (404) expression -> . conditionalExpression assignmentOperator_expression_empty
    (420) conditionalExpression -> . conditionalOrExpression conditionalExpressionStats
    (421) conditionalExpression -> . conditionalOrExpression
    (425) conditionalOrExpression -> . conditionalAndExpression O_conditionalAndExpressions
    (426) conditionalOrExpression -> . conditionalAndExpression
    (430) conditionalAndExpression -> . inclusiveOrExpression O_inclusiveOrExpressions
    (431) conditionalAndExpression -> . inclusiveOrExpression
    (435) inclusiveOrExpression -> . exclusiveOrExpression V_exclusiveOrExpression
    (436) inclusiveOrExpression -> . exclusiveOrExpression
    (440) exclusiveOrExpression -> . andExpression CARET_andExpressions
    (441) exclusiveOrExpression -> . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    ASSERT          shift and go to state 507
    IF              shift and go to state 513
    FOR             shift and go to state 492
    WHILE           shift and go to state 500
    DO              shift and go to state 506
    TRY             shift and go to state 494
    SWITCH          shift and go to state 501
    SYNCHRONIZED    shift and go to state 490
    RETURN          shift and go to state 489
    THROW           shift and go to state 514
    BREAK           shift and go to state 505
    CONTINUE        shift and go to state 496
    SEMI            shift and go to state 508
    Identifier      shift and go to state 611
    BLPAREN         shift and go to state 335
    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    equalityExpression             shift and go to state 108
    inclusiveOrExpression          shift and go to state 99
    multiplicativeExpression       shift and go to state 128
    exclusiveOrExpression          shift and go to state 110
    conditionalAndExpression       shift and go to state 89
    FloatingPointLiteral           shift and go to state 119
    shiftExpression                shift and go to state 130
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    statement                      shift and go to state 793
    additiveExpression             shift and go to state 102
    instanceOfExpression           shift and go to state 96
    conditionalExpression          shift and go to state 266
    unaryExpression                shift and go to state 131
    integerLiteral                 shift and go to state 98
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    relationalExpression           shift and go to state 95
    conditionalOrExpression        shift and go to state 109
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    primitiveType                  shift and go to state 122
    statementExpression            shift and go to state 509
    andExpression                  shift and go to state 106
    expression                     shift and go to state 497
    block                          shift and go to state 498

state 740

    (388) forControl -> forInit_or_empty SEMI . expression_or_empty SEMI forUpdate_empty
    (343) expression_or_empty -> . expression
    (344) expression_or_empty -> .
    (404) expression -> . conditionalExpression assignmentOperator_expression_empty
    (420) conditionalExpression -> . conditionalOrExpression conditionalExpressionStats
    (421) conditionalExpression -> . conditionalOrExpression
    (425) conditionalOrExpression -> . conditionalAndExpression O_conditionalAndExpressions
    (426) conditionalOrExpression -> . conditionalAndExpression
    (430) conditionalAndExpression -> . inclusiveOrExpression O_inclusiveOrExpressions
    (431) conditionalAndExpression -> . inclusiveOrExpression
    (435) inclusiveOrExpression -> . exclusiveOrExpression V_exclusiveOrExpression
    (436) inclusiveOrExpression -> . exclusiveOrExpression
    (440) exclusiveOrExpression -> . andExpression CARET_andExpressions
    (441) exclusiveOrExpression -> . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    SEMI            reduce using rule 344 (expression_or_empty -> .)
    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    equalityExpression             shift and go to state 108
    expression_or_empty            shift and go to state 794
    inclusiveOrExpression          shift and go to state 99
    multiplicativeExpression       shift and go to state 128
    exclusiveOrExpression          shift and go to state 110
    conditionalAndExpression       shift and go to state 89
    shiftExpression                shift and go to state 130
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    integerLiteral                 shift and go to state 98
    additiveExpression             shift and go to state 102
    instanceOfExpression           shift and go to state 96
    conditionalExpression          shift and go to state 266
    unaryExpression                shift and go to state 131
    FloatingPointLiteral           shift and go to state 119
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    relationalExpression           shift and go to state 95
    conditionalOrExpression        shift and go to state 109
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    primitiveType                  shift and go to state 122
    andExpression                  shift and go to state 106
    expression                     shift and go to state 595

state 741

    (392) enhancedForControl -> type Identifier . COLON expression
    (178) variableDeclaratorId -> Identifier . arrays
    (179) variableDeclaratorId -> Identifier .
    (138) arrays -> . arrays array
    (139) arrays -> . array
    (137) array -> . FLPAREN FRPAREN

    COLON           shift and go to state 795
    EQUALS          reduce using rule 179 (variableDeclaratorId -> Identifier .)
    COMMA           reduce using rule 179 (variableDeclaratorId -> Identifier .)
    SEMI            reduce using rule 179 (variableDeclaratorId -> Identifier .)
    FLPAREN         shift and go to state 153

    arrays                         shift and go to state 553
    array                          shift and go to state 154

state 742

    (391) enhancedForControl -> variableModifiers type . Identifier COLON expression
    (335) localVariableDeclaration -> variableModifiers type . variableDeclarators
    (166) variableDeclarators -> . variableDeclarator COMMA_VARS
    (167) variableDeclarators -> . variableDeclarator
    (169) variableDeclarator -> . variableDeclaratorId EQUALS_variableInitializer
    (170) variableDeclarator -> . variableDeclaratorId
    (178) variableDeclaratorId -> . Identifier arrays
    (179) variableDeclaratorId -> . Identifier

    Identifier      shift and go to state 796

    variableDeclarators            shift and go to state 678
    variableDeclaratorId           shift and go to state 441
    variableDeclarator             shift and go to state 444

state 743

    (353) statement -> TRY block catches FINALLY . block
    (329) block -> . BLPAREN blockStatements BRPAREN
    (330) block -> . BLPAREN BRPAREN

    BLPAREN         shift and go to state 335

    block                          shift and go to state 797

state 744

    (365) catchClauses -> catchClause .

    CATCH           reduce using rule 365 (catchClauses -> catchClause .)
    FINALLY         reduce using rule 365 (catchClauses -> catchClause .)
    BRPAREN         reduce using rule 365 (catchClauses -> catchClause .)
    ASSERT          reduce using rule 365 (catchClauses -> catchClause .)
    IF              reduce using rule 365 (catchClauses -> catchClause .)
    FOR             reduce using rule 365 (catchClauses -> catchClause .)
    WHILE           reduce using rule 365 (catchClauses -> catchClause .)
    DO              reduce using rule 365 (catchClauses -> catchClause .)
    TRY             reduce using rule 365 (catchClauses -> catchClause .)
    SWITCH          reduce using rule 365 (catchClauses -> catchClause .)
    SYNCHRONIZED    reduce using rule 365 (catchClauses -> catchClause .)
    RETURN          reduce using rule 365 (catchClauses -> catchClause .)
    THROW           reduce using rule 365 (catchClauses -> catchClause .)
    BREAK           reduce using rule 365 (catchClauses -> catchClause .)
    CONTINUE        reduce using rule 365 (catchClauses -> catchClause .)
    SEMI            reduce using rule 365 (catchClauses -> catchClause .)
    Identifier      reduce using rule 365 (catchClauses -> catchClause .)
    BLPAREN         reduce using rule 365 (catchClauses -> catchClause .)
    PUBLIC          reduce using rule 365 (catchClauses -> catchClause .)
    PROTECTED       reduce using rule 365 (catchClauses -> catchClause .)
    PRIVATE         reduce using rule 365 (catchClauses -> catchClause .)
    ABSTRACT        reduce using rule 365 (catchClauses -> catchClause .)
    STATIC          reduce using rule 365 (catchClauses -> catchClause .)
    FINAL           reduce using rule 365 (catchClauses -> catchClause .)
    STRICTFP        reduce using rule 365 (catchClauses -> catchClause .)
    CLASS           reduce using rule 365 (catchClauses -> catchClause .)
    ENUM            reduce using rule 365 (catchClauses -> catchClause .)
    INTERFACE       reduce using rule 365 (catchClauses -> catchClause .)
    AT              reduce using rule 365 (catchClauses -> catchClause .)
    BOOLEAN         reduce using rule 365 (catchClauses -> catchClause .)
    CHAR            reduce using rule 365 (catchClauses -> catchClause .)
    BYTE            reduce using rule 365 (catchClauses -> catchClause .)
    SHORT           reduce using rule 365 (catchClauses -> catchClause .)
    INT             reduce using rule 365 (catchClauses -> catchClause .)
    LONG            reduce using rule 365 (catchClauses -> catchClause .)
    FLOAT           reduce using rule 365 (catchClauses -> catchClause .)
    DOUBLE          reduce using rule 365 (catchClauses -> catchClause .)
    PLUS            reduce using rule 365 (catchClauses -> catchClause .)
    DASH            reduce using rule 365 (catchClauses -> catchClause .)
    OP_INC          reduce using rule 365 (catchClauses -> catchClause .)
    OP_DEC          reduce using rule 365 (catchClauses -> catchClause .)
    TILDE           reduce using rule 365 (catchClauses -> catchClause .)
    EXCLAMATION     reduce using rule 365 (catchClauses -> catchClause .)
    LPAREN          reduce using rule 365 (catchClauses -> catchClause .)
    THIS            reduce using rule 365 (catchClauses -> catchClause .)
    SUPER           reduce using rule 365 (catchClauses -> catchClause .)
    NEW             reduce using rule 365 (catchClauses -> catchClause .)
    VOID            reduce using rule 365 (catchClauses -> catchClause .)
    CharacterLiteral reduce using rule 365 (catchClauses -> catchClause .)
    StringLiteral   reduce using rule 365 (catchClauses -> catchClause .)
    NULL            reduce using rule 365 (catchClauses -> catchClause .)
    LONG_NUMBER     reduce using rule 365 (catchClauses -> catchClause .)
    LONG_HEX_NUMBER reduce using rule 365 (catchClauses -> catchClause .)
    NON_INTEGER_1   reduce using rule 365 (catchClauses -> catchClause .)
    NON_INTEGER_2   reduce using rule 365 (catchClauses -> catchClause .)
    NON_INTEGER_3   reduce using rule 365 (catchClauses -> catchClause .)
    NON_INTEGER_4   reduce using rule 365 (catchClauses -> catchClause .)
    TRUE            reduce using rule 365 (catchClauses -> catchClause .)
    FALSE           reduce using rule 365 (catchClauses -> catchClause .)
    ELSE            reduce using rule 365 (catchClauses -> catchClause .)
    CASE            reduce using rule 365 (catchClauses -> catchClause .)
    DEFAULT         reduce using rule 365 (catchClauses -> catchClause .)


state 745

    (367) catches -> catchClause catchClauses .
    (366) catchClauses -> catchClauses . catchClause
    (369) catchClause -> . CATCH LPAREN formalParameter RPAREN block

    FINALLY         reduce using rule 367 (catches -> catchClause catchClauses .)
    BRPAREN         reduce using rule 367 (catches -> catchClause catchClauses .)
    ASSERT          reduce using rule 367 (catches -> catchClause catchClauses .)
    IF              reduce using rule 367 (catches -> catchClause catchClauses .)
    FOR             reduce using rule 367 (catches -> catchClause catchClauses .)
    WHILE           reduce using rule 367 (catches -> catchClause catchClauses .)
    DO              reduce using rule 367 (catches -> catchClause catchClauses .)
    TRY             reduce using rule 367 (catches -> catchClause catchClauses .)
    SWITCH          reduce using rule 367 (catches -> catchClause catchClauses .)
    SYNCHRONIZED    reduce using rule 367 (catches -> catchClause catchClauses .)
    RETURN          reduce using rule 367 (catches -> catchClause catchClauses .)
    THROW           reduce using rule 367 (catches -> catchClause catchClauses .)
    BREAK           reduce using rule 367 (catches -> catchClause catchClauses .)
    CONTINUE        reduce using rule 367 (catches -> catchClause catchClauses .)
    SEMI            reduce using rule 367 (catches -> catchClause catchClauses .)
    Identifier      reduce using rule 367 (catches -> catchClause catchClauses .)
    BLPAREN         reduce using rule 367 (catches -> catchClause catchClauses .)
    PUBLIC          reduce using rule 367 (catches -> catchClause catchClauses .)
    PROTECTED       reduce using rule 367 (catches -> catchClause catchClauses .)
    PRIVATE         reduce using rule 367 (catches -> catchClause catchClauses .)
    ABSTRACT        reduce using rule 367 (catches -> catchClause catchClauses .)
    STATIC          reduce using rule 367 (catches -> catchClause catchClauses .)
    FINAL           reduce using rule 367 (catches -> catchClause catchClauses .)
    STRICTFP        reduce using rule 367 (catches -> catchClause catchClauses .)
    CLASS           reduce using rule 367 (catches -> catchClause catchClauses .)
    ENUM            reduce using rule 367 (catches -> catchClause catchClauses .)
    INTERFACE       reduce using rule 367 (catches -> catchClause catchClauses .)
    AT              reduce using rule 367 (catches -> catchClause catchClauses .)
    BOOLEAN         reduce using rule 367 (catches -> catchClause catchClauses .)
    CHAR            reduce using rule 367 (catches -> catchClause catchClauses .)
    BYTE            reduce using rule 367 (catches -> catchClause catchClauses .)
    SHORT           reduce using rule 367 (catches -> catchClause catchClauses .)
    INT             reduce using rule 367 (catches -> catchClause catchClauses .)
    LONG            reduce using rule 367 (catches -> catchClause catchClauses .)
    FLOAT           reduce using rule 367 (catches -> catchClause catchClauses .)
    DOUBLE          reduce using rule 367 (catches -> catchClause catchClauses .)
    PLUS            reduce using rule 367 (catches -> catchClause catchClauses .)
    DASH            reduce using rule 367 (catches -> catchClause catchClauses .)
    OP_INC          reduce using rule 367 (catches -> catchClause catchClauses .)
    OP_DEC          reduce using rule 367 (catches -> catchClause catchClauses .)
    TILDE           reduce using rule 367 (catches -> catchClause catchClauses .)
    EXCLAMATION     reduce using rule 367 (catches -> catchClause catchClauses .)
    LPAREN          reduce using rule 367 (catches -> catchClause catchClauses .)
    THIS            reduce using rule 367 (catches -> catchClause catchClauses .)
    SUPER           reduce using rule 367 (catches -> catchClause catchClauses .)
    NEW             reduce using rule 367 (catches -> catchClause catchClauses .)
    VOID            reduce using rule 367 (catches -> catchClause catchClauses .)
    CharacterLiteral reduce using rule 367 (catches -> catchClause catchClauses .)
    StringLiteral   reduce using rule 367 (catches -> catchClause catchClauses .)
    NULL            reduce using rule 367 (catches -> catchClause catchClauses .)
    LONG_NUMBER     reduce using rule 367 (catches -> catchClause catchClauses .)
    LONG_HEX_NUMBER reduce using rule 367 (catches -> catchClause catchClauses .)
    NON_INTEGER_1   reduce using rule 367 (catches -> catchClause catchClauses .)
    NON_INTEGER_2   reduce using rule 367 (catches -> catchClause catchClauses .)
    NON_INTEGER_3   reduce using rule 367 (catches -> catchClause catchClauses .)
    NON_INTEGER_4   reduce using rule 367 (catches -> catchClause catchClauses .)
    TRUE            reduce using rule 367 (catches -> catchClause catchClauses .)
    FALSE           reduce using rule 367 (catches -> catchClause catchClauses .)
    ELSE            reduce using rule 367 (catches -> catchClause catchClauses .)
    CASE            reduce using rule 367 (catches -> catchClause catchClauses .)
    DEFAULT         reduce using rule 367 (catches -> catchClause catchClauses .)
    CATCH           shift and go to state 682

    catchClause                    shift and go to state 798

state 746

    (355) statement -> TRY block FINALLY block .

    BRPAREN         reduce using rule 355 (statement -> TRY block FINALLY block .)
    ASSERT          reduce using rule 355 (statement -> TRY block FINALLY block .)
    IF              reduce using rule 355 (statement -> TRY block FINALLY block .)
    FOR             reduce using rule 355 (statement -> TRY block FINALLY block .)
    WHILE           reduce using rule 355 (statement -> TRY block FINALLY block .)
    DO              reduce using rule 355 (statement -> TRY block FINALLY block .)
    TRY             reduce using rule 355 (statement -> TRY block FINALLY block .)
    SWITCH          reduce using rule 355 (statement -> TRY block FINALLY block .)
    SYNCHRONIZED    reduce using rule 355 (statement -> TRY block FINALLY block .)
    RETURN          reduce using rule 355 (statement -> TRY block FINALLY block .)
    THROW           reduce using rule 355 (statement -> TRY block FINALLY block .)
    BREAK           reduce using rule 355 (statement -> TRY block FINALLY block .)
    CONTINUE        reduce using rule 355 (statement -> TRY block FINALLY block .)
    SEMI            reduce using rule 355 (statement -> TRY block FINALLY block .)
    Identifier      reduce using rule 355 (statement -> TRY block FINALLY block .)
    BLPAREN         reduce using rule 355 (statement -> TRY block FINALLY block .)
    PUBLIC          reduce using rule 355 (statement -> TRY block FINALLY block .)
    PROTECTED       reduce using rule 355 (statement -> TRY block FINALLY block .)
    PRIVATE         reduce using rule 355 (statement -> TRY block FINALLY block .)
    ABSTRACT        reduce using rule 355 (statement -> TRY block FINALLY block .)
    STATIC          reduce using rule 355 (statement -> TRY block FINALLY block .)
    FINAL           reduce using rule 355 (statement -> TRY block FINALLY block .)
    STRICTFP        reduce using rule 355 (statement -> TRY block FINALLY block .)
    CLASS           reduce using rule 355 (statement -> TRY block FINALLY block .)
    ENUM            reduce using rule 355 (statement -> TRY block FINALLY block .)
    INTERFACE       reduce using rule 355 (statement -> TRY block FINALLY block .)
    AT              reduce using rule 355 (statement -> TRY block FINALLY block .)
    BOOLEAN         reduce using rule 355 (statement -> TRY block FINALLY block .)
    CHAR            reduce using rule 355 (statement -> TRY block FINALLY block .)
    BYTE            reduce using rule 355 (statement -> TRY block FINALLY block .)
    SHORT           reduce using rule 355 (statement -> TRY block FINALLY block .)
    INT             reduce using rule 355 (statement -> TRY block FINALLY block .)
    LONG            reduce using rule 355 (statement -> TRY block FINALLY block .)
    FLOAT           reduce using rule 355 (statement -> TRY block FINALLY block .)
    DOUBLE          reduce using rule 355 (statement -> TRY block FINALLY block .)
    PLUS            reduce using rule 355 (statement -> TRY block FINALLY block .)
    DASH            reduce using rule 355 (statement -> TRY block FINALLY block .)
    OP_INC          reduce using rule 355 (statement -> TRY block FINALLY block .)
    OP_DEC          reduce using rule 355 (statement -> TRY block FINALLY block .)
    TILDE           reduce using rule 355 (statement -> TRY block FINALLY block .)
    EXCLAMATION     reduce using rule 355 (statement -> TRY block FINALLY block .)
    LPAREN          reduce using rule 355 (statement -> TRY block FINALLY block .)
    THIS            reduce using rule 355 (statement -> TRY block FINALLY block .)
    SUPER           reduce using rule 355 (statement -> TRY block FINALLY block .)
    NEW             reduce using rule 355 (statement -> TRY block FINALLY block .)
    VOID            reduce using rule 355 (statement -> TRY block FINALLY block .)
    CharacterLiteral reduce using rule 355 (statement -> TRY block FINALLY block .)
    StringLiteral   reduce using rule 355 (statement -> TRY block FINALLY block .)
    NULL            reduce using rule 355 (statement -> TRY block FINALLY block .)
    LONG_NUMBER     reduce using rule 355 (statement -> TRY block FINALLY block .)
    LONG_HEX_NUMBER reduce using rule 355 (statement -> TRY block FINALLY block .)
    NON_INTEGER_1   reduce using rule 355 (statement -> TRY block FINALLY block .)
    NON_INTEGER_2   reduce using rule 355 (statement -> TRY block FINALLY block .)
    NON_INTEGER_3   reduce using rule 355 (statement -> TRY block FINALLY block .)
    NON_INTEGER_4   reduce using rule 355 (statement -> TRY block FINALLY block .)
    TRUE            reduce using rule 355 (statement -> TRY block FINALLY block .)
    FALSE           reduce using rule 355 (statement -> TRY block FINALLY block .)
    ELSE            reduce using rule 355 (statement -> TRY block FINALLY block .)
    CASE            reduce using rule 355 (statement -> TRY block FINALLY block .)
    DEFAULT         reduce using rule 355 (statement -> TRY block FINALLY block .)


state 747

    (369) catchClause -> CATCH LPAREN . formalParameter RPAREN block
    (370) formalParameter -> . variableModifiers type variableDeclaratorId
    (371) formalParameter -> . type variableDeclaratorId
    (337) variableModifiers -> . variableModifier
    (338) variableModifiers -> . variableModifiers variableModifier
    (205) type -> . type_body
    (206) type -> . primitiveType arrays
    (207) type -> . primitiveType
    (229) variableModifier -> . FINAL
    (230) variableModifier -> . annotation
    (208) type_body -> . Identifier classOrInterfaceTypeBody arrays
    (209) type_body -> . Identifier classOrInterfaceTypeBody
    (210) type_body -> . Identifier arrays
    (211) type_body -> . Identifier
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (287) annotation -> . AT annotationName annotationBody

    FINAL           shift and go to state 589
    Identifier      shift and go to state 80
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    AT              shift and go to state 133

    formalParameter                shift and go to state 800
    variableModifiers              shift and go to state 801
    type_body                      shift and go to state 77
    variableModifier               shift and go to state 487
    primitiveType                  shift and go to state 74
    type                           shift and go to state 799
    annotation                     shift and go to state 593

state 748

    (356) statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups . BRPAREN

    BRPAREN         shift and go to state 802


state 749

    (380) switchLabel -> CASE . constantExpression COLON
    (381) switchLabel -> CASE . enumConstantName COLON
    (401) constantExpression -> . expression
    (203) enumConstantName -> . Identifier
    (404) expression -> . conditionalExpression assignmentOperator_expression_empty
    (420) conditionalExpression -> . conditionalOrExpression conditionalExpressionStats
    (421) conditionalExpression -> . conditionalOrExpression
    (425) conditionalOrExpression -> . conditionalAndExpression O_conditionalAndExpressions
    (426) conditionalOrExpression -> . conditionalAndExpression
    (430) conditionalAndExpression -> . inclusiveOrExpression O_inclusiveOrExpressions
    (431) conditionalAndExpression -> . inclusiveOrExpression
    (435) inclusiveOrExpression -> . exclusiveOrExpression V_exclusiveOrExpression
    (436) inclusiveOrExpression -> . exclusiveOrExpression
    (440) exclusiveOrExpression -> . andExpression CARET_andExpressions
    (441) exclusiveOrExpression -> . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    Identifier      shift and go to state 804
    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    equalityExpression             shift and go to state 108
    inclusiveOrExpression          shift and go to state 99
    multiplicativeExpression       shift and go to state 128
    enumConstantName               shift and go to state 803
    exclusiveOrExpression          shift and go to state 110
    conditionalAndExpression       shift and go to state 89
    shiftExpression                shift and go to state 130
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    integerLiteral                 shift and go to state 98
    additiveExpression             shift and go to state 102
    instanceOfExpression           shift and go to state 96
    conditionalExpression          shift and go to state 266
    unaryExpression                shift and go to state 131
    FloatingPointLiteral           shift and go to state 119
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    relationalExpression           shift and go to state 95
    conditionalOrExpression        shift and go to state 109
    constantExpression             shift and go to state 805
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    primitiveType                  shift and go to state 122
    andExpression                  shift and go to state 106
    expression                     shift and go to state 806

state 750

    (376) switchLabels -> switchLabel .

    CASE            reduce using rule 376 (switchLabels -> switchLabel .)
    DEFAULT         reduce using rule 376 (switchLabels -> switchLabel .)
    ASSERT          reduce using rule 376 (switchLabels -> switchLabel .)
    IF              reduce using rule 376 (switchLabels -> switchLabel .)
    FOR             reduce using rule 376 (switchLabels -> switchLabel .)
    WHILE           reduce using rule 376 (switchLabels -> switchLabel .)
    DO              reduce using rule 376 (switchLabels -> switchLabel .)
    TRY             reduce using rule 376 (switchLabels -> switchLabel .)
    SWITCH          reduce using rule 376 (switchLabels -> switchLabel .)
    SYNCHRONIZED    reduce using rule 376 (switchLabels -> switchLabel .)
    RETURN          reduce using rule 376 (switchLabels -> switchLabel .)
    THROW           reduce using rule 376 (switchLabels -> switchLabel .)
    BREAK           reduce using rule 376 (switchLabels -> switchLabel .)
    CONTINUE        reduce using rule 376 (switchLabels -> switchLabel .)
    SEMI            reduce using rule 376 (switchLabels -> switchLabel .)
    Identifier      reduce using rule 376 (switchLabels -> switchLabel .)
    BLPAREN         reduce using rule 376 (switchLabels -> switchLabel .)
    PUBLIC          reduce using rule 376 (switchLabels -> switchLabel .)
    PROTECTED       reduce using rule 376 (switchLabels -> switchLabel .)
    PRIVATE         reduce using rule 376 (switchLabels -> switchLabel .)
    ABSTRACT        reduce using rule 376 (switchLabels -> switchLabel .)
    STATIC          reduce using rule 376 (switchLabels -> switchLabel .)
    FINAL           reduce using rule 376 (switchLabels -> switchLabel .)
    STRICTFP        reduce using rule 376 (switchLabels -> switchLabel .)
    CLASS           reduce using rule 376 (switchLabels -> switchLabel .)
    ENUM            reduce using rule 376 (switchLabels -> switchLabel .)
    INTERFACE       reduce using rule 376 (switchLabels -> switchLabel .)
    AT              reduce using rule 376 (switchLabels -> switchLabel .)
    BOOLEAN         reduce using rule 376 (switchLabels -> switchLabel .)
    CHAR            reduce using rule 376 (switchLabels -> switchLabel .)
    BYTE            reduce using rule 376 (switchLabels -> switchLabel .)
    SHORT           reduce using rule 376 (switchLabels -> switchLabel .)
    INT             reduce using rule 376 (switchLabels -> switchLabel .)
    LONG            reduce using rule 376 (switchLabels -> switchLabel .)
    FLOAT           reduce using rule 376 (switchLabels -> switchLabel .)
    DOUBLE          reduce using rule 376 (switchLabels -> switchLabel .)
    PLUS            reduce using rule 376 (switchLabels -> switchLabel .)
    DASH            reduce using rule 376 (switchLabels -> switchLabel .)
    OP_INC          reduce using rule 376 (switchLabels -> switchLabel .)
    OP_DEC          reduce using rule 376 (switchLabels -> switchLabel .)
    TILDE           reduce using rule 376 (switchLabels -> switchLabel .)
    EXCLAMATION     reduce using rule 376 (switchLabels -> switchLabel .)
    LPAREN          reduce using rule 376 (switchLabels -> switchLabel .)
    THIS            reduce using rule 376 (switchLabels -> switchLabel .)
    SUPER           reduce using rule 376 (switchLabels -> switchLabel .)
    NEW             reduce using rule 376 (switchLabels -> switchLabel .)
    VOID            reduce using rule 376 (switchLabels -> switchLabel .)
    CharacterLiteral reduce using rule 376 (switchLabels -> switchLabel .)
    StringLiteral   reduce using rule 376 (switchLabels -> switchLabel .)
    NULL            reduce using rule 376 (switchLabels -> switchLabel .)
    LONG_NUMBER     reduce using rule 376 (switchLabels -> switchLabel .)
    LONG_HEX_NUMBER reduce using rule 376 (switchLabels -> switchLabel .)
    NON_INTEGER_1   reduce using rule 376 (switchLabels -> switchLabel .)
    NON_INTEGER_2   reduce using rule 376 (switchLabels -> switchLabel .)
    NON_INTEGER_3   reduce using rule 376 (switchLabels -> switchLabel .)
    NON_INTEGER_4   reduce using rule 376 (switchLabels -> switchLabel .)
    TRUE            reduce using rule 376 (switchLabels -> switchLabel .)
    FALSE           reduce using rule 376 (switchLabels -> switchLabel .)
    BRPAREN         reduce using rule 376 (switchLabels -> switchLabel .)


state 751

    (374) switchBlockStatementGroups -> switchBlockStatementGroupStats .
    (373) switchBlockStatementGroupStats -> switchBlockStatementGroupStats . switchBlockStatementGroup
    (378) switchBlockStatementGroup -> . switchLabels blockStatements
    (379) switchBlockStatementGroup -> . switchLabels
    (376) switchLabels -> . switchLabel
    (377) switchLabels -> . switchLabels switchLabel
    (380) switchLabel -> . CASE constantExpression COLON
    (381) switchLabel -> . CASE enumConstantName COLON
    (382) switchLabel -> . DEFAULT COLON

    BRPAREN         reduce using rule 374 (switchBlockStatementGroups -> switchBlockStatementGroupStats .)
    CASE            shift and go to state 749
    DEFAULT         shift and go to state 752

    switchLabel                    shift and go to state 750
    switchLabels                   shift and go to state 753
    switchBlockStatementGroup      shift and go to state 807

state 752

    (382) switchLabel -> DEFAULT . COLON

    COLON           shift and go to state 808


state 753

    (378) switchBlockStatementGroup -> switchLabels . blockStatements
    (379) switchBlockStatementGroup -> switchLabels .
    (377) switchLabels -> switchLabels . switchLabel
    (255) blockStatements -> . blockStatement
    (256) blockStatements -> . blockStatements blockStatement
    (380) switchLabel -> . CASE constantExpression COLON
    (381) switchLabel -> . CASE enumConstantName COLON
    (382) switchLabel -> . DEFAULT COLON
    (331) blockStatement -> . localVariableDeclarationStatement
    (332) blockStatement -> . classOrInterfaceDeclaration
    (333) blockStatement -> . statement
    (334) localVariableDeclarationStatement -> . localVariableDeclaration SEMI
    (26) classOrInterfaceDeclaration -> . classOrInterfaceModifiers classDeclaration
    (27) classOrInterfaceDeclaration -> . classOrInterfaceModifiers interfaceDeclaration
    (28) classOrInterfaceDeclaration -> . classDeclaration
    (29) classOrInterfaceDeclaration -> . interfaceDeclaration
    (347) statement -> . block
    (348) statement -> . ASSERT expression expression_colon_or_empty SEMI
    (349) statement -> . IF parExpression statement else_statement
    (350) statement -> . FOR LPAREN forControl RPAREN statement
    (351) statement -> . WHILE parExpression statement
    (352) statement -> . DO statement WHILE parExpression SEMI
    (353) statement -> . TRY block catches FINALLY block
    (354) statement -> . TRY block catches
    (355) statement -> . TRY block FINALLY block
    (356) statement -> . SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN
    (357) statement -> . SYNCHRONIZED parExpression block
    (358) statement -> . RETURN expression_or_empty SEMI
    (359) statement -> . THROW expression SEMI
    (360) statement -> . BREAK Identifier_or_empty SEMI
    (361) statement -> . CONTINUE Identifier_or_empty SEMI
    (362) statement -> . SEMI
    (363) statement -> . statementExpression SEMI
    (364) statement -> . Identifier COLON statement
    (335) localVariableDeclaration -> . variableModifiers type variableDeclarators
    (336) localVariableDeclaration -> . type variableDeclarators
    (30) classOrInterfaceModifiers -> . classOrInterfaceModifier
    (31) classOrInterfaceModifiers -> . classOrInterfaceModifiers classOrInterfaceModifier
    (42) classDeclaration -> . normalClassDeclaration
    (43) classDeclaration -> . enumDeclaration
    (89) interfaceDeclaration -> . normalInterfaceDeclaration
    (90) interfaceDeclaration -> . annotationTypeDeclaration
    (329) block -> . BLPAREN blockStatements BRPAREN
    (330) block -> . BLPAREN BRPAREN
    (400) statementExpression -> . expression
    (337) variableModifiers -> . variableModifier
    (338) variableModifiers -> . variableModifiers variableModifier
    (205) type -> . type_body
    (206) type -> . primitiveType arrays
    (207) type -> . primitiveType
    (32) classOrInterfaceModifier -> . annotation
    (33) classOrInterfaceModifier -> . PUBLIC
    (34) classOrInterfaceModifier -> . PROTECTED
    (35) classOrInterfaceModifier -> . PRIVATE
    (36) classOrInterfaceModifier -> . ABSTRACT
    (37) classOrInterfaceModifier -> . STATIC
    (38) classOrInterfaceModifier -> . FINAL
    (39) classOrInterfaceModifier -> . STRICTFP
    (48) normalClassDeclaration -> . CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody
    (63) enumDeclaration -> . ENUM Identifier IMPLEMENTS_typeList enumBody
    (95) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody
    (308) annotationTypeDeclaration -> . AT INTERFACE Identifier annotationTypeBody
    (404) expression -> . conditionalExpression assignmentOperator_expression_empty
    (229) variableModifier -> . FINAL
    (230) variableModifier -> . annotation
    (208) type_body -> . Identifier classOrInterfaceTypeBody arrays
    (209) type_body -> . Identifier classOrInterfaceTypeBody
    (210) type_body -> . Identifier arrays
    (211) type_body -> . Identifier
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (287) annotation -> . AT annotationName annotationBody
    (420) conditionalExpression -> . conditionalOrExpression conditionalExpressionStats
    (421) conditionalExpression -> . conditionalOrExpression
    (425) conditionalOrExpression -> . conditionalAndExpression O_conditionalAndExpressions
    (426) conditionalOrExpression -> . conditionalAndExpression
    (430) conditionalAndExpression -> . inclusiveOrExpression O_inclusiveOrExpressions
    (431) conditionalAndExpression -> . inclusiveOrExpression
    (435) inclusiveOrExpression -> . exclusiveOrExpression V_exclusiveOrExpression
    (436) inclusiveOrExpression -> . exclusiveOrExpression
    (440) exclusiveOrExpression -> . andExpression CARET_andExpressions
    (441) exclusiveOrExpression -> . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
    BRPAREN         reduce using rule 379 (switchBlockStatementGroup -> switchLabels .)
    CASE            shift and go to state 749
    DEFAULT         shift and go to state 752
    ASSERT          shift and go to state 507
    IF              shift and go to state 513
    FOR             shift and go to state 492
    WHILE           shift and go to state 500
    DO              shift and go to state 506
    TRY             shift and go to state 494
    SWITCH          shift and go to state 501
    SYNCHRONIZED    shift and go to state 490
    RETURN          shift and go to state 489
    THROW           shift and go to state 514
    BREAK           shift and go to state 505
    CONTINUE        shift and go to state 496
    SEMI            shift and go to state 508
    Identifier      shift and go to state 495
    BLPAREN         shift and go to state 335
    PUBLIC          shift and go to state 24
    PROTECTED       shift and go to state 3
    PRIVATE         shift and go to state 9
    ABSTRACT        shift and go to state 2
    STATIC          shift and go to state 4
    FINAL           shift and go to state 491
    STRICTFP        shift and go to state 10
    CLASS           shift and go to state 12
    ENUM            shift and go to state 15
    INTERFACE       shift and go to state 23
    AT              shift and go to state 18
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

  ! CASE            [ reduce using rule 379 (switchBlockStatementGroup -> switchLabels .) ]
  ! DEFAULT         [ reduce using rule 379 (switchBlockStatementGroup -> switchLabels .) ]

    conditionalAndExpression       shift and go to state 89
    blockStatement                 shift and go to state 485
    booleanLiteral                 shift and go to state 92
    classOrInterfaceDeclaration    shift and go to state 486
    relationalExpression           shift and go to state 95
    variableModifier               shift and go to state 487
    localVariableDeclarationStatement shift and go to state 488
    instanceOfExpression           shift and go to state 96
    type_body                      shift and go to state 77
    inclusiveOrExpression          shift and go to state 99
    additiveExpression             shift and go to state 102
    classDeclaration               shift and go to state 17
    unaryExpressionNotPlusMinus    shift and go to state 105
    annotationTypeDeclaration      shift and go to state 21
    classOrInterfaceModifiers      shift and go to state 22
    andExpression                  shift and go to state 106
    expression                     shift and go to state 497
    block                          shift and go to state 498
    equalityExpression             shift and go to state 108
    localVariableDeclaration       shift and go to state 499
    exclusiveOrExpression          shift and go to state 110
    primary                        shift and go to state 111
    literal                        shift and go to state 116
    statement                      shift and go to state 502
    type                           shift and go to state 503
    conditionalExpression          shift and go to state 266
    enumDeclaration                shift and go to state 13
    FloatingPointLiteral           shift and go to state 119
    switchLabel                    shift and go to state 809
    primitiveType                  shift and go to state 504
    variableModifiers              shift and go to state 493
    multiplicativeExpression       shift and go to state 128
    normalInterfaceDeclaration     shift and go to state 5
    shiftExpression                shift and go to state 130
    normalClassDeclaration         shift and go to state 7
    statementExpression            shift and go to state 509
    interfaceDeclaration           shift and go to state 1
    integerLiteral                 shift and go to state 98
    blockStatements                shift and go to state 810
    unaryExpression                shift and go to state 131
    parExpression                  shift and go to state 132
    conditionalOrExpression        shift and go to state 109
    annotation                     shift and go to state 512
    castExpression                 shift and go to state 137
    classOrInterfaceModifier       shift and go to state 20

state 754

    (372) switchBlockStatementGroupStats -> switchBlockStatementGroup .

    CASE            reduce using rule 372 (switchBlockStatementGroupStats -> switchBlockStatementGroup .)
    DEFAULT         reduce using rule 372 (switchBlockStatementGroupStats -> switchBlockStatementGroup .)
    BRPAREN         reduce using rule 372 (switchBlockStatementGroupStats -> switchBlockStatementGroup .)


state 755

    (352) statement -> DO statement WHILE parExpression . SEMI

    SEMI            shift and go to state 811


state 756

    (348) statement -> ASSERT expression expression_colon_or_empty SEMI .

    BRPAREN         reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    ASSERT          reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    IF              reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    FOR             reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    WHILE           reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    DO              reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    TRY             reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    SWITCH          reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    SYNCHRONIZED    reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    RETURN          reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    THROW           reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    BREAK           reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    CONTINUE        reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    SEMI            reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    Identifier      reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    BLPAREN         reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    PUBLIC          reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    PROTECTED       reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    PRIVATE         reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    ABSTRACT        reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    STATIC          reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    FINAL           reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    STRICTFP        reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    CLASS           reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    ENUM            reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    INTERFACE       reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    AT              reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    BOOLEAN         reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    CHAR            reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    BYTE            reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    SHORT           reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    INT             reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    LONG            reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    FLOAT           reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    DOUBLE          reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    PLUS            reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    DASH            reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    OP_INC          reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    OP_DEC          reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    TILDE           reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    EXCLAMATION     reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    LPAREN          reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    THIS            reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    SUPER           reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    NEW             reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    VOID            reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    CharacterLiteral reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    StringLiteral   reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    NULL            reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    LONG_NUMBER     reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    LONG_HEX_NUMBER reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    NON_INTEGER_1   reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    NON_INTEGER_2   reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    NON_INTEGER_3   reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    NON_INTEGER_4   reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    TRUE            reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    FALSE           reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    ELSE            reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    CASE            reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)
    DEFAULT         reduce using rule 348 (statement -> ASSERT expression expression_colon_or_empty SEMI .)


state 757

    (339) expression_colon_or_empty -> COLON expression .

    SEMI            reduce using rule 339 (expression_colon_or_empty -> COLON expression .)


state 758

    (349) statement -> IF parExpression statement else_statement .

    BRPAREN         reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    ASSERT          reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    IF              reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    FOR             reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    WHILE           reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    DO              reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    TRY             reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    SWITCH          reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    SYNCHRONIZED    reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    RETURN          reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    THROW           reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    BREAK           reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    CONTINUE        reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    SEMI            reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    Identifier      reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    BLPAREN         reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    PUBLIC          reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    PROTECTED       reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    PRIVATE         reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    ABSTRACT        reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    STATIC          reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    FINAL           reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    STRICTFP        reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    CLASS           reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    ENUM            reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    INTERFACE       reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    AT              reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    BOOLEAN         reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    CHAR            reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    BYTE            reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    SHORT           reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    INT             reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    LONG            reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    FLOAT           reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    DOUBLE          reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    PLUS            reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    DASH            reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    OP_INC          reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    OP_DEC          reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    TILDE           reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    EXCLAMATION     reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    LPAREN          reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    THIS            reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    SUPER           reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    NEW             reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    VOID            reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    CharacterLiteral reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    StringLiteral   reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    NULL            reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    LONG_NUMBER     reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    LONG_HEX_NUMBER reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    NON_INTEGER_1   reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    NON_INTEGER_2   reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    NON_INTEGER_3   reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    NON_INTEGER_4   reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    TRUE            reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    FALSE           reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    ELSE            reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    CASE            reduce using rule 349 (statement -> IF parExpression statement else_statement .)
    DEFAULT         reduce using rule 349 (statement -> IF parExpression statement else_statement .)


state 759

    (341) else_statement -> ELSE . statement
    (347) statement -> . block
    (348) statement -> . ASSERT expression expression_colon_or_empty SEMI
    (349) statement -> . IF parExpression statement else_statement
    (350) statement -> . FOR LPAREN forControl RPAREN statement
    (351) statement -> . WHILE parExpression statement
    (352) statement -> . DO statement WHILE parExpression SEMI
    (353) statement -> . TRY block catches FINALLY block
    (354) statement -> . TRY block catches
    (355) statement -> . TRY block FINALLY block
    (356) statement -> . SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN
    (357) statement -> . SYNCHRONIZED parExpression block
    (358) statement -> . RETURN expression_or_empty SEMI
    (359) statement -> . THROW expression SEMI
    (360) statement -> . BREAK Identifier_or_empty SEMI
    (361) statement -> . CONTINUE Identifier_or_empty SEMI
    (362) statement -> . SEMI
    (363) statement -> . statementExpression SEMI
    (364) statement -> . Identifier COLON statement
    (329) block -> . BLPAREN blockStatements BRPAREN
    (330) block -> . BLPAREN BRPAREN
    (400) statementExpression -> . expression
    (404) expression -> . conditionalExpression assignmentOperator_expression_empty
    (420) conditionalExpression -> . conditionalOrExpression conditionalExpressionStats
    (421) conditionalExpression -> . conditionalOrExpression
    (425) conditionalOrExpression -> . conditionalAndExpression O_conditionalAndExpressions
    (426) conditionalOrExpression -> . conditionalAndExpression
    (430) conditionalAndExpression -> . inclusiveOrExpression O_inclusiveOrExpressions
    (431) conditionalAndExpression -> . inclusiveOrExpression
    (435) inclusiveOrExpression -> . exclusiveOrExpression V_exclusiveOrExpression
    (436) inclusiveOrExpression -> . exclusiveOrExpression
    (440) exclusiveOrExpression -> . andExpression CARET_andExpressions
    (441) exclusiveOrExpression -> . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    ASSERT          shift and go to state 507
    IF              shift and go to state 513
    FOR             shift and go to state 492
    WHILE           shift and go to state 500
    DO              shift and go to state 506
    TRY             shift and go to state 494
    SWITCH          shift and go to state 501
    SYNCHRONIZED    shift and go to state 490
    RETURN          shift and go to state 489
    THROW           shift and go to state 514
    BREAK           shift and go to state 505
    CONTINUE        shift and go to state 496
    SEMI            shift and go to state 508
    Identifier      shift and go to state 611
    BLPAREN         shift and go to state 335
    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    equalityExpression             shift and go to state 108
    inclusiveOrExpression          shift and go to state 99
    multiplicativeExpression       shift and go to state 128
    exclusiveOrExpression          shift and go to state 110
    conditionalAndExpression       shift and go to state 89
    FloatingPointLiteral           shift and go to state 119
    shiftExpression                shift and go to state 130
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    statement                      shift and go to state 812
    additiveExpression             shift and go to state 102
    instanceOfExpression           shift and go to state 96
    conditionalExpression          shift and go to state 266
    unaryExpression                shift and go to state 131
    integerLiteral                 shift and go to state 98
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    relationalExpression           shift and go to state 95
    conditionalOrExpression        shift and go to state 109
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    primitiveType                  shift and go to state 122
    statementExpression            shift and go to state 509
    andExpression                  shift and go to state 106
    expression                     shift and go to state 497
    block                          shift and go to state 498

state 760

    (189) arrayInitializer -> BLPAREN array_body BRPAREN .

    COMMA           reduce using rule 189 (arrayInitializer -> BLPAREN array_body BRPAREN .)
    SEMI            reduce using rule 189 (arrayInitializer -> BLPAREN array_body BRPAREN .)
    BRPAREN         reduce using rule 189 (arrayInitializer -> BLPAREN array_body BRPAREN .)
    OP_INC          reduce using rule 189 (arrayInitializer -> BLPAREN array_body BRPAREN .)
    OP_DEC          reduce using rule 189 (arrayInitializer -> BLPAREN array_body BRPAREN .)
    DOT             reduce using rule 189 (arrayInitializer -> BLPAREN array_body BRPAREN .)
    FLPAREN         reduce using rule 189 (arrayInitializer -> BLPAREN array_body BRPAREN .)
    MULT            reduce using rule 189 (arrayInitializer -> BLPAREN array_body BRPAREN .)
    SLASH           reduce using rule 189 (arrayInitializer -> BLPAREN array_body BRPAREN .)
    PERCENT         reduce using rule 189 (arrayInitializer -> BLPAREN array_body BRPAREN .)
    PLUS            reduce using rule 189 (arrayInitializer -> BLPAREN array_body BRPAREN .)
    DASH            reduce using rule 189 (arrayInitializer -> BLPAREN array_body BRPAREN .)
    OP_SHR          reduce using rule 189 (arrayInitializer -> BLPAREN array_body BRPAREN .)
    OP_SHRR         reduce using rule 189 (arrayInitializer -> BLPAREN array_body BRPAREN .)
    OP_SHL          reduce using rule 189 (arrayInitializer -> BLPAREN array_body BRPAREN .)
    OP_LE           reduce using rule 189 (arrayInitializer -> BLPAREN array_body BRPAREN .)
    OP_GE           reduce using rule 189 (arrayInitializer -> BLPAREN array_body BRPAREN .)
    LESS            reduce using rule 189 (arrayInitializer -> BLPAREN array_body BRPAREN .)
    MORE            reduce using rule 189 (arrayInitializer -> BLPAREN array_body BRPAREN .)
    INSTANCEOF      reduce using rule 189 (arrayInitializer -> BLPAREN array_body BRPAREN .)
    OP_EQ           reduce using rule 189 (arrayInitializer -> BLPAREN array_body BRPAREN .)
    OP_NE           reduce using rule 189 (arrayInitializer -> BLPAREN array_body BRPAREN .)
    AND             reduce using rule 189 (arrayInitializer -> BLPAREN array_body BRPAREN .)
    CARET           reduce using rule 189 (arrayInitializer -> BLPAREN array_body BRPAREN .)
    VERTICAL        reduce using rule 189 (arrayInitializer -> BLPAREN array_body BRPAREN .)
    OP_LAND         reduce using rule 189 (arrayInitializer -> BLPAREN array_body BRPAREN .)
    OP_LOR          reduce using rule 189 (arrayInitializer -> BLPAREN array_body BRPAREN .)
    QUES            reduce using rule 189 (arrayInitializer -> BLPAREN array_body BRPAREN .)
    RPAREN          reduce using rule 189 (arrayInitializer -> BLPAREN array_body BRPAREN .)
    EQUALS          reduce using rule 189 (arrayInitializer -> BLPAREN array_body BRPAREN .)
    ASS_ADD         reduce using rule 189 (arrayInitializer -> BLPAREN array_body BRPAREN .)
    ASS_SUB         reduce using rule 189 (arrayInitializer -> BLPAREN array_body BRPAREN .)
    ASS_MUL         reduce using rule 189 (arrayInitializer -> BLPAREN array_body BRPAREN .)
    ASS_DIV         reduce using rule 189 (arrayInitializer -> BLPAREN array_body BRPAREN .)
    ASS_AND         reduce using rule 189 (arrayInitializer -> BLPAREN array_body BRPAREN .)
    ASS_OR          reduce using rule 189 (arrayInitializer -> BLPAREN array_body BRPAREN .)
    ASS_XOR         reduce using rule 189 (arrayInitializer -> BLPAREN array_body BRPAREN .)
    ASS_MOD         reduce using rule 189 (arrayInitializer -> BLPAREN array_body BRPAREN .)
    ASS_SHL         reduce using rule 189 (arrayInitializer -> BLPAREN array_body BRPAREN .)
    ASS_SHRR        reduce using rule 189 (arrayInitializer -> BLPAREN array_body BRPAREN .)
    ASS_SHR         reduce using rule 189 (arrayInitializer -> BLPAREN array_body BRPAREN .)
    FRPAREN         reduce using rule 189 (arrayInitializer -> BLPAREN array_body BRPAREN .)
    COLON           reduce using rule 189 (arrayInitializer -> BLPAREN array_body BRPAREN .)


state 761

    (187) array_body -> variableInitializer COMMA_variableInitializers . COMMA_once
    (184) COMMA_variableInitializers -> COMMA_variableInitializers . COMMA variableInitializer
    (185) COMMA_once -> . COMMA
    (186) COMMA_once -> .

    COMMA           shift and go to state 813
    BRPAREN         reduce using rule 186 (COMMA_once -> .)

    COMMA_once                     shift and go to state 814

state 762

    (183) COMMA_variableInitializers -> COMMA_variableInitializer .

    COMMA           reduce using rule 183 (COMMA_variableInitializers -> COMMA_variableInitializer .)
    BRPAREN         reduce using rule 183 (COMMA_variableInitializers -> COMMA_variableInitializer .)


state 763

    (185) COMMA_once -> COMMA .
    (182) COMMA_variableInitializer -> COMMA . variableInitializer
    (180) variableInitializer -> . arrayInitializer
    (181) variableInitializer -> . expression
    (189) arrayInitializer -> . BLPAREN array_body BRPAREN
    (404) expression -> . conditionalExpression assignmentOperator_expression_empty
    (420) conditionalExpression -> . conditionalOrExpression conditionalExpressionStats
    (421) conditionalExpression -> . conditionalOrExpression
    (425) conditionalOrExpression -> . conditionalAndExpression O_conditionalAndExpressions
    (426) conditionalOrExpression -> . conditionalAndExpression
    (430) conditionalAndExpression -> . inclusiveOrExpression O_inclusiveOrExpressions
    (431) conditionalAndExpression -> . inclusiveOrExpression
    (435) inclusiveOrExpression -> . exclusiveOrExpression V_exclusiveOrExpression
    (436) inclusiveOrExpression -> . exclusiveOrExpression
    (440) exclusiveOrExpression -> . andExpression CARET_andExpressions
    (441) exclusiveOrExpression -> . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    BRPAREN         reduce using rule 185 (COMMA_once -> COMMA .)
    BLPAREN         shift and go to state 627
    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    equalityExpression             shift and go to state 108
    inclusiveOrExpression          shift and go to state 99
    multiplicativeExpression       shift and go to state 128
    exclusiveOrExpression          shift and go to state 110
    conditionalAndExpression       shift and go to state 89
    shiftExpression                shift and go to state 130
    arrayInitializer               shift and go to state 629
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    integerLiteral                 shift and go to state 98
    additiveExpression             shift and go to state 102
    conditionalExpression          shift and go to state 266
    unaryExpression                shift and go to state 131
    FloatingPointLiteral           shift and go to state 119
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    relationalExpression           shift and go to state 95
    conditionalOrExpression        shift and go to state 109
    instanceOfExpression           shift and go to state 96
    castExpression                 shift and go to state 137
    variableInitializer            shift and go to state 815
    unaryExpressionNotPlusMinus    shift and go to state 105
    primitiveType                  shift and go to state 122
    andExpression                  shift and go to state 106
    expression                     shift and go to state 631

state 764

    (188) array_body -> variableInitializer COMMA_once .

    BRPAREN         reduce using rule 188 (array_body -> variableInitializer COMMA_once .)


state 765

    (538) arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs arrays .
    (138) arrays -> arrays . array
    (137) array -> . FLPAREN FRPAREN

  ! shift/reduce conflict for FLPAREN resolved as shift
    OP_INC          reduce using rule 538 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs arrays .)
    OP_DEC          reduce using rule 538 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs arrays .)
    DOT             reduce using rule 538 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs arrays .)
    MULT            reduce using rule 538 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs arrays .)
    SLASH           reduce using rule 538 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs arrays .)
    PERCENT         reduce using rule 538 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs arrays .)
    PLUS            reduce using rule 538 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs arrays .)
    DASH            reduce using rule 538 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs arrays .)
    OP_SHR          reduce using rule 538 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs arrays .)
    OP_SHRR         reduce using rule 538 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs arrays .)
    OP_SHL          reduce using rule 538 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs arrays .)
    OP_LE           reduce using rule 538 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs arrays .)
    OP_GE           reduce using rule 538 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs arrays .)
    LESS            reduce using rule 538 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs arrays .)
    MORE            reduce using rule 538 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs arrays .)
    INSTANCEOF      reduce using rule 538 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs arrays .)
    OP_EQ           reduce using rule 538 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs arrays .)
    OP_NE           reduce using rule 538 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs arrays .)
    AND             reduce using rule 538 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs arrays .)
    CARET           reduce using rule 538 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs arrays .)
    VERTICAL        reduce using rule 538 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs arrays .)
    OP_LAND         reduce using rule 538 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs arrays .)
    OP_LOR          reduce using rule 538 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs arrays .)
    QUES            reduce using rule 538 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs arrays .)
    RPAREN          reduce using rule 538 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs arrays .)
    COMMA           reduce using rule 538 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs arrays .)
    BRPAREN         reduce using rule 538 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs arrays .)
    EQUALS          reduce using rule 538 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs arrays .)
    ASS_ADD         reduce using rule 538 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs arrays .)
    ASS_SUB         reduce using rule 538 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs arrays .)
    ASS_MUL         reduce using rule 538 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs arrays .)
    ASS_DIV         reduce using rule 538 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs arrays .)
    ASS_AND         reduce using rule 538 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs arrays .)
    ASS_OR          reduce using rule 538 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs arrays .)
    ASS_XOR         reduce using rule 538 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs arrays .)
    ASS_MOD         reduce using rule 538 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs arrays .)
    ASS_SHL         reduce using rule 538 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs arrays .)
    ASS_SHRR        reduce using rule 538 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs arrays .)
    ASS_SHR         reduce using rule 538 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs arrays .)
    FRPAREN         reduce using rule 538 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs arrays .)
    COLON           reduce using rule 538 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs arrays .)
    SEMI            reduce using rule 538 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs arrays .)
    FLPAREN         shift and go to state 153

  ! FLPAREN         [ reduce using rule 538 (arrayCreatorRest -> FLPAREN expression FRPAREN FL_expression_FRs arrays .) ]

    array                          shift and go to state 308

state 766

    (328) defaultValue -> DEFAULT elementValue .

    SEMI            reduce using rule 328 (defaultValue -> DEFAULT elementValue .)


state 767

    (159) voidInterfaceMethodDeclaratorRest -> formalParameters SEMI .

    BRPAREN         reduce using rule 159 (voidInterfaceMethodDeclaratorRest -> formalParameters SEMI .)
    SEMI            reduce using rule 159 (voidInterfaceMethodDeclaratorRest -> formalParameters SEMI .)
    PUBLIC          reduce using rule 159 (voidInterfaceMethodDeclaratorRest -> formalParameters SEMI .)
    PROTECTED       reduce using rule 159 (voidInterfaceMethodDeclaratorRest -> formalParameters SEMI .)
    PRIVATE         reduce using rule 159 (voidInterfaceMethodDeclaratorRest -> formalParameters SEMI .)
    STATIC          reduce using rule 159 (voidInterfaceMethodDeclaratorRest -> formalParameters SEMI .)
    ABSTRACT        reduce using rule 159 (voidInterfaceMethodDeclaratorRest -> formalParameters SEMI .)
    FINAL           reduce using rule 159 (voidInterfaceMethodDeclaratorRest -> formalParameters SEMI .)
    NATIVE          reduce using rule 159 (voidInterfaceMethodDeclaratorRest -> formalParameters SEMI .)
    SYNCHRONIZED    reduce using rule 159 (voidInterfaceMethodDeclaratorRest -> formalParameters SEMI .)
    TRANSIENT       reduce using rule 159 (voidInterfaceMethodDeclaratorRest -> formalParameters SEMI .)
    VOLATILE        reduce using rule 159 (voidInterfaceMethodDeclaratorRest -> formalParameters SEMI .)
    STRICTFP        reduce using rule 159 (voidInterfaceMethodDeclaratorRest -> formalParameters SEMI .)
    AT              reduce using rule 159 (voidInterfaceMethodDeclaratorRest -> formalParameters SEMI .)


state 768

    (158) voidInterfaceMethodDeclaratorRest -> formalParameters throwList . SEMI

    SEMI            shift and go to state 816


state 769

    (157) interfaceGenericMethodDecl -> typeParameters VOID Identifier interfaceMethodDeclaratorRest .

    BRPAREN         reduce using rule 157 (interfaceGenericMethodDecl -> typeParameters VOID Identifier interfaceMethodDeclaratorRest .)
    SEMI            reduce using rule 157 (interfaceGenericMethodDecl -> typeParameters VOID Identifier interfaceMethodDeclaratorRest .)
    PUBLIC          reduce using rule 157 (interfaceGenericMethodDecl -> typeParameters VOID Identifier interfaceMethodDeclaratorRest .)
    PROTECTED       reduce using rule 157 (interfaceGenericMethodDecl -> typeParameters VOID Identifier interfaceMethodDeclaratorRest .)
    PRIVATE         reduce using rule 157 (interfaceGenericMethodDecl -> typeParameters VOID Identifier interfaceMethodDeclaratorRest .)
    STATIC          reduce using rule 157 (interfaceGenericMethodDecl -> typeParameters VOID Identifier interfaceMethodDeclaratorRest .)
    ABSTRACT        reduce using rule 157 (interfaceGenericMethodDecl -> typeParameters VOID Identifier interfaceMethodDeclaratorRest .)
    FINAL           reduce using rule 157 (interfaceGenericMethodDecl -> typeParameters VOID Identifier interfaceMethodDeclaratorRest .)
    NATIVE          reduce using rule 157 (interfaceGenericMethodDecl -> typeParameters VOID Identifier interfaceMethodDeclaratorRest .)
    SYNCHRONIZED    reduce using rule 157 (interfaceGenericMethodDecl -> typeParameters VOID Identifier interfaceMethodDeclaratorRest .)
    TRANSIENT       reduce using rule 157 (interfaceGenericMethodDecl -> typeParameters VOID Identifier interfaceMethodDeclaratorRest .)
    VOLATILE        reduce using rule 157 (interfaceGenericMethodDecl -> typeParameters VOID Identifier interfaceMethodDeclaratorRest .)
    STRICTFP        reduce using rule 157 (interfaceGenericMethodDecl -> typeParameters VOID Identifier interfaceMethodDeclaratorRest .)
    AT              reduce using rule 157 (interfaceGenericMethodDecl -> typeParameters VOID Identifier interfaceMethodDeclaratorRest .)


state 770

    (156) interfaceGenericMethodDecl -> typeParameters type Identifier interfaceMethodDeclaratorRest .

    BRPAREN         reduce using rule 156 (interfaceGenericMethodDecl -> typeParameters type Identifier interfaceMethodDeclaratorRest .)
    SEMI            reduce using rule 156 (interfaceGenericMethodDecl -> typeParameters type Identifier interfaceMethodDeclaratorRest .)
    PUBLIC          reduce using rule 156 (interfaceGenericMethodDecl -> typeParameters type Identifier interfaceMethodDeclaratorRest .)
    PROTECTED       reduce using rule 156 (interfaceGenericMethodDecl -> typeParameters type Identifier interfaceMethodDeclaratorRest .)
    PRIVATE         reduce using rule 156 (interfaceGenericMethodDecl -> typeParameters type Identifier interfaceMethodDeclaratorRest .)
    STATIC          reduce using rule 156 (interfaceGenericMethodDecl -> typeParameters type Identifier interfaceMethodDeclaratorRest .)
    ABSTRACT        reduce using rule 156 (interfaceGenericMethodDecl -> typeParameters type Identifier interfaceMethodDeclaratorRest .)
    FINAL           reduce using rule 156 (interfaceGenericMethodDecl -> typeParameters type Identifier interfaceMethodDeclaratorRest .)
    NATIVE          reduce using rule 156 (interfaceGenericMethodDecl -> typeParameters type Identifier interfaceMethodDeclaratorRest .)
    SYNCHRONIZED    reduce using rule 156 (interfaceGenericMethodDecl -> typeParameters type Identifier interfaceMethodDeclaratorRest .)
    TRANSIENT       reduce using rule 156 (interfaceGenericMethodDecl -> typeParameters type Identifier interfaceMethodDeclaratorRest .)
    VOLATILE        reduce using rule 156 (interfaceGenericMethodDecl -> typeParameters type Identifier interfaceMethodDeclaratorRest .)
    STRICTFP        reduce using rule 156 (interfaceGenericMethodDecl -> typeParameters type Identifier interfaceMethodDeclaratorRest .)
    AT              reduce using rule 156 (interfaceGenericMethodDecl -> typeParameters type Identifier interfaceMethodDeclaratorRest .)


state 771

    (155) interfaceMethodDeclaratorRest -> formalParameters SEMI .

    BRPAREN         reduce using rule 155 (interfaceMethodDeclaratorRest -> formalParameters SEMI .)
    SEMI            reduce using rule 155 (interfaceMethodDeclaratorRest -> formalParameters SEMI .)
    PUBLIC          reduce using rule 155 (interfaceMethodDeclaratorRest -> formalParameters SEMI .)
    PROTECTED       reduce using rule 155 (interfaceMethodDeclaratorRest -> formalParameters SEMI .)
    PRIVATE         reduce using rule 155 (interfaceMethodDeclaratorRest -> formalParameters SEMI .)
    STATIC          reduce using rule 155 (interfaceMethodDeclaratorRest -> formalParameters SEMI .)
    ABSTRACT        reduce using rule 155 (interfaceMethodDeclaratorRest -> formalParameters SEMI .)
    FINAL           reduce using rule 155 (interfaceMethodDeclaratorRest -> formalParameters SEMI .)
    NATIVE          reduce using rule 155 (interfaceMethodDeclaratorRest -> formalParameters SEMI .)
    SYNCHRONIZED    reduce using rule 155 (interfaceMethodDeclaratorRest -> formalParameters SEMI .)
    TRANSIENT       reduce using rule 155 (interfaceMethodDeclaratorRest -> formalParameters SEMI .)
    VOLATILE        reduce using rule 155 (interfaceMethodDeclaratorRest -> formalParameters SEMI .)
    STRICTFP        reduce using rule 155 (interfaceMethodDeclaratorRest -> formalParameters SEMI .)
    AT              reduce using rule 155 (interfaceMethodDeclaratorRest -> formalParameters SEMI .)


state 772

    (152) interfaceMethodDeclaratorRest -> formalParameters arrays . throwList SEMI
    (154) interfaceMethodDeclaratorRest -> formalParameters arrays . SEMI
    (138) arrays -> arrays . array
    (136) throwList -> . THROWS qualifiedNameList
    (137) array -> . FLPAREN FRPAREN

    SEMI            shift and go to state 817
    THROWS          shift and go to state 586
    FLPAREN         shift and go to state 153

    array                          shift and go to state 308
    throwList                      shift and go to state 818

state 773

    (153) interfaceMethodDeclaratorRest -> formalParameters throwList . SEMI

    SEMI            shift and go to state 819


state 774

    (176) constantDeclaratorRest -> arrays EQUALS . variableInitializer
    (180) variableInitializer -> . arrayInitializer
    (181) variableInitializer -> . expression
    (189) arrayInitializer -> . BLPAREN array_body BRPAREN
    (404) expression -> . conditionalExpression assignmentOperator_expression_empty
    (420) conditionalExpression -> . conditionalOrExpression conditionalExpressionStats
    (421) conditionalExpression -> . conditionalOrExpression
    (425) conditionalOrExpression -> . conditionalAndExpression O_conditionalAndExpressions
    (426) conditionalOrExpression -> . conditionalAndExpression
    (430) conditionalAndExpression -> . inclusiveOrExpression O_inclusiveOrExpressions
    (431) conditionalAndExpression -> . inclusiveOrExpression
    (435) inclusiveOrExpression -> . exclusiveOrExpression V_exclusiveOrExpression
    (436) inclusiveOrExpression -> . exclusiveOrExpression
    (440) exclusiveOrExpression -> . andExpression CARET_andExpressions
    (441) exclusiveOrExpression -> . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    BLPAREN         shift and go to state 627
    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    equalityExpression             shift and go to state 108
    inclusiveOrExpression          shift and go to state 99
    multiplicativeExpression       shift and go to state 128
    exclusiveOrExpression          shift and go to state 110
    conditionalAndExpression       shift and go to state 89
    shiftExpression                shift and go to state 130
    arrayInitializer               shift and go to state 629
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    integerLiteral                 shift and go to state 98
    additiveExpression             shift and go to state 102
    conditionalExpression          shift and go to state 266
    unaryExpression                shift and go to state 131
    FloatingPointLiteral           shift and go to state 119
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    relationalExpression           shift and go to state 95
    conditionalOrExpression        shift and go to state 109
    instanceOfExpression           shift and go to state 96
    castExpression                 shift and go to state 137
    variableInitializer            shift and go to state 820
    unaryExpressionNotPlusMinus    shift and go to state 105
    primitiveType                  shift and go to state 122
    andExpression                  shift and go to state 106
    expression                     shift and go to state 631

state 775

    (134) interfaceMethodOrFieldRest -> constantDeclaratorsRest SEMI .

    BRPAREN         reduce using rule 134 (interfaceMethodOrFieldRest -> constantDeclaratorsRest SEMI .)
    SEMI            reduce using rule 134 (interfaceMethodOrFieldRest -> constantDeclaratorsRest SEMI .)
    PUBLIC          reduce using rule 134 (interfaceMethodOrFieldRest -> constantDeclaratorsRest SEMI .)
    PROTECTED       reduce using rule 134 (interfaceMethodOrFieldRest -> constantDeclaratorsRest SEMI .)
    PRIVATE         reduce using rule 134 (interfaceMethodOrFieldRest -> constantDeclaratorsRest SEMI .)
    STATIC          reduce using rule 134 (interfaceMethodOrFieldRest -> constantDeclaratorsRest SEMI .)
    ABSTRACT        reduce using rule 134 (interfaceMethodOrFieldRest -> constantDeclaratorsRest SEMI .)
    FINAL           reduce using rule 134 (interfaceMethodOrFieldRest -> constantDeclaratorsRest SEMI .)
    NATIVE          reduce using rule 134 (interfaceMethodOrFieldRest -> constantDeclaratorsRest SEMI .)
    SYNCHRONIZED    reduce using rule 134 (interfaceMethodOrFieldRest -> constantDeclaratorsRest SEMI .)
    TRANSIENT       reduce using rule 134 (interfaceMethodOrFieldRest -> constantDeclaratorsRest SEMI .)
    VOLATILE        reduce using rule 134 (interfaceMethodOrFieldRest -> constantDeclaratorsRest SEMI .)
    STRICTFP        reduce using rule 134 (interfaceMethodOrFieldRest -> constantDeclaratorsRest SEMI .)
    AT              reduce using rule 134 (interfaceMethodOrFieldRest -> constantDeclaratorsRest SEMI .)


state 776

    (177) constantDeclaratorRest -> EQUALS variableInitializer .

    COMMA           reduce using rule 177 (constantDeclaratorRest -> EQUALS variableInitializer .)
    SEMI            reduce using rule 177 (constantDeclaratorRest -> EQUALS variableInitializer .)


state 777

    (174) constantDeclaratorsRest -> constantDeclaratorRest COMMA_consts .
    (173) COMMA_consts -> COMMA_consts . COMMA_const
    (171) COMMA_const -> . COMMA constantDeclarator

    SEMI            reduce using rule 174 (constantDeclaratorsRest -> constantDeclaratorRest COMMA_consts .)
    COMMA           shift and go to state 778

    COMMA_const                    shift and go to state 821

state 778

    (171) COMMA_const -> COMMA . constantDeclarator
    (162) constantDeclarator -> . Identifier constantDeclaratorRest

    Identifier      shift and go to state 823

    constantDeclarator             shift and go to state 822

state 779

    (172) COMMA_consts -> COMMA_const .

    COMMA           reduce using rule 172 (COMMA_consts -> COMMA_const .)
    SEMI            reduce using rule 172 (COMMA_consts -> COMMA_const .)


state 780

    (140) methodDeclaratorRest -> formalParameters arrays throwList methodBody .

    SEMI            reduce using rule 140 (methodDeclaratorRest -> formalParameters arrays throwList methodBody .)
    STATIC          reduce using rule 140 (methodDeclaratorRest -> formalParameters arrays throwList methodBody .)
    BLPAREN         reduce using rule 140 (methodDeclaratorRest -> formalParameters arrays throwList methodBody .)
    VOID            reduce using rule 140 (methodDeclaratorRest -> formalParameters arrays throwList methodBody .)
    Identifier      reduce using rule 140 (methodDeclaratorRest -> formalParameters arrays throwList methodBody .)
    PUBLIC          reduce using rule 140 (methodDeclaratorRest -> formalParameters arrays throwList methodBody .)
    PROTECTED       reduce using rule 140 (methodDeclaratorRest -> formalParameters arrays throwList methodBody .)
    PRIVATE         reduce using rule 140 (methodDeclaratorRest -> formalParameters arrays throwList methodBody .)
    ABSTRACT        reduce using rule 140 (methodDeclaratorRest -> formalParameters arrays throwList methodBody .)
    FINAL           reduce using rule 140 (methodDeclaratorRest -> formalParameters arrays throwList methodBody .)
    NATIVE          reduce using rule 140 (methodDeclaratorRest -> formalParameters arrays throwList methodBody .)
    SYNCHRONIZED    reduce using rule 140 (methodDeclaratorRest -> formalParameters arrays throwList methodBody .)
    TRANSIENT       reduce using rule 140 (methodDeclaratorRest -> formalParameters arrays throwList methodBody .)
    VOLATILE        reduce using rule 140 (methodDeclaratorRest -> formalParameters arrays throwList methodBody .)
    STRICTFP        reduce using rule 140 (methodDeclaratorRest -> formalParameters arrays throwList methodBody .)
    AT              reduce using rule 140 (methodDeclaratorRest -> formalParameters arrays throwList methodBody .)
    LESS            reduce using rule 140 (methodDeclaratorRest -> formalParameters arrays throwList methodBody .)
    INTERFACE       reduce using rule 140 (methodDeclaratorRest -> formalParameters arrays throwList methodBody .)
    CLASS           reduce using rule 140 (methodDeclaratorRest -> formalParameters arrays throwList methodBody .)
    ENUM            reduce using rule 140 (methodDeclaratorRest -> formalParameters arrays throwList methodBody .)
    BOOLEAN         reduce using rule 140 (methodDeclaratorRest -> formalParameters arrays throwList methodBody .)
    CHAR            reduce using rule 140 (methodDeclaratorRest -> formalParameters arrays throwList methodBody .)
    BYTE            reduce using rule 140 (methodDeclaratorRest -> formalParameters arrays throwList methodBody .)
    SHORT           reduce using rule 140 (methodDeclaratorRest -> formalParameters arrays throwList methodBody .)
    INT             reduce using rule 140 (methodDeclaratorRest -> formalParameters arrays throwList methodBody .)
    LONG            reduce using rule 140 (methodDeclaratorRest -> formalParameters arrays throwList methodBody .)
    FLOAT           reduce using rule 140 (methodDeclaratorRest -> formalParameters arrays throwList methodBody .)
    DOUBLE          reduce using rule 140 (methodDeclaratorRest -> formalParameters arrays throwList methodBody .)
    BRPAREN         reduce using rule 140 (methodDeclaratorRest -> formalParameters arrays throwList methodBody .)


state 781

    (141) methodDeclaratorRest -> formalParameters arrays throwList SEMI .

    SEMI            reduce using rule 141 (methodDeclaratorRest -> formalParameters arrays throwList SEMI .)
    STATIC          reduce using rule 141 (methodDeclaratorRest -> formalParameters arrays throwList SEMI .)
    BLPAREN         reduce using rule 141 (methodDeclaratorRest -> formalParameters arrays throwList SEMI .)
    VOID            reduce using rule 141 (methodDeclaratorRest -> formalParameters arrays throwList SEMI .)
    Identifier      reduce using rule 141 (methodDeclaratorRest -> formalParameters arrays throwList SEMI .)
    PUBLIC          reduce using rule 141 (methodDeclaratorRest -> formalParameters arrays throwList SEMI .)
    PROTECTED       reduce using rule 141 (methodDeclaratorRest -> formalParameters arrays throwList SEMI .)
    PRIVATE         reduce using rule 141 (methodDeclaratorRest -> formalParameters arrays throwList SEMI .)
    ABSTRACT        reduce using rule 141 (methodDeclaratorRest -> formalParameters arrays throwList SEMI .)
    FINAL           reduce using rule 141 (methodDeclaratorRest -> formalParameters arrays throwList SEMI .)
    NATIVE          reduce using rule 141 (methodDeclaratorRest -> formalParameters arrays throwList SEMI .)
    SYNCHRONIZED    reduce using rule 141 (methodDeclaratorRest -> formalParameters arrays throwList SEMI .)
    TRANSIENT       reduce using rule 141 (methodDeclaratorRest -> formalParameters arrays throwList SEMI .)
    VOLATILE        reduce using rule 141 (methodDeclaratorRest -> formalParameters arrays throwList SEMI .)
    STRICTFP        reduce using rule 141 (methodDeclaratorRest -> formalParameters arrays throwList SEMI .)
    AT              reduce using rule 141 (methodDeclaratorRest -> formalParameters arrays throwList SEMI .)
    LESS            reduce using rule 141 (methodDeclaratorRest -> formalParameters arrays throwList SEMI .)
    INTERFACE       reduce using rule 141 (methodDeclaratorRest -> formalParameters arrays throwList SEMI .)
    CLASS           reduce using rule 141 (methodDeclaratorRest -> formalParameters arrays throwList SEMI .)
    ENUM            reduce using rule 141 (methodDeclaratorRest -> formalParameters arrays throwList SEMI .)
    BOOLEAN         reduce using rule 141 (methodDeclaratorRest -> formalParameters arrays throwList SEMI .)
    CHAR            reduce using rule 141 (methodDeclaratorRest -> formalParameters arrays throwList SEMI .)
    BYTE            reduce using rule 141 (methodDeclaratorRest -> formalParameters arrays throwList SEMI .)
    SHORT           reduce using rule 141 (methodDeclaratorRest -> formalParameters arrays throwList SEMI .)
    INT             reduce using rule 141 (methodDeclaratorRest -> formalParameters arrays throwList SEMI .)
    LONG            reduce using rule 141 (methodDeclaratorRest -> formalParameters arrays throwList SEMI .)
    FLOAT           reduce using rule 141 (methodDeclaratorRest -> formalParameters arrays throwList SEMI .)
    DOUBLE          reduce using rule 141 (methodDeclaratorRest -> formalParameters arrays throwList SEMI .)
    BRPAREN         reduce using rule 141 (methodDeclaratorRest -> formalParameters arrays throwList SEMI .)


state 782

    (261) explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments . SEMI

    SEMI            shift and go to state 824


state 783

    (262) explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments . SEMI

    SEMI            shift and go to state 825


state 784

    (263) explicitConstructorInvocation -> THIS arguments SEMI .

    BRPAREN         reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    ASSERT          reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    IF              reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    FOR             reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    WHILE           reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    DO              reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    TRY             reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    SWITCH          reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    SYNCHRONIZED    reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    RETURN          reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    THROW           reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    BREAK           reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    CONTINUE        reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    SEMI            reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    Identifier      reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    BLPAREN         reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    PUBLIC          reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    PROTECTED       reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    PRIVATE         reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    ABSTRACT        reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    STATIC          reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    FINAL           reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    STRICTFP        reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    CLASS           reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    ENUM            reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    INTERFACE       reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    AT              reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    BOOLEAN         reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    CHAR            reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    BYTE            reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    SHORT           reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    INT             reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    LONG            reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    FLOAT           reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    DOUBLE          reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    PLUS            reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    DASH            reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    OP_INC          reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    OP_DEC          reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    TILDE           reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    EXCLAMATION     reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    LPAREN          reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    THIS            reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    SUPER           reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    NEW             reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    VOID            reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    CharacterLiteral reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    StringLiteral   reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    NULL            reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    LONG_NUMBER     reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    LONG_HEX_NUMBER reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    NON_INTEGER_1   reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    NON_INTEGER_2   reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    NON_INTEGER_3   reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    NON_INTEGER_4   reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    TRUE            reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)
    FALSE           reduce using rule 263 (explicitConstructorInvocation -> THIS arguments SEMI .)


state 785

    (265) explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments . SUPER arguments SEMI

    SUPER           shift and go to state 826


state 786

    (266) explicitConstructorInvocation -> primary DOT SUPER . arguments SEMI
    (548) selector -> DOT SUPER . superSuffix
    (555) arguments -> . LPAREN expressionList_once RPAREN
    (551) superSuffix -> . arguments
    (552) superSuffix -> . DOT Identifier arguments_once

    LPAREN          shift and go to state 199
    DOT             shift and go to state 273

    superSuffix                    shift and go to state 536
    arguments                      shift and go to state 827

state 787

    (394) parExpression -> LPAREN expression RPAREN .
    (503) castExpression -> LPAREN expression RPAREN . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    DOT             reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    OP_INC          reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    OP_DEC          reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    FLPAREN         reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    MULT            reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    SLASH           reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    PERCENT         reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    DASH            reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    OP_SHR          reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    OP_SHRR         reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    OP_SHL          reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    OP_LE           reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    OP_GE           reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    LESS            reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    MORE            reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    INSTANCEOF      reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    OP_EQ           reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    OP_NE           reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    AND             reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    CARET           reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    VERTICAL        reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    OP_LAND         reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    OP_LOR          reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    QUES            reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    ASS_ADD         reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    ASS_SUB         reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    ASS_MUL         reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    ASS_DIV         reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    ASS_AND         reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    ASS_OR          reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    ASS_XOR         reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    ASS_MOD         reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    ASS_SHL         reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    ASS_SHRR        reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    ASS_SHR         reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 394 (parExpression -> LPAREN expression RPAREN .)
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 548
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    primitiveType                  shift and go to state 122
    literal                        shift and go to state 116
    FloatingPointLiteral           shift and go to state 119
    booleanLiteral                 shift and go to state 92
    integerLiteral                 shift and go to state 98

state 788

    (257) constructorBody -> BLPAREN explicitConstructorInvocation blockStatements BRPAREN .

    SEMI            reduce using rule 257 (constructorBody -> BLPAREN explicitConstructorInvocation blockStatements BRPAREN .)
    STATIC          reduce using rule 257 (constructorBody -> BLPAREN explicitConstructorInvocation blockStatements BRPAREN .)
    BLPAREN         reduce using rule 257 (constructorBody -> BLPAREN explicitConstructorInvocation blockStatements BRPAREN .)
    VOID            reduce using rule 257 (constructorBody -> BLPAREN explicitConstructorInvocation blockStatements BRPAREN .)
    Identifier      reduce using rule 257 (constructorBody -> BLPAREN explicitConstructorInvocation blockStatements BRPAREN .)
    PUBLIC          reduce using rule 257 (constructorBody -> BLPAREN explicitConstructorInvocation blockStatements BRPAREN .)
    PROTECTED       reduce using rule 257 (constructorBody -> BLPAREN explicitConstructorInvocation blockStatements BRPAREN .)
    PRIVATE         reduce using rule 257 (constructorBody -> BLPAREN explicitConstructorInvocation blockStatements BRPAREN .)
    ABSTRACT        reduce using rule 257 (constructorBody -> BLPAREN explicitConstructorInvocation blockStatements BRPAREN .)
    FINAL           reduce using rule 257 (constructorBody -> BLPAREN explicitConstructorInvocation blockStatements BRPAREN .)
    NATIVE          reduce using rule 257 (constructorBody -> BLPAREN explicitConstructorInvocation blockStatements BRPAREN .)
    SYNCHRONIZED    reduce using rule 257 (constructorBody -> BLPAREN explicitConstructorInvocation blockStatements BRPAREN .)
    TRANSIENT       reduce using rule 257 (constructorBody -> BLPAREN explicitConstructorInvocation blockStatements BRPAREN .)
    VOLATILE        reduce using rule 257 (constructorBody -> BLPAREN explicitConstructorInvocation blockStatements BRPAREN .)
    STRICTFP        reduce using rule 257 (constructorBody -> BLPAREN explicitConstructorInvocation blockStatements BRPAREN .)
    AT              reduce using rule 257 (constructorBody -> BLPAREN explicitConstructorInvocation blockStatements BRPAREN .)
    LESS            reduce using rule 257 (constructorBody -> BLPAREN explicitConstructorInvocation blockStatements BRPAREN .)
    INTERFACE       reduce using rule 257 (constructorBody -> BLPAREN explicitConstructorInvocation blockStatements BRPAREN .)
    CLASS           reduce using rule 257 (constructorBody -> BLPAREN explicitConstructorInvocation blockStatements BRPAREN .)
    ENUM            reduce using rule 257 (constructorBody -> BLPAREN explicitConstructorInvocation blockStatements BRPAREN .)
    BOOLEAN         reduce using rule 257 (constructorBody -> BLPAREN explicitConstructorInvocation blockStatements BRPAREN .)
    CHAR            reduce using rule 257 (constructorBody -> BLPAREN explicitConstructorInvocation blockStatements BRPAREN .)
    BYTE            reduce using rule 257 (constructorBody -> BLPAREN explicitConstructorInvocation blockStatements BRPAREN .)
    SHORT           reduce using rule 257 (constructorBody -> BLPAREN explicitConstructorInvocation blockStatements BRPAREN .)
    INT             reduce using rule 257 (constructorBody -> BLPAREN explicitConstructorInvocation blockStatements BRPAREN .)
    LONG            reduce using rule 257 (constructorBody -> BLPAREN explicitConstructorInvocation blockStatements BRPAREN .)
    FLOAT           reduce using rule 257 (constructorBody -> BLPAREN explicitConstructorInvocation blockStatements BRPAREN .)
    DOUBLE          reduce using rule 257 (constructorBody -> BLPAREN explicitConstructorInvocation blockStatements BRPAREN .)
    BRPAREN         reduce using rule 257 (constructorBody -> BLPAREN explicitConstructorInvocation blockStatements BRPAREN .)


state 789

    (264) explicitConstructorInvocation -> SUPER arguments SEMI .

    BRPAREN         reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    ASSERT          reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    IF              reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    FOR             reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    WHILE           reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    DO              reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    TRY             reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    SWITCH          reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    SYNCHRONIZED    reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    RETURN          reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    THROW           reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    BREAK           reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    CONTINUE        reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    SEMI            reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    Identifier      reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    BLPAREN         reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    PUBLIC          reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    PROTECTED       reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    PRIVATE         reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    ABSTRACT        reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    STATIC          reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    FINAL           reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    STRICTFP        reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    CLASS           reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    ENUM            reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    INTERFACE       reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    AT              reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    BOOLEAN         reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    CHAR            reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    BYTE            reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    SHORT           reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    INT             reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    LONG            reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    FLOAT           reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    DOUBLE          reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    PLUS            reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    DASH            reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    OP_INC          reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    OP_DEC          reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    TILDE           reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    EXCLAMATION     reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    LPAREN          reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    THIS            reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    SUPER           reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    NEW             reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    VOID            reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    CharacterLiteral reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    StringLiteral   reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    NULL            reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    LONG_NUMBER     reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    LONG_HEX_NUMBER reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    NON_INTEGER_1   reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    NON_INTEGER_2   reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    NON_INTEGER_3   reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    NON_INTEGER_4   reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    TRUE            reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)
    FALSE           reduce using rule 264 (explicitConstructorInvocation -> SUPER arguments SEMI .)


state 790

    (241) COMMA_qualifiedName -> COMMA qualifiedName .

    COMMA           reduce using rule 241 (COMMA_qualifiedName -> COMMA qualifiedName .)
    BLPAREN         reduce using rule 241 (COMMA_qualifiedName -> COMMA qualifiedName .)
    SEMI            reduce using rule 241 (COMMA_qualifiedName -> COMMA qualifiedName .)


state 791

    (243) COMMA_qualifiedNames -> COMMA_qualifiedNames COMMA_qualifiedName .

    COMMA           reduce using rule 243 (COMMA_qualifiedNames -> COMMA_qualifiedNames COMMA_qualifiedName .)
    BLPAREN         reduce using rule 243 (COMMA_qualifiedNames -> COMMA_qualifiedNames COMMA_qualifiedName .)
    SEMI            reduce using rule 243 (COMMA_qualifiedNames -> COMMA_qualifiedNames COMMA_qualifiedName .)


state 792

    (250) formalParameterDeclsRestBody -> COMMA formalParameterDecls .

    RPAREN          reduce using rule 250 (formalParameterDeclsRestBody -> COMMA formalParameterDecls .)


state 793

    (350) statement -> FOR LPAREN forControl RPAREN statement .

    BRPAREN         reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    ASSERT          reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    IF              reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    FOR             reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    WHILE           reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    DO              reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    TRY             reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    SWITCH          reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    SYNCHRONIZED    reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    RETURN          reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    THROW           reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    BREAK           reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    CONTINUE        reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    SEMI            reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    Identifier      reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    BLPAREN         reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    PUBLIC          reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    PROTECTED       reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    PRIVATE         reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    ABSTRACT        reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    STATIC          reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    FINAL           reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    STRICTFP        reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    CLASS           reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    ENUM            reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    INTERFACE       reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    AT              reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    BOOLEAN         reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    CHAR            reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    BYTE            reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    SHORT           reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    INT             reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    LONG            reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    FLOAT           reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    DOUBLE          reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    PLUS            reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    DASH            reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    OP_INC          reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    OP_DEC          reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    TILDE           reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    EXCLAMATION     reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    LPAREN          reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    THIS            reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    SUPER           reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    NEW             reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    VOID            reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    CharacterLiteral reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    StringLiteral   reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    NULL            reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    LONG_NUMBER     reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    LONG_HEX_NUMBER reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    NON_INTEGER_1   reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    NON_INTEGER_2   reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    NON_INTEGER_3   reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    NON_INTEGER_4   reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    TRUE            reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    FALSE           reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    ELSE            reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    CASE            reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)
    DEFAULT         reduce using rule 350 (statement -> FOR LPAREN forControl RPAREN statement .)


state 794

    (388) forControl -> forInit_or_empty SEMI expression_or_empty . SEMI forUpdate_empty

    SEMI            shift and go to state 828


state 795

    (392) enhancedForControl -> type Identifier COLON . expression
    (404) expression -> . conditionalExpression assignmentOperator_expression_empty
    (420) conditionalExpression -> . conditionalOrExpression conditionalExpressionStats
    (421) conditionalExpression -> . conditionalOrExpression
    (425) conditionalOrExpression -> . conditionalAndExpression O_conditionalAndExpressions
    (426) conditionalOrExpression -> . conditionalAndExpression
    (430) conditionalAndExpression -> . inclusiveOrExpression O_inclusiveOrExpressions
    (431) conditionalAndExpression -> . inclusiveOrExpression
    (435) inclusiveOrExpression -> . exclusiveOrExpression V_exclusiveOrExpression
    (436) inclusiveOrExpression -> . exclusiveOrExpression
    (440) exclusiveOrExpression -> . andExpression CARET_andExpressions
    (441) exclusiveOrExpression -> . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    equalityExpression             shift and go to state 108
    inclusiveOrExpression          shift and go to state 99
    multiplicativeExpression       shift and go to state 128
    exclusiveOrExpression          shift and go to state 110
    conditionalAndExpression       shift and go to state 89
    shiftExpression                shift and go to state 130
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    integerLiteral                 shift and go to state 98
    additiveExpression             shift and go to state 102
    instanceOfExpression           shift and go to state 96
    conditionalExpression          shift and go to state 266
    unaryExpression                shift and go to state 131
    FloatingPointLiteral           shift and go to state 119
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    relationalExpression           shift and go to state 95
    conditionalOrExpression        shift and go to state 109
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    primitiveType                  shift and go to state 122
    andExpression                  shift and go to state 106
    expression                     shift and go to state 829

state 796

    (391) enhancedForControl -> variableModifiers type Identifier . COLON expression
    (178) variableDeclaratorId -> Identifier . arrays
    (179) variableDeclaratorId -> Identifier .
    (138) arrays -> . arrays array
    (139) arrays -> . array
    (137) array -> . FLPAREN FRPAREN

    COLON           shift and go to state 830
    EQUALS          reduce using rule 179 (variableDeclaratorId -> Identifier .)
    COMMA           reduce using rule 179 (variableDeclaratorId -> Identifier .)
    SEMI            reduce using rule 179 (variableDeclaratorId -> Identifier .)
    FLPAREN         shift and go to state 153

    arrays                         shift and go to state 553
    array                          shift and go to state 154

state 797

    (353) statement -> TRY block catches FINALLY block .

    BRPAREN         reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    ASSERT          reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    IF              reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    FOR             reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    WHILE           reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    DO              reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    TRY             reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    SWITCH          reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    SYNCHRONIZED    reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    RETURN          reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    THROW           reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    BREAK           reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    CONTINUE        reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    SEMI            reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    Identifier      reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    BLPAREN         reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    PUBLIC          reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    PROTECTED       reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    PRIVATE         reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    ABSTRACT        reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    STATIC          reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    FINAL           reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    STRICTFP        reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    CLASS           reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    ENUM            reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    INTERFACE       reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    AT              reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    BOOLEAN         reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    CHAR            reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    BYTE            reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    SHORT           reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    INT             reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    LONG            reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    FLOAT           reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    DOUBLE          reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    PLUS            reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    DASH            reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    OP_INC          reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    OP_DEC          reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    TILDE           reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    EXCLAMATION     reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    LPAREN          reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    THIS            reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    SUPER           reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    NEW             reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    VOID            reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    CharacterLiteral reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    StringLiteral   reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    NULL            reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    LONG_NUMBER     reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    LONG_HEX_NUMBER reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    NON_INTEGER_1   reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    NON_INTEGER_2   reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    NON_INTEGER_3   reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    NON_INTEGER_4   reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    TRUE            reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    FALSE           reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    ELSE            reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    CASE            reduce using rule 353 (statement -> TRY block catches FINALLY block .)
    DEFAULT         reduce using rule 353 (statement -> TRY block catches FINALLY block .)


state 798

    (366) catchClauses -> catchClauses catchClause .

    CATCH           reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    FINALLY         reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    BRPAREN         reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    ASSERT          reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    IF              reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    FOR             reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    WHILE           reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    DO              reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    TRY             reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    SWITCH          reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    SYNCHRONIZED    reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    RETURN          reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    THROW           reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    BREAK           reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    CONTINUE        reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    SEMI            reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    Identifier      reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    BLPAREN         reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    PUBLIC          reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    PROTECTED       reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    PRIVATE         reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    ABSTRACT        reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    STATIC          reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    FINAL           reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    STRICTFP        reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    CLASS           reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    ENUM            reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    INTERFACE       reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    AT              reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    BOOLEAN         reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    CHAR            reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    BYTE            reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    SHORT           reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    INT             reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    LONG            reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    FLOAT           reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    DOUBLE          reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    PLUS            reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    DASH            reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    OP_INC          reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    OP_DEC          reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    TILDE           reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    EXCLAMATION     reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    LPAREN          reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    THIS            reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    SUPER           reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    NEW             reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    VOID            reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    CharacterLiteral reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    StringLiteral   reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    NULL            reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    LONG_NUMBER     reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    LONG_HEX_NUMBER reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    NON_INTEGER_1   reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    NON_INTEGER_2   reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    NON_INTEGER_3   reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    NON_INTEGER_4   reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    TRUE            reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    FALSE           reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    ELSE            reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    CASE            reduce using rule 366 (catchClauses -> catchClauses catchClause .)
    DEFAULT         reduce using rule 366 (catchClauses -> catchClauses catchClause .)


state 799

    (371) formalParameter -> type . variableDeclaratorId
    (178) variableDeclaratorId -> . Identifier arrays
    (179) variableDeclaratorId -> . Identifier

    Identifier      shift and go to state 609

    variableDeclaratorId           shift and go to state 831

state 800

    (369) catchClause -> CATCH LPAREN formalParameter . RPAREN block

    RPAREN          shift and go to state 832


state 801

    (370) formalParameter -> variableModifiers . type variableDeclaratorId
    (338) variableModifiers -> variableModifiers . variableModifier
    (205) type -> . type_body
    (206) type -> . primitiveType arrays
    (207) type -> . primitiveType
    (229) variableModifier -> . FINAL
    (230) variableModifier -> . annotation
    (208) type_body -> . Identifier classOrInterfaceTypeBody arrays
    (209) type_body -> . Identifier classOrInterfaceTypeBody
    (210) type_body -> . Identifier arrays
    (211) type_body -> . Identifier
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (287) annotation -> . AT annotationName annotationBody

    FINAL           shift and go to state 589
    Identifier      shift and go to state 80
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    AT              shift and go to state 133

    primitiveType                  shift and go to state 74
    variableModifier               shift and go to state 600
    type_body                      shift and go to state 77
    type                           shift and go to state 833
    annotation                     shift and go to state 593

state 802

    (356) statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .

    BRPAREN         reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    ASSERT          reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    IF              reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    FOR             reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    WHILE           reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    DO              reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    TRY             reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    SWITCH          reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    SYNCHRONIZED    reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    RETURN          reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    THROW           reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    BREAK           reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    CONTINUE        reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    SEMI            reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    Identifier      reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    BLPAREN         reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    PUBLIC          reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    PROTECTED       reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    PRIVATE         reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    ABSTRACT        reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    STATIC          reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    FINAL           reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    STRICTFP        reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    CLASS           reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    ENUM            reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    INTERFACE       reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    AT              reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    BOOLEAN         reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    CHAR            reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    BYTE            reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    SHORT           reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    INT             reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    LONG            reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    FLOAT           reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    DOUBLE          reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    PLUS            reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    DASH            reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    OP_INC          reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    OP_DEC          reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    TILDE           reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    EXCLAMATION     reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    LPAREN          reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    THIS            reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    SUPER           reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    NEW             reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    VOID            reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    CharacterLiteral reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    StringLiteral   reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    NULL            reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    LONG_NUMBER     reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    LONG_HEX_NUMBER reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    NON_INTEGER_1   reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    NON_INTEGER_2   reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    NON_INTEGER_3   reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    NON_INTEGER_4   reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    TRUE            reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    FALSE           reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    ELSE            reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    CASE            reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)
    DEFAULT         reduce using rule 356 (statement -> SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN .)


state 803

    (381) switchLabel -> CASE enumConstantName . COLON

    COLON           shift and go to state 834


state 804

    (203) enumConstantName -> Identifier .
    (512) primary -> Identifier . DOT_Identifiers identifierSuffix_empty
    (513) primary -> Identifier . identifierSuffix_empty
    (269) DOT_Identifiers -> . DOT_Identifier
    (270) DOT_Identifiers -> . DOT_Identifiers DOT_Identifier
    (504) identifierSuffix_empty -> . identifierSuffix
    (505) identifierSuffix_empty -> .
    (267) DOT_Identifier -> . DOT Identifier
    (268) DOT_Identifier -> . DOT MULT
    (520) identifierSuffix -> . arrays DOT CLASS
    (521) identifierSuffix -> . FL_expression_FRs
    (522) identifierSuffix -> . arguments
    (523) identifierSuffix -> . DOT CLASS
    (524) identifierSuffix -> . DOT explicitGenericInvocation
    (525) identifierSuffix -> . DOT THIS
    (526) identifierSuffix -> . DOT SUPER arguments
    (527) identifierSuffix -> . DOT NEW innerCreator
    (138) arrays -> . arrays array
    (139) arrays -> . array
    (518) FL_expression_FRs -> . FL_expression_FR
    (519) FL_expression_FRs -> . FL_expression_FRs FL_expression_FR
    (555) arguments -> . LPAREN expressionList_once RPAREN
    (137) array -> . FLPAREN FRPAREN
    (517) FL_expression_FR -> . FLPAREN expression FRPAREN

  ! reduce/reduce conflict for COLON resolved using rule 203 (enumConstantName -> Identifier .)
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for FLPAREN resolved as shift
    COLON           reduce using rule 203 (enumConstantName -> Identifier .)
    OP_INC          reduce using rule 505 (identifierSuffix_empty -> .)
    OP_DEC          reduce using rule 505 (identifierSuffix_empty -> .)
    MULT            reduce using rule 505 (identifierSuffix_empty -> .)
    SLASH           reduce using rule 505 (identifierSuffix_empty -> .)
    PERCENT         reduce using rule 505 (identifierSuffix_empty -> .)
    PLUS            reduce using rule 505 (identifierSuffix_empty -> .)
    DASH            reduce using rule 505 (identifierSuffix_empty -> .)
    OP_SHR          reduce using rule 505 (identifierSuffix_empty -> .)
    OP_SHRR         reduce using rule 505 (identifierSuffix_empty -> .)
    OP_SHL          reduce using rule 505 (identifierSuffix_empty -> .)
    OP_LE           reduce using rule 505 (identifierSuffix_empty -> .)
    OP_GE           reduce using rule 505 (identifierSuffix_empty -> .)
    LESS            reduce using rule 505 (identifierSuffix_empty -> .)
    MORE            reduce using rule 505 (identifierSuffix_empty -> .)
    INSTANCEOF      reduce using rule 505 (identifierSuffix_empty -> .)
    OP_EQ           reduce using rule 505 (identifierSuffix_empty -> .)
    OP_NE           reduce using rule 505 (identifierSuffix_empty -> .)
    AND             reduce using rule 505 (identifierSuffix_empty -> .)
    CARET           reduce using rule 505 (identifierSuffix_empty -> .)
    VERTICAL        reduce using rule 505 (identifierSuffix_empty -> .)
    OP_LAND         reduce using rule 505 (identifierSuffix_empty -> .)
    OP_LOR          reduce using rule 505 (identifierSuffix_empty -> .)
    QUES            reduce using rule 505 (identifierSuffix_empty -> .)
    EQUALS          reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_ADD         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_SUB         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_MUL         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_DIV         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_AND         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_OR          reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_XOR         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_MOD         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_SHL         reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_SHRR        reduce using rule 505 (identifierSuffix_empty -> .)
    ASS_SHR         reduce using rule 505 (identifierSuffix_empty -> .)
    DOT             shift and go to state 194
    LPAREN          shift and go to state 199
    FLPAREN         shift and go to state 193

  ! DOT             [ reduce using rule 505 (identifierSuffix_empty -> .) ]
  ! FLPAREN         [ reduce using rule 505 (identifierSuffix_empty -> .) ]
  ! COLON           [ reduce using rule 505 (identifierSuffix_empty -> .) ]

    FL_expression_FRs              shift and go to state 196
    identifierSuffix               shift and go to state 197
    FL_expression_FR               shift and go to state 192
    arrays                         shift and go to state 200
    DOT_Identifiers                shift and go to state 213
    identifierSuffix_empty         shift and go to state 215
    arguments                      shift and go to state 195
    DOT_Identifier                 shift and go to state 48
    array                          shift and go to state 154

state 805

    (380) switchLabel -> CASE constantExpression . COLON

    COLON           shift and go to state 835


state 806

    (401) constantExpression -> expression .

    COLON           reduce using rule 401 (constantExpression -> expression .)


state 807

    (373) switchBlockStatementGroupStats -> switchBlockStatementGroupStats switchBlockStatementGroup .

    CASE            reduce using rule 373 (switchBlockStatementGroupStats -> switchBlockStatementGroupStats switchBlockStatementGroup .)
    DEFAULT         reduce using rule 373 (switchBlockStatementGroupStats -> switchBlockStatementGroupStats switchBlockStatementGroup .)
    BRPAREN         reduce using rule 373 (switchBlockStatementGroupStats -> switchBlockStatementGroupStats switchBlockStatementGroup .)


state 808

    (382) switchLabel -> DEFAULT COLON .

    CASE            reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    DEFAULT         reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    ASSERT          reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    IF              reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    FOR             reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    WHILE           reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    DO              reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    TRY             reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    SWITCH          reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    SYNCHRONIZED    reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    RETURN          reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    THROW           reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    BREAK           reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    CONTINUE        reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    SEMI            reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    Identifier      reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    BLPAREN         reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    PUBLIC          reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    PROTECTED       reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    PRIVATE         reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    ABSTRACT        reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    STATIC          reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    FINAL           reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    STRICTFP        reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    CLASS           reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    ENUM            reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    INTERFACE       reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    AT              reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    BOOLEAN         reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    CHAR            reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    BYTE            reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    SHORT           reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    INT             reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    LONG            reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    FLOAT           reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    DOUBLE          reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    PLUS            reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    DASH            reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    OP_INC          reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    OP_DEC          reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    TILDE           reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    EXCLAMATION     reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    LPAREN          reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    THIS            reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    SUPER           reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    NEW             reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    VOID            reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    CharacterLiteral reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    StringLiteral   reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    NULL            reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    LONG_NUMBER     reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    LONG_HEX_NUMBER reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    NON_INTEGER_1   reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    NON_INTEGER_2   reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    NON_INTEGER_3   reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    NON_INTEGER_4   reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    TRUE            reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    FALSE           reduce using rule 382 (switchLabel -> DEFAULT COLON .)
    BRPAREN         reduce using rule 382 (switchLabel -> DEFAULT COLON .)


state 809

    (377) switchLabels -> switchLabels switchLabel .

    CASE            reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    DEFAULT         reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    ASSERT          reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    IF              reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    FOR             reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    WHILE           reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    DO              reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    TRY             reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    SWITCH          reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    SYNCHRONIZED    reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    RETURN          reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    THROW           reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    BREAK           reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    CONTINUE        reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    SEMI            reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    Identifier      reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    BLPAREN         reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    PUBLIC          reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    PROTECTED       reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    PRIVATE         reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    ABSTRACT        reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    STATIC          reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    FINAL           reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    STRICTFP        reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    CLASS           reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    ENUM            reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    INTERFACE       reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    AT              reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    BOOLEAN         reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    CHAR            reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    BYTE            reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    SHORT           reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    INT             reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    LONG            reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    FLOAT           reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    DOUBLE          reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    PLUS            reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    DASH            reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    OP_INC          reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    OP_DEC          reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    TILDE           reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    EXCLAMATION     reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    LPAREN          reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    THIS            reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    SUPER           reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    NEW             reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    VOID            reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    CharacterLiteral reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    StringLiteral   reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    NULL            reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    LONG_NUMBER     reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    LONG_HEX_NUMBER reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    NON_INTEGER_1   reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    NON_INTEGER_2   reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    NON_INTEGER_3   reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    NON_INTEGER_4   reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    TRUE            reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    FALSE           reduce using rule 377 (switchLabels -> switchLabels switchLabel .)
    BRPAREN         reduce using rule 377 (switchLabels -> switchLabels switchLabel .)


state 810

    (378) switchBlockStatementGroup -> switchLabels blockStatements .
    (256) blockStatements -> blockStatements . blockStatement
    (331) blockStatement -> . localVariableDeclarationStatement
    (332) blockStatement -> . classOrInterfaceDeclaration
    (333) blockStatement -> . statement
    (334) localVariableDeclarationStatement -> . localVariableDeclaration SEMI
    (26) classOrInterfaceDeclaration -> . classOrInterfaceModifiers classDeclaration
    (27) classOrInterfaceDeclaration -> . classOrInterfaceModifiers interfaceDeclaration
    (28) classOrInterfaceDeclaration -> . classDeclaration
    (29) classOrInterfaceDeclaration -> . interfaceDeclaration
    (347) statement -> . block
    (348) statement -> . ASSERT expression expression_colon_or_empty SEMI
    (349) statement -> . IF parExpression statement else_statement
    (350) statement -> . FOR LPAREN forControl RPAREN statement
    (351) statement -> . WHILE parExpression statement
    (352) statement -> . DO statement WHILE parExpression SEMI
    (353) statement -> . TRY block catches FINALLY block
    (354) statement -> . TRY block catches
    (355) statement -> . TRY block FINALLY block
    (356) statement -> . SWITCH parExpression BLPAREN switchBlockStatementGroups BRPAREN
    (357) statement -> . SYNCHRONIZED parExpression block
    (358) statement -> . RETURN expression_or_empty SEMI
    (359) statement -> . THROW expression SEMI
    (360) statement -> . BREAK Identifier_or_empty SEMI
    (361) statement -> . CONTINUE Identifier_or_empty SEMI
    (362) statement -> . SEMI
    (363) statement -> . statementExpression SEMI
    (364) statement -> . Identifier COLON statement
    (335) localVariableDeclaration -> . variableModifiers type variableDeclarators
    (336) localVariableDeclaration -> . type variableDeclarators
    (30) classOrInterfaceModifiers -> . classOrInterfaceModifier
    (31) classOrInterfaceModifiers -> . classOrInterfaceModifiers classOrInterfaceModifier
    (42) classDeclaration -> . normalClassDeclaration
    (43) classDeclaration -> . enumDeclaration
    (89) interfaceDeclaration -> . normalInterfaceDeclaration
    (90) interfaceDeclaration -> . annotationTypeDeclaration
    (329) block -> . BLPAREN blockStatements BRPAREN
    (330) block -> . BLPAREN BRPAREN
    (400) statementExpression -> . expression
    (337) variableModifiers -> . variableModifier
    (338) variableModifiers -> . variableModifiers variableModifier
    (205) type -> . type_body
    (206) type -> . primitiveType arrays
    (207) type -> . primitiveType
    (32) classOrInterfaceModifier -> . annotation
    (33) classOrInterfaceModifier -> . PUBLIC
    (34) classOrInterfaceModifier -> . PROTECTED
    (35) classOrInterfaceModifier -> . PRIVATE
    (36) classOrInterfaceModifier -> . ABSTRACT
    (37) classOrInterfaceModifier -> . STATIC
    (38) classOrInterfaceModifier -> . FINAL
    (39) classOrInterfaceModifier -> . STRICTFP
    (48) normalClassDeclaration -> . CLASS Identifier typeParameters ExtendType IMPLEMENTS_typeList classBody
    (63) enumDeclaration -> . ENUM Identifier IMPLEMENTS_typeList enumBody
    (95) normalInterfaceDeclaration -> . INTERFACE Identifier typeParameters_once EXTENDS_typeList interfaceBody
    (308) annotationTypeDeclaration -> . AT INTERFACE Identifier annotationTypeBody
    (404) expression -> . conditionalExpression assignmentOperator_expression_empty
    (229) variableModifier -> . FINAL
    (230) variableModifier -> . annotation
    (208) type_body -> . Identifier classOrInterfaceTypeBody arrays
    (209) type_body -> . Identifier classOrInterfaceTypeBody
    (210) type_body -> . Identifier arrays
    (211) type_body -> . Identifier
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (287) annotation -> . AT annotationName annotationBody
    (420) conditionalExpression -> . conditionalOrExpression conditionalExpressionStats
    (421) conditionalExpression -> . conditionalOrExpression
    (425) conditionalOrExpression -> . conditionalAndExpression O_conditionalAndExpressions
    (426) conditionalOrExpression -> . conditionalAndExpression
    (430) conditionalAndExpression -> . inclusiveOrExpression O_inclusiveOrExpressions
    (431) conditionalAndExpression -> . inclusiveOrExpression
    (435) inclusiveOrExpression -> . exclusiveOrExpression V_exclusiveOrExpression
    (436) inclusiveOrExpression -> . exclusiveOrExpression
    (440) exclusiveOrExpression -> . andExpression CARET_andExpressions
    (441) exclusiveOrExpression -> . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    CASE            reduce using rule 378 (switchBlockStatementGroup -> switchLabels blockStatements .)
    DEFAULT         reduce using rule 378 (switchBlockStatementGroup -> switchLabels blockStatements .)
    BRPAREN         reduce using rule 378 (switchBlockStatementGroup -> switchLabels blockStatements .)
    ASSERT          shift and go to state 507
    IF              shift and go to state 513
    FOR             shift and go to state 492
    WHILE           shift and go to state 500
    DO              shift and go to state 506
    TRY             shift and go to state 494
    SWITCH          shift and go to state 501
    SYNCHRONIZED    shift and go to state 490
    RETURN          shift and go to state 489
    THROW           shift and go to state 514
    BREAK           shift and go to state 505
    CONTINUE        shift and go to state 496
    SEMI            shift and go to state 508
    Identifier      shift and go to state 495
    BLPAREN         shift and go to state 335
    PUBLIC          shift and go to state 24
    PROTECTED       shift and go to state 3
    PRIVATE         shift and go to state 9
    ABSTRACT        shift and go to state 2
    STATIC          shift and go to state 4
    FINAL           shift and go to state 491
    STRICTFP        shift and go to state 10
    CLASS           shift and go to state 12
    ENUM            shift and go to state 15
    INTERFACE       shift and go to state 23
    AT              shift and go to state 18
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    equalityExpression             shift and go to state 108
    localVariableDeclaration       shift and go to state 499
    inclusiveOrExpression          shift and go to state 99
    multiplicativeExpression       shift and go to state 128
    exclusiveOrExpression          shift and go to state 110
    conditionalAndExpression       shift and go to state 89
    FloatingPointLiteral           shift and go to state 119
    primitiveType                  shift and go to state 504
    blockStatement                 shift and go to state 615
    normalInterfaceDeclaration     shift and go to state 5
    shiftExpression                shift and go to state 130
    primary                        shift and go to state 111
    normalClassDeclaration         shift and go to state 7
    unaryExpression                shift and go to state 131
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    classOrInterfaceModifiers      shift and go to state 22
    statement                      shift and go to state 502
    type                           shift and go to state 503
    additiveExpression             shift and go to state 102
    instanceOfExpression           shift and go to state 96
    conditionalExpression          shift and go to state 266
    enumDeclaration                shift and go to state 13
    classOrInterfaceDeclaration    shift and go to state 486
    integerLiteral                 shift and go to state 98
    parExpression                  shift and go to state 132
    classOrInterfaceModifier       shift and go to state 20
    relationalExpression           shift and go to state 95
    variableModifier               shift and go to state 487
    classDeclaration               shift and go to state 17
    conditionalOrExpression        shift and go to state 109
    localVariableDeclarationStatement shift and go to state 488
    annotation                     shift and go to state 512
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    variableModifiers              shift and go to state 493
    type_body                      shift and go to state 77
    annotationTypeDeclaration      shift and go to state 21
    statementExpression            shift and go to state 509
    interfaceDeclaration           shift and go to state 1
    andExpression                  shift and go to state 106
    expression                     shift and go to state 497
    block                          shift and go to state 498

state 811

    (352) statement -> DO statement WHILE parExpression SEMI .

    BRPAREN         reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    ASSERT          reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    IF              reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    FOR             reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    WHILE           reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    DO              reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    TRY             reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    SWITCH          reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    SYNCHRONIZED    reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    RETURN          reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    THROW           reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    BREAK           reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    CONTINUE        reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    SEMI            reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    Identifier      reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    BLPAREN         reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    PUBLIC          reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    PROTECTED       reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    PRIVATE         reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    ABSTRACT        reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    STATIC          reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    FINAL           reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    STRICTFP        reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    CLASS           reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    ENUM            reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    INTERFACE       reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    AT              reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    BOOLEAN         reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    CHAR            reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    BYTE            reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    SHORT           reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    INT             reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    LONG            reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    FLOAT           reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    DOUBLE          reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    PLUS            reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    DASH            reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    OP_INC          reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    OP_DEC          reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    TILDE           reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    EXCLAMATION     reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    LPAREN          reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    THIS            reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    SUPER           reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    NEW             reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    VOID            reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    CharacterLiteral reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    StringLiteral   reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    NULL            reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    LONG_NUMBER     reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    LONG_HEX_NUMBER reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    NON_INTEGER_1   reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    NON_INTEGER_2   reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    NON_INTEGER_3   reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    NON_INTEGER_4   reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    TRUE            reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    FALSE           reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    ELSE            reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    CASE            reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)
    DEFAULT         reduce using rule 352 (statement -> DO statement WHILE parExpression SEMI .)


state 812

    (341) else_statement -> ELSE statement .

    BRPAREN         reduce using rule 341 (else_statement -> ELSE statement .)
    ASSERT          reduce using rule 341 (else_statement -> ELSE statement .)
    IF              reduce using rule 341 (else_statement -> ELSE statement .)
    FOR             reduce using rule 341 (else_statement -> ELSE statement .)
    WHILE           reduce using rule 341 (else_statement -> ELSE statement .)
    DO              reduce using rule 341 (else_statement -> ELSE statement .)
    TRY             reduce using rule 341 (else_statement -> ELSE statement .)
    SWITCH          reduce using rule 341 (else_statement -> ELSE statement .)
    SYNCHRONIZED    reduce using rule 341 (else_statement -> ELSE statement .)
    RETURN          reduce using rule 341 (else_statement -> ELSE statement .)
    THROW           reduce using rule 341 (else_statement -> ELSE statement .)
    BREAK           reduce using rule 341 (else_statement -> ELSE statement .)
    CONTINUE        reduce using rule 341 (else_statement -> ELSE statement .)
    SEMI            reduce using rule 341 (else_statement -> ELSE statement .)
    Identifier      reduce using rule 341 (else_statement -> ELSE statement .)
    BLPAREN         reduce using rule 341 (else_statement -> ELSE statement .)
    PUBLIC          reduce using rule 341 (else_statement -> ELSE statement .)
    PROTECTED       reduce using rule 341 (else_statement -> ELSE statement .)
    PRIVATE         reduce using rule 341 (else_statement -> ELSE statement .)
    ABSTRACT        reduce using rule 341 (else_statement -> ELSE statement .)
    STATIC          reduce using rule 341 (else_statement -> ELSE statement .)
    FINAL           reduce using rule 341 (else_statement -> ELSE statement .)
    STRICTFP        reduce using rule 341 (else_statement -> ELSE statement .)
    CLASS           reduce using rule 341 (else_statement -> ELSE statement .)
    ENUM            reduce using rule 341 (else_statement -> ELSE statement .)
    INTERFACE       reduce using rule 341 (else_statement -> ELSE statement .)
    AT              reduce using rule 341 (else_statement -> ELSE statement .)
    BOOLEAN         reduce using rule 341 (else_statement -> ELSE statement .)
    CHAR            reduce using rule 341 (else_statement -> ELSE statement .)
    BYTE            reduce using rule 341 (else_statement -> ELSE statement .)
    SHORT           reduce using rule 341 (else_statement -> ELSE statement .)
    INT             reduce using rule 341 (else_statement -> ELSE statement .)
    LONG            reduce using rule 341 (else_statement -> ELSE statement .)
    FLOAT           reduce using rule 341 (else_statement -> ELSE statement .)
    DOUBLE          reduce using rule 341 (else_statement -> ELSE statement .)
    PLUS            reduce using rule 341 (else_statement -> ELSE statement .)
    DASH            reduce using rule 341 (else_statement -> ELSE statement .)
    OP_INC          reduce using rule 341 (else_statement -> ELSE statement .)
    OP_DEC          reduce using rule 341 (else_statement -> ELSE statement .)
    TILDE           reduce using rule 341 (else_statement -> ELSE statement .)
    EXCLAMATION     reduce using rule 341 (else_statement -> ELSE statement .)
    LPAREN          reduce using rule 341 (else_statement -> ELSE statement .)
    THIS            reduce using rule 341 (else_statement -> ELSE statement .)
    SUPER           reduce using rule 341 (else_statement -> ELSE statement .)
    NEW             reduce using rule 341 (else_statement -> ELSE statement .)
    VOID            reduce using rule 341 (else_statement -> ELSE statement .)
    CharacterLiteral reduce using rule 341 (else_statement -> ELSE statement .)
    StringLiteral   reduce using rule 341 (else_statement -> ELSE statement .)
    NULL            reduce using rule 341 (else_statement -> ELSE statement .)
    LONG_NUMBER     reduce using rule 341 (else_statement -> ELSE statement .)
    LONG_HEX_NUMBER reduce using rule 341 (else_statement -> ELSE statement .)
    NON_INTEGER_1   reduce using rule 341 (else_statement -> ELSE statement .)
    NON_INTEGER_2   reduce using rule 341 (else_statement -> ELSE statement .)
    NON_INTEGER_3   reduce using rule 341 (else_statement -> ELSE statement .)
    NON_INTEGER_4   reduce using rule 341 (else_statement -> ELSE statement .)
    TRUE            reduce using rule 341 (else_statement -> ELSE statement .)
    FALSE           reduce using rule 341 (else_statement -> ELSE statement .)
    ELSE            reduce using rule 341 (else_statement -> ELSE statement .)
    CASE            reduce using rule 341 (else_statement -> ELSE statement .)
    DEFAULT         reduce using rule 341 (else_statement -> ELSE statement .)


state 813

    (184) COMMA_variableInitializers -> COMMA_variableInitializers COMMA . variableInitializer
    (185) COMMA_once -> COMMA .
    (180) variableInitializer -> . arrayInitializer
    (181) variableInitializer -> . expression
    (189) arrayInitializer -> . BLPAREN array_body BRPAREN
    (404) expression -> . conditionalExpression assignmentOperator_expression_empty
    (420) conditionalExpression -> . conditionalOrExpression conditionalExpressionStats
    (421) conditionalExpression -> . conditionalOrExpression
    (425) conditionalOrExpression -> . conditionalAndExpression O_conditionalAndExpressions
    (426) conditionalOrExpression -> . conditionalAndExpression
    (430) conditionalAndExpression -> . inclusiveOrExpression O_inclusiveOrExpressions
    (431) conditionalAndExpression -> . inclusiveOrExpression
    (435) inclusiveOrExpression -> . exclusiveOrExpression V_exclusiveOrExpression
    (436) inclusiveOrExpression -> . exclusiveOrExpression
    (440) exclusiveOrExpression -> . andExpression CARET_andExpressions
    (441) exclusiveOrExpression -> . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    BRPAREN         reduce using rule 185 (COMMA_once -> COMMA .)
    BLPAREN         shift and go to state 627
    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    equalityExpression             shift and go to state 108
    inclusiveOrExpression          shift and go to state 99
    multiplicativeExpression       shift and go to state 128
    exclusiveOrExpression          shift and go to state 110
    conditionalAndExpression       shift and go to state 89
    FloatingPointLiteral           shift and go to state 119
    shiftExpression                shift and go to state 130
    arrayInitializer               shift and go to state 629
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    integerLiteral                 shift and go to state 98
    additiveExpression             shift and go to state 102
    conditionalExpression          shift and go to state 266
    unaryExpression                shift and go to state 131
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    relationalExpression           shift and go to state 95
    conditionalOrExpression        shift and go to state 109
    instanceOfExpression           shift and go to state 96
    castExpression                 shift and go to state 137
    variableInitializer            shift and go to state 836
    unaryExpressionNotPlusMinus    shift and go to state 105
    primitiveType                  shift and go to state 122
    andExpression                  shift and go to state 106
    expression                     shift and go to state 631

state 814

    (187) array_body -> variableInitializer COMMA_variableInitializers COMMA_once .

    BRPAREN         reduce using rule 187 (array_body -> variableInitializer COMMA_variableInitializers COMMA_once .)


state 815

    (182) COMMA_variableInitializer -> COMMA variableInitializer .

    COMMA           reduce using rule 182 (COMMA_variableInitializer -> COMMA variableInitializer .)
    BRPAREN         reduce using rule 182 (COMMA_variableInitializer -> COMMA variableInitializer .)


state 816

    (158) voidInterfaceMethodDeclaratorRest -> formalParameters throwList SEMI .

    BRPAREN         reduce using rule 158 (voidInterfaceMethodDeclaratorRest -> formalParameters throwList SEMI .)
    SEMI            reduce using rule 158 (voidInterfaceMethodDeclaratorRest -> formalParameters throwList SEMI .)
    PUBLIC          reduce using rule 158 (voidInterfaceMethodDeclaratorRest -> formalParameters throwList SEMI .)
    PROTECTED       reduce using rule 158 (voidInterfaceMethodDeclaratorRest -> formalParameters throwList SEMI .)
    PRIVATE         reduce using rule 158 (voidInterfaceMethodDeclaratorRest -> formalParameters throwList SEMI .)
    STATIC          reduce using rule 158 (voidInterfaceMethodDeclaratorRest -> formalParameters throwList SEMI .)
    ABSTRACT        reduce using rule 158 (voidInterfaceMethodDeclaratorRest -> formalParameters throwList SEMI .)
    FINAL           reduce using rule 158 (voidInterfaceMethodDeclaratorRest -> formalParameters throwList SEMI .)
    NATIVE          reduce using rule 158 (voidInterfaceMethodDeclaratorRest -> formalParameters throwList SEMI .)
    SYNCHRONIZED    reduce using rule 158 (voidInterfaceMethodDeclaratorRest -> formalParameters throwList SEMI .)
    TRANSIENT       reduce using rule 158 (voidInterfaceMethodDeclaratorRest -> formalParameters throwList SEMI .)
    VOLATILE        reduce using rule 158 (voidInterfaceMethodDeclaratorRest -> formalParameters throwList SEMI .)
    STRICTFP        reduce using rule 158 (voidInterfaceMethodDeclaratorRest -> formalParameters throwList SEMI .)
    AT              reduce using rule 158 (voidInterfaceMethodDeclaratorRest -> formalParameters throwList SEMI .)


state 817

    (154) interfaceMethodDeclaratorRest -> formalParameters arrays SEMI .

    BRPAREN         reduce using rule 154 (interfaceMethodDeclaratorRest -> formalParameters arrays SEMI .)
    SEMI            reduce using rule 154 (interfaceMethodDeclaratorRest -> formalParameters arrays SEMI .)
    PUBLIC          reduce using rule 154 (interfaceMethodDeclaratorRest -> formalParameters arrays SEMI .)
    PROTECTED       reduce using rule 154 (interfaceMethodDeclaratorRest -> formalParameters arrays SEMI .)
    PRIVATE         reduce using rule 154 (interfaceMethodDeclaratorRest -> formalParameters arrays SEMI .)
    STATIC          reduce using rule 154 (interfaceMethodDeclaratorRest -> formalParameters arrays SEMI .)
    ABSTRACT        reduce using rule 154 (interfaceMethodDeclaratorRest -> formalParameters arrays SEMI .)
    FINAL           reduce using rule 154 (interfaceMethodDeclaratorRest -> formalParameters arrays SEMI .)
    NATIVE          reduce using rule 154 (interfaceMethodDeclaratorRest -> formalParameters arrays SEMI .)
    SYNCHRONIZED    reduce using rule 154 (interfaceMethodDeclaratorRest -> formalParameters arrays SEMI .)
    TRANSIENT       reduce using rule 154 (interfaceMethodDeclaratorRest -> formalParameters arrays SEMI .)
    VOLATILE        reduce using rule 154 (interfaceMethodDeclaratorRest -> formalParameters arrays SEMI .)
    STRICTFP        reduce using rule 154 (interfaceMethodDeclaratorRest -> formalParameters arrays SEMI .)
    AT              reduce using rule 154 (interfaceMethodDeclaratorRest -> formalParameters arrays SEMI .)


state 818

    (152) interfaceMethodDeclaratorRest -> formalParameters arrays throwList . SEMI

    SEMI            shift and go to state 837


state 819

    (153) interfaceMethodDeclaratorRest -> formalParameters throwList SEMI .

    BRPAREN         reduce using rule 153 (interfaceMethodDeclaratorRest -> formalParameters throwList SEMI .)
    SEMI            reduce using rule 153 (interfaceMethodDeclaratorRest -> formalParameters throwList SEMI .)
    PUBLIC          reduce using rule 153 (interfaceMethodDeclaratorRest -> formalParameters throwList SEMI .)
    PROTECTED       reduce using rule 153 (interfaceMethodDeclaratorRest -> formalParameters throwList SEMI .)
    PRIVATE         reduce using rule 153 (interfaceMethodDeclaratorRest -> formalParameters throwList SEMI .)
    STATIC          reduce using rule 153 (interfaceMethodDeclaratorRest -> formalParameters throwList SEMI .)
    ABSTRACT        reduce using rule 153 (interfaceMethodDeclaratorRest -> formalParameters throwList SEMI .)
    FINAL           reduce using rule 153 (interfaceMethodDeclaratorRest -> formalParameters throwList SEMI .)
    NATIVE          reduce using rule 153 (interfaceMethodDeclaratorRest -> formalParameters throwList SEMI .)
    SYNCHRONIZED    reduce using rule 153 (interfaceMethodDeclaratorRest -> formalParameters throwList SEMI .)
    TRANSIENT       reduce using rule 153 (interfaceMethodDeclaratorRest -> formalParameters throwList SEMI .)
    VOLATILE        reduce using rule 153 (interfaceMethodDeclaratorRest -> formalParameters throwList SEMI .)
    STRICTFP        reduce using rule 153 (interfaceMethodDeclaratorRest -> formalParameters throwList SEMI .)
    AT              reduce using rule 153 (interfaceMethodDeclaratorRest -> formalParameters throwList SEMI .)


state 820

    (176) constantDeclaratorRest -> arrays EQUALS variableInitializer .

    COMMA           reduce using rule 176 (constantDeclaratorRest -> arrays EQUALS variableInitializer .)
    SEMI            reduce using rule 176 (constantDeclaratorRest -> arrays EQUALS variableInitializer .)


state 821

    (173) COMMA_consts -> COMMA_consts COMMA_const .

    COMMA           reduce using rule 173 (COMMA_consts -> COMMA_consts COMMA_const .)
    SEMI            reduce using rule 173 (COMMA_consts -> COMMA_consts COMMA_const .)


state 822

    (171) COMMA_const -> COMMA constantDeclarator .

    COMMA           reduce using rule 171 (COMMA_const -> COMMA constantDeclarator .)
    SEMI            reduce using rule 171 (COMMA_const -> COMMA constantDeclarator .)


state 823

    (162) constantDeclarator -> Identifier . constantDeclaratorRest
    (176) constantDeclaratorRest -> . arrays EQUALS variableInitializer
    (177) constantDeclaratorRest -> . EQUALS variableInitializer
    (138) arrays -> . arrays array
    (139) arrays -> . array
    (137) array -> . FLPAREN FRPAREN

    EQUALS          shift and go to state 712
    FLPAREN         shift and go to state 153

    arrays                         shift and go to state 709
    constantDeclaratorRest         shift and go to state 838
    array                          shift and go to state 154

state 824

    (261) explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .

    BRPAREN         reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    ASSERT          reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    IF              reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    FOR             reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    WHILE           reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    DO              reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    TRY             reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    SWITCH          reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    SYNCHRONIZED    reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    RETURN          reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    THROW           reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    BREAK           reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    CONTINUE        reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    SEMI            reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    Identifier      reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    BLPAREN         reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    PUBLIC          reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    PROTECTED       reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    PRIVATE         reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    ABSTRACT        reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    STATIC          reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    FINAL           reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    STRICTFP        reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    CLASS           reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    ENUM            reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    INTERFACE       reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    AT              reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    BOOLEAN         reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    CHAR            reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    BYTE            reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    SHORT           reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    INT             reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    LONG            reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    FLOAT           reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    DOUBLE          reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    PLUS            reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    DASH            reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    OP_INC          reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    OP_DEC          reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    TILDE           reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    EXCLAMATION     reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    LPAREN          reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    THIS            reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    SUPER           reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    NEW             reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    VOID            reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    CharacterLiteral reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    StringLiteral   reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    NULL            reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    LONG_NUMBER     reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    LONG_HEX_NUMBER reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    NON_INTEGER_1   reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    NON_INTEGER_2   reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    NON_INTEGER_3   reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    NON_INTEGER_4   reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    TRUE            reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)
    FALSE           reduce using rule 261 (explicitConstructorInvocation -> nonWildcardTypeArguments THIS arguments SEMI .)


state 825

    (262) explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .

    BRPAREN         reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    ASSERT          reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    IF              reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    FOR             reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    WHILE           reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    DO              reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    TRY             reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    SWITCH          reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    SYNCHRONIZED    reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    RETURN          reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    THROW           reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    BREAK           reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    CONTINUE        reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    SEMI            reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    Identifier      reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    BLPAREN         reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    PUBLIC          reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    PROTECTED       reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    PRIVATE         reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    ABSTRACT        reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    STATIC          reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    FINAL           reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    STRICTFP        reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    CLASS           reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    ENUM            reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    INTERFACE       reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    AT              reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    BOOLEAN         reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    CHAR            reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    BYTE            reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    SHORT           reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    INT             reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    LONG            reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    FLOAT           reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    DOUBLE          reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    PLUS            reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    DASH            reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    OP_INC          reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    OP_DEC          reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    TILDE           reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    EXCLAMATION     reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    LPAREN          reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    THIS            reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    SUPER           reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    NEW             reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    VOID            reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    CharacterLiteral reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    StringLiteral   reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    NULL            reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    LONG_NUMBER     reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    LONG_HEX_NUMBER reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    NON_INTEGER_1   reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    NON_INTEGER_2   reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    NON_INTEGER_3   reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    NON_INTEGER_4   reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    TRUE            reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)
    FALSE           reduce using rule 262 (explicitConstructorInvocation -> nonWildcardTypeArguments SUPER arguments SEMI .)


state 826

    (265) explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER . arguments SEMI
    (555) arguments -> . LPAREN expressionList_once RPAREN

    LPAREN          shift and go to state 199

    arguments                      shift and go to state 839

state 827

    (266) explicitConstructorInvocation -> primary DOT SUPER arguments . SEMI
    (551) superSuffix -> arguments .

  ! shift/reduce conflict for SEMI resolved as shift
    SEMI            shift and go to state 840
    OP_INC          reduce using rule 551 (superSuffix -> arguments .)
    OP_DEC          reduce using rule 551 (superSuffix -> arguments .)
    DOT             reduce using rule 551 (superSuffix -> arguments .)
    FLPAREN         reduce using rule 551 (superSuffix -> arguments .)
    MULT            reduce using rule 551 (superSuffix -> arguments .)
    SLASH           reduce using rule 551 (superSuffix -> arguments .)
    PERCENT         reduce using rule 551 (superSuffix -> arguments .)
    PLUS            reduce using rule 551 (superSuffix -> arguments .)
    DASH            reduce using rule 551 (superSuffix -> arguments .)
    OP_SHR          reduce using rule 551 (superSuffix -> arguments .)
    OP_SHRR         reduce using rule 551 (superSuffix -> arguments .)
    OP_SHL          reduce using rule 551 (superSuffix -> arguments .)
    OP_LE           reduce using rule 551 (superSuffix -> arguments .)
    OP_GE           reduce using rule 551 (superSuffix -> arguments .)
    LESS            reduce using rule 551 (superSuffix -> arguments .)
    MORE            reduce using rule 551 (superSuffix -> arguments .)
    INSTANCEOF      reduce using rule 551 (superSuffix -> arguments .)
    OP_EQ           reduce using rule 551 (superSuffix -> arguments .)
    OP_NE           reduce using rule 551 (superSuffix -> arguments .)
    AND             reduce using rule 551 (superSuffix -> arguments .)
    CARET           reduce using rule 551 (superSuffix -> arguments .)
    VERTICAL        reduce using rule 551 (superSuffix -> arguments .)
    OP_LAND         reduce using rule 551 (superSuffix -> arguments .)
    OP_LOR          reduce using rule 551 (superSuffix -> arguments .)
    QUES            reduce using rule 551 (superSuffix -> arguments .)
    EQUALS          reduce using rule 551 (superSuffix -> arguments .)
    ASS_ADD         reduce using rule 551 (superSuffix -> arguments .)
    ASS_SUB         reduce using rule 551 (superSuffix -> arguments .)
    ASS_MUL         reduce using rule 551 (superSuffix -> arguments .)
    ASS_DIV         reduce using rule 551 (superSuffix -> arguments .)
    ASS_AND         reduce using rule 551 (superSuffix -> arguments .)
    ASS_OR          reduce using rule 551 (superSuffix -> arguments .)
    ASS_XOR         reduce using rule 551 (superSuffix -> arguments .)
    ASS_MOD         reduce using rule 551 (superSuffix -> arguments .)
    ASS_SHL         reduce using rule 551 (superSuffix -> arguments .)
    ASS_SHRR        reduce using rule 551 (superSuffix -> arguments .)
    ASS_SHR         reduce using rule 551 (superSuffix -> arguments .)

  ! SEMI            [ reduce using rule 551 (superSuffix -> arguments .) ]


state 828

    (388) forControl -> forInit_or_empty SEMI expression_or_empty SEMI . forUpdate_empty
    (385) forUpdate_empty -> . forUpdate
    (386) forUpdate_empty -> .
    (393) forUpdate -> . expressionList
    (398) expressionList -> . expression COMMA_expressions
    (399) expressionList -> . expression
    (404) expression -> . conditionalExpression assignmentOperator_expression_empty
    (420) conditionalExpression -> . conditionalOrExpression conditionalExpressionStats
    (421) conditionalExpression -> . conditionalOrExpression
    (425) conditionalOrExpression -> . conditionalAndExpression O_conditionalAndExpressions
    (426) conditionalOrExpression -> . conditionalAndExpression
    (430) conditionalAndExpression -> . inclusiveOrExpression O_inclusiveOrExpressions
    (431) conditionalAndExpression -> . inclusiveOrExpression
    (435) inclusiveOrExpression -> . exclusiveOrExpression V_exclusiveOrExpression
    (436) inclusiveOrExpression -> . exclusiveOrExpression
    (440) exclusiveOrExpression -> . andExpression CARET_andExpressions
    (441) exclusiveOrExpression -> . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    RPAREN          reduce using rule 386 (forUpdate_empty -> .)
    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    equalityExpression             shift and go to state 108
    inclusiveOrExpression          shift and go to state 99
    multiplicativeExpression       shift and go to state 128
    exclusiveOrExpression          shift and go to state 110
    conditionalAndExpression       shift and go to state 89
    forUpdate                      shift and go to state 841
    shiftExpression                shift and go to state 130
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    expressionList                 shift and go to state 842
    integerLiteral                 shift and go to state 98
    additiveExpression             shift and go to state 102
    instanceOfExpression           shift and go to state 96
    conditionalExpression          shift and go to state 266
    unaryExpression                shift and go to state 131
    FloatingPointLiteral           shift and go to state 119
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    relationalExpression           shift and go to state 95
    conditionalOrExpression        shift and go to state 109
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    primitiveType                  shift and go to state 122
    forUpdate_empty                shift and go to state 843
    andExpression                  shift and go to state 106
    expression                     shift and go to state 364

state 829

    (392) enhancedForControl -> type Identifier COLON expression .

    RPAREN          reduce using rule 392 (enhancedForControl -> type Identifier COLON expression .)


state 830

    (391) enhancedForControl -> variableModifiers type Identifier COLON . expression
    (404) expression -> . conditionalExpression assignmentOperator_expression_empty
    (420) conditionalExpression -> . conditionalOrExpression conditionalExpressionStats
    (421) conditionalExpression -> . conditionalOrExpression
    (425) conditionalOrExpression -> . conditionalAndExpression O_conditionalAndExpressions
    (426) conditionalOrExpression -> . conditionalAndExpression
    (430) conditionalAndExpression -> . inclusiveOrExpression O_inclusiveOrExpressions
    (431) conditionalAndExpression -> . inclusiveOrExpression
    (435) inclusiveOrExpression -> . exclusiveOrExpression V_exclusiveOrExpression
    (436) inclusiveOrExpression -> . exclusiveOrExpression
    (440) exclusiveOrExpression -> . andExpression CARET_andExpressions
    (441) exclusiveOrExpression -> . andExpression
    (445) andExpression -> . equalityExpression AND_equalityExpressions
    (446) andExpression -> . equalityExpression
    (451) equalityExpression -> . instanceOfExpression instanceOfExpressionStats
    (452) equalityExpression -> . instanceOfExpression
    (455) instanceOfExpression -> . relationalExpression INSTANCEOF_type_once
    (459) relationalExpression -> . shiftExpression re_shiftExpressions
    (460) relationalExpression -> . shiftExpression
    (468) shiftExpression -> . additiveExpression sh_additiveExpressions
    (469) shiftExpression -> . additiveExpression
    (477) additiveExpression -> . multiplicativeExpression add_multiplicativeExpressions
    (478) additiveExpression -> . multiplicativeExpression
    (484) multiplicativeExpression -> . unaryExpression mu_unaryExpressions
    (485) multiplicativeExpression -> . unaryExpression
    (486) unaryExpression -> . PLUS unaryExpression
    (487) unaryExpression -> . DASH unaryExpression
    (488) unaryExpression -> . OP_INC unaryExpression
    (489) unaryExpression -> . OP_DEC unaryExpression
    (490) unaryExpression -> . unaryExpressionNotPlusMinus
    (496) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (497) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (498) unaryExpressionNotPlusMinus -> . castExpression
    (499) unaryExpressionNotPlusMinus -> . primary selectors INC_DEC_empty
    (500) unaryExpressionNotPlusMinus -> . primary INC_DEC_empty
    (501) castExpression -> . LPAREN primitiveType RPAREN unaryExpression
    (502) castExpression -> . LPAREN type RPAREN unaryExpressionNotPlusMinus
    (503) castExpression -> . LPAREN expression RPAREN unaryExpressionNotPlusMinus
    (506) primary -> . parExpression
    (507) primary -> . THIS DOT_Identifiers identifierSuffix_empty
    (508) primary -> . THIS identifierSuffix_empty
    (509) primary -> . SUPER superSuffix
    (510) primary -> . literal
    (511) primary -> . NEW creator
    (512) primary -> . Identifier DOT_Identifiers identifierSuffix_empty
    (513) primary -> . Identifier identifierSuffix_empty
    (514) primary -> . primitiveType arrays DOT CLASS
    (515) primary -> . primitiveType DOT CLASS
    (516) primary -> . VOID DOT CLASS
    (394) parExpression -> . LPAREN expression RPAREN
    (273) literal -> . integerLiteral
    (274) literal -> . FloatingPointLiteral
    (275) literal -> . CharacterLiteral
    (276) literal -> . StringLiteral
    (277) literal -> . booleanLiteral
    (278) literal -> . NULL
    (221) primitiveType -> . BOOLEAN
    (222) primitiveType -> . CHAR
    (223) primitiveType -> . BYTE
    (224) primitiveType -> . SHORT
    (225) primitiveType -> . INT
    (226) primitiveType -> . LONG
    (227) primitiveType -> . FLOAT
    (228) primitiveType -> . DOUBLE
    (560) integerLiteral -> . LONG_NUMBER
    (561) integerLiteral -> . LONG_HEX_NUMBER
    (556) FloatingPointLiteral -> . NON_INTEGER_1
    (557) FloatingPointLiteral -> . NON_INTEGER_2
    (558) FloatingPointLiteral -> . NON_INTEGER_3
    (559) FloatingPointLiteral -> . NON_INTEGER_4
    (279) booleanLiteral -> . TRUE
    (280) booleanLiteral -> . FALSE

    PLUS            shift and go to state 93
    DASH            shift and go to state 94
    OP_INC          shift and go to state 112
    OP_DEC          shift and go to state 114
    TILDE           shift and go to state 117
    EXCLAMATION     shift and go to state 87
    LPAREN          shift and go to state 134
    THIS            shift and go to state 97
    SUPER           shift and go to state 138
    NEW             shift and go to state 115
    Identifier      shift and go to state 178
    VOID            shift and go to state 88
    CharacterLiteral shift and go to state 104
    StringLiteral   shift and go to state 121
    NULL            shift and go to state 129
    BOOLEAN         shift and go to state 76
    CHAR            shift and go to state 75
    BYTE            shift and go to state 79
    SHORT           shift and go to state 70
    INT             shift and go to state 82
    LONG            shift and go to state 78
    FLOAT           shift and go to state 73
    DOUBLE          shift and go to state 72
    LONG_NUMBER     shift and go to state 100
    LONG_HEX_NUMBER shift and go to state 113
    NON_INTEGER_1   shift and go to state 127
    NON_INTEGER_2   shift and go to state 125
    NON_INTEGER_3   shift and go to state 126
    NON_INTEGER_4   shift and go to state 124
    TRUE            shift and go to state 90
    FALSE           shift and go to state 120

    equalityExpression             shift and go to state 108
    inclusiveOrExpression          shift and go to state 99
    multiplicativeExpression       shift and go to state 128
    exclusiveOrExpression          shift and go to state 110
    conditionalAndExpression       shift and go to state 89
    shiftExpression                shift and go to state 130
    booleanLiteral                 shift and go to state 92
    literal                        shift and go to state 116
    integerLiteral                 shift and go to state 98
    additiveExpression             shift and go to state 102
    instanceOfExpression           shift and go to state 96
    conditionalExpression          shift and go to state 266
    unaryExpression                shift and go to state 131
    FloatingPointLiteral           shift and go to state 119
    parExpression                  shift and go to state 132
    primary                        shift and go to state 111
    relationalExpression           shift and go to state 95
    conditionalOrExpression        shift and go to state 109
    castExpression                 shift and go to state 137
    unaryExpressionNotPlusMinus    shift and go to state 105
    primitiveType                  shift and go to state 122
    andExpression                  shift and go to state 106
    expression                     shift and go to state 844

state 831

    (371) formalParameter -> type variableDeclaratorId .

    RPAREN          reduce using rule 371 (formalParameter -> type variableDeclaratorId .)


state 832

    (369) catchClause -> CATCH LPAREN formalParameter RPAREN . block
    (329) block -> . BLPAREN blockStatements BRPAREN
    (330) block -> . BLPAREN BRPAREN

    BLPAREN         shift and go to state 335

    block                          shift and go to state 845

state 833

    (370) formalParameter -> variableModifiers type . variableDeclaratorId
    (178) variableDeclaratorId -> . Identifier arrays
    (179) variableDeclaratorId -> . Identifier

    Identifier      shift and go to state 609

    variableDeclaratorId           shift and go to state 846

state 834

    (381) switchLabel -> CASE enumConstantName COLON .

    CASE            reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    DEFAULT         reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    ASSERT          reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    IF              reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    FOR             reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    WHILE           reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    DO              reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    TRY             reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    SWITCH          reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    SYNCHRONIZED    reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    RETURN          reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    THROW           reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    BREAK           reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    CONTINUE        reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    SEMI            reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    Identifier      reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    BLPAREN         reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    PUBLIC          reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    PROTECTED       reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    PRIVATE         reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    ABSTRACT        reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    STATIC          reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    FINAL           reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    STRICTFP        reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    CLASS           reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    ENUM            reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    INTERFACE       reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    AT              reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    BOOLEAN         reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    CHAR            reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    BYTE            reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    SHORT           reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    INT             reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    LONG            reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    FLOAT           reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    DOUBLE          reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    PLUS            reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    DASH            reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    OP_INC          reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    OP_DEC          reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    TILDE           reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    EXCLAMATION     reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    LPAREN          reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    THIS            reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    SUPER           reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    NEW             reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    VOID            reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    CharacterLiteral reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    StringLiteral   reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    NULL            reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    LONG_NUMBER     reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    LONG_HEX_NUMBER reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    NON_INTEGER_1   reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    NON_INTEGER_2   reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    NON_INTEGER_3   reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    NON_INTEGER_4   reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    TRUE            reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    FALSE           reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)
    BRPAREN         reduce using rule 381 (switchLabel -> CASE enumConstantName COLON .)


state 835

    (380) switchLabel -> CASE constantExpression COLON .

    CASE            reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    DEFAULT         reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    ASSERT          reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    IF              reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    FOR             reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    WHILE           reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    DO              reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    TRY             reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    SWITCH          reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    SYNCHRONIZED    reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    RETURN          reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    THROW           reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    BREAK           reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    CONTINUE        reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    SEMI            reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    Identifier      reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    BLPAREN         reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    PUBLIC          reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    PROTECTED       reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    PRIVATE         reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    ABSTRACT        reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    STATIC          reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    FINAL           reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    STRICTFP        reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    CLASS           reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    ENUM            reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    INTERFACE       reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    AT              reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    BOOLEAN         reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    CHAR            reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    BYTE            reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    SHORT           reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    INT             reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    LONG            reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    FLOAT           reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    DOUBLE          reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    PLUS            reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    DASH            reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    OP_INC          reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    OP_DEC          reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    TILDE           reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    EXCLAMATION     reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    LPAREN          reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    THIS            reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    SUPER           reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    NEW             reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    VOID            reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    CharacterLiteral reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    StringLiteral   reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    NULL            reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    LONG_NUMBER     reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    LONG_HEX_NUMBER reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    NON_INTEGER_1   reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    NON_INTEGER_2   reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    NON_INTEGER_3   reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    NON_INTEGER_4   reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    TRUE            reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    FALSE           reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)
    BRPAREN         reduce using rule 380 (switchLabel -> CASE constantExpression COLON .)


state 836

    (184) COMMA_variableInitializers -> COMMA_variableInitializers COMMA variableInitializer .

    COMMA           reduce using rule 184 (COMMA_variableInitializers -> COMMA_variableInitializers COMMA variableInitializer .)
    BRPAREN         reduce using rule 184 (COMMA_variableInitializers -> COMMA_variableInitializers COMMA variableInitializer .)


state 837

    (152) interfaceMethodDeclaratorRest -> formalParameters arrays throwList SEMI .

    BRPAREN         reduce using rule 152 (interfaceMethodDeclaratorRest -> formalParameters arrays throwList SEMI .)
    SEMI            reduce using rule 152 (interfaceMethodDeclaratorRest -> formalParameters arrays throwList SEMI .)
    PUBLIC          reduce using rule 152 (interfaceMethodDeclaratorRest -> formalParameters arrays throwList SEMI .)
    PROTECTED       reduce using rule 152 (interfaceMethodDeclaratorRest -> formalParameters arrays throwList SEMI .)
    PRIVATE         reduce using rule 152 (interfaceMethodDeclaratorRest -> formalParameters arrays throwList SEMI .)
    STATIC          reduce using rule 152 (interfaceMethodDeclaratorRest -> formalParameters arrays throwList SEMI .)
    ABSTRACT        reduce using rule 152 (interfaceMethodDeclaratorRest -> formalParameters arrays throwList SEMI .)
    FINAL           reduce using rule 152 (interfaceMethodDeclaratorRest -> formalParameters arrays throwList SEMI .)
    NATIVE          reduce using rule 152 (interfaceMethodDeclaratorRest -> formalParameters arrays throwList SEMI .)
    SYNCHRONIZED    reduce using rule 152 (interfaceMethodDeclaratorRest -> formalParameters arrays throwList SEMI .)
    TRANSIENT       reduce using rule 152 (interfaceMethodDeclaratorRest -> formalParameters arrays throwList SEMI .)
    VOLATILE        reduce using rule 152 (interfaceMethodDeclaratorRest -> formalParameters arrays throwList SEMI .)
    STRICTFP        reduce using rule 152 (interfaceMethodDeclaratorRest -> formalParameters arrays throwList SEMI .)
    AT              reduce using rule 152 (interfaceMethodDeclaratorRest -> formalParameters arrays throwList SEMI .)


state 838

    (162) constantDeclarator -> Identifier constantDeclaratorRest .

    COMMA           reduce using rule 162 (constantDeclarator -> Identifier constantDeclaratorRest .)
    SEMI            reduce using rule 162 (constantDeclarator -> Identifier constantDeclaratorRest .)


state 839

    (265) explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments . SEMI

    SEMI            shift and go to state 847


state 840

    (266) explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .

    BRPAREN         reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    ASSERT          reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    IF              reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    FOR             reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    WHILE           reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    DO              reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    TRY             reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    SWITCH          reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    SYNCHRONIZED    reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    RETURN          reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    THROW           reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    BREAK           reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    CONTINUE        reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    SEMI            reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    Identifier      reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    BLPAREN         reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    PUBLIC          reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    PROTECTED       reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    PRIVATE         reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    ABSTRACT        reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    STATIC          reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    FINAL           reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    STRICTFP        reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    CLASS           reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    ENUM            reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    INTERFACE       reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    AT              reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    BOOLEAN         reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    CHAR            reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    BYTE            reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    SHORT           reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    INT             reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    LONG            reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    FLOAT           reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    DOUBLE          reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    PLUS            reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    DASH            reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    OP_INC          reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    OP_DEC          reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    TILDE           reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    EXCLAMATION     reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    LPAREN          reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    THIS            reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    SUPER           reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    NEW             reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    VOID            reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    CharacterLiteral reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    StringLiteral   reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    NULL            reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    LONG_NUMBER     reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    LONG_HEX_NUMBER reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    NON_INTEGER_1   reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    NON_INTEGER_2   reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    NON_INTEGER_3   reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    NON_INTEGER_4   reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    TRUE            reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)
    FALSE           reduce using rule 266 (explicitConstructorInvocation -> primary DOT SUPER arguments SEMI .)


state 841

    (385) forUpdate_empty -> forUpdate .

    RPAREN          reduce using rule 385 (forUpdate_empty -> forUpdate .)


state 842

    (393) forUpdate -> expressionList .

    RPAREN          reduce using rule 393 (forUpdate -> expressionList .)


state 843

    (388) forControl -> forInit_or_empty SEMI expression_or_empty SEMI forUpdate_empty .

    RPAREN          reduce using rule 388 (forControl -> forInit_or_empty SEMI expression_or_empty SEMI forUpdate_empty .)


state 844

    (391) enhancedForControl -> variableModifiers type Identifier COLON expression .

    RPAREN          reduce using rule 391 (enhancedForControl -> variableModifiers type Identifier COLON expression .)


state 845

    (369) catchClause -> CATCH LPAREN formalParameter RPAREN block .

    CATCH           reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    FINALLY         reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    BRPAREN         reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    ASSERT          reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    IF              reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    FOR             reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    WHILE           reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    DO              reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    TRY             reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    SWITCH          reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    SYNCHRONIZED    reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    RETURN          reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    THROW           reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    BREAK           reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    CONTINUE        reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    SEMI            reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    Identifier      reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    BLPAREN         reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    PUBLIC          reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    PROTECTED       reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    PRIVATE         reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    ABSTRACT        reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    STATIC          reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    FINAL           reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    STRICTFP        reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    CLASS           reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    ENUM            reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    INTERFACE       reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    AT              reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    BOOLEAN         reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    CHAR            reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    BYTE            reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    SHORT           reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    INT             reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    LONG            reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    FLOAT           reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    DOUBLE          reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    PLUS            reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    DASH            reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    OP_INC          reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    OP_DEC          reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    TILDE           reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    EXCLAMATION     reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    LPAREN          reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    THIS            reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    SUPER           reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    NEW             reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    VOID            reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    CharacterLiteral reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    StringLiteral   reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    NULL            reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    LONG_NUMBER     reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    LONG_HEX_NUMBER reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    NON_INTEGER_1   reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    NON_INTEGER_2   reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    NON_INTEGER_3   reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    NON_INTEGER_4   reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    TRUE            reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    FALSE           reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    ELSE            reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    CASE            reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)
    DEFAULT         reduce using rule 369 (catchClause -> CATCH LPAREN formalParameter RPAREN block .)


state 846

    (370) formalParameter -> variableModifiers type variableDeclaratorId .

    RPAREN          reduce using rule 370 (formalParameter -> variableModifiers type variableDeclaratorId .)


state 847

    (265) explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .

    BRPAREN         reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    ASSERT          reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    IF              reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    FOR             reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    WHILE           reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    DO              reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    TRY             reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    SWITCH          reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    SYNCHRONIZED    reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    RETURN          reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    THROW           reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    BREAK           reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    CONTINUE        reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    SEMI            reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    Identifier      reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    BLPAREN         reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    PUBLIC          reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    PROTECTED       reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    PRIVATE         reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    ABSTRACT        reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    STATIC          reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    FINAL           reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    STRICTFP        reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    CLASS           reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    ENUM            reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    INTERFACE       reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    AT              reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    BOOLEAN         reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    CHAR            reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    BYTE            reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    SHORT           reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    INT             reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    LONG            reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    FLOAT           reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    DOUBLE          reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    PLUS            reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    DASH            reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    OP_INC          reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    OP_DEC          reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    TILDE           reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    EXCLAMATION     reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    LPAREN          reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    THIS            reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    SUPER           reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    NEW             reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    VOID            reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    CharacterLiteral reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    StringLiteral   reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    NULL            reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    LONG_NUMBER     reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    LONG_HEX_NUMBER reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    NON_INTEGER_1   reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    NON_INTEGER_2   reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    NON_INTEGER_3   reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    NON_INTEGER_4   reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    TRUE            reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)
    FALSE           reduce using rule 265 (explicitConstructorInvocation -> primary DOT nonWildcardTypeArguments SUPER arguments SEMI .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for DOT in state 97 resolved as shift
WARNING: shift/reduce conflict for FLPAREN in state 97 resolved as shift
WARNING: shift/reduce conflict for DOT in state 103 resolved as shift
WARNING: shift/reduce conflict for FLPAREN in state 103 resolved as shift
WARNING: shift/reduce conflict for QUES in state 109 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 165 resolved as shift
WARNING: shift/reduce conflict for VOID in state 166 resolved as shift
WARNING: shift/reduce conflict for Identifier in state 166 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 166 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 166 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 166 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 166 resolved as shift
WARNING: shift/reduce conflict for INT in state 166 resolved as shift
WARNING: shift/reduce conflict for LONG in state 166 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 166 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 166 resolved as shift
WARNING: shift/reduce conflict for DOT in state 178 resolved as shift
WARNING: shift/reduce conflict for FLPAREN in state 178 resolved as shift
WARNING: shift/reduce conflict for DOT in state 191 resolved as shift
WARNING: shift/reduce conflict for FLPAREN in state 191 resolved as shift
WARNING: shift/reduce conflict for FLPAREN in state 196 resolved as shift
WARNING: shift/reduce conflict for DOT in state 213 resolved as shift
WARNING: shift/reduce conflict for FLPAREN in state 213 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 220 resolved as shift
WARNING: shift/reduce conflict for QUES in state 225 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 266 resolved as shift
WARNING: shift/reduce conflict for ASS_ADD in state 266 resolved as shift
WARNING: shift/reduce conflict for ASS_SUB in state 266 resolved as shift
WARNING: shift/reduce conflict for ASS_MUL in state 266 resolved as shift
WARNING: shift/reduce conflict for ASS_DIV in state 266 resolved as shift
WARNING: shift/reduce conflict for ASS_AND in state 266 resolved as shift
WARNING: shift/reduce conflict for ASS_OR in state 266 resolved as shift
WARNING: shift/reduce conflict for ASS_XOR in state 266 resolved as shift
WARNING: shift/reduce conflict for ASS_MOD in state 266 resolved as shift
WARNING: shift/reduce conflict for ASS_SHL in state 266 resolved as shift
WARNING: shift/reduce conflict for ASS_SHRR in state 266 resolved as shift
WARNING: shift/reduce conflict for ASS_SHR in state 266 resolved as shift
WARNING: shift/reduce conflict for LESS in state 267 resolved as shift
WARNING: shift/reduce conflict for FLPAREN in state 267 resolved as shift
WARNING: shift/reduce conflict for DOT in state 267 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 268 resolved as shift
WARNING: shift/reduce conflict for VOID in state 306 resolved as shift
WARNING: shift/reduce conflict for Identifier in state 306 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 306 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 306 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 306 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 306 resolved as shift
WARNING: shift/reduce conflict for INT in state 306 resolved as shift
WARNING: shift/reduce conflict for LONG in state 306 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 306 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 306 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 321 resolved as shift
WARNING: shift/reduce conflict for VOID in state 332 resolved as shift
WARNING: shift/reduce conflict for Identifier in state 332 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 332 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 332 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 332 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 332 resolved as shift
WARNING: shift/reduce conflict for INT in state 332 resolved as shift
WARNING: shift/reduce conflict for LONG in state 332 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 332 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 332 resolved as shift
WARNING: shift/reduce conflict for VOID in state 333 resolved as shift
WARNING: shift/reduce conflict for Identifier in state 333 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 333 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 333 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 333 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 333 resolved as shift
WARNING: shift/reduce conflict for INT in state 333 resolved as shift
WARNING: shift/reduce conflict for LONG in state 333 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 333 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 333 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 379 resolved as shift
WARNING: shift/reduce conflict for VOID in state 453 resolved as shift
WARNING: shift/reduce conflict for Identifier in state 453 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 453 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 453 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 453 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 453 resolved as shift
WARNING: shift/reduce conflict for INT in state 453 resolved as shift
WARNING: shift/reduce conflict for LONG in state 453 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 453 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 453 resolved as shift
WARNING: shift/reduce conflict for VOID in state 457 resolved as shift
WARNING: shift/reduce conflict for Identifier in state 457 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 457 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 457 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 457 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 457 resolved as shift
WARNING: shift/reduce conflict for INT in state 457 resolved as shift
WARNING: shift/reduce conflict for LONG in state 457 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 457 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 457 resolved as shift
WARNING: shift/reduce conflict for LESS in state 495 resolved as shift
WARNING: shift/reduce conflict for FLPAREN in state 495 resolved as shift
WARNING: shift/reduce conflict for DOT in state 495 resolved as shift
WARNING: shift/reduce conflict for LESS in state 546 resolved as shift
WARNING: shift/reduce conflict for DOT in state 611 resolved as shift
WARNING: shift/reduce conflict for FLPAREN in state 611 resolved as shift
WARNING: shift/reduce conflict for FLPAREN in state 628 resolved as shift
WARNING: shift/reduce conflict for DOT in state 651 resolved as shift
WARNING: shift/reduce conflict for FLPAREN in state 651 resolved as shift
WARNING: shift/reduce conflict for DOT in state 652 resolved as shift
WARNING: shift/reduce conflict for LESS in state 652 resolved as shift
WARNING: shift/reduce conflict for FLPAREN in state 652 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 691 resolved as shift
WARNING: shift/reduce conflict for FLPAREN in state 697 resolved as shift
WARNING: shift/reduce conflict for FLPAREN in state 698 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 723 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 730 resolved as shift
WARNING: shift/reduce conflict for CASE in state 753 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 753 resolved as shift
WARNING: shift/reduce conflict for FLPAREN in state 765 resolved as shift
WARNING: shift/reduce conflict for DOT in state 804 resolved as shift
WARNING: shift/reduce conflict for FLPAREN in state 804 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 827 resolved as shift
WARNING: reduce/reduce conflict in state 43 resolved using rule (typeParameters -> <empty>)
WARNING: rejected rule (typeParameters_once -> <empty>) in state 43
WARNING: reduce/reduce conflict in state 267 resolved using rule (type_body -> Identifier)
WARNING: rejected rule (identifierSuffix_empty -> <empty>) in state 267
WARNING: reduce/reduce conflict in state 392 resolved using rule (arguments_once -> <empty>)
WARNING: rejected rule (selector -> DOT Identifier) in state 392
WARNING: reduce/reduce conflict in state 491 resolved using rule (classOrInterfaceModifier -> FINAL)
WARNING: rejected rule (variableModifier -> FINAL) in state 491
WARNING: reduce/reduce conflict in state 512 resolved using rule (classOrInterfaceModifier -> annotation)
WARNING: rejected rule (variableModifier -> annotation) in state 512
WARNING: reduce/reduce conflict in state 546 resolved using rule (classOrInterfaceTypeStatement -> DOT Identifier)
WARNING: rejected rule (DOT_Identifier -> DOT Identifier) in state 546
WARNING: reduce/reduce conflict in state 804 resolved using rule (enumConstantName -> Identifier)
WARNING: rejected rule (identifierSuffix_empty -> <empty>) in state 804
WARNING: Rule (typeParameters_once -> <empty>) is never reduced
WARNING: Rule (selector -> DOT Identifier) is never reduced
