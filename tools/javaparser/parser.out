Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    GENERIC
    NEWLINE
    GOTO
    VAR
    FUTURE
    EQUALS
    INNER
    LCOMMENT
    CAST
    MCOMMENT
    CONST
    OUTER
    REST

Grammar

Rule 0     S' -> compilationUnit
Rule 1     compilationUnit -> packageDeclaration importDeclarations typeDeclarations
Rule 2     compilationUnit -> packageDeclaration importDeclarations
Rule 3     compilationUnit -> packageDeclaration typeDeclarations
Rule 4     compilationUnit -> packageDeclaration
Rule 5     compilationUnit -> typeDeclarations
Rule 6     compilationUnit -> importDeclarations
Rule 7     compilationUnit -> importDeclarations typeDeclarations
Rule 8     compilationUnit -> empty
Rule 9     importDeclarations -> importDeclaration
Rule 10    importDeclarations -> importDeclarations importDeclaration
Rule 11    typeDeclarations -> typeDeclaration
Rule 12    typeDeclarations -> typeDeclarations typeDeclaration
Rule 13    packageDeclaration -> packageDeclarationName SEMI
Rule 14    packageDeclarationName -> modifiers PACKAGE name
Rule 15    packageDeclarationName -> PACKAGE name
Rule 16    importDeclaration -> singleTypeImportDeclaration
Rule 17    importDeclaration -> typeImportOnDemandDeclaration
Rule 18    importDeclaration -> singleStaticImportDeclaration
Rule 19    importDeclaration -> staticImportOnDemandDeclaration
Rule 20    singleTypeImportDeclaration -> IMPORT name SEMI
Rule 21    typeImportOnDemandDeclaration -> IMPORT name DOT MULT SEMI
Rule 22    singleStaticImportDeclaration -> IMPORT STATIC name SEMI
Rule 23    staticImportOnDemandDeclaration -> IMPORT STATIC name DOT MULT SEMI
Rule 24    typeDeclaration -> classDeclaration
Rule 25    typeDeclaration -> interfaceDeclaration
Rule 26    typeDeclaration -> annotationTypeDeclaration
Rule 27    typeDeclaration -> enumDeclaration
Rule 28    typeDeclaration -> SEMI
Rule 29    name -> simpleName
Rule 30    name -> qualifiedName
Rule 31    simpleName -> Identifier
Rule 32    qualifiedName -> name DOT simpleName
Rule 33    type -> primitiveType
Rule 34    type -> referenceType
Rule 35    primitiveType -> BOOLEAN
Rule 36    primitiveType -> VOID
Rule 37    primitiveType -> BYTE
Rule 38    primitiveType -> SHORT
Rule 39    primitiveType -> INT
Rule 40    primitiveType -> LONG
Rule 41    primitiveType -> CHAR
Rule 42    primitiveType -> FLOAT
Rule 43    primitiveType -> DOUBLE
Rule 44    referenceType -> classOrInterfaceType
Rule 45    referenceType -> arrayType
Rule 46    classOrInterfaceType -> classOrInterface
Rule 47    classOrInterfaceType -> genericType
Rule 48    classOrInterface -> name
Rule 49    classOrInterface -> genericType DOT name
Rule 50    genericType -> classOrInterface typeArguments
Rule 51    genericType -> classOrInterface LESS MORE
Rule 52    classType -> classOrInterfaceType
Rule 53    interfaceType -> classOrInterfaceType
Rule 54    arrayType -> genericType arrays
Rule 55    arrayType -> genericType DOT name arrays
Rule 56    arrayType -> primitiveType arrays
Rule 57    arrayType -> name arrays
Rule 58    array -> FLPAREN FRPAREN
Rule 59    arrays -> array_loop
Rule 60    array_loop -> array
Rule 61    array_loop -> array_loop array
Rule 62    arrays_opt -> arrays
Rule 63    arrays_opt -> empty
Rule 64    typeParametersHeaderName -> Identifier
Rule 65    typeParameters -> LESS typeParameterList1
Rule 66    typeParameterList -> typeParameter
Rule 67    typeParameterList -> typeParameterList COMMA typeParameter
Rule 68    typeParameter -> typeParametersHeaderName
Rule 69    typeParameter -> typeParametersHeaderName EXTENDS referenceType
Rule 70    typeParameter -> typeParametersHeaderName EXTENDS referenceType additionalBoundList
Rule 71    additionalBoundList -> additionalBound
Rule 72    additionalBoundList -> additionalBoundList additionalBound
Rule 73    additionalBound -> AND referenceType
Rule 74    typeParameterList1 -> typeParameter1
Rule 75    typeParameterList1 -> typeParameterList COMMA typeParameter1
Rule 76    typeParameter1 -> typeParametersHeaderName MORE
Rule 77    typeParameter1 -> typeParametersHeaderName EXTENDS referenceType1
Rule 78    typeParameter1 -> typeParametersHeaderName EXTENDS referenceType additionalBoundList1
Rule 79    additionalBoundList1 -> additionalBound1
Rule 80    additionalBoundList1 -> additionalBoundList additionalBound1
Rule 81    additionalBound1 -> AND referenceType1
Rule 82    typeArguments -> LESS typeArgumentList1
Rule 83    typeArgument -> referenceType
Rule 84    typeArgument -> wildcard
Rule 85    typeArgumentList -> typeArgument
Rule 86    typeArgumentList -> typeArgumentList COMMA typeArgument
Rule 87    typeArgumentList1 -> typeArgument1
Rule 88    typeArgumentList1 -> typeArgumentList COMMA typeArgument1
Rule 89    typeArgument1 -> referenceType1
Rule 90    typeArgument1 -> wildcard1
Rule 91    referenceType1 -> referenceType MORE
Rule 92    referenceType1 -> classOrInterface LESS typeArgumentList2
Rule 93    typeArgumentList2 -> typeArgument2
Rule 94    typeArgumentList2 -> typeArgumentList COMMA typeArgument2
Rule 95    typeArgument2 -> referenceType2
Rule 96    typeArgument2 -> wildcard2
Rule 97    referenceType2 -> referenceType OP_SHR
Rule 98    referenceType2 -> classOrInterface LESS typeArgumentList3
Rule 99    typeArgumentList3 -> typeArgument3
Rule 100   typeArgumentList3 -> typeArgumentList COMMA typeArgument3
Rule 101   typeArgument3 -> referenceType3
Rule 102   typeArgument3 -> wildcard3
Rule 103   referenceType3 -> referenceType OP_SHRR
Rule 104   wildcard -> QUES
Rule 105   wildcard -> QUES wildcardBounds
Rule 106   wildcardBounds -> EXTENDS referenceType
Rule 107   wildcardBounds -> SUPER referenceType
Rule 108   wildcard1 -> QUES MORE
Rule 109   wildcard1 -> QUES wildcardBounds1
Rule 110   wildcardBounds1 -> EXTENDS referenceType1
Rule 111   wildcardBounds1 -> SUPER referenceType1
Rule 112   wildcard2 -> QUES OP_SHR
Rule 113   wildcard2 -> QUES wildcardBounds2
Rule 114   wildcardBounds2 -> EXTENDS referenceType2
Rule 115   wildcardBounds2 -> SUPER referenceType2
Rule 116   wildcard3 -> QUES OP_SHRR
Rule 117   wildcard3 -> QUES wildcardBounds3
Rule 118   wildcardBounds3 -> EXTENDS referenceType3
Rule 119   wildcardBounds3 -> SUPER referenceType3
Rule 120   modifiers_opt -> modifiers
Rule 121   modifiers_opt -> empty
Rule 122   modifiers -> modifier
Rule 123   modifiers -> modifiers modifier
Rule 124   modifier -> PUBLIC
Rule 125   modifier -> PROTECTED
Rule 126   modifier -> PRIVATE
Rule 127   modifier -> STATIC
Rule 128   modifier -> ABSTRACT
Rule 129   modifier -> FINAL
Rule 130   modifier -> NATIVE
Rule 131   modifier -> SYNCHRONIZED
Rule 132   modifier -> TRANSIENT
Rule 133   modifier -> VOLATILE
Rule 134   modifier -> STRICTFP
Rule 135   modifier -> annotation
Rule 136   classDeclaration -> classHead classBody
Rule 137   classHead -> className classExtends_opt classImpls_opt
Rule 138   className -> classHeadName1 typeParameters
Rule 139   className -> classHeadName1
Rule 140   classHeadName1 -> modifiers_opt CLASS Identifier
Rule 141   classExtends_opt -> classExtends
Rule 142   classExtends_opt -> empty
Rule 143   classImpls_opt -> classImpls
Rule 144   classImpls_opt -> empty
Rule 145   classExtends -> EXTENDS classType
Rule 146   classImpls -> IMPLEMENTS interfaceTypeList
Rule 147   interfaceTypeList -> interfaceType
Rule 148   interfaceTypeList -> interfaceTypeList COMMA interfaceType
Rule 149   typeParameters_opt -> typeParameters
Rule 150   typeParameters_opt -> empty
Rule 151   classBody -> BLPAREN classBodyDeclarations_opt BRPAREN
Rule 152   classBodyDeclarations_opt -> classBodyDeclarations
Rule 153   classBodyDeclarations_opt -> empty
Rule 154   classBodyDeclarations -> classBodyDeclaration
Rule 155   classBodyDeclarations -> classBodyDeclarations classBodyDeclaration
Rule 156   classBodyDeclaration -> classMemberDeclaration
Rule 157   classBodyDeclaration -> staticInitializer
Rule 158   classBodyDeclaration -> constructorDeclaration
Rule 159   classBodyDeclaration -> block
Rule 160   staticInitializer -> STATIC block
Rule 161   constructorDeclaration -> constructorHead methodBody
Rule 162   constructorHead -> constructorName formalParameterList_opt RPAREN methodHeadThrowList_opt
Rule 163   constructorName -> modifiers_opt typeParameters Identifier LPAREN
Rule 164   constructorName -> modifiers_opt Identifier LPAREN
Rule 165   formalParameterList_opt -> formalParameterList
Rule 166   formalParameterList_opt -> empty
Rule 167   formalParameterList -> formalParameter
Rule 168   formalParameterList -> formalParameterList COMMA formalParameter
Rule 169   formalParameter -> modifiers_opt type variableDeclaratorId
Rule 170   formalParameter -> modifiers_opt type OP_ARRAY variableDeclaratorId
Rule 171   exceptionTypeList -> exceptionType
Rule 172   exceptionTypeList -> exceptionTypeList exceptionType
Rule 173   exceptionType -> classType
Rule 174   classMemberDeclaration -> fieldDeclaration
Rule 175   classMemberDeclaration -> methodDeclaration
Rule 176   classMemberDeclaration -> classDeclaration
Rule 177   classMemberDeclaration -> interfaceDeclaration
Rule 178   classMemberDeclaration -> enumDeclaration
Rule 179   classMemberDeclaration -> annotationTypeDeclaration
Rule 180   classMemberDeclaration -> SEMI
Rule 181   fieldDeclaration -> modifiers_opt type variableDeclarators SEMI
Rule 182   methodDeclaration -> abstractMethodDeclaration
Rule 183   methodDeclaration -> methodHeader methodBody
Rule 184   abstractMethodDeclaration -> methodHeader SEMI
Rule 185   methodHeader -> methodName formalParameterList_opt RPAREN methodHeadExtendedDims methodHeadThrowList_opt
Rule 186   methodName -> modifiers_opt typeParameters type Identifier LPAREN
Rule 187   methodName -> modifiers_opt type Identifier LPAREN
Rule 188   methodHeadExtendedDims -> arrays_opt
Rule 189   methodHeadThrowList_opt -> methodHeadThrowList
Rule 190   methodHeadThrowList_opt -> empty
Rule 191   methodHeadThrowList -> THROWS classTypeList
Rule 192   classTypeList -> classType
Rule 193   classTypeList -> classTypeList COMMA classType
Rule 194   methodBody -> BLPAREN blockStatements_opt BRPAREN
Rule 195   interfaceDeclaration -> interfaceHead InterfaceBody
Rule 196   interfaceHead -> interfaceHeadName interfaceHeadExtends_opt
Rule 197   interfaceHeadName -> modifiers_opt INTERFACE Identifier typeParameters
Rule 198   interfaceHeadName -> modifiers_opt INTERFACE Identifier
Rule 199   interfaceHeadExtends_opt -> interfaceHeadExtends
Rule 200   interfaceHeadExtends_opt -> empty
Rule 201   interfaceHeadExtends -> EXTENDS interfaceTypeList
Rule 202   InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN
Rule 203   interfaceMemberDeclarations_opt -> interfaceMemberDeclarations
Rule 204   interfaceMemberDeclarations_opt -> empty
Rule 205   interfaceMemberDeclarations -> interfaceMemberDeclaration
Rule 206   interfaceMemberDeclarations -> interfaceMemberDeclarations interfaceMemberDeclaration
Rule 207   interfaceMemberDeclaration -> constantDeclaration
Rule 208   interfaceMemberDeclaration -> abstractMethodDeclaration
Rule 209   interfaceMemberDeclaration -> classDeclaration
Rule 210   interfaceMemberDeclaration -> interfaceDeclaration
Rule 211   interfaceMemberDeclaration -> enumDeclaration
Rule 212   interfaceMemberDeclaration -> annotationTypeDeclaration
Rule 213   interfaceMemberDeclaration -> SEMI
Rule 214   constantDeclaration -> fieldDeclaration
Rule 215   enumDeclaration -> enumHead enumBody
Rule 216   enumHead -> enumHeadName classImpls_opt
Rule 217   enumHeadName -> modifiers_opt ENUM Identifier
Rule 218   enumHeadName -> modifiers_opt ENUM Identifier typeParameters
Rule 219   enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN
Rule 220   enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN
Rule 221   enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN
Rule 222   enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN
Rule 223   enumConstants -> enumConstant
Rule 224   enumConstants -> enumConstants COMMA enumConstant
Rule 225   enumConstant -> enumConstantHead classBody
Rule 226   enumConstant -> enumConstantHead
Rule 227   enumConstantHead -> enumConstantHeadName arguments_opt
Rule 228   enumConstantHeadName -> modifiers_opt Identifier
Rule 229   arguments_opt -> arguments
Rule 230   arguments_opt -> empty
Rule 231   arguments -> LPAREN argumentList_opt RPAREN
Rule 232   argumentList_opt -> argumentList
Rule 233   argumentList_opt -> empty
Rule 234   argumentList -> expression
Rule 235   argumentList -> argumentList COMMA expression
Rule 236   enumBodyDeclarations_opt -> enumDeclarations
Rule 237   enumBodyDeclarations_opt -> empty
Rule 238   enumDeclarations -> SEMI classBodyDeclarations_opt
Rule 239   annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody
Rule 240   annotationTypeDeclarationHead -> annotationTypeDeclarationHeadName classExtends_opt classImpls_opt
Rule 241   annotationTypeDeclarationHeadName -> modifiers AT INTERFACE Identifier
Rule 242   annotationTypeDeclarationHeadName -> modifiers AT INTERFACE Identifier typeParameters
Rule 243   annotationTypeDeclarationHeadName -> AT INTERFACE Identifier typeParameters
Rule 244   annotationTypeDeclarationHeadName -> AT INTERFACE Identifier
Rule 245   annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN
Rule 246   annotationTypeMemberDeclarations_opt -> annotationTypeMemberDeclarations
Rule 247   annotationTypeMemberDeclarations_opt -> empty
Rule 248   annotationTypeMemberDeclarations -> annotationTypeMemberDeclaration
Rule 249   annotationTypeMemberDeclarations -> annotationTypeMemberDeclarations annotationTypeMemberDeclaration
Rule 250   annotationTypeMemberDeclaration -> annotationMethodHead SEMI
Rule 251   annotationTypeMemberDeclaration -> constantDeclaration
Rule 252   annotationTypeMemberDeclaration -> constructorDeclaration
Rule 253   annotationTypeMemberDeclaration -> typeDeclaration
Rule 254   annotationMethodHead -> annotationMethodHeadName formalParameterList_opt RPAREN methodHeadExtendedDims annotationMethodHeadDefaultValue_opt
Rule 255   annotationMethodHeadDefaultValue_opt -> defaultValue
Rule 256   annotationMethodHeadDefaultValue_opt -> empty
Rule 257   annotationMethodHeadName -> modifiers_opt typeParameters type Identifier LPAREN
Rule 258   annotationMethodHeadName -> modifiers_opt type Identifier LPAREN
Rule 259   defaultValue -> DEFAULT memberValue
Rule 260   memberValue -> conditionalExpressionNotName
Rule 261   memberValue -> name
Rule 262   memberValue -> annotation
Rule 263   memberValue -> memberValueArrayInitializer
Rule 264   memberValueArrayInitializer -> BLPAREN memberValues COMMA BRPAREN
Rule 265   memberValueArrayInitializer -> BLPAREN memberValues BRPAREN
Rule 266   memberValueArrayInitializer -> BLPAREN COMMA BRPAREN
Rule 267   memberValueArrayInitializer -> BLPAREN BRPAREN
Rule 268   memberValues -> memberValue
Rule 269   memberValues -> memberValues COMMA memberValue
Rule 270   annotation -> normalAnnotation
Rule 271   annotation -> markerAnnotation
Rule 272   annotation -> singleMemberAnnotation
Rule 273   normalAnnotation -> annotationName LPAREN memberValuePairs_opt RPAREN
Rule 274   annotationName -> AT name
Rule 275   memberValuePairs_opt -> memberValuePairs
Rule 276   memberValuePairs_opt -> empty
Rule 277   memberValuePairs -> memberValuePair
Rule 278   memberValuePairs -> memberValuePairs COMMA memberValuePair
Rule 279   memberValuePair -> Identifier ASS memberValue
Rule 280   markerAnnotation -> annotationName
Rule 281   singleMemberAnnotation -> annotationName LPAREN singleMemberAnnotationMemberValue RPAREN
Rule 282   singleMemberAnnotationMemberValue -> memberValue
Rule 283   block -> BLPAREN blockStatements_opt BRPAREN
Rule 284   blockStatements -> blockStatement
Rule 285   blockStatements -> blockStatements blockStatement
Rule 286   blockStatements_opt -> blockStatements
Rule 287   blockStatements_opt -> empty
Rule 288   blockStatement -> localVariableDeclarationStatement
Rule 289   blockStatement -> statement
Rule 290   blockStatement -> classDeclaration
Rule 291   blockStatement -> interfaceDeclaration
Rule 292   blockStatement -> annotationTypeDeclaration
Rule 293   blockStatement -> enumDeclaration
Rule 294   localVariableDeclarationStatement -> localVariableDeclaration SEMI
Rule 295   localVariableDeclaration -> type variableDeclarators
Rule 296   localVariableDeclaration -> modifiers type variableDeclarators
Rule 297   variableDeclarators -> variableDeclarator
Rule 298   variableDeclarators -> variableDeclarators COMMA variableDeclarator
Rule 299   variableDeclarator -> variableDeclaratorId
Rule 300   variableDeclarator -> variableDeclaratorId ASS variableInitializer
Rule 301   variableDeclaratorId -> Identifier arrays_opt
Rule 302   variableInitializer -> expression
Rule 303   variableInitializer -> arrayInitializer
Rule 304   statement -> statementWithoutTrailingSubStatement
Rule 305   statement -> labeldStatement
Rule 306   statement -> ifThenStatement
Rule 307   statement -> ifThenElseStatement
Rule 308   statement -> whileStatement
Rule 309   statement -> forStatement
Rule 310   statement -> enhancedForStatement
Rule 311   statementWithoutTrailingSubStatement -> block
Rule 312   statementWithoutTrailingSubStatement -> expressionStatement
Rule 313   statementWithoutTrailingSubStatement -> assertStatement
Rule 314   statementWithoutTrailingSubStatement -> emptyStatement
Rule 315   statementWithoutTrailingSubStatement -> switchStatement
Rule 316   statementWithoutTrailingSubStatement -> doStatement
Rule 317   statementWithoutTrailingSubStatement -> breakStatement
Rule 318   statementWithoutTrailingSubStatement -> continueStatement
Rule 319   statementWithoutTrailingSubStatement -> returnStatement
Rule 320   statementWithoutTrailingSubStatement -> synchronizedStatement
Rule 321   statementWithoutTrailingSubStatement -> throwStatment
Rule 322   statementWithoutTrailingSubStatement -> tryStatement
Rule 323   statementWithoutTrailingSubStatement -> tryStatementWithResources
Rule 324   expressionStatement -> statementExpression SEMI
Rule 325   expressionStatement -> explicitConstructorInvocation
Rule 326   statementExpression -> assignment
Rule 327   statementExpression -> preIncrementExpression
Rule 328   statementExpression -> preDecrementExpression
Rule 329   statementExpression -> postIncrementExpression
Rule 330   statementExpression -> postDecrementExpression
Rule 331   statementExpression -> methodInvocation
Rule 332   statementExpression -> classInstanceCreationExpression
Rule 333   comma_opt -> COMMA
Rule 334   comma_opt -> empty
Rule 335   arrayInitializer -> BLPAREN comma_opt BRPAREN
Rule 336   arrayInitializer -> BLPAREN variableInitializers BRPAREN
Rule 337   arrayInitializer -> BLPAREN variableInitializers COMMA BRPAREN
Rule 338   variableInitializers -> variableInitializer
Rule 339   variableInitializers -> variableInitializers COMMA variableInitializer
Rule 340   methodInvocation -> name LPAREN argumentList_opt RPAREN
Rule 341   methodInvocation -> name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
Rule 342   methodInvocation -> primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
Rule 343   methodInvocation -> SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
Rule 344   methodInvocation -> primary DOT Identifier LPAREN argumentList_opt RPAREN
Rule 345   methodInvocation -> SUPER DOT Identifier LPAREN argumentList_opt RPAREN
Rule 346   labeldStatement -> label COLON statement
Rule 347   labeledStatementNoShortIf -> label COLON statementNoShortIf
Rule 348   label -> Identifier
Rule 349   ifThenStatement -> IF LPAREN expression RPAREN statement
Rule 350   ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement
Rule 351   ifThenElseStatementNoShortIf -> IF LPAREN expression RPAREN statementNoShortIf ELSE statementNoShortIf
Rule 352   whileStatement -> WHILE LPAREN expression RPAREN statement
Rule 353   whileStatementNoShortIf -> WHILE LPAREN expression RPAREN statementNoShortIf
Rule 354   forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement
Rule 355   forStatementNoShortIf -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statementNoShortIf
Rule 356   forInit_opt -> forInit
Rule 357   forInit_opt -> empty
Rule 358   forInit -> statementExpressionList
Rule 359   forInit -> localVariableDeclaration
Rule 360   statementExpressionList -> statementExpression
Rule 361   statementExpressionList -> statementExpressionList COMMA statementExpression
Rule 362   expression_opt -> expression
Rule 363   expression_opt -> empty
Rule 364   forUpdate_opt -> forUpdate
Rule 365   forUpdate_opt -> empty
Rule 366   forUpdate -> statementExpressionList
Rule 367   enhancedForStatement -> enhancedForStatementHead statement
Rule 368   enhancedForStatementNoShortIf -> enhancedForStatementHead statementNoShortIf
Rule 369   enhancedForStatementHead -> enhancedForStatementHeadInit COLON expression RPAREN
Rule 370   enhancedForStatementHeadInit -> FOR LPAREN type Identifier arrays_opt
Rule 371   enhancedForStatementHeadInit -> FOR LPAREN modifiers type Identifier arrays_opt
Rule 372   statementNoShortIf -> statementWithoutTrailingSubStatement
Rule 373   statementNoShortIf -> labeledStatementNoShortIf
Rule 374   statementNoShortIf -> ifThenElseStatementNoShortIf
Rule 375   statementNoShortIf -> whileStatementNoShortIf
Rule 376   statementNoShortIf -> enhancedForStatementNoShortIf
Rule 377   assertStatement -> ASSERT expression SEMI
Rule 378   assertStatement -> ASSERT expression COLON expression SEMI
Rule 379   emptyStatement -> SEMI
Rule 380   switchStatement -> SWITCH LPAREN expression RPAREN switchBlock
Rule 381   switchBlock -> BLPAREN BRPAREN
Rule 382   switchBlock -> BLPAREN switchBlockStatements BRPAREN
Rule 383   switchBlock -> BLPAREN switchLabels BRPAREN
Rule 384   switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN
Rule 385   switchBlockStatements -> switchBlockStatement
Rule 386   switchBlockStatements -> switchBlockStatements switchBlockStatement
Rule 387   switchBlockStatement -> switchLabels blockStatements
Rule 388   switchLabels -> switchLabel
Rule 389   switchLabels -> switchLabels switchLabel
Rule 390   switchLabel -> CASE constantExpression COLON
Rule 391   switchLabel -> DEFAULT COLON
Rule 392   constantExpression -> expression
Rule 393   doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI
Rule 394   breakStatement -> BREAK SEMI
Rule 395   breakStatement -> BREAK Identifier SEMI
Rule 396   continueStatement -> CONTINUE SEMI
Rule 397   continueStatement -> CONTINUE Identifier SEMI
Rule 398   returnStatement -> RETURN expression_opt SEMI
Rule 399   synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block
Rule 400   throwStatment -> THROW expression SEMI
Rule 401   tryStatement -> TRY tryBlock catches
Rule 402   tryStatement -> TRY tryBlock catches_opt finally
Rule 403   tryBlock -> block
Rule 404   catches_opt -> catches
Rule 405   catches_opt -> empty
Rule 406   catches -> catchClause
Rule 407   catches -> catches catchClause
Rule 408   catchClause -> CATCH LPAREN catchFormalParameter RPAREN block
Rule 409   catchFormalParameter -> modifiers_opt catchType variableDeclaratorId
Rule 410   catchType -> unionType
Rule 411   unionType -> type
Rule 412   unionType -> unionType VERTICAL type
Rule 413   tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt
Rule 414   tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally
Rule 415   resourceSpecification -> LPAREN resources semi_opt RPAREN
Rule 416   semi_opt -> SEMI
Rule 417   semi_opt -> empty
Rule 418   resources -> resource
Rule 419   resources -> resources trailingSemicolon resource
Rule 420   trailingSemicolon -> SEMI
Rule 421   resource -> type variableDeclaratorId ASS variableInitializer
Rule 422   resource -> modifiers type variableDeclaratorId ASS variableInitializer
Rule 423   finally -> FINALLY block
Rule 424   explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI
Rule 425   explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI
Rule 426   explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI
Rule 427   explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
Rule 428   explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI
Rule 429   explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI
Rule 430   explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI
Rule 431   explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI
Rule 432   explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI
Rule 433   explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI
Rule 434   explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
Rule 435   explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
Rule 436   classInstanceCreationExpression -> NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
Rule 437   classInstanceCreationExpression -> NEW classType LPAREN argumentList_opt RPAREN classBody_opt
Rule 438   classInstanceCreationExpression -> primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
Rule 439   classInstanceCreationExpression -> primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
Rule 440   classInstanceCreationExpression -> classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
Rule 441   classInstanceCreationExpression -> classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
Rule 442   classInstanceCreationExpressionName -> name DOT
Rule 443   classBody_opt -> classBody
Rule 444   classBody_opt -> empty
Rule 445   fieldAccess -> primary DOT Identifier
Rule 446   fieldAccess -> SUPER DOT Identifier
Rule 447   arrayAccess -> name FLPAREN expression FRPAREN
Rule 448   arrayAccess -> primaryNoNewArray FLPAREN expression FRPAREN
Rule 449   arrayAccess -> arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
Rule 450   arrayCreationWithArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
Rule 451   arrayCreationWithArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
Rule 452   arrayWithOrWithoutExprs -> arrayWithOrWithoutExpr
Rule 453   arrayWithOrWithoutExprs -> arrayWithOrWithoutExprs arrayWithOrWithoutExpr
Rule 454   arrayWithOrWithoutExpr -> FLPAREN expression FRPAREN
Rule 455   arrayWithOrWithoutExpr -> FLPAREN FRPAREN
Rule 456   expression -> assignmentExpression
Rule 457   expressionNotName -> assignmentExpressionNotName
Rule 458   assignmentExpression -> assignment
Rule 459   assignmentExpression -> conditionalExpression
Rule 460   assignmentExpressionNotName -> assignment
Rule 461   assignmentExpressionNotName -> conditionalExpressionNotName
Rule 462   assignmentOperator -> ASS
Rule 463   assignmentOperator -> ASS_ADD
Rule 464   assignmentOperator -> ASS_SUB
Rule 465   assignmentOperator -> ASS_MUL
Rule 466   assignmentOperator -> ASS_DIV
Rule 467   assignmentOperator -> ASS_AND
Rule 468   assignmentOperator -> ASS_OR
Rule 469   assignmentOperator -> ASS_XOR
Rule 470   assignmentOperator -> ASS_MOD
Rule 471   assignmentOperator -> ASS_SHL
Rule 472   assignmentOperator -> ASS_SHRR
Rule 473   assignmentOperator -> ASS_SHR
Rule 474   assignment -> postfixExpression assignmentOperator assignmentExpression
Rule 475   conditionalExpression -> conditionalOrExpression
Rule 476   conditionalExpression -> conditionalOrExpression QUES expression COLON conditionalExpression
Rule 477   conditionalExpressionNotName -> conditionalOrExpressionNotName
Rule 478   conditionalExpressionNotName -> conditionalOrExpressionNotName QUES expression COLON conditionalExpression
Rule 479   conditionalExpressionNotName -> name QUES expression COLON conditionalExpression
Rule 480   conditionalOrExpression -> conditionalAndExpression
Rule 481   conditionalOrExpression -> conditionalOrExpression OP_LOR conditionalAndExpression
Rule 482   conditionalOrExpressionNotName -> conditionalAndExpressionNotName
Rule 483   conditionalOrExpressionNotName -> conditionalOrExpressionNotName OP_LOR conditionalAndExpression
Rule 484   conditionalOrExpressionNotName -> name OP_LOR conditionalAndExpression
Rule 485   conditionalAndExpression -> inclusiveOrExpression
Rule 486   conditionalAndExpression -> conditionalAndExpression OP_LAND inclusiveOrExpression
Rule 487   conditionalAndExpressionNotName -> inclusiveOrExpressionNotName
Rule 488   conditionalAndExpressionNotName -> conditionalAndExpressionNotName OP_LAND inclusiveOrExpression
Rule 489   conditionalAndExpressionNotName -> name OP_LAND inclusiveOrExpression
Rule 490   inclusiveOrExpression -> exclusiveOrExpression
Rule 491   inclusiveOrExpression -> inclusiveOrExpression VERTICAL exclusiveOrExpression
Rule 492   inclusiveOrExpressionNotName -> exclusiveOrExpressionNotName
Rule 493   inclusiveOrExpressionNotName -> inclusiveOrExpressionNotName VERTICAL exclusiveOrExpression
Rule 494   inclusiveOrExpressionNotName -> name VERTICAL exclusiveOrExpression
Rule 495   exclusiveOrExpression -> andExpression
Rule 496   exclusiveOrExpression -> exclusiveOrExpression CARET andExpression
Rule 497   exclusiveOrExpressionNotName -> andExpressionNotName
Rule 498   exclusiveOrExpressionNotName -> exclusiveOrExpressionNotName CARET andExpression
Rule 499   exclusiveOrExpressionNotName -> name CARET andExpression
Rule 500   andExpression -> equalityExpression
Rule 501   andExpression -> andExpression AND equalityExpression
Rule 502   andExpressionNotName -> equalityExpressionNotName
Rule 503   andExpressionNotName -> andExpressionNotName AND equalityExpression
Rule 504   andExpressionNotName -> name AND equalityExpression
Rule 505   equalityExpression -> instanceOfExpression
Rule 506   equalityExpression -> equalityExpression OP_EQ instanceOfExpression
Rule 507   equalityExpression -> equalityExpression OP_NE instanceOfExpression
Rule 508   equalityExpressionNotName -> instanceOfExpressionNotName
Rule 509   equalityExpressionNotName -> equalityExpressionNotName OP_EQ instanceOfExpression
Rule 510   equalityExpressionNotName -> equalityExpressionNotName OP_NE instanceOfExpression
Rule 511   equalityExpressionNotName -> name OP_EQ instanceOfExpression
Rule 512   equalityExpressionNotName -> name OP_NE instanceOfExpression
Rule 513   instanceOfExpression -> relationalExpression
Rule 514   instanceOfExpression -> instanceOfExpression INSTANCEOF referenceType
Rule 515   instanceOfExpressionNotName -> relationalExpressionNotName
Rule 516   instanceOfExpressionNotName -> instanceOfExpressionNotName INSTANCEOF referenceType
Rule 517   instanceOfExpressionNotName -> name INSTANCEOF referenceType
Rule 518   relationalExpression -> shiftExpression
Rule 519   relationalExpression -> relationalExpression LESS shiftExpression
Rule 520   relationalExpression -> relationalExpression OP_GE shiftExpression
Rule 521   relationalExpression -> relationalExpression MORE shiftExpression
Rule 522   relationalExpression -> relationalExpression OP_LE shiftExpression
Rule 523   relationalExpressionNotName -> shiftExpressionNotName
Rule 524   relationalExpressionNotName -> relationalExpressionNotName LESS shiftExpression
Rule 525   relationalExpressionNotName -> relationalExpressionNotName OP_GE shiftExpression
Rule 526   relationalExpressionNotName -> relationalExpressionNotName MORE shiftExpression
Rule 527   relationalExpressionNotName -> relationalExpressionNotName OP_LE shiftExpression
Rule 528   relationalExpressionNotName -> name LESS shiftExpression
Rule 529   relationalExpressionNotName -> name OP_GE shiftExpression
Rule 530   relationalExpressionNotName -> name MORE shiftExpression
Rule 531   relationalExpressionNotName -> name OP_LE shiftExpression
Rule 532   shiftExpression -> additiveExpression
Rule 533   shiftExpression -> shiftExpression OP_SHR additiveExpression
Rule 534   shiftExpression -> shiftExpression OP_SHL additiveExpression
Rule 535   shiftExpression -> shiftExpression OP_SHRR additiveExpression
Rule 536   shiftExpressionNotName -> additiveExpressionNotName
Rule 537   shiftExpressionNotName -> shiftExpressionNotName OP_SHR additiveExpression
Rule 538   shiftExpressionNotName -> shiftExpressionNotName OP_SHL additiveExpression
Rule 539   shiftExpressionNotName -> shiftExpressionNotName OP_SHRR additiveExpression
Rule 540   shiftExpressionNotName -> name OP_SHR additiveExpression
Rule 541   shiftExpressionNotName -> name OP_SHL additiveExpression
Rule 542   shiftExpressionNotName -> name OP_SHRR additiveExpression
Rule 543   additiveExpression -> multiplicativeExpression
Rule 544   additiveExpression -> additiveExpression PLUS multiplicativeExpression
Rule 545   additiveExpression -> additiveExpression DASH multiplicativeExpression
Rule 546   additiveExpressionNotName -> multiplicativeExpressionNotName
Rule 547   additiveExpressionNotName -> additiveExpressionNotName PLUS multiplicativeExpression
Rule 548   additiveExpressionNotName -> additiveExpressionNotName DASH multiplicativeExpression
Rule 549   additiveExpressionNotName -> name PLUS multiplicativeExpression
Rule 550   additiveExpressionNotName -> name DASH multiplicativeExpression
Rule 551   multiplicativeExpression -> unaryExpression
Rule 552   multiplicativeExpression -> multiplicativeExpression MULT unaryExpression
Rule 553   multiplicativeExpression -> multiplicativeExpression SLASH unaryExpression
Rule 554   multiplicativeExpression -> multiplicativeExpression PERCENT unaryExpression
Rule 555   multiplicativeExpressionNotName -> unaryExpressionNotName
Rule 556   multiplicativeExpressionNotName -> multiplicativeExpressionNotName MULT unaryExpression
Rule 557   multiplicativeExpressionNotName -> multiplicativeExpressionNotName SLASH unaryExpression
Rule 558   multiplicativeExpressionNotName -> multiplicativeExpressionNotName PERCENT unaryExpression
Rule 559   multiplicativeExpressionNotName -> name MULT unaryExpression
Rule 560   multiplicativeExpressionNotName -> name SLASH unaryExpression
Rule 561   multiplicativeExpressionNotName -> name PERCENT unaryExpression
Rule 562   unaryExpression -> preIncrementExpression
Rule 563   unaryExpression -> preDecrementExpression
Rule 564   unaryExpression -> PLUS unaryExpression
Rule 565   unaryExpression -> DASH unaryExpression
Rule 566   unaryExpression -> unaryExpressionNotPlusMinus
Rule 567   unaryExpressionNotName -> preIncrementExpression
Rule 568   unaryExpressionNotName -> preDecrementExpression
Rule 569   unaryExpressionNotName -> PLUS unaryExpression
Rule 570   unaryExpressionNotName -> DASH unaryExpression
Rule 571   unaryExpressionNotName -> unaryExpressionNotPlusMinusNotName
Rule 572   preIncrementExpression -> OP_INC unaryExpression
Rule 573   preDecrementExpression -> OP_DEC unaryExpression
Rule 574   postIncrementExpression -> postfixExpression OP_INC
Rule 575   postDecrementExpression -> postfixExpression OP_DEC
Rule 576   unaryExpressionNotPlusMinus -> TILDE unaryExpression
Rule 577   unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression
Rule 578   unaryExpressionNotPlusMinus -> postfixExpression
Rule 579   unaryExpressionNotPlusMinus -> castExpression
Rule 580   unaryExpressionNotPlusMinusNotName -> TILDE unaryExpression
Rule 581   unaryExpressionNotPlusMinusNotName -> EXCLAMATION unaryExpression
Rule 582   unaryExpressionNotPlusMinusNotName -> postfixExpressionNotName
Rule 583   unaryExpressionNotPlusMinusNotName -> castExpression
Rule 584   postfixExpression -> primary
Rule 585   postfixExpression -> name
Rule 586   postfixExpression -> postIncrementExpression
Rule 587   postfixExpression -> postDecrementExpression
Rule 588   postfixExpressionNotName -> primary
Rule 589   postfixExpressionNotName -> postIncrementExpression
Rule 590   postfixExpressionNotName -> postDecrementExpression
Rule 591   primary -> primaryNoNewArray
Rule 592   primary -> arrayCreationWithArrayInitializer
Rule 593   primary -> arrayCreationWithoutArrayInitializer
Rule 594   primaryNoNewArray -> literal
Rule 595   primaryNoNewArray -> THIS
Rule 596   primaryNoNewArray -> classInstanceCreationExpression
Rule 597   primaryNoNewArray -> fieldAccess
Rule 598   primaryNoNewArray -> methodInvocation
Rule 599   primaryNoNewArray -> arrayAccess
Rule 600   primaryNoNewArray -> LPAREN name RPAREN
Rule 601   primaryNoNewArray -> LPAREN expressionNotName RPAREN
Rule 602   primaryNoNewArray -> name DOT THIS
Rule 603   primaryNoNewArray -> name DOT SUPER
Rule 604   primaryNoNewArray -> name DOT CLASS
Rule 605   primaryNoNewArray -> name arrays DOT CLASS
Rule 606   primaryNoNewArray -> primitiveType arrays DOT CLASS
Rule 607   primaryNoNewArray -> primitiveType DOT CLASS
Rule 608   castExpression -> LPAREN primitiveType arrays_opt RPAREN unaryExpression
Rule 609   castExpression -> LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
Rule 610   castExpression -> LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
Rule 611   castExpression -> LPAREN name RPAREN unaryExpressionNotPlusMinus
Rule 612   castExpression -> LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
Rule 613   arrayCreationWithoutArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs
Rule 614   arrayCreationWithoutArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs
Rule 615   literal -> integerLiteral
Rule 616   literal -> FloatingPointLiteral
Rule 617   literal -> CharacterLiteral
Rule 618   literal -> StringLiteral
Rule 619   literal -> booleanLiteral
Rule 620   literal -> NULL
Rule 621   booleanLiteral -> TRUE
Rule 622   booleanLiteral -> FALSE
Rule 623   FloatingPointLiteral -> NON_INTEGER_1
Rule 624   FloatingPointLiteral -> NON_INTEGER_2
Rule 625   FloatingPointLiteral -> NON_INTEGER_3
Rule 626   FloatingPointLiteral -> NON_INTEGER_4
Rule 627   FloatingPointLiteral -> NON_INTEGER_5
Rule 628   FloatingPointLiteral -> NON_INTEGER_6
Rule 629   integerLiteral -> LONG_NUMBER
Rule 630   integerLiteral -> LONG_HEX_NUMBER
Rule 631   empty -> <empty>

Terminals, with rules where they appear

ABSTRACT             : 128
AND                  : 73 81 501 503 504
ASS                  : 279 300 421 422 462
ASSERT               : 377 378
ASS_ADD              : 463
ASS_AND              : 467
ASS_DIV              : 466
ASS_MOD              : 470
ASS_MUL              : 465
ASS_OR               : 468
ASS_SHL              : 471
ASS_SHR              : 473
ASS_SHRR             : 472
ASS_SUB              : 464
ASS_XOR              : 469
AT                   : 241 242 243 244 274
BLPAREN              : 151 194 202 219 220 221 222 245 264 265 266 267 283 335 336 337 381 382 383 384
BOOLEAN              : 35
BREAK                : 394 395
BRPAREN              : 151 194 202 219 220 221 222 245 264 265 266 267 283 335 336 337 381 382 383 384
BYTE                 : 37
CARET                : 496 498 499
CASE                 : 390
CAST                 : 
CATCH                : 408
CHAR                 : 41
CLASS                : 140 604 605 606 607
COLON                : 346 347 369 378 390 391 476 478 479
COMMA                : 67 75 86 88 94 100 148 168 193 220 221 224 235 264 266 269 278 298 333 337 339 361
CONST                : 
CONTINUE             : 396 397
CharacterLiteral     : 617
DASH                 : 545 548 550 565 570
DEFAULT              : 259 391
DO                   : 393
DOT                  : 21 23 32 49 55 341 342 343 344 345 428 429 430 431 432 433 434 435 438 439 442 445 446 602 603 604 605 606 607 610
DOUBLE               : 43
ELSE                 : 350 351
ENUM                 : 217 218
EQUALS               : 
EXCLAMATION          : 577 581
EXTENDS              : 69 70 77 78 106 110 114 118 145 201
FALSE                : 622
FINAL                : 129
FINALLY              : 423
FLOAT                : 42
FLPAREN              : 58 447 448 449 454 455
FOR                  : 354 355 370 371
FRPAREN              : 58 447 448 449 454 455
FUTURE               : 
GENERIC              : 
GOTO                 : 
IF                   : 349 350 351
IMPLEMENTS           : 146
IMPORT               : 20 21 22 23
INNER                : 
INSTANCEOF           : 514 516 517
INT                  : 39
INTERFACE            : 197 198 241 242 243 244
Identifier           : 31 64 140 163 164 186 187 197 198 217 218 228 241 242 243 244 257 258 279 301 341 342 343 344 345 348 370 371 395 397 445 446
LCOMMENT             : 
LESS                 : 51 65 82 92 98 519 524 528
LONG                 : 40
LONG_HEX_NUMBER      : 630
LONG_NUMBER          : 629
LPAREN               : 163 164 186 187 231 257 258 273 281 340 341 342 343 344 345 349 350 351 352 353 354 355 370 371 380 393 399 408 415 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 600 601 608 609 610 611 612
MCOMMENT             : 
MORE                 : 51 76 91 108 521 526 530
MULT                 : 21 23 552 556 559
NATIVE               : 130
NEW                  : 436 437 438 439 440 441 450 451 613 614
NEWLINE              : 
NON_INTEGER_1        : 623
NON_INTEGER_2        : 624
NON_INTEGER_3        : 625
NON_INTEGER_4        : 626
NON_INTEGER_5        : 627
NON_INTEGER_6        : 628
NULL                 : 620
OP_ARRAY             : 170
OP_DEC               : 573 575
OP_EQ                : 506 509 511
OP_GE                : 520 525 529
OP_INC               : 572 574
OP_LAND              : 486 488 489
OP_LE                : 522 527 531
OP_LOR               : 481 483 484
OP_NE                : 507 510 512
OP_SHL               : 534 538 541
OP_SHR               : 97 112 533 537 540
OP_SHRR              : 103 116 535 539 542
OUTER                : 
PACKAGE              : 14 15
PERCENT              : 554 558 561
PLUS                 : 544 547 549 564 569
PRIVATE              : 126
PROTECTED            : 125
PUBLIC               : 124
QUES                 : 104 105 108 109 112 113 116 117 476 478 479
REST                 : 
RETURN               : 398
RPAREN               : 162 185 231 254 273 281 340 341 342 343 344 345 349 350 351 352 353 354 355 369 380 393 399 408 415 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 600 601 608 609 610 611 612
SEMI                 : 13 20 21 22 23 28 180 181 184 213 238 250 294 324 354 354 355 355 377 378 379 393 394 395 396 397 398 400 416 420 424 425 426 427 428 429 430 431 432 433 434 435
SHORT                : 38
SLASH                : 553 557 560
STATIC               : 22 23 127 160
STRICTFP             : 134
SUPER                : 107 111 115 119 343 345 425 426 428 429 432 433 446 603
SWITCH               : 380
SYNCHRONIZED         : 131 399
StringLiteral        : 618
THIS                 : 424 427 430 431 434 435 595 602
THROW                : 400
THROWS               : 191
TILDE                : 576 580
TRANSIENT            : 132
TRUE                 : 621
TRY                  : 401 402 413 414
VAR                  : 
VERTICAL             : 412 491 493 494
VOID                 : 36
VOLATILE             : 133
WHILE                : 352 353 393
error                : 

Nonterminals, with rules where they appear

FloatingPointLiteral : 616
InterfaceBody        : 195
abstractMethodDeclaration : 182 208
additionalBound      : 71 72
additionalBound1     : 79 80
additionalBoundList  : 70 72 80
additionalBoundList1 : 78
additiveExpression   : 532 533 534 535 537 538 539 540 541 542 544 545
additiveExpressionNotName : 536 547 548
andExpression        : 495 496 498 499 501
andExpressionNotName : 497 503
annotation           : 135 262
annotationMethodHead : 250
annotationMethodHeadDefaultValue_opt : 254
annotationMethodHeadName : 254
annotationName       : 273 280 281
annotationTypeBody   : 239
annotationTypeDeclaration : 26 179 212 292
annotationTypeDeclarationHead : 239
annotationTypeDeclarationHeadName : 240
annotationTypeMemberDeclaration : 248 249
annotationTypeMemberDeclarations : 246 249
annotationTypeMemberDeclarations_opt : 245
argumentList         : 232 235 426
argumentList_opt     : 231 340 341 342 343 344 345 424 425 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441
arguments            : 229
arguments_opt        : 227
array                : 60 61
arrayAccess          : 599
arrayCreationWithArrayInitializer : 449 592
arrayCreationWithoutArrayInitializer : 593
arrayInitializer     : 303 450 451
arrayType            : 45
arrayWithOrWithoutExpr : 452 453
arrayWithOrWithoutExprs : 450 451 453 613 614
array_loop           : 59 61
arrays               : 54 55 56 57 62 605 606 612
arrays_opt           : 188 301 370 371 608 609 610
assertStatement      : 313
assignment           : 326 458 460
assignmentExpression : 456 474
assignmentExpressionNotName : 457
assignmentOperator   : 474
block                : 159 160 311 399 403 408 423
blockStatement       : 284 285
blockStatements      : 285 286 387
blockStatements_opt  : 194 283
booleanLiteral       : 619
breakStatement       : 317
castExpression       : 579 583
catchClause          : 406 407
catchFormalParameter : 408
catchType            : 409
catches              : 401 404 407
catches_opt          : 402 413 414
classBody            : 136 225 443
classBodyDeclaration : 154 155
classBodyDeclarations : 152 155
classBodyDeclarations_opt : 151 238
classBody_opt        : 436 437 438 439 440 441
classDeclaration     : 24 176 209 290
classExtends         : 141
classExtends_opt     : 137 240
classHead            : 136
classHeadName1       : 138 139
classImpls           : 143
classImpls_opt       : 137 216 240
classInstanceCreationExpression : 332 596
classInstanceCreationExpressionName : 440 441
classMemberDeclaration : 156
className            : 137
classOrInterface     : 46 50 51 92 98
classOrInterfaceType : 44 52 53 451 610 614
classType            : 145 173 192 193 436 437 438 439 440 441
classTypeList        : 191 193
comma_opt            : 335
compilationUnit      : 0
conditionalAndExpression : 480 481 483 484 486
conditionalAndExpressionNotName : 482 488
conditionalExpression : 459 476 478 479
conditionalExpressionNotName : 260 461
conditionalOrExpression : 475 476 481
conditionalOrExpressionNotName : 477 478 483
constantDeclaration  : 207 251
constantExpression   : 390
constructorDeclaration : 158 252
constructorHead      : 161
constructorName      : 162
continueStatement    : 318
defaultValue         : 255
doStatement          : 316
empty                : 8 63 121 142 144 150 153 166 190 200 204 230 233 237 247 256 276 287 334 357 363 365 405 417 444
emptyStatement       : 314
enhancedForStatement : 310
enhancedForStatementHead : 367 368
enhancedForStatementHeadInit : 369
enhancedForStatementNoShortIf : 376
enumBody             : 215
enumBodyDeclarations_opt : 219 220 221 222
enumConstant         : 223 224
enumConstantHead     : 225 226
enumConstantHeadName : 227
enumConstants        : 221 222 224
enumDeclaration      : 27 178 211 293
enumDeclarations     : 236
enumHead             : 215
enumHeadName         : 216
equalityExpression   : 500 501 503 504 506 507
equalityExpressionNotName : 502 509 510
exceptionType        : 171 172
exceptionTypeList    : 172
exclusiveOrExpression : 490 491 493 494 496
exclusiveOrExpressionNotName : 492 498
explicitConstructorInvocation : 325
expression           : 234 235 302 349 350 351 352 353 362 369 377 378 378 380 392 393 399 400 447 448 449 454 476 478 479
expressionNotName    : 601
expressionStatement  : 312
expression_opt       : 354 355 398
fieldAccess          : 597
fieldDeclaration     : 174 214
finally              : 402 414
forInit              : 356
forInit_opt          : 354 355
forStatement         : 309
forStatementNoShortIf : 
forUpdate            : 364
forUpdate_opt        : 354 355
formalParameter      : 167 168
formalParameterList  : 165 168
formalParameterList_opt : 162 185 254
genericType          : 47 49 54 55
ifThenElseStatement  : 307
ifThenElseStatementNoShortIf : 374
ifThenStatement      : 306
importDeclaration    : 9 10
importDeclarations   : 1 2 6 7 10
inclusiveOrExpression : 485 486 488 489 491
inclusiveOrExpressionNotName : 487 493
instanceOfExpression : 505 506 507 509 510 511 512 514
instanceOfExpressionNotName : 508 516
integerLiteral       : 615
interfaceDeclaration : 25 177 210 291
interfaceHead        : 195
interfaceHeadExtends : 199
interfaceHeadExtends_opt : 196
interfaceHeadName    : 196
interfaceMemberDeclaration : 205 206
interfaceMemberDeclarations : 203 206
interfaceMemberDeclarations_opt : 202
interfaceType        : 147 148
interfaceTypeList    : 146 148 201
label                : 346 347
labeldStatement      : 305
labeledStatementNoShortIf : 373
literal              : 594
localVariableDeclaration : 294 359
localVariableDeclarationStatement : 288
markerAnnotation     : 271
memberValue          : 259 268 269 279 282
memberValueArrayInitializer : 263
memberValuePair      : 277 278
memberValuePairs     : 275 278
memberValuePairs_opt : 273
memberValues         : 264 265 269
methodBody           : 161 183
methodDeclaration    : 175
methodHeadExtendedDims : 185 254
methodHeadThrowList  : 189
methodHeadThrowList_opt : 162 185
methodHeader         : 183 184
methodInvocation     : 331 598
methodName           : 185
modifier             : 122 123
modifiers            : 14 120 123 241 242 296 371 422
modifiers_opt        : 140 163 164 169 170 181 186 187 197 198 217 218 228 257 258 409
multiplicativeExpression : 543 544 545 547 548 549 550 552 553 554
multiplicativeExpressionNotName : 546 556 557 558
name                 : 14 15 20 21 22 23 32 48 49 55 57 261 274 340 341 429 431 433 435 442 447 479 484 489 494 499 504 511 512 517 528 529 530 531 540 541 542 549 550 559 560 561 585 600 602 603 604 605 609 610 611 612
normalAnnotation     : 270
packageDeclaration   : 1 2 3 4
packageDeclarationName : 13
postDecrementExpression : 330 587 590
postIncrementExpression : 329 586 589
postfixExpression    : 474 574 575 578
postfixExpressionNotName : 582
preDecrementExpression : 328 563 568
preIncrementExpression : 327 562 567
primary              : 342 344 428 430 432 434 438 439 445 584 588
primaryNoNewArray    : 448 591
primitiveType        : 33 56 450 606 607 608 613
qualifiedName        : 30
referenceType        : 34 69 70 73 78 83 91 97 103 106 107 514 516 517
referenceType1       : 77 81 89 110 111
referenceType2       : 95 114 115
referenceType3       : 101 118 119
relationalExpression : 513 519 520 521 522
relationalExpressionNotName : 515 524 525 526 527
resource             : 418 419
resourceSpecification : 413 414
resources            : 415 419
returnStatement      : 319
semi_opt             : 415
shiftExpression      : 518 519 520 521 522 524 525 526 527 528 529 530 531 533 534 535
shiftExpressionNotName : 523 537 538 539
simpleName           : 29 32
singleMemberAnnotation : 272
singleMemberAnnotationMemberValue : 281
singleStaticImportDeclaration : 18
singleTypeImportDeclaration : 16
statement            : 289 346 349 350 352 354 367 393
statementExpression  : 324 360 361
statementExpressionList : 358 361 366
statementNoShortIf   : 347 350 351 351 353 355 368
statementWithoutTrailingSubStatement : 304 372
staticImportOnDemandDeclaration : 19
staticInitializer    : 157
switchBlock          : 380
switchBlockStatement : 385 386
switchBlockStatements : 382 384 386
switchLabel          : 388 389
switchLabels         : 383 384 387 389
switchStatement      : 315
synchronizedStatement : 320
throwStatment        : 321
trailingSemicolon    : 419
tryBlock             : 401 402 413 414
tryStatement         : 322
tryStatementWithResources : 323
type                 : 169 170 181 186 187 257 258 295 296 370 371 411 412 421 422
typeArgument         : 85 86
typeArgument1        : 87 88
typeArgument2        : 93 94
typeArgument3        : 99 100
typeArgumentList     : 86 88 94 100
typeArgumentList1    : 82
typeArgumentList2    : 92
typeArgumentList3    : 98
typeArguments        : 50 341 342 343 426 427 432 433 434 435 436 438 441 609 610
typeDeclaration      : 11 12 253
typeDeclarations     : 1 3 5 7 12
typeImportOnDemandDeclaration : 17
typeParameter        : 66 67
typeParameter1       : 74 75
typeParameterList    : 67 75
typeParameterList1   : 65
typeParameters       : 138 149 163 186 197 218 242 243 257
typeParametersHeaderName : 68 69 70 76 77 78
typeParameters_opt   : 
unaryExpression      : 551 552 553 554 556 557 558 559 560 561 564 565 569 570 572 573 576 577 580 581 608
unaryExpressionNotName : 555
unaryExpressionNotPlusMinus : 566 609 610 611 612
unaryExpressionNotPlusMinusNotName : 571
unionType            : 410 412
variableDeclarator   : 297 298
variableDeclaratorId : 169 170 299 300 409 421 422
variableDeclarators  : 181 295 296 298
variableInitializer  : 300 338 339 421 422
variableInitializers : 336 337 339
whileStatement       : 308
whileStatementNoShortIf : 375
wildcard             : 84
wildcard1            : 90
wildcard2            : 96
wildcard3            : 102
wildcardBounds       : 105
wildcardBounds1      : 109
wildcardBounds2      : 113
wildcardBounds3      : 117

Parsing method: LALR

state 0

    (0) S' -> . compilationUnit
    (1) compilationUnit -> . packageDeclaration importDeclarations typeDeclarations
    (2) compilationUnit -> . packageDeclaration importDeclarations
    (3) compilationUnit -> . packageDeclaration typeDeclarations
    (4) compilationUnit -> . packageDeclaration
    (5) compilationUnit -> . typeDeclarations
    (6) compilationUnit -> . importDeclarations
    (7) compilationUnit -> . importDeclarations typeDeclarations
    (8) compilationUnit -> . empty
    (13) packageDeclaration -> . packageDeclarationName SEMI
    (11) typeDeclarations -> . typeDeclaration
    (12) typeDeclarations -> . typeDeclarations typeDeclaration
    (9) importDeclarations -> . importDeclaration
    (10) importDeclarations -> . importDeclarations importDeclaration
    (631) empty -> .
    (14) packageDeclarationName -> . modifiers PACKAGE name
    (15) packageDeclarationName -> . PACKAGE name
    (24) typeDeclaration -> . classDeclaration
    (25) typeDeclaration -> . interfaceDeclaration
    (26) typeDeclaration -> . annotationTypeDeclaration
    (27) typeDeclaration -> . enumDeclaration
    (28) typeDeclaration -> . SEMI
    (16) importDeclaration -> . singleTypeImportDeclaration
    (17) importDeclaration -> . typeImportOnDemandDeclaration
    (18) importDeclaration -> . singleStaticImportDeclaration
    (19) importDeclaration -> . staticImportOnDemandDeclaration
    (122) modifiers -> . modifier
    (123) modifiers -> . modifiers modifier
    (136) classDeclaration -> . classHead classBody
    (195) interfaceDeclaration -> . interfaceHead InterfaceBody
    (239) annotationTypeDeclaration -> . annotationTypeDeclarationHead annotationTypeBody
    (215) enumDeclaration -> . enumHead enumBody
    (20) singleTypeImportDeclaration -> . IMPORT name SEMI
    (21) typeImportOnDemandDeclaration -> . IMPORT name DOT MULT SEMI
    (22) singleStaticImportDeclaration -> . IMPORT STATIC name SEMI
    (23) staticImportOnDemandDeclaration -> . IMPORT STATIC name DOT MULT SEMI
    (124) modifier -> . PUBLIC
    (125) modifier -> . PROTECTED
    (126) modifier -> . PRIVATE
    (127) modifier -> . STATIC
    (128) modifier -> . ABSTRACT
    (129) modifier -> . FINAL
    (130) modifier -> . NATIVE
    (131) modifier -> . SYNCHRONIZED
    (132) modifier -> . TRANSIENT
    (133) modifier -> . VOLATILE
    (134) modifier -> . STRICTFP
    (135) modifier -> . annotation
    (137) classHead -> . className classExtends_opt classImpls_opt
    (196) interfaceHead -> . interfaceHeadName interfaceHeadExtends_opt
    (240) annotationTypeDeclarationHead -> . annotationTypeDeclarationHeadName classExtends_opt classImpls_opt
    (216) enumHead -> . enumHeadName classImpls_opt
    (270) annotation -> . normalAnnotation
    (271) annotation -> . markerAnnotation
    (272) annotation -> . singleMemberAnnotation
    (138) className -> . classHeadName1 typeParameters
    (139) className -> . classHeadName1
    (197) interfaceHeadName -> . modifiers_opt INTERFACE Identifier typeParameters
    (198) interfaceHeadName -> . modifiers_opt INTERFACE Identifier
    (241) annotationTypeDeclarationHeadName -> . modifiers AT INTERFACE Identifier
    (242) annotationTypeDeclarationHeadName -> . modifiers AT INTERFACE Identifier typeParameters
    (243) annotationTypeDeclarationHeadName -> . AT INTERFACE Identifier typeParameters
    (244) annotationTypeDeclarationHeadName -> . AT INTERFACE Identifier
    (217) enumHeadName -> . modifiers_opt ENUM Identifier
    (218) enumHeadName -> . modifiers_opt ENUM Identifier typeParameters
    (273) normalAnnotation -> . annotationName LPAREN memberValuePairs_opt RPAREN
    (280) markerAnnotation -> . annotationName
    (281) singleMemberAnnotation -> . annotationName LPAREN singleMemberAnnotationMemberValue RPAREN
    (140) classHeadName1 -> . modifiers_opt CLASS Identifier
    (120) modifiers_opt -> . modifiers
    (121) modifiers_opt -> . empty
    (274) annotationName -> . AT name

    $end            reduce using rule 631 (empty -> .)
    INTERFACE       reduce using rule 631 (empty -> .)
    ENUM            reduce using rule 631 (empty -> .)
    CLASS           reduce using rule 631 (empty -> .)
    PACKAGE         shift and go to state 26
    SEMI            shift and go to state 16
    IMPORT          shift and go to state 20
    PUBLIC          shift and go to state 46
    PROTECTED       shift and go to state 6
    PRIVATE         shift and go to state 14
    STATIC          shift and go to state 7
    ABSTRACT        shift and go to state 5
    FINAL           shift and go to state 11
    NATIVE          shift and go to state 12
    SYNCHRONIZED    shift and go to state 2
    TRANSIENT       shift and go to state 19
    VOLATILE        shift and go to state 43
    STRICTFP        shift and go to state 18
    AT              shift and go to state 48

    modifiers_opt                  shift and go to state 1
    classHead                      shift and go to state 3
    importDeclaration              shift and go to state 4
    singleMemberAnnotation         shift and go to state 8
    enumHeadName                   shift and go to state 10
    className                      shift and go to state 13
    annotationTypeDeclarationHead  shift and go to state 15
    singleTypeImportDeclaration    shift and go to state 17
    typeImportOnDemandDeclaration  shift and go to state 21
    compilationUnit                shift and go to state 22
    empty                          shift and go to state 23
    normalAnnotation               shift and go to state 24
    enumDeclaration                shift and go to state 25
    markerAnnotation               shift and go to state 9
    interfaceHeadName              shift and go to state 27
    packageDeclaration             shift and go to state 28
    typeDeclarations               shift and go to state 29
    enumHead                       shift and go to state 30
    packageDeclarationName         shift and go to state 31
    classDeclaration               shift and go to state 32
    classHeadName1                 shift and go to state 33
    annotationTypeDeclarationHeadName shift and go to state 34
    annotation                     shift and go to state 35
    singleStaticImportDeclaration  shift and go to state 36
    modifiers                      shift and go to state 37
    importDeclarations             shift and go to state 38
    typeDeclaration                shift and go to state 39
    annotationName                 shift and go to state 40
    annotationTypeDeclaration      shift and go to state 41
    interfaceDeclaration           shift and go to state 42
    staticImportOnDemandDeclaration shift and go to state 44
    modifier                       shift and go to state 45
    interfaceHead                  shift and go to state 47

state 1

    (197) interfaceHeadName -> modifiers_opt . INTERFACE Identifier typeParameters
    (198) interfaceHeadName -> modifiers_opt . INTERFACE Identifier
    (217) enumHeadName -> modifiers_opt . ENUM Identifier
    (218) enumHeadName -> modifiers_opt . ENUM Identifier typeParameters
    (140) classHeadName1 -> modifiers_opt . CLASS Identifier

    INTERFACE       shift and go to state 50
    ENUM            shift and go to state 49
    CLASS           shift and go to state 51


state 2

    (131) modifier -> SYNCHRONIZED .

    AT              reduce using rule 131 (modifier -> SYNCHRONIZED .)
    PUBLIC          reduce using rule 131 (modifier -> SYNCHRONIZED .)
    PROTECTED       reduce using rule 131 (modifier -> SYNCHRONIZED .)
    PRIVATE         reduce using rule 131 (modifier -> SYNCHRONIZED .)
    STATIC          reduce using rule 131 (modifier -> SYNCHRONIZED .)
    ABSTRACT        reduce using rule 131 (modifier -> SYNCHRONIZED .)
    FINAL           reduce using rule 131 (modifier -> SYNCHRONIZED .)
    NATIVE          reduce using rule 131 (modifier -> SYNCHRONIZED .)
    SYNCHRONIZED    reduce using rule 131 (modifier -> SYNCHRONIZED .)
    TRANSIENT       reduce using rule 131 (modifier -> SYNCHRONIZED .)
    VOLATILE        reduce using rule 131 (modifier -> SYNCHRONIZED .)
    STRICTFP        reduce using rule 131 (modifier -> SYNCHRONIZED .)
    INTERFACE       reduce using rule 131 (modifier -> SYNCHRONIZED .)
    ENUM            reduce using rule 131 (modifier -> SYNCHRONIZED .)
    CLASS           reduce using rule 131 (modifier -> SYNCHRONIZED .)
    Identifier      reduce using rule 131 (modifier -> SYNCHRONIZED .)
    LESS            reduce using rule 131 (modifier -> SYNCHRONIZED .)
    BOOLEAN         reduce using rule 131 (modifier -> SYNCHRONIZED .)
    VOID            reduce using rule 131 (modifier -> SYNCHRONIZED .)
    BYTE            reduce using rule 131 (modifier -> SYNCHRONIZED .)
    SHORT           reduce using rule 131 (modifier -> SYNCHRONIZED .)
    INT             reduce using rule 131 (modifier -> SYNCHRONIZED .)
    LONG            reduce using rule 131 (modifier -> SYNCHRONIZED .)
    CHAR            reduce using rule 131 (modifier -> SYNCHRONIZED .)
    FLOAT           reduce using rule 131 (modifier -> SYNCHRONIZED .)
    DOUBLE          reduce using rule 131 (modifier -> SYNCHRONIZED .)
    PACKAGE         reduce using rule 131 (modifier -> SYNCHRONIZED .)


state 3

    (136) classDeclaration -> classHead . classBody
    (151) classBody -> . BLPAREN classBodyDeclarations_opt BRPAREN

    BLPAREN         shift and go to state 52

    classBody                      shift and go to state 53

state 4

    (9) importDeclarations -> importDeclaration .

    SEMI            reduce using rule 9 (importDeclarations -> importDeclaration .)
    IMPORT          reduce using rule 9 (importDeclarations -> importDeclaration .)
    AT              reduce using rule 9 (importDeclarations -> importDeclaration .)
    PUBLIC          reduce using rule 9 (importDeclarations -> importDeclaration .)
    PROTECTED       reduce using rule 9 (importDeclarations -> importDeclaration .)
    PRIVATE         reduce using rule 9 (importDeclarations -> importDeclaration .)
    STATIC          reduce using rule 9 (importDeclarations -> importDeclaration .)
    ABSTRACT        reduce using rule 9 (importDeclarations -> importDeclaration .)
    FINAL           reduce using rule 9 (importDeclarations -> importDeclaration .)
    NATIVE          reduce using rule 9 (importDeclarations -> importDeclaration .)
    SYNCHRONIZED    reduce using rule 9 (importDeclarations -> importDeclaration .)
    TRANSIENT       reduce using rule 9 (importDeclarations -> importDeclaration .)
    VOLATILE        reduce using rule 9 (importDeclarations -> importDeclaration .)
    STRICTFP        reduce using rule 9 (importDeclarations -> importDeclaration .)
    INTERFACE       reduce using rule 9 (importDeclarations -> importDeclaration .)
    ENUM            reduce using rule 9 (importDeclarations -> importDeclaration .)
    CLASS           reduce using rule 9 (importDeclarations -> importDeclaration .)
    $end            reduce using rule 9 (importDeclarations -> importDeclaration .)


state 5

    (128) modifier -> ABSTRACT .

    AT              reduce using rule 128 (modifier -> ABSTRACT .)
    PUBLIC          reduce using rule 128 (modifier -> ABSTRACT .)
    PROTECTED       reduce using rule 128 (modifier -> ABSTRACT .)
    PRIVATE         reduce using rule 128 (modifier -> ABSTRACT .)
    STATIC          reduce using rule 128 (modifier -> ABSTRACT .)
    ABSTRACT        reduce using rule 128 (modifier -> ABSTRACT .)
    FINAL           reduce using rule 128 (modifier -> ABSTRACT .)
    NATIVE          reduce using rule 128 (modifier -> ABSTRACT .)
    SYNCHRONIZED    reduce using rule 128 (modifier -> ABSTRACT .)
    TRANSIENT       reduce using rule 128 (modifier -> ABSTRACT .)
    VOLATILE        reduce using rule 128 (modifier -> ABSTRACT .)
    STRICTFP        reduce using rule 128 (modifier -> ABSTRACT .)
    INTERFACE       reduce using rule 128 (modifier -> ABSTRACT .)
    ENUM            reduce using rule 128 (modifier -> ABSTRACT .)
    CLASS           reduce using rule 128 (modifier -> ABSTRACT .)
    Identifier      reduce using rule 128 (modifier -> ABSTRACT .)
    LESS            reduce using rule 128 (modifier -> ABSTRACT .)
    BOOLEAN         reduce using rule 128 (modifier -> ABSTRACT .)
    VOID            reduce using rule 128 (modifier -> ABSTRACT .)
    BYTE            reduce using rule 128 (modifier -> ABSTRACT .)
    SHORT           reduce using rule 128 (modifier -> ABSTRACT .)
    INT             reduce using rule 128 (modifier -> ABSTRACT .)
    LONG            reduce using rule 128 (modifier -> ABSTRACT .)
    CHAR            reduce using rule 128 (modifier -> ABSTRACT .)
    FLOAT           reduce using rule 128 (modifier -> ABSTRACT .)
    DOUBLE          reduce using rule 128 (modifier -> ABSTRACT .)
    PACKAGE         reduce using rule 128 (modifier -> ABSTRACT .)


state 6

    (125) modifier -> PROTECTED .

    AT              reduce using rule 125 (modifier -> PROTECTED .)
    PUBLIC          reduce using rule 125 (modifier -> PROTECTED .)
    PROTECTED       reduce using rule 125 (modifier -> PROTECTED .)
    PRIVATE         reduce using rule 125 (modifier -> PROTECTED .)
    STATIC          reduce using rule 125 (modifier -> PROTECTED .)
    ABSTRACT        reduce using rule 125 (modifier -> PROTECTED .)
    FINAL           reduce using rule 125 (modifier -> PROTECTED .)
    NATIVE          reduce using rule 125 (modifier -> PROTECTED .)
    SYNCHRONIZED    reduce using rule 125 (modifier -> PROTECTED .)
    TRANSIENT       reduce using rule 125 (modifier -> PROTECTED .)
    VOLATILE        reduce using rule 125 (modifier -> PROTECTED .)
    STRICTFP        reduce using rule 125 (modifier -> PROTECTED .)
    INTERFACE       reduce using rule 125 (modifier -> PROTECTED .)
    ENUM            reduce using rule 125 (modifier -> PROTECTED .)
    CLASS           reduce using rule 125 (modifier -> PROTECTED .)
    Identifier      reduce using rule 125 (modifier -> PROTECTED .)
    LESS            reduce using rule 125 (modifier -> PROTECTED .)
    BOOLEAN         reduce using rule 125 (modifier -> PROTECTED .)
    VOID            reduce using rule 125 (modifier -> PROTECTED .)
    BYTE            reduce using rule 125 (modifier -> PROTECTED .)
    SHORT           reduce using rule 125 (modifier -> PROTECTED .)
    INT             reduce using rule 125 (modifier -> PROTECTED .)
    LONG            reduce using rule 125 (modifier -> PROTECTED .)
    CHAR            reduce using rule 125 (modifier -> PROTECTED .)
    FLOAT           reduce using rule 125 (modifier -> PROTECTED .)
    DOUBLE          reduce using rule 125 (modifier -> PROTECTED .)
    PACKAGE         reduce using rule 125 (modifier -> PROTECTED .)


state 7

    (127) modifier -> STATIC .

    AT              reduce using rule 127 (modifier -> STATIC .)
    PUBLIC          reduce using rule 127 (modifier -> STATIC .)
    PROTECTED       reduce using rule 127 (modifier -> STATIC .)
    PRIVATE         reduce using rule 127 (modifier -> STATIC .)
    STATIC          reduce using rule 127 (modifier -> STATIC .)
    ABSTRACT        reduce using rule 127 (modifier -> STATIC .)
    FINAL           reduce using rule 127 (modifier -> STATIC .)
    NATIVE          reduce using rule 127 (modifier -> STATIC .)
    SYNCHRONIZED    reduce using rule 127 (modifier -> STATIC .)
    TRANSIENT       reduce using rule 127 (modifier -> STATIC .)
    VOLATILE        reduce using rule 127 (modifier -> STATIC .)
    STRICTFP        reduce using rule 127 (modifier -> STATIC .)
    INTERFACE       reduce using rule 127 (modifier -> STATIC .)
    ENUM            reduce using rule 127 (modifier -> STATIC .)
    CLASS           reduce using rule 127 (modifier -> STATIC .)
    Identifier      reduce using rule 127 (modifier -> STATIC .)
    LESS            reduce using rule 127 (modifier -> STATIC .)
    BOOLEAN         reduce using rule 127 (modifier -> STATIC .)
    VOID            reduce using rule 127 (modifier -> STATIC .)
    BYTE            reduce using rule 127 (modifier -> STATIC .)
    SHORT           reduce using rule 127 (modifier -> STATIC .)
    INT             reduce using rule 127 (modifier -> STATIC .)
    LONG            reduce using rule 127 (modifier -> STATIC .)
    CHAR            reduce using rule 127 (modifier -> STATIC .)
    FLOAT           reduce using rule 127 (modifier -> STATIC .)
    DOUBLE          reduce using rule 127 (modifier -> STATIC .)
    PACKAGE         reduce using rule 127 (modifier -> STATIC .)


state 8

    (272) annotation -> singleMemberAnnotation .

    COMMA           reduce using rule 272 (annotation -> singleMemberAnnotation .)
    BRPAREN         reduce using rule 272 (annotation -> singleMemberAnnotation .)
    PUBLIC          reduce using rule 272 (annotation -> singleMemberAnnotation .)
    PROTECTED       reduce using rule 272 (annotation -> singleMemberAnnotation .)
    PRIVATE         reduce using rule 272 (annotation -> singleMemberAnnotation .)
    STATIC          reduce using rule 272 (annotation -> singleMemberAnnotation .)
    ABSTRACT        reduce using rule 272 (annotation -> singleMemberAnnotation .)
    FINAL           reduce using rule 272 (annotation -> singleMemberAnnotation .)
    NATIVE          reduce using rule 272 (annotation -> singleMemberAnnotation .)
    SYNCHRONIZED    reduce using rule 272 (annotation -> singleMemberAnnotation .)
    TRANSIENT       reduce using rule 272 (annotation -> singleMemberAnnotation .)
    VOLATILE        reduce using rule 272 (annotation -> singleMemberAnnotation .)
    STRICTFP        reduce using rule 272 (annotation -> singleMemberAnnotation .)
    AT              reduce using rule 272 (annotation -> singleMemberAnnotation .)
    Identifier      reduce using rule 272 (annotation -> singleMemberAnnotation .)
    BOOLEAN         reduce using rule 272 (annotation -> singleMemberAnnotation .)
    VOID            reduce using rule 272 (annotation -> singleMemberAnnotation .)
    BYTE            reduce using rule 272 (annotation -> singleMemberAnnotation .)
    SHORT           reduce using rule 272 (annotation -> singleMemberAnnotation .)
    INT             reduce using rule 272 (annotation -> singleMemberAnnotation .)
    LONG            reduce using rule 272 (annotation -> singleMemberAnnotation .)
    CHAR            reduce using rule 272 (annotation -> singleMemberAnnotation .)
    FLOAT           reduce using rule 272 (annotation -> singleMemberAnnotation .)
    DOUBLE          reduce using rule 272 (annotation -> singleMemberAnnotation .)
    INTERFACE       reduce using rule 272 (annotation -> singleMemberAnnotation .)
    ENUM            reduce using rule 272 (annotation -> singleMemberAnnotation .)
    CLASS           reduce using rule 272 (annotation -> singleMemberAnnotation .)
    LESS            reduce using rule 272 (annotation -> singleMemberAnnotation .)
    PACKAGE         reduce using rule 272 (annotation -> singleMemberAnnotation .)
    RPAREN          reduce using rule 272 (annotation -> singleMemberAnnotation .)
    SEMI            reduce using rule 272 (annotation -> singleMemberAnnotation .)


state 9

    (271) annotation -> markerAnnotation .

    COMMA           reduce using rule 271 (annotation -> markerAnnotation .)
    BRPAREN         reduce using rule 271 (annotation -> markerAnnotation .)
    PUBLIC          reduce using rule 271 (annotation -> markerAnnotation .)
    PROTECTED       reduce using rule 271 (annotation -> markerAnnotation .)
    PRIVATE         reduce using rule 271 (annotation -> markerAnnotation .)
    STATIC          reduce using rule 271 (annotation -> markerAnnotation .)
    ABSTRACT        reduce using rule 271 (annotation -> markerAnnotation .)
    FINAL           reduce using rule 271 (annotation -> markerAnnotation .)
    NATIVE          reduce using rule 271 (annotation -> markerAnnotation .)
    SYNCHRONIZED    reduce using rule 271 (annotation -> markerAnnotation .)
    TRANSIENT       reduce using rule 271 (annotation -> markerAnnotation .)
    VOLATILE        reduce using rule 271 (annotation -> markerAnnotation .)
    STRICTFP        reduce using rule 271 (annotation -> markerAnnotation .)
    AT              reduce using rule 271 (annotation -> markerAnnotation .)
    Identifier      reduce using rule 271 (annotation -> markerAnnotation .)
    BOOLEAN         reduce using rule 271 (annotation -> markerAnnotation .)
    VOID            reduce using rule 271 (annotation -> markerAnnotation .)
    BYTE            reduce using rule 271 (annotation -> markerAnnotation .)
    SHORT           reduce using rule 271 (annotation -> markerAnnotation .)
    INT             reduce using rule 271 (annotation -> markerAnnotation .)
    LONG            reduce using rule 271 (annotation -> markerAnnotation .)
    CHAR            reduce using rule 271 (annotation -> markerAnnotation .)
    FLOAT           reduce using rule 271 (annotation -> markerAnnotation .)
    DOUBLE          reduce using rule 271 (annotation -> markerAnnotation .)
    INTERFACE       reduce using rule 271 (annotation -> markerAnnotation .)
    ENUM            reduce using rule 271 (annotation -> markerAnnotation .)
    CLASS           reduce using rule 271 (annotation -> markerAnnotation .)
    LESS            reduce using rule 271 (annotation -> markerAnnotation .)
    PACKAGE         reduce using rule 271 (annotation -> markerAnnotation .)
    RPAREN          reduce using rule 271 (annotation -> markerAnnotation .)
    SEMI            reduce using rule 271 (annotation -> markerAnnotation .)


state 10

    (216) enumHead -> enumHeadName . classImpls_opt
    (143) classImpls_opt -> . classImpls
    (144) classImpls_opt -> . empty
    (146) classImpls -> . IMPLEMENTS interfaceTypeList
    (631) empty -> .

    IMPLEMENTS      shift and go to state 54
    BLPAREN         reduce using rule 631 (empty -> .)

    classImpls_opt                 shift and go to state 55
    empty                          shift and go to state 56
    classImpls                     shift and go to state 57

state 11

    (129) modifier -> FINAL .

    AT              reduce using rule 129 (modifier -> FINAL .)
    PUBLIC          reduce using rule 129 (modifier -> FINAL .)
    PROTECTED       reduce using rule 129 (modifier -> FINAL .)
    PRIVATE         reduce using rule 129 (modifier -> FINAL .)
    STATIC          reduce using rule 129 (modifier -> FINAL .)
    ABSTRACT        reduce using rule 129 (modifier -> FINAL .)
    FINAL           reduce using rule 129 (modifier -> FINAL .)
    NATIVE          reduce using rule 129 (modifier -> FINAL .)
    SYNCHRONIZED    reduce using rule 129 (modifier -> FINAL .)
    TRANSIENT       reduce using rule 129 (modifier -> FINAL .)
    VOLATILE        reduce using rule 129 (modifier -> FINAL .)
    STRICTFP        reduce using rule 129 (modifier -> FINAL .)
    INTERFACE       reduce using rule 129 (modifier -> FINAL .)
    ENUM            reduce using rule 129 (modifier -> FINAL .)
    CLASS           reduce using rule 129 (modifier -> FINAL .)
    Identifier      reduce using rule 129 (modifier -> FINAL .)
    LESS            reduce using rule 129 (modifier -> FINAL .)
    BOOLEAN         reduce using rule 129 (modifier -> FINAL .)
    VOID            reduce using rule 129 (modifier -> FINAL .)
    BYTE            reduce using rule 129 (modifier -> FINAL .)
    SHORT           reduce using rule 129 (modifier -> FINAL .)
    INT             reduce using rule 129 (modifier -> FINAL .)
    LONG            reduce using rule 129 (modifier -> FINAL .)
    CHAR            reduce using rule 129 (modifier -> FINAL .)
    FLOAT           reduce using rule 129 (modifier -> FINAL .)
    DOUBLE          reduce using rule 129 (modifier -> FINAL .)
    PACKAGE         reduce using rule 129 (modifier -> FINAL .)


state 12

    (130) modifier -> NATIVE .

    AT              reduce using rule 130 (modifier -> NATIVE .)
    PUBLIC          reduce using rule 130 (modifier -> NATIVE .)
    PROTECTED       reduce using rule 130 (modifier -> NATIVE .)
    PRIVATE         reduce using rule 130 (modifier -> NATIVE .)
    STATIC          reduce using rule 130 (modifier -> NATIVE .)
    ABSTRACT        reduce using rule 130 (modifier -> NATIVE .)
    FINAL           reduce using rule 130 (modifier -> NATIVE .)
    NATIVE          reduce using rule 130 (modifier -> NATIVE .)
    SYNCHRONIZED    reduce using rule 130 (modifier -> NATIVE .)
    TRANSIENT       reduce using rule 130 (modifier -> NATIVE .)
    VOLATILE        reduce using rule 130 (modifier -> NATIVE .)
    STRICTFP        reduce using rule 130 (modifier -> NATIVE .)
    INTERFACE       reduce using rule 130 (modifier -> NATIVE .)
    ENUM            reduce using rule 130 (modifier -> NATIVE .)
    CLASS           reduce using rule 130 (modifier -> NATIVE .)
    Identifier      reduce using rule 130 (modifier -> NATIVE .)
    LESS            reduce using rule 130 (modifier -> NATIVE .)
    BOOLEAN         reduce using rule 130 (modifier -> NATIVE .)
    VOID            reduce using rule 130 (modifier -> NATIVE .)
    BYTE            reduce using rule 130 (modifier -> NATIVE .)
    SHORT           reduce using rule 130 (modifier -> NATIVE .)
    INT             reduce using rule 130 (modifier -> NATIVE .)
    LONG            reduce using rule 130 (modifier -> NATIVE .)
    CHAR            reduce using rule 130 (modifier -> NATIVE .)
    FLOAT           reduce using rule 130 (modifier -> NATIVE .)
    DOUBLE          reduce using rule 130 (modifier -> NATIVE .)
    PACKAGE         reduce using rule 130 (modifier -> NATIVE .)


state 13

    (137) classHead -> className . classExtends_opt classImpls_opt
    (141) classExtends_opt -> . classExtends
    (142) classExtends_opt -> . empty
    (145) classExtends -> . EXTENDS classType
    (631) empty -> .

    EXTENDS         shift and go to state 58
    IMPLEMENTS      reduce using rule 631 (empty -> .)
    BLPAREN         reduce using rule 631 (empty -> .)

    classExtends                   shift and go to state 59
    classExtends_opt               shift and go to state 60
    empty                          shift and go to state 61

state 14

    (126) modifier -> PRIVATE .

    AT              reduce using rule 126 (modifier -> PRIVATE .)
    PUBLIC          reduce using rule 126 (modifier -> PRIVATE .)
    PROTECTED       reduce using rule 126 (modifier -> PRIVATE .)
    PRIVATE         reduce using rule 126 (modifier -> PRIVATE .)
    STATIC          reduce using rule 126 (modifier -> PRIVATE .)
    ABSTRACT        reduce using rule 126 (modifier -> PRIVATE .)
    FINAL           reduce using rule 126 (modifier -> PRIVATE .)
    NATIVE          reduce using rule 126 (modifier -> PRIVATE .)
    SYNCHRONIZED    reduce using rule 126 (modifier -> PRIVATE .)
    TRANSIENT       reduce using rule 126 (modifier -> PRIVATE .)
    VOLATILE        reduce using rule 126 (modifier -> PRIVATE .)
    STRICTFP        reduce using rule 126 (modifier -> PRIVATE .)
    INTERFACE       reduce using rule 126 (modifier -> PRIVATE .)
    ENUM            reduce using rule 126 (modifier -> PRIVATE .)
    CLASS           reduce using rule 126 (modifier -> PRIVATE .)
    Identifier      reduce using rule 126 (modifier -> PRIVATE .)
    LESS            reduce using rule 126 (modifier -> PRIVATE .)
    BOOLEAN         reduce using rule 126 (modifier -> PRIVATE .)
    VOID            reduce using rule 126 (modifier -> PRIVATE .)
    BYTE            reduce using rule 126 (modifier -> PRIVATE .)
    SHORT           reduce using rule 126 (modifier -> PRIVATE .)
    INT             reduce using rule 126 (modifier -> PRIVATE .)
    LONG            reduce using rule 126 (modifier -> PRIVATE .)
    CHAR            reduce using rule 126 (modifier -> PRIVATE .)
    FLOAT           reduce using rule 126 (modifier -> PRIVATE .)
    DOUBLE          reduce using rule 126 (modifier -> PRIVATE .)
    PACKAGE         reduce using rule 126 (modifier -> PRIVATE .)


state 15

    (239) annotationTypeDeclaration -> annotationTypeDeclarationHead . annotationTypeBody
    (245) annotationTypeBody -> . BLPAREN annotationTypeMemberDeclarations_opt BRPAREN

    BLPAREN         shift and go to state 63

    annotationTypeBody             shift and go to state 62

state 16

    (28) typeDeclaration -> SEMI .

    SEMI            reduce using rule 28 (typeDeclaration -> SEMI .)
    AT              reduce using rule 28 (typeDeclaration -> SEMI .)
    PUBLIC          reduce using rule 28 (typeDeclaration -> SEMI .)
    PROTECTED       reduce using rule 28 (typeDeclaration -> SEMI .)
    PRIVATE         reduce using rule 28 (typeDeclaration -> SEMI .)
    STATIC          reduce using rule 28 (typeDeclaration -> SEMI .)
    ABSTRACT        reduce using rule 28 (typeDeclaration -> SEMI .)
    FINAL           reduce using rule 28 (typeDeclaration -> SEMI .)
    NATIVE          reduce using rule 28 (typeDeclaration -> SEMI .)
    SYNCHRONIZED    reduce using rule 28 (typeDeclaration -> SEMI .)
    TRANSIENT       reduce using rule 28 (typeDeclaration -> SEMI .)
    VOLATILE        reduce using rule 28 (typeDeclaration -> SEMI .)
    STRICTFP        reduce using rule 28 (typeDeclaration -> SEMI .)
    INTERFACE       reduce using rule 28 (typeDeclaration -> SEMI .)
    ENUM            reduce using rule 28 (typeDeclaration -> SEMI .)
    CLASS           reduce using rule 28 (typeDeclaration -> SEMI .)
    $end            reduce using rule 28 (typeDeclaration -> SEMI .)
    Identifier      reduce using rule 28 (typeDeclaration -> SEMI .)
    LESS            reduce using rule 28 (typeDeclaration -> SEMI .)
    BOOLEAN         reduce using rule 28 (typeDeclaration -> SEMI .)
    VOID            reduce using rule 28 (typeDeclaration -> SEMI .)
    BYTE            reduce using rule 28 (typeDeclaration -> SEMI .)
    SHORT           reduce using rule 28 (typeDeclaration -> SEMI .)
    INT             reduce using rule 28 (typeDeclaration -> SEMI .)
    LONG            reduce using rule 28 (typeDeclaration -> SEMI .)
    CHAR            reduce using rule 28 (typeDeclaration -> SEMI .)
    FLOAT           reduce using rule 28 (typeDeclaration -> SEMI .)
    DOUBLE          reduce using rule 28 (typeDeclaration -> SEMI .)
    BRPAREN         reduce using rule 28 (typeDeclaration -> SEMI .)


state 17

    (16) importDeclaration -> singleTypeImportDeclaration .

    SEMI            reduce using rule 16 (importDeclaration -> singleTypeImportDeclaration .)
    IMPORT          reduce using rule 16 (importDeclaration -> singleTypeImportDeclaration .)
    AT              reduce using rule 16 (importDeclaration -> singleTypeImportDeclaration .)
    PUBLIC          reduce using rule 16 (importDeclaration -> singleTypeImportDeclaration .)
    PROTECTED       reduce using rule 16 (importDeclaration -> singleTypeImportDeclaration .)
    PRIVATE         reduce using rule 16 (importDeclaration -> singleTypeImportDeclaration .)
    STATIC          reduce using rule 16 (importDeclaration -> singleTypeImportDeclaration .)
    ABSTRACT        reduce using rule 16 (importDeclaration -> singleTypeImportDeclaration .)
    FINAL           reduce using rule 16 (importDeclaration -> singleTypeImportDeclaration .)
    NATIVE          reduce using rule 16 (importDeclaration -> singleTypeImportDeclaration .)
    SYNCHRONIZED    reduce using rule 16 (importDeclaration -> singleTypeImportDeclaration .)
    TRANSIENT       reduce using rule 16 (importDeclaration -> singleTypeImportDeclaration .)
    VOLATILE        reduce using rule 16 (importDeclaration -> singleTypeImportDeclaration .)
    STRICTFP        reduce using rule 16 (importDeclaration -> singleTypeImportDeclaration .)
    INTERFACE       reduce using rule 16 (importDeclaration -> singleTypeImportDeclaration .)
    ENUM            reduce using rule 16 (importDeclaration -> singleTypeImportDeclaration .)
    CLASS           reduce using rule 16 (importDeclaration -> singleTypeImportDeclaration .)
    $end            reduce using rule 16 (importDeclaration -> singleTypeImportDeclaration .)


state 18

    (134) modifier -> STRICTFP .

    AT              reduce using rule 134 (modifier -> STRICTFP .)
    PUBLIC          reduce using rule 134 (modifier -> STRICTFP .)
    PROTECTED       reduce using rule 134 (modifier -> STRICTFP .)
    PRIVATE         reduce using rule 134 (modifier -> STRICTFP .)
    STATIC          reduce using rule 134 (modifier -> STRICTFP .)
    ABSTRACT        reduce using rule 134 (modifier -> STRICTFP .)
    FINAL           reduce using rule 134 (modifier -> STRICTFP .)
    NATIVE          reduce using rule 134 (modifier -> STRICTFP .)
    SYNCHRONIZED    reduce using rule 134 (modifier -> STRICTFP .)
    TRANSIENT       reduce using rule 134 (modifier -> STRICTFP .)
    VOLATILE        reduce using rule 134 (modifier -> STRICTFP .)
    STRICTFP        reduce using rule 134 (modifier -> STRICTFP .)
    INTERFACE       reduce using rule 134 (modifier -> STRICTFP .)
    ENUM            reduce using rule 134 (modifier -> STRICTFP .)
    CLASS           reduce using rule 134 (modifier -> STRICTFP .)
    Identifier      reduce using rule 134 (modifier -> STRICTFP .)
    LESS            reduce using rule 134 (modifier -> STRICTFP .)
    BOOLEAN         reduce using rule 134 (modifier -> STRICTFP .)
    VOID            reduce using rule 134 (modifier -> STRICTFP .)
    BYTE            reduce using rule 134 (modifier -> STRICTFP .)
    SHORT           reduce using rule 134 (modifier -> STRICTFP .)
    INT             reduce using rule 134 (modifier -> STRICTFP .)
    LONG            reduce using rule 134 (modifier -> STRICTFP .)
    CHAR            reduce using rule 134 (modifier -> STRICTFP .)
    FLOAT           reduce using rule 134 (modifier -> STRICTFP .)
    DOUBLE          reduce using rule 134 (modifier -> STRICTFP .)
    PACKAGE         reduce using rule 134 (modifier -> STRICTFP .)


state 19

    (132) modifier -> TRANSIENT .

    AT              reduce using rule 132 (modifier -> TRANSIENT .)
    PUBLIC          reduce using rule 132 (modifier -> TRANSIENT .)
    PROTECTED       reduce using rule 132 (modifier -> TRANSIENT .)
    PRIVATE         reduce using rule 132 (modifier -> TRANSIENT .)
    STATIC          reduce using rule 132 (modifier -> TRANSIENT .)
    ABSTRACT        reduce using rule 132 (modifier -> TRANSIENT .)
    FINAL           reduce using rule 132 (modifier -> TRANSIENT .)
    NATIVE          reduce using rule 132 (modifier -> TRANSIENT .)
    SYNCHRONIZED    reduce using rule 132 (modifier -> TRANSIENT .)
    TRANSIENT       reduce using rule 132 (modifier -> TRANSIENT .)
    VOLATILE        reduce using rule 132 (modifier -> TRANSIENT .)
    STRICTFP        reduce using rule 132 (modifier -> TRANSIENT .)
    INTERFACE       reduce using rule 132 (modifier -> TRANSIENT .)
    ENUM            reduce using rule 132 (modifier -> TRANSIENT .)
    CLASS           reduce using rule 132 (modifier -> TRANSIENT .)
    Identifier      reduce using rule 132 (modifier -> TRANSIENT .)
    LESS            reduce using rule 132 (modifier -> TRANSIENT .)
    BOOLEAN         reduce using rule 132 (modifier -> TRANSIENT .)
    VOID            reduce using rule 132 (modifier -> TRANSIENT .)
    BYTE            reduce using rule 132 (modifier -> TRANSIENT .)
    SHORT           reduce using rule 132 (modifier -> TRANSIENT .)
    INT             reduce using rule 132 (modifier -> TRANSIENT .)
    LONG            reduce using rule 132 (modifier -> TRANSIENT .)
    CHAR            reduce using rule 132 (modifier -> TRANSIENT .)
    FLOAT           reduce using rule 132 (modifier -> TRANSIENT .)
    DOUBLE          reduce using rule 132 (modifier -> TRANSIENT .)
    PACKAGE         reduce using rule 132 (modifier -> TRANSIENT .)


state 20

    (20) singleTypeImportDeclaration -> IMPORT . name SEMI
    (21) typeImportOnDemandDeclaration -> IMPORT . name DOT MULT SEMI
    (22) singleStaticImportDeclaration -> IMPORT . STATIC name SEMI
    (23) staticImportOnDemandDeclaration -> IMPORT . STATIC name DOT MULT SEMI
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    STATIC          shift and go to state 67
    Identifier      shift and go to state 68

    simpleName                     shift and go to state 66
    qualifiedName                  shift and go to state 64
    name                           shift and go to state 65

state 21

    (17) importDeclaration -> typeImportOnDemandDeclaration .

    SEMI            reduce using rule 17 (importDeclaration -> typeImportOnDemandDeclaration .)
    IMPORT          reduce using rule 17 (importDeclaration -> typeImportOnDemandDeclaration .)
    AT              reduce using rule 17 (importDeclaration -> typeImportOnDemandDeclaration .)
    PUBLIC          reduce using rule 17 (importDeclaration -> typeImportOnDemandDeclaration .)
    PROTECTED       reduce using rule 17 (importDeclaration -> typeImportOnDemandDeclaration .)
    PRIVATE         reduce using rule 17 (importDeclaration -> typeImportOnDemandDeclaration .)
    STATIC          reduce using rule 17 (importDeclaration -> typeImportOnDemandDeclaration .)
    ABSTRACT        reduce using rule 17 (importDeclaration -> typeImportOnDemandDeclaration .)
    FINAL           reduce using rule 17 (importDeclaration -> typeImportOnDemandDeclaration .)
    NATIVE          reduce using rule 17 (importDeclaration -> typeImportOnDemandDeclaration .)
    SYNCHRONIZED    reduce using rule 17 (importDeclaration -> typeImportOnDemandDeclaration .)
    TRANSIENT       reduce using rule 17 (importDeclaration -> typeImportOnDemandDeclaration .)
    VOLATILE        reduce using rule 17 (importDeclaration -> typeImportOnDemandDeclaration .)
    STRICTFP        reduce using rule 17 (importDeclaration -> typeImportOnDemandDeclaration .)
    INTERFACE       reduce using rule 17 (importDeclaration -> typeImportOnDemandDeclaration .)
    ENUM            reduce using rule 17 (importDeclaration -> typeImportOnDemandDeclaration .)
    CLASS           reduce using rule 17 (importDeclaration -> typeImportOnDemandDeclaration .)
    $end            reduce using rule 17 (importDeclaration -> typeImportOnDemandDeclaration .)


state 22

    (0) S' -> compilationUnit .



state 23

    (8) compilationUnit -> empty .
    (121) modifiers_opt -> empty .

    $end            reduce using rule 8 (compilationUnit -> empty .)
    INTERFACE       reduce using rule 121 (modifiers_opt -> empty .)
    ENUM            reduce using rule 121 (modifiers_opt -> empty .)
    CLASS           reduce using rule 121 (modifiers_opt -> empty .)


state 24

    (270) annotation -> normalAnnotation .

    COMMA           reduce using rule 270 (annotation -> normalAnnotation .)
    BRPAREN         reduce using rule 270 (annotation -> normalAnnotation .)
    PUBLIC          reduce using rule 270 (annotation -> normalAnnotation .)
    PROTECTED       reduce using rule 270 (annotation -> normalAnnotation .)
    PRIVATE         reduce using rule 270 (annotation -> normalAnnotation .)
    STATIC          reduce using rule 270 (annotation -> normalAnnotation .)
    ABSTRACT        reduce using rule 270 (annotation -> normalAnnotation .)
    FINAL           reduce using rule 270 (annotation -> normalAnnotation .)
    NATIVE          reduce using rule 270 (annotation -> normalAnnotation .)
    SYNCHRONIZED    reduce using rule 270 (annotation -> normalAnnotation .)
    TRANSIENT       reduce using rule 270 (annotation -> normalAnnotation .)
    VOLATILE        reduce using rule 270 (annotation -> normalAnnotation .)
    STRICTFP        reduce using rule 270 (annotation -> normalAnnotation .)
    AT              reduce using rule 270 (annotation -> normalAnnotation .)
    Identifier      reduce using rule 270 (annotation -> normalAnnotation .)
    BOOLEAN         reduce using rule 270 (annotation -> normalAnnotation .)
    VOID            reduce using rule 270 (annotation -> normalAnnotation .)
    BYTE            reduce using rule 270 (annotation -> normalAnnotation .)
    SHORT           reduce using rule 270 (annotation -> normalAnnotation .)
    INT             reduce using rule 270 (annotation -> normalAnnotation .)
    LONG            reduce using rule 270 (annotation -> normalAnnotation .)
    CHAR            reduce using rule 270 (annotation -> normalAnnotation .)
    FLOAT           reduce using rule 270 (annotation -> normalAnnotation .)
    DOUBLE          reduce using rule 270 (annotation -> normalAnnotation .)
    INTERFACE       reduce using rule 270 (annotation -> normalAnnotation .)
    ENUM            reduce using rule 270 (annotation -> normalAnnotation .)
    CLASS           reduce using rule 270 (annotation -> normalAnnotation .)
    LESS            reduce using rule 270 (annotation -> normalAnnotation .)
    PACKAGE         reduce using rule 270 (annotation -> normalAnnotation .)
    RPAREN          reduce using rule 270 (annotation -> normalAnnotation .)
    SEMI            reduce using rule 270 (annotation -> normalAnnotation .)


state 25

    (27) typeDeclaration -> enumDeclaration .

    SEMI            reduce using rule 27 (typeDeclaration -> enumDeclaration .)
    AT              reduce using rule 27 (typeDeclaration -> enumDeclaration .)
    PUBLIC          reduce using rule 27 (typeDeclaration -> enumDeclaration .)
    PROTECTED       reduce using rule 27 (typeDeclaration -> enumDeclaration .)
    PRIVATE         reduce using rule 27 (typeDeclaration -> enumDeclaration .)
    STATIC          reduce using rule 27 (typeDeclaration -> enumDeclaration .)
    ABSTRACT        reduce using rule 27 (typeDeclaration -> enumDeclaration .)
    FINAL           reduce using rule 27 (typeDeclaration -> enumDeclaration .)
    NATIVE          reduce using rule 27 (typeDeclaration -> enumDeclaration .)
    SYNCHRONIZED    reduce using rule 27 (typeDeclaration -> enumDeclaration .)
    TRANSIENT       reduce using rule 27 (typeDeclaration -> enumDeclaration .)
    VOLATILE        reduce using rule 27 (typeDeclaration -> enumDeclaration .)
    STRICTFP        reduce using rule 27 (typeDeclaration -> enumDeclaration .)
    INTERFACE       reduce using rule 27 (typeDeclaration -> enumDeclaration .)
    ENUM            reduce using rule 27 (typeDeclaration -> enumDeclaration .)
    CLASS           reduce using rule 27 (typeDeclaration -> enumDeclaration .)
    $end            reduce using rule 27 (typeDeclaration -> enumDeclaration .)
    Identifier      reduce using rule 27 (typeDeclaration -> enumDeclaration .)
    LESS            reduce using rule 27 (typeDeclaration -> enumDeclaration .)
    BOOLEAN         reduce using rule 27 (typeDeclaration -> enumDeclaration .)
    VOID            reduce using rule 27 (typeDeclaration -> enumDeclaration .)
    BYTE            reduce using rule 27 (typeDeclaration -> enumDeclaration .)
    SHORT           reduce using rule 27 (typeDeclaration -> enumDeclaration .)
    INT             reduce using rule 27 (typeDeclaration -> enumDeclaration .)
    LONG            reduce using rule 27 (typeDeclaration -> enumDeclaration .)
    CHAR            reduce using rule 27 (typeDeclaration -> enumDeclaration .)
    FLOAT           reduce using rule 27 (typeDeclaration -> enumDeclaration .)
    DOUBLE          reduce using rule 27 (typeDeclaration -> enumDeclaration .)
    BRPAREN         reduce using rule 27 (typeDeclaration -> enumDeclaration .)


state 26

    (15) packageDeclarationName -> PACKAGE . name
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    Identifier      shift and go to state 68

    simpleName                     shift and go to state 66
    qualifiedName                  shift and go to state 64
    name                           shift and go to state 69

state 27

    (196) interfaceHead -> interfaceHeadName . interfaceHeadExtends_opt
    (199) interfaceHeadExtends_opt -> . interfaceHeadExtends
    (200) interfaceHeadExtends_opt -> . empty
    (201) interfaceHeadExtends -> . EXTENDS interfaceTypeList
    (631) empty -> .

    EXTENDS         shift and go to state 72
    BLPAREN         reduce using rule 631 (empty -> .)

    interfaceHeadExtends           shift and go to state 70
    interfaceHeadExtends_opt       shift and go to state 71
    empty                          shift and go to state 73

state 28

    (1) compilationUnit -> packageDeclaration . importDeclarations typeDeclarations
    (2) compilationUnit -> packageDeclaration . importDeclarations
    (3) compilationUnit -> packageDeclaration . typeDeclarations
    (4) compilationUnit -> packageDeclaration .
    (9) importDeclarations -> . importDeclaration
    (10) importDeclarations -> . importDeclarations importDeclaration
    (11) typeDeclarations -> . typeDeclaration
    (12) typeDeclarations -> . typeDeclarations typeDeclaration
    (16) importDeclaration -> . singleTypeImportDeclaration
    (17) importDeclaration -> . typeImportOnDemandDeclaration
    (18) importDeclaration -> . singleStaticImportDeclaration
    (19) importDeclaration -> . staticImportOnDemandDeclaration
    (24) typeDeclaration -> . classDeclaration
    (25) typeDeclaration -> . interfaceDeclaration
    (26) typeDeclaration -> . annotationTypeDeclaration
    (27) typeDeclaration -> . enumDeclaration
    (28) typeDeclaration -> . SEMI
    (20) singleTypeImportDeclaration -> . IMPORT name SEMI
    (21) typeImportOnDemandDeclaration -> . IMPORT name DOT MULT SEMI
    (22) singleStaticImportDeclaration -> . IMPORT STATIC name SEMI
    (23) staticImportOnDemandDeclaration -> . IMPORT STATIC name DOT MULT SEMI
    (136) classDeclaration -> . classHead classBody
    (195) interfaceDeclaration -> . interfaceHead InterfaceBody
    (239) annotationTypeDeclaration -> . annotationTypeDeclarationHead annotationTypeBody
    (215) enumDeclaration -> . enumHead enumBody
    (137) classHead -> . className classExtends_opt classImpls_opt
    (196) interfaceHead -> . interfaceHeadName interfaceHeadExtends_opt
    (240) annotationTypeDeclarationHead -> . annotationTypeDeclarationHeadName classExtends_opt classImpls_opt
    (216) enumHead -> . enumHeadName classImpls_opt
    (138) className -> . classHeadName1 typeParameters
    (139) className -> . classHeadName1
    (197) interfaceHeadName -> . modifiers_opt INTERFACE Identifier typeParameters
    (198) interfaceHeadName -> . modifiers_opt INTERFACE Identifier
    (241) annotationTypeDeclarationHeadName -> . modifiers AT INTERFACE Identifier
    (242) annotationTypeDeclarationHeadName -> . modifiers AT INTERFACE Identifier typeParameters
    (243) annotationTypeDeclarationHeadName -> . AT INTERFACE Identifier typeParameters
    (244) annotationTypeDeclarationHeadName -> . AT INTERFACE Identifier
    (217) enumHeadName -> . modifiers_opt ENUM Identifier
    (218) enumHeadName -> . modifiers_opt ENUM Identifier typeParameters
    (140) classHeadName1 -> . modifiers_opt CLASS Identifier
    (120) modifiers_opt -> . modifiers
    (121) modifiers_opt -> . empty
    (122) modifiers -> . modifier
    (123) modifiers -> . modifiers modifier
    (631) empty -> .
    (124) modifier -> . PUBLIC
    (125) modifier -> . PROTECTED
    (126) modifier -> . PRIVATE
    (127) modifier -> . STATIC
    (128) modifier -> . ABSTRACT
    (129) modifier -> . FINAL
    (130) modifier -> . NATIVE
    (131) modifier -> . SYNCHRONIZED
    (132) modifier -> . TRANSIENT
    (133) modifier -> . VOLATILE
    (134) modifier -> . STRICTFP
    (135) modifier -> . annotation
    (270) annotation -> . normalAnnotation
    (271) annotation -> . markerAnnotation
    (272) annotation -> . singleMemberAnnotation
    (273) normalAnnotation -> . annotationName LPAREN memberValuePairs_opt RPAREN
    (280) markerAnnotation -> . annotationName
    (281) singleMemberAnnotation -> . annotationName LPAREN singleMemberAnnotationMemberValue RPAREN
    (274) annotationName -> . AT name

    $end            reduce using rule 4 (compilationUnit -> packageDeclaration .)
    SEMI            shift and go to state 16
    IMPORT          shift and go to state 20
    AT              shift and go to state 48
    INTERFACE       reduce using rule 631 (empty -> .)
    ENUM            reduce using rule 631 (empty -> .)
    CLASS           reduce using rule 631 (empty -> .)
    PUBLIC          shift and go to state 46
    PROTECTED       shift and go to state 6
    PRIVATE         shift and go to state 14
    STATIC          shift and go to state 7
    ABSTRACT        shift and go to state 5
    FINAL           shift and go to state 11
    NATIVE          shift and go to state 12
    SYNCHRONIZED    shift and go to state 2
    TRANSIENT       shift and go to state 19
    VOLATILE        shift and go to state 43
    STRICTFP        shift and go to state 18

    modifiers_opt                  shift and go to state 1
    classHead                      shift and go to state 3
    importDeclaration              shift and go to state 4
    singleMemberAnnotation         shift and go to state 8
    enumHeadName                   shift and go to state 10
    className                      shift and go to state 13
    enumDeclaration                shift and go to state 25
    singleTypeImportDeclaration    shift and go to state 17
    typeImportOnDemandDeclaration  shift and go to state 21
    empty                          shift and go to state 74
    normalAnnotation               shift and go to state 24
    annotationTypeDeclarationHead  shift and go to state 15
    markerAnnotation               shift and go to state 9
    interfaceHeadName              shift and go to state 27
    typeDeclarations               shift and go to state 75
    enumHead                       shift and go to state 30
    classDeclaration               shift and go to state 32
    classHeadName1                 shift and go to state 33
    annotationTypeDeclarationHeadName shift and go to state 34
    annotation                     shift and go to state 35
    singleStaticImportDeclaration  shift and go to state 36
    modifiers                      shift and go to state 76
    importDeclarations             shift and go to state 77
    typeDeclaration                shift and go to state 39
    annotationName                 shift and go to state 40
    annotationTypeDeclaration      shift and go to state 41
    interfaceDeclaration           shift and go to state 42
    staticImportOnDemandDeclaration shift and go to state 44
    modifier                       shift and go to state 45
    interfaceHead                  shift and go to state 47

state 29

    (5) compilationUnit -> typeDeclarations .
    (12) typeDeclarations -> typeDeclarations . typeDeclaration
    (24) typeDeclaration -> . classDeclaration
    (25) typeDeclaration -> . interfaceDeclaration
    (26) typeDeclaration -> . annotationTypeDeclaration
    (27) typeDeclaration -> . enumDeclaration
    (28) typeDeclaration -> . SEMI
    (136) classDeclaration -> . classHead classBody
    (195) interfaceDeclaration -> . interfaceHead InterfaceBody
    (239) annotationTypeDeclaration -> . annotationTypeDeclarationHead annotationTypeBody
    (215) enumDeclaration -> . enumHead enumBody
    (137) classHead -> . className classExtends_opt classImpls_opt
    (196) interfaceHead -> . interfaceHeadName interfaceHeadExtends_opt
    (240) annotationTypeDeclarationHead -> . annotationTypeDeclarationHeadName classExtends_opt classImpls_opt
    (216) enumHead -> . enumHeadName classImpls_opt
    (138) className -> . classHeadName1 typeParameters
    (139) className -> . classHeadName1
    (197) interfaceHeadName -> . modifiers_opt INTERFACE Identifier typeParameters
    (198) interfaceHeadName -> . modifiers_opt INTERFACE Identifier
    (241) annotationTypeDeclarationHeadName -> . modifiers AT INTERFACE Identifier
    (242) annotationTypeDeclarationHeadName -> . modifiers AT INTERFACE Identifier typeParameters
    (243) annotationTypeDeclarationHeadName -> . AT INTERFACE Identifier typeParameters
    (244) annotationTypeDeclarationHeadName -> . AT INTERFACE Identifier
    (217) enumHeadName -> . modifiers_opt ENUM Identifier
    (218) enumHeadName -> . modifiers_opt ENUM Identifier typeParameters
    (140) classHeadName1 -> . modifiers_opt CLASS Identifier
    (120) modifiers_opt -> . modifiers
    (121) modifiers_opt -> . empty
    (122) modifiers -> . modifier
    (123) modifiers -> . modifiers modifier
    (631) empty -> .
    (124) modifier -> . PUBLIC
    (125) modifier -> . PROTECTED
    (126) modifier -> . PRIVATE
    (127) modifier -> . STATIC
    (128) modifier -> . ABSTRACT
    (129) modifier -> . FINAL
    (130) modifier -> . NATIVE
    (131) modifier -> . SYNCHRONIZED
    (132) modifier -> . TRANSIENT
    (133) modifier -> . VOLATILE
    (134) modifier -> . STRICTFP
    (135) modifier -> . annotation
    (270) annotation -> . normalAnnotation
    (271) annotation -> . markerAnnotation
    (272) annotation -> . singleMemberAnnotation
    (273) normalAnnotation -> . annotationName LPAREN memberValuePairs_opt RPAREN
    (280) markerAnnotation -> . annotationName
    (281) singleMemberAnnotation -> . annotationName LPAREN singleMemberAnnotationMemberValue RPAREN
    (274) annotationName -> . AT name

    $end            reduce using rule 5 (compilationUnit -> typeDeclarations .)
    SEMI            shift and go to state 16
    AT              shift and go to state 48
    INTERFACE       reduce using rule 631 (empty -> .)
    ENUM            reduce using rule 631 (empty -> .)
    CLASS           reduce using rule 631 (empty -> .)
    PUBLIC          shift and go to state 46
    PROTECTED       shift and go to state 6
    PRIVATE         shift and go to state 14
    STATIC          shift and go to state 7
    ABSTRACT        shift and go to state 5
    FINAL           shift and go to state 11
    NATIVE          shift and go to state 12
    SYNCHRONIZED    shift and go to state 2
    TRANSIENT       shift and go to state 19
    VOLATILE        shift and go to state 43
    STRICTFP        shift and go to state 18

    modifiers_opt                  shift and go to state 1
    classHead                      shift and go to state 3
    singleMemberAnnotation         shift and go to state 8
    enumHeadName                   shift and go to state 10
    annotationTypeDeclaration      shift and go to state 41
    enumDeclaration                shift and go to state 25
    empty                          shift and go to state 74
    annotationTypeDeclarationHead  shift and go to state 15
    markerAnnotation               shift and go to state 9
    interfaceHeadName              shift and go to state 27
    classHeadName1                 shift and go to state 33
    enumHead                       shift and go to state 30
    classDeclaration               shift and go to state 32
    annotationTypeDeclarationHeadName shift and go to state 34
    annotation                     shift and go to state 35
    modifiers                      shift and go to state 76
    typeDeclaration                shift and go to state 78
    annotationName                 shift and go to state 40
    className                      shift and go to state 13
    interfaceDeclaration           shift and go to state 42
    normalAnnotation               shift and go to state 24
    modifier                       shift and go to state 45
    interfaceHead                  shift and go to state 47

state 30

    (215) enumDeclaration -> enumHead . enumBody
    (219) enumBody -> . BLPAREN enumBodyDeclarations_opt BRPAREN
    (220) enumBody -> . BLPAREN COMMA enumBodyDeclarations_opt BRPAREN
    (221) enumBody -> . BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN
    (222) enumBody -> . BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN

    BLPAREN         shift and go to state 80

    enumBody                       shift and go to state 79

state 31

    (13) packageDeclaration -> packageDeclarationName . SEMI

    SEMI            shift and go to state 81


state 32

    (24) typeDeclaration -> classDeclaration .

    SEMI            reduce using rule 24 (typeDeclaration -> classDeclaration .)
    AT              reduce using rule 24 (typeDeclaration -> classDeclaration .)
    PUBLIC          reduce using rule 24 (typeDeclaration -> classDeclaration .)
    PROTECTED       reduce using rule 24 (typeDeclaration -> classDeclaration .)
    PRIVATE         reduce using rule 24 (typeDeclaration -> classDeclaration .)
    STATIC          reduce using rule 24 (typeDeclaration -> classDeclaration .)
    ABSTRACT        reduce using rule 24 (typeDeclaration -> classDeclaration .)
    FINAL           reduce using rule 24 (typeDeclaration -> classDeclaration .)
    NATIVE          reduce using rule 24 (typeDeclaration -> classDeclaration .)
    SYNCHRONIZED    reduce using rule 24 (typeDeclaration -> classDeclaration .)
    TRANSIENT       reduce using rule 24 (typeDeclaration -> classDeclaration .)
    VOLATILE        reduce using rule 24 (typeDeclaration -> classDeclaration .)
    STRICTFP        reduce using rule 24 (typeDeclaration -> classDeclaration .)
    INTERFACE       reduce using rule 24 (typeDeclaration -> classDeclaration .)
    ENUM            reduce using rule 24 (typeDeclaration -> classDeclaration .)
    CLASS           reduce using rule 24 (typeDeclaration -> classDeclaration .)
    $end            reduce using rule 24 (typeDeclaration -> classDeclaration .)
    Identifier      reduce using rule 24 (typeDeclaration -> classDeclaration .)
    LESS            reduce using rule 24 (typeDeclaration -> classDeclaration .)
    BOOLEAN         reduce using rule 24 (typeDeclaration -> classDeclaration .)
    VOID            reduce using rule 24 (typeDeclaration -> classDeclaration .)
    BYTE            reduce using rule 24 (typeDeclaration -> classDeclaration .)
    SHORT           reduce using rule 24 (typeDeclaration -> classDeclaration .)
    INT             reduce using rule 24 (typeDeclaration -> classDeclaration .)
    LONG            reduce using rule 24 (typeDeclaration -> classDeclaration .)
    CHAR            reduce using rule 24 (typeDeclaration -> classDeclaration .)
    FLOAT           reduce using rule 24 (typeDeclaration -> classDeclaration .)
    DOUBLE          reduce using rule 24 (typeDeclaration -> classDeclaration .)
    BRPAREN         reduce using rule 24 (typeDeclaration -> classDeclaration .)


state 33

    (138) className -> classHeadName1 . typeParameters
    (139) className -> classHeadName1 .
    (65) typeParameters -> . LESS typeParameterList1

    EXTENDS         reduce using rule 139 (className -> classHeadName1 .)
    IMPLEMENTS      reduce using rule 139 (className -> classHeadName1 .)
    BLPAREN         reduce using rule 139 (className -> classHeadName1 .)
    LESS            shift and go to state 83

    typeParameters                 shift and go to state 82

state 34

    (240) annotationTypeDeclarationHead -> annotationTypeDeclarationHeadName . classExtends_opt classImpls_opt
    (141) classExtends_opt -> . classExtends
    (142) classExtends_opt -> . empty
    (145) classExtends -> . EXTENDS classType
    (631) empty -> .

    EXTENDS         shift and go to state 58
    IMPLEMENTS      reduce using rule 631 (empty -> .)
    BLPAREN         reduce using rule 631 (empty -> .)

    classExtends                   shift and go to state 59
    classExtends_opt               shift and go to state 84
    empty                          shift and go to state 61

state 35

    (135) modifier -> annotation .

    AT              reduce using rule 135 (modifier -> annotation .)
    PUBLIC          reduce using rule 135 (modifier -> annotation .)
    PROTECTED       reduce using rule 135 (modifier -> annotation .)
    PRIVATE         reduce using rule 135 (modifier -> annotation .)
    STATIC          reduce using rule 135 (modifier -> annotation .)
    ABSTRACT        reduce using rule 135 (modifier -> annotation .)
    FINAL           reduce using rule 135 (modifier -> annotation .)
    NATIVE          reduce using rule 135 (modifier -> annotation .)
    SYNCHRONIZED    reduce using rule 135 (modifier -> annotation .)
    TRANSIENT       reduce using rule 135 (modifier -> annotation .)
    VOLATILE        reduce using rule 135 (modifier -> annotation .)
    STRICTFP        reduce using rule 135 (modifier -> annotation .)
    INTERFACE       reduce using rule 135 (modifier -> annotation .)
    ENUM            reduce using rule 135 (modifier -> annotation .)
    CLASS           reduce using rule 135 (modifier -> annotation .)
    Identifier      reduce using rule 135 (modifier -> annotation .)
    LESS            reduce using rule 135 (modifier -> annotation .)
    BOOLEAN         reduce using rule 135 (modifier -> annotation .)
    VOID            reduce using rule 135 (modifier -> annotation .)
    BYTE            reduce using rule 135 (modifier -> annotation .)
    SHORT           reduce using rule 135 (modifier -> annotation .)
    INT             reduce using rule 135 (modifier -> annotation .)
    LONG            reduce using rule 135 (modifier -> annotation .)
    CHAR            reduce using rule 135 (modifier -> annotation .)
    FLOAT           reduce using rule 135 (modifier -> annotation .)
    DOUBLE          reduce using rule 135 (modifier -> annotation .)
    PACKAGE         reduce using rule 135 (modifier -> annotation .)


state 36

    (18) importDeclaration -> singleStaticImportDeclaration .

    SEMI            reduce using rule 18 (importDeclaration -> singleStaticImportDeclaration .)
    IMPORT          reduce using rule 18 (importDeclaration -> singleStaticImportDeclaration .)
    AT              reduce using rule 18 (importDeclaration -> singleStaticImportDeclaration .)
    PUBLIC          reduce using rule 18 (importDeclaration -> singleStaticImportDeclaration .)
    PROTECTED       reduce using rule 18 (importDeclaration -> singleStaticImportDeclaration .)
    PRIVATE         reduce using rule 18 (importDeclaration -> singleStaticImportDeclaration .)
    STATIC          reduce using rule 18 (importDeclaration -> singleStaticImportDeclaration .)
    ABSTRACT        reduce using rule 18 (importDeclaration -> singleStaticImportDeclaration .)
    FINAL           reduce using rule 18 (importDeclaration -> singleStaticImportDeclaration .)
    NATIVE          reduce using rule 18 (importDeclaration -> singleStaticImportDeclaration .)
    SYNCHRONIZED    reduce using rule 18 (importDeclaration -> singleStaticImportDeclaration .)
    TRANSIENT       reduce using rule 18 (importDeclaration -> singleStaticImportDeclaration .)
    VOLATILE        reduce using rule 18 (importDeclaration -> singleStaticImportDeclaration .)
    STRICTFP        reduce using rule 18 (importDeclaration -> singleStaticImportDeclaration .)
    INTERFACE       reduce using rule 18 (importDeclaration -> singleStaticImportDeclaration .)
    ENUM            reduce using rule 18 (importDeclaration -> singleStaticImportDeclaration .)
    CLASS           reduce using rule 18 (importDeclaration -> singleStaticImportDeclaration .)
    $end            reduce using rule 18 (importDeclaration -> singleStaticImportDeclaration .)


state 37

    (14) packageDeclarationName -> modifiers . PACKAGE name
    (123) modifiers -> modifiers . modifier
    (241) annotationTypeDeclarationHeadName -> modifiers . AT INTERFACE Identifier
    (242) annotationTypeDeclarationHeadName -> modifiers . AT INTERFACE Identifier typeParameters
    (120) modifiers_opt -> modifiers .
    (124) modifier -> . PUBLIC
    (125) modifier -> . PROTECTED
    (126) modifier -> . PRIVATE
    (127) modifier -> . STATIC
    (128) modifier -> . ABSTRACT
    (129) modifier -> . FINAL
    (130) modifier -> . NATIVE
    (131) modifier -> . SYNCHRONIZED
    (132) modifier -> . TRANSIENT
    (133) modifier -> . VOLATILE
    (134) modifier -> . STRICTFP
    (135) modifier -> . annotation
    (270) annotation -> . normalAnnotation
    (271) annotation -> . markerAnnotation
    (272) annotation -> . singleMemberAnnotation
    (273) normalAnnotation -> . annotationName LPAREN memberValuePairs_opt RPAREN
    (280) markerAnnotation -> . annotationName
    (281) singleMemberAnnotation -> . annotationName LPAREN singleMemberAnnotationMemberValue RPAREN
    (274) annotationName -> . AT name

    PACKAGE         shift and go to state 85
    AT              shift and go to state 86
    INTERFACE       reduce using rule 120 (modifiers_opt -> modifiers .)
    ENUM            reduce using rule 120 (modifiers_opt -> modifiers .)
    CLASS           reduce using rule 120 (modifiers_opt -> modifiers .)
    PUBLIC          shift and go to state 46
    PROTECTED       shift and go to state 6
    PRIVATE         shift and go to state 14
    STATIC          shift and go to state 7
    ABSTRACT        shift and go to state 5
    FINAL           shift and go to state 11
    NATIVE          shift and go to state 12
    SYNCHRONIZED    shift and go to state 2
    TRANSIENT       shift and go to state 19
    VOLATILE        shift and go to state 43
    STRICTFP        shift and go to state 18

    markerAnnotation               shift and go to state 9
    annotationName                 shift and go to state 40
    singleMemberAnnotation         shift and go to state 8
    normalAnnotation               shift and go to state 24
    modifier                       shift and go to state 87
    annotation                     shift and go to state 35

state 38

    (6) compilationUnit -> importDeclarations .
    (7) compilationUnit -> importDeclarations . typeDeclarations
    (10) importDeclarations -> importDeclarations . importDeclaration
    (11) typeDeclarations -> . typeDeclaration
    (12) typeDeclarations -> . typeDeclarations typeDeclaration
    (16) importDeclaration -> . singleTypeImportDeclaration
    (17) importDeclaration -> . typeImportOnDemandDeclaration
    (18) importDeclaration -> . singleStaticImportDeclaration
    (19) importDeclaration -> . staticImportOnDemandDeclaration
    (24) typeDeclaration -> . classDeclaration
    (25) typeDeclaration -> . interfaceDeclaration
    (26) typeDeclaration -> . annotationTypeDeclaration
    (27) typeDeclaration -> . enumDeclaration
    (28) typeDeclaration -> . SEMI
    (20) singleTypeImportDeclaration -> . IMPORT name SEMI
    (21) typeImportOnDemandDeclaration -> . IMPORT name DOT MULT SEMI
    (22) singleStaticImportDeclaration -> . IMPORT STATIC name SEMI
    (23) staticImportOnDemandDeclaration -> . IMPORT STATIC name DOT MULT SEMI
    (136) classDeclaration -> . classHead classBody
    (195) interfaceDeclaration -> . interfaceHead InterfaceBody
    (239) annotationTypeDeclaration -> . annotationTypeDeclarationHead annotationTypeBody
    (215) enumDeclaration -> . enumHead enumBody
    (137) classHead -> . className classExtends_opt classImpls_opt
    (196) interfaceHead -> . interfaceHeadName interfaceHeadExtends_opt
    (240) annotationTypeDeclarationHead -> . annotationTypeDeclarationHeadName classExtends_opt classImpls_opt
    (216) enumHead -> . enumHeadName classImpls_opt
    (138) className -> . classHeadName1 typeParameters
    (139) className -> . classHeadName1
    (197) interfaceHeadName -> . modifiers_opt INTERFACE Identifier typeParameters
    (198) interfaceHeadName -> . modifiers_opt INTERFACE Identifier
    (241) annotationTypeDeclarationHeadName -> . modifiers AT INTERFACE Identifier
    (242) annotationTypeDeclarationHeadName -> . modifiers AT INTERFACE Identifier typeParameters
    (243) annotationTypeDeclarationHeadName -> . AT INTERFACE Identifier typeParameters
    (244) annotationTypeDeclarationHeadName -> . AT INTERFACE Identifier
    (217) enumHeadName -> . modifiers_opt ENUM Identifier
    (218) enumHeadName -> . modifiers_opt ENUM Identifier typeParameters
    (140) classHeadName1 -> . modifiers_opt CLASS Identifier
    (120) modifiers_opt -> . modifiers
    (121) modifiers_opt -> . empty
    (122) modifiers -> . modifier
    (123) modifiers -> . modifiers modifier
    (631) empty -> .
    (124) modifier -> . PUBLIC
    (125) modifier -> . PROTECTED
    (126) modifier -> . PRIVATE
    (127) modifier -> . STATIC
    (128) modifier -> . ABSTRACT
    (129) modifier -> . FINAL
    (130) modifier -> . NATIVE
    (131) modifier -> . SYNCHRONIZED
    (132) modifier -> . TRANSIENT
    (133) modifier -> . VOLATILE
    (134) modifier -> . STRICTFP
    (135) modifier -> . annotation
    (270) annotation -> . normalAnnotation
    (271) annotation -> . markerAnnotation
    (272) annotation -> . singleMemberAnnotation
    (273) normalAnnotation -> . annotationName LPAREN memberValuePairs_opt RPAREN
    (280) markerAnnotation -> . annotationName
    (281) singleMemberAnnotation -> . annotationName LPAREN singleMemberAnnotationMemberValue RPAREN
    (274) annotationName -> . AT name

    $end            reduce using rule 6 (compilationUnit -> importDeclarations .)
    SEMI            shift and go to state 16
    IMPORT          shift and go to state 20
    AT              shift and go to state 48
    INTERFACE       reduce using rule 631 (empty -> .)
    ENUM            reduce using rule 631 (empty -> .)
    CLASS           reduce using rule 631 (empty -> .)
    PUBLIC          shift and go to state 46
    PROTECTED       shift and go to state 6
    PRIVATE         shift and go to state 14
    STATIC          shift and go to state 7
    ABSTRACT        shift and go to state 5
    FINAL           shift and go to state 11
    NATIVE          shift and go to state 12
    SYNCHRONIZED    shift and go to state 2
    TRANSIENT       shift and go to state 19
    VOLATILE        shift and go to state 43
    STRICTFP        shift and go to state 18

    modifiers_opt                  shift and go to state 1
    classHead                      shift and go to state 3
    importDeclaration              shift and go to state 88
    singleMemberAnnotation         shift and go to state 8
    enumHeadName                   shift and go to state 10
    annotationTypeDeclaration      shift and go to state 41
    enumDeclaration                shift and go to state 25
    singleTypeImportDeclaration    shift and go to state 17
    typeImportOnDemandDeclaration  shift and go to state 21
    empty                          shift and go to state 74
    normalAnnotation               shift and go to state 24
    annotationTypeDeclarationHead  shift and go to state 15
    markerAnnotation               shift and go to state 9
    interfaceHeadName              shift and go to state 27
    classHeadName1                 shift and go to state 33
    typeDeclarations               shift and go to state 89
    enumHead                       shift and go to state 30
    classDeclaration               shift and go to state 32
    annotationTypeDeclarationHeadName shift and go to state 34
    annotation                     shift and go to state 35
    singleStaticImportDeclaration  shift and go to state 36
    modifiers                      shift and go to state 76
    typeDeclaration                shift and go to state 39
    annotationName                 shift and go to state 40
    className                      shift and go to state 13
    interfaceDeclaration           shift and go to state 42
    staticImportOnDemandDeclaration shift and go to state 44
    modifier                       shift and go to state 45
    interfaceHead                  shift and go to state 47

state 39

    (11) typeDeclarations -> typeDeclaration .

    SEMI            reduce using rule 11 (typeDeclarations -> typeDeclaration .)
    AT              reduce using rule 11 (typeDeclarations -> typeDeclaration .)
    PUBLIC          reduce using rule 11 (typeDeclarations -> typeDeclaration .)
    PROTECTED       reduce using rule 11 (typeDeclarations -> typeDeclaration .)
    PRIVATE         reduce using rule 11 (typeDeclarations -> typeDeclaration .)
    STATIC          reduce using rule 11 (typeDeclarations -> typeDeclaration .)
    ABSTRACT        reduce using rule 11 (typeDeclarations -> typeDeclaration .)
    FINAL           reduce using rule 11 (typeDeclarations -> typeDeclaration .)
    NATIVE          reduce using rule 11 (typeDeclarations -> typeDeclaration .)
    SYNCHRONIZED    reduce using rule 11 (typeDeclarations -> typeDeclaration .)
    TRANSIENT       reduce using rule 11 (typeDeclarations -> typeDeclaration .)
    VOLATILE        reduce using rule 11 (typeDeclarations -> typeDeclaration .)
    STRICTFP        reduce using rule 11 (typeDeclarations -> typeDeclaration .)
    INTERFACE       reduce using rule 11 (typeDeclarations -> typeDeclaration .)
    ENUM            reduce using rule 11 (typeDeclarations -> typeDeclaration .)
    CLASS           reduce using rule 11 (typeDeclarations -> typeDeclaration .)
    $end            reduce using rule 11 (typeDeclarations -> typeDeclaration .)


state 40

    (273) normalAnnotation -> annotationName . LPAREN memberValuePairs_opt RPAREN
    (280) markerAnnotation -> annotationName .
    (281) singleMemberAnnotation -> annotationName . LPAREN singleMemberAnnotationMemberValue RPAREN

    LPAREN          shift and go to state 90
    PUBLIC          reduce using rule 280 (markerAnnotation -> annotationName .)
    PROTECTED       reduce using rule 280 (markerAnnotation -> annotationName .)
    PRIVATE         reduce using rule 280 (markerAnnotation -> annotationName .)
    STATIC          reduce using rule 280 (markerAnnotation -> annotationName .)
    ABSTRACT        reduce using rule 280 (markerAnnotation -> annotationName .)
    FINAL           reduce using rule 280 (markerAnnotation -> annotationName .)
    NATIVE          reduce using rule 280 (markerAnnotation -> annotationName .)
    SYNCHRONIZED    reduce using rule 280 (markerAnnotation -> annotationName .)
    TRANSIENT       reduce using rule 280 (markerAnnotation -> annotationName .)
    VOLATILE        reduce using rule 280 (markerAnnotation -> annotationName .)
    STRICTFP        reduce using rule 280 (markerAnnotation -> annotationName .)
    BOOLEAN         reduce using rule 280 (markerAnnotation -> annotationName .)
    VOID            reduce using rule 280 (markerAnnotation -> annotationName .)
    BYTE            reduce using rule 280 (markerAnnotation -> annotationName .)
    SHORT           reduce using rule 280 (markerAnnotation -> annotationName .)
    INT             reduce using rule 280 (markerAnnotation -> annotationName .)
    LONG            reduce using rule 280 (markerAnnotation -> annotationName .)
    CHAR            reduce using rule 280 (markerAnnotation -> annotationName .)
    FLOAT           reduce using rule 280 (markerAnnotation -> annotationName .)
    DOUBLE          reduce using rule 280 (markerAnnotation -> annotationName .)
    AT              reduce using rule 280 (markerAnnotation -> annotationName .)
    Identifier      reduce using rule 280 (markerAnnotation -> annotationName .)
    INTERFACE       reduce using rule 280 (markerAnnotation -> annotationName .)
    ENUM            reduce using rule 280 (markerAnnotation -> annotationName .)
    CLASS           reduce using rule 280 (markerAnnotation -> annotationName .)
    COMMA           reduce using rule 280 (markerAnnotation -> annotationName .)
    BRPAREN         reduce using rule 280 (markerAnnotation -> annotationName .)
    LESS            reduce using rule 280 (markerAnnotation -> annotationName .)
    RPAREN          reduce using rule 280 (markerAnnotation -> annotationName .)
    PACKAGE         reduce using rule 280 (markerAnnotation -> annotationName .)
    SEMI            reduce using rule 280 (markerAnnotation -> annotationName .)


state 41

    (26) typeDeclaration -> annotationTypeDeclaration .

    SEMI            reduce using rule 26 (typeDeclaration -> annotationTypeDeclaration .)
    AT              reduce using rule 26 (typeDeclaration -> annotationTypeDeclaration .)
    PUBLIC          reduce using rule 26 (typeDeclaration -> annotationTypeDeclaration .)
    PROTECTED       reduce using rule 26 (typeDeclaration -> annotationTypeDeclaration .)
    PRIVATE         reduce using rule 26 (typeDeclaration -> annotationTypeDeclaration .)
    STATIC          reduce using rule 26 (typeDeclaration -> annotationTypeDeclaration .)
    ABSTRACT        reduce using rule 26 (typeDeclaration -> annotationTypeDeclaration .)
    FINAL           reduce using rule 26 (typeDeclaration -> annotationTypeDeclaration .)
    NATIVE          reduce using rule 26 (typeDeclaration -> annotationTypeDeclaration .)
    SYNCHRONIZED    reduce using rule 26 (typeDeclaration -> annotationTypeDeclaration .)
    TRANSIENT       reduce using rule 26 (typeDeclaration -> annotationTypeDeclaration .)
    VOLATILE        reduce using rule 26 (typeDeclaration -> annotationTypeDeclaration .)
    STRICTFP        reduce using rule 26 (typeDeclaration -> annotationTypeDeclaration .)
    INTERFACE       reduce using rule 26 (typeDeclaration -> annotationTypeDeclaration .)
    ENUM            reduce using rule 26 (typeDeclaration -> annotationTypeDeclaration .)
    CLASS           reduce using rule 26 (typeDeclaration -> annotationTypeDeclaration .)
    $end            reduce using rule 26 (typeDeclaration -> annotationTypeDeclaration .)
    Identifier      reduce using rule 26 (typeDeclaration -> annotationTypeDeclaration .)
    LESS            reduce using rule 26 (typeDeclaration -> annotationTypeDeclaration .)
    BOOLEAN         reduce using rule 26 (typeDeclaration -> annotationTypeDeclaration .)
    VOID            reduce using rule 26 (typeDeclaration -> annotationTypeDeclaration .)
    BYTE            reduce using rule 26 (typeDeclaration -> annotationTypeDeclaration .)
    SHORT           reduce using rule 26 (typeDeclaration -> annotationTypeDeclaration .)
    INT             reduce using rule 26 (typeDeclaration -> annotationTypeDeclaration .)
    LONG            reduce using rule 26 (typeDeclaration -> annotationTypeDeclaration .)
    CHAR            reduce using rule 26 (typeDeclaration -> annotationTypeDeclaration .)
    FLOAT           reduce using rule 26 (typeDeclaration -> annotationTypeDeclaration .)
    DOUBLE          reduce using rule 26 (typeDeclaration -> annotationTypeDeclaration .)
    BRPAREN         reduce using rule 26 (typeDeclaration -> annotationTypeDeclaration .)


state 42

    (25) typeDeclaration -> interfaceDeclaration .

    SEMI            reduce using rule 25 (typeDeclaration -> interfaceDeclaration .)
    AT              reduce using rule 25 (typeDeclaration -> interfaceDeclaration .)
    PUBLIC          reduce using rule 25 (typeDeclaration -> interfaceDeclaration .)
    PROTECTED       reduce using rule 25 (typeDeclaration -> interfaceDeclaration .)
    PRIVATE         reduce using rule 25 (typeDeclaration -> interfaceDeclaration .)
    STATIC          reduce using rule 25 (typeDeclaration -> interfaceDeclaration .)
    ABSTRACT        reduce using rule 25 (typeDeclaration -> interfaceDeclaration .)
    FINAL           reduce using rule 25 (typeDeclaration -> interfaceDeclaration .)
    NATIVE          reduce using rule 25 (typeDeclaration -> interfaceDeclaration .)
    SYNCHRONIZED    reduce using rule 25 (typeDeclaration -> interfaceDeclaration .)
    TRANSIENT       reduce using rule 25 (typeDeclaration -> interfaceDeclaration .)
    VOLATILE        reduce using rule 25 (typeDeclaration -> interfaceDeclaration .)
    STRICTFP        reduce using rule 25 (typeDeclaration -> interfaceDeclaration .)
    INTERFACE       reduce using rule 25 (typeDeclaration -> interfaceDeclaration .)
    ENUM            reduce using rule 25 (typeDeclaration -> interfaceDeclaration .)
    CLASS           reduce using rule 25 (typeDeclaration -> interfaceDeclaration .)
    $end            reduce using rule 25 (typeDeclaration -> interfaceDeclaration .)
    Identifier      reduce using rule 25 (typeDeclaration -> interfaceDeclaration .)
    LESS            reduce using rule 25 (typeDeclaration -> interfaceDeclaration .)
    BOOLEAN         reduce using rule 25 (typeDeclaration -> interfaceDeclaration .)
    VOID            reduce using rule 25 (typeDeclaration -> interfaceDeclaration .)
    BYTE            reduce using rule 25 (typeDeclaration -> interfaceDeclaration .)
    SHORT           reduce using rule 25 (typeDeclaration -> interfaceDeclaration .)
    INT             reduce using rule 25 (typeDeclaration -> interfaceDeclaration .)
    LONG            reduce using rule 25 (typeDeclaration -> interfaceDeclaration .)
    CHAR            reduce using rule 25 (typeDeclaration -> interfaceDeclaration .)
    FLOAT           reduce using rule 25 (typeDeclaration -> interfaceDeclaration .)
    DOUBLE          reduce using rule 25 (typeDeclaration -> interfaceDeclaration .)
    BRPAREN         reduce using rule 25 (typeDeclaration -> interfaceDeclaration .)


state 43

    (133) modifier -> VOLATILE .

    AT              reduce using rule 133 (modifier -> VOLATILE .)
    PUBLIC          reduce using rule 133 (modifier -> VOLATILE .)
    PROTECTED       reduce using rule 133 (modifier -> VOLATILE .)
    PRIVATE         reduce using rule 133 (modifier -> VOLATILE .)
    STATIC          reduce using rule 133 (modifier -> VOLATILE .)
    ABSTRACT        reduce using rule 133 (modifier -> VOLATILE .)
    FINAL           reduce using rule 133 (modifier -> VOLATILE .)
    NATIVE          reduce using rule 133 (modifier -> VOLATILE .)
    SYNCHRONIZED    reduce using rule 133 (modifier -> VOLATILE .)
    TRANSIENT       reduce using rule 133 (modifier -> VOLATILE .)
    VOLATILE        reduce using rule 133 (modifier -> VOLATILE .)
    STRICTFP        reduce using rule 133 (modifier -> VOLATILE .)
    INTERFACE       reduce using rule 133 (modifier -> VOLATILE .)
    ENUM            reduce using rule 133 (modifier -> VOLATILE .)
    CLASS           reduce using rule 133 (modifier -> VOLATILE .)
    Identifier      reduce using rule 133 (modifier -> VOLATILE .)
    LESS            reduce using rule 133 (modifier -> VOLATILE .)
    BOOLEAN         reduce using rule 133 (modifier -> VOLATILE .)
    VOID            reduce using rule 133 (modifier -> VOLATILE .)
    BYTE            reduce using rule 133 (modifier -> VOLATILE .)
    SHORT           reduce using rule 133 (modifier -> VOLATILE .)
    INT             reduce using rule 133 (modifier -> VOLATILE .)
    LONG            reduce using rule 133 (modifier -> VOLATILE .)
    CHAR            reduce using rule 133 (modifier -> VOLATILE .)
    FLOAT           reduce using rule 133 (modifier -> VOLATILE .)
    DOUBLE          reduce using rule 133 (modifier -> VOLATILE .)
    PACKAGE         reduce using rule 133 (modifier -> VOLATILE .)


state 44

    (19) importDeclaration -> staticImportOnDemandDeclaration .

    SEMI            reduce using rule 19 (importDeclaration -> staticImportOnDemandDeclaration .)
    IMPORT          reduce using rule 19 (importDeclaration -> staticImportOnDemandDeclaration .)
    AT              reduce using rule 19 (importDeclaration -> staticImportOnDemandDeclaration .)
    PUBLIC          reduce using rule 19 (importDeclaration -> staticImportOnDemandDeclaration .)
    PROTECTED       reduce using rule 19 (importDeclaration -> staticImportOnDemandDeclaration .)
    PRIVATE         reduce using rule 19 (importDeclaration -> staticImportOnDemandDeclaration .)
    STATIC          reduce using rule 19 (importDeclaration -> staticImportOnDemandDeclaration .)
    ABSTRACT        reduce using rule 19 (importDeclaration -> staticImportOnDemandDeclaration .)
    FINAL           reduce using rule 19 (importDeclaration -> staticImportOnDemandDeclaration .)
    NATIVE          reduce using rule 19 (importDeclaration -> staticImportOnDemandDeclaration .)
    SYNCHRONIZED    reduce using rule 19 (importDeclaration -> staticImportOnDemandDeclaration .)
    TRANSIENT       reduce using rule 19 (importDeclaration -> staticImportOnDemandDeclaration .)
    VOLATILE        reduce using rule 19 (importDeclaration -> staticImportOnDemandDeclaration .)
    STRICTFP        reduce using rule 19 (importDeclaration -> staticImportOnDemandDeclaration .)
    INTERFACE       reduce using rule 19 (importDeclaration -> staticImportOnDemandDeclaration .)
    ENUM            reduce using rule 19 (importDeclaration -> staticImportOnDemandDeclaration .)
    CLASS           reduce using rule 19 (importDeclaration -> staticImportOnDemandDeclaration .)
    $end            reduce using rule 19 (importDeclaration -> staticImportOnDemandDeclaration .)


state 45

    (122) modifiers -> modifier .

    AT              reduce using rule 122 (modifiers -> modifier .)
    PUBLIC          reduce using rule 122 (modifiers -> modifier .)
    PROTECTED       reduce using rule 122 (modifiers -> modifier .)
    PRIVATE         reduce using rule 122 (modifiers -> modifier .)
    STATIC          reduce using rule 122 (modifiers -> modifier .)
    ABSTRACT        reduce using rule 122 (modifiers -> modifier .)
    FINAL           reduce using rule 122 (modifiers -> modifier .)
    NATIVE          reduce using rule 122 (modifiers -> modifier .)
    SYNCHRONIZED    reduce using rule 122 (modifiers -> modifier .)
    TRANSIENT       reduce using rule 122 (modifiers -> modifier .)
    VOLATILE        reduce using rule 122 (modifiers -> modifier .)
    STRICTFP        reduce using rule 122 (modifiers -> modifier .)
    INTERFACE       reduce using rule 122 (modifiers -> modifier .)
    ENUM            reduce using rule 122 (modifiers -> modifier .)
    CLASS           reduce using rule 122 (modifiers -> modifier .)
    LESS            reduce using rule 122 (modifiers -> modifier .)
    BOOLEAN         reduce using rule 122 (modifiers -> modifier .)
    VOID            reduce using rule 122 (modifiers -> modifier .)
    BYTE            reduce using rule 122 (modifiers -> modifier .)
    SHORT           reduce using rule 122 (modifiers -> modifier .)
    INT             reduce using rule 122 (modifiers -> modifier .)
    LONG            reduce using rule 122 (modifiers -> modifier .)
    CHAR            reduce using rule 122 (modifiers -> modifier .)
    FLOAT           reduce using rule 122 (modifiers -> modifier .)
    DOUBLE          reduce using rule 122 (modifiers -> modifier .)
    Identifier      reduce using rule 122 (modifiers -> modifier .)
    PACKAGE         reduce using rule 122 (modifiers -> modifier .)


state 46

    (124) modifier -> PUBLIC .

    AT              reduce using rule 124 (modifier -> PUBLIC .)
    PUBLIC          reduce using rule 124 (modifier -> PUBLIC .)
    PROTECTED       reduce using rule 124 (modifier -> PUBLIC .)
    PRIVATE         reduce using rule 124 (modifier -> PUBLIC .)
    STATIC          reduce using rule 124 (modifier -> PUBLIC .)
    ABSTRACT        reduce using rule 124 (modifier -> PUBLIC .)
    FINAL           reduce using rule 124 (modifier -> PUBLIC .)
    NATIVE          reduce using rule 124 (modifier -> PUBLIC .)
    SYNCHRONIZED    reduce using rule 124 (modifier -> PUBLIC .)
    TRANSIENT       reduce using rule 124 (modifier -> PUBLIC .)
    VOLATILE        reduce using rule 124 (modifier -> PUBLIC .)
    STRICTFP        reduce using rule 124 (modifier -> PUBLIC .)
    INTERFACE       reduce using rule 124 (modifier -> PUBLIC .)
    ENUM            reduce using rule 124 (modifier -> PUBLIC .)
    CLASS           reduce using rule 124 (modifier -> PUBLIC .)
    Identifier      reduce using rule 124 (modifier -> PUBLIC .)
    LESS            reduce using rule 124 (modifier -> PUBLIC .)
    BOOLEAN         reduce using rule 124 (modifier -> PUBLIC .)
    VOID            reduce using rule 124 (modifier -> PUBLIC .)
    BYTE            reduce using rule 124 (modifier -> PUBLIC .)
    SHORT           reduce using rule 124 (modifier -> PUBLIC .)
    INT             reduce using rule 124 (modifier -> PUBLIC .)
    LONG            reduce using rule 124 (modifier -> PUBLIC .)
    CHAR            reduce using rule 124 (modifier -> PUBLIC .)
    FLOAT           reduce using rule 124 (modifier -> PUBLIC .)
    DOUBLE          reduce using rule 124 (modifier -> PUBLIC .)
    PACKAGE         reduce using rule 124 (modifier -> PUBLIC .)


state 47

    (195) interfaceDeclaration -> interfaceHead . InterfaceBody
    (202) InterfaceBody -> . BLPAREN interfaceMemberDeclarations_opt BRPAREN

    BLPAREN         shift and go to state 92

    InterfaceBody                  shift and go to state 91

state 48

    (243) annotationTypeDeclarationHeadName -> AT . INTERFACE Identifier typeParameters
    (244) annotationTypeDeclarationHeadName -> AT . INTERFACE Identifier
    (274) annotationName -> AT . name
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    INTERFACE       shift and go to state 94
    Identifier      shift and go to state 68

    simpleName                     shift and go to state 66
    name                           shift and go to state 93
    qualifiedName                  shift and go to state 64

state 49

    (217) enumHeadName -> modifiers_opt ENUM . Identifier
    (218) enumHeadName -> modifiers_opt ENUM . Identifier typeParameters

    Identifier      shift and go to state 95


state 50

    (197) interfaceHeadName -> modifiers_opt INTERFACE . Identifier typeParameters
    (198) interfaceHeadName -> modifiers_opt INTERFACE . Identifier

    Identifier      shift and go to state 96


state 51

    (140) classHeadName1 -> modifiers_opt CLASS . Identifier

    Identifier      shift and go to state 97


state 52

    (151) classBody -> BLPAREN . classBodyDeclarations_opt BRPAREN
    (152) classBodyDeclarations_opt -> . classBodyDeclarations
    (153) classBodyDeclarations_opt -> . empty
    (154) classBodyDeclarations -> . classBodyDeclaration
    (155) classBodyDeclarations -> . classBodyDeclarations classBodyDeclaration
    (631) empty -> .
    (156) classBodyDeclaration -> . classMemberDeclaration
    (157) classBodyDeclaration -> . staticInitializer
    (158) classBodyDeclaration -> . constructorDeclaration
    (159) classBodyDeclaration -> . block
    (174) classMemberDeclaration -> . fieldDeclaration
    (175) classMemberDeclaration -> . methodDeclaration
    (176) classMemberDeclaration -> . classDeclaration
    (177) classMemberDeclaration -> . interfaceDeclaration
    (178) classMemberDeclaration -> . enumDeclaration
    (179) classMemberDeclaration -> . annotationTypeDeclaration
    (180) classMemberDeclaration -> . SEMI
    (160) staticInitializer -> . STATIC block
    (161) constructorDeclaration -> . constructorHead methodBody
    (283) block -> . BLPAREN blockStatements_opt BRPAREN
    (181) fieldDeclaration -> . modifiers_opt type variableDeclarators SEMI
    (182) methodDeclaration -> . abstractMethodDeclaration
    (183) methodDeclaration -> . methodHeader methodBody
    (136) classDeclaration -> . classHead classBody
    (195) interfaceDeclaration -> . interfaceHead InterfaceBody
    (215) enumDeclaration -> . enumHead enumBody
    (239) annotationTypeDeclaration -> . annotationTypeDeclarationHead annotationTypeBody
    (162) constructorHead -> . constructorName formalParameterList_opt RPAREN methodHeadThrowList_opt
    (120) modifiers_opt -> . modifiers
    (121) modifiers_opt -> . empty
    (184) abstractMethodDeclaration -> . methodHeader SEMI
    (185) methodHeader -> . methodName formalParameterList_opt RPAREN methodHeadExtendedDims methodHeadThrowList_opt
    (137) classHead -> . className classExtends_opt classImpls_opt
    (196) interfaceHead -> . interfaceHeadName interfaceHeadExtends_opt
    (216) enumHead -> . enumHeadName classImpls_opt
    (240) annotationTypeDeclarationHead -> . annotationTypeDeclarationHeadName classExtends_opt classImpls_opt
    (163) constructorName -> . modifiers_opt typeParameters Identifier LPAREN
    (164) constructorName -> . modifiers_opt Identifier LPAREN
    (122) modifiers -> . modifier
    (123) modifiers -> . modifiers modifier
    (186) methodName -> . modifiers_opt typeParameters type Identifier LPAREN
    (187) methodName -> . modifiers_opt type Identifier LPAREN
    (138) className -> . classHeadName1 typeParameters
    (139) className -> . classHeadName1
    (197) interfaceHeadName -> . modifiers_opt INTERFACE Identifier typeParameters
    (198) interfaceHeadName -> . modifiers_opt INTERFACE Identifier
    (217) enumHeadName -> . modifiers_opt ENUM Identifier
    (218) enumHeadName -> . modifiers_opt ENUM Identifier typeParameters
    (241) annotationTypeDeclarationHeadName -> . modifiers AT INTERFACE Identifier
    (242) annotationTypeDeclarationHeadName -> . modifiers AT INTERFACE Identifier typeParameters
    (243) annotationTypeDeclarationHeadName -> . AT INTERFACE Identifier typeParameters
    (244) annotationTypeDeclarationHeadName -> . AT INTERFACE Identifier
    (124) modifier -> . PUBLIC
    (125) modifier -> . PROTECTED
    (126) modifier -> . PRIVATE
    (127) modifier -> . STATIC
    (128) modifier -> . ABSTRACT
    (129) modifier -> . FINAL
    (130) modifier -> . NATIVE
    (131) modifier -> . SYNCHRONIZED
    (132) modifier -> . TRANSIENT
    (133) modifier -> . VOLATILE
    (134) modifier -> . STRICTFP
    (135) modifier -> . annotation
    (140) classHeadName1 -> . modifiers_opt CLASS Identifier
    (270) annotation -> . normalAnnotation
    (271) annotation -> . markerAnnotation
    (272) annotation -> . singleMemberAnnotation
    (273) normalAnnotation -> . annotationName LPAREN memberValuePairs_opt RPAREN
    (280) markerAnnotation -> . annotationName
    (281) singleMemberAnnotation -> . annotationName LPAREN singleMemberAnnotationMemberValue RPAREN
    (274) annotationName -> . AT name

    BRPAREN         reduce using rule 631 (empty -> .)
    Identifier      reduce using rule 631 (empty -> .)
    INTERFACE       reduce using rule 631 (empty -> .)
    ENUM            reduce using rule 631 (empty -> .)
    CLASS           reduce using rule 631 (empty -> .)
    LESS            reduce using rule 631 (empty -> .)
    BOOLEAN         reduce using rule 631 (empty -> .)
    VOID            reduce using rule 631 (empty -> .)
    BYTE            reduce using rule 631 (empty -> .)
    SHORT           reduce using rule 631 (empty -> .)
    INT             reduce using rule 631 (empty -> .)
    LONG            reduce using rule 631 (empty -> .)
    CHAR            reduce using rule 631 (empty -> .)
    FLOAT           reduce using rule 631 (empty -> .)
    DOUBLE          reduce using rule 631 (empty -> .)
    SEMI            shift and go to state 113
    STATIC          shift and go to state 100
    BLPAREN         shift and go to state 120
    AT              shift and go to state 48
    PUBLIC          shift and go to state 46
    PROTECTED       shift and go to state 6
    PRIVATE         shift and go to state 14
    ABSTRACT        shift and go to state 5
    FINAL           shift and go to state 11
    NATIVE          shift and go to state 12
    SYNCHRONIZED    shift and go to state 2
    TRANSIENT       shift and go to state 19
    VOLATILE        shift and go to state 43
    STRICTFP        shift and go to state 18

    methodName                     shift and go to state 98
    modifiers_opt                  shift and go to state 99
    classHead                      shift and go to state 3
    className                      shift and go to state 13
    singleMemberAnnotation         shift and go to state 8
    markerAnnotation               shift and go to state 9
    methodDeclaration              shift and go to state 101
    constructorHead                shift and go to state 102
    annotationTypeDeclarationHead  shift and go to state 15
    classBodyDeclarations          shift and go to state 103
    enumHeadName                   shift and go to state 10
    constructorName                shift and go to state 104
    empty                          shift and go to state 105
    methodHeader                   shift and go to state 106
    abstractMethodDeclaration      shift and go to state 107
    enumDeclaration                shift and go to state 108
    classMemberDeclaration         shift and go to state 109
    interfaceHeadName              shift and go to state 27
    classHeadName1                 shift and go to state 33
    enumHead                       shift and go to state 30
    classBodyDeclaration           shift and go to state 119
    fieldDeclaration               shift and go to state 111
    annotationTypeDeclarationHeadName shift and go to state 34
    annotation                     shift and go to state 35
    modifiers                      shift and go to state 112
    annotationName                 shift and go to state 40
    staticInitializer              shift and go to state 114
    annotationTypeDeclaration      shift and go to state 115
    normalAnnotation               shift and go to state 24
    interfaceDeclaration           shift and go to state 116
    interfaceHead                  shift and go to state 47
    constructorDeclaration         shift and go to state 117
    classBodyDeclarations_opt      shift and go to state 118
    classDeclaration               shift and go to state 110
    modifier                       shift and go to state 45
    block                          shift and go to state 121

state 53

    (136) classDeclaration -> classHead classBody .

    IF              reduce using rule 136 (classDeclaration -> classHead classBody .)
    WHILE           reduce using rule 136 (classDeclaration -> classHead classBody .)
    FOR             reduce using rule 136 (classDeclaration -> classHead classBody .)
    BLPAREN         reduce using rule 136 (classDeclaration -> classHead classBody .)
    ASSERT          reduce using rule 136 (classDeclaration -> classHead classBody .)
    SEMI            reduce using rule 136 (classDeclaration -> classHead classBody .)
    SWITCH          reduce using rule 136 (classDeclaration -> classHead classBody .)
    DO              reduce using rule 136 (classDeclaration -> classHead classBody .)
    BREAK           reduce using rule 136 (classDeclaration -> classHead classBody .)
    CONTINUE        reduce using rule 136 (classDeclaration -> classHead classBody .)
    RETURN          reduce using rule 136 (classDeclaration -> classHead classBody .)
    SYNCHRONIZED    reduce using rule 136 (classDeclaration -> classHead classBody .)
    THROW           reduce using rule 136 (classDeclaration -> classHead classBody .)
    TRY             reduce using rule 136 (classDeclaration -> classHead classBody .)
    Identifier      reduce using rule 136 (classDeclaration -> classHead classBody .)
    AT              reduce using rule 136 (classDeclaration -> classHead classBody .)
    BOOLEAN         reduce using rule 136 (classDeclaration -> classHead classBody .)
    VOID            reduce using rule 136 (classDeclaration -> classHead classBody .)
    BYTE            reduce using rule 136 (classDeclaration -> classHead classBody .)
    SHORT           reduce using rule 136 (classDeclaration -> classHead classBody .)
    INT             reduce using rule 136 (classDeclaration -> classHead classBody .)
    LONG            reduce using rule 136 (classDeclaration -> classHead classBody .)
    CHAR            reduce using rule 136 (classDeclaration -> classHead classBody .)
    FLOAT           reduce using rule 136 (classDeclaration -> classHead classBody .)
    DOUBLE          reduce using rule 136 (classDeclaration -> classHead classBody .)
    PUBLIC          reduce using rule 136 (classDeclaration -> classHead classBody .)
    PROTECTED       reduce using rule 136 (classDeclaration -> classHead classBody .)
    PRIVATE         reduce using rule 136 (classDeclaration -> classHead classBody .)
    STATIC          reduce using rule 136 (classDeclaration -> classHead classBody .)
    ABSTRACT        reduce using rule 136 (classDeclaration -> classHead classBody .)
    FINAL           reduce using rule 136 (classDeclaration -> classHead classBody .)
    NATIVE          reduce using rule 136 (classDeclaration -> classHead classBody .)
    TRANSIENT       reduce using rule 136 (classDeclaration -> classHead classBody .)
    VOLATILE        reduce using rule 136 (classDeclaration -> classHead classBody .)
    STRICTFP        reduce using rule 136 (classDeclaration -> classHead classBody .)
    THIS            reduce using rule 136 (classDeclaration -> classHead classBody .)
    SUPER           reduce using rule 136 (classDeclaration -> classHead classBody .)
    OP_INC          reduce using rule 136 (classDeclaration -> classHead classBody .)
    OP_DEC          reduce using rule 136 (classDeclaration -> classHead classBody .)
    NEW             reduce using rule 136 (classDeclaration -> classHead classBody .)
    LESS            reduce using rule 136 (classDeclaration -> classHead classBody .)
    LPAREN          reduce using rule 136 (classDeclaration -> classHead classBody .)
    CharacterLiteral reduce using rule 136 (classDeclaration -> classHead classBody .)
    StringLiteral   reduce using rule 136 (classDeclaration -> classHead classBody .)
    NULL            reduce using rule 136 (classDeclaration -> classHead classBody .)
    LONG_NUMBER     reduce using rule 136 (classDeclaration -> classHead classBody .)
    LONG_HEX_NUMBER reduce using rule 136 (classDeclaration -> classHead classBody .)
    NON_INTEGER_1   reduce using rule 136 (classDeclaration -> classHead classBody .)
    NON_INTEGER_2   reduce using rule 136 (classDeclaration -> classHead classBody .)
    NON_INTEGER_3   reduce using rule 136 (classDeclaration -> classHead classBody .)
    NON_INTEGER_4   reduce using rule 136 (classDeclaration -> classHead classBody .)
    NON_INTEGER_5   reduce using rule 136 (classDeclaration -> classHead classBody .)
    NON_INTEGER_6   reduce using rule 136 (classDeclaration -> classHead classBody .)
    TRUE            reduce using rule 136 (classDeclaration -> classHead classBody .)
    FALSE           reduce using rule 136 (classDeclaration -> classHead classBody .)
    INTERFACE       reduce using rule 136 (classDeclaration -> classHead classBody .)
    ENUM            reduce using rule 136 (classDeclaration -> classHead classBody .)
    CLASS           reduce using rule 136 (classDeclaration -> classHead classBody .)
    BRPAREN         reduce using rule 136 (classDeclaration -> classHead classBody .)
    $end            reduce using rule 136 (classDeclaration -> classHead classBody .)
    CASE            reduce using rule 136 (classDeclaration -> classHead classBody .)
    DEFAULT         reduce using rule 136 (classDeclaration -> classHead classBody .)


state 54

    (146) classImpls -> IMPLEMENTS . interfaceTypeList
    (147) interfaceTypeList -> . interfaceType
    (148) interfaceTypeList -> . interfaceTypeList COMMA interfaceType
    (53) interfaceType -> . classOrInterfaceType
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    Identifier      shift and go to state 68

    classOrInterface               shift and go to state 122
    qualifiedName                  shift and go to state 64
    name                           shift and go to state 123
    classOrInterfaceType           shift and go to state 124
    interfaceTypeList              shift and go to state 125
    simpleName                     shift and go to state 66
    interfaceType                  shift and go to state 126
    genericType                    shift and go to state 127

state 55

    (216) enumHead -> enumHeadName classImpls_opt .

    BLPAREN         reduce using rule 216 (enumHead -> enumHeadName classImpls_opt .)


state 56

    (144) classImpls_opt -> empty .

    BLPAREN         reduce using rule 144 (classImpls_opt -> empty .)


state 57

    (143) classImpls_opt -> classImpls .

    BLPAREN         reduce using rule 143 (classImpls_opt -> classImpls .)


state 58

    (145) classExtends -> EXTENDS . classType
    (52) classType -> . classOrInterfaceType
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    Identifier      shift and go to state 68

    qualifiedName                  shift and go to state 64
    name                           shift and go to state 123
    classType                      shift and go to state 128
    classOrInterfaceType           shift and go to state 129
    classOrInterface               shift and go to state 122
    simpleName                     shift and go to state 66
    genericType                    shift and go to state 127

state 59

    (141) classExtends_opt -> classExtends .

    IMPLEMENTS      reduce using rule 141 (classExtends_opt -> classExtends .)
    BLPAREN         reduce using rule 141 (classExtends_opt -> classExtends .)


state 60

    (137) classHead -> className classExtends_opt . classImpls_opt
    (143) classImpls_opt -> . classImpls
    (144) classImpls_opt -> . empty
    (146) classImpls -> . IMPLEMENTS interfaceTypeList
    (631) empty -> .

    IMPLEMENTS      shift and go to state 54
    BLPAREN         reduce using rule 631 (empty -> .)

    classImpls_opt                 shift and go to state 130
    empty                          shift and go to state 56
    classImpls                     shift and go to state 57

state 61

    (142) classExtends_opt -> empty .

    IMPLEMENTS      reduce using rule 142 (classExtends_opt -> empty .)
    BLPAREN         reduce using rule 142 (classExtends_opt -> empty .)


state 62

    (239) annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .

    IF              reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    WHILE           reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    FOR             reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    BLPAREN         reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    ASSERT          reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    SEMI            reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    SWITCH          reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    DO              reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    BREAK           reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    CONTINUE        reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    RETURN          reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    SYNCHRONIZED    reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    THROW           reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    TRY             reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    Identifier      reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    AT              reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    BOOLEAN         reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    VOID            reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    BYTE            reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    SHORT           reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    INT             reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    LONG            reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    CHAR            reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    FLOAT           reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    DOUBLE          reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    PUBLIC          reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    PROTECTED       reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    PRIVATE         reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    STATIC          reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    ABSTRACT        reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    FINAL           reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    NATIVE          reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    TRANSIENT       reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    VOLATILE        reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    STRICTFP        reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    THIS            reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    SUPER           reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    OP_INC          reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    OP_DEC          reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    NEW             reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    LESS            reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    LPAREN          reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    CharacterLiteral reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    StringLiteral   reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    NULL            reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    LONG_NUMBER     reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    LONG_HEX_NUMBER reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    NON_INTEGER_1   reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    NON_INTEGER_2   reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    NON_INTEGER_3   reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    NON_INTEGER_4   reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    NON_INTEGER_5   reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    NON_INTEGER_6   reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    TRUE            reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    FALSE           reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    INTERFACE       reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    ENUM            reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    CLASS           reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    BRPAREN         reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    $end            reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    CASE            reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)
    DEFAULT         reduce using rule 239 (annotationTypeDeclaration -> annotationTypeDeclarationHead annotationTypeBody .)


state 63

    (245) annotationTypeBody -> BLPAREN . annotationTypeMemberDeclarations_opt BRPAREN
    (246) annotationTypeMemberDeclarations_opt -> . annotationTypeMemberDeclarations
    (247) annotationTypeMemberDeclarations_opt -> . empty
    (248) annotationTypeMemberDeclarations -> . annotationTypeMemberDeclaration
    (249) annotationTypeMemberDeclarations -> . annotationTypeMemberDeclarations annotationTypeMemberDeclaration
    (631) empty -> .
    (250) annotationTypeMemberDeclaration -> . annotationMethodHead SEMI
    (251) annotationTypeMemberDeclaration -> . constantDeclaration
    (252) annotationTypeMemberDeclaration -> . constructorDeclaration
    (253) annotationTypeMemberDeclaration -> . typeDeclaration
    (254) annotationMethodHead -> . annotationMethodHeadName formalParameterList_opt RPAREN methodHeadExtendedDims annotationMethodHeadDefaultValue_opt
    (214) constantDeclaration -> . fieldDeclaration
    (161) constructorDeclaration -> . constructorHead methodBody
    (24) typeDeclaration -> . classDeclaration
    (25) typeDeclaration -> . interfaceDeclaration
    (26) typeDeclaration -> . annotationTypeDeclaration
    (27) typeDeclaration -> . enumDeclaration
    (28) typeDeclaration -> . SEMI
    (257) annotationMethodHeadName -> . modifiers_opt typeParameters type Identifier LPAREN
    (258) annotationMethodHeadName -> . modifiers_opt type Identifier LPAREN
    (181) fieldDeclaration -> . modifiers_opt type variableDeclarators SEMI
    (162) constructorHead -> . constructorName formalParameterList_opt RPAREN methodHeadThrowList_opt
    (136) classDeclaration -> . classHead classBody
    (195) interfaceDeclaration -> . interfaceHead InterfaceBody
    (239) annotationTypeDeclaration -> . annotationTypeDeclarationHead annotationTypeBody
    (215) enumDeclaration -> . enumHead enumBody
    (120) modifiers_opt -> . modifiers
    (121) modifiers_opt -> . empty
    (163) constructorName -> . modifiers_opt typeParameters Identifier LPAREN
    (164) constructorName -> . modifiers_opt Identifier LPAREN
    (137) classHead -> . className classExtends_opt classImpls_opt
    (196) interfaceHead -> . interfaceHeadName interfaceHeadExtends_opt
    (240) annotationTypeDeclarationHead -> . annotationTypeDeclarationHeadName classExtends_opt classImpls_opt
    (216) enumHead -> . enumHeadName classImpls_opt
    (122) modifiers -> . modifier
    (123) modifiers -> . modifiers modifier
    (138) className -> . classHeadName1 typeParameters
    (139) className -> . classHeadName1
    (197) interfaceHeadName -> . modifiers_opt INTERFACE Identifier typeParameters
    (198) interfaceHeadName -> . modifiers_opt INTERFACE Identifier
    (241) annotationTypeDeclarationHeadName -> . modifiers AT INTERFACE Identifier
    (242) annotationTypeDeclarationHeadName -> . modifiers AT INTERFACE Identifier typeParameters
    (243) annotationTypeDeclarationHeadName -> . AT INTERFACE Identifier typeParameters
    (244) annotationTypeDeclarationHeadName -> . AT INTERFACE Identifier
    (217) enumHeadName -> . modifiers_opt ENUM Identifier
    (218) enumHeadName -> . modifiers_opt ENUM Identifier typeParameters
    (124) modifier -> . PUBLIC
    (125) modifier -> . PROTECTED
    (126) modifier -> . PRIVATE
    (127) modifier -> . STATIC
    (128) modifier -> . ABSTRACT
    (129) modifier -> . FINAL
    (130) modifier -> . NATIVE
    (131) modifier -> . SYNCHRONIZED
    (132) modifier -> . TRANSIENT
    (133) modifier -> . VOLATILE
    (134) modifier -> . STRICTFP
    (135) modifier -> . annotation
    (140) classHeadName1 -> . modifiers_opt CLASS Identifier
    (270) annotation -> . normalAnnotation
    (271) annotation -> . markerAnnotation
    (272) annotation -> . singleMemberAnnotation
    (273) normalAnnotation -> . annotationName LPAREN memberValuePairs_opt RPAREN
    (280) markerAnnotation -> . annotationName
    (281) singleMemberAnnotation -> . annotationName LPAREN singleMemberAnnotationMemberValue RPAREN
    (274) annotationName -> . AT name

    BRPAREN         reduce using rule 631 (empty -> .)
    Identifier      reduce using rule 631 (empty -> .)
    INTERFACE       reduce using rule 631 (empty -> .)
    ENUM            reduce using rule 631 (empty -> .)
    CLASS           reduce using rule 631 (empty -> .)
    LESS            reduce using rule 631 (empty -> .)
    BOOLEAN         reduce using rule 631 (empty -> .)
    VOID            reduce using rule 631 (empty -> .)
    BYTE            reduce using rule 631 (empty -> .)
    SHORT           reduce using rule 631 (empty -> .)
    INT             reduce using rule 631 (empty -> .)
    LONG            reduce using rule 631 (empty -> .)
    CHAR            reduce using rule 631 (empty -> .)
    FLOAT           reduce using rule 631 (empty -> .)
    DOUBLE          reduce using rule 631 (empty -> .)
    SEMI            shift and go to state 16
    AT              shift and go to state 48
    PUBLIC          shift and go to state 46
    PROTECTED       shift and go to state 6
    PRIVATE         shift and go to state 14
    STATIC          shift and go to state 7
    ABSTRACT        shift and go to state 5
    FINAL           shift and go to state 11
    NATIVE          shift and go to state 12
    SYNCHRONIZED    shift and go to state 2
    TRANSIENT       shift and go to state 19
    VOLATILE        shift and go to state 43
    STRICTFP        shift and go to state 18

    annotationTypeMemberDeclarations_opt shift and go to state 131
    modifiers_opt                  shift and go to state 132
    classHead                      shift and go to state 3
    className                      shift and go to state 13
    singleMemberAnnotation         shift and go to state 8
    interfaceHeadName              shift and go to state 27
    markerAnnotation               shift and go to state 9
    enumHeadName                   shift and go to state 10
    constructorHead                shift and go to state 102
    annotationTypeMemberDeclarations shift and go to state 133
    annotationTypeDeclarationHead  shift and go to state 15
    constructorName                shift and go to state 104
    annotationTypeMemberDeclaration shift and go to state 134
    empty                          shift and go to state 135
    constantDeclaration            shift and go to state 136
    normalAnnotation               shift and go to state 24
    enumDeclaration                shift and go to state 25
    annotationMethodHeadName       shift and go to state 137
    classHeadName1                 shift and go to state 33
    enumHead                       shift and go to state 30
    classDeclaration               shift and go to state 32
    fieldDeclaration               shift and go to state 138
    annotationTypeDeclarationHeadName shift and go to state 34
    annotation                     shift and go to state 35
    modifiers                      shift and go to state 112
    typeDeclaration                shift and go to state 139
    annotationName                 shift and go to state 40
    annotationTypeDeclaration      shift and go to state 41
    annotationMethodHead           shift and go to state 140
    interfaceDeclaration           shift and go to state 42
    constructorDeclaration         shift and go to state 141
    modifier                       shift and go to state 45
    interfaceHead                  shift and go to state 47

state 64

    (30) name -> qualifiedName .

    DOT             reduce using rule 30 (name -> qualifiedName .)
    FLPAREN         reduce using rule 30 (name -> qualifiedName .)
    LESS            reduce using rule 30 (name -> qualifiedName .)
    Identifier      reduce using rule 30 (name -> qualifiedName .)
    SEMI            reduce using rule 30 (name -> qualifiedName .)
    INSTANCEOF      reduce using rule 30 (name -> qualifiedName .)
    OP_EQ           reduce using rule 30 (name -> qualifiedName .)
    OP_NE           reduce using rule 30 (name -> qualifiedName .)
    AND             reduce using rule 30 (name -> qualifiedName .)
    CARET           reduce using rule 30 (name -> qualifiedName .)
    VERTICAL        reduce using rule 30 (name -> qualifiedName .)
    OP_LAND         reduce using rule 30 (name -> qualifiedName .)
    QUES            reduce using rule 30 (name -> qualifiedName .)
    OP_LOR          reduce using rule 30 (name -> qualifiedName .)
    RPAREN          reduce using rule 30 (name -> qualifiedName .)
    COMMA           reduce using rule 30 (name -> qualifiedName .)
    BRPAREN         reduce using rule 30 (name -> qualifiedName .)
    LPAREN          reduce using rule 30 (name -> qualifiedName .)
    OP_INC          reduce using rule 30 (name -> qualifiedName .)
    OP_DEC          reduce using rule 30 (name -> qualifiedName .)
    MULT            reduce using rule 30 (name -> qualifiedName .)
    SLASH           reduce using rule 30 (name -> qualifiedName .)
    PERCENT         reduce using rule 30 (name -> qualifiedName .)
    PLUS            reduce using rule 30 (name -> qualifiedName .)
    DASH            reduce using rule 30 (name -> qualifiedName .)
    OP_SHR          reduce using rule 30 (name -> qualifiedName .)
    OP_SHL          reduce using rule 30 (name -> qualifiedName .)
    OP_SHRR         reduce using rule 30 (name -> qualifiedName .)
    OP_GE           reduce using rule 30 (name -> qualifiedName .)
    MORE            reduce using rule 30 (name -> qualifiedName .)
    OP_LE           reduce using rule 30 (name -> qualifiedName .)
    ASS             reduce using rule 30 (name -> qualifiedName .)
    ASS_ADD         reduce using rule 30 (name -> qualifiedName .)
    ASS_SUB         reduce using rule 30 (name -> qualifiedName .)
    ASS_MUL         reduce using rule 30 (name -> qualifiedName .)
    ASS_DIV         reduce using rule 30 (name -> qualifiedName .)
    ASS_AND         reduce using rule 30 (name -> qualifiedName .)
    ASS_OR          reduce using rule 30 (name -> qualifiedName .)
    ASS_XOR         reduce using rule 30 (name -> qualifiedName .)
    ASS_MOD         reduce using rule 30 (name -> qualifiedName .)
    ASS_SHL         reduce using rule 30 (name -> qualifiedName .)
    ASS_SHRR        reduce using rule 30 (name -> qualifiedName .)
    ASS_SHR         reduce using rule 30 (name -> qualifiedName .)
    COLON           reduce using rule 30 (name -> qualifiedName .)
    FRPAREN         reduce using rule 30 (name -> qualifiedName .)
    BLPAREN         reduce using rule 30 (name -> qualifiedName .)
    IMPLEMENTS      reduce using rule 30 (name -> qualifiedName .)
    PUBLIC          reduce using rule 30 (name -> qualifiedName .)
    PROTECTED       reduce using rule 30 (name -> qualifiedName .)
    PRIVATE         reduce using rule 30 (name -> qualifiedName .)
    STATIC          reduce using rule 30 (name -> qualifiedName .)
    ABSTRACT        reduce using rule 30 (name -> qualifiedName .)
    FINAL           reduce using rule 30 (name -> qualifiedName .)
    NATIVE          reduce using rule 30 (name -> qualifiedName .)
    SYNCHRONIZED    reduce using rule 30 (name -> qualifiedName .)
    TRANSIENT       reduce using rule 30 (name -> qualifiedName .)
    VOLATILE        reduce using rule 30 (name -> qualifiedName .)
    STRICTFP        reduce using rule 30 (name -> qualifiedName .)
    AT              reduce using rule 30 (name -> qualifiedName .)
    BOOLEAN         reduce using rule 30 (name -> qualifiedName .)
    VOID            reduce using rule 30 (name -> qualifiedName .)
    BYTE            reduce using rule 30 (name -> qualifiedName .)
    SHORT           reduce using rule 30 (name -> qualifiedName .)
    INT             reduce using rule 30 (name -> qualifiedName .)
    LONG            reduce using rule 30 (name -> qualifiedName .)
    CHAR            reduce using rule 30 (name -> qualifiedName .)
    FLOAT           reduce using rule 30 (name -> qualifiedName .)
    DOUBLE          reduce using rule 30 (name -> qualifiedName .)
    OP_ARRAY        reduce using rule 30 (name -> qualifiedName .)
    PACKAGE         reduce using rule 30 (name -> qualifiedName .)
    INTERFACE       reduce using rule 30 (name -> qualifiedName .)
    ENUM            reduce using rule 30 (name -> qualifiedName .)
    CLASS           reduce using rule 30 (name -> qualifiedName .)


state 65

    (20) singleTypeImportDeclaration -> IMPORT name . SEMI
    (21) typeImportOnDemandDeclaration -> IMPORT name . DOT MULT SEMI
    (32) qualifiedName -> name . DOT simpleName

    SEMI            shift and go to state 142
    DOT             shift and go to state 143


state 66

    (29) name -> simpleName .

    DOT             reduce using rule 29 (name -> simpleName .)
    FLPAREN         reduce using rule 29 (name -> simpleName .)
    LESS            reduce using rule 29 (name -> simpleName .)
    Identifier      reduce using rule 29 (name -> simpleName .)
    SEMI            reduce using rule 29 (name -> simpleName .)
    INSTANCEOF      reduce using rule 29 (name -> simpleName .)
    OP_EQ           reduce using rule 29 (name -> simpleName .)
    OP_NE           reduce using rule 29 (name -> simpleName .)
    AND             reduce using rule 29 (name -> simpleName .)
    CARET           reduce using rule 29 (name -> simpleName .)
    VERTICAL        reduce using rule 29 (name -> simpleName .)
    OP_LAND         reduce using rule 29 (name -> simpleName .)
    QUES            reduce using rule 29 (name -> simpleName .)
    OP_LOR          reduce using rule 29 (name -> simpleName .)
    RPAREN          reduce using rule 29 (name -> simpleName .)
    COMMA           reduce using rule 29 (name -> simpleName .)
    BRPAREN         reduce using rule 29 (name -> simpleName .)
    LPAREN          reduce using rule 29 (name -> simpleName .)
    OP_INC          reduce using rule 29 (name -> simpleName .)
    OP_DEC          reduce using rule 29 (name -> simpleName .)
    MULT            reduce using rule 29 (name -> simpleName .)
    SLASH           reduce using rule 29 (name -> simpleName .)
    PERCENT         reduce using rule 29 (name -> simpleName .)
    PLUS            reduce using rule 29 (name -> simpleName .)
    DASH            reduce using rule 29 (name -> simpleName .)
    OP_SHR          reduce using rule 29 (name -> simpleName .)
    OP_SHL          reduce using rule 29 (name -> simpleName .)
    OP_SHRR         reduce using rule 29 (name -> simpleName .)
    OP_GE           reduce using rule 29 (name -> simpleName .)
    MORE            reduce using rule 29 (name -> simpleName .)
    OP_LE           reduce using rule 29 (name -> simpleName .)
    ASS             reduce using rule 29 (name -> simpleName .)
    ASS_ADD         reduce using rule 29 (name -> simpleName .)
    ASS_SUB         reduce using rule 29 (name -> simpleName .)
    ASS_MUL         reduce using rule 29 (name -> simpleName .)
    ASS_DIV         reduce using rule 29 (name -> simpleName .)
    ASS_AND         reduce using rule 29 (name -> simpleName .)
    ASS_OR          reduce using rule 29 (name -> simpleName .)
    ASS_XOR         reduce using rule 29 (name -> simpleName .)
    ASS_MOD         reduce using rule 29 (name -> simpleName .)
    ASS_SHL         reduce using rule 29 (name -> simpleName .)
    ASS_SHRR        reduce using rule 29 (name -> simpleName .)
    ASS_SHR         reduce using rule 29 (name -> simpleName .)
    COLON           reduce using rule 29 (name -> simpleName .)
    FRPAREN         reduce using rule 29 (name -> simpleName .)
    BLPAREN         reduce using rule 29 (name -> simpleName .)
    IMPLEMENTS      reduce using rule 29 (name -> simpleName .)
    PUBLIC          reduce using rule 29 (name -> simpleName .)
    PROTECTED       reduce using rule 29 (name -> simpleName .)
    PRIVATE         reduce using rule 29 (name -> simpleName .)
    STATIC          reduce using rule 29 (name -> simpleName .)
    ABSTRACT        reduce using rule 29 (name -> simpleName .)
    FINAL           reduce using rule 29 (name -> simpleName .)
    NATIVE          reduce using rule 29 (name -> simpleName .)
    SYNCHRONIZED    reduce using rule 29 (name -> simpleName .)
    TRANSIENT       reduce using rule 29 (name -> simpleName .)
    VOLATILE        reduce using rule 29 (name -> simpleName .)
    STRICTFP        reduce using rule 29 (name -> simpleName .)
    AT              reduce using rule 29 (name -> simpleName .)
    BOOLEAN         reduce using rule 29 (name -> simpleName .)
    VOID            reduce using rule 29 (name -> simpleName .)
    BYTE            reduce using rule 29 (name -> simpleName .)
    SHORT           reduce using rule 29 (name -> simpleName .)
    INT             reduce using rule 29 (name -> simpleName .)
    LONG            reduce using rule 29 (name -> simpleName .)
    CHAR            reduce using rule 29 (name -> simpleName .)
    FLOAT           reduce using rule 29 (name -> simpleName .)
    DOUBLE          reduce using rule 29 (name -> simpleName .)
    OP_ARRAY        reduce using rule 29 (name -> simpleName .)
    PACKAGE         reduce using rule 29 (name -> simpleName .)
    INTERFACE       reduce using rule 29 (name -> simpleName .)
    ENUM            reduce using rule 29 (name -> simpleName .)
    CLASS           reduce using rule 29 (name -> simpleName .)


state 67

    (22) singleStaticImportDeclaration -> IMPORT STATIC . name SEMI
    (23) staticImportOnDemandDeclaration -> IMPORT STATIC . name DOT MULT SEMI
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    Identifier      shift and go to state 68

    simpleName                     shift and go to state 66
    qualifiedName                  shift and go to state 64
    name                           shift and go to state 144

state 68

    (31) simpleName -> Identifier .

    DOT             reduce using rule 31 (simpleName -> Identifier .)
    FLPAREN         reduce using rule 31 (simpleName -> Identifier .)
    LESS            reduce using rule 31 (simpleName -> Identifier .)
    Identifier      reduce using rule 31 (simpleName -> Identifier .)
    LPAREN          reduce using rule 31 (simpleName -> Identifier .)
    OP_INC          reduce using rule 31 (simpleName -> Identifier .)
    OP_DEC          reduce using rule 31 (simpleName -> Identifier .)
    MULT            reduce using rule 31 (simpleName -> Identifier .)
    SLASH           reduce using rule 31 (simpleName -> Identifier .)
    PERCENT         reduce using rule 31 (simpleName -> Identifier .)
    PLUS            reduce using rule 31 (simpleName -> Identifier .)
    DASH            reduce using rule 31 (simpleName -> Identifier .)
    OP_SHR          reduce using rule 31 (simpleName -> Identifier .)
    OP_SHL          reduce using rule 31 (simpleName -> Identifier .)
    OP_SHRR         reduce using rule 31 (simpleName -> Identifier .)
    OP_GE           reduce using rule 31 (simpleName -> Identifier .)
    MORE            reduce using rule 31 (simpleName -> Identifier .)
    OP_LE           reduce using rule 31 (simpleName -> Identifier .)
    INSTANCEOF      reduce using rule 31 (simpleName -> Identifier .)
    OP_EQ           reduce using rule 31 (simpleName -> Identifier .)
    OP_NE           reduce using rule 31 (simpleName -> Identifier .)
    AND             reduce using rule 31 (simpleName -> Identifier .)
    CARET           reduce using rule 31 (simpleName -> Identifier .)
    VERTICAL        reduce using rule 31 (simpleName -> Identifier .)
    OP_LAND         reduce using rule 31 (simpleName -> Identifier .)
    QUES            reduce using rule 31 (simpleName -> Identifier .)
    OP_LOR          reduce using rule 31 (simpleName -> Identifier .)
    SEMI            reduce using rule 31 (simpleName -> Identifier .)
    COLON           reduce using rule 31 (simpleName -> Identifier .)
    COMMA           reduce using rule 31 (simpleName -> Identifier .)
    RPAREN          reduce using rule 31 (simpleName -> Identifier .)
    FRPAREN         reduce using rule 31 (simpleName -> Identifier .)
    BRPAREN         reduce using rule 31 (simpleName -> Identifier .)
    ASS             reduce using rule 31 (simpleName -> Identifier .)
    ASS_ADD         reduce using rule 31 (simpleName -> Identifier .)
    ASS_SUB         reduce using rule 31 (simpleName -> Identifier .)
    ASS_MUL         reduce using rule 31 (simpleName -> Identifier .)
    ASS_DIV         reduce using rule 31 (simpleName -> Identifier .)
    ASS_AND         reduce using rule 31 (simpleName -> Identifier .)
    ASS_OR          reduce using rule 31 (simpleName -> Identifier .)
    ASS_XOR         reduce using rule 31 (simpleName -> Identifier .)
    ASS_MOD         reduce using rule 31 (simpleName -> Identifier .)
    ASS_SHL         reduce using rule 31 (simpleName -> Identifier .)
    ASS_SHRR        reduce using rule 31 (simpleName -> Identifier .)
    ASS_SHR         reduce using rule 31 (simpleName -> Identifier .)
    PUBLIC          reduce using rule 31 (simpleName -> Identifier .)
    PROTECTED       reduce using rule 31 (simpleName -> Identifier .)
    PRIVATE         reduce using rule 31 (simpleName -> Identifier .)
    STATIC          reduce using rule 31 (simpleName -> Identifier .)
    ABSTRACT        reduce using rule 31 (simpleName -> Identifier .)
    FINAL           reduce using rule 31 (simpleName -> Identifier .)
    NATIVE          reduce using rule 31 (simpleName -> Identifier .)
    SYNCHRONIZED    reduce using rule 31 (simpleName -> Identifier .)
    TRANSIENT       reduce using rule 31 (simpleName -> Identifier .)
    VOLATILE        reduce using rule 31 (simpleName -> Identifier .)
    STRICTFP        reduce using rule 31 (simpleName -> Identifier .)
    AT              reduce using rule 31 (simpleName -> Identifier .)
    BOOLEAN         reduce using rule 31 (simpleName -> Identifier .)
    VOID            reduce using rule 31 (simpleName -> Identifier .)
    BYTE            reduce using rule 31 (simpleName -> Identifier .)
    SHORT           reduce using rule 31 (simpleName -> Identifier .)
    INT             reduce using rule 31 (simpleName -> Identifier .)
    LONG            reduce using rule 31 (simpleName -> Identifier .)
    CHAR            reduce using rule 31 (simpleName -> Identifier .)
    FLOAT           reduce using rule 31 (simpleName -> Identifier .)
    DOUBLE          reduce using rule 31 (simpleName -> Identifier .)
    IMPLEMENTS      reduce using rule 31 (simpleName -> Identifier .)
    BLPAREN         reduce using rule 31 (simpleName -> Identifier .)
    OP_ARRAY        reduce using rule 31 (simpleName -> Identifier .)
    PACKAGE         reduce using rule 31 (simpleName -> Identifier .)
    INTERFACE       reduce using rule 31 (simpleName -> Identifier .)
    ENUM            reduce using rule 31 (simpleName -> Identifier .)
    CLASS           reduce using rule 31 (simpleName -> Identifier .)


state 69

    (15) packageDeclarationName -> PACKAGE name .
    (32) qualifiedName -> name . DOT simpleName

    SEMI            reduce using rule 15 (packageDeclarationName -> PACKAGE name .)
    DOT             shift and go to state 145


state 70

    (199) interfaceHeadExtends_opt -> interfaceHeadExtends .

    BLPAREN         reduce using rule 199 (interfaceHeadExtends_opt -> interfaceHeadExtends .)


state 71

    (196) interfaceHead -> interfaceHeadName interfaceHeadExtends_opt .

    BLPAREN         reduce using rule 196 (interfaceHead -> interfaceHeadName interfaceHeadExtends_opt .)


state 72

    (201) interfaceHeadExtends -> EXTENDS . interfaceTypeList
    (147) interfaceTypeList -> . interfaceType
    (148) interfaceTypeList -> . interfaceTypeList COMMA interfaceType
    (53) interfaceType -> . classOrInterfaceType
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    Identifier      shift and go to state 68

    classOrInterface               shift and go to state 122
    qualifiedName                  shift and go to state 64
    name                           shift and go to state 123
    classOrInterfaceType           shift and go to state 124
    interfaceTypeList              shift and go to state 146
    simpleName                     shift and go to state 66
    interfaceType                  shift and go to state 126
    genericType                    shift and go to state 127

state 73

    (200) interfaceHeadExtends_opt -> empty .

    BLPAREN         reduce using rule 200 (interfaceHeadExtends_opt -> empty .)


state 74

    (121) modifiers_opt -> empty .

    BOOLEAN         reduce using rule 121 (modifiers_opt -> empty .)
    VOID            reduce using rule 121 (modifiers_opt -> empty .)
    BYTE            reduce using rule 121 (modifiers_opt -> empty .)
    SHORT           reduce using rule 121 (modifiers_opt -> empty .)
    INT             reduce using rule 121 (modifiers_opt -> empty .)
    LONG            reduce using rule 121 (modifiers_opt -> empty .)
    CHAR            reduce using rule 121 (modifiers_opt -> empty .)
    FLOAT           reduce using rule 121 (modifiers_opt -> empty .)
    DOUBLE          reduce using rule 121 (modifiers_opt -> empty .)
    Identifier      reduce using rule 121 (modifiers_opt -> empty .)
    INTERFACE       reduce using rule 121 (modifiers_opt -> empty .)
    ENUM            reduce using rule 121 (modifiers_opt -> empty .)
    CLASS           reduce using rule 121 (modifiers_opt -> empty .)
    LESS            reduce using rule 121 (modifiers_opt -> empty .)


state 75

    (3) compilationUnit -> packageDeclaration typeDeclarations .
    (12) typeDeclarations -> typeDeclarations . typeDeclaration
    (24) typeDeclaration -> . classDeclaration
    (25) typeDeclaration -> . interfaceDeclaration
    (26) typeDeclaration -> . annotationTypeDeclaration
    (27) typeDeclaration -> . enumDeclaration
    (28) typeDeclaration -> . SEMI
    (136) classDeclaration -> . classHead classBody
    (195) interfaceDeclaration -> . interfaceHead InterfaceBody
    (239) annotationTypeDeclaration -> . annotationTypeDeclarationHead annotationTypeBody
    (215) enumDeclaration -> . enumHead enumBody
    (137) classHead -> . className classExtends_opt classImpls_opt
    (196) interfaceHead -> . interfaceHeadName interfaceHeadExtends_opt
    (240) annotationTypeDeclarationHead -> . annotationTypeDeclarationHeadName classExtends_opt classImpls_opt
    (216) enumHead -> . enumHeadName classImpls_opt
    (138) className -> . classHeadName1 typeParameters
    (139) className -> . classHeadName1
    (197) interfaceHeadName -> . modifiers_opt INTERFACE Identifier typeParameters
    (198) interfaceHeadName -> . modifiers_opt INTERFACE Identifier
    (241) annotationTypeDeclarationHeadName -> . modifiers AT INTERFACE Identifier
    (242) annotationTypeDeclarationHeadName -> . modifiers AT INTERFACE Identifier typeParameters
    (243) annotationTypeDeclarationHeadName -> . AT INTERFACE Identifier typeParameters
    (244) annotationTypeDeclarationHeadName -> . AT INTERFACE Identifier
    (217) enumHeadName -> . modifiers_opt ENUM Identifier
    (218) enumHeadName -> . modifiers_opt ENUM Identifier typeParameters
    (140) classHeadName1 -> . modifiers_opt CLASS Identifier
    (120) modifiers_opt -> . modifiers
    (121) modifiers_opt -> . empty
    (122) modifiers -> . modifier
    (123) modifiers -> . modifiers modifier
    (631) empty -> .
    (124) modifier -> . PUBLIC
    (125) modifier -> . PROTECTED
    (126) modifier -> . PRIVATE
    (127) modifier -> . STATIC
    (128) modifier -> . ABSTRACT
    (129) modifier -> . FINAL
    (130) modifier -> . NATIVE
    (131) modifier -> . SYNCHRONIZED
    (132) modifier -> . TRANSIENT
    (133) modifier -> . VOLATILE
    (134) modifier -> . STRICTFP
    (135) modifier -> . annotation
    (270) annotation -> . normalAnnotation
    (271) annotation -> . markerAnnotation
    (272) annotation -> . singleMemberAnnotation
    (273) normalAnnotation -> . annotationName LPAREN memberValuePairs_opt RPAREN
    (280) markerAnnotation -> . annotationName
    (281) singleMemberAnnotation -> . annotationName LPAREN singleMemberAnnotationMemberValue RPAREN
    (274) annotationName -> . AT name

    $end            reduce using rule 3 (compilationUnit -> packageDeclaration typeDeclarations .)
    SEMI            shift and go to state 16
    AT              shift and go to state 48
    INTERFACE       reduce using rule 631 (empty -> .)
    ENUM            reduce using rule 631 (empty -> .)
    CLASS           reduce using rule 631 (empty -> .)
    PUBLIC          shift and go to state 46
    PROTECTED       shift and go to state 6
    PRIVATE         shift and go to state 14
    STATIC          shift and go to state 7
    ABSTRACT        shift and go to state 5
    FINAL           shift and go to state 11
    NATIVE          shift and go to state 12
    SYNCHRONIZED    shift and go to state 2
    TRANSIENT       shift and go to state 19
    VOLATILE        shift and go to state 43
    STRICTFP        shift and go to state 18

    modifiers_opt                  shift and go to state 1
    classHead                      shift and go to state 3
    singleMemberAnnotation         shift and go to state 8
    enumHeadName                   shift and go to state 10
    annotationTypeDeclaration      shift and go to state 41
    enumDeclaration                shift and go to state 25
    empty                          shift and go to state 74
    annotationTypeDeclarationHead  shift and go to state 15
    markerAnnotation               shift and go to state 9
    interfaceHeadName              shift and go to state 27
    enumHead                       shift and go to state 30
    classDeclaration               shift and go to state 32
    classHeadName1                 shift and go to state 33
    annotationTypeDeclarationHeadName shift and go to state 34
    annotation                     shift and go to state 35
    modifiers                      shift and go to state 76
    typeDeclaration                shift and go to state 78
    annotationName                 shift and go to state 40
    className                      shift and go to state 13
    interfaceDeclaration           shift and go to state 42
    normalAnnotation               shift and go to state 24
    modifier                       shift and go to state 45
    interfaceHead                  shift and go to state 47

state 76

    (241) annotationTypeDeclarationHeadName -> modifiers . AT INTERFACE Identifier
    (242) annotationTypeDeclarationHeadName -> modifiers . AT INTERFACE Identifier typeParameters
    (120) modifiers_opt -> modifiers .
    (123) modifiers -> modifiers . modifier
    (124) modifier -> . PUBLIC
    (125) modifier -> . PROTECTED
    (126) modifier -> . PRIVATE
    (127) modifier -> . STATIC
    (128) modifier -> . ABSTRACT
    (129) modifier -> . FINAL
    (130) modifier -> . NATIVE
    (131) modifier -> . SYNCHRONIZED
    (132) modifier -> . TRANSIENT
    (133) modifier -> . VOLATILE
    (134) modifier -> . STRICTFP
    (135) modifier -> . annotation
    (270) annotation -> . normalAnnotation
    (271) annotation -> . markerAnnotation
    (272) annotation -> . singleMemberAnnotation
    (273) normalAnnotation -> . annotationName LPAREN memberValuePairs_opt RPAREN
    (280) markerAnnotation -> . annotationName
    (281) singleMemberAnnotation -> . annotationName LPAREN singleMemberAnnotationMemberValue RPAREN
    (274) annotationName -> . AT name

    AT              shift and go to state 86
    INTERFACE       reduce using rule 120 (modifiers_opt -> modifiers .)
    ENUM            reduce using rule 120 (modifiers_opt -> modifiers .)
    CLASS           reduce using rule 120 (modifiers_opt -> modifiers .)
    PUBLIC          shift and go to state 46
    PROTECTED       shift and go to state 6
    PRIVATE         shift and go to state 14
    STATIC          shift and go to state 7
    ABSTRACT        shift and go to state 5
    FINAL           shift and go to state 11
    NATIVE          shift and go to state 12
    SYNCHRONIZED    shift and go to state 2
    TRANSIENT       shift and go to state 19
    VOLATILE        shift and go to state 43
    STRICTFP        shift and go to state 18

    markerAnnotation               shift and go to state 9
    annotationName                 shift and go to state 40
    singleMemberAnnotation         shift and go to state 8
    normalAnnotation               shift and go to state 24
    modifier                       shift and go to state 87
    annotation                     shift and go to state 35

state 77

    (1) compilationUnit -> packageDeclaration importDeclarations . typeDeclarations
    (2) compilationUnit -> packageDeclaration importDeclarations .
    (10) importDeclarations -> importDeclarations . importDeclaration
    (11) typeDeclarations -> . typeDeclaration
    (12) typeDeclarations -> . typeDeclarations typeDeclaration
    (16) importDeclaration -> . singleTypeImportDeclaration
    (17) importDeclaration -> . typeImportOnDemandDeclaration
    (18) importDeclaration -> . singleStaticImportDeclaration
    (19) importDeclaration -> . staticImportOnDemandDeclaration
    (24) typeDeclaration -> . classDeclaration
    (25) typeDeclaration -> . interfaceDeclaration
    (26) typeDeclaration -> . annotationTypeDeclaration
    (27) typeDeclaration -> . enumDeclaration
    (28) typeDeclaration -> . SEMI
    (20) singleTypeImportDeclaration -> . IMPORT name SEMI
    (21) typeImportOnDemandDeclaration -> . IMPORT name DOT MULT SEMI
    (22) singleStaticImportDeclaration -> . IMPORT STATIC name SEMI
    (23) staticImportOnDemandDeclaration -> . IMPORT STATIC name DOT MULT SEMI
    (136) classDeclaration -> . classHead classBody
    (195) interfaceDeclaration -> . interfaceHead InterfaceBody
    (239) annotationTypeDeclaration -> . annotationTypeDeclarationHead annotationTypeBody
    (215) enumDeclaration -> . enumHead enumBody
    (137) classHead -> . className classExtends_opt classImpls_opt
    (196) interfaceHead -> . interfaceHeadName interfaceHeadExtends_opt
    (240) annotationTypeDeclarationHead -> . annotationTypeDeclarationHeadName classExtends_opt classImpls_opt
    (216) enumHead -> . enumHeadName classImpls_opt
    (138) className -> . classHeadName1 typeParameters
    (139) className -> . classHeadName1
    (197) interfaceHeadName -> . modifiers_opt INTERFACE Identifier typeParameters
    (198) interfaceHeadName -> . modifiers_opt INTERFACE Identifier
    (241) annotationTypeDeclarationHeadName -> . modifiers AT INTERFACE Identifier
    (242) annotationTypeDeclarationHeadName -> . modifiers AT INTERFACE Identifier typeParameters
    (243) annotationTypeDeclarationHeadName -> . AT INTERFACE Identifier typeParameters
    (244) annotationTypeDeclarationHeadName -> . AT INTERFACE Identifier
    (217) enumHeadName -> . modifiers_opt ENUM Identifier
    (218) enumHeadName -> . modifiers_opt ENUM Identifier typeParameters
    (140) classHeadName1 -> . modifiers_opt CLASS Identifier
    (120) modifiers_opt -> . modifiers
    (121) modifiers_opt -> . empty
    (122) modifiers -> . modifier
    (123) modifiers -> . modifiers modifier
    (631) empty -> .
    (124) modifier -> . PUBLIC
    (125) modifier -> . PROTECTED
    (126) modifier -> . PRIVATE
    (127) modifier -> . STATIC
    (128) modifier -> . ABSTRACT
    (129) modifier -> . FINAL
    (130) modifier -> . NATIVE
    (131) modifier -> . SYNCHRONIZED
    (132) modifier -> . TRANSIENT
    (133) modifier -> . VOLATILE
    (134) modifier -> . STRICTFP
    (135) modifier -> . annotation
    (270) annotation -> . normalAnnotation
    (271) annotation -> . markerAnnotation
    (272) annotation -> . singleMemberAnnotation
    (273) normalAnnotation -> . annotationName LPAREN memberValuePairs_opt RPAREN
    (280) markerAnnotation -> . annotationName
    (281) singleMemberAnnotation -> . annotationName LPAREN singleMemberAnnotationMemberValue RPAREN
    (274) annotationName -> . AT name

    $end            reduce using rule 2 (compilationUnit -> packageDeclaration importDeclarations .)
    SEMI            shift and go to state 16
    IMPORT          shift and go to state 20
    AT              shift and go to state 48
    INTERFACE       reduce using rule 631 (empty -> .)
    ENUM            reduce using rule 631 (empty -> .)
    CLASS           reduce using rule 631 (empty -> .)
    PUBLIC          shift and go to state 46
    PROTECTED       shift and go to state 6
    PRIVATE         shift and go to state 14
    STATIC          shift and go to state 7
    ABSTRACT        shift and go to state 5
    FINAL           shift and go to state 11
    NATIVE          shift and go to state 12
    SYNCHRONIZED    shift and go to state 2
    TRANSIENT       shift and go to state 19
    VOLATILE        shift and go to state 43
    STRICTFP        shift and go to state 18

    modifiers_opt                  shift and go to state 1
    classHead                      shift and go to state 3
    importDeclaration              shift and go to state 88
    singleMemberAnnotation         shift and go to state 8
    enumHeadName                   shift and go to state 10
    className                      shift and go to state 13
    enumDeclaration                shift and go to state 25
    singleTypeImportDeclaration    shift and go to state 17
    typeImportOnDemandDeclaration  shift and go to state 21
    empty                          shift and go to state 74
    normalAnnotation               shift and go to state 24
    annotationTypeDeclarationHead  shift and go to state 15
    markerAnnotation               shift and go to state 9
    interfaceHeadName              shift and go to state 27
    typeDeclarations               shift and go to state 147
    enumHead                       shift and go to state 30
    classDeclaration               shift and go to state 32
    classHeadName1                 shift and go to state 33
    annotationTypeDeclarationHeadName shift and go to state 34
    annotation                     shift and go to state 35
    singleStaticImportDeclaration  shift and go to state 36
    modifiers                      shift and go to state 76
    typeDeclaration                shift and go to state 39
    annotationName                 shift and go to state 40
    annotationTypeDeclaration      shift and go to state 41
    interfaceDeclaration           shift and go to state 42
    staticImportOnDemandDeclaration shift and go to state 44
    modifier                       shift and go to state 45
    interfaceHead                  shift and go to state 47

state 78

    (12) typeDeclarations -> typeDeclarations typeDeclaration .

    SEMI            reduce using rule 12 (typeDeclarations -> typeDeclarations typeDeclaration .)
    AT              reduce using rule 12 (typeDeclarations -> typeDeclarations typeDeclaration .)
    PUBLIC          reduce using rule 12 (typeDeclarations -> typeDeclarations typeDeclaration .)
    PROTECTED       reduce using rule 12 (typeDeclarations -> typeDeclarations typeDeclaration .)
    PRIVATE         reduce using rule 12 (typeDeclarations -> typeDeclarations typeDeclaration .)
    STATIC          reduce using rule 12 (typeDeclarations -> typeDeclarations typeDeclaration .)
    ABSTRACT        reduce using rule 12 (typeDeclarations -> typeDeclarations typeDeclaration .)
    FINAL           reduce using rule 12 (typeDeclarations -> typeDeclarations typeDeclaration .)
    NATIVE          reduce using rule 12 (typeDeclarations -> typeDeclarations typeDeclaration .)
    SYNCHRONIZED    reduce using rule 12 (typeDeclarations -> typeDeclarations typeDeclaration .)
    TRANSIENT       reduce using rule 12 (typeDeclarations -> typeDeclarations typeDeclaration .)
    VOLATILE        reduce using rule 12 (typeDeclarations -> typeDeclarations typeDeclaration .)
    STRICTFP        reduce using rule 12 (typeDeclarations -> typeDeclarations typeDeclaration .)
    INTERFACE       reduce using rule 12 (typeDeclarations -> typeDeclarations typeDeclaration .)
    ENUM            reduce using rule 12 (typeDeclarations -> typeDeclarations typeDeclaration .)
    CLASS           reduce using rule 12 (typeDeclarations -> typeDeclarations typeDeclaration .)
    $end            reduce using rule 12 (typeDeclarations -> typeDeclarations typeDeclaration .)


state 79

    (215) enumDeclaration -> enumHead enumBody .

    SEMI            reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    AT              reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    PUBLIC          reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    PROTECTED       reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    PRIVATE         reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    STATIC          reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    ABSTRACT        reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    FINAL           reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    NATIVE          reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    SYNCHRONIZED    reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    TRANSIENT       reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    VOLATILE        reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    STRICTFP        reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    Identifier      reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    INTERFACE       reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    ENUM            reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    CLASS           reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    LESS            reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    BOOLEAN         reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    VOID            reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    BYTE            reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    SHORT           reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    INT             reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    LONG            reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    CHAR            reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    FLOAT           reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    DOUBLE          reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    BRPAREN         reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    BLPAREN         reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    $end            reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    IF              reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    WHILE           reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    FOR             reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    ASSERT          reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    SWITCH          reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    DO              reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    BREAK           reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    CONTINUE        reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    RETURN          reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    THROW           reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    TRY             reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    THIS            reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    SUPER           reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    OP_INC          reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    OP_DEC          reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    NEW             reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    LPAREN          reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    CharacterLiteral reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    StringLiteral   reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    NULL            reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    LONG_NUMBER     reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    LONG_HEX_NUMBER reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    NON_INTEGER_1   reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    NON_INTEGER_2   reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    NON_INTEGER_3   reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    NON_INTEGER_4   reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    NON_INTEGER_5   reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    NON_INTEGER_6   reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    TRUE            reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    FALSE           reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    CASE            reduce using rule 215 (enumDeclaration -> enumHead enumBody .)
    DEFAULT         reduce using rule 215 (enumDeclaration -> enumHead enumBody .)


state 80

    (219) enumBody -> BLPAREN . enumBodyDeclarations_opt BRPAREN
    (220) enumBody -> BLPAREN . COMMA enumBodyDeclarations_opt BRPAREN
    (221) enumBody -> BLPAREN . enumConstants COMMA enumBodyDeclarations_opt BRPAREN
    (222) enumBody -> BLPAREN . enumConstants enumBodyDeclarations_opt BRPAREN
    (236) enumBodyDeclarations_opt -> . enumDeclarations
    (237) enumBodyDeclarations_opt -> . empty
    (223) enumConstants -> . enumConstant
    (224) enumConstants -> . enumConstants COMMA enumConstant
    (238) enumDeclarations -> . SEMI classBodyDeclarations_opt
    (631) empty -> .
    (225) enumConstant -> . enumConstantHead classBody
    (226) enumConstant -> . enumConstantHead
    (227) enumConstantHead -> . enumConstantHeadName arguments_opt
    (228) enumConstantHeadName -> . modifiers_opt Identifier
    (120) modifiers_opt -> . modifiers
    (121) modifiers_opt -> . empty
    (122) modifiers -> . modifier
    (123) modifiers -> . modifiers modifier
    (124) modifier -> . PUBLIC
    (125) modifier -> . PROTECTED
    (126) modifier -> . PRIVATE
    (127) modifier -> . STATIC
    (128) modifier -> . ABSTRACT
    (129) modifier -> . FINAL
    (130) modifier -> . NATIVE
    (131) modifier -> . SYNCHRONIZED
    (132) modifier -> . TRANSIENT
    (133) modifier -> . VOLATILE
    (134) modifier -> . STRICTFP
    (135) modifier -> . annotation
    (270) annotation -> . normalAnnotation
    (271) annotation -> . markerAnnotation
    (272) annotation -> . singleMemberAnnotation
    (273) normalAnnotation -> . annotationName LPAREN memberValuePairs_opt RPAREN
    (280) markerAnnotation -> . annotationName
    (281) singleMemberAnnotation -> . annotationName LPAREN singleMemberAnnotationMemberValue RPAREN
    (274) annotationName -> . AT name

    COMMA           shift and go to state 152
    SEMI            shift and go to state 150
    BRPAREN         reduce using rule 631 (empty -> .)
    Identifier      reduce using rule 631 (empty -> .)
    PUBLIC          shift and go to state 46
    PROTECTED       shift and go to state 6
    PRIVATE         shift and go to state 14
    STATIC          shift and go to state 7
    ABSTRACT        shift and go to state 5
    FINAL           shift and go to state 11
    NATIVE          shift and go to state 12
    SYNCHRONIZED    shift and go to state 2
    TRANSIENT       shift and go to state 19
    VOLATILE        shift and go to state 43
    STRICTFP        shift and go to state 18
    AT              shift and go to state 155

    markerAnnotation               shift and go to state 9
    modifier                       shift and go to state 45
    enumConstant                   shift and go to state 149
    enumConstantHeadName           shift and go to state 157
    modifiers_opt                  shift and go to state 148
    enumBodyDeclarations_opt       shift and go to state 158
    enumConstantHead               shift and go to state 159
    annotationName                 shift and go to state 40
    singleMemberAnnotation         shift and go to state 8
    enumConstants                  shift and go to state 151
    normalAnnotation               shift and go to state 24
    enumDeclarations               shift and go to state 154
    modifiers                      shift and go to state 156
    annotation                     shift and go to state 35
    empty                          shift and go to state 153

state 81

    (13) packageDeclaration -> packageDeclarationName SEMI .

    SEMI            reduce using rule 13 (packageDeclaration -> packageDeclarationName SEMI .)
    IMPORT          reduce using rule 13 (packageDeclaration -> packageDeclarationName SEMI .)
    AT              reduce using rule 13 (packageDeclaration -> packageDeclarationName SEMI .)
    PUBLIC          reduce using rule 13 (packageDeclaration -> packageDeclarationName SEMI .)
    PROTECTED       reduce using rule 13 (packageDeclaration -> packageDeclarationName SEMI .)
    PRIVATE         reduce using rule 13 (packageDeclaration -> packageDeclarationName SEMI .)
    STATIC          reduce using rule 13 (packageDeclaration -> packageDeclarationName SEMI .)
    ABSTRACT        reduce using rule 13 (packageDeclaration -> packageDeclarationName SEMI .)
    FINAL           reduce using rule 13 (packageDeclaration -> packageDeclarationName SEMI .)
    NATIVE          reduce using rule 13 (packageDeclaration -> packageDeclarationName SEMI .)
    SYNCHRONIZED    reduce using rule 13 (packageDeclaration -> packageDeclarationName SEMI .)
    TRANSIENT       reduce using rule 13 (packageDeclaration -> packageDeclarationName SEMI .)
    VOLATILE        reduce using rule 13 (packageDeclaration -> packageDeclarationName SEMI .)
    STRICTFP        reduce using rule 13 (packageDeclaration -> packageDeclarationName SEMI .)
    INTERFACE       reduce using rule 13 (packageDeclaration -> packageDeclarationName SEMI .)
    ENUM            reduce using rule 13 (packageDeclaration -> packageDeclarationName SEMI .)
    CLASS           reduce using rule 13 (packageDeclaration -> packageDeclarationName SEMI .)
    $end            reduce using rule 13 (packageDeclaration -> packageDeclarationName SEMI .)


state 82

    (138) className -> classHeadName1 typeParameters .

    EXTENDS         reduce using rule 138 (className -> classHeadName1 typeParameters .)
    IMPLEMENTS      reduce using rule 138 (className -> classHeadName1 typeParameters .)
    BLPAREN         reduce using rule 138 (className -> classHeadName1 typeParameters .)


state 83

    (65) typeParameters -> LESS . typeParameterList1
    (74) typeParameterList1 -> . typeParameter1
    (75) typeParameterList1 -> . typeParameterList COMMA typeParameter1
    (76) typeParameter1 -> . typeParametersHeaderName MORE
    (77) typeParameter1 -> . typeParametersHeaderName EXTENDS referenceType1
    (78) typeParameter1 -> . typeParametersHeaderName EXTENDS referenceType additionalBoundList1
    (66) typeParameterList -> . typeParameter
    (67) typeParameterList -> . typeParameterList COMMA typeParameter
    (64) typeParametersHeaderName -> . Identifier
    (68) typeParameter -> . typeParametersHeaderName
    (69) typeParameter -> . typeParametersHeaderName EXTENDS referenceType
    (70) typeParameter -> . typeParametersHeaderName EXTENDS referenceType additionalBoundList

    Identifier      shift and go to state 163

    typeParameter                  shift and go to state 160
    typeParameterList              shift and go to state 161
    typeParameter1                 shift and go to state 162
    typeParameterList1             shift and go to state 164
    typeParametersHeaderName       shift and go to state 165

state 84

    (240) annotationTypeDeclarationHead -> annotationTypeDeclarationHeadName classExtends_opt . classImpls_opt
    (143) classImpls_opt -> . classImpls
    (144) classImpls_opt -> . empty
    (146) classImpls -> . IMPLEMENTS interfaceTypeList
    (631) empty -> .

    IMPLEMENTS      shift and go to state 54
    BLPAREN         reduce using rule 631 (empty -> .)

    classImpls_opt                 shift and go to state 166
    empty                          shift and go to state 56
    classImpls                     shift and go to state 57

state 85

    (14) packageDeclarationName -> modifiers PACKAGE . name
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    Identifier      shift and go to state 68

    simpleName                     shift and go to state 66
    qualifiedName                  shift and go to state 64
    name                           shift and go to state 167

state 86

    (241) annotationTypeDeclarationHeadName -> modifiers AT . INTERFACE Identifier
    (242) annotationTypeDeclarationHeadName -> modifiers AT . INTERFACE Identifier typeParameters
    (274) annotationName -> AT . name
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    INTERFACE       shift and go to state 168
    Identifier      shift and go to state 68

    simpleName                     shift and go to state 66
    name                           shift and go to state 93
    qualifiedName                  shift and go to state 64

state 87

    (123) modifiers -> modifiers modifier .

    AT              reduce using rule 123 (modifiers -> modifiers modifier .)
    PUBLIC          reduce using rule 123 (modifiers -> modifiers modifier .)
    PROTECTED       reduce using rule 123 (modifiers -> modifiers modifier .)
    PRIVATE         reduce using rule 123 (modifiers -> modifiers modifier .)
    STATIC          reduce using rule 123 (modifiers -> modifiers modifier .)
    ABSTRACT        reduce using rule 123 (modifiers -> modifiers modifier .)
    FINAL           reduce using rule 123 (modifiers -> modifiers modifier .)
    NATIVE          reduce using rule 123 (modifiers -> modifiers modifier .)
    SYNCHRONIZED    reduce using rule 123 (modifiers -> modifiers modifier .)
    TRANSIENT       reduce using rule 123 (modifiers -> modifiers modifier .)
    VOLATILE        reduce using rule 123 (modifiers -> modifiers modifier .)
    STRICTFP        reduce using rule 123 (modifiers -> modifiers modifier .)
    INTERFACE       reduce using rule 123 (modifiers -> modifiers modifier .)
    ENUM            reduce using rule 123 (modifiers -> modifiers modifier .)
    CLASS           reduce using rule 123 (modifiers -> modifiers modifier .)
    LESS            reduce using rule 123 (modifiers -> modifiers modifier .)
    BOOLEAN         reduce using rule 123 (modifiers -> modifiers modifier .)
    VOID            reduce using rule 123 (modifiers -> modifiers modifier .)
    BYTE            reduce using rule 123 (modifiers -> modifiers modifier .)
    SHORT           reduce using rule 123 (modifiers -> modifiers modifier .)
    INT             reduce using rule 123 (modifiers -> modifiers modifier .)
    LONG            reduce using rule 123 (modifiers -> modifiers modifier .)
    CHAR            reduce using rule 123 (modifiers -> modifiers modifier .)
    FLOAT           reduce using rule 123 (modifiers -> modifiers modifier .)
    DOUBLE          reduce using rule 123 (modifiers -> modifiers modifier .)
    Identifier      reduce using rule 123 (modifiers -> modifiers modifier .)
    PACKAGE         reduce using rule 123 (modifiers -> modifiers modifier .)


state 88

    (10) importDeclarations -> importDeclarations importDeclaration .

    SEMI            reduce using rule 10 (importDeclarations -> importDeclarations importDeclaration .)
    IMPORT          reduce using rule 10 (importDeclarations -> importDeclarations importDeclaration .)
    AT              reduce using rule 10 (importDeclarations -> importDeclarations importDeclaration .)
    PUBLIC          reduce using rule 10 (importDeclarations -> importDeclarations importDeclaration .)
    PROTECTED       reduce using rule 10 (importDeclarations -> importDeclarations importDeclaration .)
    PRIVATE         reduce using rule 10 (importDeclarations -> importDeclarations importDeclaration .)
    STATIC          reduce using rule 10 (importDeclarations -> importDeclarations importDeclaration .)
    ABSTRACT        reduce using rule 10 (importDeclarations -> importDeclarations importDeclaration .)
    FINAL           reduce using rule 10 (importDeclarations -> importDeclarations importDeclaration .)
    NATIVE          reduce using rule 10 (importDeclarations -> importDeclarations importDeclaration .)
    SYNCHRONIZED    reduce using rule 10 (importDeclarations -> importDeclarations importDeclaration .)
    TRANSIENT       reduce using rule 10 (importDeclarations -> importDeclarations importDeclaration .)
    VOLATILE        reduce using rule 10 (importDeclarations -> importDeclarations importDeclaration .)
    STRICTFP        reduce using rule 10 (importDeclarations -> importDeclarations importDeclaration .)
    INTERFACE       reduce using rule 10 (importDeclarations -> importDeclarations importDeclaration .)
    ENUM            reduce using rule 10 (importDeclarations -> importDeclarations importDeclaration .)
    CLASS           reduce using rule 10 (importDeclarations -> importDeclarations importDeclaration .)
    $end            reduce using rule 10 (importDeclarations -> importDeclarations importDeclaration .)


state 89

    (7) compilationUnit -> importDeclarations typeDeclarations .
    (12) typeDeclarations -> typeDeclarations . typeDeclaration
    (24) typeDeclaration -> . classDeclaration
    (25) typeDeclaration -> . interfaceDeclaration
    (26) typeDeclaration -> . annotationTypeDeclaration
    (27) typeDeclaration -> . enumDeclaration
    (28) typeDeclaration -> . SEMI
    (136) classDeclaration -> . classHead classBody
    (195) interfaceDeclaration -> . interfaceHead InterfaceBody
    (239) annotationTypeDeclaration -> . annotationTypeDeclarationHead annotationTypeBody
    (215) enumDeclaration -> . enumHead enumBody
    (137) classHead -> . className classExtends_opt classImpls_opt
    (196) interfaceHead -> . interfaceHeadName interfaceHeadExtends_opt
    (240) annotationTypeDeclarationHead -> . annotationTypeDeclarationHeadName classExtends_opt classImpls_opt
    (216) enumHead -> . enumHeadName classImpls_opt
    (138) className -> . classHeadName1 typeParameters
    (139) className -> . classHeadName1
    (197) interfaceHeadName -> . modifiers_opt INTERFACE Identifier typeParameters
    (198) interfaceHeadName -> . modifiers_opt INTERFACE Identifier
    (241) annotationTypeDeclarationHeadName -> . modifiers AT INTERFACE Identifier
    (242) annotationTypeDeclarationHeadName -> . modifiers AT INTERFACE Identifier typeParameters
    (243) annotationTypeDeclarationHeadName -> . AT INTERFACE Identifier typeParameters
    (244) annotationTypeDeclarationHeadName -> . AT INTERFACE Identifier
    (217) enumHeadName -> . modifiers_opt ENUM Identifier
    (218) enumHeadName -> . modifiers_opt ENUM Identifier typeParameters
    (140) classHeadName1 -> . modifiers_opt CLASS Identifier
    (120) modifiers_opt -> . modifiers
    (121) modifiers_opt -> . empty
    (122) modifiers -> . modifier
    (123) modifiers -> . modifiers modifier
    (631) empty -> .
    (124) modifier -> . PUBLIC
    (125) modifier -> . PROTECTED
    (126) modifier -> . PRIVATE
    (127) modifier -> . STATIC
    (128) modifier -> . ABSTRACT
    (129) modifier -> . FINAL
    (130) modifier -> . NATIVE
    (131) modifier -> . SYNCHRONIZED
    (132) modifier -> . TRANSIENT
    (133) modifier -> . VOLATILE
    (134) modifier -> . STRICTFP
    (135) modifier -> . annotation
    (270) annotation -> . normalAnnotation
    (271) annotation -> . markerAnnotation
    (272) annotation -> . singleMemberAnnotation
    (273) normalAnnotation -> . annotationName LPAREN memberValuePairs_opt RPAREN
    (280) markerAnnotation -> . annotationName
    (281) singleMemberAnnotation -> . annotationName LPAREN singleMemberAnnotationMemberValue RPAREN
    (274) annotationName -> . AT name

    $end            reduce using rule 7 (compilationUnit -> importDeclarations typeDeclarations .)
    SEMI            shift and go to state 16
    AT              shift and go to state 48
    INTERFACE       reduce using rule 631 (empty -> .)
    ENUM            reduce using rule 631 (empty -> .)
    CLASS           reduce using rule 631 (empty -> .)
    PUBLIC          shift and go to state 46
    PROTECTED       shift and go to state 6
    PRIVATE         shift and go to state 14
    STATIC          shift and go to state 7
    ABSTRACT        shift and go to state 5
    FINAL           shift and go to state 11
    NATIVE          shift and go to state 12
    SYNCHRONIZED    shift and go to state 2
    TRANSIENT       shift and go to state 19
    VOLATILE        shift and go to state 43
    STRICTFP        shift and go to state 18

    modifiers_opt                  shift and go to state 1
    classHead                      shift and go to state 3
    singleMemberAnnotation         shift and go to state 8
    enumHeadName                   shift and go to state 10
    annotationTypeDeclaration      shift and go to state 41
    enumDeclaration                shift and go to state 25
    empty                          shift and go to state 74
    annotationTypeDeclarationHead  shift and go to state 15
    markerAnnotation               shift and go to state 9
    interfaceHeadName              shift and go to state 27
    classHeadName1                 shift and go to state 33
    enumHead                       shift and go to state 30
    classDeclaration               shift and go to state 32
    annotationTypeDeclarationHeadName shift and go to state 34
    annotation                     shift and go to state 35
    modifiers                      shift and go to state 76
    typeDeclaration                shift and go to state 78
    annotationName                 shift and go to state 40
    className                      shift and go to state 13
    interfaceDeclaration           shift and go to state 42
    normalAnnotation               shift and go to state 24
    modifier                       shift and go to state 45
    interfaceHead                  shift and go to state 47

state 90

    (273) normalAnnotation -> annotationName LPAREN . memberValuePairs_opt RPAREN
    (281) singleMemberAnnotation -> annotationName LPAREN . singleMemberAnnotationMemberValue RPAREN
    (275) memberValuePairs_opt -> . memberValuePairs
    (276) memberValuePairs_opt -> . empty
    (282) singleMemberAnnotationMemberValue -> . memberValue
    (277) memberValuePairs -> . memberValuePair
    (278) memberValuePairs -> . memberValuePairs COMMA memberValuePair
    (631) empty -> .
    (260) memberValue -> . conditionalExpressionNotName
    (261) memberValue -> . name
    (262) memberValue -> . annotation
    (263) memberValue -> . memberValueArrayInitializer
    (279) memberValuePair -> . Identifier ASS memberValue
    (477) conditionalExpressionNotName -> . conditionalOrExpressionNotName
    (478) conditionalExpressionNotName -> . conditionalOrExpressionNotName QUES expression COLON conditionalExpression
    (479) conditionalExpressionNotName -> . name QUES expression COLON conditionalExpression
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (270) annotation -> . normalAnnotation
    (271) annotation -> . markerAnnotation
    (272) annotation -> . singleMemberAnnotation
    (264) memberValueArrayInitializer -> . BLPAREN memberValues COMMA BRPAREN
    (265) memberValueArrayInitializer -> . BLPAREN memberValues BRPAREN
    (266) memberValueArrayInitializer -> . BLPAREN COMMA BRPAREN
    (267) memberValueArrayInitializer -> . BLPAREN BRPAREN
    (482) conditionalOrExpressionNotName -> . conditionalAndExpressionNotName
    (483) conditionalOrExpressionNotName -> . conditionalOrExpressionNotName OP_LOR conditionalAndExpression
    (484) conditionalOrExpressionNotName -> . name OP_LOR conditionalAndExpression
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (273) normalAnnotation -> . annotationName LPAREN memberValuePairs_opt RPAREN
    (280) markerAnnotation -> . annotationName
    (281) singleMemberAnnotation -> . annotationName LPAREN singleMemberAnnotationMemberValue RPAREN
    (487) conditionalAndExpressionNotName -> . inclusiveOrExpressionNotName
    (488) conditionalAndExpressionNotName -> . conditionalAndExpressionNotName OP_LAND inclusiveOrExpression
    (489) conditionalAndExpressionNotName -> . name OP_LAND inclusiveOrExpression
    (274) annotationName -> . AT name
    (492) inclusiveOrExpressionNotName -> . exclusiveOrExpressionNotName
    (493) inclusiveOrExpressionNotName -> . inclusiveOrExpressionNotName VERTICAL exclusiveOrExpression
    (494) inclusiveOrExpressionNotName -> . name VERTICAL exclusiveOrExpression
    (497) exclusiveOrExpressionNotName -> . andExpressionNotName
    (498) exclusiveOrExpressionNotName -> . exclusiveOrExpressionNotName CARET andExpression
    (499) exclusiveOrExpressionNotName -> . name CARET andExpression
    (502) andExpressionNotName -> . equalityExpressionNotName
    (503) andExpressionNotName -> . andExpressionNotName AND equalityExpression
    (504) andExpressionNotName -> . name AND equalityExpression
    (508) equalityExpressionNotName -> . instanceOfExpressionNotName
    (509) equalityExpressionNotName -> . equalityExpressionNotName OP_EQ instanceOfExpression
    (510) equalityExpressionNotName -> . equalityExpressionNotName OP_NE instanceOfExpression
    (511) equalityExpressionNotName -> . name OP_EQ instanceOfExpression
    (512) equalityExpressionNotName -> . name OP_NE instanceOfExpression
    (515) instanceOfExpressionNotName -> . relationalExpressionNotName
    (516) instanceOfExpressionNotName -> . instanceOfExpressionNotName INSTANCEOF referenceType
    (517) instanceOfExpressionNotName -> . name INSTANCEOF referenceType
    (523) relationalExpressionNotName -> . shiftExpressionNotName
    (524) relationalExpressionNotName -> . relationalExpressionNotName LESS shiftExpression
    (525) relationalExpressionNotName -> . relationalExpressionNotName OP_GE shiftExpression
    (526) relationalExpressionNotName -> . relationalExpressionNotName MORE shiftExpression
    (527) relationalExpressionNotName -> . relationalExpressionNotName OP_LE shiftExpression
    (528) relationalExpressionNotName -> . name LESS shiftExpression
    (529) relationalExpressionNotName -> . name OP_GE shiftExpression
    (530) relationalExpressionNotName -> . name MORE shiftExpression
    (531) relationalExpressionNotName -> . name OP_LE shiftExpression
    (536) shiftExpressionNotName -> . additiveExpressionNotName
    (537) shiftExpressionNotName -> . shiftExpressionNotName OP_SHR additiveExpression
    (538) shiftExpressionNotName -> . shiftExpressionNotName OP_SHL additiveExpression
    (539) shiftExpressionNotName -> . shiftExpressionNotName OP_SHRR additiveExpression
    (540) shiftExpressionNotName -> . name OP_SHR additiveExpression
    (541) shiftExpressionNotName -> . name OP_SHL additiveExpression
    (542) shiftExpressionNotName -> . name OP_SHRR additiveExpression
    (546) additiveExpressionNotName -> . multiplicativeExpressionNotName
    (547) additiveExpressionNotName -> . additiveExpressionNotName PLUS multiplicativeExpression
    (548) additiveExpressionNotName -> . additiveExpressionNotName DASH multiplicativeExpression
    (549) additiveExpressionNotName -> . name PLUS multiplicativeExpression
    (550) additiveExpressionNotName -> . name DASH multiplicativeExpression
    (555) multiplicativeExpressionNotName -> . unaryExpressionNotName
    (556) multiplicativeExpressionNotName -> . multiplicativeExpressionNotName MULT unaryExpression
    (557) multiplicativeExpressionNotName -> . multiplicativeExpressionNotName SLASH unaryExpression
    (558) multiplicativeExpressionNotName -> . multiplicativeExpressionNotName PERCENT unaryExpression
    (559) multiplicativeExpressionNotName -> . name MULT unaryExpression
    (560) multiplicativeExpressionNotName -> . name SLASH unaryExpression
    (561) multiplicativeExpressionNotName -> . name PERCENT unaryExpression
    (567) unaryExpressionNotName -> . preIncrementExpression
    (568) unaryExpressionNotName -> . preDecrementExpression
    (569) unaryExpressionNotName -> . PLUS unaryExpression
    (570) unaryExpressionNotName -> . DASH unaryExpression
    (571) unaryExpressionNotName -> . unaryExpressionNotPlusMinusNotName
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (580) unaryExpressionNotPlusMinusNotName -> . TILDE unaryExpression
    (581) unaryExpressionNotPlusMinusNotName -> . EXCLAMATION unaryExpression
    (582) unaryExpressionNotPlusMinusNotName -> . postfixExpressionNotName
    (583) unaryExpressionNotPlusMinusNotName -> . castExpression
    (588) postfixExpressionNotName -> . primary
    (589) postfixExpressionNotName -> . postIncrementExpression
    (590) postfixExpressionNotName -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    RPAREN          reduce using rule 631 (empty -> .)
    Identifier      shift and go to state 193
    BLPAREN         shift and go to state 243
    AT              shift and go to state 155
    PLUS            shift and go to state 174
    DASH            shift and go to state 240
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 209
    EXCLAMATION     shift and go to state 169
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    multiplicativeExpressionNotName shift and go to state 222
    qualifiedName                  shift and go to state 64
    arrayCreationWithArrayInitializer shift and go to state 227
    arrayAccess                    shift and go to state 234
    unaryExpressionNotName         shift and go to state 229
    singleMemberAnnotation         shift and go to state 8
    shiftExpressionNotName         shift and go to state 233
    booleanLiteral                 shift and go to state 173
    conditionalAndExpressionNotName shift and go to state 205
    memberValueArrayInitializer    shift and go to state 206
    markerAnnotation               shift and go to state 9
    unaryExpressionNotPlusMinusNotName shift and go to state 175
    postDecrementExpression        shift and go to state 186
    preIncrementExpression         shift and go to state 172
    arrayCreationWithoutArrayInitializer shift and go to state 232
    inclusiveOrExpressionNotName   shift and go to state 235
    postfixExpressionNotName       shift and go to state 239
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    equalityExpressionNotName      shift and go to state 188
    FloatingPointLiteral           shift and go to state 214
    integerLiteral                 shift and go to state 183
    empty                          shift and go to state 210
    methodInvocation               shift and go to state 176
    postfixExpression              shift and go to state 177
    memberValue                    shift and go to state 211
    memberValuePair                shift and go to state 236
    exclusiveOrExpressionNotName   shift and go to state 231
    conditionalExpressionNotName   shift and go to state 213
    fieldAccess                    shift and go to state 189
    conditionalOrExpressionNotName shift and go to state 237
    primary                        shift and go to state 199
    postIncrementExpression        shift and go to state 179
    memberValuePairs_opt           shift and go to state 192
    primaryNoNewArray              shift and go to state 178
    annotation                     shift and go to state 207
    castExpression                 shift and go to state 241
    additiveExpressionNotName      shift and go to state 212
    name                           shift and go to state 180
    relationalExpressionNotName    shift and go to state 217
    annotationName                 shift and go to state 40
    primitiveType                  shift and go to state 219
    instanceOfExpressionNotName    shift and go to state 220
    andExpressionNotName           shift and go to state 223
    normalAnnotation               shift and go to state 24
    singleMemberAnnotationMemberValue shift and go to state 244
    memberValuePairs               shift and go to state 245
    preDecrementExpression         shift and go to state 196
    classInstanceCreationExpressionName shift and go to state 187
    classInstanceCreationExpression shift and go to state 198

state 91

    (195) interfaceDeclaration -> interfaceHead InterfaceBody .

    IF              reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    WHILE           reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    FOR             reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    BLPAREN         reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    ASSERT          reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    SEMI            reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    SWITCH          reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    DO              reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    BREAK           reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    CONTINUE        reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    RETURN          reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    SYNCHRONIZED    reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    THROW           reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    TRY             reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    Identifier      reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    AT              reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    BOOLEAN         reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    VOID            reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    BYTE            reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    SHORT           reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    INT             reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    LONG            reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    CHAR            reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    FLOAT           reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    DOUBLE          reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    PUBLIC          reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    PROTECTED       reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    PRIVATE         reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    STATIC          reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    ABSTRACT        reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    FINAL           reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    NATIVE          reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    TRANSIENT       reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    VOLATILE        reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    STRICTFP        reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    THIS            reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    SUPER           reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    OP_INC          reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    OP_DEC          reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    NEW             reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    LESS            reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    LPAREN          reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    CharacterLiteral reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    StringLiteral   reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    NULL            reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    LONG_NUMBER     reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    LONG_HEX_NUMBER reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    NON_INTEGER_1   reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    NON_INTEGER_2   reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    NON_INTEGER_3   reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    NON_INTEGER_4   reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    NON_INTEGER_5   reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    NON_INTEGER_6   reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    TRUE            reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    FALSE           reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    INTERFACE       reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    ENUM            reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    CLASS           reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    BRPAREN         reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    CASE            reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    DEFAULT         reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)
    $end            reduce using rule 195 (interfaceDeclaration -> interfaceHead InterfaceBody .)


state 92

    (202) InterfaceBody -> BLPAREN . interfaceMemberDeclarations_opt BRPAREN
    (203) interfaceMemberDeclarations_opt -> . interfaceMemberDeclarations
    (204) interfaceMemberDeclarations_opt -> . empty
    (205) interfaceMemberDeclarations -> . interfaceMemberDeclaration
    (206) interfaceMemberDeclarations -> . interfaceMemberDeclarations interfaceMemberDeclaration
    (631) empty -> .
    (207) interfaceMemberDeclaration -> . constantDeclaration
    (208) interfaceMemberDeclaration -> . abstractMethodDeclaration
    (209) interfaceMemberDeclaration -> . classDeclaration
    (210) interfaceMemberDeclaration -> . interfaceDeclaration
    (211) interfaceMemberDeclaration -> . enumDeclaration
    (212) interfaceMemberDeclaration -> . annotationTypeDeclaration
    (213) interfaceMemberDeclaration -> . SEMI
    (214) constantDeclaration -> . fieldDeclaration
    (184) abstractMethodDeclaration -> . methodHeader SEMI
    (136) classDeclaration -> . classHead classBody
    (195) interfaceDeclaration -> . interfaceHead InterfaceBody
    (215) enumDeclaration -> . enumHead enumBody
    (239) annotationTypeDeclaration -> . annotationTypeDeclarationHead annotationTypeBody
    (181) fieldDeclaration -> . modifiers_opt type variableDeclarators SEMI
    (185) methodHeader -> . methodName formalParameterList_opt RPAREN methodHeadExtendedDims methodHeadThrowList_opt
    (137) classHead -> . className classExtends_opt classImpls_opt
    (196) interfaceHead -> . interfaceHeadName interfaceHeadExtends_opt
    (216) enumHead -> . enumHeadName classImpls_opt
    (240) annotationTypeDeclarationHead -> . annotationTypeDeclarationHeadName classExtends_opt classImpls_opt
    (120) modifiers_opt -> . modifiers
    (121) modifiers_opt -> . empty
    (186) methodName -> . modifiers_opt typeParameters type Identifier LPAREN
    (187) methodName -> . modifiers_opt type Identifier LPAREN
    (138) className -> . classHeadName1 typeParameters
    (139) className -> . classHeadName1
    (197) interfaceHeadName -> . modifiers_opt INTERFACE Identifier typeParameters
    (198) interfaceHeadName -> . modifiers_opt INTERFACE Identifier
    (217) enumHeadName -> . modifiers_opt ENUM Identifier
    (218) enumHeadName -> . modifiers_opt ENUM Identifier typeParameters
    (241) annotationTypeDeclarationHeadName -> . modifiers AT INTERFACE Identifier
    (242) annotationTypeDeclarationHeadName -> . modifiers AT INTERFACE Identifier typeParameters
    (243) annotationTypeDeclarationHeadName -> . AT INTERFACE Identifier typeParameters
    (244) annotationTypeDeclarationHeadName -> . AT INTERFACE Identifier
    (122) modifiers -> . modifier
    (123) modifiers -> . modifiers modifier
    (140) classHeadName1 -> . modifiers_opt CLASS Identifier
    (124) modifier -> . PUBLIC
    (125) modifier -> . PROTECTED
    (126) modifier -> . PRIVATE
    (127) modifier -> . STATIC
    (128) modifier -> . ABSTRACT
    (129) modifier -> . FINAL
    (130) modifier -> . NATIVE
    (131) modifier -> . SYNCHRONIZED
    (132) modifier -> . TRANSIENT
    (133) modifier -> . VOLATILE
    (134) modifier -> . STRICTFP
    (135) modifier -> . annotation
    (270) annotation -> . normalAnnotation
    (271) annotation -> . markerAnnotation
    (272) annotation -> . singleMemberAnnotation
    (273) normalAnnotation -> . annotationName LPAREN memberValuePairs_opt RPAREN
    (280) markerAnnotation -> . annotationName
    (281) singleMemberAnnotation -> . annotationName LPAREN singleMemberAnnotationMemberValue RPAREN
    (274) annotationName -> . AT name

    BRPAREN         reduce using rule 631 (empty -> .)
    INTERFACE       reduce using rule 631 (empty -> .)
    ENUM            reduce using rule 631 (empty -> .)
    CLASS           reduce using rule 631 (empty -> .)
    LESS            reduce using rule 631 (empty -> .)
    BOOLEAN         reduce using rule 631 (empty -> .)
    VOID            reduce using rule 631 (empty -> .)
    BYTE            reduce using rule 631 (empty -> .)
    SHORT           reduce using rule 631 (empty -> .)
    INT             reduce using rule 631 (empty -> .)
    LONG            reduce using rule 631 (empty -> .)
    CHAR            reduce using rule 631 (empty -> .)
    FLOAT           reduce using rule 631 (empty -> .)
    DOUBLE          reduce using rule 631 (empty -> .)
    Identifier      reduce using rule 631 (empty -> .)
    SEMI            shift and go to state 249
    AT              shift and go to state 48
    PUBLIC          shift and go to state 46
    PROTECTED       shift and go to state 6
    PRIVATE         shift and go to state 14
    STATIC          shift and go to state 7
    ABSTRACT        shift and go to state 5
    FINAL           shift and go to state 11
    NATIVE          shift and go to state 12
    SYNCHRONIZED    shift and go to state 2
    TRANSIENT       shift and go to state 19
    VOLATILE        shift and go to state 43
    STRICTFP        shift and go to state 18

    methodName                     shift and go to state 98
    modifiers_opt                  shift and go to state 247
    classHead                      shift and go to state 3
    singleMemberAnnotation         shift and go to state 8
    markerAnnotation               shift and go to state 9
    enumHeadName                   shift and go to state 10
    interfaceMemberDeclarations_opt shift and go to state 248
    className                      shift and go to state 13
    enumDeclaration                shift and go to state 253
    empty                          shift and go to state 250
    interfaceMemberDeclarations    shift and go to state 260
    methodHeader                   shift and go to state 251
    constantDeclaration            shift and go to state 252
    normalAnnotation               shift and go to state 24
    annotationTypeDeclarationHead  shift and go to state 15
    interfaceMemberDeclaration     shift and go to state 254
    interfaceHeadName              shift and go to state 27
    classHeadName1                 shift and go to state 33
    enumHead                       shift and go to state 30
    classDeclaration               shift and go to state 255
    fieldDeclaration               shift and go to state 138
    annotationTypeDeclarationHeadName shift and go to state 34
    annotation                     shift and go to state 35
    modifiers                      shift and go to state 256
    annotationName                 shift and go to state 40
    annotationTypeDeclaration      shift and go to state 257
    interfaceDeclaration           shift and go to state 258
    abstractMethodDeclaration      shift and go to state 259
    modifier                       shift and go to state 45
    interfaceHead                  shift and go to state 47

state 93

    (274) annotationName -> AT name .
    (32) qualifiedName -> name . DOT simpleName

    LPAREN          reduce using rule 274 (annotationName -> AT name .)
    AT              reduce using rule 274 (annotationName -> AT name .)
    PUBLIC          reduce using rule 274 (annotationName -> AT name .)
    PROTECTED       reduce using rule 274 (annotationName -> AT name .)
    PRIVATE         reduce using rule 274 (annotationName -> AT name .)
    STATIC          reduce using rule 274 (annotationName -> AT name .)
    ABSTRACT        reduce using rule 274 (annotationName -> AT name .)
    FINAL           reduce using rule 274 (annotationName -> AT name .)
    NATIVE          reduce using rule 274 (annotationName -> AT name .)
    SYNCHRONIZED    reduce using rule 274 (annotationName -> AT name .)
    TRANSIENT       reduce using rule 274 (annotationName -> AT name .)
    VOLATILE        reduce using rule 274 (annotationName -> AT name .)
    STRICTFP        reduce using rule 274 (annotationName -> AT name .)
    INTERFACE       reduce using rule 274 (annotationName -> AT name .)
    ENUM            reduce using rule 274 (annotationName -> AT name .)
    CLASS           reduce using rule 274 (annotationName -> AT name .)
    LESS            reduce using rule 274 (annotationName -> AT name .)
    BOOLEAN         reduce using rule 274 (annotationName -> AT name .)
    VOID            reduce using rule 274 (annotationName -> AT name .)
    BYTE            reduce using rule 274 (annotationName -> AT name .)
    SHORT           reduce using rule 274 (annotationName -> AT name .)
    INT             reduce using rule 274 (annotationName -> AT name .)
    LONG            reduce using rule 274 (annotationName -> AT name .)
    CHAR            reduce using rule 274 (annotationName -> AT name .)
    FLOAT           reduce using rule 274 (annotationName -> AT name .)
    DOUBLE          reduce using rule 274 (annotationName -> AT name .)
    Identifier      reduce using rule 274 (annotationName -> AT name .)
    COMMA           reduce using rule 274 (annotationName -> AT name .)
    RPAREN          reduce using rule 274 (annotationName -> AT name .)
    PACKAGE         reduce using rule 274 (annotationName -> AT name .)
    BRPAREN         reduce using rule 274 (annotationName -> AT name .)
    SEMI            reduce using rule 274 (annotationName -> AT name .)
    DOT             shift and go to state 145


state 94

    (243) annotationTypeDeclarationHeadName -> AT INTERFACE . Identifier typeParameters
    (244) annotationTypeDeclarationHeadName -> AT INTERFACE . Identifier

    Identifier      shift and go to state 261


state 95

    (217) enumHeadName -> modifiers_opt ENUM Identifier .
    (218) enumHeadName -> modifiers_opt ENUM Identifier . typeParameters
    (65) typeParameters -> . LESS typeParameterList1

    IMPLEMENTS      reduce using rule 217 (enumHeadName -> modifiers_opt ENUM Identifier .)
    BLPAREN         reduce using rule 217 (enumHeadName -> modifiers_opt ENUM Identifier .)
    LESS            shift and go to state 83

    typeParameters                 shift and go to state 262

state 96

    (197) interfaceHeadName -> modifiers_opt INTERFACE Identifier . typeParameters
    (198) interfaceHeadName -> modifiers_opt INTERFACE Identifier .
    (65) typeParameters -> . LESS typeParameterList1

    EXTENDS         reduce using rule 198 (interfaceHeadName -> modifiers_opt INTERFACE Identifier .)
    BLPAREN         reduce using rule 198 (interfaceHeadName -> modifiers_opt INTERFACE Identifier .)
    LESS            shift and go to state 83

    typeParameters                 shift and go to state 263

state 97

    (140) classHeadName1 -> modifiers_opt CLASS Identifier .

    LESS            reduce using rule 140 (classHeadName1 -> modifiers_opt CLASS Identifier .)
    EXTENDS         reduce using rule 140 (classHeadName1 -> modifiers_opt CLASS Identifier .)
    IMPLEMENTS      reduce using rule 140 (classHeadName1 -> modifiers_opt CLASS Identifier .)
    BLPAREN         reduce using rule 140 (classHeadName1 -> modifiers_opt CLASS Identifier .)


state 98

    (185) methodHeader -> methodName . formalParameterList_opt RPAREN methodHeadExtendedDims methodHeadThrowList_opt
    (165) formalParameterList_opt -> . formalParameterList
    (166) formalParameterList_opt -> . empty
    (167) formalParameterList -> . formalParameter
    (168) formalParameterList -> . formalParameterList COMMA formalParameter
    (631) empty -> .
    (169) formalParameter -> . modifiers_opt type variableDeclaratorId
    (170) formalParameter -> . modifiers_opt type OP_ARRAY variableDeclaratorId
    (120) modifiers_opt -> . modifiers
    (121) modifiers_opt -> . empty
    (122) modifiers -> . modifier
    (123) modifiers -> . modifiers modifier
    (124) modifier -> . PUBLIC
    (125) modifier -> . PROTECTED
    (126) modifier -> . PRIVATE
    (127) modifier -> . STATIC
    (128) modifier -> . ABSTRACT
    (129) modifier -> . FINAL
    (130) modifier -> . NATIVE
    (131) modifier -> . SYNCHRONIZED
    (132) modifier -> . TRANSIENT
    (133) modifier -> . VOLATILE
    (134) modifier -> . STRICTFP
    (135) modifier -> . annotation
    (270) annotation -> . normalAnnotation
    (271) annotation -> . markerAnnotation
    (272) annotation -> . singleMemberAnnotation
    (273) normalAnnotation -> . annotationName LPAREN memberValuePairs_opt RPAREN
    (280) markerAnnotation -> . annotationName
    (281) singleMemberAnnotation -> . annotationName LPAREN singleMemberAnnotationMemberValue RPAREN
    (274) annotationName -> . AT name

    RPAREN          reduce using rule 631 (empty -> .)
    BOOLEAN         reduce using rule 631 (empty -> .)
    VOID            reduce using rule 631 (empty -> .)
    BYTE            reduce using rule 631 (empty -> .)
    SHORT           reduce using rule 631 (empty -> .)
    INT             reduce using rule 631 (empty -> .)
    LONG            reduce using rule 631 (empty -> .)
    CHAR            reduce using rule 631 (empty -> .)
    FLOAT           reduce using rule 631 (empty -> .)
    DOUBLE          reduce using rule 631 (empty -> .)
    Identifier      reduce using rule 631 (empty -> .)
    PUBLIC          shift and go to state 46
    PROTECTED       shift and go to state 6
    PRIVATE         shift and go to state 14
    STATIC          shift and go to state 7
    ABSTRACT        shift and go to state 5
    FINAL           shift and go to state 11
    NATIVE          shift and go to state 12
    SYNCHRONIZED    shift and go to state 2
    TRANSIENT       shift and go to state 19
    VOLATILE        shift and go to state 43
    STRICTFP        shift and go to state 18
    AT              shift and go to state 155

    markerAnnotation               shift and go to state 9
    modifiers                      shift and go to state 156
    modifiers_opt                  shift and go to state 264
    formalParameter                shift and go to state 267
    annotationName                 shift and go to state 40
    annotation                     shift and go to state 35
    singleMemberAnnotation         shift and go to state 8
    normalAnnotation               shift and go to state 24
    formalParameterList            shift and go to state 268
    modifier                       shift and go to state 45
    empty                          shift and go to state 266
    formalParameterList_opt        shift and go to state 265

state 99

    (181) fieldDeclaration -> modifiers_opt . type variableDeclarators SEMI
    (163) constructorName -> modifiers_opt . typeParameters Identifier LPAREN
    (164) constructorName -> modifiers_opt . Identifier LPAREN
    (186) methodName -> modifiers_opt . typeParameters type Identifier LPAREN
    (187) methodName -> modifiers_opt . type Identifier LPAREN
    (197) interfaceHeadName -> modifiers_opt . INTERFACE Identifier typeParameters
    (198) interfaceHeadName -> modifiers_opt . INTERFACE Identifier
    (217) enumHeadName -> modifiers_opt . ENUM Identifier
    (218) enumHeadName -> modifiers_opt . ENUM Identifier typeParameters
    (140) classHeadName1 -> modifiers_opt . CLASS Identifier
    (33) type -> . primitiveType
    (34) type -> . referenceType
    (65) typeParameters -> . LESS typeParameterList1
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (44) referenceType -> . classOrInterfaceType
    (45) referenceType -> . arrayType
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (54) arrayType -> . genericType arrays
    (55) arrayType -> . genericType DOT name arrays
    (56) arrayType -> . primitiveType arrays
    (57) arrayType -> . name arrays
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    Identifier      shift and go to state 275
    INTERFACE       shift and go to state 50
    ENUM            shift and go to state 49
    CLASS           shift and go to state 51
    LESS            shift and go to state 83
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182

    qualifiedName                  shift and go to state 64
    classOrInterfaceType           shift and go to state 272
    primitiveType                  shift and go to state 277
    classOrInterface               shift and go to state 122
    simpleName                     shift and go to state 66
    arrayType                      shift and go to state 269
    typeParameters                 shift and go to state 270
    type                           shift and go to state 274
    referenceType                  shift and go to state 273
    genericType                    shift and go to state 271
    name                           shift and go to state 276

state 100

    (160) staticInitializer -> STATIC . block
    (127) modifier -> STATIC .
    (283) block -> . BLPAREN blockStatements_opt BRPAREN

    AT              reduce using rule 127 (modifier -> STATIC .)
    PUBLIC          reduce using rule 127 (modifier -> STATIC .)
    PROTECTED       reduce using rule 127 (modifier -> STATIC .)
    PRIVATE         reduce using rule 127 (modifier -> STATIC .)
    STATIC          reduce using rule 127 (modifier -> STATIC .)
    ABSTRACT        reduce using rule 127 (modifier -> STATIC .)
    FINAL           reduce using rule 127 (modifier -> STATIC .)
    NATIVE          reduce using rule 127 (modifier -> STATIC .)
    SYNCHRONIZED    reduce using rule 127 (modifier -> STATIC .)
    TRANSIENT       reduce using rule 127 (modifier -> STATIC .)
    VOLATILE        reduce using rule 127 (modifier -> STATIC .)
    STRICTFP        reduce using rule 127 (modifier -> STATIC .)
    Identifier      reduce using rule 127 (modifier -> STATIC .)
    INTERFACE       reduce using rule 127 (modifier -> STATIC .)
    ENUM            reduce using rule 127 (modifier -> STATIC .)
    CLASS           reduce using rule 127 (modifier -> STATIC .)
    LESS            reduce using rule 127 (modifier -> STATIC .)
    BOOLEAN         reduce using rule 127 (modifier -> STATIC .)
    VOID            reduce using rule 127 (modifier -> STATIC .)
    BYTE            reduce using rule 127 (modifier -> STATIC .)
    SHORT           reduce using rule 127 (modifier -> STATIC .)
    INT             reduce using rule 127 (modifier -> STATIC .)
    LONG            reduce using rule 127 (modifier -> STATIC .)
    CHAR            reduce using rule 127 (modifier -> STATIC .)
    FLOAT           reduce using rule 127 (modifier -> STATIC .)
    DOUBLE          reduce using rule 127 (modifier -> STATIC .)
    BLPAREN         shift and go to state 120

    block                          shift and go to state 278

state 101

    (175) classMemberDeclaration -> methodDeclaration .

    SEMI            reduce using rule 175 (classMemberDeclaration -> methodDeclaration .)
    STATIC          reduce using rule 175 (classMemberDeclaration -> methodDeclaration .)
    BLPAREN         reduce using rule 175 (classMemberDeclaration -> methodDeclaration .)
    AT              reduce using rule 175 (classMemberDeclaration -> methodDeclaration .)
    PUBLIC          reduce using rule 175 (classMemberDeclaration -> methodDeclaration .)
    PROTECTED       reduce using rule 175 (classMemberDeclaration -> methodDeclaration .)
    PRIVATE         reduce using rule 175 (classMemberDeclaration -> methodDeclaration .)
    ABSTRACT        reduce using rule 175 (classMemberDeclaration -> methodDeclaration .)
    FINAL           reduce using rule 175 (classMemberDeclaration -> methodDeclaration .)
    NATIVE          reduce using rule 175 (classMemberDeclaration -> methodDeclaration .)
    SYNCHRONIZED    reduce using rule 175 (classMemberDeclaration -> methodDeclaration .)
    TRANSIENT       reduce using rule 175 (classMemberDeclaration -> methodDeclaration .)
    VOLATILE        reduce using rule 175 (classMemberDeclaration -> methodDeclaration .)
    STRICTFP        reduce using rule 175 (classMemberDeclaration -> methodDeclaration .)
    Identifier      reduce using rule 175 (classMemberDeclaration -> methodDeclaration .)
    INTERFACE       reduce using rule 175 (classMemberDeclaration -> methodDeclaration .)
    ENUM            reduce using rule 175 (classMemberDeclaration -> methodDeclaration .)
    CLASS           reduce using rule 175 (classMemberDeclaration -> methodDeclaration .)
    LESS            reduce using rule 175 (classMemberDeclaration -> methodDeclaration .)
    BOOLEAN         reduce using rule 175 (classMemberDeclaration -> methodDeclaration .)
    VOID            reduce using rule 175 (classMemberDeclaration -> methodDeclaration .)
    BYTE            reduce using rule 175 (classMemberDeclaration -> methodDeclaration .)
    SHORT           reduce using rule 175 (classMemberDeclaration -> methodDeclaration .)
    INT             reduce using rule 175 (classMemberDeclaration -> methodDeclaration .)
    LONG            reduce using rule 175 (classMemberDeclaration -> methodDeclaration .)
    CHAR            reduce using rule 175 (classMemberDeclaration -> methodDeclaration .)
    FLOAT           reduce using rule 175 (classMemberDeclaration -> methodDeclaration .)
    DOUBLE          reduce using rule 175 (classMemberDeclaration -> methodDeclaration .)
    BRPAREN         reduce using rule 175 (classMemberDeclaration -> methodDeclaration .)


state 102

    (161) constructorDeclaration -> constructorHead . methodBody
    (194) methodBody -> . BLPAREN blockStatements_opt BRPAREN

    BLPAREN         shift and go to state 280

    methodBody                     shift and go to state 279

state 103

    (152) classBodyDeclarations_opt -> classBodyDeclarations .
    (155) classBodyDeclarations -> classBodyDeclarations . classBodyDeclaration
    (156) classBodyDeclaration -> . classMemberDeclaration
    (157) classBodyDeclaration -> . staticInitializer
    (158) classBodyDeclaration -> . constructorDeclaration
    (159) classBodyDeclaration -> . block
    (174) classMemberDeclaration -> . fieldDeclaration
    (175) classMemberDeclaration -> . methodDeclaration
    (176) classMemberDeclaration -> . classDeclaration
    (177) classMemberDeclaration -> . interfaceDeclaration
    (178) classMemberDeclaration -> . enumDeclaration
    (179) classMemberDeclaration -> . annotationTypeDeclaration
    (180) classMemberDeclaration -> . SEMI
    (160) staticInitializer -> . STATIC block
    (161) constructorDeclaration -> . constructorHead methodBody
    (283) block -> . BLPAREN blockStatements_opt BRPAREN
    (181) fieldDeclaration -> . modifiers_opt type variableDeclarators SEMI
    (182) methodDeclaration -> . abstractMethodDeclaration
    (183) methodDeclaration -> . methodHeader methodBody
    (136) classDeclaration -> . classHead classBody
    (195) interfaceDeclaration -> . interfaceHead InterfaceBody
    (215) enumDeclaration -> . enumHead enumBody
    (239) annotationTypeDeclaration -> . annotationTypeDeclarationHead annotationTypeBody
    (162) constructorHead -> . constructorName formalParameterList_opt RPAREN methodHeadThrowList_opt
    (120) modifiers_opt -> . modifiers
    (121) modifiers_opt -> . empty
    (184) abstractMethodDeclaration -> . methodHeader SEMI
    (185) methodHeader -> . methodName formalParameterList_opt RPAREN methodHeadExtendedDims methodHeadThrowList_opt
    (137) classHead -> . className classExtends_opt classImpls_opt
    (196) interfaceHead -> . interfaceHeadName interfaceHeadExtends_opt
    (216) enumHead -> . enumHeadName classImpls_opt
    (240) annotationTypeDeclarationHead -> . annotationTypeDeclarationHeadName classExtends_opt classImpls_opt
    (163) constructorName -> . modifiers_opt typeParameters Identifier LPAREN
    (164) constructorName -> . modifiers_opt Identifier LPAREN
    (122) modifiers -> . modifier
    (123) modifiers -> . modifiers modifier
    (631) empty -> .
    (186) methodName -> . modifiers_opt typeParameters type Identifier LPAREN
    (187) methodName -> . modifiers_opt type Identifier LPAREN
    (138) className -> . classHeadName1 typeParameters
    (139) className -> . classHeadName1
    (197) interfaceHeadName -> . modifiers_opt INTERFACE Identifier typeParameters
    (198) interfaceHeadName -> . modifiers_opt INTERFACE Identifier
    (217) enumHeadName -> . modifiers_opt ENUM Identifier
    (218) enumHeadName -> . modifiers_opt ENUM Identifier typeParameters
    (241) annotationTypeDeclarationHeadName -> . modifiers AT INTERFACE Identifier
    (242) annotationTypeDeclarationHeadName -> . modifiers AT INTERFACE Identifier typeParameters
    (243) annotationTypeDeclarationHeadName -> . AT INTERFACE Identifier typeParameters
    (244) annotationTypeDeclarationHeadName -> . AT INTERFACE Identifier
    (124) modifier -> . PUBLIC
    (125) modifier -> . PROTECTED
    (126) modifier -> . PRIVATE
    (127) modifier -> . STATIC
    (128) modifier -> . ABSTRACT
    (129) modifier -> . FINAL
    (130) modifier -> . NATIVE
    (131) modifier -> . SYNCHRONIZED
    (132) modifier -> . TRANSIENT
    (133) modifier -> . VOLATILE
    (134) modifier -> . STRICTFP
    (135) modifier -> . annotation
    (140) classHeadName1 -> . modifiers_opt CLASS Identifier
    (270) annotation -> . normalAnnotation
    (271) annotation -> . markerAnnotation
    (272) annotation -> . singleMemberAnnotation
    (273) normalAnnotation -> . annotationName LPAREN memberValuePairs_opt RPAREN
    (280) markerAnnotation -> . annotationName
    (281) singleMemberAnnotation -> . annotationName LPAREN singleMemberAnnotationMemberValue RPAREN
    (274) annotationName -> . AT name

    BRPAREN         reduce using rule 152 (classBodyDeclarations_opt -> classBodyDeclarations .)
    SEMI            shift and go to state 113
    STATIC          shift and go to state 100
    BLPAREN         shift and go to state 120
    Identifier      reduce using rule 631 (empty -> .)
    INTERFACE       reduce using rule 631 (empty -> .)
    ENUM            reduce using rule 631 (empty -> .)
    CLASS           reduce using rule 631 (empty -> .)
    LESS            reduce using rule 631 (empty -> .)
    BOOLEAN         reduce using rule 631 (empty -> .)
    VOID            reduce using rule 631 (empty -> .)
    BYTE            reduce using rule 631 (empty -> .)
    SHORT           reduce using rule 631 (empty -> .)
    INT             reduce using rule 631 (empty -> .)
    LONG            reduce using rule 631 (empty -> .)
    CHAR            reduce using rule 631 (empty -> .)
    FLOAT           reduce using rule 631 (empty -> .)
    DOUBLE          reduce using rule 631 (empty -> .)
    AT              shift and go to state 48
    PUBLIC          shift and go to state 46
    PROTECTED       shift and go to state 6
    PRIVATE         shift and go to state 14
    ABSTRACT        shift and go to state 5
    FINAL           shift and go to state 11
    NATIVE          shift and go to state 12
    SYNCHRONIZED    shift and go to state 2
    TRANSIENT       shift and go to state 19
    VOLATILE        shift and go to state 43
    STRICTFP        shift and go to state 18

    methodName                     shift and go to state 98
    modifiers_opt                  shift and go to state 99
    classHead                      shift and go to state 3
    className                      shift and go to state 13
    singleMemberAnnotation         shift and go to state 8
    markerAnnotation               shift and go to state 9
    methodDeclaration              shift and go to state 101
    constructorHead                shift and go to state 102
    annotationTypeDeclarationHead  shift and go to state 15
    enumHeadName                   shift and go to state 10
    constructorName                shift and go to state 104
    empty                          shift and go to state 74
    methodHeader                   shift and go to state 106
    abstractMethodDeclaration      shift and go to state 107
    enumDeclaration                shift and go to state 108
    classMemberDeclaration         shift and go to state 109
    interfaceHeadName              shift and go to state 27
    classHeadName1                 shift and go to state 33
    enumHead                       shift and go to state 30
    classBodyDeclaration           shift and go to state 281
    fieldDeclaration               shift and go to state 111
    annotationTypeDeclarationHeadName shift and go to state 34
    annotation                     shift and go to state 35
    modifiers                      shift and go to state 112
    annotationName                 shift and go to state 40
    staticInitializer              shift and go to state 114
    annotationTypeDeclaration      shift and go to state 115
    normalAnnotation               shift and go to state 24
    interfaceDeclaration           shift and go to state 116
    interfaceHead                  shift and go to state 47
    constructorDeclaration         shift and go to state 117
    classDeclaration               shift and go to state 110
    modifier                       shift and go to state 45
    block                          shift and go to state 121

state 104

    (162) constructorHead -> constructorName . formalParameterList_opt RPAREN methodHeadThrowList_opt
    (165) formalParameterList_opt -> . formalParameterList
    (166) formalParameterList_opt -> . empty
    (167) formalParameterList -> . formalParameter
    (168) formalParameterList -> . formalParameterList COMMA formalParameter
    (631) empty -> .
    (169) formalParameter -> . modifiers_opt type variableDeclaratorId
    (170) formalParameter -> . modifiers_opt type OP_ARRAY variableDeclaratorId
    (120) modifiers_opt -> . modifiers
    (121) modifiers_opt -> . empty
    (122) modifiers -> . modifier
    (123) modifiers -> . modifiers modifier
    (124) modifier -> . PUBLIC
    (125) modifier -> . PROTECTED
    (126) modifier -> . PRIVATE
    (127) modifier -> . STATIC
    (128) modifier -> . ABSTRACT
    (129) modifier -> . FINAL
    (130) modifier -> . NATIVE
    (131) modifier -> . SYNCHRONIZED
    (132) modifier -> . TRANSIENT
    (133) modifier -> . VOLATILE
    (134) modifier -> . STRICTFP
    (135) modifier -> . annotation
    (270) annotation -> . normalAnnotation
    (271) annotation -> . markerAnnotation
    (272) annotation -> . singleMemberAnnotation
    (273) normalAnnotation -> . annotationName LPAREN memberValuePairs_opt RPAREN
    (280) markerAnnotation -> . annotationName
    (281) singleMemberAnnotation -> . annotationName LPAREN singleMemberAnnotationMemberValue RPAREN
    (274) annotationName -> . AT name

    RPAREN          reduce using rule 631 (empty -> .)
    BOOLEAN         reduce using rule 631 (empty -> .)
    VOID            reduce using rule 631 (empty -> .)
    BYTE            reduce using rule 631 (empty -> .)
    SHORT           reduce using rule 631 (empty -> .)
    INT             reduce using rule 631 (empty -> .)
    LONG            reduce using rule 631 (empty -> .)
    CHAR            reduce using rule 631 (empty -> .)
    FLOAT           reduce using rule 631 (empty -> .)
    DOUBLE          reduce using rule 631 (empty -> .)
    Identifier      reduce using rule 631 (empty -> .)
    PUBLIC          shift and go to state 46
    PROTECTED       shift and go to state 6
    PRIVATE         shift and go to state 14
    STATIC          shift and go to state 7
    ABSTRACT        shift and go to state 5
    FINAL           shift and go to state 11
    NATIVE          shift and go to state 12
    SYNCHRONIZED    shift and go to state 2
    TRANSIENT       shift and go to state 19
    VOLATILE        shift and go to state 43
    STRICTFP        shift and go to state 18
    AT              shift and go to state 155

    markerAnnotation               shift and go to state 9
    modifiers                      shift and go to state 156
    modifiers_opt                  shift and go to state 264
    formalParameter                shift and go to state 267
    annotationName                 shift and go to state 40
    singleMemberAnnotation         shift and go to state 8
    normalAnnotation               shift and go to state 24
    formalParameterList            shift and go to state 268
    modifier                       shift and go to state 45
    annotation                     shift and go to state 35
    empty                          shift and go to state 266
    formalParameterList_opt        shift and go to state 282

state 105

    (153) classBodyDeclarations_opt -> empty .
    (121) modifiers_opt -> empty .

    BRPAREN         reduce using rule 153 (classBodyDeclarations_opt -> empty .)
    Identifier      reduce using rule 121 (modifiers_opt -> empty .)
    INTERFACE       reduce using rule 121 (modifiers_opt -> empty .)
    ENUM            reduce using rule 121 (modifiers_opt -> empty .)
    CLASS           reduce using rule 121 (modifiers_opt -> empty .)
    LESS            reduce using rule 121 (modifiers_opt -> empty .)
    BOOLEAN         reduce using rule 121 (modifiers_opt -> empty .)
    VOID            reduce using rule 121 (modifiers_opt -> empty .)
    BYTE            reduce using rule 121 (modifiers_opt -> empty .)
    SHORT           reduce using rule 121 (modifiers_opt -> empty .)
    INT             reduce using rule 121 (modifiers_opt -> empty .)
    LONG            reduce using rule 121 (modifiers_opt -> empty .)
    CHAR            reduce using rule 121 (modifiers_opt -> empty .)
    FLOAT           reduce using rule 121 (modifiers_opt -> empty .)
    DOUBLE          reduce using rule 121 (modifiers_opt -> empty .)


state 106

    (183) methodDeclaration -> methodHeader . methodBody
    (184) abstractMethodDeclaration -> methodHeader . SEMI
    (194) methodBody -> . BLPAREN blockStatements_opt BRPAREN

    SEMI            shift and go to state 284
    BLPAREN         shift and go to state 280

    methodBody                     shift and go to state 283

state 107

    (182) methodDeclaration -> abstractMethodDeclaration .

    SEMI            reduce using rule 182 (methodDeclaration -> abstractMethodDeclaration .)
    STATIC          reduce using rule 182 (methodDeclaration -> abstractMethodDeclaration .)
    BLPAREN         reduce using rule 182 (methodDeclaration -> abstractMethodDeclaration .)
    AT              reduce using rule 182 (methodDeclaration -> abstractMethodDeclaration .)
    PUBLIC          reduce using rule 182 (methodDeclaration -> abstractMethodDeclaration .)
    PROTECTED       reduce using rule 182 (methodDeclaration -> abstractMethodDeclaration .)
    PRIVATE         reduce using rule 182 (methodDeclaration -> abstractMethodDeclaration .)
    ABSTRACT        reduce using rule 182 (methodDeclaration -> abstractMethodDeclaration .)
    FINAL           reduce using rule 182 (methodDeclaration -> abstractMethodDeclaration .)
    NATIVE          reduce using rule 182 (methodDeclaration -> abstractMethodDeclaration .)
    SYNCHRONIZED    reduce using rule 182 (methodDeclaration -> abstractMethodDeclaration .)
    TRANSIENT       reduce using rule 182 (methodDeclaration -> abstractMethodDeclaration .)
    VOLATILE        reduce using rule 182 (methodDeclaration -> abstractMethodDeclaration .)
    STRICTFP        reduce using rule 182 (methodDeclaration -> abstractMethodDeclaration .)
    Identifier      reduce using rule 182 (methodDeclaration -> abstractMethodDeclaration .)
    INTERFACE       reduce using rule 182 (methodDeclaration -> abstractMethodDeclaration .)
    ENUM            reduce using rule 182 (methodDeclaration -> abstractMethodDeclaration .)
    CLASS           reduce using rule 182 (methodDeclaration -> abstractMethodDeclaration .)
    LESS            reduce using rule 182 (methodDeclaration -> abstractMethodDeclaration .)
    BOOLEAN         reduce using rule 182 (methodDeclaration -> abstractMethodDeclaration .)
    VOID            reduce using rule 182 (methodDeclaration -> abstractMethodDeclaration .)
    BYTE            reduce using rule 182 (methodDeclaration -> abstractMethodDeclaration .)
    SHORT           reduce using rule 182 (methodDeclaration -> abstractMethodDeclaration .)
    INT             reduce using rule 182 (methodDeclaration -> abstractMethodDeclaration .)
    LONG            reduce using rule 182 (methodDeclaration -> abstractMethodDeclaration .)
    CHAR            reduce using rule 182 (methodDeclaration -> abstractMethodDeclaration .)
    FLOAT           reduce using rule 182 (methodDeclaration -> abstractMethodDeclaration .)
    DOUBLE          reduce using rule 182 (methodDeclaration -> abstractMethodDeclaration .)
    BRPAREN         reduce using rule 182 (methodDeclaration -> abstractMethodDeclaration .)


state 108

    (178) classMemberDeclaration -> enumDeclaration .

    SEMI            reduce using rule 178 (classMemberDeclaration -> enumDeclaration .)
    STATIC          reduce using rule 178 (classMemberDeclaration -> enumDeclaration .)
    BLPAREN         reduce using rule 178 (classMemberDeclaration -> enumDeclaration .)
    AT              reduce using rule 178 (classMemberDeclaration -> enumDeclaration .)
    PUBLIC          reduce using rule 178 (classMemberDeclaration -> enumDeclaration .)
    PROTECTED       reduce using rule 178 (classMemberDeclaration -> enumDeclaration .)
    PRIVATE         reduce using rule 178 (classMemberDeclaration -> enumDeclaration .)
    ABSTRACT        reduce using rule 178 (classMemberDeclaration -> enumDeclaration .)
    FINAL           reduce using rule 178 (classMemberDeclaration -> enumDeclaration .)
    NATIVE          reduce using rule 178 (classMemberDeclaration -> enumDeclaration .)
    SYNCHRONIZED    reduce using rule 178 (classMemberDeclaration -> enumDeclaration .)
    TRANSIENT       reduce using rule 178 (classMemberDeclaration -> enumDeclaration .)
    VOLATILE        reduce using rule 178 (classMemberDeclaration -> enumDeclaration .)
    STRICTFP        reduce using rule 178 (classMemberDeclaration -> enumDeclaration .)
    Identifier      reduce using rule 178 (classMemberDeclaration -> enumDeclaration .)
    INTERFACE       reduce using rule 178 (classMemberDeclaration -> enumDeclaration .)
    ENUM            reduce using rule 178 (classMemberDeclaration -> enumDeclaration .)
    CLASS           reduce using rule 178 (classMemberDeclaration -> enumDeclaration .)
    LESS            reduce using rule 178 (classMemberDeclaration -> enumDeclaration .)
    BOOLEAN         reduce using rule 178 (classMemberDeclaration -> enumDeclaration .)
    VOID            reduce using rule 178 (classMemberDeclaration -> enumDeclaration .)
    BYTE            reduce using rule 178 (classMemberDeclaration -> enumDeclaration .)
    SHORT           reduce using rule 178 (classMemberDeclaration -> enumDeclaration .)
    INT             reduce using rule 178 (classMemberDeclaration -> enumDeclaration .)
    LONG            reduce using rule 178 (classMemberDeclaration -> enumDeclaration .)
    CHAR            reduce using rule 178 (classMemberDeclaration -> enumDeclaration .)
    FLOAT           reduce using rule 178 (classMemberDeclaration -> enumDeclaration .)
    DOUBLE          reduce using rule 178 (classMemberDeclaration -> enumDeclaration .)
    BRPAREN         reduce using rule 178 (classMemberDeclaration -> enumDeclaration .)


state 109

    (156) classBodyDeclaration -> classMemberDeclaration .

    SEMI            reduce using rule 156 (classBodyDeclaration -> classMemberDeclaration .)
    STATIC          reduce using rule 156 (classBodyDeclaration -> classMemberDeclaration .)
    BLPAREN         reduce using rule 156 (classBodyDeclaration -> classMemberDeclaration .)
    AT              reduce using rule 156 (classBodyDeclaration -> classMemberDeclaration .)
    PUBLIC          reduce using rule 156 (classBodyDeclaration -> classMemberDeclaration .)
    PROTECTED       reduce using rule 156 (classBodyDeclaration -> classMemberDeclaration .)
    PRIVATE         reduce using rule 156 (classBodyDeclaration -> classMemberDeclaration .)
    ABSTRACT        reduce using rule 156 (classBodyDeclaration -> classMemberDeclaration .)
    FINAL           reduce using rule 156 (classBodyDeclaration -> classMemberDeclaration .)
    NATIVE          reduce using rule 156 (classBodyDeclaration -> classMemberDeclaration .)
    SYNCHRONIZED    reduce using rule 156 (classBodyDeclaration -> classMemberDeclaration .)
    TRANSIENT       reduce using rule 156 (classBodyDeclaration -> classMemberDeclaration .)
    VOLATILE        reduce using rule 156 (classBodyDeclaration -> classMemberDeclaration .)
    STRICTFP        reduce using rule 156 (classBodyDeclaration -> classMemberDeclaration .)
    Identifier      reduce using rule 156 (classBodyDeclaration -> classMemberDeclaration .)
    INTERFACE       reduce using rule 156 (classBodyDeclaration -> classMemberDeclaration .)
    ENUM            reduce using rule 156 (classBodyDeclaration -> classMemberDeclaration .)
    CLASS           reduce using rule 156 (classBodyDeclaration -> classMemberDeclaration .)
    LESS            reduce using rule 156 (classBodyDeclaration -> classMemberDeclaration .)
    BOOLEAN         reduce using rule 156 (classBodyDeclaration -> classMemberDeclaration .)
    VOID            reduce using rule 156 (classBodyDeclaration -> classMemberDeclaration .)
    BYTE            reduce using rule 156 (classBodyDeclaration -> classMemberDeclaration .)
    SHORT           reduce using rule 156 (classBodyDeclaration -> classMemberDeclaration .)
    INT             reduce using rule 156 (classBodyDeclaration -> classMemberDeclaration .)
    LONG            reduce using rule 156 (classBodyDeclaration -> classMemberDeclaration .)
    CHAR            reduce using rule 156 (classBodyDeclaration -> classMemberDeclaration .)
    FLOAT           reduce using rule 156 (classBodyDeclaration -> classMemberDeclaration .)
    DOUBLE          reduce using rule 156 (classBodyDeclaration -> classMemberDeclaration .)
    BRPAREN         reduce using rule 156 (classBodyDeclaration -> classMemberDeclaration .)


state 110

    (176) classMemberDeclaration -> classDeclaration .

    SEMI            reduce using rule 176 (classMemberDeclaration -> classDeclaration .)
    STATIC          reduce using rule 176 (classMemberDeclaration -> classDeclaration .)
    BLPAREN         reduce using rule 176 (classMemberDeclaration -> classDeclaration .)
    AT              reduce using rule 176 (classMemberDeclaration -> classDeclaration .)
    PUBLIC          reduce using rule 176 (classMemberDeclaration -> classDeclaration .)
    PROTECTED       reduce using rule 176 (classMemberDeclaration -> classDeclaration .)
    PRIVATE         reduce using rule 176 (classMemberDeclaration -> classDeclaration .)
    ABSTRACT        reduce using rule 176 (classMemberDeclaration -> classDeclaration .)
    FINAL           reduce using rule 176 (classMemberDeclaration -> classDeclaration .)
    NATIVE          reduce using rule 176 (classMemberDeclaration -> classDeclaration .)
    SYNCHRONIZED    reduce using rule 176 (classMemberDeclaration -> classDeclaration .)
    TRANSIENT       reduce using rule 176 (classMemberDeclaration -> classDeclaration .)
    VOLATILE        reduce using rule 176 (classMemberDeclaration -> classDeclaration .)
    STRICTFP        reduce using rule 176 (classMemberDeclaration -> classDeclaration .)
    Identifier      reduce using rule 176 (classMemberDeclaration -> classDeclaration .)
    INTERFACE       reduce using rule 176 (classMemberDeclaration -> classDeclaration .)
    ENUM            reduce using rule 176 (classMemberDeclaration -> classDeclaration .)
    CLASS           reduce using rule 176 (classMemberDeclaration -> classDeclaration .)
    LESS            reduce using rule 176 (classMemberDeclaration -> classDeclaration .)
    BOOLEAN         reduce using rule 176 (classMemberDeclaration -> classDeclaration .)
    VOID            reduce using rule 176 (classMemberDeclaration -> classDeclaration .)
    BYTE            reduce using rule 176 (classMemberDeclaration -> classDeclaration .)
    SHORT           reduce using rule 176 (classMemberDeclaration -> classDeclaration .)
    INT             reduce using rule 176 (classMemberDeclaration -> classDeclaration .)
    LONG            reduce using rule 176 (classMemberDeclaration -> classDeclaration .)
    CHAR            reduce using rule 176 (classMemberDeclaration -> classDeclaration .)
    FLOAT           reduce using rule 176 (classMemberDeclaration -> classDeclaration .)
    DOUBLE          reduce using rule 176 (classMemberDeclaration -> classDeclaration .)
    BRPAREN         reduce using rule 176 (classMemberDeclaration -> classDeclaration .)


state 111

    (174) classMemberDeclaration -> fieldDeclaration .

    SEMI            reduce using rule 174 (classMemberDeclaration -> fieldDeclaration .)
    STATIC          reduce using rule 174 (classMemberDeclaration -> fieldDeclaration .)
    BLPAREN         reduce using rule 174 (classMemberDeclaration -> fieldDeclaration .)
    AT              reduce using rule 174 (classMemberDeclaration -> fieldDeclaration .)
    PUBLIC          reduce using rule 174 (classMemberDeclaration -> fieldDeclaration .)
    PROTECTED       reduce using rule 174 (classMemberDeclaration -> fieldDeclaration .)
    PRIVATE         reduce using rule 174 (classMemberDeclaration -> fieldDeclaration .)
    ABSTRACT        reduce using rule 174 (classMemberDeclaration -> fieldDeclaration .)
    FINAL           reduce using rule 174 (classMemberDeclaration -> fieldDeclaration .)
    NATIVE          reduce using rule 174 (classMemberDeclaration -> fieldDeclaration .)
    SYNCHRONIZED    reduce using rule 174 (classMemberDeclaration -> fieldDeclaration .)
    TRANSIENT       reduce using rule 174 (classMemberDeclaration -> fieldDeclaration .)
    VOLATILE        reduce using rule 174 (classMemberDeclaration -> fieldDeclaration .)
    STRICTFP        reduce using rule 174 (classMemberDeclaration -> fieldDeclaration .)
    Identifier      reduce using rule 174 (classMemberDeclaration -> fieldDeclaration .)
    INTERFACE       reduce using rule 174 (classMemberDeclaration -> fieldDeclaration .)
    ENUM            reduce using rule 174 (classMemberDeclaration -> fieldDeclaration .)
    CLASS           reduce using rule 174 (classMemberDeclaration -> fieldDeclaration .)
    LESS            reduce using rule 174 (classMemberDeclaration -> fieldDeclaration .)
    BOOLEAN         reduce using rule 174 (classMemberDeclaration -> fieldDeclaration .)
    VOID            reduce using rule 174 (classMemberDeclaration -> fieldDeclaration .)
    BYTE            reduce using rule 174 (classMemberDeclaration -> fieldDeclaration .)
    SHORT           reduce using rule 174 (classMemberDeclaration -> fieldDeclaration .)
    INT             reduce using rule 174 (classMemberDeclaration -> fieldDeclaration .)
    LONG            reduce using rule 174 (classMemberDeclaration -> fieldDeclaration .)
    CHAR            reduce using rule 174 (classMemberDeclaration -> fieldDeclaration .)
    FLOAT           reduce using rule 174 (classMemberDeclaration -> fieldDeclaration .)
    DOUBLE          reduce using rule 174 (classMemberDeclaration -> fieldDeclaration .)
    BRPAREN         reduce using rule 174 (classMemberDeclaration -> fieldDeclaration .)


state 112

    (120) modifiers_opt -> modifiers .
    (123) modifiers -> modifiers . modifier
    (241) annotationTypeDeclarationHeadName -> modifiers . AT INTERFACE Identifier
    (242) annotationTypeDeclarationHeadName -> modifiers . AT INTERFACE Identifier typeParameters
    (124) modifier -> . PUBLIC
    (125) modifier -> . PROTECTED
    (126) modifier -> . PRIVATE
    (127) modifier -> . STATIC
    (128) modifier -> . ABSTRACT
    (129) modifier -> . FINAL
    (130) modifier -> . NATIVE
    (131) modifier -> . SYNCHRONIZED
    (132) modifier -> . TRANSIENT
    (133) modifier -> . VOLATILE
    (134) modifier -> . STRICTFP
    (135) modifier -> . annotation
    (270) annotation -> . normalAnnotation
    (271) annotation -> . markerAnnotation
    (272) annotation -> . singleMemberAnnotation
    (273) normalAnnotation -> . annotationName LPAREN memberValuePairs_opt RPAREN
    (280) markerAnnotation -> . annotationName
    (281) singleMemberAnnotation -> . annotationName LPAREN singleMemberAnnotationMemberValue RPAREN
    (274) annotationName -> . AT name

    Identifier      reduce using rule 120 (modifiers_opt -> modifiers .)
    INTERFACE       reduce using rule 120 (modifiers_opt -> modifiers .)
    ENUM            reduce using rule 120 (modifiers_opt -> modifiers .)
    CLASS           reduce using rule 120 (modifiers_opt -> modifiers .)
    LESS            reduce using rule 120 (modifiers_opt -> modifiers .)
    BOOLEAN         reduce using rule 120 (modifiers_opt -> modifiers .)
    VOID            reduce using rule 120 (modifiers_opt -> modifiers .)
    BYTE            reduce using rule 120 (modifiers_opt -> modifiers .)
    SHORT           reduce using rule 120 (modifiers_opt -> modifiers .)
    INT             reduce using rule 120 (modifiers_opt -> modifiers .)
    LONG            reduce using rule 120 (modifiers_opt -> modifiers .)
    CHAR            reduce using rule 120 (modifiers_opt -> modifiers .)
    FLOAT           reduce using rule 120 (modifiers_opt -> modifiers .)
    DOUBLE          reduce using rule 120 (modifiers_opt -> modifiers .)
    AT              shift and go to state 86
    PUBLIC          shift and go to state 46
    PROTECTED       shift and go to state 6
    PRIVATE         shift and go to state 14
    STATIC          shift and go to state 7
    ABSTRACT        shift and go to state 5
    FINAL           shift and go to state 11
    NATIVE          shift and go to state 12
    SYNCHRONIZED    shift and go to state 2
    TRANSIENT       shift and go to state 19
    VOLATILE        shift and go to state 43
    STRICTFP        shift and go to state 18

    markerAnnotation               shift and go to state 9
    annotationName                 shift and go to state 40
    singleMemberAnnotation         shift and go to state 8
    normalAnnotation               shift and go to state 24
    modifier                       shift and go to state 87
    annotation                     shift and go to state 35

state 113

    (180) classMemberDeclaration -> SEMI .

    SEMI            reduce using rule 180 (classMemberDeclaration -> SEMI .)
    STATIC          reduce using rule 180 (classMemberDeclaration -> SEMI .)
    BLPAREN         reduce using rule 180 (classMemberDeclaration -> SEMI .)
    AT              reduce using rule 180 (classMemberDeclaration -> SEMI .)
    PUBLIC          reduce using rule 180 (classMemberDeclaration -> SEMI .)
    PROTECTED       reduce using rule 180 (classMemberDeclaration -> SEMI .)
    PRIVATE         reduce using rule 180 (classMemberDeclaration -> SEMI .)
    ABSTRACT        reduce using rule 180 (classMemberDeclaration -> SEMI .)
    FINAL           reduce using rule 180 (classMemberDeclaration -> SEMI .)
    NATIVE          reduce using rule 180 (classMemberDeclaration -> SEMI .)
    SYNCHRONIZED    reduce using rule 180 (classMemberDeclaration -> SEMI .)
    TRANSIENT       reduce using rule 180 (classMemberDeclaration -> SEMI .)
    VOLATILE        reduce using rule 180 (classMemberDeclaration -> SEMI .)
    STRICTFP        reduce using rule 180 (classMemberDeclaration -> SEMI .)
    Identifier      reduce using rule 180 (classMemberDeclaration -> SEMI .)
    INTERFACE       reduce using rule 180 (classMemberDeclaration -> SEMI .)
    ENUM            reduce using rule 180 (classMemberDeclaration -> SEMI .)
    CLASS           reduce using rule 180 (classMemberDeclaration -> SEMI .)
    LESS            reduce using rule 180 (classMemberDeclaration -> SEMI .)
    BOOLEAN         reduce using rule 180 (classMemberDeclaration -> SEMI .)
    VOID            reduce using rule 180 (classMemberDeclaration -> SEMI .)
    BYTE            reduce using rule 180 (classMemberDeclaration -> SEMI .)
    SHORT           reduce using rule 180 (classMemberDeclaration -> SEMI .)
    INT             reduce using rule 180 (classMemberDeclaration -> SEMI .)
    LONG            reduce using rule 180 (classMemberDeclaration -> SEMI .)
    CHAR            reduce using rule 180 (classMemberDeclaration -> SEMI .)
    FLOAT           reduce using rule 180 (classMemberDeclaration -> SEMI .)
    DOUBLE          reduce using rule 180 (classMemberDeclaration -> SEMI .)
    BRPAREN         reduce using rule 180 (classMemberDeclaration -> SEMI .)


state 114

    (157) classBodyDeclaration -> staticInitializer .

    SEMI            reduce using rule 157 (classBodyDeclaration -> staticInitializer .)
    STATIC          reduce using rule 157 (classBodyDeclaration -> staticInitializer .)
    BLPAREN         reduce using rule 157 (classBodyDeclaration -> staticInitializer .)
    AT              reduce using rule 157 (classBodyDeclaration -> staticInitializer .)
    PUBLIC          reduce using rule 157 (classBodyDeclaration -> staticInitializer .)
    PROTECTED       reduce using rule 157 (classBodyDeclaration -> staticInitializer .)
    PRIVATE         reduce using rule 157 (classBodyDeclaration -> staticInitializer .)
    ABSTRACT        reduce using rule 157 (classBodyDeclaration -> staticInitializer .)
    FINAL           reduce using rule 157 (classBodyDeclaration -> staticInitializer .)
    NATIVE          reduce using rule 157 (classBodyDeclaration -> staticInitializer .)
    SYNCHRONIZED    reduce using rule 157 (classBodyDeclaration -> staticInitializer .)
    TRANSIENT       reduce using rule 157 (classBodyDeclaration -> staticInitializer .)
    VOLATILE        reduce using rule 157 (classBodyDeclaration -> staticInitializer .)
    STRICTFP        reduce using rule 157 (classBodyDeclaration -> staticInitializer .)
    Identifier      reduce using rule 157 (classBodyDeclaration -> staticInitializer .)
    INTERFACE       reduce using rule 157 (classBodyDeclaration -> staticInitializer .)
    ENUM            reduce using rule 157 (classBodyDeclaration -> staticInitializer .)
    CLASS           reduce using rule 157 (classBodyDeclaration -> staticInitializer .)
    LESS            reduce using rule 157 (classBodyDeclaration -> staticInitializer .)
    BOOLEAN         reduce using rule 157 (classBodyDeclaration -> staticInitializer .)
    VOID            reduce using rule 157 (classBodyDeclaration -> staticInitializer .)
    BYTE            reduce using rule 157 (classBodyDeclaration -> staticInitializer .)
    SHORT           reduce using rule 157 (classBodyDeclaration -> staticInitializer .)
    INT             reduce using rule 157 (classBodyDeclaration -> staticInitializer .)
    LONG            reduce using rule 157 (classBodyDeclaration -> staticInitializer .)
    CHAR            reduce using rule 157 (classBodyDeclaration -> staticInitializer .)
    FLOAT           reduce using rule 157 (classBodyDeclaration -> staticInitializer .)
    DOUBLE          reduce using rule 157 (classBodyDeclaration -> staticInitializer .)
    BRPAREN         reduce using rule 157 (classBodyDeclaration -> staticInitializer .)


state 115

    (179) classMemberDeclaration -> annotationTypeDeclaration .

    SEMI            reduce using rule 179 (classMemberDeclaration -> annotationTypeDeclaration .)
    STATIC          reduce using rule 179 (classMemberDeclaration -> annotationTypeDeclaration .)
    BLPAREN         reduce using rule 179 (classMemberDeclaration -> annotationTypeDeclaration .)
    AT              reduce using rule 179 (classMemberDeclaration -> annotationTypeDeclaration .)
    PUBLIC          reduce using rule 179 (classMemberDeclaration -> annotationTypeDeclaration .)
    PROTECTED       reduce using rule 179 (classMemberDeclaration -> annotationTypeDeclaration .)
    PRIVATE         reduce using rule 179 (classMemberDeclaration -> annotationTypeDeclaration .)
    ABSTRACT        reduce using rule 179 (classMemberDeclaration -> annotationTypeDeclaration .)
    FINAL           reduce using rule 179 (classMemberDeclaration -> annotationTypeDeclaration .)
    NATIVE          reduce using rule 179 (classMemberDeclaration -> annotationTypeDeclaration .)
    SYNCHRONIZED    reduce using rule 179 (classMemberDeclaration -> annotationTypeDeclaration .)
    TRANSIENT       reduce using rule 179 (classMemberDeclaration -> annotationTypeDeclaration .)
    VOLATILE        reduce using rule 179 (classMemberDeclaration -> annotationTypeDeclaration .)
    STRICTFP        reduce using rule 179 (classMemberDeclaration -> annotationTypeDeclaration .)
    Identifier      reduce using rule 179 (classMemberDeclaration -> annotationTypeDeclaration .)
    INTERFACE       reduce using rule 179 (classMemberDeclaration -> annotationTypeDeclaration .)
    ENUM            reduce using rule 179 (classMemberDeclaration -> annotationTypeDeclaration .)
    CLASS           reduce using rule 179 (classMemberDeclaration -> annotationTypeDeclaration .)
    LESS            reduce using rule 179 (classMemberDeclaration -> annotationTypeDeclaration .)
    BOOLEAN         reduce using rule 179 (classMemberDeclaration -> annotationTypeDeclaration .)
    VOID            reduce using rule 179 (classMemberDeclaration -> annotationTypeDeclaration .)
    BYTE            reduce using rule 179 (classMemberDeclaration -> annotationTypeDeclaration .)
    SHORT           reduce using rule 179 (classMemberDeclaration -> annotationTypeDeclaration .)
    INT             reduce using rule 179 (classMemberDeclaration -> annotationTypeDeclaration .)
    LONG            reduce using rule 179 (classMemberDeclaration -> annotationTypeDeclaration .)
    CHAR            reduce using rule 179 (classMemberDeclaration -> annotationTypeDeclaration .)
    FLOAT           reduce using rule 179 (classMemberDeclaration -> annotationTypeDeclaration .)
    DOUBLE          reduce using rule 179 (classMemberDeclaration -> annotationTypeDeclaration .)
    BRPAREN         reduce using rule 179 (classMemberDeclaration -> annotationTypeDeclaration .)


state 116

    (177) classMemberDeclaration -> interfaceDeclaration .

    SEMI            reduce using rule 177 (classMemberDeclaration -> interfaceDeclaration .)
    STATIC          reduce using rule 177 (classMemberDeclaration -> interfaceDeclaration .)
    BLPAREN         reduce using rule 177 (classMemberDeclaration -> interfaceDeclaration .)
    AT              reduce using rule 177 (classMemberDeclaration -> interfaceDeclaration .)
    PUBLIC          reduce using rule 177 (classMemberDeclaration -> interfaceDeclaration .)
    PROTECTED       reduce using rule 177 (classMemberDeclaration -> interfaceDeclaration .)
    PRIVATE         reduce using rule 177 (classMemberDeclaration -> interfaceDeclaration .)
    ABSTRACT        reduce using rule 177 (classMemberDeclaration -> interfaceDeclaration .)
    FINAL           reduce using rule 177 (classMemberDeclaration -> interfaceDeclaration .)
    NATIVE          reduce using rule 177 (classMemberDeclaration -> interfaceDeclaration .)
    SYNCHRONIZED    reduce using rule 177 (classMemberDeclaration -> interfaceDeclaration .)
    TRANSIENT       reduce using rule 177 (classMemberDeclaration -> interfaceDeclaration .)
    VOLATILE        reduce using rule 177 (classMemberDeclaration -> interfaceDeclaration .)
    STRICTFP        reduce using rule 177 (classMemberDeclaration -> interfaceDeclaration .)
    Identifier      reduce using rule 177 (classMemberDeclaration -> interfaceDeclaration .)
    INTERFACE       reduce using rule 177 (classMemberDeclaration -> interfaceDeclaration .)
    ENUM            reduce using rule 177 (classMemberDeclaration -> interfaceDeclaration .)
    CLASS           reduce using rule 177 (classMemberDeclaration -> interfaceDeclaration .)
    LESS            reduce using rule 177 (classMemberDeclaration -> interfaceDeclaration .)
    BOOLEAN         reduce using rule 177 (classMemberDeclaration -> interfaceDeclaration .)
    VOID            reduce using rule 177 (classMemberDeclaration -> interfaceDeclaration .)
    BYTE            reduce using rule 177 (classMemberDeclaration -> interfaceDeclaration .)
    SHORT           reduce using rule 177 (classMemberDeclaration -> interfaceDeclaration .)
    INT             reduce using rule 177 (classMemberDeclaration -> interfaceDeclaration .)
    LONG            reduce using rule 177 (classMemberDeclaration -> interfaceDeclaration .)
    CHAR            reduce using rule 177 (classMemberDeclaration -> interfaceDeclaration .)
    FLOAT           reduce using rule 177 (classMemberDeclaration -> interfaceDeclaration .)
    DOUBLE          reduce using rule 177 (classMemberDeclaration -> interfaceDeclaration .)
    BRPAREN         reduce using rule 177 (classMemberDeclaration -> interfaceDeclaration .)


state 117

    (158) classBodyDeclaration -> constructorDeclaration .

    SEMI            reduce using rule 158 (classBodyDeclaration -> constructorDeclaration .)
    STATIC          reduce using rule 158 (classBodyDeclaration -> constructorDeclaration .)
    BLPAREN         reduce using rule 158 (classBodyDeclaration -> constructorDeclaration .)
    AT              reduce using rule 158 (classBodyDeclaration -> constructorDeclaration .)
    PUBLIC          reduce using rule 158 (classBodyDeclaration -> constructorDeclaration .)
    PROTECTED       reduce using rule 158 (classBodyDeclaration -> constructorDeclaration .)
    PRIVATE         reduce using rule 158 (classBodyDeclaration -> constructorDeclaration .)
    ABSTRACT        reduce using rule 158 (classBodyDeclaration -> constructorDeclaration .)
    FINAL           reduce using rule 158 (classBodyDeclaration -> constructorDeclaration .)
    NATIVE          reduce using rule 158 (classBodyDeclaration -> constructorDeclaration .)
    SYNCHRONIZED    reduce using rule 158 (classBodyDeclaration -> constructorDeclaration .)
    TRANSIENT       reduce using rule 158 (classBodyDeclaration -> constructorDeclaration .)
    VOLATILE        reduce using rule 158 (classBodyDeclaration -> constructorDeclaration .)
    STRICTFP        reduce using rule 158 (classBodyDeclaration -> constructorDeclaration .)
    Identifier      reduce using rule 158 (classBodyDeclaration -> constructorDeclaration .)
    INTERFACE       reduce using rule 158 (classBodyDeclaration -> constructorDeclaration .)
    ENUM            reduce using rule 158 (classBodyDeclaration -> constructorDeclaration .)
    CLASS           reduce using rule 158 (classBodyDeclaration -> constructorDeclaration .)
    LESS            reduce using rule 158 (classBodyDeclaration -> constructorDeclaration .)
    BOOLEAN         reduce using rule 158 (classBodyDeclaration -> constructorDeclaration .)
    VOID            reduce using rule 158 (classBodyDeclaration -> constructorDeclaration .)
    BYTE            reduce using rule 158 (classBodyDeclaration -> constructorDeclaration .)
    SHORT           reduce using rule 158 (classBodyDeclaration -> constructorDeclaration .)
    INT             reduce using rule 158 (classBodyDeclaration -> constructorDeclaration .)
    LONG            reduce using rule 158 (classBodyDeclaration -> constructorDeclaration .)
    CHAR            reduce using rule 158 (classBodyDeclaration -> constructorDeclaration .)
    FLOAT           reduce using rule 158 (classBodyDeclaration -> constructorDeclaration .)
    DOUBLE          reduce using rule 158 (classBodyDeclaration -> constructorDeclaration .)
    BRPAREN         reduce using rule 158 (classBodyDeclaration -> constructorDeclaration .)


state 118

    (151) classBody -> BLPAREN classBodyDeclarations_opt . BRPAREN

    BRPAREN         shift and go to state 285


state 119

    (154) classBodyDeclarations -> classBodyDeclaration .

    SEMI            reduce using rule 154 (classBodyDeclarations -> classBodyDeclaration .)
    STATIC          reduce using rule 154 (classBodyDeclarations -> classBodyDeclaration .)
    BLPAREN         reduce using rule 154 (classBodyDeclarations -> classBodyDeclaration .)
    AT              reduce using rule 154 (classBodyDeclarations -> classBodyDeclaration .)
    PUBLIC          reduce using rule 154 (classBodyDeclarations -> classBodyDeclaration .)
    PROTECTED       reduce using rule 154 (classBodyDeclarations -> classBodyDeclaration .)
    PRIVATE         reduce using rule 154 (classBodyDeclarations -> classBodyDeclaration .)
    ABSTRACT        reduce using rule 154 (classBodyDeclarations -> classBodyDeclaration .)
    FINAL           reduce using rule 154 (classBodyDeclarations -> classBodyDeclaration .)
    NATIVE          reduce using rule 154 (classBodyDeclarations -> classBodyDeclaration .)
    SYNCHRONIZED    reduce using rule 154 (classBodyDeclarations -> classBodyDeclaration .)
    TRANSIENT       reduce using rule 154 (classBodyDeclarations -> classBodyDeclaration .)
    VOLATILE        reduce using rule 154 (classBodyDeclarations -> classBodyDeclaration .)
    STRICTFP        reduce using rule 154 (classBodyDeclarations -> classBodyDeclaration .)
    Identifier      reduce using rule 154 (classBodyDeclarations -> classBodyDeclaration .)
    INTERFACE       reduce using rule 154 (classBodyDeclarations -> classBodyDeclaration .)
    ENUM            reduce using rule 154 (classBodyDeclarations -> classBodyDeclaration .)
    CLASS           reduce using rule 154 (classBodyDeclarations -> classBodyDeclaration .)
    LESS            reduce using rule 154 (classBodyDeclarations -> classBodyDeclaration .)
    BOOLEAN         reduce using rule 154 (classBodyDeclarations -> classBodyDeclaration .)
    VOID            reduce using rule 154 (classBodyDeclarations -> classBodyDeclaration .)
    BYTE            reduce using rule 154 (classBodyDeclarations -> classBodyDeclaration .)
    SHORT           reduce using rule 154 (classBodyDeclarations -> classBodyDeclaration .)
    INT             reduce using rule 154 (classBodyDeclarations -> classBodyDeclaration .)
    LONG            reduce using rule 154 (classBodyDeclarations -> classBodyDeclaration .)
    CHAR            reduce using rule 154 (classBodyDeclarations -> classBodyDeclaration .)
    FLOAT           reduce using rule 154 (classBodyDeclarations -> classBodyDeclaration .)
    DOUBLE          reduce using rule 154 (classBodyDeclarations -> classBodyDeclaration .)
    BRPAREN         reduce using rule 154 (classBodyDeclarations -> classBodyDeclaration .)


state 120

    (283) block -> BLPAREN . blockStatements_opt BRPAREN
    (286) blockStatements_opt -> . blockStatements
    (287) blockStatements_opt -> . empty
    (284) blockStatements -> . blockStatement
    (285) blockStatements -> . blockStatements blockStatement
    (631) empty -> .
    (288) blockStatement -> . localVariableDeclarationStatement
    (289) blockStatement -> . statement
    (290) blockStatement -> . classDeclaration
    (291) blockStatement -> . interfaceDeclaration
    (292) blockStatement -> . annotationTypeDeclaration
    (293) blockStatement -> . enumDeclaration
    (294) localVariableDeclarationStatement -> . localVariableDeclaration SEMI
    (304) statement -> . statementWithoutTrailingSubStatement
    (305) statement -> . labeldStatement
    (306) statement -> . ifThenStatement
    (307) statement -> . ifThenElseStatement
    (308) statement -> . whileStatement
    (309) statement -> . forStatement
    (310) statement -> . enhancedForStatement
    (136) classDeclaration -> . classHead classBody
    (195) interfaceDeclaration -> . interfaceHead InterfaceBody
    (239) annotationTypeDeclaration -> . annotationTypeDeclarationHead annotationTypeBody
    (215) enumDeclaration -> . enumHead enumBody
    (295) localVariableDeclaration -> . type variableDeclarators
    (296) localVariableDeclaration -> . modifiers type variableDeclarators
    (311) statementWithoutTrailingSubStatement -> . block
    (312) statementWithoutTrailingSubStatement -> . expressionStatement
    (313) statementWithoutTrailingSubStatement -> . assertStatement
    (314) statementWithoutTrailingSubStatement -> . emptyStatement
    (315) statementWithoutTrailingSubStatement -> . switchStatement
    (316) statementWithoutTrailingSubStatement -> . doStatement
    (317) statementWithoutTrailingSubStatement -> . breakStatement
    (318) statementWithoutTrailingSubStatement -> . continueStatement
    (319) statementWithoutTrailingSubStatement -> . returnStatement
    (320) statementWithoutTrailingSubStatement -> . synchronizedStatement
    (321) statementWithoutTrailingSubStatement -> . throwStatment
    (322) statementWithoutTrailingSubStatement -> . tryStatement
    (323) statementWithoutTrailingSubStatement -> . tryStatementWithResources
    (346) labeldStatement -> . label COLON statement
    (349) ifThenStatement -> . IF LPAREN expression RPAREN statement
    (350) ifThenElseStatement -> . IF LPAREN expression RPAREN statementNoShortIf ELSE statement
    (352) whileStatement -> . WHILE LPAREN expression RPAREN statement
    (354) forStatement -> . FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement
    (367) enhancedForStatement -> . enhancedForStatementHead statement
    (137) classHead -> . className classExtends_opt classImpls_opt
    (196) interfaceHead -> . interfaceHeadName interfaceHeadExtends_opt
    (240) annotationTypeDeclarationHead -> . annotationTypeDeclarationHeadName classExtends_opt classImpls_opt
    (216) enumHead -> . enumHeadName classImpls_opt
    (33) type -> . primitiveType
    (34) type -> . referenceType
    (122) modifiers -> . modifier
    (123) modifiers -> . modifiers modifier
    (283) block -> . BLPAREN blockStatements_opt BRPAREN
    (324) expressionStatement -> . statementExpression SEMI
    (325) expressionStatement -> . explicitConstructorInvocation
    (377) assertStatement -> . ASSERT expression SEMI
    (378) assertStatement -> . ASSERT expression COLON expression SEMI
    (379) emptyStatement -> . SEMI
    (380) switchStatement -> . SWITCH LPAREN expression RPAREN switchBlock
    (393) doStatement -> . DO statement WHILE LPAREN expression RPAREN SEMI
    (394) breakStatement -> . BREAK SEMI
    (395) breakStatement -> . BREAK Identifier SEMI
    (396) continueStatement -> . CONTINUE SEMI
    (397) continueStatement -> . CONTINUE Identifier SEMI
    (398) returnStatement -> . RETURN expression_opt SEMI
    (399) synchronizedStatement -> . SYNCHRONIZED LPAREN expression RPAREN block
    (400) throwStatment -> . THROW expression SEMI
    (401) tryStatement -> . TRY tryBlock catches
    (402) tryStatement -> . TRY tryBlock catches_opt finally
    (413) tryStatementWithResources -> . TRY resourceSpecification tryBlock catches_opt
    (414) tryStatementWithResources -> . TRY resourceSpecification tryBlock catches_opt finally
    (348) label -> . Identifier
    (369) enhancedForStatementHead -> . enhancedForStatementHeadInit COLON expression RPAREN
    (138) className -> . classHeadName1 typeParameters
    (139) className -> . classHeadName1
    (197) interfaceHeadName -> . modifiers_opt INTERFACE Identifier typeParameters
    (198) interfaceHeadName -> . modifiers_opt INTERFACE Identifier
    (241) annotationTypeDeclarationHeadName -> . modifiers AT INTERFACE Identifier
    (242) annotationTypeDeclarationHeadName -> . modifiers AT INTERFACE Identifier typeParameters
    (243) annotationTypeDeclarationHeadName -> . AT INTERFACE Identifier typeParameters
    (244) annotationTypeDeclarationHeadName -> . AT INTERFACE Identifier
    (217) enumHeadName -> . modifiers_opt ENUM Identifier
    (218) enumHeadName -> . modifiers_opt ENUM Identifier typeParameters
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (44) referenceType -> . classOrInterfaceType
    (45) referenceType -> . arrayType
    (124) modifier -> . PUBLIC
    (125) modifier -> . PROTECTED
    (126) modifier -> . PRIVATE
    (127) modifier -> . STATIC
    (128) modifier -> . ABSTRACT
    (129) modifier -> . FINAL
    (130) modifier -> . NATIVE
    (131) modifier -> . SYNCHRONIZED
    (132) modifier -> . TRANSIENT
    (133) modifier -> . VOLATILE
    (134) modifier -> . STRICTFP
    (135) modifier -> . annotation
    (326) statementExpression -> . assignment
    (327) statementExpression -> . preIncrementExpression
    (328) statementExpression -> . preDecrementExpression
    (329) statementExpression -> . postIncrementExpression
    (330) statementExpression -> . postDecrementExpression
    (331) statementExpression -> . methodInvocation
    (332) statementExpression -> . classInstanceCreationExpression
    (424) explicitConstructorInvocation -> . THIS LPAREN argumentList_opt RPAREN SEMI
    (425) explicitConstructorInvocation -> . SUPER LPAREN argumentList_opt RPAREN SEMI
    (426) explicitConstructorInvocation -> . typeArguments SUPER LPAREN argumentList RPAREN SEMI
    (427) explicitConstructorInvocation -> . typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (428) explicitConstructorInvocation -> . primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI
    (429) explicitConstructorInvocation -> . name DOT SUPER LPAREN argumentList_opt RPAREN SEMI
    (430) explicitConstructorInvocation -> . primary DOT THIS LPAREN argumentList_opt RPAREN SEMI
    (431) explicitConstructorInvocation -> . name DOT THIS LPAREN argumentList_opt RPAREN SEMI
    (432) explicitConstructorInvocation -> . primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI
    (433) explicitConstructorInvocation -> . name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI
    (434) explicitConstructorInvocation -> . primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (435) explicitConstructorInvocation -> . name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (370) enhancedForStatementHeadInit -> . FOR LPAREN type Identifier arrays_opt
    (371) enhancedForStatementHeadInit -> . FOR LPAREN modifiers type Identifier arrays_opt
    (140) classHeadName1 -> . modifiers_opt CLASS Identifier
    (120) modifiers_opt -> . modifiers
    (121) modifiers_opt -> . empty
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (54) arrayType -> . genericType arrays
    (55) arrayType -> . genericType DOT name arrays
    (56) arrayType -> . primitiveType arrays
    (57) arrayType -> . name arrays
    (270) annotation -> . normalAnnotation
    (271) annotation -> . markerAnnotation
    (272) annotation -> . singleMemberAnnotation
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (82) typeArguments -> . LESS typeArgumentList1
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (273) normalAnnotation -> . annotationName LPAREN memberValuePairs_opt RPAREN
    (280) markerAnnotation -> . annotationName
    (281) singleMemberAnnotation -> . annotationName LPAREN singleMemberAnnotationMemberValue RPAREN
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (442) classInstanceCreationExpressionName -> . name DOT
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (274) annotationName -> . AT name
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE

    BRPAREN         reduce using rule 631 (empty -> .)
    INTERFACE       reduce using rule 631 (empty -> .)
    ENUM            reduce using rule 631 (empty -> .)
    CLASS           reduce using rule 631 (empty -> .)
    IF              shift and go to state 349
    WHILE           shift and go to state 325
    FOR             shift and go to state 312
    BLPAREN         shift and go to state 120
    ASSERT          shift and go to state 336
    SEMI            shift and go to state 341
    SWITCH          shift and go to state 328
    DO              shift and go to state 335
    BREAK           shift and go to state 305
    CONTINUE        shift and go to state 318
    RETURN          shift and go to state 302
    SYNCHRONIZED    shift and go to state 303
    THROW           shift and go to state 354
    TRY             shift and go to state 314
    Identifier      shift and go to state 316
    AT              shift and go to state 48
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    PUBLIC          shift and go to state 46
    PROTECTED       shift and go to state 6
    PRIVATE         shift and go to state 14
    STATIC          shift and go to state 7
    ABSTRACT        shift and go to state 5
    FINAL           shift and go to state 11
    NATIVE          shift and go to state 12
    TRANSIENT       shift and go to state 19
    VOLATILE        shift and go to state 43
    STRICTFP        shift and go to state 18
    THIS            shift and go to state 300
    SUPER           shift and go to state 353
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    NEW             shift and go to state 326
    LESS            shift and go to state 287
    LPAREN          shift and go to state 348
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    forStatement                   shift and go to state 286
    switchStatement                shift and go to state 288
    assertStatement                shift and go to state 289
    blockStatement                 shift and go to state 290
    genericType                    shift and go to state 271
    markerAnnotation               shift and go to state 9
    classOrInterfaceType           shift and go to state 272
    preIncrementExpression         shift and go to state 308
    booleanLiteral                 shift and go to state 173
    ifThenElseStatement            shift and go to state 291
    primaryNoNewArray              shift and go to state 178
    whileStatement                 shift and go to state 292
    classHeadName1                 shift and go to state 33
    annotationTypeDeclarationHeadName shift and go to state 34
    postIncrementExpression        shift and go to state 293
    localVariableDeclarationStatement shift and go to state 294
    emptyStatement                 shift and go to state 295
    enhancedForStatementHead       shift and go to state 296
    returnStatement                shift and go to state 297
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 298
    name                           shift and go to state 299
    expressionStatement            shift and go to state 301
    annotationName                 shift and go to state 40
    classOrInterface               shift and go to state 122
    qualifiedName                  shift and go to state 64
    continueStatement              shift and go to state 304
    primitiveType                  shift and go to state 334
    postDecrementExpression        shift and go to state 306
    typeArguments                  shift and go to state 307
    label                          shift and go to state 309
    simpleName                     shift and go to state 66
    throwStatment                  shift and go to state 310
    methodInvocation               shift and go to state 311
    classInstanceCreationExpressionName shift and go to state 187
    enhancedForStatementHeadInit   shift and go to state 313
    enumHead                       shift and go to state 30
    classDeclaration               shift and go to state 315
    annotationTypeDeclaration      shift and go to state 317
    interfaceDeclaration           shift and go to state 343
    normalAnnotation               shift and go to state 24
    blockStatements_opt            shift and go to state 319
    preDecrementExpression         shift and go to state 320
    block                          shift and go to state 321
    classInstanceCreationExpression shift and go to state 322
    localVariableDeclaration       shift and go to state 323
    modifiers_opt                  shift and go to state 1
    primary                        shift and go to state 324
    singleMemberAnnotation         shift and go to state 8
    enumHeadName                   shift and go to state 10
    doStatement                    shift and go to state 327
    literal                        shift and go to state 208
    labeldStatement                shift and go to state 329
    statement                      shift and go to state 330
    interfaceHeadName              shift and go to state 27
    referenceType                  shift and go to state 273
    type                           shift and go to state 331
    empty                          shift and go to state 332
    annotationTypeDeclarationHead  shift and go to state 15
    modifiers                      shift and go to state 333
    arrayType                      shift and go to state 269
    className                      shift and go to state 13
    modifier                       shift and go to state 45
    arrayCreationWithArrayInitializer shift and go to state 227
    classHead                      shift and go to state 3
    breakStatement                 shift and go to state 337
    tryStatementWithResources      shift and go to state 338
    synchronizedStatement          shift and go to state 339
    enumDeclaration                shift and go to state 340
    arrayCreationWithoutArrayInitializer shift and go to state 232
    tryStatement                   shift and go to state 342
    FloatingPointLiteral           shift and go to state 214
    fieldAccess                    shift and go to state 189
    statementWithoutTrailingSubStatement shift and go to state 344
    integerLiteral                 shift and go to state 183
    blockStatements                shift and go to state 345
    assignment                     shift and go to state 346
    ifThenStatement                shift and go to state 347
    annotation                     shift and go to state 35
    statementExpression            shift and go to state 350
    explicitConstructorInvocation  shift and go to state 351
    enhancedForStatement           shift and go to state 352
    interfaceHead                  shift and go to state 47

state 121

    (159) classBodyDeclaration -> block .

    SEMI            reduce using rule 159 (classBodyDeclaration -> block .)
    STATIC          reduce using rule 159 (classBodyDeclaration -> block .)
    BLPAREN         reduce using rule 159 (classBodyDeclaration -> block .)
    AT              reduce using rule 159 (classBodyDeclaration -> block .)
    PUBLIC          reduce using rule 159 (classBodyDeclaration -> block .)
    PROTECTED       reduce using rule 159 (classBodyDeclaration -> block .)
    PRIVATE         reduce using rule 159 (classBodyDeclaration -> block .)
    ABSTRACT        reduce using rule 159 (classBodyDeclaration -> block .)
    FINAL           reduce using rule 159 (classBodyDeclaration -> block .)
    NATIVE          reduce using rule 159 (classBodyDeclaration -> block .)
    SYNCHRONIZED    reduce using rule 159 (classBodyDeclaration -> block .)
    TRANSIENT       reduce using rule 159 (classBodyDeclaration -> block .)
    VOLATILE        reduce using rule 159 (classBodyDeclaration -> block .)
    STRICTFP        reduce using rule 159 (classBodyDeclaration -> block .)
    Identifier      reduce using rule 159 (classBodyDeclaration -> block .)
    INTERFACE       reduce using rule 159 (classBodyDeclaration -> block .)
    ENUM            reduce using rule 159 (classBodyDeclaration -> block .)
    CLASS           reduce using rule 159 (classBodyDeclaration -> block .)
    LESS            reduce using rule 159 (classBodyDeclaration -> block .)
    BOOLEAN         reduce using rule 159 (classBodyDeclaration -> block .)
    VOID            reduce using rule 159 (classBodyDeclaration -> block .)
    BYTE            reduce using rule 159 (classBodyDeclaration -> block .)
    SHORT           reduce using rule 159 (classBodyDeclaration -> block .)
    INT             reduce using rule 159 (classBodyDeclaration -> block .)
    LONG            reduce using rule 159 (classBodyDeclaration -> block .)
    CHAR            reduce using rule 159 (classBodyDeclaration -> block .)
    FLOAT           reduce using rule 159 (classBodyDeclaration -> block .)
    DOUBLE          reduce using rule 159 (classBodyDeclaration -> block .)
    BRPAREN         reduce using rule 159 (classBodyDeclaration -> block .)


state 122

    (46) classOrInterfaceType -> classOrInterface .
    (50) genericType -> classOrInterface . typeArguments
    (51) genericType -> classOrInterface . LESS MORE
    (82) typeArguments -> . LESS typeArgumentList1

    COMMA           reduce using rule 46 (classOrInterfaceType -> classOrInterface .)
    BLPAREN         reduce using rule 46 (classOrInterfaceType -> classOrInterface .)
    Identifier      reduce using rule 46 (classOrInterfaceType -> classOrInterface .)
    VERTICAL        reduce using rule 46 (classOrInterfaceType -> classOrInterface .)
    LPAREN          reduce using rule 46 (classOrInterfaceType -> classOrInterface .)
    FLPAREN         reduce using rule 46 (classOrInterfaceType -> classOrInterface .)
    RPAREN          reduce using rule 46 (classOrInterfaceType -> classOrInterface .)
    INSTANCEOF      reduce using rule 46 (classOrInterfaceType -> classOrInterface .)
    OP_EQ           reduce using rule 46 (classOrInterfaceType -> classOrInterface .)
    OP_NE           reduce using rule 46 (classOrInterfaceType -> classOrInterface .)
    AND             reduce using rule 46 (classOrInterfaceType -> classOrInterface .)
    CARET           reduce using rule 46 (classOrInterfaceType -> classOrInterface .)
    OP_LAND         reduce using rule 46 (classOrInterfaceType -> classOrInterface .)
    QUES            reduce using rule 46 (classOrInterfaceType -> classOrInterface .)
    OP_LOR          reduce using rule 46 (classOrInterfaceType -> classOrInterface .)
    BRPAREN         reduce using rule 46 (classOrInterfaceType -> classOrInterface .)
    SEMI            reduce using rule 46 (classOrInterfaceType -> classOrInterface .)
    IMPLEMENTS      reduce using rule 46 (classOrInterfaceType -> classOrInterface .)
    OP_ARRAY        reduce using rule 46 (classOrInterfaceType -> classOrInterface .)
    COLON           reduce using rule 46 (classOrInterfaceType -> classOrInterface .)
    FRPAREN         reduce using rule 46 (classOrInterfaceType -> classOrInterface .)
    LESS            shift and go to state 356

    typeArguments                  shift and go to state 355

state 123

    (48) classOrInterface -> name .
    (32) qualifiedName -> name . DOT simpleName

    LESS            reduce using rule 48 (classOrInterface -> name .)
    COMMA           reduce using rule 48 (classOrInterface -> name .)
    BLPAREN         reduce using rule 48 (classOrInterface -> name .)
    SEMI            reduce using rule 48 (classOrInterface -> name .)
    LPAREN          reduce using rule 48 (classOrInterface -> name .)
    FLPAREN         reduce using rule 48 (classOrInterface -> name .)
    RPAREN          reduce using rule 48 (classOrInterface -> name .)
    IMPLEMENTS      reduce using rule 48 (classOrInterface -> name .)
    DOT             shift and go to state 145


state 124

    (53) interfaceType -> classOrInterfaceType .

    COMMA           reduce using rule 53 (interfaceType -> classOrInterfaceType .)
    BLPAREN         reduce using rule 53 (interfaceType -> classOrInterfaceType .)


state 125

    (146) classImpls -> IMPLEMENTS interfaceTypeList .
    (148) interfaceTypeList -> interfaceTypeList . COMMA interfaceType

    BLPAREN         reduce using rule 146 (classImpls -> IMPLEMENTS interfaceTypeList .)
    COMMA           shift and go to state 357


state 126

    (147) interfaceTypeList -> interfaceType .

    COMMA           reduce using rule 147 (interfaceTypeList -> interfaceType .)
    BLPAREN         reduce using rule 147 (interfaceTypeList -> interfaceType .)


state 127

    (47) classOrInterfaceType -> genericType .
    (49) classOrInterface -> genericType . DOT name

    COMMA           reduce using rule 47 (classOrInterfaceType -> genericType .)
    BLPAREN         reduce using rule 47 (classOrInterfaceType -> genericType .)
    LPAREN          reduce using rule 47 (classOrInterfaceType -> genericType .)
    FLPAREN         reduce using rule 47 (classOrInterfaceType -> genericType .)
    RPAREN          reduce using rule 47 (classOrInterfaceType -> genericType .)
    SEMI            reduce using rule 47 (classOrInterfaceType -> genericType .)
    IMPLEMENTS      reduce using rule 47 (classOrInterfaceType -> genericType .)
    DOT             shift and go to state 358


state 128

    (145) classExtends -> EXTENDS classType .

    IMPLEMENTS      reduce using rule 145 (classExtends -> EXTENDS classType .)
    BLPAREN         reduce using rule 145 (classExtends -> EXTENDS classType .)


state 129

    (52) classType -> classOrInterfaceType .

    LPAREN          reduce using rule 52 (classType -> classOrInterfaceType .)
    IMPLEMENTS      reduce using rule 52 (classType -> classOrInterfaceType .)
    BLPAREN         reduce using rule 52 (classType -> classOrInterfaceType .)
    COMMA           reduce using rule 52 (classType -> classOrInterfaceType .)
    SEMI            reduce using rule 52 (classType -> classOrInterfaceType .)


state 130

    (137) classHead -> className classExtends_opt classImpls_opt .

    BLPAREN         reduce using rule 137 (classHead -> className classExtends_opt classImpls_opt .)


state 131

    (245) annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt . BRPAREN

    BRPAREN         shift and go to state 359


state 132

    (257) annotationMethodHeadName -> modifiers_opt . typeParameters type Identifier LPAREN
    (258) annotationMethodHeadName -> modifiers_opt . type Identifier LPAREN
    (181) fieldDeclaration -> modifiers_opt . type variableDeclarators SEMI
    (163) constructorName -> modifiers_opt . typeParameters Identifier LPAREN
    (164) constructorName -> modifiers_opt . Identifier LPAREN
    (197) interfaceHeadName -> modifiers_opt . INTERFACE Identifier typeParameters
    (198) interfaceHeadName -> modifiers_opt . INTERFACE Identifier
    (217) enumHeadName -> modifiers_opt . ENUM Identifier
    (218) enumHeadName -> modifiers_opt . ENUM Identifier typeParameters
    (140) classHeadName1 -> modifiers_opt . CLASS Identifier
    (65) typeParameters -> . LESS typeParameterList1
    (33) type -> . primitiveType
    (34) type -> . referenceType
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (44) referenceType -> . classOrInterfaceType
    (45) referenceType -> . arrayType
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (54) arrayType -> . genericType arrays
    (55) arrayType -> . genericType DOT name arrays
    (56) arrayType -> . primitiveType arrays
    (57) arrayType -> . name arrays
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    Identifier      shift and go to state 275
    INTERFACE       shift and go to state 50
    ENUM            shift and go to state 49
    CLASS           shift and go to state 51
    LESS            shift and go to state 83
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182

    qualifiedName                  shift and go to state 64
    type                           shift and go to state 361
    classOrInterfaceType           shift and go to state 272
    primitiveType                  shift and go to state 277
    classOrInterface               shift and go to state 122
    simpleName                     shift and go to state 66
    arrayType                      shift and go to state 269
    typeParameters                 shift and go to state 360
    referenceType                  shift and go to state 273
    genericType                    shift and go to state 271
    name                           shift and go to state 276

state 133

    (246) annotationTypeMemberDeclarations_opt -> annotationTypeMemberDeclarations .
    (249) annotationTypeMemberDeclarations -> annotationTypeMemberDeclarations . annotationTypeMemberDeclaration
    (250) annotationTypeMemberDeclaration -> . annotationMethodHead SEMI
    (251) annotationTypeMemberDeclaration -> . constantDeclaration
    (252) annotationTypeMemberDeclaration -> . constructorDeclaration
    (253) annotationTypeMemberDeclaration -> . typeDeclaration
    (254) annotationMethodHead -> . annotationMethodHeadName formalParameterList_opt RPAREN methodHeadExtendedDims annotationMethodHeadDefaultValue_opt
    (214) constantDeclaration -> . fieldDeclaration
    (161) constructorDeclaration -> . constructorHead methodBody
    (24) typeDeclaration -> . classDeclaration
    (25) typeDeclaration -> . interfaceDeclaration
    (26) typeDeclaration -> . annotationTypeDeclaration
    (27) typeDeclaration -> . enumDeclaration
    (28) typeDeclaration -> . SEMI
    (257) annotationMethodHeadName -> . modifiers_opt typeParameters type Identifier LPAREN
    (258) annotationMethodHeadName -> . modifiers_opt type Identifier LPAREN
    (181) fieldDeclaration -> . modifiers_opt type variableDeclarators SEMI
    (162) constructorHead -> . constructorName formalParameterList_opt RPAREN methodHeadThrowList_opt
    (136) classDeclaration -> . classHead classBody
    (195) interfaceDeclaration -> . interfaceHead InterfaceBody
    (239) annotationTypeDeclaration -> . annotationTypeDeclarationHead annotationTypeBody
    (215) enumDeclaration -> . enumHead enumBody
    (120) modifiers_opt -> . modifiers
    (121) modifiers_opt -> . empty
    (163) constructorName -> . modifiers_opt typeParameters Identifier LPAREN
    (164) constructorName -> . modifiers_opt Identifier LPAREN
    (137) classHead -> . className classExtends_opt classImpls_opt
    (196) interfaceHead -> . interfaceHeadName interfaceHeadExtends_opt
    (240) annotationTypeDeclarationHead -> . annotationTypeDeclarationHeadName classExtends_opt classImpls_opt
    (216) enumHead -> . enumHeadName classImpls_opt
    (122) modifiers -> . modifier
    (123) modifiers -> . modifiers modifier
    (631) empty -> .
    (138) className -> . classHeadName1 typeParameters
    (139) className -> . classHeadName1
    (197) interfaceHeadName -> . modifiers_opt INTERFACE Identifier typeParameters
    (198) interfaceHeadName -> . modifiers_opt INTERFACE Identifier
    (241) annotationTypeDeclarationHeadName -> . modifiers AT INTERFACE Identifier
    (242) annotationTypeDeclarationHeadName -> . modifiers AT INTERFACE Identifier typeParameters
    (243) annotationTypeDeclarationHeadName -> . AT INTERFACE Identifier typeParameters
    (244) annotationTypeDeclarationHeadName -> . AT INTERFACE Identifier
    (217) enumHeadName -> . modifiers_opt ENUM Identifier
    (218) enumHeadName -> . modifiers_opt ENUM Identifier typeParameters
    (124) modifier -> . PUBLIC
    (125) modifier -> . PROTECTED
    (126) modifier -> . PRIVATE
    (127) modifier -> . STATIC
    (128) modifier -> . ABSTRACT
    (129) modifier -> . FINAL
    (130) modifier -> . NATIVE
    (131) modifier -> . SYNCHRONIZED
    (132) modifier -> . TRANSIENT
    (133) modifier -> . VOLATILE
    (134) modifier -> . STRICTFP
    (135) modifier -> . annotation
    (140) classHeadName1 -> . modifiers_opt CLASS Identifier
    (270) annotation -> . normalAnnotation
    (271) annotation -> . markerAnnotation
    (272) annotation -> . singleMemberAnnotation
    (273) normalAnnotation -> . annotationName LPAREN memberValuePairs_opt RPAREN
    (280) markerAnnotation -> . annotationName
    (281) singleMemberAnnotation -> . annotationName LPAREN singleMemberAnnotationMemberValue RPAREN
    (274) annotationName -> . AT name

    BRPAREN         reduce using rule 246 (annotationTypeMemberDeclarations_opt -> annotationTypeMemberDeclarations .)
    SEMI            shift and go to state 16
    Identifier      reduce using rule 631 (empty -> .)
    INTERFACE       reduce using rule 631 (empty -> .)
    ENUM            reduce using rule 631 (empty -> .)
    CLASS           reduce using rule 631 (empty -> .)
    LESS            reduce using rule 631 (empty -> .)
    BOOLEAN         reduce using rule 631 (empty -> .)
    VOID            reduce using rule 631 (empty -> .)
    BYTE            reduce using rule 631 (empty -> .)
    SHORT           reduce using rule 631 (empty -> .)
    INT             reduce using rule 631 (empty -> .)
    LONG            reduce using rule 631 (empty -> .)
    CHAR            reduce using rule 631 (empty -> .)
    FLOAT           reduce using rule 631 (empty -> .)
    DOUBLE          reduce using rule 631 (empty -> .)
    AT              shift and go to state 48
    PUBLIC          shift and go to state 46
    PROTECTED       shift and go to state 6
    PRIVATE         shift and go to state 14
    STATIC          shift and go to state 7
    ABSTRACT        shift and go to state 5
    FINAL           shift and go to state 11
    NATIVE          shift and go to state 12
    SYNCHRONIZED    shift and go to state 2
    TRANSIENT       shift and go to state 19
    VOLATILE        shift and go to state 43
    STRICTFP        shift and go to state 18

    modifiers_opt                  shift and go to state 132
    classHead                      shift and go to state 3
    className                      shift and go to state 13
    singleMemberAnnotation         shift and go to state 8
    interfaceHeadName              shift and go to state 27
    markerAnnotation               shift and go to state 9
    enumHeadName                   shift and go to state 10
    constructorHead                shift and go to state 102
    annotationTypeDeclarationHead  shift and go to state 15
    constructorName                shift and go to state 104
    annotationTypeMemberDeclaration shift and go to state 362
    empty                          shift and go to state 74
    constantDeclaration            shift and go to state 136
    normalAnnotation               shift and go to state 24
    enumDeclaration                shift and go to state 25
    annotationMethodHeadName       shift and go to state 137
    classHeadName1                 shift and go to state 33
    enumHead                       shift and go to state 30
    classDeclaration               shift and go to state 32
    fieldDeclaration               shift and go to state 138
    annotationTypeDeclarationHeadName shift and go to state 34
    annotation                     shift and go to state 35
    modifiers                      shift and go to state 112
    typeDeclaration                shift and go to state 139
    annotationName                 shift and go to state 40
    annotationTypeDeclaration      shift and go to state 41
    annotationMethodHead           shift and go to state 140
    interfaceDeclaration           shift and go to state 42
    constructorDeclaration         shift and go to state 141
    modifier                       shift and go to state 45
    interfaceHead                  shift and go to state 47

state 134

    (248) annotationTypeMemberDeclarations -> annotationTypeMemberDeclaration .

    SEMI            reduce using rule 248 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclaration .)
    AT              reduce using rule 248 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclaration .)
    PUBLIC          reduce using rule 248 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclaration .)
    PROTECTED       reduce using rule 248 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclaration .)
    PRIVATE         reduce using rule 248 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclaration .)
    STATIC          reduce using rule 248 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclaration .)
    ABSTRACT        reduce using rule 248 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclaration .)
    FINAL           reduce using rule 248 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclaration .)
    NATIVE          reduce using rule 248 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclaration .)
    SYNCHRONIZED    reduce using rule 248 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclaration .)
    TRANSIENT       reduce using rule 248 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclaration .)
    VOLATILE        reduce using rule 248 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclaration .)
    STRICTFP        reduce using rule 248 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclaration .)
    Identifier      reduce using rule 248 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclaration .)
    INTERFACE       reduce using rule 248 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclaration .)
    ENUM            reduce using rule 248 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclaration .)
    CLASS           reduce using rule 248 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclaration .)
    LESS            reduce using rule 248 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclaration .)
    BOOLEAN         reduce using rule 248 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclaration .)
    VOID            reduce using rule 248 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclaration .)
    BYTE            reduce using rule 248 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclaration .)
    SHORT           reduce using rule 248 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclaration .)
    INT             reduce using rule 248 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclaration .)
    LONG            reduce using rule 248 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclaration .)
    CHAR            reduce using rule 248 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclaration .)
    FLOAT           reduce using rule 248 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclaration .)
    DOUBLE          reduce using rule 248 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclaration .)
    BRPAREN         reduce using rule 248 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclaration .)


state 135

    (247) annotationTypeMemberDeclarations_opt -> empty .
    (121) modifiers_opt -> empty .

    BRPAREN         reduce using rule 247 (annotationTypeMemberDeclarations_opt -> empty .)
    Identifier      reduce using rule 121 (modifiers_opt -> empty .)
    INTERFACE       reduce using rule 121 (modifiers_opt -> empty .)
    ENUM            reduce using rule 121 (modifiers_opt -> empty .)
    CLASS           reduce using rule 121 (modifiers_opt -> empty .)
    LESS            reduce using rule 121 (modifiers_opt -> empty .)
    BOOLEAN         reduce using rule 121 (modifiers_opt -> empty .)
    VOID            reduce using rule 121 (modifiers_opt -> empty .)
    BYTE            reduce using rule 121 (modifiers_opt -> empty .)
    SHORT           reduce using rule 121 (modifiers_opt -> empty .)
    INT             reduce using rule 121 (modifiers_opt -> empty .)
    LONG            reduce using rule 121 (modifiers_opt -> empty .)
    CHAR            reduce using rule 121 (modifiers_opt -> empty .)
    FLOAT           reduce using rule 121 (modifiers_opt -> empty .)
    DOUBLE          reduce using rule 121 (modifiers_opt -> empty .)


state 136

    (251) annotationTypeMemberDeclaration -> constantDeclaration .

    SEMI            reduce using rule 251 (annotationTypeMemberDeclaration -> constantDeclaration .)
    AT              reduce using rule 251 (annotationTypeMemberDeclaration -> constantDeclaration .)
    PUBLIC          reduce using rule 251 (annotationTypeMemberDeclaration -> constantDeclaration .)
    PROTECTED       reduce using rule 251 (annotationTypeMemberDeclaration -> constantDeclaration .)
    PRIVATE         reduce using rule 251 (annotationTypeMemberDeclaration -> constantDeclaration .)
    STATIC          reduce using rule 251 (annotationTypeMemberDeclaration -> constantDeclaration .)
    ABSTRACT        reduce using rule 251 (annotationTypeMemberDeclaration -> constantDeclaration .)
    FINAL           reduce using rule 251 (annotationTypeMemberDeclaration -> constantDeclaration .)
    NATIVE          reduce using rule 251 (annotationTypeMemberDeclaration -> constantDeclaration .)
    SYNCHRONIZED    reduce using rule 251 (annotationTypeMemberDeclaration -> constantDeclaration .)
    TRANSIENT       reduce using rule 251 (annotationTypeMemberDeclaration -> constantDeclaration .)
    VOLATILE        reduce using rule 251 (annotationTypeMemberDeclaration -> constantDeclaration .)
    STRICTFP        reduce using rule 251 (annotationTypeMemberDeclaration -> constantDeclaration .)
    Identifier      reduce using rule 251 (annotationTypeMemberDeclaration -> constantDeclaration .)
    INTERFACE       reduce using rule 251 (annotationTypeMemberDeclaration -> constantDeclaration .)
    ENUM            reduce using rule 251 (annotationTypeMemberDeclaration -> constantDeclaration .)
    CLASS           reduce using rule 251 (annotationTypeMemberDeclaration -> constantDeclaration .)
    LESS            reduce using rule 251 (annotationTypeMemberDeclaration -> constantDeclaration .)
    BOOLEAN         reduce using rule 251 (annotationTypeMemberDeclaration -> constantDeclaration .)
    VOID            reduce using rule 251 (annotationTypeMemberDeclaration -> constantDeclaration .)
    BYTE            reduce using rule 251 (annotationTypeMemberDeclaration -> constantDeclaration .)
    SHORT           reduce using rule 251 (annotationTypeMemberDeclaration -> constantDeclaration .)
    INT             reduce using rule 251 (annotationTypeMemberDeclaration -> constantDeclaration .)
    LONG            reduce using rule 251 (annotationTypeMemberDeclaration -> constantDeclaration .)
    CHAR            reduce using rule 251 (annotationTypeMemberDeclaration -> constantDeclaration .)
    FLOAT           reduce using rule 251 (annotationTypeMemberDeclaration -> constantDeclaration .)
    DOUBLE          reduce using rule 251 (annotationTypeMemberDeclaration -> constantDeclaration .)
    BRPAREN         reduce using rule 251 (annotationTypeMemberDeclaration -> constantDeclaration .)


state 137

    (254) annotationMethodHead -> annotationMethodHeadName . formalParameterList_opt RPAREN methodHeadExtendedDims annotationMethodHeadDefaultValue_opt
    (165) formalParameterList_opt -> . formalParameterList
    (166) formalParameterList_opt -> . empty
    (167) formalParameterList -> . formalParameter
    (168) formalParameterList -> . formalParameterList COMMA formalParameter
    (631) empty -> .
    (169) formalParameter -> . modifiers_opt type variableDeclaratorId
    (170) formalParameter -> . modifiers_opt type OP_ARRAY variableDeclaratorId
    (120) modifiers_opt -> . modifiers
    (121) modifiers_opt -> . empty
    (122) modifiers -> . modifier
    (123) modifiers -> . modifiers modifier
    (124) modifier -> . PUBLIC
    (125) modifier -> . PROTECTED
    (126) modifier -> . PRIVATE
    (127) modifier -> . STATIC
    (128) modifier -> . ABSTRACT
    (129) modifier -> . FINAL
    (130) modifier -> . NATIVE
    (131) modifier -> . SYNCHRONIZED
    (132) modifier -> . TRANSIENT
    (133) modifier -> . VOLATILE
    (134) modifier -> . STRICTFP
    (135) modifier -> . annotation
    (270) annotation -> . normalAnnotation
    (271) annotation -> . markerAnnotation
    (272) annotation -> . singleMemberAnnotation
    (273) normalAnnotation -> . annotationName LPAREN memberValuePairs_opt RPAREN
    (280) markerAnnotation -> . annotationName
    (281) singleMemberAnnotation -> . annotationName LPAREN singleMemberAnnotationMemberValue RPAREN
    (274) annotationName -> . AT name

    RPAREN          reduce using rule 631 (empty -> .)
    BOOLEAN         reduce using rule 631 (empty -> .)
    VOID            reduce using rule 631 (empty -> .)
    BYTE            reduce using rule 631 (empty -> .)
    SHORT           reduce using rule 631 (empty -> .)
    INT             reduce using rule 631 (empty -> .)
    LONG            reduce using rule 631 (empty -> .)
    CHAR            reduce using rule 631 (empty -> .)
    FLOAT           reduce using rule 631 (empty -> .)
    DOUBLE          reduce using rule 631 (empty -> .)
    Identifier      reduce using rule 631 (empty -> .)
    PUBLIC          shift and go to state 46
    PROTECTED       shift and go to state 6
    PRIVATE         shift and go to state 14
    STATIC          shift and go to state 7
    ABSTRACT        shift and go to state 5
    FINAL           shift and go to state 11
    NATIVE          shift and go to state 12
    SYNCHRONIZED    shift and go to state 2
    TRANSIENT       shift and go to state 19
    VOLATILE        shift and go to state 43
    STRICTFP        shift and go to state 18
    AT              shift and go to state 155

    markerAnnotation               shift and go to state 9
    modifiers                      shift and go to state 156
    modifiers_opt                  shift and go to state 264
    formalParameter                shift and go to state 267
    annotationName                 shift and go to state 40
    annotation                     shift and go to state 35
    singleMemberAnnotation         shift and go to state 8
    normalAnnotation               shift and go to state 24
    formalParameterList            shift and go to state 268
    modifier                       shift and go to state 45
    empty                          shift and go to state 266
    formalParameterList_opt        shift and go to state 363

state 138

    (214) constantDeclaration -> fieldDeclaration .

    SEMI            reduce using rule 214 (constantDeclaration -> fieldDeclaration .)
    AT              reduce using rule 214 (constantDeclaration -> fieldDeclaration .)
    PUBLIC          reduce using rule 214 (constantDeclaration -> fieldDeclaration .)
    PROTECTED       reduce using rule 214 (constantDeclaration -> fieldDeclaration .)
    PRIVATE         reduce using rule 214 (constantDeclaration -> fieldDeclaration .)
    STATIC          reduce using rule 214 (constantDeclaration -> fieldDeclaration .)
    ABSTRACT        reduce using rule 214 (constantDeclaration -> fieldDeclaration .)
    FINAL           reduce using rule 214 (constantDeclaration -> fieldDeclaration .)
    NATIVE          reduce using rule 214 (constantDeclaration -> fieldDeclaration .)
    SYNCHRONIZED    reduce using rule 214 (constantDeclaration -> fieldDeclaration .)
    TRANSIENT       reduce using rule 214 (constantDeclaration -> fieldDeclaration .)
    VOLATILE        reduce using rule 214 (constantDeclaration -> fieldDeclaration .)
    STRICTFP        reduce using rule 214 (constantDeclaration -> fieldDeclaration .)
    INTERFACE       reduce using rule 214 (constantDeclaration -> fieldDeclaration .)
    ENUM            reduce using rule 214 (constantDeclaration -> fieldDeclaration .)
    CLASS           reduce using rule 214 (constantDeclaration -> fieldDeclaration .)
    LESS            reduce using rule 214 (constantDeclaration -> fieldDeclaration .)
    BOOLEAN         reduce using rule 214 (constantDeclaration -> fieldDeclaration .)
    VOID            reduce using rule 214 (constantDeclaration -> fieldDeclaration .)
    BYTE            reduce using rule 214 (constantDeclaration -> fieldDeclaration .)
    SHORT           reduce using rule 214 (constantDeclaration -> fieldDeclaration .)
    INT             reduce using rule 214 (constantDeclaration -> fieldDeclaration .)
    LONG            reduce using rule 214 (constantDeclaration -> fieldDeclaration .)
    CHAR            reduce using rule 214 (constantDeclaration -> fieldDeclaration .)
    FLOAT           reduce using rule 214 (constantDeclaration -> fieldDeclaration .)
    DOUBLE          reduce using rule 214 (constantDeclaration -> fieldDeclaration .)
    Identifier      reduce using rule 214 (constantDeclaration -> fieldDeclaration .)
    BRPAREN         reduce using rule 214 (constantDeclaration -> fieldDeclaration .)


state 139

    (253) annotationTypeMemberDeclaration -> typeDeclaration .

    SEMI            reduce using rule 253 (annotationTypeMemberDeclaration -> typeDeclaration .)
    AT              reduce using rule 253 (annotationTypeMemberDeclaration -> typeDeclaration .)
    PUBLIC          reduce using rule 253 (annotationTypeMemberDeclaration -> typeDeclaration .)
    PROTECTED       reduce using rule 253 (annotationTypeMemberDeclaration -> typeDeclaration .)
    PRIVATE         reduce using rule 253 (annotationTypeMemberDeclaration -> typeDeclaration .)
    STATIC          reduce using rule 253 (annotationTypeMemberDeclaration -> typeDeclaration .)
    ABSTRACT        reduce using rule 253 (annotationTypeMemberDeclaration -> typeDeclaration .)
    FINAL           reduce using rule 253 (annotationTypeMemberDeclaration -> typeDeclaration .)
    NATIVE          reduce using rule 253 (annotationTypeMemberDeclaration -> typeDeclaration .)
    SYNCHRONIZED    reduce using rule 253 (annotationTypeMemberDeclaration -> typeDeclaration .)
    TRANSIENT       reduce using rule 253 (annotationTypeMemberDeclaration -> typeDeclaration .)
    VOLATILE        reduce using rule 253 (annotationTypeMemberDeclaration -> typeDeclaration .)
    STRICTFP        reduce using rule 253 (annotationTypeMemberDeclaration -> typeDeclaration .)
    Identifier      reduce using rule 253 (annotationTypeMemberDeclaration -> typeDeclaration .)
    INTERFACE       reduce using rule 253 (annotationTypeMemberDeclaration -> typeDeclaration .)
    ENUM            reduce using rule 253 (annotationTypeMemberDeclaration -> typeDeclaration .)
    CLASS           reduce using rule 253 (annotationTypeMemberDeclaration -> typeDeclaration .)
    LESS            reduce using rule 253 (annotationTypeMemberDeclaration -> typeDeclaration .)
    BOOLEAN         reduce using rule 253 (annotationTypeMemberDeclaration -> typeDeclaration .)
    VOID            reduce using rule 253 (annotationTypeMemberDeclaration -> typeDeclaration .)
    BYTE            reduce using rule 253 (annotationTypeMemberDeclaration -> typeDeclaration .)
    SHORT           reduce using rule 253 (annotationTypeMemberDeclaration -> typeDeclaration .)
    INT             reduce using rule 253 (annotationTypeMemberDeclaration -> typeDeclaration .)
    LONG            reduce using rule 253 (annotationTypeMemberDeclaration -> typeDeclaration .)
    CHAR            reduce using rule 253 (annotationTypeMemberDeclaration -> typeDeclaration .)
    FLOAT           reduce using rule 253 (annotationTypeMemberDeclaration -> typeDeclaration .)
    DOUBLE          reduce using rule 253 (annotationTypeMemberDeclaration -> typeDeclaration .)
    BRPAREN         reduce using rule 253 (annotationTypeMemberDeclaration -> typeDeclaration .)


state 140

    (250) annotationTypeMemberDeclaration -> annotationMethodHead . SEMI

    SEMI            shift and go to state 364


state 141

    (252) annotationTypeMemberDeclaration -> constructorDeclaration .

    SEMI            reduce using rule 252 (annotationTypeMemberDeclaration -> constructorDeclaration .)
    AT              reduce using rule 252 (annotationTypeMemberDeclaration -> constructorDeclaration .)
    PUBLIC          reduce using rule 252 (annotationTypeMemberDeclaration -> constructorDeclaration .)
    PROTECTED       reduce using rule 252 (annotationTypeMemberDeclaration -> constructorDeclaration .)
    PRIVATE         reduce using rule 252 (annotationTypeMemberDeclaration -> constructorDeclaration .)
    STATIC          reduce using rule 252 (annotationTypeMemberDeclaration -> constructorDeclaration .)
    ABSTRACT        reduce using rule 252 (annotationTypeMemberDeclaration -> constructorDeclaration .)
    FINAL           reduce using rule 252 (annotationTypeMemberDeclaration -> constructorDeclaration .)
    NATIVE          reduce using rule 252 (annotationTypeMemberDeclaration -> constructorDeclaration .)
    SYNCHRONIZED    reduce using rule 252 (annotationTypeMemberDeclaration -> constructorDeclaration .)
    TRANSIENT       reduce using rule 252 (annotationTypeMemberDeclaration -> constructorDeclaration .)
    VOLATILE        reduce using rule 252 (annotationTypeMemberDeclaration -> constructorDeclaration .)
    STRICTFP        reduce using rule 252 (annotationTypeMemberDeclaration -> constructorDeclaration .)
    Identifier      reduce using rule 252 (annotationTypeMemberDeclaration -> constructorDeclaration .)
    INTERFACE       reduce using rule 252 (annotationTypeMemberDeclaration -> constructorDeclaration .)
    ENUM            reduce using rule 252 (annotationTypeMemberDeclaration -> constructorDeclaration .)
    CLASS           reduce using rule 252 (annotationTypeMemberDeclaration -> constructorDeclaration .)
    LESS            reduce using rule 252 (annotationTypeMemberDeclaration -> constructorDeclaration .)
    BOOLEAN         reduce using rule 252 (annotationTypeMemberDeclaration -> constructorDeclaration .)
    VOID            reduce using rule 252 (annotationTypeMemberDeclaration -> constructorDeclaration .)
    BYTE            reduce using rule 252 (annotationTypeMemberDeclaration -> constructorDeclaration .)
    SHORT           reduce using rule 252 (annotationTypeMemberDeclaration -> constructorDeclaration .)
    INT             reduce using rule 252 (annotationTypeMemberDeclaration -> constructorDeclaration .)
    LONG            reduce using rule 252 (annotationTypeMemberDeclaration -> constructorDeclaration .)
    CHAR            reduce using rule 252 (annotationTypeMemberDeclaration -> constructorDeclaration .)
    FLOAT           reduce using rule 252 (annotationTypeMemberDeclaration -> constructorDeclaration .)
    DOUBLE          reduce using rule 252 (annotationTypeMemberDeclaration -> constructorDeclaration .)
    BRPAREN         reduce using rule 252 (annotationTypeMemberDeclaration -> constructorDeclaration .)


state 142

    (20) singleTypeImportDeclaration -> IMPORT name SEMI .

    SEMI            reduce using rule 20 (singleTypeImportDeclaration -> IMPORT name SEMI .)
    IMPORT          reduce using rule 20 (singleTypeImportDeclaration -> IMPORT name SEMI .)
    AT              reduce using rule 20 (singleTypeImportDeclaration -> IMPORT name SEMI .)
    PUBLIC          reduce using rule 20 (singleTypeImportDeclaration -> IMPORT name SEMI .)
    PROTECTED       reduce using rule 20 (singleTypeImportDeclaration -> IMPORT name SEMI .)
    PRIVATE         reduce using rule 20 (singleTypeImportDeclaration -> IMPORT name SEMI .)
    STATIC          reduce using rule 20 (singleTypeImportDeclaration -> IMPORT name SEMI .)
    ABSTRACT        reduce using rule 20 (singleTypeImportDeclaration -> IMPORT name SEMI .)
    FINAL           reduce using rule 20 (singleTypeImportDeclaration -> IMPORT name SEMI .)
    NATIVE          reduce using rule 20 (singleTypeImportDeclaration -> IMPORT name SEMI .)
    SYNCHRONIZED    reduce using rule 20 (singleTypeImportDeclaration -> IMPORT name SEMI .)
    TRANSIENT       reduce using rule 20 (singleTypeImportDeclaration -> IMPORT name SEMI .)
    VOLATILE        reduce using rule 20 (singleTypeImportDeclaration -> IMPORT name SEMI .)
    STRICTFP        reduce using rule 20 (singleTypeImportDeclaration -> IMPORT name SEMI .)
    INTERFACE       reduce using rule 20 (singleTypeImportDeclaration -> IMPORT name SEMI .)
    ENUM            reduce using rule 20 (singleTypeImportDeclaration -> IMPORT name SEMI .)
    CLASS           reduce using rule 20 (singleTypeImportDeclaration -> IMPORT name SEMI .)
    $end            reduce using rule 20 (singleTypeImportDeclaration -> IMPORT name SEMI .)


state 143

    (21) typeImportOnDemandDeclaration -> IMPORT name DOT . MULT SEMI
    (32) qualifiedName -> name DOT . simpleName
    (31) simpleName -> . Identifier

    MULT            shift and go to state 366
    Identifier      shift and go to state 68

    simpleName                     shift and go to state 365

state 144

    (22) singleStaticImportDeclaration -> IMPORT STATIC name . SEMI
    (23) staticImportOnDemandDeclaration -> IMPORT STATIC name . DOT MULT SEMI
    (32) qualifiedName -> name . DOT simpleName

    SEMI            shift and go to state 367
    DOT             shift and go to state 368


state 145

    (32) qualifiedName -> name DOT . simpleName
    (31) simpleName -> . Identifier

    Identifier      shift and go to state 68

    simpleName                     shift and go to state 365

state 146

    (201) interfaceHeadExtends -> EXTENDS interfaceTypeList .
    (148) interfaceTypeList -> interfaceTypeList . COMMA interfaceType

    BLPAREN         reduce using rule 201 (interfaceHeadExtends -> EXTENDS interfaceTypeList .)
    COMMA           shift and go to state 357


state 147

    (1) compilationUnit -> packageDeclaration importDeclarations typeDeclarations .
    (12) typeDeclarations -> typeDeclarations . typeDeclaration
    (24) typeDeclaration -> . classDeclaration
    (25) typeDeclaration -> . interfaceDeclaration
    (26) typeDeclaration -> . annotationTypeDeclaration
    (27) typeDeclaration -> . enumDeclaration
    (28) typeDeclaration -> . SEMI
    (136) classDeclaration -> . classHead classBody
    (195) interfaceDeclaration -> . interfaceHead InterfaceBody
    (239) annotationTypeDeclaration -> . annotationTypeDeclarationHead annotationTypeBody
    (215) enumDeclaration -> . enumHead enumBody
    (137) classHead -> . className classExtends_opt classImpls_opt
    (196) interfaceHead -> . interfaceHeadName interfaceHeadExtends_opt
    (240) annotationTypeDeclarationHead -> . annotationTypeDeclarationHeadName classExtends_opt classImpls_opt
    (216) enumHead -> . enumHeadName classImpls_opt
    (138) className -> . classHeadName1 typeParameters
    (139) className -> . classHeadName1
    (197) interfaceHeadName -> . modifiers_opt INTERFACE Identifier typeParameters
    (198) interfaceHeadName -> . modifiers_opt INTERFACE Identifier
    (241) annotationTypeDeclarationHeadName -> . modifiers AT INTERFACE Identifier
    (242) annotationTypeDeclarationHeadName -> . modifiers AT INTERFACE Identifier typeParameters
    (243) annotationTypeDeclarationHeadName -> . AT INTERFACE Identifier typeParameters
    (244) annotationTypeDeclarationHeadName -> . AT INTERFACE Identifier
    (217) enumHeadName -> . modifiers_opt ENUM Identifier
    (218) enumHeadName -> . modifiers_opt ENUM Identifier typeParameters
    (140) classHeadName1 -> . modifiers_opt CLASS Identifier
    (120) modifiers_opt -> . modifiers
    (121) modifiers_opt -> . empty
    (122) modifiers -> . modifier
    (123) modifiers -> . modifiers modifier
    (631) empty -> .
    (124) modifier -> . PUBLIC
    (125) modifier -> . PROTECTED
    (126) modifier -> . PRIVATE
    (127) modifier -> . STATIC
    (128) modifier -> . ABSTRACT
    (129) modifier -> . FINAL
    (130) modifier -> . NATIVE
    (131) modifier -> . SYNCHRONIZED
    (132) modifier -> . TRANSIENT
    (133) modifier -> . VOLATILE
    (134) modifier -> . STRICTFP
    (135) modifier -> . annotation
    (270) annotation -> . normalAnnotation
    (271) annotation -> . markerAnnotation
    (272) annotation -> . singleMemberAnnotation
    (273) normalAnnotation -> . annotationName LPAREN memberValuePairs_opt RPAREN
    (280) markerAnnotation -> . annotationName
    (281) singleMemberAnnotation -> . annotationName LPAREN singleMemberAnnotationMemberValue RPAREN
    (274) annotationName -> . AT name

    $end            reduce using rule 1 (compilationUnit -> packageDeclaration importDeclarations typeDeclarations .)
    SEMI            shift and go to state 16
    AT              shift and go to state 48
    INTERFACE       reduce using rule 631 (empty -> .)
    ENUM            reduce using rule 631 (empty -> .)
    CLASS           reduce using rule 631 (empty -> .)
    PUBLIC          shift and go to state 46
    PROTECTED       shift and go to state 6
    PRIVATE         shift and go to state 14
    STATIC          shift and go to state 7
    ABSTRACT        shift and go to state 5
    FINAL           shift and go to state 11
    NATIVE          shift and go to state 12
    SYNCHRONIZED    shift and go to state 2
    TRANSIENT       shift and go to state 19
    VOLATILE        shift and go to state 43
    STRICTFP        shift and go to state 18

    modifiers_opt                  shift and go to state 1
    classHead                      shift and go to state 3
    singleMemberAnnotation         shift and go to state 8
    enumHeadName                   shift and go to state 10
    annotationTypeDeclaration      shift and go to state 41
    enumDeclaration                shift and go to state 25
    empty                          shift and go to state 74
    annotationTypeDeclarationHead  shift and go to state 15
    markerAnnotation               shift and go to state 9
    interfaceHeadName              shift and go to state 27
    enumHead                       shift and go to state 30
    classDeclaration               shift and go to state 32
    classHeadName1                 shift and go to state 33
    annotationTypeDeclarationHeadName shift and go to state 34
    annotation                     shift and go to state 35
    modifiers                      shift and go to state 76
    typeDeclaration                shift and go to state 78
    annotationName                 shift and go to state 40
    className                      shift and go to state 13
    interfaceDeclaration           shift and go to state 42
    normalAnnotation               shift and go to state 24
    modifier                       shift and go to state 45
    interfaceHead                  shift and go to state 47

state 148

    (228) enumConstantHeadName -> modifiers_opt . Identifier

    Identifier      shift and go to state 369


state 149

    (223) enumConstants -> enumConstant .

    COMMA           reduce using rule 223 (enumConstants -> enumConstant .)
    SEMI            reduce using rule 223 (enumConstants -> enumConstant .)
    BRPAREN         reduce using rule 223 (enumConstants -> enumConstant .)


state 150

    (238) enumDeclarations -> SEMI . classBodyDeclarations_opt
    (152) classBodyDeclarations_opt -> . classBodyDeclarations
    (153) classBodyDeclarations_opt -> . empty
    (154) classBodyDeclarations -> . classBodyDeclaration
    (155) classBodyDeclarations -> . classBodyDeclarations classBodyDeclaration
    (631) empty -> .
    (156) classBodyDeclaration -> . classMemberDeclaration
    (157) classBodyDeclaration -> . staticInitializer
    (158) classBodyDeclaration -> . constructorDeclaration
    (159) classBodyDeclaration -> . block
    (174) classMemberDeclaration -> . fieldDeclaration
    (175) classMemberDeclaration -> . methodDeclaration
    (176) classMemberDeclaration -> . classDeclaration
    (177) classMemberDeclaration -> . interfaceDeclaration
    (178) classMemberDeclaration -> . enumDeclaration
    (179) classMemberDeclaration -> . annotationTypeDeclaration
    (180) classMemberDeclaration -> . SEMI
    (160) staticInitializer -> . STATIC block
    (161) constructorDeclaration -> . constructorHead methodBody
    (283) block -> . BLPAREN blockStatements_opt BRPAREN
    (181) fieldDeclaration -> . modifiers_opt type variableDeclarators SEMI
    (182) methodDeclaration -> . abstractMethodDeclaration
    (183) methodDeclaration -> . methodHeader methodBody
    (136) classDeclaration -> . classHead classBody
    (195) interfaceDeclaration -> . interfaceHead InterfaceBody
    (215) enumDeclaration -> . enumHead enumBody
    (239) annotationTypeDeclaration -> . annotationTypeDeclarationHead annotationTypeBody
    (162) constructorHead -> . constructorName formalParameterList_opt RPAREN methodHeadThrowList_opt
    (120) modifiers_opt -> . modifiers
    (121) modifiers_opt -> . empty
    (184) abstractMethodDeclaration -> . methodHeader SEMI
    (185) methodHeader -> . methodName formalParameterList_opt RPAREN methodHeadExtendedDims methodHeadThrowList_opt
    (137) classHead -> . className classExtends_opt classImpls_opt
    (196) interfaceHead -> . interfaceHeadName interfaceHeadExtends_opt
    (216) enumHead -> . enumHeadName classImpls_opt
    (240) annotationTypeDeclarationHead -> . annotationTypeDeclarationHeadName classExtends_opt classImpls_opt
    (163) constructorName -> . modifiers_opt typeParameters Identifier LPAREN
    (164) constructorName -> . modifiers_opt Identifier LPAREN
    (122) modifiers -> . modifier
    (123) modifiers -> . modifiers modifier
    (186) methodName -> . modifiers_opt typeParameters type Identifier LPAREN
    (187) methodName -> . modifiers_opt type Identifier LPAREN
    (138) className -> . classHeadName1 typeParameters
    (139) className -> . classHeadName1
    (197) interfaceHeadName -> . modifiers_opt INTERFACE Identifier typeParameters
    (198) interfaceHeadName -> . modifiers_opt INTERFACE Identifier
    (217) enumHeadName -> . modifiers_opt ENUM Identifier
    (218) enumHeadName -> . modifiers_opt ENUM Identifier typeParameters
    (241) annotationTypeDeclarationHeadName -> . modifiers AT INTERFACE Identifier
    (242) annotationTypeDeclarationHeadName -> . modifiers AT INTERFACE Identifier typeParameters
    (243) annotationTypeDeclarationHeadName -> . AT INTERFACE Identifier typeParameters
    (244) annotationTypeDeclarationHeadName -> . AT INTERFACE Identifier
    (124) modifier -> . PUBLIC
    (125) modifier -> . PROTECTED
    (126) modifier -> . PRIVATE
    (127) modifier -> . STATIC
    (128) modifier -> . ABSTRACT
    (129) modifier -> . FINAL
    (130) modifier -> . NATIVE
    (131) modifier -> . SYNCHRONIZED
    (132) modifier -> . TRANSIENT
    (133) modifier -> . VOLATILE
    (134) modifier -> . STRICTFP
    (135) modifier -> . annotation
    (140) classHeadName1 -> . modifiers_opt CLASS Identifier
    (270) annotation -> . normalAnnotation
    (271) annotation -> . markerAnnotation
    (272) annotation -> . singleMemberAnnotation
    (273) normalAnnotation -> . annotationName LPAREN memberValuePairs_opt RPAREN
    (280) markerAnnotation -> . annotationName
    (281) singleMemberAnnotation -> . annotationName LPAREN singleMemberAnnotationMemberValue RPAREN
    (274) annotationName -> . AT name

    BRPAREN         reduce using rule 631 (empty -> .)
    Identifier      reduce using rule 631 (empty -> .)
    INTERFACE       reduce using rule 631 (empty -> .)
    ENUM            reduce using rule 631 (empty -> .)
    CLASS           reduce using rule 631 (empty -> .)
    LESS            reduce using rule 631 (empty -> .)
    BOOLEAN         reduce using rule 631 (empty -> .)
    VOID            reduce using rule 631 (empty -> .)
    BYTE            reduce using rule 631 (empty -> .)
    SHORT           reduce using rule 631 (empty -> .)
    INT             reduce using rule 631 (empty -> .)
    LONG            reduce using rule 631 (empty -> .)
    CHAR            reduce using rule 631 (empty -> .)
    FLOAT           reduce using rule 631 (empty -> .)
    DOUBLE          reduce using rule 631 (empty -> .)
    SEMI            shift and go to state 113
    STATIC          shift and go to state 100
    BLPAREN         shift and go to state 120
    AT              shift and go to state 48
    PUBLIC          shift and go to state 46
    PROTECTED       shift and go to state 6
    PRIVATE         shift and go to state 14
    ABSTRACT        shift and go to state 5
    FINAL           shift and go to state 11
    NATIVE          shift and go to state 12
    SYNCHRONIZED    shift and go to state 2
    TRANSIENT       shift and go to state 19
    VOLATILE        shift and go to state 43
    STRICTFP        shift and go to state 18

    methodName                     shift and go to state 98
    modifiers_opt                  shift and go to state 99
    classHead                      shift and go to state 3
    className                      shift and go to state 13
    singleMemberAnnotation         shift and go to state 8
    markerAnnotation               shift and go to state 9
    methodDeclaration              shift and go to state 101
    constructorHead                shift and go to state 102
    annotationTypeDeclarationHead  shift and go to state 15
    classBodyDeclarations          shift and go to state 103
    enumHeadName                   shift and go to state 10
    constructorName                shift and go to state 104
    empty                          shift and go to state 105
    methodHeader                   shift and go to state 106
    abstractMethodDeclaration      shift and go to state 107
    enumDeclaration                shift and go to state 108
    classMemberDeclaration         shift and go to state 109
    interfaceHeadName              shift and go to state 27
    classHeadName1                 shift and go to state 33
    enumHead                       shift and go to state 30
    classBodyDeclaration           shift and go to state 119
    fieldDeclaration               shift and go to state 111
    annotationTypeDeclarationHeadName shift and go to state 34
    annotation                     shift and go to state 35
    modifiers                      shift and go to state 112
    annotationName                 shift and go to state 40
    staticInitializer              shift and go to state 114
    annotationTypeDeclaration      shift and go to state 115
    normalAnnotation               shift and go to state 24
    interfaceDeclaration           shift and go to state 116
    interfaceHead                  shift and go to state 47
    constructorDeclaration         shift and go to state 117
    classBodyDeclarations_opt      shift and go to state 370
    classDeclaration               shift and go to state 110
    modifier                       shift and go to state 45
    block                          shift and go to state 121

state 151

    (221) enumBody -> BLPAREN enumConstants . COMMA enumBodyDeclarations_opt BRPAREN
    (222) enumBody -> BLPAREN enumConstants . enumBodyDeclarations_opt BRPAREN
    (224) enumConstants -> enumConstants . COMMA enumConstant
    (236) enumBodyDeclarations_opt -> . enumDeclarations
    (237) enumBodyDeclarations_opt -> . empty
    (238) enumDeclarations -> . SEMI classBodyDeclarations_opt
    (631) empty -> .

    COMMA           shift and go to state 372
    SEMI            shift and go to state 150
    BRPAREN         reduce using rule 631 (empty -> .)

    enumBodyDeclarations_opt       shift and go to state 371
    enumDeclarations               shift and go to state 154
    empty                          shift and go to state 373

state 152

    (220) enumBody -> BLPAREN COMMA . enumBodyDeclarations_opt BRPAREN
    (236) enumBodyDeclarations_opt -> . enumDeclarations
    (237) enumBodyDeclarations_opt -> . empty
    (238) enumDeclarations -> . SEMI classBodyDeclarations_opt
    (631) empty -> .

    SEMI            shift and go to state 150
    BRPAREN         reduce using rule 631 (empty -> .)

    enumDeclarations               shift and go to state 154
    empty                          shift and go to state 373
    enumBodyDeclarations_opt       shift and go to state 374

state 153

    (237) enumBodyDeclarations_opt -> empty .
    (121) modifiers_opt -> empty .

    BRPAREN         reduce using rule 237 (enumBodyDeclarations_opt -> empty .)
    Identifier      reduce using rule 121 (modifiers_opt -> empty .)


state 154

    (236) enumBodyDeclarations_opt -> enumDeclarations .

    BRPAREN         reduce using rule 236 (enumBodyDeclarations_opt -> enumDeclarations .)


state 155

    (274) annotationName -> AT . name
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    Identifier      shift and go to state 68

    simpleName                     shift and go to state 66
    qualifiedName                  shift and go to state 64
    name                           shift and go to state 93

state 156

    (120) modifiers_opt -> modifiers .
    (123) modifiers -> modifiers . modifier
    (124) modifier -> . PUBLIC
    (125) modifier -> . PROTECTED
    (126) modifier -> . PRIVATE
    (127) modifier -> . STATIC
    (128) modifier -> . ABSTRACT
    (129) modifier -> . FINAL
    (130) modifier -> . NATIVE
    (131) modifier -> . SYNCHRONIZED
    (132) modifier -> . TRANSIENT
    (133) modifier -> . VOLATILE
    (134) modifier -> . STRICTFP
    (135) modifier -> . annotation
    (270) annotation -> . normalAnnotation
    (271) annotation -> . markerAnnotation
    (272) annotation -> . singleMemberAnnotation
    (273) normalAnnotation -> . annotationName LPAREN memberValuePairs_opt RPAREN
    (280) markerAnnotation -> . annotationName
    (281) singleMemberAnnotation -> . annotationName LPAREN singleMemberAnnotationMemberValue RPAREN
    (274) annotationName -> . AT name

    BOOLEAN         reduce using rule 120 (modifiers_opt -> modifiers .)
    VOID            reduce using rule 120 (modifiers_opt -> modifiers .)
    BYTE            reduce using rule 120 (modifiers_opt -> modifiers .)
    SHORT           reduce using rule 120 (modifiers_opt -> modifiers .)
    INT             reduce using rule 120 (modifiers_opt -> modifiers .)
    LONG            reduce using rule 120 (modifiers_opt -> modifiers .)
    CHAR            reduce using rule 120 (modifiers_opt -> modifiers .)
    FLOAT           reduce using rule 120 (modifiers_opt -> modifiers .)
    DOUBLE          reduce using rule 120 (modifiers_opt -> modifiers .)
    Identifier      reduce using rule 120 (modifiers_opt -> modifiers .)
    PUBLIC          shift and go to state 46
    PROTECTED       shift and go to state 6
    PRIVATE         shift and go to state 14
    STATIC          shift and go to state 7
    ABSTRACT        shift and go to state 5
    FINAL           shift and go to state 11
    NATIVE          shift and go to state 12
    SYNCHRONIZED    shift and go to state 2
    TRANSIENT       shift and go to state 19
    VOLATILE        shift and go to state 43
    STRICTFP        shift and go to state 18
    AT              shift and go to state 155

    markerAnnotation               shift and go to state 9
    annotationName                 shift and go to state 40
    singleMemberAnnotation         shift and go to state 8
    normalAnnotation               shift and go to state 24
    modifier                       shift and go to state 87
    annotation                     shift and go to state 35

state 157

    (227) enumConstantHead -> enumConstantHeadName . arguments_opt
    (229) arguments_opt -> . arguments
    (230) arguments_opt -> . empty
    (231) arguments -> . LPAREN argumentList_opt RPAREN
    (631) empty -> .

    LPAREN          shift and go to state 376
    BLPAREN         reduce using rule 631 (empty -> .)
    COMMA           reduce using rule 631 (empty -> .)
    SEMI            reduce using rule 631 (empty -> .)
    BRPAREN         reduce using rule 631 (empty -> .)

    arguments                      shift and go to state 375
    empty                          shift and go to state 378
    arguments_opt                  shift and go to state 377

state 158

    (219) enumBody -> BLPAREN enumBodyDeclarations_opt . BRPAREN

    BRPAREN         shift and go to state 379


state 159

    (225) enumConstant -> enumConstantHead . classBody
    (226) enumConstant -> enumConstantHead .
    (151) classBody -> . BLPAREN classBodyDeclarations_opt BRPAREN

    COMMA           reduce using rule 226 (enumConstant -> enumConstantHead .)
    SEMI            reduce using rule 226 (enumConstant -> enumConstantHead .)
    BRPAREN         reduce using rule 226 (enumConstant -> enumConstantHead .)
    BLPAREN         shift and go to state 52

    classBody                      shift and go to state 380

state 160

    (66) typeParameterList -> typeParameter .

    COMMA           reduce using rule 66 (typeParameterList -> typeParameter .)


state 161

    (75) typeParameterList1 -> typeParameterList . COMMA typeParameter1
    (67) typeParameterList -> typeParameterList . COMMA typeParameter

    COMMA           shift and go to state 381


state 162

    (74) typeParameterList1 -> typeParameter1 .

    EXTENDS         reduce using rule 74 (typeParameterList1 -> typeParameter1 .)
    IMPLEMENTS      reduce using rule 74 (typeParameterList1 -> typeParameter1 .)
    BLPAREN         reduce using rule 74 (typeParameterList1 -> typeParameter1 .)
    Identifier      reduce using rule 74 (typeParameterList1 -> typeParameter1 .)
    BOOLEAN         reduce using rule 74 (typeParameterList1 -> typeParameter1 .)
    VOID            reduce using rule 74 (typeParameterList1 -> typeParameter1 .)
    BYTE            reduce using rule 74 (typeParameterList1 -> typeParameter1 .)
    SHORT           reduce using rule 74 (typeParameterList1 -> typeParameter1 .)
    INT             reduce using rule 74 (typeParameterList1 -> typeParameter1 .)
    LONG            reduce using rule 74 (typeParameterList1 -> typeParameter1 .)
    CHAR            reduce using rule 74 (typeParameterList1 -> typeParameter1 .)
    FLOAT           reduce using rule 74 (typeParameterList1 -> typeParameter1 .)
    DOUBLE          reduce using rule 74 (typeParameterList1 -> typeParameter1 .)


state 163

    (64) typeParametersHeaderName -> Identifier .

    MORE            reduce using rule 64 (typeParametersHeaderName -> Identifier .)
    EXTENDS         reduce using rule 64 (typeParametersHeaderName -> Identifier .)
    COMMA           reduce using rule 64 (typeParametersHeaderName -> Identifier .)


state 164

    (65) typeParameters -> LESS typeParameterList1 .

    Identifier      reduce using rule 65 (typeParameters -> LESS typeParameterList1 .)
    BOOLEAN         reduce using rule 65 (typeParameters -> LESS typeParameterList1 .)
    VOID            reduce using rule 65 (typeParameters -> LESS typeParameterList1 .)
    BYTE            reduce using rule 65 (typeParameters -> LESS typeParameterList1 .)
    SHORT           reduce using rule 65 (typeParameters -> LESS typeParameterList1 .)
    INT             reduce using rule 65 (typeParameters -> LESS typeParameterList1 .)
    LONG            reduce using rule 65 (typeParameters -> LESS typeParameterList1 .)
    CHAR            reduce using rule 65 (typeParameters -> LESS typeParameterList1 .)
    FLOAT           reduce using rule 65 (typeParameters -> LESS typeParameterList1 .)
    DOUBLE          reduce using rule 65 (typeParameters -> LESS typeParameterList1 .)
    EXTENDS         reduce using rule 65 (typeParameters -> LESS typeParameterList1 .)
    IMPLEMENTS      reduce using rule 65 (typeParameters -> LESS typeParameterList1 .)
    BLPAREN         reduce using rule 65 (typeParameters -> LESS typeParameterList1 .)


state 165

    (76) typeParameter1 -> typeParametersHeaderName . MORE
    (77) typeParameter1 -> typeParametersHeaderName . EXTENDS referenceType1
    (78) typeParameter1 -> typeParametersHeaderName . EXTENDS referenceType additionalBoundList1
    (68) typeParameter -> typeParametersHeaderName .
    (69) typeParameter -> typeParametersHeaderName . EXTENDS referenceType
    (70) typeParameter -> typeParametersHeaderName . EXTENDS referenceType additionalBoundList

    MORE            shift and go to state 383
    EXTENDS         shift and go to state 382
    COMMA           reduce using rule 68 (typeParameter -> typeParametersHeaderName .)


state 166

    (240) annotationTypeDeclarationHead -> annotationTypeDeclarationHeadName classExtends_opt classImpls_opt .

    BLPAREN         reduce using rule 240 (annotationTypeDeclarationHead -> annotationTypeDeclarationHeadName classExtends_opt classImpls_opt .)


state 167

    (14) packageDeclarationName -> modifiers PACKAGE name .
    (32) qualifiedName -> name . DOT simpleName

    SEMI            reduce using rule 14 (packageDeclarationName -> modifiers PACKAGE name .)
    DOT             shift and go to state 145


state 168

    (241) annotationTypeDeclarationHeadName -> modifiers AT INTERFACE . Identifier
    (242) annotationTypeDeclarationHeadName -> modifiers AT INTERFACE . Identifier typeParameters

    Identifier      shift and go to state 384


state 169

    (581) unaryExpressionNotPlusMinusNotName -> EXCLAMATION . unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    primary                        shift and go to state 386
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 391
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    name                           shift and go to state 393
    postfixExpression              shift and go to state 394
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 170

    (36) primitiveType -> VOID .

    FLPAREN         reduce using rule 36 (primitiveType -> VOID .)
    Identifier      reduce using rule 36 (primitiveType -> VOID .)
    DOT             reduce using rule 36 (primitiveType -> VOID .)
    OP_ARRAY        reduce using rule 36 (primitiveType -> VOID .)
    RPAREN          reduce using rule 36 (primitiveType -> VOID .)
    VERTICAL        reduce using rule 36 (primitiveType -> VOID .)


state 171

    (621) booleanLiteral -> TRUE .

    FLPAREN         reduce using rule 621 (booleanLiteral -> TRUE .)
    DOT             reduce using rule 621 (booleanLiteral -> TRUE .)
    OP_INC          reduce using rule 621 (booleanLiteral -> TRUE .)
    OP_DEC          reduce using rule 621 (booleanLiteral -> TRUE .)
    ASS             reduce using rule 621 (booleanLiteral -> TRUE .)
    ASS_ADD         reduce using rule 621 (booleanLiteral -> TRUE .)
    ASS_SUB         reduce using rule 621 (booleanLiteral -> TRUE .)
    ASS_MUL         reduce using rule 621 (booleanLiteral -> TRUE .)
    ASS_DIV         reduce using rule 621 (booleanLiteral -> TRUE .)
    ASS_AND         reduce using rule 621 (booleanLiteral -> TRUE .)
    ASS_OR          reduce using rule 621 (booleanLiteral -> TRUE .)
    ASS_XOR         reduce using rule 621 (booleanLiteral -> TRUE .)
    ASS_MOD         reduce using rule 621 (booleanLiteral -> TRUE .)
    ASS_SHL         reduce using rule 621 (booleanLiteral -> TRUE .)
    ASS_SHRR        reduce using rule 621 (booleanLiteral -> TRUE .)
    ASS_SHR         reduce using rule 621 (booleanLiteral -> TRUE .)
    MULT            reduce using rule 621 (booleanLiteral -> TRUE .)
    SLASH           reduce using rule 621 (booleanLiteral -> TRUE .)
    PERCENT         reduce using rule 621 (booleanLiteral -> TRUE .)
    PLUS            reduce using rule 621 (booleanLiteral -> TRUE .)
    DASH            reduce using rule 621 (booleanLiteral -> TRUE .)
    OP_SHR          reduce using rule 621 (booleanLiteral -> TRUE .)
    OP_SHL          reduce using rule 621 (booleanLiteral -> TRUE .)
    OP_SHRR         reduce using rule 621 (booleanLiteral -> TRUE .)
    LESS            reduce using rule 621 (booleanLiteral -> TRUE .)
    OP_GE           reduce using rule 621 (booleanLiteral -> TRUE .)
    MORE            reduce using rule 621 (booleanLiteral -> TRUE .)
    OP_LE           reduce using rule 621 (booleanLiteral -> TRUE .)
    INSTANCEOF      reduce using rule 621 (booleanLiteral -> TRUE .)
    OP_EQ           reduce using rule 621 (booleanLiteral -> TRUE .)
    OP_NE           reduce using rule 621 (booleanLiteral -> TRUE .)
    AND             reduce using rule 621 (booleanLiteral -> TRUE .)
    CARET           reduce using rule 621 (booleanLiteral -> TRUE .)
    VERTICAL        reduce using rule 621 (booleanLiteral -> TRUE .)
    OP_LAND         reduce using rule 621 (booleanLiteral -> TRUE .)
    QUES            reduce using rule 621 (booleanLiteral -> TRUE .)
    OP_LOR          reduce using rule 621 (booleanLiteral -> TRUE .)
    SEMI            reduce using rule 621 (booleanLiteral -> TRUE .)
    COLON           reduce using rule 621 (booleanLiteral -> TRUE .)
    COMMA           reduce using rule 621 (booleanLiteral -> TRUE .)
    RPAREN          reduce using rule 621 (booleanLiteral -> TRUE .)
    FRPAREN         reduce using rule 621 (booleanLiteral -> TRUE .)
    BRPAREN         reduce using rule 621 (booleanLiteral -> TRUE .)


state 172

    (567) unaryExpressionNotName -> preIncrementExpression .

    MULT            reduce using rule 567 (unaryExpressionNotName -> preIncrementExpression .)
    SLASH           reduce using rule 567 (unaryExpressionNotName -> preIncrementExpression .)
    PERCENT         reduce using rule 567 (unaryExpressionNotName -> preIncrementExpression .)
    PLUS            reduce using rule 567 (unaryExpressionNotName -> preIncrementExpression .)
    DASH            reduce using rule 567 (unaryExpressionNotName -> preIncrementExpression .)
    OP_SHR          reduce using rule 567 (unaryExpressionNotName -> preIncrementExpression .)
    OP_SHL          reduce using rule 567 (unaryExpressionNotName -> preIncrementExpression .)
    OP_SHRR         reduce using rule 567 (unaryExpressionNotName -> preIncrementExpression .)
    LESS            reduce using rule 567 (unaryExpressionNotName -> preIncrementExpression .)
    OP_GE           reduce using rule 567 (unaryExpressionNotName -> preIncrementExpression .)
    MORE            reduce using rule 567 (unaryExpressionNotName -> preIncrementExpression .)
    OP_LE           reduce using rule 567 (unaryExpressionNotName -> preIncrementExpression .)
    INSTANCEOF      reduce using rule 567 (unaryExpressionNotName -> preIncrementExpression .)
    OP_EQ           reduce using rule 567 (unaryExpressionNotName -> preIncrementExpression .)
    OP_NE           reduce using rule 567 (unaryExpressionNotName -> preIncrementExpression .)
    AND             reduce using rule 567 (unaryExpressionNotName -> preIncrementExpression .)
    CARET           reduce using rule 567 (unaryExpressionNotName -> preIncrementExpression .)
    VERTICAL        reduce using rule 567 (unaryExpressionNotName -> preIncrementExpression .)
    OP_LAND         reduce using rule 567 (unaryExpressionNotName -> preIncrementExpression .)
    QUES            reduce using rule 567 (unaryExpressionNotName -> preIncrementExpression .)
    OP_LOR          reduce using rule 567 (unaryExpressionNotName -> preIncrementExpression .)
    RPAREN          reduce using rule 567 (unaryExpressionNotName -> preIncrementExpression .)
    COMMA           reduce using rule 567 (unaryExpressionNotName -> preIncrementExpression .)
    BRPAREN         reduce using rule 567 (unaryExpressionNotName -> preIncrementExpression .)
    SEMI            reduce using rule 567 (unaryExpressionNotName -> preIncrementExpression .)


state 173

    (619) literal -> booleanLiteral .

    FLPAREN         reduce using rule 619 (literal -> booleanLiteral .)
    DOT             reduce using rule 619 (literal -> booleanLiteral .)
    OP_INC          reduce using rule 619 (literal -> booleanLiteral .)
    OP_DEC          reduce using rule 619 (literal -> booleanLiteral .)
    ASS             reduce using rule 619 (literal -> booleanLiteral .)
    ASS_ADD         reduce using rule 619 (literal -> booleanLiteral .)
    ASS_SUB         reduce using rule 619 (literal -> booleanLiteral .)
    ASS_MUL         reduce using rule 619 (literal -> booleanLiteral .)
    ASS_DIV         reduce using rule 619 (literal -> booleanLiteral .)
    ASS_AND         reduce using rule 619 (literal -> booleanLiteral .)
    ASS_OR          reduce using rule 619 (literal -> booleanLiteral .)
    ASS_XOR         reduce using rule 619 (literal -> booleanLiteral .)
    ASS_MOD         reduce using rule 619 (literal -> booleanLiteral .)
    ASS_SHL         reduce using rule 619 (literal -> booleanLiteral .)
    ASS_SHRR        reduce using rule 619 (literal -> booleanLiteral .)
    ASS_SHR         reduce using rule 619 (literal -> booleanLiteral .)
    MULT            reduce using rule 619 (literal -> booleanLiteral .)
    SLASH           reduce using rule 619 (literal -> booleanLiteral .)
    PERCENT         reduce using rule 619 (literal -> booleanLiteral .)
    PLUS            reduce using rule 619 (literal -> booleanLiteral .)
    DASH            reduce using rule 619 (literal -> booleanLiteral .)
    OP_SHR          reduce using rule 619 (literal -> booleanLiteral .)
    OP_SHL          reduce using rule 619 (literal -> booleanLiteral .)
    OP_SHRR         reduce using rule 619 (literal -> booleanLiteral .)
    LESS            reduce using rule 619 (literal -> booleanLiteral .)
    OP_GE           reduce using rule 619 (literal -> booleanLiteral .)
    MORE            reduce using rule 619 (literal -> booleanLiteral .)
    OP_LE           reduce using rule 619 (literal -> booleanLiteral .)
    INSTANCEOF      reduce using rule 619 (literal -> booleanLiteral .)
    OP_EQ           reduce using rule 619 (literal -> booleanLiteral .)
    OP_NE           reduce using rule 619 (literal -> booleanLiteral .)
    AND             reduce using rule 619 (literal -> booleanLiteral .)
    CARET           reduce using rule 619 (literal -> booleanLiteral .)
    VERTICAL        reduce using rule 619 (literal -> booleanLiteral .)
    OP_LAND         reduce using rule 619 (literal -> booleanLiteral .)
    QUES            reduce using rule 619 (literal -> booleanLiteral .)
    OP_LOR          reduce using rule 619 (literal -> booleanLiteral .)
    RPAREN          reduce using rule 619 (literal -> booleanLiteral .)
    COMMA           reduce using rule 619 (literal -> booleanLiteral .)
    BRPAREN         reduce using rule 619 (literal -> booleanLiteral .)
    SEMI            reduce using rule 619 (literal -> booleanLiteral .)
    COLON           reduce using rule 619 (literal -> booleanLiteral .)
    FRPAREN         reduce using rule 619 (literal -> booleanLiteral .)


state 174

    (569) unaryExpressionNotName -> PLUS . unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    primary                        shift and go to state 386
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 399
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    name                           shift and go to state 393
    postfixExpression              shift and go to state 394
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 175

    (571) unaryExpressionNotName -> unaryExpressionNotPlusMinusNotName .

    MULT            reduce using rule 571 (unaryExpressionNotName -> unaryExpressionNotPlusMinusNotName .)
    SLASH           reduce using rule 571 (unaryExpressionNotName -> unaryExpressionNotPlusMinusNotName .)
    PERCENT         reduce using rule 571 (unaryExpressionNotName -> unaryExpressionNotPlusMinusNotName .)
    PLUS            reduce using rule 571 (unaryExpressionNotName -> unaryExpressionNotPlusMinusNotName .)
    DASH            reduce using rule 571 (unaryExpressionNotName -> unaryExpressionNotPlusMinusNotName .)
    OP_SHR          reduce using rule 571 (unaryExpressionNotName -> unaryExpressionNotPlusMinusNotName .)
    OP_SHL          reduce using rule 571 (unaryExpressionNotName -> unaryExpressionNotPlusMinusNotName .)
    OP_SHRR         reduce using rule 571 (unaryExpressionNotName -> unaryExpressionNotPlusMinusNotName .)
    LESS            reduce using rule 571 (unaryExpressionNotName -> unaryExpressionNotPlusMinusNotName .)
    OP_GE           reduce using rule 571 (unaryExpressionNotName -> unaryExpressionNotPlusMinusNotName .)
    MORE            reduce using rule 571 (unaryExpressionNotName -> unaryExpressionNotPlusMinusNotName .)
    OP_LE           reduce using rule 571 (unaryExpressionNotName -> unaryExpressionNotPlusMinusNotName .)
    INSTANCEOF      reduce using rule 571 (unaryExpressionNotName -> unaryExpressionNotPlusMinusNotName .)
    OP_EQ           reduce using rule 571 (unaryExpressionNotName -> unaryExpressionNotPlusMinusNotName .)
    OP_NE           reduce using rule 571 (unaryExpressionNotName -> unaryExpressionNotPlusMinusNotName .)
    AND             reduce using rule 571 (unaryExpressionNotName -> unaryExpressionNotPlusMinusNotName .)
    CARET           reduce using rule 571 (unaryExpressionNotName -> unaryExpressionNotPlusMinusNotName .)
    VERTICAL        reduce using rule 571 (unaryExpressionNotName -> unaryExpressionNotPlusMinusNotName .)
    OP_LAND         reduce using rule 571 (unaryExpressionNotName -> unaryExpressionNotPlusMinusNotName .)
    QUES            reduce using rule 571 (unaryExpressionNotName -> unaryExpressionNotPlusMinusNotName .)
    OP_LOR          reduce using rule 571 (unaryExpressionNotName -> unaryExpressionNotPlusMinusNotName .)
    RPAREN          reduce using rule 571 (unaryExpressionNotName -> unaryExpressionNotPlusMinusNotName .)
    COMMA           reduce using rule 571 (unaryExpressionNotName -> unaryExpressionNotPlusMinusNotName .)
    BRPAREN         reduce using rule 571 (unaryExpressionNotName -> unaryExpressionNotPlusMinusNotName .)
    SEMI            reduce using rule 571 (unaryExpressionNotName -> unaryExpressionNotPlusMinusNotName .)


state 176

    (598) primaryNoNewArray -> methodInvocation .

    FLPAREN         reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    DOT             reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    OP_INC          reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    OP_DEC          reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    MULT            reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    SLASH           reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    PERCENT         reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    PLUS            reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    DASH            reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    OP_SHR          reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    OP_SHL          reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    OP_SHRR         reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    LESS            reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    OP_GE           reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    MORE            reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    OP_LE           reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    INSTANCEOF      reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    OP_EQ           reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    OP_NE           reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    AND             reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    CARET           reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    VERTICAL        reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    OP_LAND         reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    QUES            reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    OP_LOR          reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    SEMI            reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    COLON           reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    COMMA           reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    RPAREN          reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    FRPAREN         reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    BRPAREN         reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    ASS             reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    ASS_ADD         reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    ASS_SUB         reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    ASS_MUL         reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    ASS_DIV         reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    ASS_AND         reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    ASS_OR          reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    ASS_XOR         reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    ASS_MOD         reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    ASS_SHL         reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    ASS_SHRR        reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    ASS_SHR         reduce using rule 598 (primaryNoNewArray -> methodInvocation .)


state 177

    (574) postIncrementExpression -> postfixExpression . OP_INC
    (575) postDecrementExpression -> postfixExpression . OP_DEC

    OP_INC          shift and go to state 400
    OP_DEC          shift and go to state 401


state 178

    (591) primary -> primaryNoNewArray .
    (448) arrayAccess -> primaryNoNewArray . FLPAREN expression FRPAREN

    DOT             reduce using rule 591 (primary -> primaryNoNewArray .)
    OP_INC          reduce using rule 591 (primary -> primaryNoNewArray .)
    OP_DEC          reduce using rule 591 (primary -> primaryNoNewArray .)
    ASS             reduce using rule 591 (primary -> primaryNoNewArray .)
    ASS_ADD         reduce using rule 591 (primary -> primaryNoNewArray .)
    ASS_SUB         reduce using rule 591 (primary -> primaryNoNewArray .)
    ASS_MUL         reduce using rule 591 (primary -> primaryNoNewArray .)
    ASS_DIV         reduce using rule 591 (primary -> primaryNoNewArray .)
    ASS_AND         reduce using rule 591 (primary -> primaryNoNewArray .)
    ASS_OR          reduce using rule 591 (primary -> primaryNoNewArray .)
    ASS_XOR         reduce using rule 591 (primary -> primaryNoNewArray .)
    ASS_MOD         reduce using rule 591 (primary -> primaryNoNewArray .)
    ASS_SHL         reduce using rule 591 (primary -> primaryNoNewArray .)
    ASS_SHRR        reduce using rule 591 (primary -> primaryNoNewArray .)
    ASS_SHR         reduce using rule 591 (primary -> primaryNoNewArray .)
    MULT            reduce using rule 591 (primary -> primaryNoNewArray .)
    SLASH           reduce using rule 591 (primary -> primaryNoNewArray .)
    PERCENT         reduce using rule 591 (primary -> primaryNoNewArray .)
    PLUS            reduce using rule 591 (primary -> primaryNoNewArray .)
    DASH            reduce using rule 591 (primary -> primaryNoNewArray .)
    OP_SHR          reduce using rule 591 (primary -> primaryNoNewArray .)
    OP_SHL          reduce using rule 591 (primary -> primaryNoNewArray .)
    OP_SHRR         reduce using rule 591 (primary -> primaryNoNewArray .)
    LESS            reduce using rule 591 (primary -> primaryNoNewArray .)
    OP_GE           reduce using rule 591 (primary -> primaryNoNewArray .)
    MORE            reduce using rule 591 (primary -> primaryNoNewArray .)
    OP_LE           reduce using rule 591 (primary -> primaryNoNewArray .)
    INSTANCEOF      reduce using rule 591 (primary -> primaryNoNewArray .)
    OP_EQ           reduce using rule 591 (primary -> primaryNoNewArray .)
    OP_NE           reduce using rule 591 (primary -> primaryNoNewArray .)
    AND             reduce using rule 591 (primary -> primaryNoNewArray .)
    CARET           reduce using rule 591 (primary -> primaryNoNewArray .)
    VERTICAL        reduce using rule 591 (primary -> primaryNoNewArray .)
    OP_LAND         reduce using rule 591 (primary -> primaryNoNewArray .)
    QUES            reduce using rule 591 (primary -> primaryNoNewArray .)
    OP_LOR          reduce using rule 591 (primary -> primaryNoNewArray .)
    SEMI            reduce using rule 591 (primary -> primaryNoNewArray .)
    COLON           reduce using rule 591 (primary -> primaryNoNewArray .)
    COMMA           reduce using rule 591 (primary -> primaryNoNewArray .)
    RPAREN          reduce using rule 591 (primary -> primaryNoNewArray .)
    FRPAREN         reduce using rule 591 (primary -> primaryNoNewArray .)
    BRPAREN         reduce using rule 591 (primary -> primaryNoNewArray .)
    FLPAREN         shift and go to state 402


state 179

    (589) postfixExpressionNotName -> postIncrementExpression .
    (586) postfixExpression -> postIncrementExpression .

    MULT            reduce using rule 589 (postfixExpressionNotName -> postIncrementExpression .)
    SLASH           reduce using rule 589 (postfixExpressionNotName -> postIncrementExpression .)
    PERCENT         reduce using rule 589 (postfixExpressionNotName -> postIncrementExpression .)
    PLUS            reduce using rule 589 (postfixExpressionNotName -> postIncrementExpression .)
    DASH            reduce using rule 589 (postfixExpressionNotName -> postIncrementExpression .)
    OP_SHR          reduce using rule 589 (postfixExpressionNotName -> postIncrementExpression .)
    OP_SHL          reduce using rule 589 (postfixExpressionNotName -> postIncrementExpression .)
    OP_SHRR         reduce using rule 589 (postfixExpressionNotName -> postIncrementExpression .)
    LESS            reduce using rule 589 (postfixExpressionNotName -> postIncrementExpression .)
    OP_GE           reduce using rule 589 (postfixExpressionNotName -> postIncrementExpression .)
    MORE            reduce using rule 589 (postfixExpressionNotName -> postIncrementExpression .)
    OP_LE           reduce using rule 589 (postfixExpressionNotName -> postIncrementExpression .)
    INSTANCEOF      reduce using rule 589 (postfixExpressionNotName -> postIncrementExpression .)
    OP_EQ           reduce using rule 589 (postfixExpressionNotName -> postIncrementExpression .)
    OP_NE           reduce using rule 589 (postfixExpressionNotName -> postIncrementExpression .)
    AND             reduce using rule 589 (postfixExpressionNotName -> postIncrementExpression .)
    CARET           reduce using rule 589 (postfixExpressionNotName -> postIncrementExpression .)
    VERTICAL        reduce using rule 589 (postfixExpressionNotName -> postIncrementExpression .)
    OP_LAND         reduce using rule 589 (postfixExpressionNotName -> postIncrementExpression .)
    QUES            reduce using rule 589 (postfixExpressionNotName -> postIncrementExpression .)
    OP_LOR          reduce using rule 589 (postfixExpressionNotName -> postIncrementExpression .)
    COMMA           reduce using rule 589 (postfixExpressionNotName -> postIncrementExpression .)
    RPAREN          reduce using rule 589 (postfixExpressionNotName -> postIncrementExpression .)
    SEMI            reduce using rule 589 (postfixExpressionNotName -> postIncrementExpression .)
    BRPAREN         reduce using rule 589 (postfixExpressionNotName -> postIncrementExpression .)
    OP_INC          reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    OP_DEC          reduce using rule 586 (postfixExpression -> postIncrementExpression .)


state 180

    (261) memberValue -> name .
    (479) conditionalExpressionNotName -> name . QUES expression COLON conditionalExpression
    (484) conditionalOrExpressionNotName -> name . OP_LOR conditionalAndExpression
    (32) qualifiedName -> name . DOT simpleName
    (489) conditionalAndExpressionNotName -> name . OP_LAND inclusiveOrExpression
    (494) inclusiveOrExpressionNotName -> name . VERTICAL exclusiveOrExpression
    (499) exclusiveOrExpressionNotName -> name . CARET andExpression
    (504) andExpressionNotName -> name . AND equalityExpression
    (511) equalityExpressionNotName -> name . OP_EQ instanceOfExpression
    (512) equalityExpressionNotName -> name . OP_NE instanceOfExpression
    (517) instanceOfExpressionNotName -> name . INSTANCEOF referenceType
    (528) relationalExpressionNotName -> name . LESS shiftExpression
    (529) relationalExpressionNotName -> name . OP_GE shiftExpression
    (530) relationalExpressionNotName -> name . MORE shiftExpression
    (531) relationalExpressionNotName -> name . OP_LE shiftExpression
    (540) shiftExpressionNotName -> name . OP_SHR additiveExpression
    (541) shiftExpressionNotName -> name . OP_SHL additiveExpression
    (542) shiftExpressionNotName -> name . OP_SHRR additiveExpression
    (549) additiveExpressionNotName -> name . PLUS multiplicativeExpression
    (550) additiveExpressionNotName -> name . DASH multiplicativeExpression
    (559) multiplicativeExpressionNotName -> name . MULT unaryExpression
    (560) multiplicativeExpressionNotName -> name . SLASH unaryExpression
    (561) multiplicativeExpressionNotName -> name . PERCENT unaryExpression
    (602) primaryNoNewArray -> name . DOT THIS
    (603) primaryNoNewArray -> name . DOT SUPER
    (604) primaryNoNewArray -> name . DOT CLASS
    (605) primaryNoNewArray -> name . arrays DOT CLASS
    (585) postfixExpression -> name .
    (340) methodInvocation -> name . LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> name . DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> name . FLPAREN expression FRPAREN
    (442) classInstanceCreationExpressionName -> name . DOT
    (59) arrays -> . array_loop
    (60) array_loop -> . array
    (61) array_loop -> . array_loop array
    (58) array -> . FLPAREN FRPAREN

    COMMA           reduce using rule 261 (memberValue -> name .)
    BRPAREN         reduce using rule 261 (memberValue -> name .)
    RPAREN          reduce using rule 261 (memberValue -> name .)
    SEMI            reduce using rule 261 (memberValue -> name .)
    QUES            shift and go to state 427
    OP_LOR          shift and go to state 412
    DOT             shift and go to state 409
    OP_LAND         shift and go to state 406
    VERTICAL        shift and go to state 416
    CARET           shift and go to state 403
    AND             shift and go to state 423
    OP_EQ           shift and go to state 424
    OP_NE           shift and go to state 410
    INSTANCEOF      shift and go to state 428
    LESS            shift and go to state 405
    OP_GE           shift and go to state 425
    MORE            shift and go to state 429
    OP_LE           shift and go to state 408
    OP_SHR          shift and go to state 419
    OP_SHL          shift and go to state 421
    OP_SHRR         shift and go to state 418
    PLUS            shift and go to state 415
    DASH            shift and go to state 420
    MULT            shift and go to state 414
    SLASH           shift and go to state 422
    PERCENT         shift and go to state 417
    OP_INC          reduce using rule 585 (postfixExpression -> name .)
    OP_DEC          reduce using rule 585 (postfixExpression -> name .)
    LPAREN          shift and go to state 404
    FLPAREN         shift and go to state 411

    array                          shift and go to state 407
    array_loop                     shift and go to state 413
    arrays                         shift and go to state 426

state 181

    (595) primaryNoNewArray -> THIS .

    FLPAREN         reduce using rule 595 (primaryNoNewArray -> THIS .)
    DOT             reduce using rule 595 (primaryNoNewArray -> THIS .)
    OP_INC          reduce using rule 595 (primaryNoNewArray -> THIS .)
    OP_DEC          reduce using rule 595 (primaryNoNewArray -> THIS .)
    MULT            reduce using rule 595 (primaryNoNewArray -> THIS .)
    SLASH           reduce using rule 595 (primaryNoNewArray -> THIS .)
    PERCENT         reduce using rule 595 (primaryNoNewArray -> THIS .)
    PLUS            reduce using rule 595 (primaryNoNewArray -> THIS .)
    DASH            reduce using rule 595 (primaryNoNewArray -> THIS .)
    OP_SHR          reduce using rule 595 (primaryNoNewArray -> THIS .)
    OP_SHL          reduce using rule 595 (primaryNoNewArray -> THIS .)
    OP_SHRR         reduce using rule 595 (primaryNoNewArray -> THIS .)
    LESS            reduce using rule 595 (primaryNoNewArray -> THIS .)
    OP_GE           reduce using rule 595 (primaryNoNewArray -> THIS .)
    MORE            reduce using rule 595 (primaryNoNewArray -> THIS .)
    OP_LE           reduce using rule 595 (primaryNoNewArray -> THIS .)
    INSTANCEOF      reduce using rule 595 (primaryNoNewArray -> THIS .)
    OP_EQ           reduce using rule 595 (primaryNoNewArray -> THIS .)
    OP_NE           reduce using rule 595 (primaryNoNewArray -> THIS .)
    AND             reduce using rule 595 (primaryNoNewArray -> THIS .)
    CARET           reduce using rule 595 (primaryNoNewArray -> THIS .)
    VERTICAL        reduce using rule 595 (primaryNoNewArray -> THIS .)
    OP_LAND         reduce using rule 595 (primaryNoNewArray -> THIS .)
    QUES            reduce using rule 595 (primaryNoNewArray -> THIS .)
    OP_LOR          reduce using rule 595 (primaryNoNewArray -> THIS .)
    SEMI            reduce using rule 595 (primaryNoNewArray -> THIS .)
    COLON           reduce using rule 595 (primaryNoNewArray -> THIS .)
    COMMA           reduce using rule 595 (primaryNoNewArray -> THIS .)
    RPAREN          reduce using rule 595 (primaryNoNewArray -> THIS .)
    FRPAREN         reduce using rule 595 (primaryNoNewArray -> THIS .)
    BRPAREN         reduce using rule 595 (primaryNoNewArray -> THIS .)
    ASS             reduce using rule 595 (primaryNoNewArray -> THIS .)
    ASS_ADD         reduce using rule 595 (primaryNoNewArray -> THIS .)
    ASS_SUB         reduce using rule 595 (primaryNoNewArray -> THIS .)
    ASS_MUL         reduce using rule 595 (primaryNoNewArray -> THIS .)
    ASS_DIV         reduce using rule 595 (primaryNoNewArray -> THIS .)
    ASS_AND         reduce using rule 595 (primaryNoNewArray -> THIS .)
    ASS_OR          reduce using rule 595 (primaryNoNewArray -> THIS .)
    ASS_XOR         reduce using rule 595 (primaryNoNewArray -> THIS .)
    ASS_MOD         reduce using rule 595 (primaryNoNewArray -> THIS .)
    ASS_SHL         reduce using rule 595 (primaryNoNewArray -> THIS .)
    ASS_SHRR        reduce using rule 595 (primaryNoNewArray -> THIS .)
    ASS_SHR         reduce using rule 595 (primaryNoNewArray -> THIS .)


state 182

    (43) primitiveType -> DOUBLE .

    FLPAREN         reduce using rule 43 (primitiveType -> DOUBLE .)
    Identifier      reduce using rule 43 (primitiveType -> DOUBLE .)
    DOT             reduce using rule 43 (primitiveType -> DOUBLE .)
    OP_ARRAY        reduce using rule 43 (primitiveType -> DOUBLE .)
    RPAREN          reduce using rule 43 (primitiveType -> DOUBLE .)
    VERTICAL        reduce using rule 43 (primitiveType -> DOUBLE .)


state 183

    (615) literal -> integerLiteral .

    FLPAREN         reduce using rule 615 (literal -> integerLiteral .)
    DOT             reduce using rule 615 (literal -> integerLiteral .)
    OP_INC          reduce using rule 615 (literal -> integerLiteral .)
    OP_DEC          reduce using rule 615 (literal -> integerLiteral .)
    ASS             reduce using rule 615 (literal -> integerLiteral .)
    ASS_ADD         reduce using rule 615 (literal -> integerLiteral .)
    ASS_SUB         reduce using rule 615 (literal -> integerLiteral .)
    ASS_MUL         reduce using rule 615 (literal -> integerLiteral .)
    ASS_DIV         reduce using rule 615 (literal -> integerLiteral .)
    ASS_AND         reduce using rule 615 (literal -> integerLiteral .)
    ASS_OR          reduce using rule 615 (literal -> integerLiteral .)
    ASS_XOR         reduce using rule 615 (literal -> integerLiteral .)
    ASS_MOD         reduce using rule 615 (literal -> integerLiteral .)
    ASS_SHL         reduce using rule 615 (literal -> integerLiteral .)
    ASS_SHRR        reduce using rule 615 (literal -> integerLiteral .)
    ASS_SHR         reduce using rule 615 (literal -> integerLiteral .)
    MULT            reduce using rule 615 (literal -> integerLiteral .)
    SLASH           reduce using rule 615 (literal -> integerLiteral .)
    PERCENT         reduce using rule 615 (literal -> integerLiteral .)
    PLUS            reduce using rule 615 (literal -> integerLiteral .)
    DASH            reduce using rule 615 (literal -> integerLiteral .)
    OP_SHR          reduce using rule 615 (literal -> integerLiteral .)
    OP_SHL          reduce using rule 615 (literal -> integerLiteral .)
    OP_SHRR         reduce using rule 615 (literal -> integerLiteral .)
    LESS            reduce using rule 615 (literal -> integerLiteral .)
    OP_GE           reduce using rule 615 (literal -> integerLiteral .)
    MORE            reduce using rule 615 (literal -> integerLiteral .)
    OP_LE           reduce using rule 615 (literal -> integerLiteral .)
    INSTANCEOF      reduce using rule 615 (literal -> integerLiteral .)
    OP_EQ           reduce using rule 615 (literal -> integerLiteral .)
    OP_NE           reduce using rule 615 (literal -> integerLiteral .)
    AND             reduce using rule 615 (literal -> integerLiteral .)
    CARET           reduce using rule 615 (literal -> integerLiteral .)
    VERTICAL        reduce using rule 615 (literal -> integerLiteral .)
    OP_LAND         reduce using rule 615 (literal -> integerLiteral .)
    QUES            reduce using rule 615 (literal -> integerLiteral .)
    OP_LOR          reduce using rule 615 (literal -> integerLiteral .)
    RPAREN          reduce using rule 615 (literal -> integerLiteral .)
    COMMA           reduce using rule 615 (literal -> integerLiteral .)
    BRPAREN         reduce using rule 615 (literal -> integerLiteral .)
    SEMI            reduce using rule 615 (literal -> integerLiteral .)
    COLON           reduce using rule 615 (literal -> integerLiteral .)
    FRPAREN         reduce using rule 615 (literal -> integerLiteral .)


state 184

    (38) primitiveType -> SHORT .

    FLPAREN         reduce using rule 38 (primitiveType -> SHORT .)
    Identifier      reduce using rule 38 (primitiveType -> SHORT .)
    DOT             reduce using rule 38 (primitiveType -> SHORT .)
    OP_ARRAY        reduce using rule 38 (primitiveType -> SHORT .)
    RPAREN          reduce using rule 38 (primitiveType -> SHORT .)
    VERTICAL        reduce using rule 38 (primitiveType -> SHORT .)


state 185

    (629) integerLiteral -> LONG_NUMBER .

    FLPAREN         reduce using rule 629 (integerLiteral -> LONG_NUMBER .)
    DOT             reduce using rule 629 (integerLiteral -> LONG_NUMBER .)
    OP_INC          reduce using rule 629 (integerLiteral -> LONG_NUMBER .)
    OP_DEC          reduce using rule 629 (integerLiteral -> LONG_NUMBER .)
    ASS             reduce using rule 629 (integerLiteral -> LONG_NUMBER .)
    ASS_ADD         reduce using rule 629 (integerLiteral -> LONG_NUMBER .)
    ASS_SUB         reduce using rule 629 (integerLiteral -> LONG_NUMBER .)
    ASS_MUL         reduce using rule 629 (integerLiteral -> LONG_NUMBER .)
    ASS_DIV         reduce using rule 629 (integerLiteral -> LONG_NUMBER .)
    ASS_AND         reduce using rule 629 (integerLiteral -> LONG_NUMBER .)
    ASS_OR          reduce using rule 629 (integerLiteral -> LONG_NUMBER .)
    ASS_XOR         reduce using rule 629 (integerLiteral -> LONG_NUMBER .)
    ASS_MOD         reduce using rule 629 (integerLiteral -> LONG_NUMBER .)
    ASS_SHL         reduce using rule 629 (integerLiteral -> LONG_NUMBER .)
    ASS_SHRR        reduce using rule 629 (integerLiteral -> LONG_NUMBER .)
    ASS_SHR         reduce using rule 629 (integerLiteral -> LONG_NUMBER .)
    MULT            reduce using rule 629 (integerLiteral -> LONG_NUMBER .)
    SLASH           reduce using rule 629 (integerLiteral -> LONG_NUMBER .)
    PERCENT         reduce using rule 629 (integerLiteral -> LONG_NUMBER .)
    PLUS            reduce using rule 629 (integerLiteral -> LONG_NUMBER .)
    DASH            reduce using rule 629 (integerLiteral -> LONG_NUMBER .)
    OP_SHR          reduce using rule 629 (integerLiteral -> LONG_NUMBER .)
    OP_SHL          reduce using rule 629 (integerLiteral -> LONG_NUMBER .)
    OP_SHRR         reduce using rule 629 (integerLiteral -> LONG_NUMBER .)
    LESS            reduce using rule 629 (integerLiteral -> LONG_NUMBER .)
    OP_GE           reduce using rule 629 (integerLiteral -> LONG_NUMBER .)
    MORE            reduce using rule 629 (integerLiteral -> LONG_NUMBER .)
    OP_LE           reduce using rule 629 (integerLiteral -> LONG_NUMBER .)
    INSTANCEOF      reduce using rule 629 (integerLiteral -> LONG_NUMBER .)
    OP_EQ           reduce using rule 629 (integerLiteral -> LONG_NUMBER .)
    OP_NE           reduce using rule 629 (integerLiteral -> LONG_NUMBER .)
    AND             reduce using rule 629 (integerLiteral -> LONG_NUMBER .)
    CARET           reduce using rule 629 (integerLiteral -> LONG_NUMBER .)
    VERTICAL        reduce using rule 629 (integerLiteral -> LONG_NUMBER .)
    OP_LAND         reduce using rule 629 (integerLiteral -> LONG_NUMBER .)
    QUES            reduce using rule 629 (integerLiteral -> LONG_NUMBER .)
    OP_LOR          reduce using rule 629 (integerLiteral -> LONG_NUMBER .)
    FRPAREN         reduce using rule 629 (integerLiteral -> LONG_NUMBER .)
    RPAREN          reduce using rule 629 (integerLiteral -> LONG_NUMBER .)
    SEMI            reduce using rule 629 (integerLiteral -> LONG_NUMBER .)
    COMMA           reduce using rule 629 (integerLiteral -> LONG_NUMBER .)
    BRPAREN         reduce using rule 629 (integerLiteral -> LONG_NUMBER .)
    COLON           reduce using rule 629 (integerLiteral -> LONG_NUMBER .)


state 186

    (590) postfixExpressionNotName -> postDecrementExpression .
    (587) postfixExpression -> postDecrementExpression .

    MULT            reduce using rule 590 (postfixExpressionNotName -> postDecrementExpression .)
    SLASH           reduce using rule 590 (postfixExpressionNotName -> postDecrementExpression .)
    PERCENT         reduce using rule 590 (postfixExpressionNotName -> postDecrementExpression .)
    PLUS            reduce using rule 590 (postfixExpressionNotName -> postDecrementExpression .)
    DASH            reduce using rule 590 (postfixExpressionNotName -> postDecrementExpression .)
    OP_SHR          reduce using rule 590 (postfixExpressionNotName -> postDecrementExpression .)
    OP_SHL          reduce using rule 590 (postfixExpressionNotName -> postDecrementExpression .)
    OP_SHRR         reduce using rule 590 (postfixExpressionNotName -> postDecrementExpression .)
    LESS            reduce using rule 590 (postfixExpressionNotName -> postDecrementExpression .)
    OP_GE           reduce using rule 590 (postfixExpressionNotName -> postDecrementExpression .)
    MORE            reduce using rule 590 (postfixExpressionNotName -> postDecrementExpression .)
    OP_LE           reduce using rule 590 (postfixExpressionNotName -> postDecrementExpression .)
    INSTANCEOF      reduce using rule 590 (postfixExpressionNotName -> postDecrementExpression .)
    OP_EQ           reduce using rule 590 (postfixExpressionNotName -> postDecrementExpression .)
    OP_NE           reduce using rule 590 (postfixExpressionNotName -> postDecrementExpression .)
    AND             reduce using rule 590 (postfixExpressionNotName -> postDecrementExpression .)
    CARET           reduce using rule 590 (postfixExpressionNotName -> postDecrementExpression .)
    VERTICAL        reduce using rule 590 (postfixExpressionNotName -> postDecrementExpression .)
    OP_LAND         reduce using rule 590 (postfixExpressionNotName -> postDecrementExpression .)
    QUES            reduce using rule 590 (postfixExpressionNotName -> postDecrementExpression .)
    OP_LOR          reduce using rule 590 (postfixExpressionNotName -> postDecrementExpression .)
    COMMA           reduce using rule 590 (postfixExpressionNotName -> postDecrementExpression .)
    RPAREN          reduce using rule 590 (postfixExpressionNotName -> postDecrementExpression .)
    SEMI            reduce using rule 590 (postfixExpressionNotName -> postDecrementExpression .)
    BRPAREN         reduce using rule 590 (postfixExpressionNotName -> postDecrementExpression .)
    OP_INC          reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    OP_DEC          reduce using rule 587 (postfixExpression -> postDecrementExpression .)


state 187

    (440) classInstanceCreationExpression -> classInstanceCreationExpressionName . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> classInstanceCreationExpressionName . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt

    NEW             shift and go to state 430


state 188

    (502) andExpressionNotName -> equalityExpressionNotName .
    (509) equalityExpressionNotName -> equalityExpressionNotName . OP_EQ instanceOfExpression
    (510) equalityExpressionNotName -> equalityExpressionNotName . OP_NE instanceOfExpression

    AND             reduce using rule 502 (andExpressionNotName -> equalityExpressionNotName .)
    CARET           reduce using rule 502 (andExpressionNotName -> equalityExpressionNotName .)
    VERTICAL        reduce using rule 502 (andExpressionNotName -> equalityExpressionNotName .)
    OP_LAND         reduce using rule 502 (andExpressionNotName -> equalityExpressionNotName .)
    QUES            reduce using rule 502 (andExpressionNotName -> equalityExpressionNotName .)
    OP_LOR          reduce using rule 502 (andExpressionNotName -> equalityExpressionNotName .)
    RPAREN          reduce using rule 502 (andExpressionNotName -> equalityExpressionNotName .)
    SEMI            reduce using rule 502 (andExpressionNotName -> equalityExpressionNotName .)
    COMMA           reduce using rule 502 (andExpressionNotName -> equalityExpressionNotName .)
    BRPAREN         reduce using rule 502 (andExpressionNotName -> equalityExpressionNotName .)
    OP_EQ           shift and go to state 432
    OP_NE           shift and go to state 431


state 189

    (597) primaryNoNewArray -> fieldAccess .

    FLPAREN         reduce using rule 597 (primaryNoNewArray -> fieldAccess .)
    DOT             reduce using rule 597 (primaryNoNewArray -> fieldAccess .)
    OP_INC          reduce using rule 597 (primaryNoNewArray -> fieldAccess .)
    OP_DEC          reduce using rule 597 (primaryNoNewArray -> fieldAccess .)
    MULT            reduce using rule 597 (primaryNoNewArray -> fieldAccess .)
    SLASH           reduce using rule 597 (primaryNoNewArray -> fieldAccess .)
    PERCENT         reduce using rule 597 (primaryNoNewArray -> fieldAccess .)
    PLUS            reduce using rule 597 (primaryNoNewArray -> fieldAccess .)
    DASH            reduce using rule 597 (primaryNoNewArray -> fieldAccess .)
    OP_SHR          reduce using rule 597 (primaryNoNewArray -> fieldAccess .)
    OP_SHL          reduce using rule 597 (primaryNoNewArray -> fieldAccess .)
    OP_SHRR         reduce using rule 597 (primaryNoNewArray -> fieldAccess .)
    LESS            reduce using rule 597 (primaryNoNewArray -> fieldAccess .)
    OP_GE           reduce using rule 597 (primaryNoNewArray -> fieldAccess .)
    MORE            reduce using rule 597 (primaryNoNewArray -> fieldAccess .)
    OP_LE           reduce using rule 597 (primaryNoNewArray -> fieldAccess .)
    INSTANCEOF      reduce using rule 597 (primaryNoNewArray -> fieldAccess .)
    OP_EQ           reduce using rule 597 (primaryNoNewArray -> fieldAccess .)
    OP_NE           reduce using rule 597 (primaryNoNewArray -> fieldAccess .)
    AND             reduce using rule 597 (primaryNoNewArray -> fieldAccess .)
    CARET           reduce using rule 597 (primaryNoNewArray -> fieldAccess .)
    VERTICAL        reduce using rule 597 (primaryNoNewArray -> fieldAccess .)
    OP_LAND         reduce using rule 597 (primaryNoNewArray -> fieldAccess .)
    QUES            reduce using rule 597 (primaryNoNewArray -> fieldAccess .)
    OP_LOR          reduce using rule 597 (primaryNoNewArray -> fieldAccess .)
    SEMI            reduce using rule 597 (primaryNoNewArray -> fieldAccess .)
    COLON           reduce using rule 597 (primaryNoNewArray -> fieldAccess .)
    COMMA           reduce using rule 597 (primaryNoNewArray -> fieldAccess .)
    RPAREN          reduce using rule 597 (primaryNoNewArray -> fieldAccess .)
    FRPAREN         reduce using rule 597 (primaryNoNewArray -> fieldAccess .)
    BRPAREN         reduce using rule 597 (primaryNoNewArray -> fieldAccess .)
    ASS             reduce using rule 597 (primaryNoNewArray -> fieldAccess .)
    ASS_ADD         reduce using rule 597 (primaryNoNewArray -> fieldAccess .)
    ASS_SUB         reduce using rule 597 (primaryNoNewArray -> fieldAccess .)
    ASS_MUL         reduce using rule 597 (primaryNoNewArray -> fieldAccess .)
    ASS_DIV         reduce using rule 597 (primaryNoNewArray -> fieldAccess .)
    ASS_AND         reduce using rule 597 (primaryNoNewArray -> fieldAccess .)
    ASS_OR          reduce using rule 597 (primaryNoNewArray -> fieldAccess .)
    ASS_XOR         reduce using rule 597 (primaryNoNewArray -> fieldAccess .)
    ASS_MOD         reduce using rule 597 (primaryNoNewArray -> fieldAccess .)
    ASS_SHL         reduce using rule 597 (primaryNoNewArray -> fieldAccess .)
    ASS_SHRR        reduce using rule 597 (primaryNoNewArray -> fieldAccess .)
    ASS_SHR         reduce using rule 597 (primaryNoNewArray -> fieldAccess .)


state 190

    (630) integerLiteral -> LONG_HEX_NUMBER .

    FLPAREN         reduce using rule 630 (integerLiteral -> LONG_HEX_NUMBER .)
    DOT             reduce using rule 630 (integerLiteral -> LONG_HEX_NUMBER .)
    OP_INC          reduce using rule 630 (integerLiteral -> LONG_HEX_NUMBER .)
    OP_DEC          reduce using rule 630 (integerLiteral -> LONG_HEX_NUMBER .)
    ASS             reduce using rule 630 (integerLiteral -> LONG_HEX_NUMBER .)
    ASS_ADD         reduce using rule 630 (integerLiteral -> LONG_HEX_NUMBER .)
    ASS_SUB         reduce using rule 630 (integerLiteral -> LONG_HEX_NUMBER .)
    ASS_MUL         reduce using rule 630 (integerLiteral -> LONG_HEX_NUMBER .)
    ASS_DIV         reduce using rule 630 (integerLiteral -> LONG_HEX_NUMBER .)
    ASS_AND         reduce using rule 630 (integerLiteral -> LONG_HEX_NUMBER .)
    ASS_OR          reduce using rule 630 (integerLiteral -> LONG_HEX_NUMBER .)
    ASS_XOR         reduce using rule 630 (integerLiteral -> LONG_HEX_NUMBER .)
    ASS_MOD         reduce using rule 630 (integerLiteral -> LONG_HEX_NUMBER .)
    ASS_SHL         reduce using rule 630 (integerLiteral -> LONG_HEX_NUMBER .)
    ASS_SHRR        reduce using rule 630 (integerLiteral -> LONG_HEX_NUMBER .)
    ASS_SHR         reduce using rule 630 (integerLiteral -> LONG_HEX_NUMBER .)
    MULT            reduce using rule 630 (integerLiteral -> LONG_HEX_NUMBER .)
    SLASH           reduce using rule 630 (integerLiteral -> LONG_HEX_NUMBER .)
    PERCENT         reduce using rule 630 (integerLiteral -> LONG_HEX_NUMBER .)
    PLUS            reduce using rule 630 (integerLiteral -> LONG_HEX_NUMBER .)
    DASH            reduce using rule 630 (integerLiteral -> LONG_HEX_NUMBER .)
    OP_SHR          reduce using rule 630 (integerLiteral -> LONG_HEX_NUMBER .)
    OP_SHL          reduce using rule 630 (integerLiteral -> LONG_HEX_NUMBER .)
    OP_SHRR         reduce using rule 630 (integerLiteral -> LONG_HEX_NUMBER .)
    LESS            reduce using rule 630 (integerLiteral -> LONG_HEX_NUMBER .)
    OP_GE           reduce using rule 630 (integerLiteral -> LONG_HEX_NUMBER .)
    MORE            reduce using rule 630 (integerLiteral -> LONG_HEX_NUMBER .)
    OP_LE           reduce using rule 630 (integerLiteral -> LONG_HEX_NUMBER .)
    INSTANCEOF      reduce using rule 630 (integerLiteral -> LONG_HEX_NUMBER .)
    OP_EQ           reduce using rule 630 (integerLiteral -> LONG_HEX_NUMBER .)
    OP_NE           reduce using rule 630 (integerLiteral -> LONG_HEX_NUMBER .)
    AND             reduce using rule 630 (integerLiteral -> LONG_HEX_NUMBER .)
    CARET           reduce using rule 630 (integerLiteral -> LONG_HEX_NUMBER .)
    VERTICAL        reduce using rule 630 (integerLiteral -> LONG_HEX_NUMBER .)
    OP_LAND         reduce using rule 630 (integerLiteral -> LONG_HEX_NUMBER .)
    QUES            reduce using rule 630 (integerLiteral -> LONG_HEX_NUMBER .)
    OP_LOR          reduce using rule 630 (integerLiteral -> LONG_HEX_NUMBER .)
    FRPAREN         reduce using rule 630 (integerLiteral -> LONG_HEX_NUMBER .)
    RPAREN          reduce using rule 630 (integerLiteral -> LONG_HEX_NUMBER .)
    SEMI            reduce using rule 630 (integerLiteral -> LONG_HEX_NUMBER .)
    COMMA           reduce using rule 630 (integerLiteral -> LONG_HEX_NUMBER .)
    BRPAREN         reduce using rule 630 (integerLiteral -> LONG_HEX_NUMBER .)
    COLON           reduce using rule 630 (integerLiteral -> LONG_HEX_NUMBER .)


state 191

    (624) FloatingPointLiteral -> NON_INTEGER_2 .

    FLPAREN         reduce using rule 624 (FloatingPointLiteral -> NON_INTEGER_2 .)
    DOT             reduce using rule 624 (FloatingPointLiteral -> NON_INTEGER_2 .)
    OP_INC          reduce using rule 624 (FloatingPointLiteral -> NON_INTEGER_2 .)
    OP_DEC          reduce using rule 624 (FloatingPointLiteral -> NON_INTEGER_2 .)
    MULT            reduce using rule 624 (FloatingPointLiteral -> NON_INTEGER_2 .)
    SLASH           reduce using rule 624 (FloatingPointLiteral -> NON_INTEGER_2 .)
    PERCENT         reduce using rule 624 (FloatingPointLiteral -> NON_INTEGER_2 .)
    PLUS            reduce using rule 624 (FloatingPointLiteral -> NON_INTEGER_2 .)
    DASH            reduce using rule 624 (FloatingPointLiteral -> NON_INTEGER_2 .)
    OP_SHR          reduce using rule 624 (FloatingPointLiteral -> NON_INTEGER_2 .)
    OP_SHL          reduce using rule 624 (FloatingPointLiteral -> NON_INTEGER_2 .)
    OP_SHRR         reduce using rule 624 (FloatingPointLiteral -> NON_INTEGER_2 .)
    LESS            reduce using rule 624 (FloatingPointLiteral -> NON_INTEGER_2 .)
    OP_GE           reduce using rule 624 (FloatingPointLiteral -> NON_INTEGER_2 .)
    MORE            reduce using rule 624 (FloatingPointLiteral -> NON_INTEGER_2 .)
    OP_LE           reduce using rule 624 (FloatingPointLiteral -> NON_INTEGER_2 .)
    INSTANCEOF      reduce using rule 624 (FloatingPointLiteral -> NON_INTEGER_2 .)
    OP_EQ           reduce using rule 624 (FloatingPointLiteral -> NON_INTEGER_2 .)
    OP_NE           reduce using rule 624 (FloatingPointLiteral -> NON_INTEGER_2 .)
    AND             reduce using rule 624 (FloatingPointLiteral -> NON_INTEGER_2 .)
    CARET           reduce using rule 624 (FloatingPointLiteral -> NON_INTEGER_2 .)
    VERTICAL        reduce using rule 624 (FloatingPointLiteral -> NON_INTEGER_2 .)
    OP_LAND         reduce using rule 624 (FloatingPointLiteral -> NON_INTEGER_2 .)
    QUES            reduce using rule 624 (FloatingPointLiteral -> NON_INTEGER_2 .)
    OP_LOR          reduce using rule 624 (FloatingPointLiteral -> NON_INTEGER_2 .)
    RPAREN          reduce using rule 624 (FloatingPointLiteral -> NON_INTEGER_2 .)
    COMMA           reduce using rule 624 (FloatingPointLiteral -> NON_INTEGER_2 .)
    BRPAREN         reduce using rule 624 (FloatingPointLiteral -> NON_INTEGER_2 .)
    SEMI            reduce using rule 624 (FloatingPointLiteral -> NON_INTEGER_2 .)
    ASS             reduce using rule 624 (FloatingPointLiteral -> NON_INTEGER_2 .)
    ASS_ADD         reduce using rule 624 (FloatingPointLiteral -> NON_INTEGER_2 .)
    ASS_SUB         reduce using rule 624 (FloatingPointLiteral -> NON_INTEGER_2 .)
    ASS_MUL         reduce using rule 624 (FloatingPointLiteral -> NON_INTEGER_2 .)
    ASS_DIV         reduce using rule 624 (FloatingPointLiteral -> NON_INTEGER_2 .)
    ASS_AND         reduce using rule 624 (FloatingPointLiteral -> NON_INTEGER_2 .)
    ASS_OR          reduce using rule 624 (FloatingPointLiteral -> NON_INTEGER_2 .)
    ASS_XOR         reduce using rule 624 (FloatingPointLiteral -> NON_INTEGER_2 .)
    ASS_MOD         reduce using rule 624 (FloatingPointLiteral -> NON_INTEGER_2 .)
    ASS_SHL         reduce using rule 624 (FloatingPointLiteral -> NON_INTEGER_2 .)
    ASS_SHRR        reduce using rule 624 (FloatingPointLiteral -> NON_INTEGER_2 .)
    ASS_SHR         reduce using rule 624 (FloatingPointLiteral -> NON_INTEGER_2 .)
    COLON           reduce using rule 624 (FloatingPointLiteral -> NON_INTEGER_2 .)
    FRPAREN         reduce using rule 624 (FloatingPointLiteral -> NON_INTEGER_2 .)


state 192

    (273) normalAnnotation -> annotationName LPAREN memberValuePairs_opt . RPAREN

    RPAREN          shift and go to state 433


state 193

    (279) memberValuePair -> Identifier . ASS memberValue
    (31) simpleName -> Identifier .

    ASS             shift and go to state 434
    QUES            reduce using rule 31 (simpleName -> Identifier .)
    OP_LOR          reduce using rule 31 (simpleName -> Identifier .)
    DOT             reduce using rule 31 (simpleName -> Identifier .)
    OP_LAND         reduce using rule 31 (simpleName -> Identifier .)
    VERTICAL        reduce using rule 31 (simpleName -> Identifier .)
    CARET           reduce using rule 31 (simpleName -> Identifier .)
    AND             reduce using rule 31 (simpleName -> Identifier .)
    OP_EQ           reduce using rule 31 (simpleName -> Identifier .)
    OP_NE           reduce using rule 31 (simpleName -> Identifier .)
    INSTANCEOF      reduce using rule 31 (simpleName -> Identifier .)
    LESS            reduce using rule 31 (simpleName -> Identifier .)
    OP_GE           reduce using rule 31 (simpleName -> Identifier .)
    MORE            reduce using rule 31 (simpleName -> Identifier .)
    OP_LE           reduce using rule 31 (simpleName -> Identifier .)
    OP_SHR          reduce using rule 31 (simpleName -> Identifier .)
    OP_SHL          reduce using rule 31 (simpleName -> Identifier .)
    OP_SHRR         reduce using rule 31 (simpleName -> Identifier .)
    PLUS            reduce using rule 31 (simpleName -> Identifier .)
    DASH            reduce using rule 31 (simpleName -> Identifier .)
    MULT            reduce using rule 31 (simpleName -> Identifier .)
    SLASH           reduce using rule 31 (simpleName -> Identifier .)
    PERCENT         reduce using rule 31 (simpleName -> Identifier .)
    LPAREN          reduce using rule 31 (simpleName -> Identifier .)
    FLPAREN         reduce using rule 31 (simpleName -> Identifier .)
    RPAREN          reduce using rule 31 (simpleName -> Identifier .)
    OP_INC          reduce using rule 31 (simpleName -> Identifier .)
    OP_DEC          reduce using rule 31 (simpleName -> Identifier .)


state 194

    (617) literal -> CharacterLiteral .

    FLPAREN         reduce using rule 617 (literal -> CharacterLiteral .)
    DOT             reduce using rule 617 (literal -> CharacterLiteral .)
    OP_INC          reduce using rule 617 (literal -> CharacterLiteral .)
    OP_DEC          reduce using rule 617 (literal -> CharacterLiteral .)
    ASS             reduce using rule 617 (literal -> CharacterLiteral .)
    ASS_ADD         reduce using rule 617 (literal -> CharacterLiteral .)
    ASS_SUB         reduce using rule 617 (literal -> CharacterLiteral .)
    ASS_MUL         reduce using rule 617 (literal -> CharacterLiteral .)
    ASS_DIV         reduce using rule 617 (literal -> CharacterLiteral .)
    ASS_AND         reduce using rule 617 (literal -> CharacterLiteral .)
    ASS_OR          reduce using rule 617 (literal -> CharacterLiteral .)
    ASS_XOR         reduce using rule 617 (literal -> CharacterLiteral .)
    ASS_MOD         reduce using rule 617 (literal -> CharacterLiteral .)
    ASS_SHL         reduce using rule 617 (literal -> CharacterLiteral .)
    ASS_SHRR        reduce using rule 617 (literal -> CharacterLiteral .)
    ASS_SHR         reduce using rule 617 (literal -> CharacterLiteral .)
    MULT            reduce using rule 617 (literal -> CharacterLiteral .)
    SLASH           reduce using rule 617 (literal -> CharacterLiteral .)
    PERCENT         reduce using rule 617 (literal -> CharacterLiteral .)
    PLUS            reduce using rule 617 (literal -> CharacterLiteral .)
    DASH            reduce using rule 617 (literal -> CharacterLiteral .)
    OP_SHR          reduce using rule 617 (literal -> CharacterLiteral .)
    OP_SHL          reduce using rule 617 (literal -> CharacterLiteral .)
    OP_SHRR         reduce using rule 617 (literal -> CharacterLiteral .)
    LESS            reduce using rule 617 (literal -> CharacterLiteral .)
    OP_GE           reduce using rule 617 (literal -> CharacterLiteral .)
    MORE            reduce using rule 617 (literal -> CharacterLiteral .)
    OP_LE           reduce using rule 617 (literal -> CharacterLiteral .)
    INSTANCEOF      reduce using rule 617 (literal -> CharacterLiteral .)
    OP_EQ           reduce using rule 617 (literal -> CharacterLiteral .)
    OP_NE           reduce using rule 617 (literal -> CharacterLiteral .)
    AND             reduce using rule 617 (literal -> CharacterLiteral .)
    CARET           reduce using rule 617 (literal -> CharacterLiteral .)
    VERTICAL        reduce using rule 617 (literal -> CharacterLiteral .)
    OP_LAND         reduce using rule 617 (literal -> CharacterLiteral .)
    QUES            reduce using rule 617 (literal -> CharacterLiteral .)
    OP_LOR          reduce using rule 617 (literal -> CharacterLiteral .)
    RPAREN          reduce using rule 617 (literal -> CharacterLiteral .)
    COMMA           reduce using rule 617 (literal -> CharacterLiteral .)
    BRPAREN         reduce using rule 617 (literal -> CharacterLiteral .)
    SEMI            reduce using rule 617 (literal -> CharacterLiteral .)
    COLON           reduce using rule 617 (literal -> CharacterLiteral .)
    FRPAREN         reduce using rule 617 (literal -> CharacterLiteral .)


state 195

    (39) primitiveType -> INT .

    FLPAREN         reduce using rule 39 (primitiveType -> INT .)
    Identifier      reduce using rule 39 (primitiveType -> INT .)
    DOT             reduce using rule 39 (primitiveType -> INT .)
    OP_ARRAY        reduce using rule 39 (primitiveType -> INT .)
    RPAREN          reduce using rule 39 (primitiveType -> INT .)
    VERTICAL        reduce using rule 39 (primitiveType -> INT .)


state 196

    (568) unaryExpressionNotName -> preDecrementExpression .

    MULT            reduce using rule 568 (unaryExpressionNotName -> preDecrementExpression .)
    SLASH           reduce using rule 568 (unaryExpressionNotName -> preDecrementExpression .)
    PERCENT         reduce using rule 568 (unaryExpressionNotName -> preDecrementExpression .)
    PLUS            reduce using rule 568 (unaryExpressionNotName -> preDecrementExpression .)
    DASH            reduce using rule 568 (unaryExpressionNotName -> preDecrementExpression .)
    OP_SHR          reduce using rule 568 (unaryExpressionNotName -> preDecrementExpression .)
    OP_SHL          reduce using rule 568 (unaryExpressionNotName -> preDecrementExpression .)
    OP_SHRR         reduce using rule 568 (unaryExpressionNotName -> preDecrementExpression .)
    LESS            reduce using rule 568 (unaryExpressionNotName -> preDecrementExpression .)
    OP_GE           reduce using rule 568 (unaryExpressionNotName -> preDecrementExpression .)
    MORE            reduce using rule 568 (unaryExpressionNotName -> preDecrementExpression .)
    OP_LE           reduce using rule 568 (unaryExpressionNotName -> preDecrementExpression .)
    INSTANCEOF      reduce using rule 568 (unaryExpressionNotName -> preDecrementExpression .)
    OP_EQ           reduce using rule 568 (unaryExpressionNotName -> preDecrementExpression .)
    OP_NE           reduce using rule 568 (unaryExpressionNotName -> preDecrementExpression .)
    AND             reduce using rule 568 (unaryExpressionNotName -> preDecrementExpression .)
    CARET           reduce using rule 568 (unaryExpressionNotName -> preDecrementExpression .)
    VERTICAL        reduce using rule 568 (unaryExpressionNotName -> preDecrementExpression .)
    OP_LAND         reduce using rule 568 (unaryExpressionNotName -> preDecrementExpression .)
    QUES            reduce using rule 568 (unaryExpressionNotName -> preDecrementExpression .)
    OP_LOR          reduce using rule 568 (unaryExpressionNotName -> preDecrementExpression .)
    RPAREN          reduce using rule 568 (unaryExpressionNotName -> preDecrementExpression .)
    COMMA           reduce using rule 568 (unaryExpressionNotName -> preDecrementExpression .)
    BRPAREN         reduce using rule 568 (unaryExpressionNotName -> preDecrementExpression .)
    SEMI            reduce using rule 568 (unaryExpressionNotName -> preDecrementExpression .)


state 197

    (623) FloatingPointLiteral -> NON_INTEGER_1 .

    FLPAREN         reduce using rule 623 (FloatingPointLiteral -> NON_INTEGER_1 .)
    DOT             reduce using rule 623 (FloatingPointLiteral -> NON_INTEGER_1 .)
    OP_INC          reduce using rule 623 (FloatingPointLiteral -> NON_INTEGER_1 .)
    OP_DEC          reduce using rule 623 (FloatingPointLiteral -> NON_INTEGER_1 .)
    MULT            reduce using rule 623 (FloatingPointLiteral -> NON_INTEGER_1 .)
    SLASH           reduce using rule 623 (FloatingPointLiteral -> NON_INTEGER_1 .)
    PERCENT         reduce using rule 623 (FloatingPointLiteral -> NON_INTEGER_1 .)
    PLUS            reduce using rule 623 (FloatingPointLiteral -> NON_INTEGER_1 .)
    DASH            reduce using rule 623 (FloatingPointLiteral -> NON_INTEGER_1 .)
    OP_SHR          reduce using rule 623 (FloatingPointLiteral -> NON_INTEGER_1 .)
    OP_SHL          reduce using rule 623 (FloatingPointLiteral -> NON_INTEGER_1 .)
    OP_SHRR         reduce using rule 623 (FloatingPointLiteral -> NON_INTEGER_1 .)
    LESS            reduce using rule 623 (FloatingPointLiteral -> NON_INTEGER_1 .)
    OP_GE           reduce using rule 623 (FloatingPointLiteral -> NON_INTEGER_1 .)
    MORE            reduce using rule 623 (FloatingPointLiteral -> NON_INTEGER_1 .)
    OP_LE           reduce using rule 623 (FloatingPointLiteral -> NON_INTEGER_1 .)
    INSTANCEOF      reduce using rule 623 (FloatingPointLiteral -> NON_INTEGER_1 .)
    OP_EQ           reduce using rule 623 (FloatingPointLiteral -> NON_INTEGER_1 .)
    OP_NE           reduce using rule 623 (FloatingPointLiteral -> NON_INTEGER_1 .)
    AND             reduce using rule 623 (FloatingPointLiteral -> NON_INTEGER_1 .)
    CARET           reduce using rule 623 (FloatingPointLiteral -> NON_INTEGER_1 .)
    VERTICAL        reduce using rule 623 (FloatingPointLiteral -> NON_INTEGER_1 .)
    OP_LAND         reduce using rule 623 (FloatingPointLiteral -> NON_INTEGER_1 .)
    QUES            reduce using rule 623 (FloatingPointLiteral -> NON_INTEGER_1 .)
    OP_LOR          reduce using rule 623 (FloatingPointLiteral -> NON_INTEGER_1 .)
    RPAREN          reduce using rule 623 (FloatingPointLiteral -> NON_INTEGER_1 .)
    COMMA           reduce using rule 623 (FloatingPointLiteral -> NON_INTEGER_1 .)
    BRPAREN         reduce using rule 623 (FloatingPointLiteral -> NON_INTEGER_1 .)
    SEMI            reduce using rule 623 (FloatingPointLiteral -> NON_INTEGER_1 .)
    ASS             reduce using rule 623 (FloatingPointLiteral -> NON_INTEGER_1 .)
    ASS_ADD         reduce using rule 623 (FloatingPointLiteral -> NON_INTEGER_1 .)
    ASS_SUB         reduce using rule 623 (FloatingPointLiteral -> NON_INTEGER_1 .)
    ASS_MUL         reduce using rule 623 (FloatingPointLiteral -> NON_INTEGER_1 .)
    ASS_DIV         reduce using rule 623 (FloatingPointLiteral -> NON_INTEGER_1 .)
    ASS_AND         reduce using rule 623 (FloatingPointLiteral -> NON_INTEGER_1 .)
    ASS_OR          reduce using rule 623 (FloatingPointLiteral -> NON_INTEGER_1 .)
    ASS_XOR         reduce using rule 623 (FloatingPointLiteral -> NON_INTEGER_1 .)
    ASS_MOD         reduce using rule 623 (FloatingPointLiteral -> NON_INTEGER_1 .)
    ASS_SHL         reduce using rule 623 (FloatingPointLiteral -> NON_INTEGER_1 .)
    ASS_SHRR        reduce using rule 623 (FloatingPointLiteral -> NON_INTEGER_1 .)
    ASS_SHR         reduce using rule 623 (FloatingPointLiteral -> NON_INTEGER_1 .)
    COLON           reduce using rule 623 (FloatingPointLiteral -> NON_INTEGER_1 .)
    FRPAREN         reduce using rule 623 (FloatingPointLiteral -> NON_INTEGER_1 .)


state 198

    (596) primaryNoNewArray -> classInstanceCreationExpression .

    FLPAREN         reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    DOT             reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    OP_INC          reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    OP_DEC          reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    MULT            reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    SLASH           reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    PERCENT         reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    PLUS            reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    DASH            reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    OP_SHR          reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    OP_SHL          reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    OP_SHRR         reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    LESS            reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    OP_GE           reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    MORE            reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    OP_LE           reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    INSTANCEOF      reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    OP_EQ           reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    OP_NE           reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    AND             reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    CARET           reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    VERTICAL        reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    OP_LAND         reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    QUES            reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    OP_LOR          reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    SEMI            reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    COLON           reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    COMMA           reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    RPAREN          reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    FRPAREN         reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    BRPAREN         reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    ASS             reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    ASS_ADD         reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    ASS_SUB         reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    ASS_MUL         reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    ASS_DIV         reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    ASS_AND         reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    ASS_OR          reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    ASS_XOR         reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    ASS_MOD         reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    ASS_SHL         reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    ASS_SHRR        reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    ASS_SHR         reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)


state 199

    (588) postfixExpressionNotName -> primary .
    (584) postfixExpression -> primary .
    (438) classInstanceCreationExpression -> primary . DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> primary . DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> primary . DOT Identifier
    (342) methodInvocation -> primary . DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> primary . DOT Identifier LPAREN argumentList_opt RPAREN

    MULT            reduce using rule 588 (postfixExpressionNotName -> primary .)
    SLASH           reduce using rule 588 (postfixExpressionNotName -> primary .)
    PERCENT         reduce using rule 588 (postfixExpressionNotName -> primary .)
    PLUS            reduce using rule 588 (postfixExpressionNotName -> primary .)
    DASH            reduce using rule 588 (postfixExpressionNotName -> primary .)
    OP_SHR          reduce using rule 588 (postfixExpressionNotName -> primary .)
    OP_SHL          reduce using rule 588 (postfixExpressionNotName -> primary .)
    OP_SHRR         reduce using rule 588 (postfixExpressionNotName -> primary .)
    LESS            reduce using rule 588 (postfixExpressionNotName -> primary .)
    OP_GE           reduce using rule 588 (postfixExpressionNotName -> primary .)
    MORE            reduce using rule 588 (postfixExpressionNotName -> primary .)
    OP_LE           reduce using rule 588 (postfixExpressionNotName -> primary .)
    INSTANCEOF      reduce using rule 588 (postfixExpressionNotName -> primary .)
    OP_EQ           reduce using rule 588 (postfixExpressionNotName -> primary .)
    OP_NE           reduce using rule 588 (postfixExpressionNotName -> primary .)
    AND             reduce using rule 588 (postfixExpressionNotName -> primary .)
    CARET           reduce using rule 588 (postfixExpressionNotName -> primary .)
    VERTICAL        reduce using rule 588 (postfixExpressionNotName -> primary .)
    OP_LAND         reduce using rule 588 (postfixExpressionNotName -> primary .)
    QUES            reduce using rule 588 (postfixExpressionNotName -> primary .)
    OP_LOR          reduce using rule 588 (postfixExpressionNotName -> primary .)
    COMMA           reduce using rule 588 (postfixExpressionNotName -> primary .)
    RPAREN          reduce using rule 588 (postfixExpressionNotName -> primary .)
    SEMI            reduce using rule 588 (postfixExpressionNotName -> primary .)
    BRPAREN         reduce using rule 588 (postfixExpressionNotName -> primary .)
    OP_INC          reduce using rule 584 (postfixExpression -> primary .)
    OP_DEC          reduce using rule 584 (postfixExpression -> primary .)
    DOT             shift and go to state 435


state 200

    (41) primitiveType -> CHAR .

    FLPAREN         reduce using rule 41 (primitiveType -> CHAR .)
    Identifier      reduce using rule 41 (primitiveType -> CHAR .)
    DOT             reduce using rule 41 (primitiveType -> CHAR .)
    OP_ARRAY        reduce using rule 41 (primitiveType -> CHAR .)
    RPAREN          reduce using rule 41 (primitiveType -> CHAR .)
    VERTICAL        reduce using rule 41 (primitiveType -> CHAR .)


state 201

    (572) preIncrementExpression -> OP_INC . unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    primary                        shift and go to state 386
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 436
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    name                           shift and go to state 393
    postfixExpression              shift and go to state 394
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 202

    (40) primitiveType -> LONG .

    FLPAREN         reduce using rule 40 (primitiveType -> LONG .)
    Identifier      reduce using rule 40 (primitiveType -> LONG .)
    DOT             reduce using rule 40 (primitiveType -> LONG .)
    OP_ARRAY        reduce using rule 40 (primitiveType -> LONG .)
    RPAREN          reduce using rule 40 (primitiveType -> LONG .)
    VERTICAL        reduce using rule 40 (primitiveType -> LONG .)


state 203

    (573) preDecrementExpression -> OP_DEC . unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    primary                        shift and go to state 386
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 437
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    name                           shift and go to state 393
    postfixExpression              shift and go to state 394
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 204

    (450) arrayCreationWithArrayInitializer -> NEW . primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> NEW . classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> NEW . primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> NEW . classOrInterfaceType arrayWithOrWithoutExprs
    (436) classInstanceCreationExpression -> NEW . typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> NEW . classType LPAREN argumentList_opt RPAREN classBody_opt
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (82) typeArguments -> . LESS typeArgumentList1
    (52) classType -> . classOrInterfaceType
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LESS            shift and go to state 287
    Identifier      shift and go to state 68

    qualifiedName                  shift and go to state 64
    name                           shift and go to state 123
    typeArguments                  shift and go to state 438
    classOrInterfaceType           shift and go to state 439
    primitiveType                  shift and go to state 441
    classOrInterface               shift and go to state 122
    simpleName                     shift and go to state 66
    classType                      shift and go to state 440
    genericType                    shift and go to state 127

state 205

    (482) conditionalOrExpressionNotName -> conditionalAndExpressionNotName .
    (488) conditionalAndExpressionNotName -> conditionalAndExpressionNotName . OP_LAND inclusiveOrExpression

    QUES            reduce using rule 482 (conditionalOrExpressionNotName -> conditionalAndExpressionNotName .)
    OP_LOR          reduce using rule 482 (conditionalOrExpressionNotName -> conditionalAndExpressionNotName .)
    RPAREN          reduce using rule 482 (conditionalOrExpressionNotName -> conditionalAndExpressionNotName .)
    COMMA           reduce using rule 482 (conditionalOrExpressionNotName -> conditionalAndExpressionNotName .)
    BRPAREN         reduce using rule 482 (conditionalOrExpressionNotName -> conditionalAndExpressionNotName .)
    SEMI            reduce using rule 482 (conditionalOrExpressionNotName -> conditionalAndExpressionNotName .)
    OP_LAND         shift and go to state 442


state 206

    (263) memberValue -> memberValueArrayInitializer .

    COMMA           reduce using rule 263 (memberValue -> memberValueArrayInitializer .)
    BRPAREN         reduce using rule 263 (memberValue -> memberValueArrayInitializer .)
    RPAREN          reduce using rule 263 (memberValue -> memberValueArrayInitializer .)
    SEMI            reduce using rule 263 (memberValue -> memberValueArrayInitializer .)


state 207

    (262) memberValue -> annotation .

    COMMA           reduce using rule 262 (memberValue -> annotation .)
    BRPAREN         reduce using rule 262 (memberValue -> annotation .)
    RPAREN          reduce using rule 262 (memberValue -> annotation .)
    SEMI            reduce using rule 262 (memberValue -> annotation .)


state 208

    (594) primaryNoNewArray -> literal .

    FLPAREN         reduce using rule 594 (primaryNoNewArray -> literal .)
    DOT             reduce using rule 594 (primaryNoNewArray -> literal .)
    OP_INC          reduce using rule 594 (primaryNoNewArray -> literal .)
    OP_DEC          reduce using rule 594 (primaryNoNewArray -> literal .)
    MULT            reduce using rule 594 (primaryNoNewArray -> literal .)
    SLASH           reduce using rule 594 (primaryNoNewArray -> literal .)
    PERCENT         reduce using rule 594 (primaryNoNewArray -> literal .)
    PLUS            reduce using rule 594 (primaryNoNewArray -> literal .)
    DASH            reduce using rule 594 (primaryNoNewArray -> literal .)
    OP_SHR          reduce using rule 594 (primaryNoNewArray -> literal .)
    OP_SHL          reduce using rule 594 (primaryNoNewArray -> literal .)
    OP_SHRR         reduce using rule 594 (primaryNoNewArray -> literal .)
    LESS            reduce using rule 594 (primaryNoNewArray -> literal .)
    OP_GE           reduce using rule 594 (primaryNoNewArray -> literal .)
    MORE            reduce using rule 594 (primaryNoNewArray -> literal .)
    OP_LE           reduce using rule 594 (primaryNoNewArray -> literal .)
    INSTANCEOF      reduce using rule 594 (primaryNoNewArray -> literal .)
    OP_EQ           reduce using rule 594 (primaryNoNewArray -> literal .)
    OP_NE           reduce using rule 594 (primaryNoNewArray -> literal .)
    AND             reduce using rule 594 (primaryNoNewArray -> literal .)
    CARET           reduce using rule 594 (primaryNoNewArray -> literal .)
    VERTICAL        reduce using rule 594 (primaryNoNewArray -> literal .)
    OP_LAND         reduce using rule 594 (primaryNoNewArray -> literal .)
    QUES            reduce using rule 594 (primaryNoNewArray -> literal .)
    OP_LOR          reduce using rule 594 (primaryNoNewArray -> literal .)
    SEMI            reduce using rule 594 (primaryNoNewArray -> literal .)
    COLON           reduce using rule 594 (primaryNoNewArray -> literal .)
    COMMA           reduce using rule 594 (primaryNoNewArray -> literal .)
    RPAREN          reduce using rule 594 (primaryNoNewArray -> literal .)
    FRPAREN         reduce using rule 594 (primaryNoNewArray -> literal .)
    BRPAREN         reduce using rule 594 (primaryNoNewArray -> literal .)
    ASS             reduce using rule 594 (primaryNoNewArray -> literal .)
    ASS_ADD         reduce using rule 594 (primaryNoNewArray -> literal .)
    ASS_SUB         reduce using rule 594 (primaryNoNewArray -> literal .)
    ASS_MUL         reduce using rule 594 (primaryNoNewArray -> literal .)
    ASS_DIV         reduce using rule 594 (primaryNoNewArray -> literal .)
    ASS_AND         reduce using rule 594 (primaryNoNewArray -> literal .)
    ASS_OR          reduce using rule 594 (primaryNoNewArray -> literal .)
    ASS_XOR         reduce using rule 594 (primaryNoNewArray -> literal .)
    ASS_MOD         reduce using rule 594 (primaryNoNewArray -> literal .)
    ASS_SHL         reduce using rule 594 (primaryNoNewArray -> literal .)
    ASS_SHRR        reduce using rule 594 (primaryNoNewArray -> literal .)
    ASS_SHR         reduce using rule 594 (primaryNoNewArray -> literal .)


state 209

    (580) unaryExpressionNotPlusMinusNotName -> TILDE . unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    primary                        shift and go to state 386
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 443
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    name                           shift and go to state 393
    postfixExpression              shift and go to state 394
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 210

    (276) memberValuePairs_opt -> empty .

    RPAREN          reduce using rule 276 (memberValuePairs_opt -> empty .)


state 211

    (282) singleMemberAnnotationMemberValue -> memberValue .

    RPAREN          reduce using rule 282 (singleMemberAnnotationMemberValue -> memberValue .)


state 212

    (536) shiftExpressionNotName -> additiveExpressionNotName .
    (547) additiveExpressionNotName -> additiveExpressionNotName . PLUS multiplicativeExpression
    (548) additiveExpressionNotName -> additiveExpressionNotName . DASH multiplicativeExpression

    OP_SHR          reduce using rule 536 (shiftExpressionNotName -> additiveExpressionNotName .)
    OP_SHL          reduce using rule 536 (shiftExpressionNotName -> additiveExpressionNotName .)
    OP_SHRR         reduce using rule 536 (shiftExpressionNotName -> additiveExpressionNotName .)
    LESS            reduce using rule 536 (shiftExpressionNotName -> additiveExpressionNotName .)
    OP_GE           reduce using rule 536 (shiftExpressionNotName -> additiveExpressionNotName .)
    MORE            reduce using rule 536 (shiftExpressionNotName -> additiveExpressionNotName .)
    OP_LE           reduce using rule 536 (shiftExpressionNotName -> additiveExpressionNotName .)
    INSTANCEOF      reduce using rule 536 (shiftExpressionNotName -> additiveExpressionNotName .)
    OP_EQ           reduce using rule 536 (shiftExpressionNotName -> additiveExpressionNotName .)
    OP_NE           reduce using rule 536 (shiftExpressionNotName -> additiveExpressionNotName .)
    AND             reduce using rule 536 (shiftExpressionNotName -> additiveExpressionNotName .)
    CARET           reduce using rule 536 (shiftExpressionNotName -> additiveExpressionNotName .)
    VERTICAL        reduce using rule 536 (shiftExpressionNotName -> additiveExpressionNotName .)
    OP_LAND         reduce using rule 536 (shiftExpressionNotName -> additiveExpressionNotName .)
    QUES            reduce using rule 536 (shiftExpressionNotName -> additiveExpressionNotName .)
    OP_LOR          reduce using rule 536 (shiftExpressionNotName -> additiveExpressionNotName .)
    RPAREN          reduce using rule 536 (shiftExpressionNotName -> additiveExpressionNotName .)
    COMMA           reduce using rule 536 (shiftExpressionNotName -> additiveExpressionNotName .)
    BRPAREN         reduce using rule 536 (shiftExpressionNotName -> additiveExpressionNotName .)
    SEMI            reduce using rule 536 (shiftExpressionNotName -> additiveExpressionNotName .)
    PLUS            shift and go to state 444
    DASH            shift and go to state 445


state 213

    (260) memberValue -> conditionalExpressionNotName .

    COMMA           reduce using rule 260 (memberValue -> conditionalExpressionNotName .)
    BRPAREN         reduce using rule 260 (memberValue -> conditionalExpressionNotName .)
    RPAREN          reduce using rule 260 (memberValue -> conditionalExpressionNotName .)
    SEMI            reduce using rule 260 (memberValue -> conditionalExpressionNotName .)


state 214

    (616) literal -> FloatingPointLiteral .

    FLPAREN         reduce using rule 616 (literal -> FloatingPointLiteral .)
    DOT             reduce using rule 616 (literal -> FloatingPointLiteral .)
    OP_INC          reduce using rule 616 (literal -> FloatingPointLiteral .)
    OP_DEC          reduce using rule 616 (literal -> FloatingPointLiteral .)
    ASS             reduce using rule 616 (literal -> FloatingPointLiteral .)
    ASS_ADD         reduce using rule 616 (literal -> FloatingPointLiteral .)
    ASS_SUB         reduce using rule 616 (literal -> FloatingPointLiteral .)
    ASS_MUL         reduce using rule 616 (literal -> FloatingPointLiteral .)
    ASS_DIV         reduce using rule 616 (literal -> FloatingPointLiteral .)
    ASS_AND         reduce using rule 616 (literal -> FloatingPointLiteral .)
    ASS_OR          reduce using rule 616 (literal -> FloatingPointLiteral .)
    ASS_XOR         reduce using rule 616 (literal -> FloatingPointLiteral .)
    ASS_MOD         reduce using rule 616 (literal -> FloatingPointLiteral .)
    ASS_SHL         reduce using rule 616 (literal -> FloatingPointLiteral .)
    ASS_SHRR        reduce using rule 616 (literal -> FloatingPointLiteral .)
    ASS_SHR         reduce using rule 616 (literal -> FloatingPointLiteral .)
    MULT            reduce using rule 616 (literal -> FloatingPointLiteral .)
    SLASH           reduce using rule 616 (literal -> FloatingPointLiteral .)
    PERCENT         reduce using rule 616 (literal -> FloatingPointLiteral .)
    PLUS            reduce using rule 616 (literal -> FloatingPointLiteral .)
    DASH            reduce using rule 616 (literal -> FloatingPointLiteral .)
    OP_SHR          reduce using rule 616 (literal -> FloatingPointLiteral .)
    OP_SHL          reduce using rule 616 (literal -> FloatingPointLiteral .)
    OP_SHRR         reduce using rule 616 (literal -> FloatingPointLiteral .)
    LESS            reduce using rule 616 (literal -> FloatingPointLiteral .)
    OP_GE           reduce using rule 616 (literal -> FloatingPointLiteral .)
    MORE            reduce using rule 616 (literal -> FloatingPointLiteral .)
    OP_LE           reduce using rule 616 (literal -> FloatingPointLiteral .)
    INSTANCEOF      reduce using rule 616 (literal -> FloatingPointLiteral .)
    OP_EQ           reduce using rule 616 (literal -> FloatingPointLiteral .)
    OP_NE           reduce using rule 616 (literal -> FloatingPointLiteral .)
    AND             reduce using rule 616 (literal -> FloatingPointLiteral .)
    CARET           reduce using rule 616 (literal -> FloatingPointLiteral .)
    VERTICAL        reduce using rule 616 (literal -> FloatingPointLiteral .)
    OP_LAND         reduce using rule 616 (literal -> FloatingPointLiteral .)
    QUES            reduce using rule 616 (literal -> FloatingPointLiteral .)
    OP_LOR          reduce using rule 616 (literal -> FloatingPointLiteral .)
    RPAREN          reduce using rule 616 (literal -> FloatingPointLiteral .)
    COMMA           reduce using rule 616 (literal -> FloatingPointLiteral .)
    BRPAREN         reduce using rule 616 (literal -> FloatingPointLiteral .)
    SEMI            reduce using rule 616 (literal -> FloatingPointLiteral .)
    COLON           reduce using rule 616 (literal -> FloatingPointLiteral .)
    FRPAREN         reduce using rule 616 (literal -> FloatingPointLiteral .)


state 215

    (37) primitiveType -> BYTE .

    FLPAREN         reduce using rule 37 (primitiveType -> BYTE .)
    Identifier      reduce using rule 37 (primitiveType -> BYTE .)
    DOT             reduce using rule 37 (primitiveType -> BYTE .)
    OP_ARRAY        reduce using rule 37 (primitiveType -> BYTE .)
    RPAREN          reduce using rule 37 (primitiveType -> BYTE .)
    VERTICAL        reduce using rule 37 (primitiveType -> BYTE .)


state 216

    (622) booleanLiteral -> FALSE .

    FLPAREN         reduce using rule 622 (booleanLiteral -> FALSE .)
    DOT             reduce using rule 622 (booleanLiteral -> FALSE .)
    OP_INC          reduce using rule 622 (booleanLiteral -> FALSE .)
    OP_DEC          reduce using rule 622 (booleanLiteral -> FALSE .)
    ASS             reduce using rule 622 (booleanLiteral -> FALSE .)
    ASS_ADD         reduce using rule 622 (booleanLiteral -> FALSE .)
    ASS_SUB         reduce using rule 622 (booleanLiteral -> FALSE .)
    ASS_MUL         reduce using rule 622 (booleanLiteral -> FALSE .)
    ASS_DIV         reduce using rule 622 (booleanLiteral -> FALSE .)
    ASS_AND         reduce using rule 622 (booleanLiteral -> FALSE .)
    ASS_OR          reduce using rule 622 (booleanLiteral -> FALSE .)
    ASS_XOR         reduce using rule 622 (booleanLiteral -> FALSE .)
    ASS_MOD         reduce using rule 622 (booleanLiteral -> FALSE .)
    ASS_SHL         reduce using rule 622 (booleanLiteral -> FALSE .)
    ASS_SHRR        reduce using rule 622 (booleanLiteral -> FALSE .)
    ASS_SHR         reduce using rule 622 (booleanLiteral -> FALSE .)
    MULT            reduce using rule 622 (booleanLiteral -> FALSE .)
    SLASH           reduce using rule 622 (booleanLiteral -> FALSE .)
    PERCENT         reduce using rule 622 (booleanLiteral -> FALSE .)
    PLUS            reduce using rule 622 (booleanLiteral -> FALSE .)
    DASH            reduce using rule 622 (booleanLiteral -> FALSE .)
    OP_SHR          reduce using rule 622 (booleanLiteral -> FALSE .)
    OP_SHL          reduce using rule 622 (booleanLiteral -> FALSE .)
    OP_SHRR         reduce using rule 622 (booleanLiteral -> FALSE .)
    LESS            reduce using rule 622 (booleanLiteral -> FALSE .)
    OP_GE           reduce using rule 622 (booleanLiteral -> FALSE .)
    MORE            reduce using rule 622 (booleanLiteral -> FALSE .)
    OP_LE           reduce using rule 622 (booleanLiteral -> FALSE .)
    INSTANCEOF      reduce using rule 622 (booleanLiteral -> FALSE .)
    OP_EQ           reduce using rule 622 (booleanLiteral -> FALSE .)
    OP_NE           reduce using rule 622 (booleanLiteral -> FALSE .)
    AND             reduce using rule 622 (booleanLiteral -> FALSE .)
    CARET           reduce using rule 622 (booleanLiteral -> FALSE .)
    VERTICAL        reduce using rule 622 (booleanLiteral -> FALSE .)
    OP_LAND         reduce using rule 622 (booleanLiteral -> FALSE .)
    QUES            reduce using rule 622 (booleanLiteral -> FALSE .)
    OP_LOR          reduce using rule 622 (booleanLiteral -> FALSE .)
    SEMI            reduce using rule 622 (booleanLiteral -> FALSE .)
    COLON           reduce using rule 622 (booleanLiteral -> FALSE .)
    COMMA           reduce using rule 622 (booleanLiteral -> FALSE .)
    RPAREN          reduce using rule 622 (booleanLiteral -> FALSE .)
    FRPAREN         reduce using rule 622 (booleanLiteral -> FALSE .)
    BRPAREN         reduce using rule 622 (booleanLiteral -> FALSE .)


state 217

    (515) instanceOfExpressionNotName -> relationalExpressionNotName .
    (524) relationalExpressionNotName -> relationalExpressionNotName . LESS shiftExpression
    (525) relationalExpressionNotName -> relationalExpressionNotName . OP_GE shiftExpression
    (526) relationalExpressionNotName -> relationalExpressionNotName . MORE shiftExpression
    (527) relationalExpressionNotName -> relationalExpressionNotName . OP_LE shiftExpression

    INSTANCEOF      reduce using rule 515 (instanceOfExpressionNotName -> relationalExpressionNotName .)
    OP_EQ           reduce using rule 515 (instanceOfExpressionNotName -> relationalExpressionNotName .)
    OP_NE           reduce using rule 515 (instanceOfExpressionNotName -> relationalExpressionNotName .)
    AND             reduce using rule 515 (instanceOfExpressionNotName -> relationalExpressionNotName .)
    CARET           reduce using rule 515 (instanceOfExpressionNotName -> relationalExpressionNotName .)
    VERTICAL        reduce using rule 515 (instanceOfExpressionNotName -> relationalExpressionNotName .)
    OP_LAND         reduce using rule 515 (instanceOfExpressionNotName -> relationalExpressionNotName .)
    QUES            reduce using rule 515 (instanceOfExpressionNotName -> relationalExpressionNotName .)
    OP_LOR          reduce using rule 515 (instanceOfExpressionNotName -> relationalExpressionNotName .)
    RPAREN          reduce using rule 515 (instanceOfExpressionNotName -> relationalExpressionNotName .)
    COMMA           reduce using rule 515 (instanceOfExpressionNotName -> relationalExpressionNotName .)
    BRPAREN         reduce using rule 515 (instanceOfExpressionNotName -> relationalExpressionNotName .)
    SEMI            reduce using rule 515 (instanceOfExpressionNotName -> relationalExpressionNotName .)
    LESS            shift and go to state 446
    OP_GE           shift and go to state 448
    MORE            shift and go to state 449
    OP_LE           shift and go to state 447


state 218

    (618) literal -> StringLiteral .

    FLPAREN         reduce using rule 618 (literal -> StringLiteral .)
    DOT             reduce using rule 618 (literal -> StringLiteral .)
    OP_INC          reduce using rule 618 (literal -> StringLiteral .)
    OP_DEC          reduce using rule 618 (literal -> StringLiteral .)
    ASS             reduce using rule 618 (literal -> StringLiteral .)
    ASS_ADD         reduce using rule 618 (literal -> StringLiteral .)
    ASS_SUB         reduce using rule 618 (literal -> StringLiteral .)
    ASS_MUL         reduce using rule 618 (literal -> StringLiteral .)
    ASS_DIV         reduce using rule 618 (literal -> StringLiteral .)
    ASS_AND         reduce using rule 618 (literal -> StringLiteral .)
    ASS_OR          reduce using rule 618 (literal -> StringLiteral .)
    ASS_XOR         reduce using rule 618 (literal -> StringLiteral .)
    ASS_MOD         reduce using rule 618 (literal -> StringLiteral .)
    ASS_SHL         reduce using rule 618 (literal -> StringLiteral .)
    ASS_SHRR        reduce using rule 618 (literal -> StringLiteral .)
    ASS_SHR         reduce using rule 618 (literal -> StringLiteral .)
    MULT            reduce using rule 618 (literal -> StringLiteral .)
    SLASH           reduce using rule 618 (literal -> StringLiteral .)
    PERCENT         reduce using rule 618 (literal -> StringLiteral .)
    PLUS            reduce using rule 618 (literal -> StringLiteral .)
    DASH            reduce using rule 618 (literal -> StringLiteral .)
    OP_SHR          reduce using rule 618 (literal -> StringLiteral .)
    OP_SHL          reduce using rule 618 (literal -> StringLiteral .)
    OP_SHRR         reduce using rule 618 (literal -> StringLiteral .)
    LESS            reduce using rule 618 (literal -> StringLiteral .)
    OP_GE           reduce using rule 618 (literal -> StringLiteral .)
    MORE            reduce using rule 618 (literal -> StringLiteral .)
    OP_LE           reduce using rule 618 (literal -> StringLiteral .)
    INSTANCEOF      reduce using rule 618 (literal -> StringLiteral .)
    OP_EQ           reduce using rule 618 (literal -> StringLiteral .)
    OP_NE           reduce using rule 618 (literal -> StringLiteral .)
    AND             reduce using rule 618 (literal -> StringLiteral .)
    CARET           reduce using rule 618 (literal -> StringLiteral .)
    VERTICAL        reduce using rule 618 (literal -> StringLiteral .)
    OP_LAND         reduce using rule 618 (literal -> StringLiteral .)
    QUES            reduce using rule 618 (literal -> StringLiteral .)
    OP_LOR          reduce using rule 618 (literal -> StringLiteral .)
    RPAREN          reduce using rule 618 (literal -> StringLiteral .)
    COMMA           reduce using rule 618 (literal -> StringLiteral .)
    BRPAREN         reduce using rule 618 (literal -> StringLiteral .)
    SEMI            reduce using rule 618 (literal -> StringLiteral .)
    COLON           reduce using rule 618 (literal -> StringLiteral .)
    FRPAREN         reduce using rule 618 (literal -> StringLiteral .)


state 219

    (606) primaryNoNewArray -> primitiveType . arrays DOT CLASS
    (607) primaryNoNewArray -> primitiveType . DOT CLASS
    (59) arrays -> . array_loop
    (60) array_loop -> . array
    (61) array_loop -> . array_loop array
    (58) array -> . FLPAREN FRPAREN

    DOT             shift and go to state 452
    FLPAREN         shift and go to state 451

    arrays                         shift and go to state 450
    array                          shift and go to state 407
    array_loop                     shift and go to state 413

state 220

    (508) equalityExpressionNotName -> instanceOfExpressionNotName .
    (516) instanceOfExpressionNotName -> instanceOfExpressionNotName . INSTANCEOF referenceType

    OP_EQ           reduce using rule 508 (equalityExpressionNotName -> instanceOfExpressionNotName .)
    OP_NE           reduce using rule 508 (equalityExpressionNotName -> instanceOfExpressionNotName .)
    AND             reduce using rule 508 (equalityExpressionNotName -> instanceOfExpressionNotName .)
    CARET           reduce using rule 508 (equalityExpressionNotName -> instanceOfExpressionNotName .)
    VERTICAL        reduce using rule 508 (equalityExpressionNotName -> instanceOfExpressionNotName .)
    OP_LAND         reduce using rule 508 (equalityExpressionNotName -> instanceOfExpressionNotName .)
    QUES            reduce using rule 508 (equalityExpressionNotName -> instanceOfExpressionNotName .)
    OP_LOR          reduce using rule 508 (equalityExpressionNotName -> instanceOfExpressionNotName .)
    COMMA           reduce using rule 508 (equalityExpressionNotName -> instanceOfExpressionNotName .)
    BRPAREN         reduce using rule 508 (equalityExpressionNotName -> instanceOfExpressionNotName .)
    RPAREN          reduce using rule 508 (equalityExpressionNotName -> instanceOfExpressionNotName .)
    SEMI            reduce using rule 508 (equalityExpressionNotName -> instanceOfExpressionNotName .)
    INSTANCEOF      shift and go to state 453


state 221

    (35) primitiveType -> BOOLEAN .

    FLPAREN         reduce using rule 35 (primitiveType -> BOOLEAN .)
    Identifier      reduce using rule 35 (primitiveType -> BOOLEAN .)
    DOT             reduce using rule 35 (primitiveType -> BOOLEAN .)
    OP_ARRAY        reduce using rule 35 (primitiveType -> BOOLEAN .)
    RPAREN          reduce using rule 35 (primitiveType -> BOOLEAN .)
    VERTICAL        reduce using rule 35 (primitiveType -> BOOLEAN .)


state 222

    (546) additiveExpressionNotName -> multiplicativeExpressionNotName .
    (556) multiplicativeExpressionNotName -> multiplicativeExpressionNotName . MULT unaryExpression
    (557) multiplicativeExpressionNotName -> multiplicativeExpressionNotName . SLASH unaryExpression
    (558) multiplicativeExpressionNotName -> multiplicativeExpressionNotName . PERCENT unaryExpression

    PLUS            reduce using rule 546 (additiveExpressionNotName -> multiplicativeExpressionNotName .)
    DASH            reduce using rule 546 (additiveExpressionNotName -> multiplicativeExpressionNotName .)
    OP_SHR          reduce using rule 546 (additiveExpressionNotName -> multiplicativeExpressionNotName .)
    OP_SHL          reduce using rule 546 (additiveExpressionNotName -> multiplicativeExpressionNotName .)
    OP_SHRR         reduce using rule 546 (additiveExpressionNotName -> multiplicativeExpressionNotName .)
    LESS            reduce using rule 546 (additiveExpressionNotName -> multiplicativeExpressionNotName .)
    OP_GE           reduce using rule 546 (additiveExpressionNotName -> multiplicativeExpressionNotName .)
    MORE            reduce using rule 546 (additiveExpressionNotName -> multiplicativeExpressionNotName .)
    OP_LE           reduce using rule 546 (additiveExpressionNotName -> multiplicativeExpressionNotName .)
    INSTANCEOF      reduce using rule 546 (additiveExpressionNotName -> multiplicativeExpressionNotName .)
    OP_EQ           reduce using rule 546 (additiveExpressionNotName -> multiplicativeExpressionNotName .)
    OP_NE           reduce using rule 546 (additiveExpressionNotName -> multiplicativeExpressionNotName .)
    AND             reduce using rule 546 (additiveExpressionNotName -> multiplicativeExpressionNotName .)
    CARET           reduce using rule 546 (additiveExpressionNotName -> multiplicativeExpressionNotName .)
    VERTICAL        reduce using rule 546 (additiveExpressionNotName -> multiplicativeExpressionNotName .)
    OP_LAND         reduce using rule 546 (additiveExpressionNotName -> multiplicativeExpressionNotName .)
    QUES            reduce using rule 546 (additiveExpressionNotName -> multiplicativeExpressionNotName .)
    OP_LOR          reduce using rule 546 (additiveExpressionNotName -> multiplicativeExpressionNotName .)
    RPAREN          reduce using rule 546 (additiveExpressionNotName -> multiplicativeExpressionNotName .)
    COMMA           reduce using rule 546 (additiveExpressionNotName -> multiplicativeExpressionNotName .)
    BRPAREN         reduce using rule 546 (additiveExpressionNotName -> multiplicativeExpressionNotName .)
    SEMI            reduce using rule 546 (additiveExpressionNotName -> multiplicativeExpressionNotName .)
    MULT            shift and go to state 456
    SLASH           shift and go to state 455
    PERCENT         shift and go to state 454


state 223

    (497) exclusiveOrExpressionNotName -> andExpressionNotName .
    (503) andExpressionNotName -> andExpressionNotName . AND equalityExpression

    CARET           reduce using rule 497 (exclusiveOrExpressionNotName -> andExpressionNotName .)
    VERTICAL        reduce using rule 497 (exclusiveOrExpressionNotName -> andExpressionNotName .)
    OP_LAND         reduce using rule 497 (exclusiveOrExpressionNotName -> andExpressionNotName .)
    QUES            reduce using rule 497 (exclusiveOrExpressionNotName -> andExpressionNotName .)
    OP_LOR          reduce using rule 497 (exclusiveOrExpressionNotName -> andExpressionNotName .)
    RPAREN          reduce using rule 497 (exclusiveOrExpressionNotName -> andExpressionNotName .)
    COMMA           reduce using rule 497 (exclusiveOrExpressionNotName -> andExpressionNotName .)
    BRPAREN         reduce using rule 497 (exclusiveOrExpressionNotName -> andExpressionNotName .)
    SEMI            reduce using rule 497 (exclusiveOrExpressionNotName -> andExpressionNotName .)
    AND             shift and go to state 457


state 224

    (628) FloatingPointLiteral -> NON_INTEGER_6 .

    FLPAREN         reduce using rule 628 (FloatingPointLiteral -> NON_INTEGER_6 .)
    DOT             reduce using rule 628 (FloatingPointLiteral -> NON_INTEGER_6 .)
    OP_INC          reduce using rule 628 (FloatingPointLiteral -> NON_INTEGER_6 .)
    OP_DEC          reduce using rule 628 (FloatingPointLiteral -> NON_INTEGER_6 .)
    MULT            reduce using rule 628 (FloatingPointLiteral -> NON_INTEGER_6 .)
    SLASH           reduce using rule 628 (FloatingPointLiteral -> NON_INTEGER_6 .)
    PERCENT         reduce using rule 628 (FloatingPointLiteral -> NON_INTEGER_6 .)
    PLUS            reduce using rule 628 (FloatingPointLiteral -> NON_INTEGER_6 .)
    DASH            reduce using rule 628 (FloatingPointLiteral -> NON_INTEGER_6 .)
    OP_SHR          reduce using rule 628 (FloatingPointLiteral -> NON_INTEGER_6 .)
    OP_SHL          reduce using rule 628 (FloatingPointLiteral -> NON_INTEGER_6 .)
    OP_SHRR         reduce using rule 628 (FloatingPointLiteral -> NON_INTEGER_6 .)
    LESS            reduce using rule 628 (FloatingPointLiteral -> NON_INTEGER_6 .)
    OP_GE           reduce using rule 628 (FloatingPointLiteral -> NON_INTEGER_6 .)
    MORE            reduce using rule 628 (FloatingPointLiteral -> NON_INTEGER_6 .)
    OP_LE           reduce using rule 628 (FloatingPointLiteral -> NON_INTEGER_6 .)
    INSTANCEOF      reduce using rule 628 (FloatingPointLiteral -> NON_INTEGER_6 .)
    OP_EQ           reduce using rule 628 (FloatingPointLiteral -> NON_INTEGER_6 .)
    OP_NE           reduce using rule 628 (FloatingPointLiteral -> NON_INTEGER_6 .)
    AND             reduce using rule 628 (FloatingPointLiteral -> NON_INTEGER_6 .)
    CARET           reduce using rule 628 (FloatingPointLiteral -> NON_INTEGER_6 .)
    VERTICAL        reduce using rule 628 (FloatingPointLiteral -> NON_INTEGER_6 .)
    OP_LAND         reduce using rule 628 (FloatingPointLiteral -> NON_INTEGER_6 .)
    QUES            reduce using rule 628 (FloatingPointLiteral -> NON_INTEGER_6 .)
    OP_LOR          reduce using rule 628 (FloatingPointLiteral -> NON_INTEGER_6 .)
    RPAREN          reduce using rule 628 (FloatingPointLiteral -> NON_INTEGER_6 .)
    COMMA           reduce using rule 628 (FloatingPointLiteral -> NON_INTEGER_6 .)
    BRPAREN         reduce using rule 628 (FloatingPointLiteral -> NON_INTEGER_6 .)
    SEMI            reduce using rule 628 (FloatingPointLiteral -> NON_INTEGER_6 .)
    ASS             reduce using rule 628 (FloatingPointLiteral -> NON_INTEGER_6 .)
    ASS_ADD         reduce using rule 628 (FloatingPointLiteral -> NON_INTEGER_6 .)
    ASS_SUB         reduce using rule 628 (FloatingPointLiteral -> NON_INTEGER_6 .)
    ASS_MUL         reduce using rule 628 (FloatingPointLiteral -> NON_INTEGER_6 .)
    ASS_DIV         reduce using rule 628 (FloatingPointLiteral -> NON_INTEGER_6 .)
    ASS_AND         reduce using rule 628 (FloatingPointLiteral -> NON_INTEGER_6 .)
    ASS_OR          reduce using rule 628 (FloatingPointLiteral -> NON_INTEGER_6 .)
    ASS_XOR         reduce using rule 628 (FloatingPointLiteral -> NON_INTEGER_6 .)
    ASS_MOD         reduce using rule 628 (FloatingPointLiteral -> NON_INTEGER_6 .)
    ASS_SHL         reduce using rule 628 (FloatingPointLiteral -> NON_INTEGER_6 .)
    ASS_SHRR        reduce using rule 628 (FloatingPointLiteral -> NON_INTEGER_6 .)
    ASS_SHR         reduce using rule 628 (FloatingPointLiteral -> NON_INTEGER_6 .)
    COLON           reduce using rule 628 (FloatingPointLiteral -> NON_INTEGER_6 .)
    FRPAREN         reduce using rule 628 (FloatingPointLiteral -> NON_INTEGER_6 .)


state 225

    (626) FloatingPointLiteral -> NON_INTEGER_4 .

    FLPAREN         reduce using rule 626 (FloatingPointLiteral -> NON_INTEGER_4 .)
    DOT             reduce using rule 626 (FloatingPointLiteral -> NON_INTEGER_4 .)
    OP_INC          reduce using rule 626 (FloatingPointLiteral -> NON_INTEGER_4 .)
    OP_DEC          reduce using rule 626 (FloatingPointLiteral -> NON_INTEGER_4 .)
    MULT            reduce using rule 626 (FloatingPointLiteral -> NON_INTEGER_4 .)
    SLASH           reduce using rule 626 (FloatingPointLiteral -> NON_INTEGER_4 .)
    PERCENT         reduce using rule 626 (FloatingPointLiteral -> NON_INTEGER_4 .)
    PLUS            reduce using rule 626 (FloatingPointLiteral -> NON_INTEGER_4 .)
    DASH            reduce using rule 626 (FloatingPointLiteral -> NON_INTEGER_4 .)
    OP_SHR          reduce using rule 626 (FloatingPointLiteral -> NON_INTEGER_4 .)
    OP_SHL          reduce using rule 626 (FloatingPointLiteral -> NON_INTEGER_4 .)
    OP_SHRR         reduce using rule 626 (FloatingPointLiteral -> NON_INTEGER_4 .)
    LESS            reduce using rule 626 (FloatingPointLiteral -> NON_INTEGER_4 .)
    OP_GE           reduce using rule 626 (FloatingPointLiteral -> NON_INTEGER_4 .)
    MORE            reduce using rule 626 (FloatingPointLiteral -> NON_INTEGER_4 .)
    OP_LE           reduce using rule 626 (FloatingPointLiteral -> NON_INTEGER_4 .)
    INSTANCEOF      reduce using rule 626 (FloatingPointLiteral -> NON_INTEGER_4 .)
    OP_EQ           reduce using rule 626 (FloatingPointLiteral -> NON_INTEGER_4 .)
    OP_NE           reduce using rule 626 (FloatingPointLiteral -> NON_INTEGER_4 .)
    AND             reduce using rule 626 (FloatingPointLiteral -> NON_INTEGER_4 .)
    CARET           reduce using rule 626 (FloatingPointLiteral -> NON_INTEGER_4 .)
    VERTICAL        reduce using rule 626 (FloatingPointLiteral -> NON_INTEGER_4 .)
    OP_LAND         reduce using rule 626 (FloatingPointLiteral -> NON_INTEGER_4 .)
    QUES            reduce using rule 626 (FloatingPointLiteral -> NON_INTEGER_4 .)
    OP_LOR          reduce using rule 626 (FloatingPointLiteral -> NON_INTEGER_4 .)
    RPAREN          reduce using rule 626 (FloatingPointLiteral -> NON_INTEGER_4 .)
    COMMA           reduce using rule 626 (FloatingPointLiteral -> NON_INTEGER_4 .)
    BRPAREN         reduce using rule 626 (FloatingPointLiteral -> NON_INTEGER_4 .)
    SEMI            reduce using rule 626 (FloatingPointLiteral -> NON_INTEGER_4 .)
    ASS             reduce using rule 626 (FloatingPointLiteral -> NON_INTEGER_4 .)
    ASS_ADD         reduce using rule 626 (FloatingPointLiteral -> NON_INTEGER_4 .)
    ASS_SUB         reduce using rule 626 (FloatingPointLiteral -> NON_INTEGER_4 .)
    ASS_MUL         reduce using rule 626 (FloatingPointLiteral -> NON_INTEGER_4 .)
    ASS_DIV         reduce using rule 626 (FloatingPointLiteral -> NON_INTEGER_4 .)
    ASS_AND         reduce using rule 626 (FloatingPointLiteral -> NON_INTEGER_4 .)
    ASS_OR          reduce using rule 626 (FloatingPointLiteral -> NON_INTEGER_4 .)
    ASS_XOR         reduce using rule 626 (FloatingPointLiteral -> NON_INTEGER_4 .)
    ASS_MOD         reduce using rule 626 (FloatingPointLiteral -> NON_INTEGER_4 .)
    ASS_SHL         reduce using rule 626 (FloatingPointLiteral -> NON_INTEGER_4 .)
    ASS_SHRR        reduce using rule 626 (FloatingPointLiteral -> NON_INTEGER_4 .)
    ASS_SHR         reduce using rule 626 (FloatingPointLiteral -> NON_INTEGER_4 .)
    COLON           reduce using rule 626 (FloatingPointLiteral -> NON_INTEGER_4 .)
    FRPAREN         reduce using rule 626 (FloatingPointLiteral -> NON_INTEGER_4 .)


state 226

    (627) FloatingPointLiteral -> NON_INTEGER_5 .

    FLPAREN         reduce using rule 627 (FloatingPointLiteral -> NON_INTEGER_5 .)
    DOT             reduce using rule 627 (FloatingPointLiteral -> NON_INTEGER_5 .)
    OP_INC          reduce using rule 627 (FloatingPointLiteral -> NON_INTEGER_5 .)
    OP_DEC          reduce using rule 627 (FloatingPointLiteral -> NON_INTEGER_5 .)
    MULT            reduce using rule 627 (FloatingPointLiteral -> NON_INTEGER_5 .)
    SLASH           reduce using rule 627 (FloatingPointLiteral -> NON_INTEGER_5 .)
    PERCENT         reduce using rule 627 (FloatingPointLiteral -> NON_INTEGER_5 .)
    PLUS            reduce using rule 627 (FloatingPointLiteral -> NON_INTEGER_5 .)
    DASH            reduce using rule 627 (FloatingPointLiteral -> NON_INTEGER_5 .)
    OP_SHR          reduce using rule 627 (FloatingPointLiteral -> NON_INTEGER_5 .)
    OP_SHL          reduce using rule 627 (FloatingPointLiteral -> NON_INTEGER_5 .)
    OP_SHRR         reduce using rule 627 (FloatingPointLiteral -> NON_INTEGER_5 .)
    LESS            reduce using rule 627 (FloatingPointLiteral -> NON_INTEGER_5 .)
    OP_GE           reduce using rule 627 (FloatingPointLiteral -> NON_INTEGER_5 .)
    MORE            reduce using rule 627 (FloatingPointLiteral -> NON_INTEGER_5 .)
    OP_LE           reduce using rule 627 (FloatingPointLiteral -> NON_INTEGER_5 .)
    INSTANCEOF      reduce using rule 627 (FloatingPointLiteral -> NON_INTEGER_5 .)
    OP_EQ           reduce using rule 627 (FloatingPointLiteral -> NON_INTEGER_5 .)
    OP_NE           reduce using rule 627 (FloatingPointLiteral -> NON_INTEGER_5 .)
    AND             reduce using rule 627 (FloatingPointLiteral -> NON_INTEGER_5 .)
    CARET           reduce using rule 627 (FloatingPointLiteral -> NON_INTEGER_5 .)
    VERTICAL        reduce using rule 627 (FloatingPointLiteral -> NON_INTEGER_5 .)
    OP_LAND         reduce using rule 627 (FloatingPointLiteral -> NON_INTEGER_5 .)
    QUES            reduce using rule 627 (FloatingPointLiteral -> NON_INTEGER_5 .)
    OP_LOR          reduce using rule 627 (FloatingPointLiteral -> NON_INTEGER_5 .)
    RPAREN          reduce using rule 627 (FloatingPointLiteral -> NON_INTEGER_5 .)
    COMMA           reduce using rule 627 (FloatingPointLiteral -> NON_INTEGER_5 .)
    BRPAREN         reduce using rule 627 (FloatingPointLiteral -> NON_INTEGER_5 .)
    SEMI            reduce using rule 627 (FloatingPointLiteral -> NON_INTEGER_5 .)
    ASS             reduce using rule 627 (FloatingPointLiteral -> NON_INTEGER_5 .)
    ASS_ADD         reduce using rule 627 (FloatingPointLiteral -> NON_INTEGER_5 .)
    ASS_SUB         reduce using rule 627 (FloatingPointLiteral -> NON_INTEGER_5 .)
    ASS_MUL         reduce using rule 627 (FloatingPointLiteral -> NON_INTEGER_5 .)
    ASS_DIV         reduce using rule 627 (FloatingPointLiteral -> NON_INTEGER_5 .)
    ASS_AND         reduce using rule 627 (FloatingPointLiteral -> NON_INTEGER_5 .)
    ASS_OR          reduce using rule 627 (FloatingPointLiteral -> NON_INTEGER_5 .)
    ASS_XOR         reduce using rule 627 (FloatingPointLiteral -> NON_INTEGER_5 .)
    ASS_MOD         reduce using rule 627 (FloatingPointLiteral -> NON_INTEGER_5 .)
    ASS_SHL         reduce using rule 627 (FloatingPointLiteral -> NON_INTEGER_5 .)
    ASS_SHRR        reduce using rule 627 (FloatingPointLiteral -> NON_INTEGER_5 .)
    ASS_SHR         reduce using rule 627 (FloatingPointLiteral -> NON_INTEGER_5 .)
    COLON           reduce using rule 627 (FloatingPointLiteral -> NON_INTEGER_5 .)
    FRPAREN         reduce using rule 627 (FloatingPointLiteral -> NON_INTEGER_5 .)


state 227

    (592) primary -> arrayCreationWithArrayInitializer .
    (449) arrayAccess -> arrayCreationWithArrayInitializer . FLPAREN expression FRPAREN

    DOT             reduce using rule 592 (primary -> arrayCreationWithArrayInitializer .)
    OP_INC          reduce using rule 592 (primary -> arrayCreationWithArrayInitializer .)
    OP_DEC          reduce using rule 592 (primary -> arrayCreationWithArrayInitializer .)
    ASS             reduce using rule 592 (primary -> arrayCreationWithArrayInitializer .)
    ASS_ADD         reduce using rule 592 (primary -> arrayCreationWithArrayInitializer .)
    ASS_SUB         reduce using rule 592 (primary -> arrayCreationWithArrayInitializer .)
    ASS_MUL         reduce using rule 592 (primary -> arrayCreationWithArrayInitializer .)
    ASS_DIV         reduce using rule 592 (primary -> arrayCreationWithArrayInitializer .)
    ASS_AND         reduce using rule 592 (primary -> arrayCreationWithArrayInitializer .)
    ASS_OR          reduce using rule 592 (primary -> arrayCreationWithArrayInitializer .)
    ASS_XOR         reduce using rule 592 (primary -> arrayCreationWithArrayInitializer .)
    ASS_MOD         reduce using rule 592 (primary -> arrayCreationWithArrayInitializer .)
    ASS_SHL         reduce using rule 592 (primary -> arrayCreationWithArrayInitializer .)
    ASS_SHRR        reduce using rule 592 (primary -> arrayCreationWithArrayInitializer .)
    ASS_SHR         reduce using rule 592 (primary -> arrayCreationWithArrayInitializer .)
    MULT            reduce using rule 592 (primary -> arrayCreationWithArrayInitializer .)
    SLASH           reduce using rule 592 (primary -> arrayCreationWithArrayInitializer .)
    PERCENT         reduce using rule 592 (primary -> arrayCreationWithArrayInitializer .)
    PLUS            reduce using rule 592 (primary -> arrayCreationWithArrayInitializer .)
    DASH            reduce using rule 592 (primary -> arrayCreationWithArrayInitializer .)
    OP_SHR          reduce using rule 592 (primary -> arrayCreationWithArrayInitializer .)
    OP_SHL          reduce using rule 592 (primary -> arrayCreationWithArrayInitializer .)
    OP_SHRR         reduce using rule 592 (primary -> arrayCreationWithArrayInitializer .)
    LESS            reduce using rule 592 (primary -> arrayCreationWithArrayInitializer .)
    OP_GE           reduce using rule 592 (primary -> arrayCreationWithArrayInitializer .)
    MORE            reduce using rule 592 (primary -> arrayCreationWithArrayInitializer .)
    OP_LE           reduce using rule 592 (primary -> arrayCreationWithArrayInitializer .)
    INSTANCEOF      reduce using rule 592 (primary -> arrayCreationWithArrayInitializer .)
    OP_EQ           reduce using rule 592 (primary -> arrayCreationWithArrayInitializer .)
    OP_NE           reduce using rule 592 (primary -> arrayCreationWithArrayInitializer .)
    AND             reduce using rule 592 (primary -> arrayCreationWithArrayInitializer .)
    CARET           reduce using rule 592 (primary -> arrayCreationWithArrayInitializer .)
    VERTICAL        reduce using rule 592 (primary -> arrayCreationWithArrayInitializer .)
    OP_LAND         reduce using rule 592 (primary -> arrayCreationWithArrayInitializer .)
    QUES            reduce using rule 592 (primary -> arrayCreationWithArrayInitializer .)
    OP_LOR          reduce using rule 592 (primary -> arrayCreationWithArrayInitializer .)
    SEMI            reduce using rule 592 (primary -> arrayCreationWithArrayInitializer .)
    COLON           reduce using rule 592 (primary -> arrayCreationWithArrayInitializer .)
    COMMA           reduce using rule 592 (primary -> arrayCreationWithArrayInitializer .)
    RPAREN          reduce using rule 592 (primary -> arrayCreationWithArrayInitializer .)
    FRPAREN         reduce using rule 592 (primary -> arrayCreationWithArrayInitializer .)
    BRPAREN         reduce using rule 592 (primary -> arrayCreationWithArrayInitializer .)
    FLPAREN         shift and go to state 458


state 228

    (625) FloatingPointLiteral -> NON_INTEGER_3 .

    FLPAREN         reduce using rule 625 (FloatingPointLiteral -> NON_INTEGER_3 .)
    DOT             reduce using rule 625 (FloatingPointLiteral -> NON_INTEGER_3 .)
    OP_INC          reduce using rule 625 (FloatingPointLiteral -> NON_INTEGER_3 .)
    OP_DEC          reduce using rule 625 (FloatingPointLiteral -> NON_INTEGER_3 .)
    MULT            reduce using rule 625 (FloatingPointLiteral -> NON_INTEGER_3 .)
    SLASH           reduce using rule 625 (FloatingPointLiteral -> NON_INTEGER_3 .)
    PERCENT         reduce using rule 625 (FloatingPointLiteral -> NON_INTEGER_3 .)
    PLUS            reduce using rule 625 (FloatingPointLiteral -> NON_INTEGER_3 .)
    DASH            reduce using rule 625 (FloatingPointLiteral -> NON_INTEGER_3 .)
    OP_SHR          reduce using rule 625 (FloatingPointLiteral -> NON_INTEGER_3 .)
    OP_SHL          reduce using rule 625 (FloatingPointLiteral -> NON_INTEGER_3 .)
    OP_SHRR         reduce using rule 625 (FloatingPointLiteral -> NON_INTEGER_3 .)
    LESS            reduce using rule 625 (FloatingPointLiteral -> NON_INTEGER_3 .)
    OP_GE           reduce using rule 625 (FloatingPointLiteral -> NON_INTEGER_3 .)
    MORE            reduce using rule 625 (FloatingPointLiteral -> NON_INTEGER_3 .)
    OP_LE           reduce using rule 625 (FloatingPointLiteral -> NON_INTEGER_3 .)
    INSTANCEOF      reduce using rule 625 (FloatingPointLiteral -> NON_INTEGER_3 .)
    OP_EQ           reduce using rule 625 (FloatingPointLiteral -> NON_INTEGER_3 .)
    OP_NE           reduce using rule 625 (FloatingPointLiteral -> NON_INTEGER_3 .)
    AND             reduce using rule 625 (FloatingPointLiteral -> NON_INTEGER_3 .)
    CARET           reduce using rule 625 (FloatingPointLiteral -> NON_INTEGER_3 .)
    VERTICAL        reduce using rule 625 (FloatingPointLiteral -> NON_INTEGER_3 .)
    OP_LAND         reduce using rule 625 (FloatingPointLiteral -> NON_INTEGER_3 .)
    QUES            reduce using rule 625 (FloatingPointLiteral -> NON_INTEGER_3 .)
    OP_LOR          reduce using rule 625 (FloatingPointLiteral -> NON_INTEGER_3 .)
    RPAREN          reduce using rule 625 (FloatingPointLiteral -> NON_INTEGER_3 .)
    COMMA           reduce using rule 625 (FloatingPointLiteral -> NON_INTEGER_3 .)
    BRPAREN         reduce using rule 625 (FloatingPointLiteral -> NON_INTEGER_3 .)
    SEMI            reduce using rule 625 (FloatingPointLiteral -> NON_INTEGER_3 .)
    ASS             reduce using rule 625 (FloatingPointLiteral -> NON_INTEGER_3 .)
    ASS_ADD         reduce using rule 625 (FloatingPointLiteral -> NON_INTEGER_3 .)
    ASS_SUB         reduce using rule 625 (FloatingPointLiteral -> NON_INTEGER_3 .)
    ASS_MUL         reduce using rule 625 (FloatingPointLiteral -> NON_INTEGER_3 .)
    ASS_DIV         reduce using rule 625 (FloatingPointLiteral -> NON_INTEGER_3 .)
    ASS_AND         reduce using rule 625 (FloatingPointLiteral -> NON_INTEGER_3 .)
    ASS_OR          reduce using rule 625 (FloatingPointLiteral -> NON_INTEGER_3 .)
    ASS_XOR         reduce using rule 625 (FloatingPointLiteral -> NON_INTEGER_3 .)
    ASS_MOD         reduce using rule 625 (FloatingPointLiteral -> NON_INTEGER_3 .)
    ASS_SHL         reduce using rule 625 (FloatingPointLiteral -> NON_INTEGER_3 .)
    ASS_SHRR        reduce using rule 625 (FloatingPointLiteral -> NON_INTEGER_3 .)
    ASS_SHR         reduce using rule 625 (FloatingPointLiteral -> NON_INTEGER_3 .)
    COLON           reduce using rule 625 (FloatingPointLiteral -> NON_INTEGER_3 .)
    FRPAREN         reduce using rule 625 (FloatingPointLiteral -> NON_INTEGER_3 .)


state 229

    (555) multiplicativeExpressionNotName -> unaryExpressionNotName .

    MULT            reduce using rule 555 (multiplicativeExpressionNotName -> unaryExpressionNotName .)
    SLASH           reduce using rule 555 (multiplicativeExpressionNotName -> unaryExpressionNotName .)
    PERCENT         reduce using rule 555 (multiplicativeExpressionNotName -> unaryExpressionNotName .)
    PLUS            reduce using rule 555 (multiplicativeExpressionNotName -> unaryExpressionNotName .)
    DASH            reduce using rule 555 (multiplicativeExpressionNotName -> unaryExpressionNotName .)
    OP_SHR          reduce using rule 555 (multiplicativeExpressionNotName -> unaryExpressionNotName .)
    OP_SHL          reduce using rule 555 (multiplicativeExpressionNotName -> unaryExpressionNotName .)
    OP_SHRR         reduce using rule 555 (multiplicativeExpressionNotName -> unaryExpressionNotName .)
    LESS            reduce using rule 555 (multiplicativeExpressionNotName -> unaryExpressionNotName .)
    OP_GE           reduce using rule 555 (multiplicativeExpressionNotName -> unaryExpressionNotName .)
    MORE            reduce using rule 555 (multiplicativeExpressionNotName -> unaryExpressionNotName .)
    OP_LE           reduce using rule 555 (multiplicativeExpressionNotName -> unaryExpressionNotName .)
    INSTANCEOF      reduce using rule 555 (multiplicativeExpressionNotName -> unaryExpressionNotName .)
    OP_EQ           reduce using rule 555 (multiplicativeExpressionNotName -> unaryExpressionNotName .)
    OP_NE           reduce using rule 555 (multiplicativeExpressionNotName -> unaryExpressionNotName .)
    AND             reduce using rule 555 (multiplicativeExpressionNotName -> unaryExpressionNotName .)
    CARET           reduce using rule 555 (multiplicativeExpressionNotName -> unaryExpressionNotName .)
    VERTICAL        reduce using rule 555 (multiplicativeExpressionNotName -> unaryExpressionNotName .)
    OP_LAND         reduce using rule 555 (multiplicativeExpressionNotName -> unaryExpressionNotName .)
    QUES            reduce using rule 555 (multiplicativeExpressionNotName -> unaryExpressionNotName .)
    OP_LOR          reduce using rule 555 (multiplicativeExpressionNotName -> unaryExpressionNotName .)
    SEMI            reduce using rule 555 (multiplicativeExpressionNotName -> unaryExpressionNotName .)
    RPAREN          reduce using rule 555 (multiplicativeExpressionNotName -> unaryExpressionNotName .)
    COMMA           reduce using rule 555 (multiplicativeExpressionNotName -> unaryExpressionNotName .)
    BRPAREN         reduce using rule 555 (multiplicativeExpressionNotName -> unaryExpressionNotName .)


state 230

    (620) literal -> NULL .

    FLPAREN         reduce using rule 620 (literal -> NULL .)
    DOT             reduce using rule 620 (literal -> NULL .)
    OP_INC          reduce using rule 620 (literal -> NULL .)
    OP_DEC          reduce using rule 620 (literal -> NULL .)
    ASS             reduce using rule 620 (literal -> NULL .)
    ASS_ADD         reduce using rule 620 (literal -> NULL .)
    ASS_SUB         reduce using rule 620 (literal -> NULL .)
    ASS_MUL         reduce using rule 620 (literal -> NULL .)
    ASS_DIV         reduce using rule 620 (literal -> NULL .)
    ASS_AND         reduce using rule 620 (literal -> NULL .)
    ASS_OR          reduce using rule 620 (literal -> NULL .)
    ASS_XOR         reduce using rule 620 (literal -> NULL .)
    ASS_MOD         reduce using rule 620 (literal -> NULL .)
    ASS_SHL         reduce using rule 620 (literal -> NULL .)
    ASS_SHRR        reduce using rule 620 (literal -> NULL .)
    ASS_SHR         reduce using rule 620 (literal -> NULL .)
    MULT            reduce using rule 620 (literal -> NULL .)
    SLASH           reduce using rule 620 (literal -> NULL .)
    PERCENT         reduce using rule 620 (literal -> NULL .)
    PLUS            reduce using rule 620 (literal -> NULL .)
    DASH            reduce using rule 620 (literal -> NULL .)
    OP_SHR          reduce using rule 620 (literal -> NULL .)
    OP_SHL          reduce using rule 620 (literal -> NULL .)
    OP_SHRR         reduce using rule 620 (literal -> NULL .)
    LESS            reduce using rule 620 (literal -> NULL .)
    OP_GE           reduce using rule 620 (literal -> NULL .)
    MORE            reduce using rule 620 (literal -> NULL .)
    OP_LE           reduce using rule 620 (literal -> NULL .)
    INSTANCEOF      reduce using rule 620 (literal -> NULL .)
    OP_EQ           reduce using rule 620 (literal -> NULL .)
    OP_NE           reduce using rule 620 (literal -> NULL .)
    AND             reduce using rule 620 (literal -> NULL .)
    CARET           reduce using rule 620 (literal -> NULL .)
    VERTICAL        reduce using rule 620 (literal -> NULL .)
    OP_LAND         reduce using rule 620 (literal -> NULL .)
    QUES            reduce using rule 620 (literal -> NULL .)
    OP_LOR          reduce using rule 620 (literal -> NULL .)
    RPAREN          reduce using rule 620 (literal -> NULL .)
    COMMA           reduce using rule 620 (literal -> NULL .)
    BRPAREN         reduce using rule 620 (literal -> NULL .)
    SEMI            reduce using rule 620 (literal -> NULL .)
    COLON           reduce using rule 620 (literal -> NULL .)
    FRPAREN         reduce using rule 620 (literal -> NULL .)


state 231

    (492) inclusiveOrExpressionNotName -> exclusiveOrExpressionNotName .
    (498) exclusiveOrExpressionNotName -> exclusiveOrExpressionNotName . CARET andExpression

    VERTICAL        reduce using rule 492 (inclusiveOrExpressionNotName -> exclusiveOrExpressionNotName .)
    OP_LAND         reduce using rule 492 (inclusiveOrExpressionNotName -> exclusiveOrExpressionNotName .)
    QUES            reduce using rule 492 (inclusiveOrExpressionNotName -> exclusiveOrExpressionNotName .)
    OP_LOR          reduce using rule 492 (inclusiveOrExpressionNotName -> exclusiveOrExpressionNotName .)
    RPAREN          reduce using rule 492 (inclusiveOrExpressionNotName -> exclusiveOrExpressionNotName .)
    SEMI            reduce using rule 492 (inclusiveOrExpressionNotName -> exclusiveOrExpressionNotName .)
    COMMA           reduce using rule 492 (inclusiveOrExpressionNotName -> exclusiveOrExpressionNotName .)
    BRPAREN         reduce using rule 492 (inclusiveOrExpressionNotName -> exclusiveOrExpressionNotName .)
    CARET           shift and go to state 459


state 232

    (593) primary -> arrayCreationWithoutArrayInitializer .

    DOT             reduce using rule 593 (primary -> arrayCreationWithoutArrayInitializer .)
    OP_INC          reduce using rule 593 (primary -> arrayCreationWithoutArrayInitializer .)
    OP_DEC          reduce using rule 593 (primary -> arrayCreationWithoutArrayInitializer .)
    ASS             reduce using rule 593 (primary -> arrayCreationWithoutArrayInitializer .)
    ASS_ADD         reduce using rule 593 (primary -> arrayCreationWithoutArrayInitializer .)
    ASS_SUB         reduce using rule 593 (primary -> arrayCreationWithoutArrayInitializer .)
    ASS_MUL         reduce using rule 593 (primary -> arrayCreationWithoutArrayInitializer .)
    ASS_DIV         reduce using rule 593 (primary -> arrayCreationWithoutArrayInitializer .)
    ASS_AND         reduce using rule 593 (primary -> arrayCreationWithoutArrayInitializer .)
    ASS_OR          reduce using rule 593 (primary -> arrayCreationWithoutArrayInitializer .)
    ASS_XOR         reduce using rule 593 (primary -> arrayCreationWithoutArrayInitializer .)
    ASS_MOD         reduce using rule 593 (primary -> arrayCreationWithoutArrayInitializer .)
    ASS_SHL         reduce using rule 593 (primary -> arrayCreationWithoutArrayInitializer .)
    ASS_SHRR        reduce using rule 593 (primary -> arrayCreationWithoutArrayInitializer .)
    ASS_SHR         reduce using rule 593 (primary -> arrayCreationWithoutArrayInitializer .)
    MULT            reduce using rule 593 (primary -> arrayCreationWithoutArrayInitializer .)
    SLASH           reduce using rule 593 (primary -> arrayCreationWithoutArrayInitializer .)
    PERCENT         reduce using rule 593 (primary -> arrayCreationWithoutArrayInitializer .)
    PLUS            reduce using rule 593 (primary -> arrayCreationWithoutArrayInitializer .)
    DASH            reduce using rule 593 (primary -> arrayCreationWithoutArrayInitializer .)
    OP_SHR          reduce using rule 593 (primary -> arrayCreationWithoutArrayInitializer .)
    OP_SHL          reduce using rule 593 (primary -> arrayCreationWithoutArrayInitializer .)
    OP_SHRR         reduce using rule 593 (primary -> arrayCreationWithoutArrayInitializer .)
    LESS            reduce using rule 593 (primary -> arrayCreationWithoutArrayInitializer .)
    OP_GE           reduce using rule 593 (primary -> arrayCreationWithoutArrayInitializer .)
    MORE            reduce using rule 593 (primary -> arrayCreationWithoutArrayInitializer .)
    OP_LE           reduce using rule 593 (primary -> arrayCreationWithoutArrayInitializer .)
    INSTANCEOF      reduce using rule 593 (primary -> arrayCreationWithoutArrayInitializer .)
    OP_EQ           reduce using rule 593 (primary -> arrayCreationWithoutArrayInitializer .)
    OP_NE           reduce using rule 593 (primary -> arrayCreationWithoutArrayInitializer .)
    AND             reduce using rule 593 (primary -> arrayCreationWithoutArrayInitializer .)
    CARET           reduce using rule 593 (primary -> arrayCreationWithoutArrayInitializer .)
    VERTICAL        reduce using rule 593 (primary -> arrayCreationWithoutArrayInitializer .)
    OP_LAND         reduce using rule 593 (primary -> arrayCreationWithoutArrayInitializer .)
    QUES            reduce using rule 593 (primary -> arrayCreationWithoutArrayInitializer .)
    OP_LOR          reduce using rule 593 (primary -> arrayCreationWithoutArrayInitializer .)
    SEMI            reduce using rule 593 (primary -> arrayCreationWithoutArrayInitializer .)
    COLON           reduce using rule 593 (primary -> arrayCreationWithoutArrayInitializer .)
    COMMA           reduce using rule 593 (primary -> arrayCreationWithoutArrayInitializer .)
    RPAREN          reduce using rule 593 (primary -> arrayCreationWithoutArrayInitializer .)
    FRPAREN         reduce using rule 593 (primary -> arrayCreationWithoutArrayInitializer .)
    BRPAREN         reduce using rule 593 (primary -> arrayCreationWithoutArrayInitializer .)


state 233

    (523) relationalExpressionNotName -> shiftExpressionNotName .
    (537) shiftExpressionNotName -> shiftExpressionNotName . OP_SHR additiveExpression
    (538) shiftExpressionNotName -> shiftExpressionNotName . OP_SHL additiveExpression
    (539) shiftExpressionNotName -> shiftExpressionNotName . OP_SHRR additiveExpression

    LESS            reduce using rule 523 (relationalExpressionNotName -> shiftExpressionNotName .)
    OP_GE           reduce using rule 523 (relationalExpressionNotName -> shiftExpressionNotName .)
    MORE            reduce using rule 523 (relationalExpressionNotName -> shiftExpressionNotName .)
    OP_LE           reduce using rule 523 (relationalExpressionNotName -> shiftExpressionNotName .)
    INSTANCEOF      reduce using rule 523 (relationalExpressionNotName -> shiftExpressionNotName .)
    OP_EQ           reduce using rule 523 (relationalExpressionNotName -> shiftExpressionNotName .)
    OP_NE           reduce using rule 523 (relationalExpressionNotName -> shiftExpressionNotName .)
    AND             reduce using rule 523 (relationalExpressionNotName -> shiftExpressionNotName .)
    CARET           reduce using rule 523 (relationalExpressionNotName -> shiftExpressionNotName .)
    VERTICAL        reduce using rule 523 (relationalExpressionNotName -> shiftExpressionNotName .)
    OP_LAND         reduce using rule 523 (relationalExpressionNotName -> shiftExpressionNotName .)
    QUES            reduce using rule 523 (relationalExpressionNotName -> shiftExpressionNotName .)
    OP_LOR          reduce using rule 523 (relationalExpressionNotName -> shiftExpressionNotName .)
    COMMA           reduce using rule 523 (relationalExpressionNotName -> shiftExpressionNotName .)
    BRPAREN         reduce using rule 523 (relationalExpressionNotName -> shiftExpressionNotName .)
    RPAREN          reduce using rule 523 (relationalExpressionNotName -> shiftExpressionNotName .)
    SEMI            reduce using rule 523 (relationalExpressionNotName -> shiftExpressionNotName .)
    OP_SHR          shift and go to state 462
    OP_SHL          shift and go to state 460
    OP_SHRR         shift and go to state 461


state 234

    (599) primaryNoNewArray -> arrayAccess .

    FLPAREN         reduce using rule 599 (primaryNoNewArray -> arrayAccess .)
    DOT             reduce using rule 599 (primaryNoNewArray -> arrayAccess .)
    OP_INC          reduce using rule 599 (primaryNoNewArray -> arrayAccess .)
    OP_DEC          reduce using rule 599 (primaryNoNewArray -> arrayAccess .)
    MULT            reduce using rule 599 (primaryNoNewArray -> arrayAccess .)
    SLASH           reduce using rule 599 (primaryNoNewArray -> arrayAccess .)
    PERCENT         reduce using rule 599 (primaryNoNewArray -> arrayAccess .)
    PLUS            reduce using rule 599 (primaryNoNewArray -> arrayAccess .)
    DASH            reduce using rule 599 (primaryNoNewArray -> arrayAccess .)
    OP_SHR          reduce using rule 599 (primaryNoNewArray -> arrayAccess .)
    OP_SHL          reduce using rule 599 (primaryNoNewArray -> arrayAccess .)
    OP_SHRR         reduce using rule 599 (primaryNoNewArray -> arrayAccess .)
    LESS            reduce using rule 599 (primaryNoNewArray -> arrayAccess .)
    OP_GE           reduce using rule 599 (primaryNoNewArray -> arrayAccess .)
    MORE            reduce using rule 599 (primaryNoNewArray -> arrayAccess .)
    OP_LE           reduce using rule 599 (primaryNoNewArray -> arrayAccess .)
    INSTANCEOF      reduce using rule 599 (primaryNoNewArray -> arrayAccess .)
    OP_EQ           reduce using rule 599 (primaryNoNewArray -> arrayAccess .)
    OP_NE           reduce using rule 599 (primaryNoNewArray -> arrayAccess .)
    AND             reduce using rule 599 (primaryNoNewArray -> arrayAccess .)
    CARET           reduce using rule 599 (primaryNoNewArray -> arrayAccess .)
    VERTICAL        reduce using rule 599 (primaryNoNewArray -> arrayAccess .)
    OP_LAND         reduce using rule 599 (primaryNoNewArray -> arrayAccess .)
    QUES            reduce using rule 599 (primaryNoNewArray -> arrayAccess .)
    OP_LOR          reduce using rule 599 (primaryNoNewArray -> arrayAccess .)
    SEMI            reduce using rule 599 (primaryNoNewArray -> arrayAccess .)
    COLON           reduce using rule 599 (primaryNoNewArray -> arrayAccess .)
    COMMA           reduce using rule 599 (primaryNoNewArray -> arrayAccess .)
    RPAREN          reduce using rule 599 (primaryNoNewArray -> arrayAccess .)
    FRPAREN         reduce using rule 599 (primaryNoNewArray -> arrayAccess .)
    BRPAREN         reduce using rule 599 (primaryNoNewArray -> arrayAccess .)
    ASS             reduce using rule 599 (primaryNoNewArray -> arrayAccess .)
    ASS_ADD         reduce using rule 599 (primaryNoNewArray -> arrayAccess .)
    ASS_SUB         reduce using rule 599 (primaryNoNewArray -> arrayAccess .)
    ASS_MUL         reduce using rule 599 (primaryNoNewArray -> arrayAccess .)
    ASS_DIV         reduce using rule 599 (primaryNoNewArray -> arrayAccess .)
    ASS_AND         reduce using rule 599 (primaryNoNewArray -> arrayAccess .)
    ASS_OR          reduce using rule 599 (primaryNoNewArray -> arrayAccess .)
    ASS_XOR         reduce using rule 599 (primaryNoNewArray -> arrayAccess .)
    ASS_MOD         reduce using rule 599 (primaryNoNewArray -> arrayAccess .)
    ASS_SHL         reduce using rule 599 (primaryNoNewArray -> arrayAccess .)
    ASS_SHRR        reduce using rule 599 (primaryNoNewArray -> arrayAccess .)
    ASS_SHR         reduce using rule 599 (primaryNoNewArray -> arrayAccess .)


state 235

    (487) conditionalAndExpressionNotName -> inclusiveOrExpressionNotName .
    (493) inclusiveOrExpressionNotName -> inclusiveOrExpressionNotName . VERTICAL exclusiveOrExpression

    OP_LAND         reduce using rule 487 (conditionalAndExpressionNotName -> inclusiveOrExpressionNotName .)
    QUES            reduce using rule 487 (conditionalAndExpressionNotName -> inclusiveOrExpressionNotName .)
    OP_LOR          reduce using rule 487 (conditionalAndExpressionNotName -> inclusiveOrExpressionNotName .)
    SEMI            reduce using rule 487 (conditionalAndExpressionNotName -> inclusiveOrExpressionNotName .)
    COMMA           reduce using rule 487 (conditionalAndExpressionNotName -> inclusiveOrExpressionNotName .)
    BRPAREN         reduce using rule 487 (conditionalAndExpressionNotName -> inclusiveOrExpressionNotName .)
    RPAREN          reduce using rule 487 (conditionalAndExpressionNotName -> inclusiveOrExpressionNotName .)
    VERTICAL        shift and go to state 463


state 236

    (277) memberValuePairs -> memberValuePair .

    COMMA           reduce using rule 277 (memberValuePairs -> memberValuePair .)
    RPAREN          reduce using rule 277 (memberValuePairs -> memberValuePair .)


state 237

    (477) conditionalExpressionNotName -> conditionalOrExpressionNotName .
    (478) conditionalExpressionNotName -> conditionalOrExpressionNotName . QUES expression COLON conditionalExpression
    (483) conditionalOrExpressionNotName -> conditionalOrExpressionNotName . OP_LOR conditionalAndExpression

    COMMA           reduce using rule 477 (conditionalExpressionNotName -> conditionalOrExpressionNotName .)
    BRPAREN         reduce using rule 477 (conditionalExpressionNotName -> conditionalOrExpressionNotName .)
    RPAREN          reduce using rule 477 (conditionalExpressionNotName -> conditionalOrExpressionNotName .)
    SEMI            reduce using rule 477 (conditionalExpressionNotName -> conditionalOrExpressionNotName .)
    QUES            shift and go to state 465
    OP_LOR          shift and go to state 464


state 238

    (608) castExpression -> LPAREN . primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> LPAREN . name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> LPAREN . name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> LPAREN . name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> LPAREN . name arrays RPAREN unaryExpressionNotPlusMinus
    (600) primaryNoNewArray -> LPAREN . name RPAREN
    (601) primaryNoNewArray -> LPAREN . expressionNotName RPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (457) expressionNotName -> . assignmentExpressionNotName
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (460) assignmentExpressionNotName -> . assignment
    (461) assignmentExpressionNotName -> . conditionalExpressionNotName
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (477) conditionalExpressionNotName -> . conditionalOrExpressionNotName
    (478) conditionalExpressionNotName -> . conditionalOrExpressionNotName QUES expression COLON conditionalExpression
    (479) conditionalExpressionNotName -> . name QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (482) conditionalOrExpressionNotName -> . conditionalAndExpressionNotName
    (483) conditionalOrExpressionNotName -> . conditionalOrExpressionNotName OP_LOR conditionalAndExpression
    (484) conditionalOrExpressionNotName -> . name OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (487) conditionalAndExpressionNotName -> . inclusiveOrExpressionNotName
    (488) conditionalAndExpressionNotName -> . conditionalAndExpressionNotName OP_LAND inclusiveOrExpression
    (489) conditionalAndExpressionNotName -> . name OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (492) inclusiveOrExpressionNotName -> . exclusiveOrExpressionNotName
    (493) inclusiveOrExpressionNotName -> . inclusiveOrExpressionNotName VERTICAL exclusiveOrExpression
    (494) inclusiveOrExpressionNotName -> . name VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (497) exclusiveOrExpressionNotName -> . andExpressionNotName
    (498) exclusiveOrExpressionNotName -> . exclusiveOrExpressionNotName CARET andExpression
    (499) exclusiveOrExpressionNotName -> . name CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (502) andExpressionNotName -> . equalityExpressionNotName
    (503) andExpressionNotName -> . andExpressionNotName AND equalityExpression
    (504) andExpressionNotName -> . name AND equalityExpression
    (508) equalityExpressionNotName -> . instanceOfExpressionNotName
    (509) equalityExpressionNotName -> . equalityExpressionNotName OP_EQ instanceOfExpression
    (510) equalityExpressionNotName -> . equalityExpressionNotName OP_NE instanceOfExpression
    (511) equalityExpressionNotName -> . name OP_EQ instanceOfExpression
    (512) equalityExpressionNotName -> . name OP_NE instanceOfExpression
    (515) instanceOfExpressionNotName -> . relationalExpressionNotName
    (516) instanceOfExpressionNotName -> . instanceOfExpressionNotName INSTANCEOF referenceType
    (517) instanceOfExpressionNotName -> . name INSTANCEOF referenceType
    (523) relationalExpressionNotName -> . shiftExpressionNotName
    (524) relationalExpressionNotName -> . relationalExpressionNotName LESS shiftExpression
    (525) relationalExpressionNotName -> . relationalExpressionNotName OP_GE shiftExpression
    (526) relationalExpressionNotName -> . relationalExpressionNotName MORE shiftExpression
    (527) relationalExpressionNotName -> . relationalExpressionNotName OP_LE shiftExpression
    (528) relationalExpressionNotName -> . name LESS shiftExpression
    (529) relationalExpressionNotName -> . name OP_GE shiftExpression
    (530) relationalExpressionNotName -> . name MORE shiftExpression
    (531) relationalExpressionNotName -> . name OP_LE shiftExpression
    (536) shiftExpressionNotName -> . additiveExpressionNotName
    (537) shiftExpressionNotName -> . shiftExpressionNotName OP_SHR additiveExpression
    (538) shiftExpressionNotName -> . shiftExpressionNotName OP_SHL additiveExpression
    (539) shiftExpressionNotName -> . shiftExpressionNotName OP_SHRR additiveExpression
    (540) shiftExpressionNotName -> . name OP_SHR additiveExpression
    (541) shiftExpressionNotName -> . name OP_SHL additiveExpression
    (542) shiftExpressionNotName -> . name OP_SHRR additiveExpression
    (546) additiveExpressionNotName -> . multiplicativeExpressionNotName
    (547) additiveExpressionNotName -> . additiveExpressionNotName PLUS multiplicativeExpression
    (548) additiveExpressionNotName -> . additiveExpressionNotName DASH multiplicativeExpression
    (549) additiveExpressionNotName -> . name PLUS multiplicativeExpression
    (550) additiveExpressionNotName -> . name DASH multiplicativeExpression
    (555) multiplicativeExpressionNotName -> . unaryExpressionNotName
    (556) multiplicativeExpressionNotName -> . multiplicativeExpressionNotName MULT unaryExpression
    (557) multiplicativeExpressionNotName -> . multiplicativeExpressionNotName SLASH unaryExpression
    (558) multiplicativeExpressionNotName -> . multiplicativeExpressionNotName PERCENT unaryExpression
    (559) multiplicativeExpressionNotName -> . name MULT unaryExpression
    (560) multiplicativeExpressionNotName -> . name SLASH unaryExpression
    (561) multiplicativeExpressionNotName -> . name PERCENT unaryExpression
    (567) unaryExpressionNotName -> . preIncrementExpression
    (568) unaryExpressionNotName -> . preDecrementExpression
    (569) unaryExpressionNotName -> . PLUS unaryExpression
    (570) unaryExpressionNotName -> . DASH unaryExpression
    (571) unaryExpressionNotName -> . unaryExpressionNotPlusMinusNotName
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (580) unaryExpressionNotPlusMinusNotName -> . TILDE unaryExpression
    (581) unaryExpressionNotPlusMinusNotName -> . EXCLAMATION unaryExpression
    (582) unaryExpressionNotPlusMinusNotName -> . postfixExpressionNotName
    (583) unaryExpressionNotPlusMinusNotName -> . castExpression
    (588) postfixExpressionNotName -> . primary
    (589) postfixExpressionNotName -> . postIncrementExpression
    (590) postfixExpressionNotName -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    Identifier      shift and go to state 68
    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 174
    DASH            shift and go to state 240
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 209
    EXCLAMATION     shift and go to state 169

    exclusiveOrExpressionNotName   shift and go to state 231
    qualifiedName                  shift and go to state 64
    fieldAccess                    shift and go to state 189
    multiplicativeExpressionNotName shift and go to state 222
    arrayCreationWithArrayInitializer shift and go to state 227
    postfixExpressionNotName       shift and go to state 239
    primary                        shift and go to state 469
    unaryExpressionNotName         shift and go to state 229
    inclusiveOrExpressionNotName   shift and go to state 235
    preIncrementExpression         shift and go to state 172
    conditionalAndExpressionNotName shift and go to state 205
    unaryExpressionNotPlusMinusNotName shift and go to state 175
    postDecrementExpression        shift and go to state 468
    castExpression                 shift and go to state 241
    arrayCreationWithoutArrayInitializer shift and go to state 232
    shiftExpressionNotName         shift and go to state 233
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    assignmentExpressionNotName    shift and go to state 473
    integerLiteral                 shift and go to state 183
    classInstanceCreationExpressionName shift and go to state 187
    primaryNoNewArray              shift and go to state 178
    conditionalExpressionNotName   shift and go to state 470
    assignment                     shift and go to state 474
    conditionalOrExpressionNotName shift and go to state 237
    FloatingPointLiteral           shift and go to state 214
    postIncrementExpression        shift and go to state 466
    arrayAccess                    shift and go to state 234
    expressionNotName              shift and go to state 471
    postfixExpression              shift and go to state 298
    additiveExpressionNotName      shift and go to state 212
    name                           shift and go to state 467
    relationalExpressionNotName    shift and go to state 217
    primitiveType                  shift and go to state 472
    equalityExpressionNotName      shift and go to state 188
    instanceOfExpressionNotName    shift and go to state 220
    andExpressionNotName           shift and go to state 223
    preDecrementExpression         shift and go to state 196
    classInstanceCreationExpression shift and go to state 198

state 239

    (582) unaryExpressionNotPlusMinusNotName -> postfixExpressionNotName .

    MULT            reduce using rule 582 (unaryExpressionNotPlusMinusNotName -> postfixExpressionNotName .)
    SLASH           reduce using rule 582 (unaryExpressionNotPlusMinusNotName -> postfixExpressionNotName .)
    PERCENT         reduce using rule 582 (unaryExpressionNotPlusMinusNotName -> postfixExpressionNotName .)
    PLUS            reduce using rule 582 (unaryExpressionNotPlusMinusNotName -> postfixExpressionNotName .)
    DASH            reduce using rule 582 (unaryExpressionNotPlusMinusNotName -> postfixExpressionNotName .)
    OP_SHR          reduce using rule 582 (unaryExpressionNotPlusMinusNotName -> postfixExpressionNotName .)
    OP_SHL          reduce using rule 582 (unaryExpressionNotPlusMinusNotName -> postfixExpressionNotName .)
    OP_SHRR         reduce using rule 582 (unaryExpressionNotPlusMinusNotName -> postfixExpressionNotName .)
    LESS            reduce using rule 582 (unaryExpressionNotPlusMinusNotName -> postfixExpressionNotName .)
    OP_GE           reduce using rule 582 (unaryExpressionNotPlusMinusNotName -> postfixExpressionNotName .)
    MORE            reduce using rule 582 (unaryExpressionNotPlusMinusNotName -> postfixExpressionNotName .)
    OP_LE           reduce using rule 582 (unaryExpressionNotPlusMinusNotName -> postfixExpressionNotName .)
    INSTANCEOF      reduce using rule 582 (unaryExpressionNotPlusMinusNotName -> postfixExpressionNotName .)
    OP_EQ           reduce using rule 582 (unaryExpressionNotPlusMinusNotName -> postfixExpressionNotName .)
    OP_NE           reduce using rule 582 (unaryExpressionNotPlusMinusNotName -> postfixExpressionNotName .)
    AND             reduce using rule 582 (unaryExpressionNotPlusMinusNotName -> postfixExpressionNotName .)
    CARET           reduce using rule 582 (unaryExpressionNotPlusMinusNotName -> postfixExpressionNotName .)
    VERTICAL        reduce using rule 582 (unaryExpressionNotPlusMinusNotName -> postfixExpressionNotName .)
    OP_LAND         reduce using rule 582 (unaryExpressionNotPlusMinusNotName -> postfixExpressionNotName .)
    QUES            reduce using rule 582 (unaryExpressionNotPlusMinusNotName -> postfixExpressionNotName .)
    OP_LOR          reduce using rule 582 (unaryExpressionNotPlusMinusNotName -> postfixExpressionNotName .)
    SEMI            reduce using rule 582 (unaryExpressionNotPlusMinusNotName -> postfixExpressionNotName .)
    COMMA           reduce using rule 582 (unaryExpressionNotPlusMinusNotName -> postfixExpressionNotName .)
    RPAREN          reduce using rule 582 (unaryExpressionNotPlusMinusNotName -> postfixExpressionNotName .)
    BRPAREN         reduce using rule 582 (unaryExpressionNotPlusMinusNotName -> postfixExpressionNotName .)


state 240

    (570) unaryExpressionNotName -> DASH . unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    primary                        shift and go to state 386
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 476
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    name                           shift and go to state 393
    postfixExpression              shift and go to state 394
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 241

    (583) unaryExpressionNotPlusMinusNotName -> castExpression .

    MULT            reduce using rule 583 (unaryExpressionNotPlusMinusNotName -> castExpression .)
    SLASH           reduce using rule 583 (unaryExpressionNotPlusMinusNotName -> castExpression .)
    PERCENT         reduce using rule 583 (unaryExpressionNotPlusMinusNotName -> castExpression .)
    PLUS            reduce using rule 583 (unaryExpressionNotPlusMinusNotName -> castExpression .)
    DASH            reduce using rule 583 (unaryExpressionNotPlusMinusNotName -> castExpression .)
    OP_SHR          reduce using rule 583 (unaryExpressionNotPlusMinusNotName -> castExpression .)
    OP_SHL          reduce using rule 583 (unaryExpressionNotPlusMinusNotName -> castExpression .)
    OP_SHRR         reduce using rule 583 (unaryExpressionNotPlusMinusNotName -> castExpression .)
    LESS            reduce using rule 583 (unaryExpressionNotPlusMinusNotName -> castExpression .)
    OP_GE           reduce using rule 583 (unaryExpressionNotPlusMinusNotName -> castExpression .)
    MORE            reduce using rule 583 (unaryExpressionNotPlusMinusNotName -> castExpression .)
    OP_LE           reduce using rule 583 (unaryExpressionNotPlusMinusNotName -> castExpression .)
    INSTANCEOF      reduce using rule 583 (unaryExpressionNotPlusMinusNotName -> castExpression .)
    OP_EQ           reduce using rule 583 (unaryExpressionNotPlusMinusNotName -> castExpression .)
    OP_NE           reduce using rule 583 (unaryExpressionNotPlusMinusNotName -> castExpression .)
    AND             reduce using rule 583 (unaryExpressionNotPlusMinusNotName -> castExpression .)
    CARET           reduce using rule 583 (unaryExpressionNotPlusMinusNotName -> castExpression .)
    VERTICAL        reduce using rule 583 (unaryExpressionNotPlusMinusNotName -> castExpression .)
    OP_LAND         reduce using rule 583 (unaryExpressionNotPlusMinusNotName -> castExpression .)
    QUES            reduce using rule 583 (unaryExpressionNotPlusMinusNotName -> castExpression .)
    OP_LOR          reduce using rule 583 (unaryExpressionNotPlusMinusNotName -> castExpression .)
    SEMI            reduce using rule 583 (unaryExpressionNotPlusMinusNotName -> castExpression .)
    COMMA           reduce using rule 583 (unaryExpressionNotPlusMinusNotName -> castExpression .)
    RPAREN          reduce using rule 583 (unaryExpressionNotPlusMinusNotName -> castExpression .)
    BRPAREN         reduce using rule 583 (unaryExpressionNotPlusMinusNotName -> castExpression .)


state 242

    (42) primitiveType -> FLOAT .

    FLPAREN         reduce using rule 42 (primitiveType -> FLOAT .)
    Identifier      reduce using rule 42 (primitiveType -> FLOAT .)
    DOT             reduce using rule 42 (primitiveType -> FLOAT .)
    OP_ARRAY        reduce using rule 42 (primitiveType -> FLOAT .)
    RPAREN          reduce using rule 42 (primitiveType -> FLOAT .)
    VERTICAL        reduce using rule 42 (primitiveType -> FLOAT .)


state 243

    (264) memberValueArrayInitializer -> BLPAREN . memberValues COMMA BRPAREN
    (265) memberValueArrayInitializer -> BLPAREN . memberValues BRPAREN
    (266) memberValueArrayInitializer -> BLPAREN . COMMA BRPAREN
    (267) memberValueArrayInitializer -> BLPAREN . BRPAREN
    (268) memberValues -> . memberValue
    (269) memberValues -> . memberValues COMMA memberValue
    (260) memberValue -> . conditionalExpressionNotName
    (261) memberValue -> . name
    (262) memberValue -> . annotation
    (263) memberValue -> . memberValueArrayInitializer
    (477) conditionalExpressionNotName -> . conditionalOrExpressionNotName
    (478) conditionalExpressionNotName -> . conditionalOrExpressionNotName QUES expression COLON conditionalExpression
    (479) conditionalExpressionNotName -> . name QUES expression COLON conditionalExpression
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (270) annotation -> . normalAnnotation
    (271) annotation -> . markerAnnotation
    (272) annotation -> . singleMemberAnnotation
    (264) memberValueArrayInitializer -> . BLPAREN memberValues COMMA BRPAREN
    (265) memberValueArrayInitializer -> . BLPAREN memberValues BRPAREN
    (266) memberValueArrayInitializer -> . BLPAREN COMMA BRPAREN
    (267) memberValueArrayInitializer -> . BLPAREN BRPAREN
    (482) conditionalOrExpressionNotName -> . conditionalAndExpressionNotName
    (483) conditionalOrExpressionNotName -> . conditionalOrExpressionNotName OP_LOR conditionalAndExpression
    (484) conditionalOrExpressionNotName -> . name OP_LOR conditionalAndExpression
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (273) normalAnnotation -> . annotationName LPAREN memberValuePairs_opt RPAREN
    (280) markerAnnotation -> . annotationName
    (281) singleMemberAnnotation -> . annotationName LPAREN singleMemberAnnotationMemberValue RPAREN
    (487) conditionalAndExpressionNotName -> . inclusiveOrExpressionNotName
    (488) conditionalAndExpressionNotName -> . conditionalAndExpressionNotName OP_LAND inclusiveOrExpression
    (489) conditionalAndExpressionNotName -> . name OP_LAND inclusiveOrExpression
    (274) annotationName -> . AT name
    (492) inclusiveOrExpressionNotName -> . exclusiveOrExpressionNotName
    (493) inclusiveOrExpressionNotName -> . inclusiveOrExpressionNotName VERTICAL exclusiveOrExpression
    (494) inclusiveOrExpressionNotName -> . name VERTICAL exclusiveOrExpression
    (497) exclusiveOrExpressionNotName -> . andExpressionNotName
    (498) exclusiveOrExpressionNotName -> . exclusiveOrExpressionNotName CARET andExpression
    (499) exclusiveOrExpressionNotName -> . name CARET andExpression
    (502) andExpressionNotName -> . equalityExpressionNotName
    (503) andExpressionNotName -> . andExpressionNotName AND equalityExpression
    (504) andExpressionNotName -> . name AND equalityExpression
    (508) equalityExpressionNotName -> . instanceOfExpressionNotName
    (509) equalityExpressionNotName -> . equalityExpressionNotName OP_EQ instanceOfExpression
    (510) equalityExpressionNotName -> . equalityExpressionNotName OP_NE instanceOfExpression
    (511) equalityExpressionNotName -> . name OP_EQ instanceOfExpression
    (512) equalityExpressionNotName -> . name OP_NE instanceOfExpression
    (515) instanceOfExpressionNotName -> . relationalExpressionNotName
    (516) instanceOfExpressionNotName -> . instanceOfExpressionNotName INSTANCEOF referenceType
    (517) instanceOfExpressionNotName -> . name INSTANCEOF referenceType
    (523) relationalExpressionNotName -> . shiftExpressionNotName
    (524) relationalExpressionNotName -> . relationalExpressionNotName LESS shiftExpression
    (525) relationalExpressionNotName -> . relationalExpressionNotName OP_GE shiftExpression
    (526) relationalExpressionNotName -> . relationalExpressionNotName MORE shiftExpression
    (527) relationalExpressionNotName -> . relationalExpressionNotName OP_LE shiftExpression
    (528) relationalExpressionNotName -> . name LESS shiftExpression
    (529) relationalExpressionNotName -> . name OP_GE shiftExpression
    (530) relationalExpressionNotName -> . name MORE shiftExpression
    (531) relationalExpressionNotName -> . name OP_LE shiftExpression
    (536) shiftExpressionNotName -> . additiveExpressionNotName
    (537) shiftExpressionNotName -> . shiftExpressionNotName OP_SHR additiveExpression
    (538) shiftExpressionNotName -> . shiftExpressionNotName OP_SHL additiveExpression
    (539) shiftExpressionNotName -> . shiftExpressionNotName OP_SHRR additiveExpression
    (540) shiftExpressionNotName -> . name OP_SHR additiveExpression
    (541) shiftExpressionNotName -> . name OP_SHL additiveExpression
    (542) shiftExpressionNotName -> . name OP_SHRR additiveExpression
    (546) additiveExpressionNotName -> . multiplicativeExpressionNotName
    (547) additiveExpressionNotName -> . additiveExpressionNotName PLUS multiplicativeExpression
    (548) additiveExpressionNotName -> . additiveExpressionNotName DASH multiplicativeExpression
    (549) additiveExpressionNotName -> . name PLUS multiplicativeExpression
    (550) additiveExpressionNotName -> . name DASH multiplicativeExpression
    (555) multiplicativeExpressionNotName -> . unaryExpressionNotName
    (556) multiplicativeExpressionNotName -> . multiplicativeExpressionNotName MULT unaryExpression
    (557) multiplicativeExpressionNotName -> . multiplicativeExpressionNotName SLASH unaryExpression
    (558) multiplicativeExpressionNotName -> . multiplicativeExpressionNotName PERCENT unaryExpression
    (559) multiplicativeExpressionNotName -> . name MULT unaryExpression
    (560) multiplicativeExpressionNotName -> . name SLASH unaryExpression
    (561) multiplicativeExpressionNotName -> . name PERCENT unaryExpression
    (567) unaryExpressionNotName -> . preIncrementExpression
    (568) unaryExpressionNotName -> . preDecrementExpression
    (569) unaryExpressionNotName -> . PLUS unaryExpression
    (570) unaryExpressionNotName -> . DASH unaryExpression
    (571) unaryExpressionNotName -> . unaryExpressionNotPlusMinusNotName
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (580) unaryExpressionNotPlusMinusNotName -> . TILDE unaryExpression
    (581) unaryExpressionNotPlusMinusNotName -> . EXCLAMATION unaryExpression
    (582) unaryExpressionNotPlusMinusNotName -> . postfixExpressionNotName
    (583) unaryExpressionNotPlusMinusNotName -> . castExpression
    (588) postfixExpressionNotName -> . primary
    (589) postfixExpressionNotName -> . postIncrementExpression
    (590) postfixExpressionNotName -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    COMMA           shift and go to state 479
    BRPAREN         shift and go to state 480
    BLPAREN         shift and go to state 243
    Identifier      shift and go to state 68
    AT              shift and go to state 155
    PLUS            shift and go to state 174
    DASH            shift and go to state 240
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 209
    EXCLAMATION     shift and go to state 169
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    multiplicativeExpressionNotName shift and go to state 222
    qualifiedName                  shift and go to state 64
    arrayCreationWithArrayInitializer shift and go to state 227
    arrayAccess                    shift and go to state 234
    unaryExpressionNotName         shift and go to state 229
    inclusiveOrExpressionNotName   shift and go to state 235
    preIncrementExpression         shift and go to state 172
    booleanLiteral                 shift and go to state 173
    conditionalAndExpressionNotName shift and go to state 205
    memberValueArrayInitializer    shift and go to state 206
    markerAnnotation               shift and go to state 9
    unaryExpressionNotPlusMinusNotName shift and go to state 175
    postDecrementExpression        shift and go to state 186
    primaryNoNewArray              shift and go to state 178
    arrayCreationWithoutArrayInitializer shift and go to state 232
    shiftExpressionNotName         shift and go to state 233
    postfixExpressionNotName       shift and go to state 239
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    equalityExpressionNotName      shift and go to state 188
    FloatingPointLiteral           shift and go to state 214
    integerLiteral                 shift and go to state 183
    methodInvocation               shift and go to state 176
    postfixExpression              shift and go to state 177
    memberValue                    shift and go to state 478
    exclusiveOrExpressionNotName   shift and go to state 231
    conditionalExpressionNotName   shift and go to state 213
    fieldAccess                    shift and go to state 189
    conditionalOrExpressionNotName shift and go to state 237
    primary                        shift and go to state 199
    postIncrementExpression        shift and go to state 179
    annotation                     shift and go to state 207
    castExpression                 shift and go to state 241
    additiveExpressionNotName      shift and go to state 212
    memberValues                   shift and go to state 477
    name                           shift and go to state 180
    relationalExpressionNotName    shift and go to state 217
    annotationName                 shift and go to state 40
    primitiveType                  shift and go to state 219
    instanceOfExpressionNotName    shift and go to state 220
    singleMemberAnnotation         shift and go to state 8
    andExpressionNotName           shift and go to state 223
    normalAnnotation               shift and go to state 24
    preDecrementExpression         shift and go to state 196
    classInstanceCreationExpressionName shift and go to state 187
    classInstanceCreationExpression shift and go to state 198

state 244

    (281) singleMemberAnnotation -> annotationName LPAREN singleMemberAnnotationMemberValue . RPAREN

    RPAREN          shift and go to state 481


state 245

    (275) memberValuePairs_opt -> memberValuePairs .
    (278) memberValuePairs -> memberValuePairs . COMMA memberValuePair

    RPAREN          reduce using rule 275 (memberValuePairs_opt -> memberValuePairs .)
    COMMA           shift and go to state 482


state 246

    (446) fieldAccess -> SUPER . DOT Identifier
    (343) methodInvocation -> SUPER . DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> SUPER . DOT Identifier LPAREN argumentList_opt RPAREN

    DOT             shift and go to state 483


state 247

    (181) fieldDeclaration -> modifiers_opt . type variableDeclarators SEMI
    (186) methodName -> modifiers_opt . typeParameters type Identifier LPAREN
    (187) methodName -> modifiers_opt . type Identifier LPAREN
    (197) interfaceHeadName -> modifiers_opt . INTERFACE Identifier typeParameters
    (198) interfaceHeadName -> modifiers_opt . INTERFACE Identifier
    (217) enumHeadName -> modifiers_opt . ENUM Identifier
    (218) enumHeadName -> modifiers_opt . ENUM Identifier typeParameters
    (140) classHeadName1 -> modifiers_opt . CLASS Identifier
    (33) type -> . primitiveType
    (34) type -> . referenceType
    (65) typeParameters -> . LESS typeParameterList1
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (44) referenceType -> . classOrInterfaceType
    (45) referenceType -> . arrayType
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (54) arrayType -> . genericType arrays
    (55) arrayType -> . genericType DOT name arrays
    (56) arrayType -> . primitiveType arrays
    (57) arrayType -> . name arrays
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    INTERFACE       shift and go to state 50
    ENUM            shift and go to state 49
    CLASS           shift and go to state 51
    LESS            shift and go to state 83
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    Identifier      shift and go to state 68

    qualifiedName                  shift and go to state 64
    classOrInterfaceType           shift and go to state 272
    primitiveType                  shift and go to state 277
    classOrInterface               shift and go to state 122
    simpleName                     shift and go to state 66
    arrayType                      shift and go to state 269
    typeParameters                 shift and go to state 484
    type                           shift and go to state 274
    referenceType                  shift and go to state 273
    genericType                    shift and go to state 271
    name                           shift and go to state 276

state 248

    (202) InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt . BRPAREN

    BRPAREN         shift and go to state 485


state 249

    (213) interfaceMemberDeclaration -> SEMI .

    SEMI            reduce using rule 213 (interfaceMemberDeclaration -> SEMI .)
    AT              reduce using rule 213 (interfaceMemberDeclaration -> SEMI .)
    PUBLIC          reduce using rule 213 (interfaceMemberDeclaration -> SEMI .)
    PROTECTED       reduce using rule 213 (interfaceMemberDeclaration -> SEMI .)
    PRIVATE         reduce using rule 213 (interfaceMemberDeclaration -> SEMI .)
    STATIC          reduce using rule 213 (interfaceMemberDeclaration -> SEMI .)
    ABSTRACT        reduce using rule 213 (interfaceMemberDeclaration -> SEMI .)
    FINAL           reduce using rule 213 (interfaceMemberDeclaration -> SEMI .)
    NATIVE          reduce using rule 213 (interfaceMemberDeclaration -> SEMI .)
    SYNCHRONIZED    reduce using rule 213 (interfaceMemberDeclaration -> SEMI .)
    TRANSIENT       reduce using rule 213 (interfaceMemberDeclaration -> SEMI .)
    VOLATILE        reduce using rule 213 (interfaceMemberDeclaration -> SEMI .)
    STRICTFP        reduce using rule 213 (interfaceMemberDeclaration -> SEMI .)
    INTERFACE       reduce using rule 213 (interfaceMemberDeclaration -> SEMI .)
    ENUM            reduce using rule 213 (interfaceMemberDeclaration -> SEMI .)
    CLASS           reduce using rule 213 (interfaceMemberDeclaration -> SEMI .)
    LESS            reduce using rule 213 (interfaceMemberDeclaration -> SEMI .)
    BOOLEAN         reduce using rule 213 (interfaceMemberDeclaration -> SEMI .)
    VOID            reduce using rule 213 (interfaceMemberDeclaration -> SEMI .)
    BYTE            reduce using rule 213 (interfaceMemberDeclaration -> SEMI .)
    SHORT           reduce using rule 213 (interfaceMemberDeclaration -> SEMI .)
    INT             reduce using rule 213 (interfaceMemberDeclaration -> SEMI .)
    LONG            reduce using rule 213 (interfaceMemberDeclaration -> SEMI .)
    CHAR            reduce using rule 213 (interfaceMemberDeclaration -> SEMI .)
    FLOAT           reduce using rule 213 (interfaceMemberDeclaration -> SEMI .)
    DOUBLE          reduce using rule 213 (interfaceMemberDeclaration -> SEMI .)
    Identifier      reduce using rule 213 (interfaceMemberDeclaration -> SEMI .)
    BRPAREN         reduce using rule 213 (interfaceMemberDeclaration -> SEMI .)


state 250

    (204) interfaceMemberDeclarations_opt -> empty .
    (121) modifiers_opt -> empty .

    BRPAREN         reduce using rule 204 (interfaceMemberDeclarations_opt -> empty .)
    INTERFACE       reduce using rule 121 (modifiers_opt -> empty .)
    ENUM            reduce using rule 121 (modifiers_opt -> empty .)
    CLASS           reduce using rule 121 (modifiers_opt -> empty .)
    LESS            reduce using rule 121 (modifiers_opt -> empty .)
    BOOLEAN         reduce using rule 121 (modifiers_opt -> empty .)
    VOID            reduce using rule 121 (modifiers_opt -> empty .)
    BYTE            reduce using rule 121 (modifiers_opt -> empty .)
    SHORT           reduce using rule 121 (modifiers_opt -> empty .)
    INT             reduce using rule 121 (modifiers_opt -> empty .)
    LONG            reduce using rule 121 (modifiers_opt -> empty .)
    CHAR            reduce using rule 121 (modifiers_opt -> empty .)
    FLOAT           reduce using rule 121 (modifiers_opt -> empty .)
    DOUBLE          reduce using rule 121 (modifiers_opt -> empty .)
    Identifier      reduce using rule 121 (modifiers_opt -> empty .)


state 251

    (184) abstractMethodDeclaration -> methodHeader . SEMI

    SEMI            shift and go to state 284


state 252

    (207) interfaceMemberDeclaration -> constantDeclaration .

    SEMI            reduce using rule 207 (interfaceMemberDeclaration -> constantDeclaration .)
    AT              reduce using rule 207 (interfaceMemberDeclaration -> constantDeclaration .)
    PUBLIC          reduce using rule 207 (interfaceMemberDeclaration -> constantDeclaration .)
    PROTECTED       reduce using rule 207 (interfaceMemberDeclaration -> constantDeclaration .)
    PRIVATE         reduce using rule 207 (interfaceMemberDeclaration -> constantDeclaration .)
    STATIC          reduce using rule 207 (interfaceMemberDeclaration -> constantDeclaration .)
    ABSTRACT        reduce using rule 207 (interfaceMemberDeclaration -> constantDeclaration .)
    FINAL           reduce using rule 207 (interfaceMemberDeclaration -> constantDeclaration .)
    NATIVE          reduce using rule 207 (interfaceMemberDeclaration -> constantDeclaration .)
    SYNCHRONIZED    reduce using rule 207 (interfaceMemberDeclaration -> constantDeclaration .)
    TRANSIENT       reduce using rule 207 (interfaceMemberDeclaration -> constantDeclaration .)
    VOLATILE        reduce using rule 207 (interfaceMemberDeclaration -> constantDeclaration .)
    STRICTFP        reduce using rule 207 (interfaceMemberDeclaration -> constantDeclaration .)
    INTERFACE       reduce using rule 207 (interfaceMemberDeclaration -> constantDeclaration .)
    ENUM            reduce using rule 207 (interfaceMemberDeclaration -> constantDeclaration .)
    CLASS           reduce using rule 207 (interfaceMemberDeclaration -> constantDeclaration .)
    LESS            reduce using rule 207 (interfaceMemberDeclaration -> constantDeclaration .)
    BOOLEAN         reduce using rule 207 (interfaceMemberDeclaration -> constantDeclaration .)
    VOID            reduce using rule 207 (interfaceMemberDeclaration -> constantDeclaration .)
    BYTE            reduce using rule 207 (interfaceMemberDeclaration -> constantDeclaration .)
    SHORT           reduce using rule 207 (interfaceMemberDeclaration -> constantDeclaration .)
    INT             reduce using rule 207 (interfaceMemberDeclaration -> constantDeclaration .)
    LONG            reduce using rule 207 (interfaceMemberDeclaration -> constantDeclaration .)
    CHAR            reduce using rule 207 (interfaceMemberDeclaration -> constantDeclaration .)
    FLOAT           reduce using rule 207 (interfaceMemberDeclaration -> constantDeclaration .)
    DOUBLE          reduce using rule 207 (interfaceMemberDeclaration -> constantDeclaration .)
    Identifier      reduce using rule 207 (interfaceMemberDeclaration -> constantDeclaration .)
    BRPAREN         reduce using rule 207 (interfaceMemberDeclaration -> constantDeclaration .)


state 253

    (211) interfaceMemberDeclaration -> enumDeclaration .

    SEMI            reduce using rule 211 (interfaceMemberDeclaration -> enumDeclaration .)
    AT              reduce using rule 211 (interfaceMemberDeclaration -> enumDeclaration .)
    PUBLIC          reduce using rule 211 (interfaceMemberDeclaration -> enumDeclaration .)
    PROTECTED       reduce using rule 211 (interfaceMemberDeclaration -> enumDeclaration .)
    PRIVATE         reduce using rule 211 (interfaceMemberDeclaration -> enumDeclaration .)
    STATIC          reduce using rule 211 (interfaceMemberDeclaration -> enumDeclaration .)
    ABSTRACT        reduce using rule 211 (interfaceMemberDeclaration -> enumDeclaration .)
    FINAL           reduce using rule 211 (interfaceMemberDeclaration -> enumDeclaration .)
    NATIVE          reduce using rule 211 (interfaceMemberDeclaration -> enumDeclaration .)
    SYNCHRONIZED    reduce using rule 211 (interfaceMemberDeclaration -> enumDeclaration .)
    TRANSIENT       reduce using rule 211 (interfaceMemberDeclaration -> enumDeclaration .)
    VOLATILE        reduce using rule 211 (interfaceMemberDeclaration -> enumDeclaration .)
    STRICTFP        reduce using rule 211 (interfaceMemberDeclaration -> enumDeclaration .)
    INTERFACE       reduce using rule 211 (interfaceMemberDeclaration -> enumDeclaration .)
    ENUM            reduce using rule 211 (interfaceMemberDeclaration -> enumDeclaration .)
    CLASS           reduce using rule 211 (interfaceMemberDeclaration -> enumDeclaration .)
    LESS            reduce using rule 211 (interfaceMemberDeclaration -> enumDeclaration .)
    BOOLEAN         reduce using rule 211 (interfaceMemberDeclaration -> enumDeclaration .)
    VOID            reduce using rule 211 (interfaceMemberDeclaration -> enumDeclaration .)
    BYTE            reduce using rule 211 (interfaceMemberDeclaration -> enumDeclaration .)
    SHORT           reduce using rule 211 (interfaceMemberDeclaration -> enumDeclaration .)
    INT             reduce using rule 211 (interfaceMemberDeclaration -> enumDeclaration .)
    LONG            reduce using rule 211 (interfaceMemberDeclaration -> enumDeclaration .)
    CHAR            reduce using rule 211 (interfaceMemberDeclaration -> enumDeclaration .)
    FLOAT           reduce using rule 211 (interfaceMemberDeclaration -> enumDeclaration .)
    DOUBLE          reduce using rule 211 (interfaceMemberDeclaration -> enumDeclaration .)
    Identifier      reduce using rule 211 (interfaceMemberDeclaration -> enumDeclaration .)
    BRPAREN         reduce using rule 211 (interfaceMemberDeclaration -> enumDeclaration .)


state 254

    (205) interfaceMemberDeclarations -> interfaceMemberDeclaration .

    SEMI            reduce using rule 205 (interfaceMemberDeclarations -> interfaceMemberDeclaration .)
    AT              reduce using rule 205 (interfaceMemberDeclarations -> interfaceMemberDeclaration .)
    PUBLIC          reduce using rule 205 (interfaceMemberDeclarations -> interfaceMemberDeclaration .)
    PROTECTED       reduce using rule 205 (interfaceMemberDeclarations -> interfaceMemberDeclaration .)
    PRIVATE         reduce using rule 205 (interfaceMemberDeclarations -> interfaceMemberDeclaration .)
    STATIC          reduce using rule 205 (interfaceMemberDeclarations -> interfaceMemberDeclaration .)
    ABSTRACT        reduce using rule 205 (interfaceMemberDeclarations -> interfaceMemberDeclaration .)
    FINAL           reduce using rule 205 (interfaceMemberDeclarations -> interfaceMemberDeclaration .)
    NATIVE          reduce using rule 205 (interfaceMemberDeclarations -> interfaceMemberDeclaration .)
    SYNCHRONIZED    reduce using rule 205 (interfaceMemberDeclarations -> interfaceMemberDeclaration .)
    TRANSIENT       reduce using rule 205 (interfaceMemberDeclarations -> interfaceMemberDeclaration .)
    VOLATILE        reduce using rule 205 (interfaceMemberDeclarations -> interfaceMemberDeclaration .)
    STRICTFP        reduce using rule 205 (interfaceMemberDeclarations -> interfaceMemberDeclaration .)
    INTERFACE       reduce using rule 205 (interfaceMemberDeclarations -> interfaceMemberDeclaration .)
    ENUM            reduce using rule 205 (interfaceMemberDeclarations -> interfaceMemberDeclaration .)
    CLASS           reduce using rule 205 (interfaceMemberDeclarations -> interfaceMemberDeclaration .)
    LESS            reduce using rule 205 (interfaceMemberDeclarations -> interfaceMemberDeclaration .)
    BOOLEAN         reduce using rule 205 (interfaceMemberDeclarations -> interfaceMemberDeclaration .)
    VOID            reduce using rule 205 (interfaceMemberDeclarations -> interfaceMemberDeclaration .)
    BYTE            reduce using rule 205 (interfaceMemberDeclarations -> interfaceMemberDeclaration .)
    SHORT           reduce using rule 205 (interfaceMemberDeclarations -> interfaceMemberDeclaration .)
    INT             reduce using rule 205 (interfaceMemberDeclarations -> interfaceMemberDeclaration .)
    LONG            reduce using rule 205 (interfaceMemberDeclarations -> interfaceMemberDeclaration .)
    CHAR            reduce using rule 205 (interfaceMemberDeclarations -> interfaceMemberDeclaration .)
    FLOAT           reduce using rule 205 (interfaceMemberDeclarations -> interfaceMemberDeclaration .)
    DOUBLE          reduce using rule 205 (interfaceMemberDeclarations -> interfaceMemberDeclaration .)
    Identifier      reduce using rule 205 (interfaceMemberDeclarations -> interfaceMemberDeclaration .)
    BRPAREN         reduce using rule 205 (interfaceMemberDeclarations -> interfaceMemberDeclaration .)


state 255

    (209) interfaceMemberDeclaration -> classDeclaration .

    SEMI            reduce using rule 209 (interfaceMemberDeclaration -> classDeclaration .)
    AT              reduce using rule 209 (interfaceMemberDeclaration -> classDeclaration .)
    PUBLIC          reduce using rule 209 (interfaceMemberDeclaration -> classDeclaration .)
    PROTECTED       reduce using rule 209 (interfaceMemberDeclaration -> classDeclaration .)
    PRIVATE         reduce using rule 209 (interfaceMemberDeclaration -> classDeclaration .)
    STATIC          reduce using rule 209 (interfaceMemberDeclaration -> classDeclaration .)
    ABSTRACT        reduce using rule 209 (interfaceMemberDeclaration -> classDeclaration .)
    FINAL           reduce using rule 209 (interfaceMemberDeclaration -> classDeclaration .)
    NATIVE          reduce using rule 209 (interfaceMemberDeclaration -> classDeclaration .)
    SYNCHRONIZED    reduce using rule 209 (interfaceMemberDeclaration -> classDeclaration .)
    TRANSIENT       reduce using rule 209 (interfaceMemberDeclaration -> classDeclaration .)
    VOLATILE        reduce using rule 209 (interfaceMemberDeclaration -> classDeclaration .)
    STRICTFP        reduce using rule 209 (interfaceMemberDeclaration -> classDeclaration .)
    INTERFACE       reduce using rule 209 (interfaceMemberDeclaration -> classDeclaration .)
    ENUM            reduce using rule 209 (interfaceMemberDeclaration -> classDeclaration .)
    CLASS           reduce using rule 209 (interfaceMemberDeclaration -> classDeclaration .)
    LESS            reduce using rule 209 (interfaceMemberDeclaration -> classDeclaration .)
    BOOLEAN         reduce using rule 209 (interfaceMemberDeclaration -> classDeclaration .)
    VOID            reduce using rule 209 (interfaceMemberDeclaration -> classDeclaration .)
    BYTE            reduce using rule 209 (interfaceMemberDeclaration -> classDeclaration .)
    SHORT           reduce using rule 209 (interfaceMemberDeclaration -> classDeclaration .)
    INT             reduce using rule 209 (interfaceMemberDeclaration -> classDeclaration .)
    LONG            reduce using rule 209 (interfaceMemberDeclaration -> classDeclaration .)
    CHAR            reduce using rule 209 (interfaceMemberDeclaration -> classDeclaration .)
    FLOAT           reduce using rule 209 (interfaceMemberDeclaration -> classDeclaration .)
    DOUBLE          reduce using rule 209 (interfaceMemberDeclaration -> classDeclaration .)
    Identifier      reduce using rule 209 (interfaceMemberDeclaration -> classDeclaration .)
    BRPAREN         reduce using rule 209 (interfaceMemberDeclaration -> classDeclaration .)


state 256

    (120) modifiers_opt -> modifiers .
    (241) annotationTypeDeclarationHeadName -> modifiers . AT INTERFACE Identifier
    (242) annotationTypeDeclarationHeadName -> modifiers . AT INTERFACE Identifier typeParameters
    (123) modifiers -> modifiers . modifier
    (124) modifier -> . PUBLIC
    (125) modifier -> . PROTECTED
    (126) modifier -> . PRIVATE
    (127) modifier -> . STATIC
    (128) modifier -> . ABSTRACT
    (129) modifier -> . FINAL
    (130) modifier -> . NATIVE
    (131) modifier -> . SYNCHRONIZED
    (132) modifier -> . TRANSIENT
    (133) modifier -> . VOLATILE
    (134) modifier -> . STRICTFP
    (135) modifier -> . annotation
    (270) annotation -> . normalAnnotation
    (271) annotation -> . markerAnnotation
    (272) annotation -> . singleMemberAnnotation
    (273) normalAnnotation -> . annotationName LPAREN memberValuePairs_opt RPAREN
    (280) markerAnnotation -> . annotationName
    (281) singleMemberAnnotation -> . annotationName LPAREN singleMemberAnnotationMemberValue RPAREN
    (274) annotationName -> . AT name

    INTERFACE       reduce using rule 120 (modifiers_opt -> modifiers .)
    ENUM            reduce using rule 120 (modifiers_opt -> modifiers .)
    CLASS           reduce using rule 120 (modifiers_opt -> modifiers .)
    LESS            reduce using rule 120 (modifiers_opt -> modifiers .)
    BOOLEAN         reduce using rule 120 (modifiers_opt -> modifiers .)
    VOID            reduce using rule 120 (modifiers_opt -> modifiers .)
    BYTE            reduce using rule 120 (modifiers_opt -> modifiers .)
    SHORT           reduce using rule 120 (modifiers_opt -> modifiers .)
    INT             reduce using rule 120 (modifiers_opt -> modifiers .)
    LONG            reduce using rule 120 (modifiers_opt -> modifiers .)
    CHAR            reduce using rule 120 (modifiers_opt -> modifiers .)
    FLOAT           reduce using rule 120 (modifiers_opt -> modifiers .)
    DOUBLE          reduce using rule 120 (modifiers_opt -> modifiers .)
    Identifier      reduce using rule 120 (modifiers_opt -> modifiers .)
    AT              shift and go to state 86
    PUBLIC          shift and go to state 46
    PROTECTED       shift and go to state 6
    PRIVATE         shift and go to state 14
    STATIC          shift and go to state 7
    ABSTRACT        shift and go to state 5
    FINAL           shift and go to state 11
    NATIVE          shift and go to state 12
    SYNCHRONIZED    shift and go to state 2
    TRANSIENT       shift and go to state 19
    VOLATILE        shift and go to state 43
    STRICTFP        shift and go to state 18

    markerAnnotation               shift and go to state 9
    annotationName                 shift and go to state 40
    singleMemberAnnotation         shift and go to state 8
    normalAnnotation               shift and go to state 24
    modifier                       shift and go to state 87
    annotation                     shift and go to state 35

state 257

    (212) interfaceMemberDeclaration -> annotationTypeDeclaration .

    SEMI            reduce using rule 212 (interfaceMemberDeclaration -> annotationTypeDeclaration .)
    AT              reduce using rule 212 (interfaceMemberDeclaration -> annotationTypeDeclaration .)
    PUBLIC          reduce using rule 212 (interfaceMemberDeclaration -> annotationTypeDeclaration .)
    PROTECTED       reduce using rule 212 (interfaceMemberDeclaration -> annotationTypeDeclaration .)
    PRIVATE         reduce using rule 212 (interfaceMemberDeclaration -> annotationTypeDeclaration .)
    STATIC          reduce using rule 212 (interfaceMemberDeclaration -> annotationTypeDeclaration .)
    ABSTRACT        reduce using rule 212 (interfaceMemberDeclaration -> annotationTypeDeclaration .)
    FINAL           reduce using rule 212 (interfaceMemberDeclaration -> annotationTypeDeclaration .)
    NATIVE          reduce using rule 212 (interfaceMemberDeclaration -> annotationTypeDeclaration .)
    SYNCHRONIZED    reduce using rule 212 (interfaceMemberDeclaration -> annotationTypeDeclaration .)
    TRANSIENT       reduce using rule 212 (interfaceMemberDeclaration -> annotationTypeDeclaration .)
    VOLATILE        reduce using rule 212 (interfaceMemberDeclaration -> annotationTypeDeclaration .)
    STRICTFP        reduce using rule 212 (interfaceMemberDeclaration -> annotationTypeDeclaration .)
    INTERFACE       reduce using rule 212 (interfaceMemberDeclaration -> annotationTypeDeclaration .)
    ENUM            reduce using rule 212 (interfaceMemberDeclaration -> annotationTypeDeclaration .)
    CLASS           reduce using rule 212 (interfaceMemberDeclaration -> annotationTypeDeclaration .)
    LESS            reduce using rule 212 (interfaceMemberDeclaration -> annotationTypeDeclaration .)
    BOOLEAN         reduce using rule 212 (interfaceMemberDeclaration -> annotationTypeDeclaration .)
    VOID            reduce using rule 212 (interfaceMemberDeclaration -> annotationTypeDeclaration .)
    BYTE            reduce using rule 212 (interfaceMemberDeclaration -> annotationTypeDeclaration .)
    SHORT           reduce using rule 212 (interfaceMemberDeclaration -> annotationTypeDeclaration .)
    INT             reduce using rule 212 (interfaceMemberDeclaration -> annotationTypeDeclaration .)
    LONG            reduce using rule 212 (interfaceMemberDeclaration -> annotationTypeDeclaration .)
    CHAR            reduce using rule 212 (interfaceMemberDeclaration -> annotationTypeDeclaration .)
    FLOAT           reduce using rule 212 (interfaceMemberDeclaration -> annotationTypeDeclaration .)
    DOUBLE          reduce using rule 212 (interfaceMemberDeclaration -> annotationTypeDeclaration .)
    Identifier      reduce using rule 212 (interfaceMemberDeclaration -> annotationTypeDeclaration .)
    BRPAREN         reduce using rule 212 (interfaceMemberDeclaration -> annotationTypeDeclaration .)


state 258

    (210) interfaceMemberDeclaration -> interfaceDeclaration .

    SEMI            reduce using rule 210 (interfaceMemberDeclaration -> interfaceDeclaration .)
    AT              reduce using rule 210 (interfaceMemberDeclaration -> interfaceDeclaration .)
    PUBLIC          reduce using rule 210 (interfaceMemberDeclaration -> interfaceDeclaration .)
    PROTECTED       reduce using rule 210 (interfaceMemberDeclaration -> interfaceDeclaration .)
    PRIVATE         reduce using rule 210 (interfaceMemberDeclaration -> interfaceDeclaration .)
    STATIC          reduce using rule 210 (interfaceMemberDeclaration -> interfaceDeclaration .)
    ABSTRACT        reduce using rule 210 (interfaceMemberDeclaration -> interfaceDeclaration .)
    FINAL           reduce using rule 210 (interfaceMemberDeclaration -> interfaceDeclaration .)
    NATIVE          reduce using rule 210 (interfaceMemberDeclaration -> interfaceDeclaration .)
    SYNCHRONIZED    reduce using rule 210 (interfaceMemberDeclaration -> interfaceDeclaration .)
    TRANSIENT       reduce using rule 210 (interfaceMemberDeclaration -> interfaceDeclaration .)
    VOLATILE        reduce using rule 210 (interfaceMemberDeclaration -> interfaceDeclaration .)
    STRICTFP        reduce using rule 210 (interfaceMemberDeclaration -> interfaceDeclaration .)
    INTERFACE       reduce using rule 210 (interfaceMemberDeclaration -> interfaceDeclaration .)
    ENUM            reduce using rule 210 (interfaceMemberDeclaration -> interfaceDeclaration .)
    CLASS           reduce using rule 210 (interfaceMemberDeclaration -> interfaceDeclaration .)
    LESS            reduce using rule 210 (interfaceMemberDeclaration -> interfaceDeclaration .)
    BOOLEAN         reduce using rule 210 (interfaceMemberDeclaration -> interfaceDeclaration .)
    VOID            reduce using rule 210 (interfaceMemberDeclaration -> interfaceDeclaration .)
    BYTE            reduce using rule 210 (interfaceMemberDeclaration -> interfaceDeclaration .)
    SHORT           reduce using rule 210 (interfaceMemberDeclaration -> interfaceDeclaration .)
    INT             reduce using rule 210 (interfaceMemberDeclaration -> interfaceDeclaration .)
    LONG            reduce using rule 210 (interfaceMemberDeclaration -> interfaceDeclaration .)
    CHAR            reduce using rule 210 (interfaceMemberDeclaration -> interfaceDeclaration .)
    FLOAT           reduce using rule 210 (interfaceMemberDeclaration -> interfaceDeclaration .)
    DOUBLE          reduce using rule 210 (interfaceMemberDeclaration -> interfaceDeclaration .)
    Identifier      reduce using rule 210 (interfaceMemberDeclaration -> interfaceDeclaration .)
    BRPAREN         reduce using rule 210 (interfaceMemberDeclaration -> interfaceDeclaration .)


state 259

    (208) interfaceMemberDeclaration -> abstractMethodDeclaration .

    SEMI            reduce using rule 208 (interfaceMemberDeclaration -> abstractMethodDeclaration .)
    AT              reduce using rule 208 (interfaceMemberDeclaration -> abstractMethodDeclaration .)
    PUBLIC          reduce using rule 208 (interfaceMemberDeclaration -> abstractMethodDeclaration .)
    PROTECTED       reduce using rule 208 (interfaceMemberDeclaration -> abstractMethodDeclaration .)
    PRIVATE         reduce using rule 208 (interfaceMemberDeclaration -> abstractMethodDeclaration .)
    STATIC          reduce using rule 208 (interfaceMemberDeclaration -> abstractMethodDeclaration .)
    ABSTRACT        reduce using rule 208 (interfaceMemberDeclaration -> abstractMethodDeclaration .)
    FINAL           reduce using rule 208 (interfaceMemberDeclaration -> abstractMethodDeclaration .)
    NATIVE          reduce using rule 208 (interfaceMemberDeclaration -> abstractMethodDeclaration .)
    SYNCHRONIZED    reduce using rule 208 (interfaceMemberDeclaration -> abstractMethodDeclaration .)
    TRANSIENT       reduce using rule 208 (interfaceMemberDeclaration -> abstractMethodDeclaration .)
    VOLATILE        reduce using rule 208 (interfaceMemberDeclaration -> abstractMethodDeclaration .)
    STRICTFP        reduce using rule 208 (interfaceMemberDeclaration -> abstractMethodDeclaration .)
    INTERFACE       reduce using rule 208 (interfaceMemberDeclaration -> abstractMethodDeclaration .)
    ENUM            reduce using rule 208 (interfaceMemberDeclaration -> abstractMethodDeclaration .)
    CLASS           reduce using rule 208 (interfaceMemberDeclaration -> abstractMethodDeclaration .)
    LESS            reduce using rule 208 (interfaceMemberDeclaration -> abstractMethodDeclaration .)
    BOOLEAN         reduce using rule 208 (interfaceMemberDeclaration -> abstractMethodDeclaration .)
    VOID            reduce using rule 208 (interfaceMemberDeclaration -> abstractMethodDeclaration .)
    BYTE            reduce using rule 208 (interfaceMemberDeclaration -> abstractMethodDeclaration .)
    SHORT           reduce using rule 208 (interfaceMemberDeclaration -> abstractMethodDeclaration .)
    INT             reduce using rule 208 (interfaceMemberDeclaration -> abstractMethodDeclaration .)
    LONG            reduce using rule 208 (interfaceMemberDeclaration -> abstractMethodDeclaration .)
    CHAR            reduce using rule 208 (interfaceMemberDeclaration -> abstractMethodDeclaration .)
    FLOAT           reduce using rule 208 (interfaceMemberDeclaration -> abstractMethodDeclaration .)
    DOUBLE          reduce using rule 208 (interfaceMemberDeclaration -> abstractMethodDeclaration .)
    Identifier      reduce using rule 208 (interfaceMemberDeclaration -> abstractMethodDeclaration .)
    BRPAREN         reduce using rule 208 (interfaceMemberDeclaration -> abstractMethodDeclaration .)


state 260

    (203) interfaceMemberDeclarations_opt -> interfaceMemberDeclarations .
    (206) interfaceMemberDeclarations -> interfaceMemberDeclarations . interfaceMemberDeclaration
    (207) interfaceMemberDeclaration -> . constantDeclaration
    (208) interfaceMemberDeclaration -> . abstractMethodDeclaration
    (209) interfaceMemberDeclaration -> . classDeclaration
    (210) interfaceMemberDeclaration -> . interfaceDeclaration
    (211) interfaceMemberDeclaration -> . enumDeclaration
    (212) interfaceMemberDeclaration -> . annotationTypeDeclaration
    (213) interfaceMemberDeclaration -> . SEMI
    (214) constantDeclaration -> . fieldDeclaration
    (184) abstractMethodDeclaration -> . methodHeader SEMI
    (136) classDeclaration -> . classHead classBody
    (195) interfaceDeclaration -> . interfaceHead InterfaceBody
    (215) enumDeclaration -> . enumHead enumBody
    (239) annotationTypeDeclaration -> . annotationTypeDeclarationHead annotationTypeBody
    (181) fieldDeclaration -> . modifiers_opt type variableDeclarators SEMI
    (185) methodHeader -> . methodName formalParameterList_opt RPAREN methodHeadExtendedDims methodHeadThrowList_opt
    (137) classHead -> . className classExtends_opt classImpls_opt
    (196) interfaceHead -> . interfaceHeadName interfaceHeadExtends_opt
    (216) enumHead -> . enumHeadName classImpls_opt
    (240) annotationTypeDeclarationHead -> . annotationTypeDeclarationHeadName classExtends_opt classImpls_opt
    (120) modifiers_opt -> . modifiers
    (121) modifiers_opt -> . empty
    (186) methodName -> . modifiers_opt typeParameters type Identifier LPAREN
    (187) methodName -> . modifiers_opt type Identifier LPAREN
    (138) className -> . classHeadName1 typeParameters
    (139) className -> . classHeadName1
    (197) interfaceHeadName -> . modifiers_opt INTERFACE Identifier typeParameters
    (198) interfaceHeadName -> . modifiers_opt INTERFACE Identifier
    (217) enumHeadName -> . modifiers_opt ENUM Identifier
    (218) enumHeadName -> . modifiers_opt ENUM Identifier typeParameters
    (241) annotationTypeDeclarationHeadName -> . modifiers AT INTERFACE Identifier
    (242) annotationTypeDeclarationHeadName -> . modifiers AT INTERFACE Identifier typeParameters
    (243) annotationTypeDeclarationHeadName -> . AT INTERFACE Identifier typeParameters
    (244) annotationTypeDeclarationHeadName -> . AT INTERFACE Identifier
    (122) modifiers -> . modifier
    (123) modifiers -> . modifiers modifier
    (631) empty -> .
    (140) classHeadName1 -> . modifiers_opt CLASS Identifier
    (124) modifier -> . PUBLIC
    (125) modifier -> . PROTECTED
    (126) modifier -> . PRIVATE
    (127) modifier -> . STATIC
    (128) modifier -> . ABSTRACT
    (129) modifier -> . FINAL
    (130) modifier -> . NATIVE
    (131) modifier -> . SYNCHRONIZED
    (132) modifier -> . TRANSIENT
    (133) modifier -> . VOLATILE
    (134) modifier -> . STRICTFP
    (135) modifier -> . annotation
    (270) annotation -> . normalAnnotation
    (271) annotation -> . markerAnnotation
    (272) annotation -> . singleMemberAnnotation
    (273) normalAnnotation -> . annotationName LPAREN memberValuePairs_opt RPAREN
    (280) markerAnnotation -> . annotationName
    (281) singleMemberAnnotation -> . annotationName LPAREN singleMemberAnnotationMemberValue RPAREN
    (274) annotationName -> . AT name

    BRPAREN         reduce using rule 203 (interfaceMemberDeclarations_opt -> interfaceMemberDeclarations .)
    SEMI            shift and go to state 249
    AT              shift and go to state 48
    INTERFACE       reduce using rule 631 (empty -> .)
    ENUM            reduce using rule 631 (empty -> .)
    CLASS           reduce using rule 631 (empty -> .)
    LESS            reduce using rule 631 (empty -> .)
    BOOLEAN         reduce using rule 631 (empty -> .)
    VOID            reduce using rule 631 (empty -> .)
    BYTE            reduce using rule 631 (empty -> .)
    SHORT           reduce using rule 631 (empty -> .)
    INT             reduce using rule 631 (empty -> .)
    LONG            reduce using rule 631 (empty -> .)
    CHAR            reduce using rule 631 (empty -> .)
    FLOAT           reduce using rule 631 (empty -> .)
    DOUBLE          reduce using rule 631 (empty -> .)
    Identifier      reduce using rule 631 (empty -> .)
    PUBLIC          shift and go to state 46
    PROTECTED       shift and go to state 6
    PRIVATE         shift and go to state 14
    STATIC          shift and go to state 7
    ABSTRACT        shift and go to state 5
    FINAL           shift and go to state 11
    NATIVE          shift and go to state 12
    SYNCHRONIZED    shift and go to state 2
    TRANSIENT       shift and go to state 19
    VOLATILE        shift and go to state 43
    STRICTFP        shift and go to state 18

    methodName                     shift and go to state 98
    modifiers_opt                  shift and go to state 247
    classHead                      shift and go to state 3
    singleMemberAnnotation         shift and go to state 8
    markerAnnotation               shift and go to state 9
    enumHeadName                   shift and go to state 10
    className                      shift and go to state 13
    enumDeclaration                shift and go to state 253
    interfaceMemberDeclaration     shift and go to state 486
    empty                          shift and go to state 74
    methodHeader                   shift and go to state 251
    constantDeclaration            shift and go to state 252
    normalAnnotation               shift and go to state 24
    annotationTypeDeclarationHead  shift and go to state 15
    interfaceHeadName              shift and go to state 27
    classHeadName1                 shift and go to state 33
    enumHead                       shift and go to state 30
    classDeclaration               shift and go to state 255
    fieldDeclaration               shift and go to state 138
    annotationTypeDeclarationHeadName shift and go to state 34
    annotation                     shift and go to state 35
    modifiers                      shift and go to state 256
    annotationName                 shift and go to state 40
    annotationTypeDeclaration      shift and go to state 257
    interfaceDeclaration           shift and go to state 258
    abstractMethodDeclaration      shift and go to state 259
    modifier                       shift and go to state 45
    interfaceHead                  shift and go to state 47

state 261

    (243) annotationTypeDeclarationHeadName -> AT INTERFACE Identifier . typeParameters
    (244) annotationTypeDeclarationHeadName -> AT INTERFACE Identifier .
    (65) typeParameters -> . LESS typeParameterList1

    EXTENDS         reduce using rule 244 (annotationTypeDeclarationHeadName -> AT INTERFACE Identifier .)
    IMPLEMENTS      reduce using rule 244 (annotationTypeDeclarationHeadName -> AT INTERFACE Identifier .)
    BLPAREN         reduce using rule 244 (annotationTypeDeclarationHeadName -> AT INTERFACE Identifier .)
    LESS            shift and go to state 83

    typeParameters                 shift and go to state 487

state 262

    (218) enumHeadName -> modifiers_opt ENUM Identifier typeParameters .

    IMPLEMENTS      reduce using rule 218 (enumHeadName -> modifiers_opt ENUM Identifier typeParameters .)
    BLPAREN         reduce using rule 218 (enumHeadName -> modifiers_opt ENUM Identifier typeParameters .)


state 263

    (197) interfaceHeadName -> modifiers_opt INTERFACE Identifier typeParameters .

    EXTENDS         reduce using rule 197 (interfaceHeadName -> modifiers_opt INTERFACE Identifier typeParameters .)
    BLPAREN         reduce using rule 197 (interfaceHeadName -> modifiers_opt INTERFACE Identifier typeParameters .)


state 264

    (169) formalParameter -> modifiers_opt . type variableDeclaratorId
    (170) formalParameter -> modifiers_opt . type OP_ARRAY variableDeclaratorId
    (33) type -> . primitiveType
    (34) type -> . referenceType
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (44) referenceType -> . classOrInterfaceType
    (45) referenceType -> . arrayType
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (54) arrayType -> . genericType arrays
    (55) arrayType -> . genericType DOT name arrays
    (56) arrayType -> . primitiveType arrays
    (57) arrayType -> . name arrays
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    Identifier      shift and go to state 68

    qualifiedName                  shift and go to state 64
    genericType                    shift and go to state 271
    classOrInterfaceType           shift and go to state 272
    primitiveType                  shift and go to state 277
    classOrInterface               shift and go to state 122
    simpleName                     shift and go to state 66
    arrayType                      shift and go to state 269
    type                           shift and go to state 488
    referenceType                  shift and go to state 273
    name                           shift and go to state 276

state 265

    (185) methodHeader -> methodName formalParameterList_opt . RPAREN methodHeadExtendedDims methodHeadThrowList_opt

    RPAREN          shift and go to state 489


state 266

    (166) formalParameterList_opt -> empty .
    (121) modifiers_opt -> empty .

    RPAREN          reduce using rule 166 (formalParameterList_opt -> empty .)
    BOOLEAN         reduce using rule 121 (modifiers_opt -> empty .)
    VOID            reduce using rule 121 (modifiers_opt -> empty .)
    BYTE            reduce using rule 121 (modifiers_opt -> empty .)
    SHORT           reduce using rule 121 (modifiers_opt -> empty .)
    INT             reduce using rule 121 (modifiers_opt -> empty .)
    LONG            reduce using rule 121 (modifiers_opt -> empty .)
    CHAR            reduce using rule 121 (modifiers_opt -> empty .)
    FLOAT           reduce using rule 121 (modifiers_opt -> empty .)
    DOUBLE          reduce using rule 121 (modifiers_opt -> empty .)
    Identifier      reduce using rule 121 (modifiers_opt -> empty .)


state 267

    (167) formalParameterList -> formalParameter .

    COMMA           reduce using rule 167 (formalParameterList -> formalParameter .)
    RPAREN          reduce using rule 167 (formalParameterList -> formalParameter .)


state 268

    (165) formalParameterList_opt -> formalParameterList .
    (168) formalParameterList -> formalParameterList . COMMA formalParameter

    RPAREN          reduce using rule 165 (formalParameterList_opt -> formalParameterList .)
    COMMA           shift and go to state 490


state 269

    (45) referenceType -> arrayType .

    INSTANCEOF      reduce using rule 45 (referenceType -> arrayType .)
    OP_EQ           reduce using rule 45 (referenceType -> arrayType .)
    OP_NE           reduce using rule 45 (referenceType -> arrayType .)
    AND             reduce using rule 45 (referenceType -> arrayType .)
    CARET           reduce using rule 45 (referenceType -> arrayType .)
    VERTICAL        reduce using rule 45 (referenceType -> arrayType .)
    OP_LAND         reduce using rule 45 (referenceType -> arrayType .)
    QUES            reduce using rule 45 (referenceType -> arrayType .)
    OP_LOR          reduce using rule 45 (referenceType -> arrayType .)
    RPAREN          reduce using rule 45 (referenceType -> arrayType .)
    COMMA           reduce using rule 45 (referenceType -> arrayType .)
    BRPAREN         reduce using rule 45 (referenceType -> arrayType .)
    SEMI            reduce using rule 45 (referenceType -> arrayType .)
    Identifier      reduce using rule 45 (referenceType -> arrayType .)
    MORE            reduce using rule 45 (referenceType -> arrayType .)
    OP_ARRAY        reduce using rule 45 (referenceType -> arrayType .)
    OP_SHRR         reduce using rule 45 (referenceType -> arrayType .)
    OP_SHR          reduce using rule 45 (referenceType -> arrayType .)
    COLON           reduce using rule 45 (referenceType -> arrayType .)
    FRPAREN         reduce using rule 45 (referenceType -> arrayType .)


state 270

    (163) constructorName -> modifiers_opt typeParameters . Identifier LPAREN
    (186) methodName -> modifiers_opt typeParameters . type Identifier LPAREN
    (33) type -> . primitiveType
    (34) type -> . referenceType
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (44) referenceType -> . classOrInterfaceType
    (45) referenceType -> . arrayType
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (54) arrayType -> . genericType arrays
    (55) arrayType -> . genericType DOT name arrays
    (56) arrayType -> . primitiveType arrays
    (57) arrayType -> . name arrays
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    Identifier      shift and go to state 492
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182

    qualifiedName                  shift and go to state 64
    genericType                    shift and go to state 271
    classOrInterfaceType           shift and go to state 272
    primitiveType                  shift and go to state 277
    classOrInterface               shift and go to state 122
    simpleName                     shift and go to state 66
    arrayType                      shift and go to state 269
    type                           shift and go to state 491
    referenceType                  shift and go to state 273
    name                           shift and go to state 276

state 271

    (47) classOrInterfaceType -> genericType .
    (54) arrayType -> genericType . arrays
    (55) arrayType -> genericType . DOT name arrays
    (49) classOrInterface -> genericType . DOT name
    (59) arrays -> . array_loop
    (60) array_loop -> . array
    (61) array_loop -> . array_loop array
    (58) array -> . FLPAREN FRPAREN

    Identifier      reduce using rule 47 (classOrInterfaceType -> genericType .)
    VERTICAL        reduce using rule 47 (classOrInterfaceType -> genericType .)
    INSTANCEOF      reduce using rule 47 (classOrInterfaceType -> genericType .)
    OP_EQ           reduce using rule 47 (classOrInterfaceType -> genericType .)
    OP_NE           reduce using rule 47 (classOrInterfaceType -> genericType .)
    AND             reduce using rule 47 (classOrInterfaceType -> genericType .)
    CARET           reduce using rule 47 (classOrInterfaceType -> genericType .)
    OP_LAND         reduce using rule 47 (classOrInterfaceType -> genericType .)
    QUES            reduce using rule 47 (classOrInterfaceType -> genericType .)
    OP_LOR          reduce using rule 47 (classOrInterfaceType -> genericType .)
    RPAREN          reduce using rule 47 (classOrInterfaceType -> genericType .)
    COMMA           reduce using rule 47 (classOrInterfaceType -> genericType .)
    BRPAREN         reduce using rule 47 (classOrInterfaceType -> genericType .)
    SEMI            reduce using rule 47 (classOrInterfaceType -> genericType .)
    OP_ARRAY        reduce using rule 47 (classOrInterfaceType -> genericType .)
    COLON           reduce using rule 47 (classOrInterfaceType -> genericType .)
    FRPAREN         reduce using rule 47 (classOrInterfaceType -> genericType .)
    DOT             shift and go to state 494
    FLPAREN         shift and go to state 451

    arrays                         shift and go to state 493
    array                          shift and go to state 407
    array_loop                     shift and go to state 413

state 272

    (44) referenceType -> classOrInterfaceType .

    INSTANCEOF      reduce using rule 44 (referenceType -> classOrInterfaceType .)
    OP_EQ           reduce using rule 44 (referenceType -> classOrInterfaceType .)
    OP_NE           reduce using rule 44 (referenceType -> classOrInterfaceType .)
    AND             reduce using rule 44 (referenceType -> classOrInterfaceType .)
    CARET           reduce using rule 44 (referenceType -> classOrInterfaceType .)
    VERTICAL        reduce using rule 44 (referenceType -> classOrInterfaceType .)
    OP_LAND         reduce using rule 44 (referenceType -> classOrInterfaceType .)
    QUES            reduce using rule 44 (referenceType -> classOrInterfaceType .)
    OP_LOR          reduce using rule 44 (referenceType -> classOrInterfaceType .)
    RPAREN          reduce using rule 44 (referenceType -> classOrInterfaceType .)
    COMMA           reduce using rule 44 (referenceType -> classOrInterfaceType .)
    BRPAREN         reduce using rule 44 (referenceType -> classOrInterfaceType .)
    SEMI            reduce using rule 44 (referenceType -> classOrInterfaceType .)
    Identifier      reduce using rule 44 (referenceType -> classOrInterfaceType .)
    MORE            reduce using rule 44 (referenceType -> classOrInterfaceType .)
    OP_ARRAY        reduce using rule 44 (referenceType -> classOrInterfaceType .)
    OP_SHRR         reduce using rule 44 (referenceType -> classOrInterfaceType .)
    OP_SHR          reduce using rule 44 (referenceType -> classOrInterfaceType .)
    COLON           reduce using rule 44 (referenceType -> classOrInterfaceType .)
    FRPAREN         reduce using rule 44 (referenceType -> classOrInterfaceType .)


state 273

    (34) type -> referenceType .

    Identifier      reduce using rule 34 (type -> referenceType .)
    VERTICAL        reduce using rule 34 (type -> referenceType .)
    OP_ARRAY        reduce using rule 34 (type -> referenceType .)


state 274

    (181) fieldDeclaration -> modifiers_opt type . variableDeclarators SEMI
    (187) methodName -> modifiers_opt type . Identifier LPAREN
    (297) variableDeclarators -> . variableDeclarator
    (298) variableDeclarators -> . variableDeclarators COMMA variableDeclarator
    (299) variableDeclarator -> . variableDeclaratorId
    (300) variableDeclarator -> . variableDeclaratorId ASS variableInitializer
    (301) variableDeclaratorId -> . Identifier arrays_opt

    Identifier      shift and go to state 497

    variableDeclarators            shift and go to state 495
    variableDeclaratorId           shift and go to state 496
    variableDeclarator             shift and go to state 498

state 275

    (164) constructorName -> modifiers_opt Identifier . LPAREN
    (31) simpleName -> Identifier .

    LPAREN          shift and go to state 499
    DOT             reduce using rule 31 (simpleName -> Identifier .)
    FLPAREN         reduce using rule 31 (simpleName -> Identifier .)
    LESS            reduce using rule 31 (simpleName -> Identifier .)
    Identifier      reduce using rule 31 (simpleName -> Identifier .)


state 276

    (57) arrayType -> name . arrays
    (48) classOrInterface -> name .
    (32) qualifiedName -> name . DOT simpleName
    (59) arrays -> . array_loop
    (60) array_loop -> . array
    (61) array_loop -> . array_loop array
    (58) array -> . FLPAREN FRPAREN

    LESS            reduce using rule 48 (classOrInterface -> name .)
    VERTICAL        reduce using rule 48 (classOrInterface -> name .)
    Identifier      reduce using rule 48 (classOrInterface -> name .)
    INSTANCEOF      reduce using rule 48 (classOrInterface -> name .)
    OP_EQ           reduce using rule 48 (classOrInterface -> name .)
    OP_NE           reduce using rule 48 (classOrInterface -> name .)
    AND             reduce using rule 48 (classOrInterface -> name .)
    CARET           reduce using rule 48 (classOrInterface -> name .)
    OP_LAND         reduce using rule 48 (classOrInterface -> name .)
    QUES            reduce using rule 48 (classOrInterface -> name .)
    OP_LOR          reduce using rule 48 (classOrInterface -> name .)
    SEMI            reduce using rule 48 (classOrInterface -> name .)
    COLON           reduce using rule 48 (classOrInterface -> name .)
    COMMA           reduce using rule 48 (classOrInterface -> name .)
    RPAREN          reduce using rule 48 (classOrInterface -> name .)
    FRPAREN         reduce using rule 48 (classOrInterface -> name .)
    BRPAREN         reduce using rule 48 (classOrInterface -> name .)
    OP_ARRAY        reduce using rule 48 (classOrInterface -> name .)
    DOT             shift and go to state 145
    FLPAREN         shift and go to state 451

    arrays                         shift and go to state 500
    array                          shift and go to state 407
    array_loop                     shift and go to state 413

state 277

    (33) type -> primitiveType .
    (56) arrayType -> primitiveType . arrays
    (59) arrays -> . array_loop
    (60) array_loop -> . array
    (61) array_loop -> . array_loop array
    (58) array -> . FLPAREN FRPAREN

    VERTICAL        reduce using rule 33 (type -> primitiveType .)
    Identifier      reduce using rule 33 (type -> primitiveType .)
    OP_ARRAY        reduce using rule 33 (type -> primitiveType .)
    FLPAREN         shift and go to state 451

    arrays                         shift and go to state 501
    array                          shift and go to state 407
    array_loop                     shift and go to state 413

state 278

    (160) staticInitializer -> STATIC block .

    SEMI            reduce using rule 160 (staticInitializer -> STATIC block .)
    STATIC          reduce using rule 160 (staticInitializer -> STATIC block .)
    BLPAREN         reduce using rule 160 (staticInitializer -> STATIC block .)
    AT              reduce using rule 160 (staticInitializer -> STATIC block .)
    PUBLIC          reduce using rule 160 (staticInitializer -> STATIC block .)
    PROTECTED       reduce using rule 160 (staticInitializer -> STATIC block .)
    PRIVATE         reduce using rule 160 (staticInitializer -> STATIC block .)
    ABSTRACT        reduce using rule 160 (staticInitializer -> STATIC block .)
    FINAL           reduce using rule 160 (staticInitializer -> STATIC block .)
    NATIVE          reduce using rule 160 (staticInitializer -> STATIC block .)
    SYNCHRONIZED    reduce using rule 160 (staticInitializer -> STATIC block .)
    TRANSIENT       reduce using rule 160 (staticInitializer -> STATIC block .)
    VOLATILE        reduce using rule 160 (staticInitializer -> STATIC block .)
    STRICTFP        reduce using rule 160 (staticInitializer -> STATIC block .)
    Identifier      reduce using rule 160 (staticInitializer -> STATIC block .)
    INTERFACE       reduce using rule 160 (staticInitializer -> STATIC block .)
    ENUM            reduce using rule 160 (staticInitializer -> STATIC block .)
    CLASS           reduce using rule 160 (staticInitializer -> STATIC block .)
    LESS            reduce using rule 160 (staticInitializer -> STATIC block .)
    BOOLEAN         reduce using rule 160 (staticInitializer -> STATIC block .)
    VOID            reduce using rule 160 (staticInitializer -> STATIC block .)
    BYTE            reduce using rule 160 (staticInitializer -> STATIC block .)
    SHORT           reduce using rule 160 (staticInitializer -> STATIC block .)
    INT             reduce using rule 160 (staticInitializer -> STATIC block .)
    LONG            reduce using rule 160 (staticInitializer -> STATIC block .)
    CHAR            reduce using rule 160 (staticInitializer -> STATIC block .)
    FLOAT           reduce using rule 160 (staticInitializer -> STATIC block .)
    DOUBLE          reduce using rule 160 (staticInitializer -> STATIC block .)
    BRPAREN         reduce using rule 160 (staticInitializer -> STATIC block .)


state 279

    (161) constructorDeclaration -> constructorHead methodBody .

    SEMI            reduce using rule 161 (constructorDeclaration -> constructorHead methodBody .)
    STATIC          reduce using rule 161 (constructorDeclaration -> constructorHead methodBody .)
    BLPAREN         reduce using rule 161 (constructorDeclaration -> constructorHead methodBody .)
    AT              reduce using rule 161 (constructorDeclaration -> constructorHead methodBody .)
    PUBLIC          reduce using rule 161 (constructorDeclaration -> constructorHead methodBody .)
    PROTECTED       reduce using rule 161 (constructorDeclaration -> constructorHead methodBody .)
    PRIVATE         reduce using rule 161 (constructorDeclaration -> constructorHead methodBody .)
    ABSTRACT        reduce using rule 161 (constructorDeclaration -> constructorHead methodBody .)
    FINAL           reduce using rule 161 (constructorDeclaration -> constructorHead methodBody .)
    NATIVE          reduce using rule 161 (constructorDeclaration -> constructorHead methodBody .)
    SYNCHRONIZED    reduce using rule 161 (constructorDeclaration -> constructorHead methodBody .)
    TRANSIENT       reduce using rule 161 (constructorDeclaration -> constructorHead methodBody .)
    VOLATILE        reduce using rule 161 (constructorDeclaration -> constructorHead methodBody .)
    STRICTFP        reduce using rule 161 (constructorDeclaration -> constructorHead methodBody .)
    Identifier      reduce using rule 161 (constructorDeclaration -> constructorHead methodBody .)
    INTERFACE       reduce using rule 161 (constructorDeclaration -> constructorHead methodBody .)
    ENUM            reduce using rule 161 (constructorDeclaration -> constructorHead methodBody .)
    CLASS           reduce using rule 161 (constructorDeclaration -> constructorHead methodBody .)
    LESS            reduce using rule 161 (constructorDeclaration -> constructorHead methodBody .)
    BOOLEAN         reduce using rule 161 (constructorDeclaration -> constructorHead methodBody .)
    VOID            reduce using rule 161 (constructorDeclaration -> constructorHead methodBody .)
    BYTE            reduce using rule 161 (constructorDeclaration -> constructorHead methodBody .)
    SHORT           reduce using rule 161 (constructorDeclaration -> constructorHead methodBody .)
    INT             reduce using rule 161 (constructorDeclaration -> constructorHead methodBody .)
    LONG            reduce using rule 161 (constructorDeclaration -> constructorHead methodBody .)
    CHAR            reduce using rule 161 (constructorDeclaration -> constructorHead methodBody .)
    FLOAT           reduce using rule 161 (constructorDeclaration -> constructorHead methodBody .)
    DOUBLE          reduce using rule 161 (constructorDeclaration -> constructorHead methodBody .)
    BRPAREN         reduce using rule 161 (constructorDeclaration -> constructorHead methodBody .)


state 280

    (194) methodBody -> BLPAREN . blockStatements_opt BRPAREN
    (286) blockStatements_opt -> . blockStatements
    (287) blockStatements_opt -> . empty
    (284) blockStatements -> . blockStatement
    (285) blockStatements -> . blockStatements blockStatement
    (631) empty -> .
    (288) blockStatement -> . localVariableDeclarationStatement
    (289) blockStatement -> . statement
    (290) blockStatement -> . classDeclaration
    (291) blockStatement -> . interfaceDeclaration
    (292) blockStatement -> . annotationTypeDeclaration
    (293) blockStatement -> . enumDeclaration
    (294) localVariableDeclarationStatement -> . localVariableDeclaration SEMI
    (304) statement -> . statementWithoutTrailingSubStatement
    (305) statement -> . labeldStatement
    (306) statement -> . ifThenStatement
    (307) statement -> . ifThenElseStatement
    (308) statement -> . whileStatement
    (309) statement -> . forStatement
    (310) statement -> . enhancedForStatement
    (136) classDeclaration -> . classHead classBody
    (195) interfaceDeclaration -> . interfaceHead InterfaceBody
    (239) annotationTypeDeclaration -> . annotationTypeDeclarationHead annotationTypeBody
    (215) enumDeclaration -> . enumHead enumBody
    (295) localVariableDeclaration -> . type variableDeclarators
    (296) localVariableDeclaration -> . modifiers type variableDeclarators
    (311) statementWithoutTrailingSubStatement -> . block
    (312) statementWithoutTrailingSubStatement -> . expressionStatement
    (313) statementWithoutTrailingSubStatement -> . assertStatement
    (314) statementWithoutTrailingSubStatement -> . emptyStatement
    (315) statementWithoutTrailingSubStatement -> . switchStatement
    (316) statementWithoutTrailingSubStatement -> . doStatement
    (317) statementWithoutTrailingSubStatement -> . breakStatement
    (318) statementWithoutTrailingSubStatement -> . continueStatement
    (319) statementWithoutTrailingSubStatement -> . returnStatement
    (320) statementWithoutTrailingSubStatement -> . synchronizedStatement
    (321) statementWithoutTrailingSubStatement -> . throwStatment
    (322) statementWithoutTrailingSubStatement -> . tryStatement
    (323) statementWithoutTrailingSubStatement -> . tryStatementWithResources
    (346) labeldStatement -> . label COLON statement
    (349) ifThenStatement -> . IF LPAREN expression RPAREN statement
    (350) ifThenElseStatement -> . IF LPAREN expression RPAREN statementNoShortIf ELSE statement
    (352) whileStatement -> . WHILE LPAREN expression RPAREN statement
    (354) forStatement -> . FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement
    (367) enhancedForStatement -> . enhancedForStatementHead statement
    (137) classHead -> . className classExtends_opt classImpls_opt
    (196) interfaceHead -> . interfaceHeadName interfaceHeadExtends_opt
    (240) annotationTypeDeclarationHead -> . annotationTypeDeclarationHeadName classExtends_opt classImpls_opt
    (216) enumHead -> . enumHeadName classImpls_opt
    (33) type -> . primitiveType
    (34) type -> . referenceType
    (122) modifiers -> . modifier
    (123) modifiers -> . modifiers modifier
    (283) block -> . BLPAREN blockStatements_opt BRPAREN
    (324) expressionStatement -> . statementExpression SEMI
    (325) expressionStatement -> . explicitConstructorInvocation
    (377) assertStatement -> . ASSERT expression SEMI
    (378) assertStatement -> . ASSERT expression COLON expression SEMI
    (379) emptyStatement -> . SEMI
    (380) switchStatement -> . SWITCH LPAREN expression RPAREN switchBlock
    (393) doStatement -> . DO statement WHILE LPAREN expression RPAREN SEMI
    (394) breakStatement -> . BREAK SEMI
    (395) breakStatement -> . BREAK Identifier SEMI
    (396) continueStatement -> . CONTINUE SEMI
    (397) continueStatement -> . CONTINUE Identifier SEMI
    (398) returnStatement -> . RETURN expression_opt SEMI
    (399) synchronizedStatement -> . SYNCHRONIZED LPAREN expression RPAREN block
    (400) throwStatment -> . THROW expression SEMI
    (401) tryStatement -> . TRY tryBlock catches
    (402) tryStatement -> . TRY tryBlock catches_opt finally
    (413) tryStatementWithResources -> . TRY resourceSpecification tryBlock catches_opt
    (414) tryStatementWithResources -> . TRY resourceSpecification tryBlock catches_opt finally
    (348) label -> . Identifier
    (369) enhancedForStatementHead -> . enhancedForStatementHeadInit COLON expression RPAREN
    (138) className -> . classHeadName1 typeParameters
    (139) className -> . classHeadName1
    (197) interfaceHeadName -> . modifiers_opt INTERFACE Identifier typeParameters
    (198) interfaceHeadName -> . modifiers_opt INTERFACE Identifier
    (241) annotationTypeDeclarationHeadName -> . modifiers AT INTERFACE Identifier
    (242) annotationTypeDeclarationHeadName -> . modifiers AT INTERFACE Identifier typeParameters
    (243) annotationTypeDeclarationHeadName -> . AT INTERFACE Identifier typeParameters
    (244) annotationTypeDeclarationHeadName -> . AT INTERFACE Identifier
    (217) enumHeadName -> . modifiers_opt ENUM Identifier
    (218) enumHeadName -> . modifiers_opt ENUM Identifier typeParameters
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (44) referenceType -> . classOrInterfaceType
    (45) referenceType -> . arrayType
    (124) modifier -> . PUBLIC
    (125) modifier -> . PROTECTED
    (126) modifier -> . PRIVATE
    (127) modifier -> . STATIC
    (128) modifier -> . ABSTRACT
    (129) modifier -> . FINAL
    (130) modifier -> . NATIVE
    (131) modifier -> . SYNCHRONIZED
    (132) modifier -> . TRANSIENT
    (133) modifier -> . VOLATILE
    (134) modifier -> . STRICTFP
    (135) modifier -> . annotation
    (326) statementExpression -> . assignment
    (327) statementExpression -> . preIncrementExpression
    (328) statementExpression -> . preDecrementExpression
    (329) statementExpression -> . postIncrementExpression
    (330) statementExpression -> . postDecrementExpression
    (331) statementExpression -> . methodInvocation
    (332) statementExpression -> . classInstanceCreationExpression
    (424) explicitConstructorInvocation -> . THIS LPAREN argumentList_opt RPAREN SEMI
    (425) explicitConstructorInvocation -> . SUPER LPAREN argumentList_opt RPAREN SEMI
    (426) explicitConstructorInvocation -> . typeArguments SUPER LPAREN argumentList RPAREN SEMI
    (427) explicitConstructorInvocation -> . typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (428) explicitConstructorInvocation -> . primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI
    (429) explicitConstructorInvocation -> . name DOT SUPER LPAREN argumentList_opt RPAREN SEMI
    (430) explicitConstructorInvocation -> . primary DOT THIS LPAREN argumentList_opt RPAREN SEMI
    (431) explicitConstructorInvocation -> . name DOT THIS LPAREN argumentList_opt RPAREN SEMI
    (432) explicitConstructorInvocation -> . primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI
    (433) explicitConstructorInvocation -> . name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI
    (434) explicitConstructorInvocation -> . primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (435) explicitConstructorInvocation -> . name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (370) enhancedForStatementHeadInit -> . FOR LPAREN type Identifier arrays_opt
    (371) enhancedForStatementHeadInit -> . FOR LPAREN modifiers type Identifier arrays_opt
    (140) classHeadName1 -> . modifiers_opt CLASS Identifier
    (120) modifiers_opt -> . modifiers
    (121) modifiers_opt -> . empty
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (54) arrayType -> . genericType arrays
    (55) arrayType -> . genericType DOT name arrays
    (56) arrayType -> . primitiveType arrays
    (57) arrayType -> . name arrays
    (270) annotation -> . normalAnnotation
    (271) annotation -> . markerAnnotation
    (272) annotation -> . singleMemberAnnotation
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (82) typeArguments -> . LESS typeArgumentList1
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (273) normalAnnotation -> . annotationName LPAREN memberValuePairs_opt RPAREN
    (280) markerAnnotation -> . annotationName
    (281) singleMemberAnnotation -> . annotationName LPAREN singleMemberAnnotationMemberValue RPAREN
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (442) classInstanceCreationExpressionName -> . name DOT
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (274) annotationName -> . AT name
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE

    BRPAREN         reduce using rule 631 (empty -> .)
    INTERFACE       reduce using rule 631 (empty -> .)
    ENUM            reduce using rule 631 (empty -> .)
    CLASS           reduce using rule 631 (empty -> .)
    IF              shift and go to state 349
    WHILE           shift and go to state 325
    FOR             shift and go to state 312
    BLPAREN         shift and go to state 120
    ASSERT          shift and go to state 336
    SEMI            shift and go to state 341
    SWITCH          shift and go to state 328
    DO              shift and go to state 335
    BREAK           shift and go to state 305
    CONTINUE        shift and go to state 318
    RETURN          shift and go to state 302
    SYNCHRONIZED    shift and go to state 303
    THROW           shift and go to state 354
    TRY             shift and go to state 314
    Identifier      shift and go to state 316
    AT              shift and go to state 48
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    PUBLIC          shift and go to state 46
    PROTECTED       shift and go to state 6
    PRIVATE         shift and go to state 14
    STATIC          shift and go to state 7
    ABSTRACT        shift and go to state 5
    FINAL           shift and go to state 11
    NATIVE          shift and go to state 12
    TRANSIENT       shift and go to state 19
    VOLATILE        shift and go to state 43
    STRICTFP        shift and go to state 18
    THIS            shift and go to state 300
    SUPER           shift and go to state 353
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    NEW             shift and go to state 326
    LESS            shift and go to state 287
    LPAREN          shift and go to state 348
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    forStatement                   shift and go to state 286
    switchStatement                shift and go to state 288
    assertStatement                shift and go to state 289
    blockStatement                 shift and go to state 290
    genericType                    shift and go to state 271
    markerAnnotation               shift and go to state 9
    classOrInterfaceType           shift and go to state 272
    preIncrementExpression         shift and go to state 308
    booleanLiteral                 shift and go to state 173
    ifThenElseStatement            shift and go to state 291
    primaryNoNewArray              shift and go to state 178
    whileStatement                 shift and go to state 292
    classHeadName1                 shift and go to state 33
    annotationTypeDeclarationHeadName shift and go to state 34
    postIncrementExpression        shift and go to state 293
    localVariableDeclarationStatement shift and go to state 294
    emptyStatement                 shift and go to state 295
    enhancedForStatementHead       shift and go to state 296
    returnStatement                shift and go to state 297
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 298
    name                           shift and go to state 299
    expressionStatement            shift and go to state 301
    annotationName                 shift and go to state 40
    classOrInterface               shift and go to state 122
    qualifiedName                  shift and go to state 64
    continueStatement              shift and go to state 304
    primitiveType                  shift and go to state 334
    postDecrementExpression        shift and go to state 306
    typeArguments                  shift and go to state 307
    label                          shift and go to state 309
    simpleName                     shift and go to state 66
    throwStatment                  shift and go to state 310
    methodInvocation               shift and go to state 311
    classInstanceCreationExpressionName shift and go to state 187
    enhancedForStatementHeadInit   shift and go to state 313
    enumHead                       shift and go to state 30
    classDeclaration               shift and go to state 315
    annotationTypeDeclaration      shift and go to state 317
    interfaceDeclaration           shift and go to state 343
    normalAnnotation               shift and go to state 24
    blockStatements_opt            shift and go to state 502
    preDecrementExpression         shift and go to state 320
    block                          shift and go to state 321
    classInstanceCreationExpression shift and go to state 322
    localVariableDeclaration       shift and go to state 323
    modifiers_opt                  shift and go to state 1
    primary                        shift and go to state 324
    singleMemberAnnotation         shift and go to state 8
    enumHeadName                   shift and go to state 10
    doStatement                    shift and go to state 327
    literal                        shift and go to state 208
    labeldStatement                shift and go to state 329
    statement                      shift and go to state 330
    interfaceHeadName              shift and go to state 27
    referenceType                  shift and go to state 273
    type                           shift and go to state 331
    empty                          shift and go to state 332
    annotationTypeDeclarationHead  shift and go to state 15
    modifiers                      shift and go to state 333
    arrayType                      shift and go to state 269
    className                      shift and go to state 13
    modifier                       shift and go to state 45
    arrayCreationWithArrayInitializer shift and go to state 227
    classHead                      shift and go to state 3
    breakStatement                 shift and go to state 337
    tryStatementWithResources      shift and go to state 338
    synchronizedStatement          shift and go to state 339
    enumDeclaration                shift and go to state 340
    arrayCreationWithoutArrayInitializer shift and go to state 232
    tryStatement                   shift and go to state 342
    FloatingPointLiteral           shift and go to state 214
    fieldAccess                    shift and go to state 189
    statementWithoutTrailingSubStatement shift and go to state 344
    integerLiteral                 shift and go to state 183
    blockStatements                shift and go to state 345
    assignment                     shift and go to state 346
    ifThenStatement                shift and go to state 347
    annotation                     shift and go to state 35
    statementExpression            shift and go to state 350
    explicitConstructorInvocation  shift and go to state 351
    enhancedForStatement           shift and go to state 352
    interfaceHead                  shift and go to state 47

state 281

    (155) classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .

    SEMI            reduce using rule 155 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    STATIC          reduce using rule 155 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    BLPAREN         reduce using rule 155 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    AT              reduce using rule 155 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    PUBLIC          reduce using rule 155 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    PROTECTED       reduce using rule 155 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    PRIVATE         reduce using rule 155 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    ABSTRACT        reduce using rule 155 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    FINAL           reduce using rule 155 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    NATIVE          reduce using rule 155 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    SYNCHRONIZED    reduce using rule 155 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    TRANSIENT       reduce using rule 155 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    VOLATILE        reduce using rule 155 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    STRICTFP        reduce using rule 155 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    Identifier      reduce using rule 155 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    INTERFACE       reduce using rule 155 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    ENUM            reduce using rule 155 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    CLASS           reduce using rule 155 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    LESS            reduce using rule 155 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    BOOLEAN         reduce using rule 155 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    VOID            reduce using rule 155 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    BYTE            reduce using rule 155 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    SHORT           reduce using rule 155 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    INT             reduce using rule 155 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    LONG            reduce using rule 155 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    CHAR            reduce using rule 155 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    FLOAT           reduce using rule 155 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    DOUBLE          reduce using rule 155 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)
    BRPAREN         reduce using rule 155 (classBodyDeclarations -> classBodyDeclarations classBodyDeclaration .)


state 282

    (162) constructorHead -> constructorName formalParameterList_opt . RPAREN methodHeadThrowList_opt

    RPAREN          shift and go to state 503


state 283

    (183) methodDeclaration -> methodHeader methodBody .

    SEMI            reduce using rule 183 (methodDeclaration -> methodHeader methodBody .)
    STATIC          reduce using rule 183 (methodDeclaration -> methodHeader methodBody .)
    BLPAREN         reduce using rule 183 (methodDeclaration -> methodHeader methodBody .)
    AT              reduce using rule 183 (methodDeclaration -> methodHeader methodBody .)
    PUBLIC          reduce using rule 183 (methodDeclaration -> methodHeader methodBody .)
    PROTECTED       reduce using rule 183 (methodDeclaration -> methodHeader methodBody .)
    PRIVATE         reduce using rule 183 (methodDeclaration -> methodHeader methodBody .)
    ABSTRACT        reduce using rule 183 (methodDeclaration -> methodHeader methodBody .)
    FINAL           reduce using rule 183 (methodDeclaration -> methodHeader methodBody .)
    NATIVE          reduce using rule 183 (methodDeclaration -> methodHeader methodBody .)
    SYNCHRONIZED    reduce using rule 183 (methodDeclaration -> methodHeader methodBody .)
    TRANSIENT       reduce using rule 183 (methodDeclaration -> methodHeader methodBody .)
    VOLATILE        reduce using rule 183 (methodDeclaration -> methodHeader methodBody .)
    STRICTFP        reduce using rule 183 (methodDeclaration -> methodHeader methodBody .)
    Identifier      reduce using rule 183 (methodDeclaration -> methodHeader methodBody .)
    INTERFACE       reduce using rule 183 (methodDeclaration -> methodHeader methodBody .)
    ENUM            reduce using rule 183 (methodDeclaration -> methodHeader methodBody .)
    CLASS           reduce using rule 183 (methodDeclaration -> methodHeader methodBody .)
    LESS            reduce using rule 183 (methodDeclaration -> methodHeader methodBody .)
    BOOLEAN         reduce using rule 183 (methodDeclaration -> methodHeader methodBody .)
    VOID            reduce using rule 183 (methodDeclaration -> methodHeader methodBody .)
    BYTE            reduce using rule 183 (methodDeclaration -> methodHeader methodBody .)
    SHORT           reduce using rule 183 (methodDeclaration -> methodHeader methodBody .)
    INT             reduce using rule 183 (methodDeclaration -> methodHeader methodBody .)
    LONG            reduce using rule 183 (methodDeclaration -> methodHeader methodBody .)
    CHAR            reduce using rule 183 (methodDeclaration -> methodHeader methodBody .)
    FLOAT           reduce using rule 183 (methodDeclaration -> methodHeader methodBody .)
    DOUBLE          reduce using rule 183 (methodDeclaration -> methodHeader methodBody .)
    BRPAREN         reduce using rule 183 (methodDeclaration -> methodHeader methodBody .)


state 284

    (184) abstractMethodDeclaration -> methodHeader SEMI .

    SEMI            reduce using rule 184 (abstractMethodDeclaration -> methodHeader SEMI .)
    AT              reduce using rule 184 (abstractMethodDeclaration -> methodHeader SEMI .)
    PUBLIC          reduce using rule 184 (abstractMethodDeclaration -> methodHeader SEMI .)
    PROTECTED       reduce using rule 184 (abstractMethodDeclaration -> methodHeader SEMI .)
    PRIVATE         reduce using rule 184 (abstractMethodDeclaration -> methodHeader SEMI .)
    STATIC          reduce using rule 184 (abstractMethodDeclaration -> methodHeader SEMI .)
    ABSTRACT        reduce using rule 184 (abstractMethodDeclaration -> methodHeader SEMI .)
    FINAL           reduce using rule 184 (abstractMethodDeclaration -> methodHeader SEMI .)
    NATIVE          reduce using rule 184 (abstractMethodDeclaration -> methodHeader SEMI .)
    SYNCHRONIZED    reduce using rule 184 (abstractMethodDeclaration -> methodHeader SEMI .)
    TRANSIENT       reduce using rule 184 (abstractMethodDeclaration -> methodHeader SEMI .)
    VOLATILE        reduce using rule 184 (abstractMethodDeclaration -> methodHeader SEMI .)
    STRICTFP        reduce using rule 184 (abstractMethodDeclaration -> methodHeader SEMI .)
    INTERFACE       reduce using rule 184 (abstractMethodDeclaration -> methodHeader SEMI .)
    ENUM            reduce using rule 184 (abstractMethodDeclaration -> methodHeader SEMI .)
    CLASS           reduce using rule 184 (abstractMethodDeclaration -> methodHeader SEMI .)
    LESS            reduce using rule 184 (abstractMethodDeclaration -> methodHeader SEMI .)
    BOOLEAN         reduce using rule 184 (abstractMethodDeclaration -> methodHeader SEMI .)
    VOID            reduce using rule 184 (abstractMethodDeclaration -> methodHeader SEMI .)
    BYTE            reduce using rule 184 (abstractMethodDeclaration -> methodHeader SEMI .)
    SHORT           reduce using rule 184 (abstractMethodDeclaration -> methodHeader SEMI .)
    INT             reduce using rule 184 (abstractMethodDeclaration -> methodHeader SEMI .)
    LONG            reduce using rule 184 (abstractMethodDeclaration -> methodHeader SEMI .)
    CHAR            reduce using rule 184 (abstractMethodDeclaration -> methodHeader SEMI .)
    FLOAT           reduce using rule 184 (abstractMethodDeclaration -> methodHeader SEMI .)
    DOUBLE          reduce using rule 184 (abstractMethodDeclaration -> methodHeader SEMI .)
    Identifier      reduce using rule 184 (abstractMethodDeclaration -> methodHeader SEMI .)
    BRPAREN         reduce using rule 184 (abstractMethodDeclaration -> methodHeader SEMI .)
    BLPAREN         reduce using rule 184 (abstractMethodDeclaration -> methodHeader SEMI .)


state 285

    (151) classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .

    COMMA           reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    SEMI            reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    BRPAREN         reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    FLPAREN         reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    DOT             reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    MULT            reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    SLASH           reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    PERCENT         reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    PLUS            reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    DASH            reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    OP_SHR          reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    OP_SHL          reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    OP_SHRR         reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    LESS            reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    OP_GE           reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    MORE            reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    OP_LE           reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    INSTANCEOF      reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    OP_EQ           reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    OP_NE           reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    AND             reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    CARET           reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    VERTICAL        reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    OP_LAND         reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    QUES            reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    OP_LOR          reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    RPAREN          reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    OP_INC          reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    OP_DEC          reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    ASS             reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    ASS_ADD         reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    ASS_SUB         reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    ASS_MUL         reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    ASS_DIV         reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    ASS_AND         reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    ASS_OR          reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    ASS_XOR         reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    ASS_MOD         reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    ASS_SHL         reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    ASS_SHRR        reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    ASS_SHR         reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    COLON           reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    FRPAREN         reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    AT              reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    PUBLIC          reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    PROTECTED       reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    PRIVATE         reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    STATIC          reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    ABSTRACT        reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    FINAL           reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    NATIVE          reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    SYNCHRONIZED    reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    TRANSIENT       reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    VOLATILE        reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    STRICTFP        reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    INTERFACE       reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    ENUM            reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    CLASS           reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    $end            reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    BLPAREN         reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    Identifier      reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    BOOLEAN         reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    VOID            reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    BYTE            reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    SHORT           reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    INT             reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    LONG            reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    CHAR            reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    FLOAT           reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    DOUBLE          reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    IF              reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    WHILE           reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    FOR             reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    ASSERT          reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    SWITCH          reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    DO              reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    BREAK           reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    CONTINUE        reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    RETURN          reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    THROW           reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    TRY             reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    THIS            reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    SUPER           reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    NEW             reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    LPAREN          reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    CharacterLiteral reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    StringLiteral   reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    NULL            reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    LONG_NUMBER     reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    LONG_HEX_NUMBER reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    NON_INTEGER_1   reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    NON_INTEGER_2   reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    NON_INTEGER_3   reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    NON_INTEGER_4   reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    NON_INTEGER_5   reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    NON_INTEGER_6   reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    TRUE            reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    FALSE           reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    CASE            reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)
    DEFAULT         reduce using rule 151 (classBody -> BLPAREN classBodyDeclarations_opt BRPAREN .)


state 286

    (309) statement -> forStatement .

    IF              reduce using rule 309 (statement -> forStatement .)
    WHILE           reduce using rule 309 (statement -> forStatement .)
    FOR             reduce using rule 309 (statement -> forStatement .)
    BLPAREN         reduce using rule 309 (statement -> forStatement .)
    ASSERT          reduce using rule 309 (statement -> forStatement .)
    SEMI            reduce using rule 309 (statement -> forStatement .)
    SWITCH          reduce using rule 309 (statement -> forStatement .)
    DO              reduce using rule 309 (statement -> forStatement .)
    BREAK           reduce using rule 309 (statement -> forStatement .)
    CONTINUE        reduce using rule 309 (statement -> forStatement .)
    RETURN          reduce using rule 309 (statement -> forStatement .)
    SYNCHRONIZED    reduce using rule 309 (statement -> forStatement .)
    THROW           reduce using rule 309 (statement -> forStatement .)
    TRY             reduce using rule 309 (statement -> forStatement .)
    Identifier      reduce using rule 309 (statement -> forStatement .)
    AT              reduce using rule 309 (statement -> forStatement .)
    BOOLEAN         reduce using rule 309 (statement -> forStatement .)
    VOID            reduce using rule 309 (statement -> forStatement .)
    BYTE            reduce using rule 309 (statement -> forStatement .)
    SHORT           reduce using rule 309 (statement -> forStatement .)
    INT             reduce using rule 309 (statement -> forStatement .)
    LONG            reduce using rule 309 (statement -> forStatement .)
    CHAR            reduce using rule 309 (statement -> forStatement .)
    FLOAT           reduce using rule 309 (statement -> forStatement .)
    DOUBLE          reduce using rule 309 (statement -> forStatement .)
    PUBLIC          reduce using rule 309 (statement -> forStatement .)
    PROTECTED       reduce using rule 309 (statement -> forStatement .)
    PRIVATE         reduce using rule 309 (statement -> forStatement .)
    STATIC          reduce using rule 309 (statement -> forStatement .)
    ABSTRACT        reduce using rule 309 (statement -> forStatement .)
    FINAL           reduce using rule 309 (statement -> forStatement .)
    NATIVE          reduce using rule 309 (statement -> forStatement .)
    TRANSIENT       reduce using rule 309 (statement -> forStatement .)
    VOLATILE        reduce using rule 309 (statement -> forStatement .)
    STRICTFP        reduce using rule 309 (statement -> forStatement .)
    THIS            reduce using rule 309 (statement -> forStatement .)
    SUPER           reduce using rule 309 (statement -> forStatement .)
    OP_INC          reduce using rule 309 (statement -> forStatement .)
    OP_DEC          reduce using rule 309 (statement -> forStatement .)
    NEW             reduce using rule 309 (statement -> forStatement .)
    LESS            reduce using rule 309 (statement -> forStatement .)
    LPAREN          reduce using rule 309 (statement -> forStatement .)
    CharacterLiteral reduce using rule 309 (statement -> forStatement .)
    StringLiteral   reduce using rule 309 (statement -> forStatement .)
    NULL            reduce using rule 309 (statement -> forStatement .)
    LONG_NUMBER     reduce using rule 309 (statement -> forStatement .)
    LONG_HEX_NUMBER reduce using rule 309 (statement -> forStatement .)
    NON_INTEGER_1   reduce using rule 309 (statement -> forStatement .)
    NON_INTEGER_2   reduce using rule 309 (statement -> forStatement .)
    NON_INTEGER_3   reduce using rule 309 (statement -> forStatement .)
    NON_INTEGER_4   reduce using rule 309 (statement -> forStatement .)
    NON_INTEGER_5   reduce using rule 309 (statement -> forStatement .)
    NON_INTEGER_6   reduce using rule 309 (statement -> forStatement .)
    TRUE            reduce using rule 309 (statement -> forStatement .)
    FALSE           reduce using rule 309 (statement -> forStatement .)
    INTERFACE       reduce using rule 309 (statement -> forStatement .)
    ENUM            reduce using rule 309 (statement -> forStatement .)
    CLASS           reduce using rule 309 (statement -> forStatement .)
    BRPAREN         reduce using rule 309 (statement -> forStatement .)
    CASE            reduce using rule 309 (statement -> forStatement .)
    DEFAULT         reduce using rule 309 (statement -> forStatement .)


state 287

    (82) typeArguments -> LESS . typeArgumentList1
    (87) typeArgumentList1 -> . typeArgument1
    (88) typeArgumentList1 -> . typeArgumentList COMMA typeArgument1
    (89) typeArgument1 -> . referenceType1
    (90) typeArgument1 -> . wildcard1
    (85) typeArgumentList -> . typeArgument
    (86) typeArgumentList -> . typeArgumentList COMMA typeArgument
    (91) referenceType1 -> . referenceType MORE
    (92) referenceType1 -> . classOrInterface LESS typeArgumentList2
    (108) wildcard1 -> . QUES MORE
    (109) wildcard1 -> . QUES wildcardBounds1
    (83) typeArgument -> . referenceType
    (84) typeArgument -> . wildcard
    (44) referenceType -> . classOrInterfaceType
    (45) referenceType -> . arrayType
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (104) wildcard -> . QUES
    (105) wildcard -> . QUES wildcardBounds
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (54) arrayType -> . genericType arrays
    (55) arrayType -> . genericType DOT name arrays
    (56) arrayType -> . primitiveType arrays
    (57) arrayType -> . name arrays
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    QUES            shift and go to state 515
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    Identifier      shift and go to state 68

    wildcard1                      shift and go to state 508
    primitiveType                  shift and go to state 504
    name                           shift and go to state 512
    simpleName                     shift and go to state 66
    classOrInterfaceType           shift and go to state 272
    typeArgument1                  shift and go to state 513
    qualifiedName                  shift and go to state 64
    arrayType                      shift and go to state 269
    typeArgumentList1              shift and go to state 509
    classOrInterface               shift and go to state 514
    typeArgument                   shift and go to state 510
    typeArgumentList               shift and go to state 507
    wildcard                       shift and go to state 516
    referenceType1                 shift and go to state 511
    genericType                    shift and go to state 505
    referenceType                  shift and go to state 506

state 288

    (315) statementWithoutTrailingSubStatement -> switchStatement .

    IF              reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    WHILE           reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    FOR             reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    BLPAREN         reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    ASSERT          reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    SEMI            reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    SWITCH          reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    DO              reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    BREAK           reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    CONTINUE        reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    RETURN          reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    SYNCHRONIZED    reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    THROW           reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    TRY             reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    Identifier      reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    AT              reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    BOOLEAN         reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    VOID            reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    BYTE            reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    SHORT           reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    INT             reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    LONG            reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    CHAR            reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    FLOAT           reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    DOUBLE          reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    PUBLIC          reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    PROTECTED       reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    PRIVATE         reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    STATIC          reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    ABSTRACT        reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    FINAL           reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    NATIVE          reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    TRANSIENT       reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    VOLATILE        reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    STRICTFP        reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    THIS            reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    SUPER           reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    OP_INC          reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    OP_DEC          reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    NEW             reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    LESS            reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    LPAREN          reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    CharacterLiteral reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    StringLiteral   reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    NULL            reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    LONG_NUMBER     reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    LONG_HEX_NUMBER reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    NON_INTEGER_1   reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    NON_INTEGER_2   reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    NON_INTEGER_3   reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    NON_INTEGER_4   reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    NON_INTEGER_5   reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    NON_INTEGER_6   reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    TRUE            reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    FALSE           reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    INTERFACE       reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    ENUM            reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    CLASS           reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    BRPAREN         reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    CASE            reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    DEFAULT         reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)
    ELSE            reduce using rule 315 (statementWithoutTrailingSubStatement -> switchStatement .)


state 289

    (313) statementWithoutTrailingSubStatement -> assertStatement .

    IF              reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    WHILE           reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    FOR             reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    BLPAREN         reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    ASSERT          reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    SEMI            reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    SWITCH          reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    DO              reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    BREAK           reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    CONTINUE        reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    RETURN          reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    SYNCHRONIZED    reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    THROW           reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    TRY             reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    Identifier      reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    AT              reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    BOOLEAN         reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    VOID            reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    BYTE            reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    SHORT           reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    INT             reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    LONG            reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    CHAR            reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    FLOAT           reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    DOUBLE          reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    PUBLIC          reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    PROTECTED       reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    PRIVATE         reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    STATIC          reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    ABSTRACT        reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    FINAL           reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    NATIVE          reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    TRANSIENT       reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    VOLATILE        reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    STRICTFP        reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    THIS            reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    SUPER           reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    OP_INC          reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    OP_DEC          reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    NEW             reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    LESS            reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    LPAREN          reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    CharacterLiteral reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    StringLiteral   reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    NULL            reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    LONG_NUMBER     reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    LONG_HEX_NUMBER reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    NON_INTEGER_1   reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    NON_INTEGER_2   reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    NON_INTEGER_3   reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    NON_INTEGER_4   reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    NON_INTEGER_5   reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    NON_INTEGER_6   reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    TRUE            reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    FALSE           reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    INTERFACE       reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    ENUM            reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    CLASS           reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    BRPAREN         reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    CASE            reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    DEFAULT         reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)
    ELSE            reduce using rule 313 (statementWithoutTrailingSubStatement -> assertStatement .)


state 290

    (284) blockStatements -> blockStatement .

    IF              reduce using rule 284 (blockStatements -> blockStatement .)
    WHILE           reduce using rule 284 (blockStatements -> blockStatement .)
    FOR             reduce using rule 284 (blockStatements -> blockStatement .)
    BLPAREN         reduce using rule 284 (blockStatements -> blockStatement .)
    ASSERT          reduce using rule 284 (blockStatements -> blockStatement .)
    SEMI            reduce using rule 284 (blockStatements -> blockStatement .)
    SWITCH          reduce using rule 284 (blockStatements -> blockStatement .)
    DO              reduce using rule 284 (blockStatements -> blockStatement .)
    BREAK           reduce using rule 284 (blockStatements -> blockStatement .)
    CONTINUE        reduce using rule 284 (blockStatements -> blockStatement .)
    RETURN          reduce using rule 284 (blockStatements -> blockStatement .)
    SYNCHRONIZED    reduce using rule 284 (blockStatements -> blockStatement .)
    THROW           reduce using rule 284 (blockStatements -> blockStatement .)
    TRY             reduce using rule 284 (blockStatements -> blockStatement .)
    Identifier      reduce using rule 284 (blockStatements -> blockStatement .)
    AT              reduce using rule 284 (blockStatements -> blockStatement .)
    BOOLEAN         reduce using rule 284 (blockStatements -> blockStatement .)
    VOID            reduce using rule 284 (blockStatements -> blockStatement .)
    BYTE            reduce using rule 284 (blockStatements -> blockStatement .)
    SHORT           reduce using rule 284 (blockStatements -> blockStatement .)
    INT             reduce using rule 284 (blockStatements -> blockStatement .)
    LONG            reduce using rule 284 (blockStatements -> blockStatement .)
    CHAR            reduce using rule 284 (blockStatements -> blockStatement .)
    FLOAT           reduce using rule 284 (blockStatements -> blockStatement .)
    DOUBLE          reduce using rule 284 (blockStatements -> blockStatement .)
    PUBLIC          reduce using rule 284 (blockStatements -> blockStatement .)
    PROTECTED       reduce using rule 284 (blockStatements -> blockStatement .)
    PRIVATE         reduce using rule 284 (blockStatements -> blockStatement .)
    STATIC          reduce using rule 284 (blockStatements -> blockStatement .)
    ABSTRACT        reduce using rule 284 (blockStatements -> blockStatement .)
    FINAL           reduce using rule 284 (blockStatements -> blockStatement .)
    NATIVE          reduce using rule 284 (blockStatements -> blockStatement .)
    TRANSIENT       reduce using rule 284 (blockStatements -> blockStatement .)
    VOLATILE        reduce using rule 284 (blockStatements -> blockStatement .)
    STRICTFP        reduce using rule 284 (blockStatements -> blockStatement .)
    THIS            reduce using rule 284 (blockStatements -> blockStatement .)
    SUPER           reduce using rule 284 (blockStatements -> blockStatement .)
    OP_INC          reduce using rule 284 (blockStatements -> blockStatement .)
    OP_DEC          reduce using rule 284 (blockStatements -> blockStatement .)
    NEW             reduce using rule 284 (blockStatements -> blockStatement .)
    LESS            reduce using rule 284 (blockStatements -> blockStatement .)
    LPAREN          reduce using rule 284 (blockStatements -> blockStatement .)
    CharacterLiteral reduce using rule 284 (blockStatements -> blockStatement .)
    StringLiteral   reduce using rule 284 (blockStatements -> blockStatement .)
    NULL            reduce using rule 284 (blockStatements -> blockStatement .)
    LONG_NUMBER     reduce using rule 284 (blockStatements -> blockStatement .)
    LONG_HEX_NUMBER reduce using rule 284 (blockStatements -> blockStatement .)
    NON_INTEGER_1   reduce using rule 284 (blockStatements -> blockStatement .)
    NON_INTEGER_2   reduce using rule 284 (blockStatements -> blockStatement .)
    NON_INTEGER_3   reduce using rule 284 (blockStatements -> blockStatement .)
    NON_INTEGER_4   reduce using rule 284 (blockStatements -> blockStatement .)
    NON_INTEGER_5   reduce using rule 284 (blockStatements -> blockStatement .)
    NON_INTEGER_6   reduce using rule 284 (blockStatements -> blockStatement .)
    TRUE            reduce using rule 284 (blockStatements -> blockStatement .)
    FALSE           reduce using rule 284 (blockStatements -> blockStatement .)
    INTERFACE       reduce using rule 284 (blockStatements -> blockStatement .)
    ENUM            reduce using rule 284 (blockStatements -> blockStatement .)
    CLASS           reduce using rule 284 (blockStatements -> blockStatement .)
    BRPAREN         reduce using rule 284 (blockStatements -> blockStatement .)
    CASE            reduce using rule 284 (blockStatements -> blockStatement .)
    DEFAULT         reduce using rule 284 (blockStatements -> blockStatement .)


state 291

    (307) statement -> ifThenElseStatement .

    IF              reduce using rule 307 (statement -> ifThenElseStatement .)
    WHILE           reduce using rule 307 (statement -> ifThenElseStatement .)
    FOR             reduce using rule 307 (statement -> ifThenElseStatement .)
    BLPAREN         reduce using rule 307 (statement -> ifThenElseStatement .)
    ASSERT          reduce using rule 307 (statement -> ifThenElseStatement .)
    SEMI            reduce using rule 307 (statement -> ifThenElseStatement .)
    SWITCH          reduce using rule 307 (statement -> ifThenElseStatement .)
    DO              reduce using rule 307 (statement -> ifThenElseStatement .)
    BREAK           reduce using rule 307 (statement -> ifThenElseStatement .)
    CONTINUE        reduce using rule 307 (statement -> ifThenElseStatement .)
    RETURN          reduce using rule 307 (statement -> ifThenElseStatement .)
    SYNCHRONIZED    reduce using rule 307 (statement -> ifThenElseStatement .)
    THROW           reduce using rule 307 (statement -> ifThenElseStatement .)
    TRY             reduce using rule 307 (statement -> ifThenElseStatement .)
    Identifier      reduce using rule 307 (statement -> ifThenElseStatement .)
    AT              reduce using rule 307 (statement -> ifThenElseStatement .)
    BOOLEAN         reduce using rule 307 (statement -> ifThenElseStatement .)
    VOID            reduce using rule 307 (statement -> ifThenElseStatement .)
    BYTE            reduce using rule 307 (statement -> ifThenElseStatement .)
    SHORT           reduce using rule 307 (statement -> ifThenElseStatement .)
    INT             reduce using rule 307 (statement -> ifThenElseStatement .)
    LONG            reduce using rule 307 (statement -> ifThenElseStatement .)
    CHAR            reduce using rule 307 (statement -> ifThenElseStatement .)
    FLOAT           reduce using rule 307 (statement -> ifThenElseStatement .)
    DOUBLE          reduce using rule 307 (statement -> ifThenElseStatement .)
    PUBLIC          reduce using rule 307 (statement -> ifThenElseStatement .)
    PROTECTED       reduce using rule 307 (statement -> ifThenElseStatement .)
    PRIVATE         reduce using rule 307 (statement -> ifThenElseStatement .)
    STATIC          reduce using rule 307 (statement -> ifThenElseStatement .)
    ABSTRACT        reduce using rule 307 (statement -> ifThenElseStatement .)
    FINAL           reduce using rule 307 (statement -> ifThenElseStatement .)
    NATIVE          reduce using rule 307 (statement -> ifThenElseStatement .)
    TRANSIENT       reduce using rule 307 (statement -> ifThenElseStatement .)
    VOLATILE        reduce using rule 307 (statement -> ifThenElseStatement .)
    STRICTFP        reduce using rule 307 (statement -> ifThenElseStatement .)
    THIS            reduce using rule 307 (statement -> ifThenElseStatement .)
    SUPER           reduce using rule 307 (statement -> ifThenElseStatement .)
    OP_INC          reduce using rule 307 (statement -> ifThenElseStatement .)
    OP_DEC          reduce using rule 307 (statement -> ifThenElseStatement .)
    NEW             reduce using rule 307 (statement -> ifThenElseStatement .)
    LESS            reduce using rule 307 (statement -> ifThenElseStatement .)
    LPAREN          reduce using rule 307 (statement -> ifThenElseStatement .)
    CharacterLiteral reduce using rule 307 (statement -> ifThenElseStatement .)
    StringLiteral   reduce using rule 307 (statement -> ifThenElseStatement .)
    NULL            reduce using rule 307 (statement -> ifThenElseStatement .)
    LONG_NUMBER     reduce using rule 307 (statement -> ifThenElseStatement .)
    LONG_HEX_NUMBER reduce using rule 307 (statement -> ifThenElseStatement .)
    NON_INTEGER_1   reduce using rule 307 (statement -> ifThenElseStatement .)
    NON_INTEGER_2   reduce using rule 307 (statement -> ifThenElseStatement .)
    NON_INTEGER_3   reduce using rule 307 (statement -> ifThenElseStatement .)
    NON_INTEGER_4   reduce using rule 307 (statement -> ifThenElseStatement .)
    NON_INTEGER_5   reduce using rule 307 (statement -> ifThenElseStatement .)
    NON_INTEGER_6   reduce using rule 307 (statement -> ifThenElseStatement .)
    TRUE            reduce using rule 307 (statement -> ifThenElseStatement .)
    FALSE           reduce using rule 307 (statement -> ifThenElseStatement .)
    INTERFACE       reduce using rule 307 (statement -> ifThenElseStatement .)
    ENUM            reduce using rule 307 (statement -> ifThenElseStatement .)
    CLASS           reduce using rule 307 (statement -> ifThenElseStatement .)
    BRPAREN         reduce using rule 307 (statement -> ifThenElseStatement .)
    CASE            reduce using rule 307 (statement -> ifThenElseStatement .)
    DEFAULT         reduce using rule 307 (statement -> ifThenElseStatement .)


state 292

    (308) statement -> whileStatement .

    IF              reduce using rule 308 (statement -> whileStatement .)
    WHILE           reduce using rule 308 (statement -> whileStatement .)
    FOR             reduce using rule 308 (statement -> whileStatement .)
    BLPAREN         reduce using rule 308 (statement -> whileStatement .)
    ASSERT          reduce using rule 308 (statement -> whileStatement .)
    SEMI            reduce using rule 308 (statement -> whileStatement .)
    SWITCH          reduce using rule 308 (statement -> whileStatement .)
    DO              reduce using rule 308 (statement -> whileStatement .)
    BREAK           reduce using rule 308 (statement -> whileStatement .)
    CONTINUE        reduce using rule 308 (statement -> whileStatement .)
    RETURN          reduce using rule 308 (statement -> whileStatement .)
    SYNCHRONIZED    reduce using rule 308 (statement -> whileStatement .)
    THROW           reduce using rule 308 (statement -> whileStatement .)
    TRY             reduce using rule 308 (statement -> whileStatement .)
    Identifier      reduce using rule 308 (statement -> whileStatement .)
    AT              reduce using rule 308 (statement -> whileStatement .)
    BOOLEAN         reduce using rule 308 (statement -> whileStatement .)
    VOID            reduce using rule 308 (statement -> whileStatement .)
    BYTE            reduce using rule 308 (statement -> whileStatement .)
    SHORT           reduce using rule 308 (statement -> whileStatement .)
    INT             reduce using rule 308 (statement -> whileStatement .)
    LONG            reduce using rule 308 (statement -> whileStatement .)
    CHAR            reduce using rule 308 (statement -> whileStatement .)
    FLOAT           reduce using rule 308 (statement -> whileStatement .)
    DOUBLE          reduce using rule 308 (statement -> whileStatement .)
    PUBLIC          reduce using rule 308 (statement -> whileStatement .)
    PROTECTED       reduce using rule 308 (statement -> whileStatement .)
    PRIVATE         reduce using rule 308 (statement -> whileStatement .)
    STATIC          reduce using rule 308 (statement -> whileStatement .)
    ABSTRACT        reduce using rule 308 (statement -> whileStatement .)
    FINAL           reduce using rule 308 (statement -> whileStatement .)
    NATIVE          reduce using rule 308 (statement -> whileStatement .)
    TRANSIENT       reduce using rule 308 (statement -> whileStatement .)
    VOLATILE        reduce using rule 308 (statement -> whileStatement .)
    STRICTFP        reduce using rule 308 (statement -> whileStatement .)
    THIS            reduce using rule 308 (statement -> whileStatement .)
    SUPER           reduce using rule 308 (statement -> whileStatement .)
    OP_INC          reduce using rule 308 (statement -> whileStatement .)
    OP_DEC          reduce using rule 308 (statement -> whileStatement .)
    NEW             reduce using rule 308 (statement -> whileStatement .)
    LESS            reduce using rule 308 (statement -> whileStatement .)
    LPAREN          reduce using rule 308 (statement -> whileStatement .)
    CharacterLiteral reduce using rule 308 (statement -> whileStatement .)
    StringLiteral   reduce using rule 308 (statement -> whileStatement .)
    NULL            reduce using rule 308 (statement -> whileStatement .)
    LONG_NUMBER     reduce using rule 308 (statement -> whileStatement .)
    LONG_HEX_NUMBER reduce using rule 308 (statement -> whileStatement .)
    NON_INTEGER_1   reduce using rule 308 (statement -> whileStatement .)
    NON_INTEGER_2   reduce using rule 308 (statement -> whileStatement .)
    NON_INTEGER_3   reduce using rule 308 (statement -> whileStatement .)
    NON_INTEGER_4   reduce using rule 308 (statement -> whileStatement .)
    NON_INTEGER_5   reduce using rule 308 (statement -> whileStatement .)
    NON_INTEGER_6   reduce using rule 308 (statement -> whileStatement .)
    TRUE            reduce using rule 308 (statement -> whileStatement .)
    FALSE           reduce using rule 308 (statement -> whileStatement .)
    INTERFACE       reduce using rule 308 (statement -> whileStatement .)
    ENUM            reduce using rule 308 (statement -> whileStatement .)
    CLASS           reduce using rule 308 (statement -> whileStatement .)
    BRPAREN         reduce using rule 308 (statement -> whileStatement .)
    CASE            reduce using rule 308 (statement -> whileStatement .)
    DEFAULT         reduce using rule 308 (statement -> whileStatement .)


state 293

    (329) statementExpression -> postIncrementExpression .
    (586) postfixExpression -> postIncrementExpression .

    SEMI            reduce using rule 329 (statementExpression -> postIncrementExpression .)
    COMMA           reduce using rule 329 (statementExpression -> postIncrementExpression .)
    RPAREN          reduce using rule 329 (statementExpression -> postIncrementExpression .)
    OP_INC          reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    OP_DEC          reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    ASS             reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    ASS_ADD         reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    ASS_SUB         reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    ASS_MUL         reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    ASS_DIV         reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    ASS_AND         reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    ASS_OR          reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    ASS_XOR         reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    ASS_MOD         reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    ASS_SHL         reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    ASS_SHRR        reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    ASS_SHR         reduce using rule 586 (postfixExpression -> postIncrementExpression .)


state 294

    (288) blockStatement -> localVariableDeclarationStatement .

    IF              reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    WHILE           reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    FOR             reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    BLPAREN         reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    ASSERT          reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    SEMI            reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    SWITCH          reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    DO              reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    BREAK           reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    CONTINUE        reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    RETURN          reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    SYNCHRONIZED    reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    THROW           reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    TRY             reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    Identifier      reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    AT              reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    BOOLEAN         reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    VOID            reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    BYTE            reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    SHORT           reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    INT             reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    LONG            reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    CHAR            reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    FLOAT           reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    DOUBLE          reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    PUBLIC          reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    PROTECTED       reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    PRIVATE         reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    STATIC          reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    ABSTRACT        reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    FINAL           reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    NATIVE          reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    TRANSIENT       reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    VOLATILE        reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    STRICTFP        reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    THIS            reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    SUPER           reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    OP_INC          reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    OP_DEC          reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    NEW             reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    LESS            reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    LPAREN          reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    CharacterLiteral reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    StringLiteral   reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    NULL            reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    LONG_NUMBER     reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    LONG_HEX_NUMBER reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    NON_INTEGER_1   reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    NON_INTEGER_2   reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    NON_INTEGER_3   reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    NON_INTEGER_4   reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    NON_INTEGER_5   reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    NON_INTEGER_6   reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    TRUE            reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    FALSE           reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    INTERFACE       reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    ENUM            reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    CLASS           reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    BRPAREN         reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    CASE            reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)
    DEFAULT         reduce using rule 288 (blockStatement -> localVariableDeclarationStatement .)


state 295

    (314) statementWithoutTrailingSubStatement -> emptyStatement .

    IF              reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    WHILE           reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    FOR             reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    BLPAREN         reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    ASSERT          reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    SEMI            reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    SWITCH          reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    DO              reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    BREAK           reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    CONTINUE        reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    RETURN          reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    SYNCHRONIZED    reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    THROW           reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    TRY             reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    Identifier      reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    AT              reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    BOOLEAN         reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    VOID            reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    BYTE            reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    SHORT           reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    INT             reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    LONG            reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    CHAR            reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    FLOAT           reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    DOUBLE          reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    PUBLIC          reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    PROTECTED       reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    PRIVATE         reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    STATIC          reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    ABSTRACT        reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    FINAL           reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    NATIVE          reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    TRANSIENT       reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    VOLATILE        reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    STRICTFP        reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    THIS            reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    SUPER           reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    OP_INC          reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    OP_DEC          reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    NEW             reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    LESS            reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    LPAREN          reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    CharacterLiteral reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    StringLiteral   reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    NULL            reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    LONG_NUMBER     reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    LONG_HEX_NUMBER reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    NON_INTEGER_1   reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    NON_INTEGER_2   reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    NON_INTEGER_3   reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    NON_INTEGER_4   reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    NON_INTEGER_5   reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    NON_INTEGER_6   reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    TRUE            reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    FALSE           reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    INTERFACE       reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    ENUM            reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    CLASS           reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    BRPAREN         reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    CASE            reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    DEFAULT         reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)
    ELSE            reduce using rule 314 (statementWithoutTrailingSubStatement -> emptyStatement .)


state 296

    (367) enhancedForStatement -> enhancedForStatementHead . statement
    (304) statement -> . statementWithoutTrailingSubStatement
    (305) statement -> . labeldStatement
    (306) statement -> . ifThenStatement
    (307) statement -> . ifThenElseStatement
    (308) statement -> . whileStatement
    (309) statement -> . forStatement
    (310) statement -> . enhancedForStatement
    (311) statementWithoutTrailingSubStatement -> . block
    (312) statementWithoutTrailingSubStatement -> . expressionStatement
    (313) statementWithoutTrailingSubStatement -> . assertStatement
    (314) statementWithoutTrailingSubStatement -> . emptyStatement
    (315) statementWithoutTrailingSubStatement -> . switchStatement
    (316) statementWithoutTrailingSubStatement -> . doStatement
    (317) statementWithoutTrailingSubStatement -> . breakStatement
    (318) statementWithoutTrailingSubStatement -> . continueStatement
    (319) statementWithoutTrailingSubStatement -> . returnStatement
    (320) statementWithoutTrailingSubStatement -> . synchronizedStatement
    (321) statementWithoutTrailingSubStatement -> . throwStatment
    (322) statementWithoutTrailingSubStatement -> . tryStatement
    (323) statementWithoutTrailingSubStatement -> . tryStatementWithResources
    (346) labeldStatement -> . label COLON statement
    (349) ifThenStatement -> . IF LPAREN expression RPAREN statement
    (350) ifThenElseStatement -> . IF LPAREN expression RPAREN statementNoShortIf ELSE statement
    (352) whileStatement -> . WHILE LPAREN expression RPAREN statement
    (354) forStatement -> . FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement
    (367) enhancedForStatement -> . enhancedForStatementHead statement
    (283) block -> . BLPAREN blockStatements_opt BRPAREN
    (324) expressionStatement -> . statementExpression SEMI
    (325) expressionStatement -> . explicitConstructorInvocation
    (377) assertStatement -> . ASSERT expression SEMI
    (378) assertStatement -> . ASSERT expression COLON expression SEMI
    (379) emptyStatement -> . SEMI
    (380) switchStatement -> . SWITCH LPAREN expression RPAREN switchBlock
    (393) doStatement -> . DO statement WHILE LPAREN expression RPAREN SEMI
    (394) breakStatement -> . BREAK SEMI
    (395) breakStatement -> . BREAK Identifier SEMI
    (396) continueStatement -> . CONTINUE SEMI
    (397) continueStatement -> . CONTINUE Identifier SEMI
    (398) returnStatement -> . RETURN expression_opt SEMI
    (399) synchronizedStatement -> . SYNCHRONIZED LPAREN expression RPAREN block
    (400) throwStatment -> . THROW expression SEMI
    (401) tryStatement -> . TRY tryBlock catches
    (402) tryStatement -> . TRY tryBlock catches_opt finally
    (413) tryStatementWithResources -> . TRY resourceSpecification tryBlock catches_opt
    (414) tryStatementWithResources -> . TRY resourceSpecification tryBlock catches_opt finally
    (348) label -> . Identifier
    (369) enhancedForStatementHead -> . enhancedForStatementHeadInit COLON expression RPAREN
    (326) statementExpression -> . assignment
    (327) statementExpression -> . preIncrementExpression
    (328) statementExpression -> . preDecrementExpression
    (329) statementExpression -> . postIncrementExpression
    (330) statementExpression -> . postDecrementExpression
    (331) statementExpression -> . methodInvocation
    (332) statementExpression -> . classInstanceCreationExpression
    (424) explicitConstructorInvocation -> . THIS LPAREN argumentList_opt RPAREN SEMI
    (425) explicitConstructorInvocation -> . SUPER LPAREN argumentList_opt RPAREN SEMI
    (426) explicitConstructorInvocation -> . typeArguments SUPER LPAREN argumentList RPAREN SEMI
    (427) explicitConstructorInvocation -> . typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (428) explicitConstructorInvocation -> . primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI
    (429) explicitConstructorInvocation -> . name DOT SUPER LPAREN argumentList_opt RPAREN SEMI
    (430) explicitConstructorInvocation -> . primary DOT THIS LPAREN argumentList_opt RPAREN SEMI
    (431) explicitConstructorInvocation -> . name DOT THIS LPAREN argumentList_opt RPAREN SEMI
    (432) explicitConstructorInvocation -> . primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI
    (433) explicitConstructorInvocation -> . name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI
    (434) explicitConstructorInvocation -> . primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (435) explicitConstructorInvocation -> . name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (370) enhancedForStatementHeadInit -> . FOR LPAREN type Identifier arrays_opt
    (371) enhancedForStatementHeadInit -> . FOR LPAREN modifiers type Identifier arrays_opt
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (82) typeArguments -> . LESS typeArgumentList1
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (442) classInstanceCreationExpressionName -> . name DOT
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE

    IF              shift and go to state 349
    WHILE           shift and go to state 325
    FOR             shift and go to state 312
    BLPAREN         shift and go to state 120
    ASSERT          shift and go to state 336
    SEMI            shift and go to state 341
    SWITCH          shift and go to state 328
    DO              shift and go to state 335
    BREAK           shift and go to state 305
    CONTINUE        shift and go to state 318
    RETURN          shift and go to state 302
    SYNCHRONIZED    shift and go to state 518
    THROW           shift and go to state 354
    TRY             shift and go to state 314
    Identifier      shift and go to state 316
    THIS            shift and go to state 300
    SUPER           shift and go to state 353
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    NEW             shift and go to state 326
    LESS            shift and go to state 287
    LPAREN          shift and go to state 348
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    forStatement                   shift and go to state 286
    qualifiedName                  shift and go to state 64
    continueStatement              shift and go to state 304
    arrayCreationWithArrayInitializer shift and go to state 227
    switchStatement                shift and go to state 288
    primary                        shift and go to state 324
    arrayCreationWithoutArrayInitializer shift and go to state 232
    breakStatement                 shift and go to state 337
    tryStatementWithResources      shift and go to state 338
    assertStatement                shift and go to state 289
    synchronizedStatement          shift and go to state 339
    booleanLiteral                 shift and go to state 173
    doStatement                    shift and go to state 327
    postDecrementExpression        shift and go to state 306
    typeArguments                  shift and go to state 307
    literal                        shift and go to state 208
    labeldStatement                shift and go to state 329
    preIncrementExpression         shift and go to state 308
    label                          shift and go to state 309
    simpleName                     shift and go to state 66
    tryStatement                   shift and go to state 342
    throwStatment                  shift and go to state 310
    methodInvocation               shift and go to state 311
    statement                      shift and go to state 519
    arrayAccess                    shift and go to state 234
    ifThenElseStatement            shift and go to state 291
    fieldAccess                    shift and go to state 189
    statementWithoutTrailingSubStatement shift and go to state 344
    integerLiteral                 shift and go to state 183
    classInstanceCreationExpressionName shift and go to state 187
    FloatingPointLiteral           shift and go to state 214
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 346
    whileStatement                 shift and go to state 292
    enhancedForStatementHeadInit   shift and go to state 313
    postIncrementExpression        shift and go to state 293
    ifThenStatement                shift and go to state 347
    emptyStatement                 shift and go to state 295
    returnStatement                shift and go to state 297
    preDecrementExpression         shift and go to state 320
    postfixExpression              shift and go to state 298
    enhancedForStatementHead       shift and go to state 296
    name                           shift and go to state 517
    expressionStatement            shift and go to state 301
    primitiveType                  shift and go to state 219
    statementExpression            shift and go to state 350
    explicitConstructorInvocation  shift and go to state 351
    enhancedForStatement           shift and go to state 352
    block                          shift and go to state 321
    classInstanceCreationExpression shift and go to state 322

state 297

    (319) statementWithoutTrailingSubStatement -> returnStatement .

    IF              reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    WHILE           reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    FOR             reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    BLPAREN         reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    ASSERT          reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    SEMI            reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    SWITCH          reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    DO              reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    BREAK           reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    CONTINUE        reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    RETURN          reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    SYNCHRONIZED    reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    THROW           reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    TRY             reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    Identifier      reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    AT              reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    BOOLEAN         reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    VOID            reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    BYTE            reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    SHORT           reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    INT             reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    LONG            reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    CHAR            reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    FLOAT           reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    DOUBLE          reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    PUBLIC          reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    PROTECTED       reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    PRIVATE         reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    STATIC          reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    ABSTRACT        reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    FINAL           reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    NATIVE          reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    TRANSIENT       reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    VOLATILE        reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    STRICTFP        reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    THIS            reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    SUPER           reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    OP_INC          reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    OP_DEC          reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    NEW             reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    LESS            reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    LPAREN          reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    CharacterLiteral reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    StringLiteral   reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    NULL            reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    LONG_NUMBER     reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    LONG_HEX_NUMBER reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    NON_INTEGER_1   reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    NON_INTEGER_2   reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    NON_INTEGER_3   reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    NON_INTEGER_4   reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    NON_INTEGER_5   reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    NON_INTEGER_6   reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    TRUE            reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    FALSE           reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    INTERFACE       reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    ENUM            reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    CLASS           reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    BRPAREN         reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    CASE            reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    DEFAULT         reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)
    ELSE            reduce using rule 319 (statementWithoutTrailingSubStatement -> returnStatement .)


state 298

    (474) assignment -> postfixExpression . assignmentOperator assignmentExpression
    (574) postIncrementExpression -> postfixExpression . OP_INC
    (575) postDecrementExpression -> postfixExpression . OP_DEC
    (462) assignmentOperator -> . ASS
    (463) assignmentOperator -> . ASS_ADD
    (464) assignmentOperator -> . ASS_SUB
    (465) assignmentOperator -> . ASS_MUL
    (466) assignmentOperator -> . ASS_DIV
    (467) assignmentOperator -> . ASS_AND
    (468) assignmentOperator -> . ASS_OR
    (469) assignmentOperator -> . ASS_XOR
    (470) assignmentOperator -> . ASS_MOD
    (471) assignmentOperator -> . ASS_SHL
    (472) assignmentOperator -> . ASS_SHRR
    (473) assignmentOperator -> . ASS_SHR

    OP_INC          shift and go to state 400
    OP_DEC          shift and go to state 401
    ASS             shift and go to state 520
    ASS_ADD         shift and go to state 522
    ASS_SUB         shift and go to state 529
    ASS_MUL         shift and go to state 521
    ASS_DIV         shift and go to state 528
    ASS_AND         shift and go to state 523
    ASS_OR          shift and go to state 527
    ASS_XOR         shift and go to state 526
    ASS_MOD         shift and go to state 532
    ASS_SHL         shift and go to state 531
    ASS_SHRR        shift and go to state 524
    ASS_SHR         shift and go to state 530

    assignmentOperator             shift and go to state 525

state 299

    (429) explicitConstructorInvocation -> name . DOT SUPER LPAREN argumentList_opt RPAREN SEMI
    (431) explicitConstructorInvocation -> name . DOT THIS LPAREN argumentList_opt RPAREN SEMI
    (433) explicitConstructorInvocation -> name . DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI
    (435) explicitConstructorInvocation -> name . DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (57) arrayType -> name . arrays
    (340) methodInvocation -> name . LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> name . DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (48) classOrInterface -> name .
    (585) postfixExpression -> name .
    (442) classInstanceCreationExpressionName -> name . DOT
    (602) primaryNoNewArray -> name . DOT THIS
    (603) primaryNoNewArray -> name . DOT SUPER
    (604) primaryNoNewArray -> name . DOT CLASS
    (605) primaryNoNewArray -> name . arrays DOT CLASS
    (32) qualifiedName -> name . DOT simpleName
    (447) arrayAccess -> name . FLPAREN expression FRPAREN
    (59) arrays -> . array_loop
    (60) array_loop -> . array
    (61) array_loop -> . array_loop array
    (58) array -> . FLPAREN FRPAREN

    DOT             shift and go to state 534
    LPAREN          shift and go to state 404
    LESS            reduce using rule 48 (classOrInterface -> name .)
    Identifier      reduce using rule 48 (classOrInterface -> name .)
    OP_INC          reduce using rule 585 (postfixExpression -> name .)
    OP_DEC          reduce using rule 585 (postfixExpression -> name .)
    ASS             reduce using rule 585 (postfixExpression -> name .)
    ASS_ADD         reduce using rule 585 (postfixExpression -> name .)
    ASS_SUB         reduce using rule 585 (postfixExpression -> name .)
    ASS_MUL         reduce using rule 585 (postfixExpression -> name .)
    ASS_DIV         reduce using rule 585 (postfixExpression -> name .)
    ASS_AND         reduce using rule 585 (postfixExpression -> name .)
    ASS_OR          reduce using rule 585 (postfixExpression -> name .)
    ASS_XOR         reduce using rule 585 (postfixExpression -> name .)
    ASS_MOD         reduce using rule 585 (postfixExpression -> name .)
    ASS_SHL         reduce using rule 585 (postfixExpression -> name .)
    ASS_SHRR        reduce using rule 585 (postfixExpression -> name .)
    ASS_SHR         reduce using rule 585 (postfixExpression -> name .)
    FLPAREN         shift and go to state 411

    arrays                         shift and go to state 533
    array_loop                     shift and go to state 413
    array                          shift and go to state 407

state 300

    (424) explicitConstructorInvocation -> THIS . LPAREN argumentList_opt RPAREN SEMI
    (595) primaryNoNewArray -> THIS .

    LPAREN          shift and go to state 535
    FLPAREN         reduce using rule 595 (primaryNoNewArray -> THIS .)
    DOT             reduce using rule 595 (primaryNoNewArray -> THIS .)
    OP_INC          reduce using rule 595 (primaryNoNewArray -> THIS .)
    OP_DEC          reduce using rule 595 (primaryNoNewArray -> THIS .)
    ASS             reduce using rule 595 (primaryNoNewArray -> THIS .)
    ASS_ADD         reduce using rule 595 (primaryNoNewArray -> THIS .)
    ASS_SUB         reduce using rule 595 (primaryNoNewArray -> THIS .)
    ASS_MUL         reduce using rule 595 (primaryNoNewArray -> THIS .)
    ASS_DIV         reduce using rule 595 (primaryNoNewArray -> THIS .)
    ASS_AND         reduce using rule 595 (primaryNoNewArray -> THIS .)
    ASS_OR          reduce using rule 595 (primaryNoNewArray -> THIS .)
    ASS_XOR         reduce using rule 595 (primaryNoNewArray -> THIS .)
    ASS_MOD         reduce using rule 595 (primaryNoNewArray -> THIS .)
    ASS_SHL         reduce using rule 595 (primaryNoNewArray -> THIS .)
    ASS_SHRR        reduce using rule 595 (primaryNoNewArray -> THIS .)
    ASS_SHR         reduce using rule 595 (primaryNoNewArray -> THIS .)


state 301

    (312) statementWithoutTrailingSubStatement -> expressionStatement .

    IF              reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    WHILE           reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    FOR             reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    BLPAREN         reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    ASSERT          reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    SEMI            reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    SWITCH          reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    DO              reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    BREAK           reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    CONTINUE        reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    RETURN          reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    SYNCHRONIZED    reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    THROW           reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    TRY             reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    Identifier      reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    AT              reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    BOOLEAN         reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    VOID            reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    BYTE            reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    SHORT           reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    INT             reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    LONG            reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    CHAR            reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    FLOAT           reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    DOUBLE          reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    PUBLIC          reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    PROTECTED       reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    PRIVATE         reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    STATIC          reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    ABSTRACT        reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    FINAL           reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    NATIVE          reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    TRANSIENT       reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    VOLATILE        reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    STRICTFP        reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    THIS            reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    SUPER           reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    OP_INC          reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    OP_DEC          reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    NEW             reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    LESS            reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    LPAREN          reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    CharacterLiteral reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    StringLiteral   reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    NULL            reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    LONG_NUMBER     reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    LONG_HEX_NUMBER reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    NON_INTEGER_1   reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    NON_INTEGER_2   reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    NON_INTEGER_3   reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    NON_INTEGER_4   reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    NON_INTEGER_5   reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    NON_INTEGER_6   reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    TRUE            reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    FALSE           reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    INTERFACE       reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    ENUM            reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    CLASS           reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    BRPAREN         reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    CASE            reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    DEFAULT         reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)
    ELSE            reduce using rule 312 (statementWithoutTrailingSubStatement -> expressionStatement .)


state 302

    (398) returnStatement -> RETURN . expression_opt SEMI
    (362) expression_opt -> . expression
    (363) expression_opt -> . empty
    (456) expression -> . assignmentExpression
    (631) empty -> .
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    SEMI            reduce using rule 631 (empty -> .)
    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    assignmentExpression           shift and go to state 543
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    fieldAccess                    shift and go to state 189
    integerLiteral                 shift and go to state 183
    empty                          shift and go to state 549
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 554
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    expression_opt                 shift and go to state 539
    conditionalOrExpression        shift and go to state 547
    unaryExpressionNotPlusMinus    shift and go to state 397
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    expression                     shift and go to state 545
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 303

    (399) synchronizedStatement -> SYNCHRONIZED . LPAREN expression RPAREN block
    (131) modifier -> SYNCHRONIZED .

    LPAREN          shift and go to state 555
    AT              reduce using rule 131 (modifier -> SYNCHRONIZED .)
    PUBLIC          reduce using rule 131 (modifier -> SYNCHRONIZED .)
    PROTECTED       reduce using rule 131 (modifier -> SYNCHRONIZED .)
    PRIVATE         reduce using rule 131 (modifier -> SYNCHRONIZED .)
    STATIC          reduce using rule 131 (modifier -> SYNCHRONIZED .)
    ABSTRACT        reduce using rule 131 (modifier -> SYNCHRONIZED .)
    FINAL           reduce using rule 131 (modifier -> SYNCHRONIZED .)
    NATIVE          reduce using rule 131 (modifier -> SYNCHRONIZED .)
    SYNCHRONIZED    reduce using rule 131 (modifier -> SYNCHRONIZED .)
    TRANSIENT       reduce using rule 131 (modifier -> SYNCHRONIZED .)
    VOLATILE        reduce using rule 131 (modifier -> SYNCHRONIZED .)
    STRICTFP        reduce using rule 131 (modifier -> SYNCHRONIZED .)
    BOOLEAN         reduce using rule 131 (modifier -> SYNCHRONIZED .)
    VOID            reduce using rule 131 (modifier -> SYNCHRONIZED .)
    BYTE            reduce using rule 131 (modifier -> SYNCHRONIZED .)
    SHORT           reduce using rule 131 (modifier -> SYNCHRONIZED .)
    INT             reduce using rule 131 (modifier -> SYNCHRONIZED .)
    LONG            reduce using rule 131 (modifier -> SYNCHRONIZED .)
    CHAR            reduce using rule 131 (modifier -> SYNCHRONIZED .)
    FLOAT           reduce using rule 131 (modifier -> SYNCHRONIZED .)
    DOUBLE          reduce using rule 131 (modifier -> SYNCHRONIZED .)
    Identifier      reduce using rule 131 (modifier -> SYNCHRONIZED .)
    INTERFACE       reduce using rule 131 (modifier -> SYNCHRONIZED .)
    ENUM            reduce using rule 131 (modifier -> SYNCHRONIZED .)
    CLASS           reduce using rule 131 (modifier -> SYNCHRONIZED .)


state 304

    (318) statementWithoutTrailingSubStatement -> continueStatement .

    IF              reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    WHILE           reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    FOR             reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    BLPAREN         reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    ASSERT          reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    SEMI            reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    SWITCH          reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    DO              reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    BREAK           reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    CONTINUE        reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    RETURN          reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    SYNCHRONIZED    reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    THROW           reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    TRY             reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    Identifier      reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    AT              reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    BOOLEAN         reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    VOID            reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    BYTE            reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    SHORT           reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    INT             reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    LONG            reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    CHAR            reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    FLOAT           reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    DOUBLE          reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    PUBLIC          reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    PROTECTED       reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    PRIVATE         reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    STATIC          reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    ABSTRACT        reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    FINAL           reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    NATIVE          reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    TRANSIENT       reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    VOLATILE        reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    STRICTFP        reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    THIS            reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    SUPER           reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    OP_INC          reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    OP_DEC          reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    NEW             reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    LESS            reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    LPAREN          reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    CharacterLiteral reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    StringLiteral   reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    NULL            reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    LONG_NUMBER     reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    LONG_HEX_NUMBER reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    NON_INTEGER_1   reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    NON_INTEGER_2   reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    NON_INTEGER_3   reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    NON_INTEGER_4   reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    NON_INTEGER_5   reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    NON_INTEGER_6   reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    TRUE            reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    FALSE           reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    INTERFACE       reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    ENUM            reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    CLASS           reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    BRPAREN         reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    CASE            reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    DEFAULT         reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)
    ELSE            reduce using rule 318 (statementWithoutTrailingSubStatement -> continueStatement .)


state 305

    (394) breakStatement -> BREAK . SEMI
    (395) breakStatement -> BREAK . Identifier SEMI

    SEMI            shift and go to state 557
    Identifier      shift and go to state 556


state 306

    (330) statementExpression -> postDecrementExpression .
    (587) postfixExpression -> postDecrementExpression .

    SEMI            reduce using rule 330 (statementExpression -> postDecrementExpression .)
    COMMA           reduce using rule 330 (statementExpression -> postDecrementExpression .)
    RPAREN          reduce using rule 330 (statementExpression -> postDecrementExpression .)
    OP_INC          reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    OP_DEC          reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    ASS             reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    ASS_ADD         reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    ASS_SUB         reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    ASS_MUL         reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    ASS_DIV         reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    ASS_AND         reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    ASS_OR          reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    ASS_XOR         reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    ASS_MOD         reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    ASS_SHL         reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    ASS_SHRR        reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    ASS_SHR         reduce using rule 587 (postfixExpression -> postDecrementExpression .)


state 307

    (426) explicitConstructorInvocation -> typeArguments . SUPER LPAREN argumentList RPAREN SEMI
    (427) explicitConstructorInvocation -> typeArguments . THIS LPAREN argumentList_opt RPAREN SEMI

    SUPER           shift and go to state 559
    THIS            shift and go to state 558


state 308

    (327) statementExpression -> preIncrementExpression .

    SEMI            reduce using rule 327 (statementExpression -> preIncrementExpression .)
    COMMA           reduce using rule 327 (statementExpression -> preIncrementExpression .)
    RPAREN          reduce using rule 327 (statementExpression -> preIncrementExpression .)


state 309

    (346) labeldStatement -> label . COLON statement

    COLON           shift and go to state 560


state 310

    (321) statementWithoutTrailingSubStatement -> throwStatment .

    IF              reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    WHILE           reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    FOR             reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    BLPAREN         reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    ASSERT          reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    SEMI            reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    SWITCH          reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    DO              reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    BREAK           reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    CONTINUE        reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    RETURN          reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    SYNCHRONIZED    reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    THROW           reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    TRY             reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    Identifier      reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    AT              reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    BOOLEAN         reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    VOID            reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    BYTE            reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    SHORT           reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    INT             reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    LONG            reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    CHAR            reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    FLOAT           reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    DOUBLE          reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    PUBLIC          reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    PROTECTED       reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    PRIVATE         reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    STATIC          reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    ABSTRACT        reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    FINAL           reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    NATIVE          reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    TRANSIENT       reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    VOLATILE        reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    STRICTFP        reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    THIS            reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    SUPER           reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    OP_INC          reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    OP_DEC          reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    NEW             reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    LESS            reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    LPAREN          reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    CharacterLiteral reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    StringLiteral   reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    NULL            reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    LONG_NUMBER     reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    LONG_HEX_NUMBER reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    NON_INTEGER_1   reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    NON_INTEGER_2   reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    NON_INTEGER_3   reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    NON_INTEGER_4   reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    NON_INTEGER_5   reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    NON_INTEGER_6   reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    TRUE            reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    FALSE           reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    INTERFACE       reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    ENUM            reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    CLASS           reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    BRPAREN         reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    CASE            reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    DEFAULT         reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)
    ELSE            reduce using rule 321 (statementWithoutTrailingSubStatement -> throwStatment .)


state 311

    (331) statementExpression -> methodInvocation .
    (598) primaryNoNewArray -> methodInvocation .

    SEMI            reduce using rule 331 (statementExpression -> methodInvocation .)
    COMMA           reduce using rule 331 (statementExpression -> methodInvocation .)
    RPAREN          reduce using rule 331 (statementExpression -> methodInvocation .)
    FLPAREN         reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    DOT             reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    OP_INC          reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    OP_DEC          reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    ASS             reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    ASS_ADD         reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    ASS_SUB         reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    ASS_MUL         reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    ASS_DIV         reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    ASS_AND         reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    ASS_OR          reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    ASS_XOR         reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    ASS_MOD         reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    ASS_SHL         reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    ASS_SHRR        reduce using rule 598 (primaryNoNewArray -> methodInvocation .)
    ASS_SHR         reduce using rule 598 (primaryNoNewArray -> methodInvocation .)


state 312

    (354) forStatement -> FOR . LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement
    (370) enhancedForStatementHeadInit -> FOR . LPAREN type Identifier arrays_opt
    (371) enhancedForStatementHeadInit -> FOR . LPAREN modifiers type Identifier arrays_opt

    LPAREN          shift and go to state 561


state 313

    (369) enhancedForStatementHead -> enhancedForStatementHeadInit . COLON expression RPAREN

    COLON           shift and go to state 562


state 314

    (401) tryStatement -> TRY . tryBlock catches
    (402) tryStatement -> TRY . tryBlock catches_opt finally
    (413) tryStatementWithResources -> TRY . resourceSpecification tryBlock catches_opt
    (414) tryStatementWithResources -> TRY . resourceSpecification tryBlock catches_opt finally
    (403) tryBlock -> . block
    (415) resourceSpecification -> . LPAREN resources semi_opt RPAREN
    (283) block -> . BLPAREN blockStatements_opt BRPAREN

    LPAREN          shift and go to state 565
    BLPAREN         shift and go to state 120

    tryBlock                       shift and go to state 563
    resourceSpecification          shift and go to state 564
    block                          shift and go to state 566

state 315

    (290) blockStatement -> classDeclaration .

    IF              reduce using rule 290 (blockStatement -> classDeclaration .)
    WHILE           reduce using rule 290 (blockStatement -> classDeclaration .)
    FOR             reduce using rule 290 (blockStatement -> classDeclaration .)
    BLPAREN         reduce using rule 290 (blockStatement -> classDeclaration .)
    ASSERT          reduce using rule 290 (blockStatement -> classDeclaration .)
    SEMI            reduce using rule 290 (blockStatement -> classDeclaration .)
    SWITCH          reduce using rule 290 (blockStatement -> classDeclaration .)
    DO              reduce using rule 290 (blockStatement -> classDeclaration .)
    BREAK           reduce using rule 290 (blockStatement -> classDeclaration .)
    CONTINUE        reduce using rule 290 (blockStatement -> classDeclaration .)
    RETURN          reduce using rule 290 (blockStatement -> classDeclaration .)
    SYNCHRONIZED    reduce using rule 290 (blockStatement -> classDeclaration .)
    THROW           reduce using rule 290 (blockStatement -> classDeclaration .)
    TRY             reduce using rule 290 (blockStatement -> classDeclaration .)
    Identifier      reduce using rule 290 (blockStatement -> classDeclaration .)
    AT              reduce using rule 290 (blockStatement -> classDeclaration .)
    BOOLEAN         reduce using rule 290 (blockStatement -> classDeclaration .)
    VOID            reduce using rule 290 (blockStatement -> classDeclaration .)
    BYTE            reduce using rule 290 (blockStatement -> classDeclaration .)
    SHORT           reduce using rule 290 (blockStatement -> classDeclaration .)
    INT             reduce using rule 290 (blockStatement -> classDeclaration .)
    LONG            reduce using rule 290 (blockStatement -> classDeclaration .)
    CHAR            reduce using rule 290 (blockStatement -> classDeclaration .)
    FLOAT           reduce using rule 290 (blockStatement -> classDeclaration .)
    DOUBLE          reduce using rule 290 (blockStatement -> classDeclaration .)
    PUBLIC          reduce using rule 290 (blockStatement -> classDeclaration .)
    PROTECTED       reduce using rule 290 (blockStatement -> classDeclaration .)
    PRIVATE         reduce using rule 290 (blockStatement -> classDeclaration .)
    STATIC          reduce using rule 290 (blockStatement -> classDeclaration .)
    ABSTRACT        reduce using rule 290 (blockStatement -> classDeclaration .)
    FINAL           reduce using rule 290 (blockStatement -> classDeclaration .)
    NATIVE          reduce using rule 290 (blockStatement -> classDeclaration .)
    TRANSIENT       reduce using rule 290 (blockStatement -> classDeclaration .)
    VOLATILE        reduce using rule 290 (blockStatement -> classDeclaration .)
    STRICTFP        reduce using rule 290 (blockStatement -> classDeclaration .)
    THIS            reduce using rule 290 (blockStatement -> classDeclaration .)
    SUPER           reduce using rule 290 (blockStatement -> classDeclaration .)
    OP_INC          reduce using rule 290 (blockStatement -> classDeclaration .)
    OP_DEC          reduce using rule 290 (blockStatement -> classDeclaration .)
    NEW             reduce using rule 290 (blockStatement -> classDeclaration .)
    LESS            reduce using rule 290 (blockStatement -> classDeclaration .)
    LPAREN          reduce using rule 290 (blockStatement -> classDeclaration .)
    CharacterLiteral reduce using rule 290 (blockStatement -> classDeclaration .)
    StringLiteral   reduce using rule 290 (blockStatement -> classDeclaration .)
    NULL            reduce using rule 290 (blockStatement -> classDeclaration .)
    LONG_NUMBER     reduce using rule 290 (blockStatement -> classDeclaration .)
    LONG_HEX_NUMBER reduce using rule 290 (blockStatement -> classDeclaration .)
    NON_INTEGER_1   reduce using rule 290 (blockStatement -> classDeclaration .)
    NON_INTEGER_2   reduce using rule 290 (blockStatement -> classDeclaration .)
    NON_INTEGER_3   reduce using rule 290 (blockStatement -> classDeclaration .)
    NON_INTEGER_4   reduce using rule 290 (blockStatement -> classDeclaration .)
    NON_INTEGER_5   reduce using rule 290 (blockStatement -> classDeclaration .)
    NON_INTEGER_6   reduce using rule 290 (blockStatement -> classDeclaration .)
    TRUE            reduce using rule 290 (blockStatement -> classDeclaration .)
    FALSE           reduce using rule 290 (blockStatement -> classDeclaration .)
    INTERFACE       reduce using rule 290 (blockStatement -> classDeclaration .)
    ENUM            reduce using rule 290 (blockStatement -> classDeclaration .)
    CLASS           reduce using rule 290 (blockStatement -> classDeclaration .)
    BRPAREN         reduce using rule 290 (blockStatement -> classDeclaration .)
    CASE            reduce using rule 290 (blockStatement -> classDeclaration .)
    DEFAULT         reduce using rule 290 (blockStatement -> classDeclaration .)


state 316

    (348) label -> Identifier .
    (31) simpleName -> Identifier .

    COLON           reduce using rule 348 (label -> Identifier .)
    DOT             reduce using rule 31 (simpleName -> Identifier .)
    LPAREN          reduce using rule 31 (simpleName -> Identifier .)
    FLPAREN         reduce using rule 31 (simpleName -> Identifier .)
    LESS            reduce using rule 31 (simpleName -> Identifier .)
    Identifier      reduce using rule 31 (simpleName -> Identifier .)
    OP_INC          reduce using rule 31 (simpleName -> Identifier .)
    OP_DEC          reduce using rule 31 (simpleName -> Identifier .)
    ASS             reduce using rule 31 (simpleName -> Identifier .)
    ASS_ADD         reduce using rule 31 (simpleName -> Identifier .)
    ASS_SUB         reduce using rule 31 (simpleName -> Identifier .)
    ASS_MUL         reduce using rule 31 (simpleName -> Identifier .)
    ASS_DIV         reduce using rule 31 (simpleName -> Identifier .)
    ASS_AND         reduce using rule 31 (simpleName -> Identifier .)
    ASS_OR          reduce using rule 31 (simpleName -> Identifier .)
    ASS_XOR         reduce using rule 31 (simpleName -> Identifier .)
    ASS_MOD         reduce using rule 31 (simpleName -> Identifier .)
    ASS_SHL         reduce using rule 31 (simpleName -> Identifier .)
    ASS_SHRR        reduce using rule 31 (simpleName -> Identifier .)
    ASS_SHR         reduce using rule 31 (simpleName -> Identifier .)


state 317

    (292) blockStatement -> annotationTypeDeclaration .

    IF              reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    WHILE           reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    FOR             reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    BLPAREN         reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    ASSERT          reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    SEMI            reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    SWITCH          reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    DO              reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    BREAK           reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    CONTINUE        reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    RETURN          reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    SYNCHRONIZED    reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    THROW           reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    TRY             reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    Identifier      reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    AT              reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    BOOLEAN         reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    VOID            reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    BYTE            reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    SHORT           reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    INT             reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    LONG            reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    CHAR            reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    FLOAT           reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    DOUBLE          reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    PUBLIC          reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    PROTECTED       reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    PRIVATE         reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    STATIC          reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    ABSTRACT        reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    FINAL           reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    NATIVE          reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    TRANSIENT       reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    VOLATILE        reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    STRICTFP        reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    THIS            reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    SUPER           reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    OP_INC          reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    OP_DEC          reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    NEW             reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    LESS            reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    LPAREN          reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    CharacterLiteral reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    StringLiteral   reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    NULL            reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    LONG_NUMBER     reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    LONG_HEX_NUMBER reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    NON_INTEGER_1   reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    NON_INTEGER_2   reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    NON_INTEGER_3   reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    NON_INTEGER_4   reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    NON_INTEGER_5   reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    NON_INTEGER_6   reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    TRUE            reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    FALSE           reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    INTERFACE       reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    ENUM            reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    CLASS           reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    BRPAREN         reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    CASE            reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)
    DEFAULT         reduce using rule 292 (blockStatement -> annotationTypeDeclaration .)


state 318

    (396) continueStatement -> CONTINUE . SEMI
    (397) continueStatement -> CONTINUE . Identifier SEMI

    SEMI            shift and go to state 568
    Identifier      shift and go to state 567


state 319

    (283) block -> BLPAREN blockStatements_opt . BRPAREN

    BRPAREN         shift and go to state 569


state 320

    (328) statementExpression -> preDecrementExpression .

    SEMI            reduce using rule 328 (statementExpression -> preDecrementExpression .)
    COMMA           reduce using rule 328 (statementExpression -> preDecrementExpression .)
    RPAREN          reduce using rule 328 (statementExpression -> preDecrementExpression .)


state 321

    (311) statementWithoutTrailingSubStatement -> block .

    IF              reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    WHILE           reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    FOR             reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    BLPAREN         reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    ASSERT          reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    SEMI            reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    SWITCH          reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    DO              reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    BREAK           reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    CONTINUE        reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    RETURN          reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    SYNCHRONIZED    reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    THROW           reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    TRY             reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    Identifier      reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    AT              reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    BOOLEAN         reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    VOID            reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    BYTE            reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    SHORT           reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    INT             reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    LONG            reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    CHAR            reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    FLOAT           reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    DOUBLE          reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    PUBLIC          reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    PROTECTED       reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    PRIVATE         reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    STATIC          reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    ABSTRACT        reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    FINAL           reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    NATIVE          reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    TRANSIENT       reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    VOLATILE        reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    STRICTFP        reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    THIS            reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    SUPER           reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    OP_INC          reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    OP_DEC          reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    NEW             reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    LESS            reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    LPAREN          reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    CharacterLiteral reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    StringLiteral   reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    NULL            reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    LONG_NUMBER     reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    LONG_HEX_NUMBER reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    NON_INTEGER_1   reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    NON_INTEGER_2   reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    NON_INTEGER_3   reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    NON_INTEGER_4   reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    NON_INTEGER_5   reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    NON_INTEGER_6   reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    TRUE            reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    FALSE           reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    INTERFACE       reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    ENUM            reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    CLASS           reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    BRPAREN         reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    CASE            reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    DEFAULT         reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)
    ELSE            reduce using rule 311 (statementWithoutTrailingSubStatement -> block .)


state 322

    (332) statementExpression -> classInstanceCreationExpression .
    (596) primaryNoNewArray -> classInstanceCreationExpression .

    SEMI            reduce using rule 332 (statementExpression -> classInstanceCreationExpression .)
    COMMA           reduce using rule 332 (statementExpression -> classInstanceCreationExpression .)
    RPAREN          reduce using rule 332 (statementExpression -> classInstanceCreationExpression .)
    FLPAREN         reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    DOT             reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    OP_INC          reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    OP_DEC          reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    ASS             reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    ASS_ADD         reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    ASS_SUB         reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    ASS_MUL         reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    ASS_DIV         reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    ASS_AND         reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    ASS_OR          reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    ASS_XOR         reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    ASS_MOD         reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    ASS_SHL         reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    ASS_SHRR        reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)
    ASS_SHR         reduce using rule 596 (primaryNoNewArray -> classInstanceCreationExpression .)


state 323

    (294) localVariableDeclarationStatement -> localVariableDeclaration . SEMI

    SEMI            shift and go to state 570


state 324

    (428) explicitConstructorInvocation -> primary . DOT SUPER LPAREN argumentList_opt RPAREN SEMI
    (430) explicitConstructorInvocation -> primary . DOT THIS LPAREN argumentList_opt RPAREN SEMI
    (432) explicitConstructorInvocation -> primary . DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI
    (434) explicitConstructorInvocation -> primary . DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (342) methodInvocation -> primary . DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> primary . DOT Identifier LPAREN argumentList_opt RPAREN
    (438) classInstanceCreationExpression -> primary . DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> primary . DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (584) postfixExpression -> primary .
    (445) fieldAccess -> primary . DOT Identifier

    DOT             shift and go to state 571
    OP_INC          reduce using rule 584 (postfixExpression -> primary .)
    OP_DEC          reduce using rule 584 (postfixExpression -> primary .)
    ASS             reduce using rule 584 (postfixExpression -> primary .)
    ASS_ADD         reduce using rule 584 (postfixExpression -> primary .)
    ASS_SUB         reduce using rule 584 (postfixExpression -> primary .)
    ASS_MUL         reduce using rule 584 (postfixExpression -> primary .)
    ASS_DIV         reduce using rule 584 (postfixExpression -> primary .)
    ASS_AND         reduce using rule 584 (postfixExpression -> primary .)
    ASS_OR          reduce using rule 584 (postfixExpression -> primary .)
    ASS_XOR         reduce using rule 584 (postfixExpression -> primary .)
    ASS_MOD         reduce using rule 584 (postfixExpression -> primary .)
    ASS_SHL         reduce using rule 584 (postfixExpression -> primary .)
    ASS_SHRR        reduce using rule 584 (postfixExpression -> primary .)
    ASS_SHR         reduce using rule 584 (postfixExpression -> primary .)


state 325

    (352) whileStatement -> WHILE . LPAREN expression RPAREN statement

    LPAREN          shift and go to state 572


state 326

    (436) classInstanceCreationExpression -> NEW . typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> NEW . classType LPAREN argumentList_opt RPAREN classBody_opt
    (450) arrayCreationWithArrayInitializer -> NEW . primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> NEW . classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> NEW . primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> NEW . classOrInterfaceType arrayWithOrWithoutExprs
    (82) typeArguments -> . LESS typeArgumentList1
    (52) classType -> . classOrInterfaceType
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    LESS            shift and go to state 287
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    Identifier      shift and go to state 68

    qualifiedName                  shift and go to state 64
    name                           shift and go to state 123
    typeArguments                  shift and go to state 438
    classOrInterfaceType           shift and go to state 439
    primitiveType                  shift and go to state 441
    classOrInterface               shift and go to state 122
    simpleName                     shift and go to state 66
    genericType                    shift and go to state 127
    classType                      shift and go to state 440

state 327

    (316) statementWithoutTrailingSubStatement -> doStatement .

    IF              reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    WHILE           reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    FOR             reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    BLPAREN         reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    ASSERT          reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    SEMI            reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    SWITCH          reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    DO              reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    BREAK           reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    CONTINUE        reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    RETURN          reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    SYNCHRONIZED    reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    THROW           reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    TRY             reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    Identifier      reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    AT              reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    BOOLEAN         reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    VOID            reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    BYTE            reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    SHORT           reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    INT             reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    LONG            reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    CHAR            reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    FLOAT           reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    DOUBLE          reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    PUBLIC          reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    PROTECTED       reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    PRIVATE         reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    STATIC          reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    ABSTRACT        reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    FINAL           reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    NATIVE          reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    TRANSIENT       reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    VOLATILE        reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    STRICTFP        reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    THIS            reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    SUPER           reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    OP_INC          reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    OP_DEC          reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    NEW             reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    LESS            reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    LPAREN          reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    CharacterLiteral reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    StringLiteral   reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    NULL            reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    LONG_NUMBER     reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    LONG_HEX_NUMBER reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    NON_INTEGER_1   reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    NON_INTEGER_2   reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    NON_INTEGER_3   reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    NON_INTEGER_4   reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    NON_INTEGER_5   reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    NON_INTEGER_6   reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    TRUE            reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    FALSE           reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    INTERFACE       reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    ENUM            reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    CLASS           reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    BRPAREN         reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    CASE            reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    DEFAULT         reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)
    ELSE            reduce using rule 316 (statementWithoutTrailingSubStatement -> doStatement .)


state 328

    (380) switchStatement -> SWITCH . LPAREN expression RPAREN switchBlock

    LPAREN          shift and go to state 573


state 329

    (305) statement -> labeldStatement .

    IF              reduce using rule 305 (statement -> labeldStatement .)
    WHILE           reduce using rule 305 (statement -> labeldStatement .)
    FOR             reduce using rule 305 (statement -> labeldStatement .)
    BLPAREN         reduce using rule 305 (statement -> labeldStatement .)
    ASSERT          reduce using rule 305 (statement -> labeldStatement .)
    SEMI            reduce using rule 305 (statement -> labeldStatement .)
    SWITCH          reduce using rule 305 (statement -> labeldStatement .)
    DO              reduce using rule 305 (statement -> labeldStatement .)
    BREAK           reduce using rule 305 (statement -> labeldStatement .)
    CONTINUE        reduce using rule 305 (statement -> labeldStatement .)
    RETURN          reduce using rule 305 (statement -> labeldStatement .)
    SYNCHRONIZED    reduce using rule 305 (statement -> labeldStatement .)
    THROW           reduce using rule 305 (statement -> labeldStatement .)
    TRY             reduce using rule 305 (statement -> labeldStatement .)
    Identifier      reduce using rule 305 (statement -> labeldStatement .)
    AT              reduce using rule 305 (statement -> labeldStatement .)
    BOOLEAN         reduce using rule 305 (statement -> labeldStatement .)
    VOID            reduce using rule 305 (statement -> labeldStatement .)
    BYTE            reduce using rule 305 (statement -> labeldStatement .)
    SHORT           reduce using rule 305 (statement -> labeldStatement .)
    INT             reduce using rule 305 (statement -> labeldStatement .)
    LONG            reduce using rule 305 (statement -> labeldStatement .)
    CHAR            reduce using rule 305 (statement -> labeldStatement .)
    FLOAT           reduce using rule 305 (statement -> labeldStatement .)
    DOUBLE          reduce using rule 305 (statement -> labeldStatement .)
    PUBLIC          reduce using rule 305 (statement -> labeldStatement .)
    PROTECTED       reduce using rule 305 (statement -> labeldStatement .)
    PRIVATE         reduce using rule 305 (statement -> labeldStatement .)
    STATIC          reduce using rule 305 (statement -> labeldStatement .)
    ABSTRACT        reduce using rule 305 (statement -> labeldStatement .)
    FINAL           reduce using rule 305 (statement -> labeldStatement .)
    NATIVE          reduce using rule 305 (statement -> labeldStatement .)
    TRANSIENT       reduce using rule 305 (statement -> labeldStatement .)
    VOLATILE        reduce using rule 305 (statement -> labeldStatement .)
    STRICTFP        reduce using rule 305 (statement -> labeldStatement .)
    THIS            reduce using rule 305 (statement -> labeldStatement .)
    SUPER           reduce using rule 305 (statement -> labeldStatement .)
    OP_INC          reduce using rule 305 (statement -> labeldStatement .)
    OP_DEC          reduce using rule 305 (statement -> labeldStatement .)
    NEW             reduce using rule 305 (statement -> labeldStatement .)
    LESS            reduce using rule 305 (statement -> labeldStatement .)
    LPAREN          reduce using rule 305 (statement -> labeldStatement .)
    CharacterLiteral reduce using rule 305 (statement -> labeldStatement .)
    StringLiteral   reduce using rule 305 (statement -> labeldStatement .)
    NULL            reduce using rule 305 (statement -> labeldStatement .)
    LONG_NUMBER     reduce using rule 305 (statement -> labeldStatement .)
    LONG_HEX_NUMBER reduce using rule 305 (statement -> labeldStatement .)
    NON_INTEGER_1   reduce using rule 305 (statement -> labeldStatement .)
    NON_INTEGER_2   reduce using rule 305 (statement -> labeldStatement .)
    NON_INTEGER_3   reduce using rule 305 (statement -> labeldStatement .)
    NON_INTEGER_4   reduce using rule 305 (statement -> labeldStatement .)
    NON_INTEGER_5   reduce using rule 305 (statement -> labeldStatement .)
    NON_INTEGER_6   reduce using rule 305 (statement -> labeldStatement .)
    TRUE            reduce using rule 305 (statement -> labeldStatement .)
    FALSE           reduce using rule 305 (statement -> labeldStatement .)
    INTERFACE       reduce using rule 305 (statement -> labeldStatement .)
    ENUM            reduce using rule 305 (statement -> labeldStatement .)
    CLASS           reduce using rule 305 (statement -> labeldStatement .)
    BRPAREN         reduce using rule 305 (statement -> labeldStatement .)
    CASE            reduce using rule 305 (statement -> labeldStatement .)
    DEFAULT         reduce using rule 305 (statement -> labeldStatement .)


state 330

    (289) blockStatement -> statement .

    IF              reduce using rule 289 (blockStatement -> statement .)
    WHILE           reduce using rule 289 (blockStatement -> statement .)
    FOR             reduce using rule 289 (blockStatement -> statement .)
    BLPAREN         reduce using rule 289 (blockStatement -> statement .)
    ASSERT          reduce using rule 289 (blockStatement -> statement .)
    SEMI            reduce using rule 289 (blockStatement -> statement .)
    SWITCH          reduce using rule 289 (blockStatement -> statement .)
    DO              reduce using rule 289 (blockStatement -> statement .)
    BREAK           reduce using rule 289 (blockStatement -> statement .)
    CONTINUE        reduce using rule 289 (blockStatement -> statement .)
    RETURN          reduce using rule 289 (blockStatement -> statement .)
    SYNCHRONIZED    reduce using rule 289 (blockStatement -> statement .)
    THROW           reduce using rule 289 (blockStatement -> statement .)
    TRY             reduce using rule 289 (blockStatement -> statement .)
    Identifier      reduce using rule 289 (blockStatement -> statement .)
    AT              reduce using rule 289 (blockStatement -> statement .)
    BOOLEAN         reduce using rule 289 (blockStatement -> statement .)
    VOID            reduce using rule 289 (blockStatement -> statement .)
    BYTE            reduce using rule 289 (blockStatement -> statement .)
    SHORT           reduce using rule 289 (blockStatement -> statement .)
    INT             reduce using rule 289 (blockStatement -> statement .)
    LONG            reduce using rule 289 (blockStatement -> statement .)
    CHAR            reduce using rule 289 (blockStatement -> statement .)
    FLOAT           reduce using rule 289 (blockStatement -> statement .)
    DOUBLE          reduce using rule 289 (blockStatement -> statement .)
    PUBLIC          reduce using rule 289 (blockStatement -> statement .)
    PROTECTED       reduce using rule 289 (blockStatement -> statement .)
    PRIVATE         reduce using rule 289 (blockStatement -> statement .)
    STATIC          reduce using rule 289 (blockStatement -> statement .)
    ABSTRACT        reduce using rule 289 (blockStatement -> statement .)
    FINAL           reduce using rule 289 (blockStatement -> statement .)
    NATIVE          reduce using rule 289 (blockStatement -> statement .)
    TRANSIENT       reduce using rule 289 (blockStatement -> statement .)
    VOLATILE        reduce using rule 289 (blockStatement -> statement .)
    STRICTFP        reduce using rule 289 (blockStatement -> statement .)
    THIS            reduce using rule 289 (blockStatement -> statement .)
    SUPER           reduce using rule 289 (blockStatement -> statement .)
    OP_INC          reduce using rule 289 (blockStatement -> statement .)
    OP_DEC          reduce using rule 289 (blockStatement -> statement .)
    NEW             reduce using rule 289 (blockStatement -> statement .)
    LESS            reduce using rule 289 (blockStatement -> statement .)
    LPAREN          reduce using rule 289 (blockStatement -> statement .)
    CharacterLiteral reduce using rule 289 (blockStatement -> statement .)
    StringLiteral   reduce using rule 289 (blockStatement -> statement .)
    NULL            reduce using rule 289 (blockStatement -> statement .)
    LONG_NUMBER     reduce using rule 289 (blockStatement -> statement .)
    LONG_HEX_NUMBER reduce using rule 289 (blockStatement -> statement .)
    NON_INTEGER_1   reduce using rule 289 (blockStatement -> statement .)
    NON_INTEGER_2   reduce using rule 289 (blockStatement -> statement .)
    NON_INTEGER_3   reduce using rule 289 (blockStatement -> statement .)
    NON_INTEGER_4   reduce using rule 289 (blockStatement -> statement .)
    NON_INTEGER_5   reduce using rule 289 (blockStatement -> statement .)
    NON_INTEGER_6   reduce using rule 289 (blockStatement -> statement .)
    TRUE            reduce using rule 289 (blockStatement -> statement .)
    FALSE           reduce using rule 289 (blockStatement -> statement .)
    INTERFACE       reduce using rule 289 (blockStatement -> statement .)
    ENUM            reduce using rule 289 (blockStatement -> statement .)
    CLASS           reduce using rule 289 (blockStatement -> statement .)
    BRPAREN         reduce using rule 289 (blockStatement -> statement .)
    CASE            reduce using rule 289 (blockStatement -> statement .)
    DEFAULT         reduce using rule 289 (blockStatement -> statement .)


state 331

    (295) localVariableDeclaration -> type . variableDeclarators
    (297) variableDeclarators -> . variableDeclarator
    (298) variableDeclarators -> . variableDeclarators COMMA variableDeclarator
    (299) variableDeclarator -> . variableDeclaratorId
    (300) variableDeclarator -> . variableDeclaratorId ASS variableInitializer
    (301) variableDeclaratorId -> . Identifier arrays_opt

    Identifier      shift and go to state 575

    variableDeclarators            shift and go to state 574
    variableDeclaratorId           shift and go to state 496
    variableDeclarator             shift and go to state 498

state 332

    (287) blockStatements_opt -> empty .
    (121) modifiers_opt -> empty .

    BRPAREN         reduce using rule 287 (blockStatements_opt -> empty .)
    INTERFACE       reduce using rule 121 (modifiers_opt -> empty .)
    ENUM            reduce using rule 121 (modifiers_opt -> empty .)
    CLASS           reduce using rule 121 (modifiers_opt -> empty .)


state 333

    (296) localVariableDeclaration -> modifiers . type variableDeclarators
    (123) modifiers -> modifiers . modifier
    (241) annotationTypeDeclarationHeadName -> modifiers . AT INTERFACE Identifier
    (242) annotationTypeDeclarationHeadName -> modifiers . AT INTERFACE Identifier typeParameters
    (120) modifiers_opt -> modifiers .
    (33) type -> . primitiveType
    (34) type -> . referenceType
    (124) modifier -> . PUBLIC
    (125) modifier -> . PROTECTED
    (126) modifier -> . PRIVATE
    (127) modifier -> . STATIC
    (128) modifier -> . ABSTRACT
    (129) modifier -> . FINAL
    (130) modifier -> . NATIVE
    (131) modifier -> . SYNCHRONIZED
    (132) modifier -> . TRANSIENT
    (133) modifier -> . VOLATILE
    (134) modifier -> . STRICTFP
    (135) modifier -> . annotation
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (44) referenceType -> . classOrInterfaceType
    (45) referenceType -> . arrayType
    (270) annotation -> . normalAnnotation
    (271) annotation -> . markerAnnotation
    (272) annotation -> . singleMemberAnnotation
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (54) arrayType -> . genericType arrays
    (55) arrayType -> . genericType DOT name arrays
    (56) arrayType -> . primitiveType arrays
    (57) arrayType -> . name arrays
    (273) normalAnnotation -> . annotationName LPAREN memberValuePairs_opt RPAREN
    (280) markerAnnotation -> . annotationName
    (281) singleMemberAnnotation -> . annotationName LPAREN singleMemberAnnotationMemberValue RPAREN
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (274) annotationName -> . AT name
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    AT              shift and go to state 86
    INTERFACE       reduce using rule 120 (modifiers_opt -> modifiers .)
    ENUM            reduce using rule 120 (modifiers_opt -> modifiers .)
    CLASS           reduce using rule 120 (modifiers_opt -> modifiers .)
    PUBLIC          shift and go to state 46
    PROTECTED       shift and go to state 6
    PRIVATE         shift and go to state 14
    STATIC          shift and go to state 7
    ABSTRACT        shift and go to state 5
    FINAL           shift and go to state 11
    NATIVE          shift and go to state 12
    SYNCHRONIZED    shift and go to state 2
    TRANSIENT       shift and go to state 19
    VOLATILE        shift and go to state 43
    STRICTFP        shift and go to state 18
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    Identifier      shift and go to state 68

    qualifiedName                  shift and go to state 64
    singleMemberAnnotation         shift and go to state 8
    arrayType                      shift and go to state 269
    genericType                    shift and go to state 271
    markerAnnotation               shift and go to state 9
    classOrInterfaceType           shift and go to state 272
    simpleName                     shift and go to state 66
    referenceType                  shift and go to state 273
    type                           shift and go to state 576
    annotation                     shift and go to state 35
    name                           shift and go to state 276
    annotationName                 shift and go to state 40
    primitiveType                  shift and go to state 277
    classOrInterface               shift and go to state 122
    normalAnnotation               shift and go to state 24
    modifier                       shift and go to state 87

state 334

    (33) type -> primitiveType .
    (56) arrayType -> primitiveType . arrays
    (606) primaryNoNewArray -> primitiveType . arrays DOT CLASS
    (607) primaryNoNewArray -> primitiveType . DOT CLASS
    (59) arrays -> . array_loop
    (60) array_loop -> . array
    (61) array_loop -> . array_loop array
    (58) array -> . FLPAREN FRPAREN

    Identifier      reduce using rule 33 (type -> primitiveType .)
    DOT             shift and go to state 452
    FLPAREN         shift and go to state 451

    arrays                         shift and go to state 577
    array                          shift and go to state 407
    array_loop                     shift and go to state 413

state 335

    (393) doStatement -> DO . statement WHILE LPAREN expression RPAREN SEMI
    (304) statement -> . statementWithoutTrailingSubStatement
    (305) statement -> . labeldStatement
    (306) statement -> . ifThenStatement
    (307) statement -> . ifThenElseStatement
    (308) statement -> . whileStatement
    (309) statement -> . forStatement
    (310) statement -> . enhancedForStatement
    (311) statementWithoutTrailingSubStatement -> . block
    (312) statementWithoutTrailingSubStatement -> . expressionStatement
    (313) statementWithoutTrailingSubStatement -> . assertStatement
    (314) statementWithoutTrailingSubStatement -> . emptyStatement
    (315) statementWithoutTrailingSubStatement -> . switchStatement
    (316) statementWithoutTrailingSubStatement -> . doStatement
    (317) statementWithoutTrailingSubStatement -> . breakStatement
    (318) statementWithoutTrailingSubStatement -> . continueStatement
    (319) statementWithoutTrailingSubStatement -> . returnStatement
    (320) statementWithoutTrailingSubStatement -> . synchronizedStatement
    (321) statementWithoutTrailingSubStatement -> . throwStatment
    (322) statementWithoutTrailingSubStatement -> . tryStatement
    (323) statementWithoutTrailingSubStatement -> . tryStatementWithResources
    (346) labeldStatement -> . label COLON statement
    (349) ifThenStatement -> . IF LPAREN expression RPAREN statement
    (350) ifThenElseStatement -> . IF LPAREN expression RPAREN statementNoShortIf ELSE statement
    (352) whileStatement -> . WHILE LPAREN expression RPAREN statement
    (354) forStatement -> . FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement
    (367) enhancedForStatement -> . enhancedForStatementHead statement
    (283) block -> . BLPAREN blockStatements_opt BRPAREN
    (324) expressionStatement -> . statementExpression SEMI
    (325) expressionStatement -> . explicitConstructorInvocation
    (377) assertStatement -> . ASSERT expression SEMI
    (378) assertStatement -> . ASSERT expression COLON expression SEMI
    (379) emptyStatement -> . SEMI
    (380) switchStatement -> . SWITCH LPAREN expression RPAREN switchBlock
    (393) doStatement -> . DO statement WHILE LPAREN expression RPAREN SEMI
    (394) breakStatement -> . BREAK SEMI
    (395) breakStatement -> . BREAK Identifier SEMI
    (396) continueStatement -> . CONTINUE SEMI
    (397) continueStatement -> . CONTINUE Identifier SEMI
    (398) returnStatement -> . RETURN expression_opt SEMI
    (399) synchronizedStatement -> . SYNCHRONIZED LPAREN expression RPAREN block
    (400) throwStatment -> . THROW expression SEMI
    (401) tryStatement -> . TRY tryBlock catches
    (402) tryStatement -> . TRY tryBlock catches_opt finally
    (413) tryStatementWithResources -> . TRY resourceSpecification tryBlock catches_opt
    (414) tryStatementWithResources -> . TRY resourceSpecification tryBlock catches_opt finally
    (348) label -> . Identifier
    (369) enhancedForStatementHead -> . enhancedForStatementHeadInit COLON expression RPAREN
    (326) statementExpression -> . assignment
    (327) statementExpression -> . preIncrementExpression
    (328) statementExpression -> . preDecrementExpression
    (329) statementExpression -> . postIncrementExpression
    (330) statementExpression -> . postDecrementExpression
    (331) statementExpression -> . methodInvocation
    (332) statementExpression -> . classInstanceCreationExpression
    (424) explicitConstructorInvocation -> . THIS LPAREN argumentList_opt RPAREN SEMI
    (425) explicitConstructorInvocation -> . SUPER LPAREN argumentList_opt RPAREN SEMI
    (426) explicitConstructorInvocation -> . typeArguments SUPER LPAREN argumentList RPAREN SEMI
    (427) explicitConstructorInvocation -> . typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (428) explicitConstructorInvocation -> . primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI
    (429) explicitConstructorInvocation -> . name DOT SUPER LPAREN argumentList_opt RPAREN SEMI
    (430) explicitConstructorInvocation -> . primary DOT THIS LPAREN argumentList_opt RPAREN SEMI
    (431) explicitConstructorInvocation -> . name DOT THIS LPAREN argumentList_opt RPAREN SEMI
    (432) explicitConstructorInvocation -> . primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI
    (433) explicitConstructorInvocation -> . name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI
    (434) explicitConstructorInvocation -> . primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (435) explicitConstructorInvocation -> . name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (370) enhancedForStatementHeadInit -> . FOR LPAREN type Identifier arrays_opt
    (371) enhancedForStatementHeadInit -> . FOR LPAREN modifiers type Identifier arrays_opt
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (82) typeArguments -> . LESS typeArgumentList1
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (442) classInstanceCreationExpressionName -> . name DOT
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE

    IF              shift and go to state 349
    WHILE           shift and go to state 325
    FOR             shift and go to state 312
    BLPAREN         shift and go to state 120
    ASSERT          shift and go to state 336
    SEMI            shift and go to state 341
    SWITCH          shift and go to state 328
    DO              shift and go to state 335
    BREAK           shift and go to state 305
    CONTINUE        shift and go to state 318
    RETURN          shift and go to state 302
    SYNCHRONIZED    shift and go to state 518
    THROW           shift and go to state 354
    TRY             shift and go to state 314
    Identifier      shift and go to state 316
    THIS            shift and go to state 300
    SUPER           shift and go to state 353
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    NEW             shift and go to state 326
    LESS            shift and go to state 287
    LPAREN          shift and go to state 348
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    forStatement                   shift and go to state 286
    qualifiedName                  shift and go to state 64
    continueStatement              shift and go to state 304
    arrayCreationWithArrayInitializer shift and go to state 227
    switchStatement                shift and go to state 288
    primary                        shift and go to state 324
    arrayCreationWithoutArrayInitializer shift and go to state 232
    breakStatement                 shift and go to state 337
    tryStatementWithResources      shift and go to state 338
    assertStatement                shift and go to state 289
    synchronizedStatement          shift and go to state 339
    booleanLiteral                 shift and go to state 173
    doStatement                    shift and go to state 327
    postDecrementExpression        shift and go to state 306
    typeArguments                  shift and go to state 307
    literal                        shift and go to state 208
    labeldStatement                shift and go to state 329
    preIncrementExpression         shift and go to state 308
    label                          shift and go to state 309
    simpleName                     shift and go to state 66
    tryStatement                   shift and go to state 342
    throwStatment                  shift and go to state 310
    methodInvocation               shift and go to state 311
    statement                      shift and go to state 578
    arrayAccess                    shift and go to state 234
    ifThenElseStatement            shift and go to state 291
    fieldAccess                    shift and go to state 189
    statementWithoutTrailingSubStatement shift and go to state 344
    integerLiteral                 shift and go to state 183
    classInstanceCreationExpressionName shift and go to state 187
    FloatingPointLiteral           shift and go to state 214
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 346
    whileStatement                 shift and go to state 292
    enhancedForStatementHeadInit   shift and go to state 313
    postIncrementExpression        shift and go to state 293
    ifThenStatement                shift and go to state 347
    emptyStatement                 shift and go to state 295
    returnStatement                shift and go to state 297
    preDecrementExpression         shift and go to state 320
    postfixExpression              shift and go to state 298
    enhancedForStatementHead       shift and go to state 296
    name                           shift and go to state 517
    expressionStatement            shift and go to state 301
    primitiveType                  shift and go to state 219
    statementExpression            shift and go to state 350
    explicitConstructorInvocation  shift and go to state 351
    enhancedForStatement           shift and go to state 352
    block                          shift and go to state 321
    classInstanceCreationExpression shift and go to state 322

state 336

    (377) assertStatement -> ASSERT . expression SEMI
    (378) assertStatement -> ASSERT . expression COLON expression SEMI
    (456) expression -> . assignmentExpression
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    assignmentExpression           shift and go to state 543
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    assignment                     shift and go to state 554
    fieldAccess                    shift and go to state 189
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    unaryExpressionNotPlusMinus    shift and go to state 397
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    expression                     shift and go to state 579
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 337

    (317) statementWithoutTrailingSubStatement -> breakStatement .

    IF              reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    WHILE           reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    FOR             reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    BLPAREN         reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    ASSERT          reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    SEMI            reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    SWITCH          reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    DO              reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    BREAK           reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    CONTINUE        reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    RETURN          reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    SYNCHRONIZED    reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    THROW           reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    TRY             reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    Identifier      reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    AT              reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    BOOLEAN         reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    VOID            reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    BYTE            reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    SHORT           reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    INT             reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    LONG            reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    CHAR            reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    FLOAT           reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    DOUBLE          reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    PUBLIC          reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    PROTECTED       reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    PRIVATE         reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    STATIC          reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    ABSTRACT        reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    FINAL           reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    NATIVE          reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    TRANSIENT       reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    VOLATILE        reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    STRICTFP        reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    THIS            reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    SUPER           reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    OP_INC          reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    OP_DEC          reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    NEW             reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    LESS            reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    LPAREN          reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    CharacterLiteral reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    StringLiteral   reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    NULL            reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    LONG_NUMBER     reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    LONG_HEX_NUMBER reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    NON_INTEGER_1   reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    NON_INTEGER_2   reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    NON_INTEGER_3   reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    NON_INTEGER_4   reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    NON_INTEGER_5   reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    NON_INTEGER_6   reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    TRUE            reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    FALSE           reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    INTERFACE       reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    ENUM            reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    CLASS           reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    BRPAREN         reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    CASE            reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    DEFAULT         reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)
    ELSE            reduce using rule 317 (statementWithoutTrailingSubStatement -> breakStatement .)


state 338

    (323) statementWithoutTrailingSubStatement -> tryStatementWithResources .

    IF              reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    WHILE           reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    FOR             reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    BLPAREN         reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    ASSERT          reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    SEMI            reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    SWITCH          reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    DO              reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    BREAK           reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    CONTINUE        reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    RETURN          reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    SYNCHRONIZED    reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    THROW           reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    TRY             reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    Identifier      reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    AT              reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    BOOLEAN         reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    VOID            reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    BYTE            reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    SHORT           reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    INT             reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    LONG            reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    CHAR            reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    FLOAT           reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    DOUBLE          reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    PUBLIC          reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    PROTECTED       reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    PRIVATE         reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    STATIC          reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    ABSTRACT        reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    FINAL           reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    NATIVE          reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    TRANSIENT       reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    VOLATILE        reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    STRICTFP        reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    THIS            reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    SUPER           reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    OP_INC          reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    OP_DEC          reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    NEW             reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    LESS            reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    LPAREN          reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    CharacterLiteral reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    StringLiteral   reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    NULL            reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    LONG_NUMBER     reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    LONG_HEX_NUMBER reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    NON_INTEGER_1   reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    NON_INTEGER_2   reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    NON_INTEGER_3   reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    NON_INTEGER_4   reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    NON_INTEGER_5   reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    NON_INTEGER_6   reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    TRUE            reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    FALSE           reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    INTERFACE       reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    ENUM            reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    CLASS           reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    BRPAREN         reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    CASE            reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    DEFAULT         reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)
    ELSE            reduce using rule 323 (statementWithoutTrailingSubStatement -> tryStatementWithResources .)


state 339

    (320) statementWithoutTrailingSubStatement -> synchronizedStatement .

    IF              reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    WHILE           reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    FOR             reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    BLPAREN         reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    ASSERT          reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    SEMI            reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    SWITCH          reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    DO              reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    BREAK           reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    CONTINUE        reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    RETURN          reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    SYNCHRONIZED    reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    THROW           reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    TRY             reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    Identifier      reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    AT              reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    BOOLEAN         reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    VOID            reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    BYTE            reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    SHORT           reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    INT             reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    LONG            reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    CHAR            reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    FLOAT           reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    DOUBLE          reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    PUBLIC          reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    PROTECTED       reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    PRIVATE         reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    STATIC          reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    ABSTRACT        reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    FINAL           reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    NATIVE          reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    TRANSIENT       reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    VOLATILE        reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    STRICTFP        reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    THIS            reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    SUPER           reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    OP_INC          reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    OP_DEC          reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    NEW             reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    LESS            reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    LPAREN          reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    CharacterLiteral reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    StringLiteral   reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    NULL            reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    LONG_NUMBER     reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    LONG_HEX_NUMBER reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    NON_INTEGER_1   reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    NON_INTEGER_2   reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    NON_INTEGER_3   reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    NON_INTEGER_4   reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    NON_INTEGER_5   reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    NON_INTEGER_6   reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    TRUE            reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    FALSE           reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    INTERFACE       reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    ENUM            reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    CLASS           reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    BRPAREN         reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    CASE            reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    DEFAULT         reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)
    ELSE            reduce using rule 320 (statementWithoutTrailingSubStatement -> synchronizedStatement .)


state 340

    (293) blockStatement -> enumDeclaration .

    IF              reduce using rule 293 (blockStatement -> enumDeclaration .)
    WHILE           reduce using rule 293 (blockStatement -> enumDeclaration .)
    FOR             reduce using rule 293 (blockStatement -> enumDeclaration .)
    BLPAREN         reduce using rule 293 (blockStatement -> enumDeclaration .)
    ASSERT          reduce using rule 293 (blockStatement -> enumDeclaration .)
    SEMI            reduce using rule 293 (blockStatement -> enumDeclaration .)
    SWITCH          reduce using rule 293 (blockStatement -> enumDeclaration .)
    DO              reduce using rule 293 (blockStatement -> enumDeclaration .)
    BREAK           reduce using rule 293 (blockStatement -> enumDeclaration .)
    CONTINUE        reduce using rule 293 (blockStatement -> enumDeclaration .)
    RETURN          reduce using rule 293 (blockStatement -> enumDeclaration .)
    SYNCHRONIZED    reduce using rule 293 (blockStatement -> enumDeclaration .)
    THROW           reduce using rule 293 (blockStatement -> enumDeclaration .)
    TRY             reduce using rule 293 (blockStatement -> enumDeclaration .)
    Identifier      reduce using rule 293 (blockStatement -> enumDeclaration .)
    AT              reduce using rule 293 (blockStatement -> enumDeclaration .)
    BOOLEAN         reduce using rule 293 (blockStatement -> enumDeclaration .)
    VOID            reduce using rule 293 (blockStatement -> enumDeclaration .)
    BYTE            reduce using rule 293 (blockStatement -> enumDeclaration .)
    SHORT           reduce using rule 293 (blockStatement -> enumDeclaration .)
    INT             reduce using rule 293 (blockStatement -> enumDeclaration .)
    LONG            reduce using rule 293 (blockStatement -> enumDeclaration .)
    CHAR            reduce using rule 293 (blockStatement -> enumDeclaration .)
    FLOAT           reduce using rule 293 (blockStatement -> enumDeclaration .)
    DOUBLE          reduce using rule 293 (blockStatement -> enumDeclaration .)
    PUBLIC          reduce using rule 293 (blockStatement -> enumDeclaration .)
    PROTECTED       reduce using rule 293 (blockStatement -> enumDeclaration .)
    PRIVATE         reduce using rule 293 (blockStatement -> enumDeclaration .)
    STATIC          reduce using rule 293 (blockStatement -> enumDeclaration .)
    ABSTRACT        reduce using rule 293 (blockStatement -> enumDeclaration .)
    FINAL           reduce using rule 293 (blockStatement -> enumDeclaration .)
    NATIVE          reduce using rule 293 (blockStatement -> enumDeclaration .)
    TRANSIENT       reduce using rule 293 (blockStatement -> enumDeclaration .)
    VOLATILE        reduce using rule 293 (blockStatement -> enumDeclaration .)
    STRICTFP        reduce using rule 293 (blockStatement -> enumDeclaration .)
    THIS            reduce using rule 293 (blockStatement -> enumDeclaration .)
    SUPER           reduce using rule 293 (blockStatement -> enumDeclaration .)
    OP_INC          reduce using rule 293 (blockStatement -> enumDeclaration .)
    OP_DEC          reduce using rule 293 (blockStatement -> enumDeclaration .)
    NEW             reduce using rule 293 (blockStatement -> enumDeclaration .)
    LESS            reduce using rule 293 (blockStatement -> enumDeclaration .)
    LPAREN          reduce using rule 293 (blockStatement -> enumDeclaration .)
    CharacterLiteral reduce using rule 293 (blockStatement -> enumDeclaration .)
    StringLiteral   reduce using rule 293 (blockStatement -> enumDeclaration .)
    NULL            reduce using rule 293 (blockStatement -> enumDeclaration .)
    LONG_NUMBER     reduce using rule 293 (blockStatement -> enumDeclaration .)
    LONG_HEX_NUMBER reduce using rule 293 (blockStatement -> enumDeclaration .)
    NON_INTEGER_1   reduce using rule 293 (blockStatement -> enumDeclaration .)
    NON_INTEGER_2   reduce using rule 293 (blockStatement -> enumDeclaration .)
    NON_INTEGER_3   reduce using rule 293 (blockStatement -> enumDeclaration .)
    NON_INTEGER_4   reduce using rule 293 (blockStatement -> enumDeclaration .)
    NON_INTEGER_5   reduce using rule 293 (blockStatement -> enumDeclaration .)
    NON_INTEGER_6   reduce using rule 293 (blockStatement -> enumDeclaration .)
    TRUE            reduce using rule 293 (blockStatement -> enumDeclaration .)
    FALSE           reduce using rule 293 (blockStatement -> enumDeclaration .)
    INTERFACE       reduce using rule 293 (blockStatement -> enumDeclaration .)
    ENUM            reduce using rule 293 (blockStatement -> enumDeclaration .)
    CLASS           reduce using rule 293 (blockStatement -> enumDeclaration .)
    BRPAREN         reduce using rule 293 (blockStatement -> enumDeclaration .)
    CASE            reduce using rule 293 (blockStatement -> enumDeclaration .)
    DEFAULT         reduce using rule 293 (blockStatement -> enumDeclaration .)


state 341

    (379) emptyStatement -> SEMI .

    IF              reduce using rule 379 (emptyStatement -> SEMI .)
    WHILE           reduce using rule 379 (emptyStatement -> SEMI .)
    FOR             reduce using rule 379 (emptyStatement -> SEMI .)
    BLPAREN         reduce using rule 379 (emptyStatement -> SEMI .)
    ASSERT          reduce using rule 379 (emptyStatement -> SEMI .)
    SEMI            reduce using rule 379 (emptyStatement -> SEMI .)
    SWITCH          reduce using rule 379 (emptyStatement -> SEMI .)
    DO              reduce using rule 379 (emptyStatement -> SEMI .)
    BREAK           reduce using rule 379 (emptyStatement -> SEMI .)
    CONTINUE        reduce using rule 379 (emptyStatement -> SEMI .)
    RETURN          reduce using rule 379 (emptyStatement -> SEMI .)
    SYNCHRONIZED    reduce using rule 379 (emptyStatement -> SEMI .)
    THROW           reduce using rule 379 (emptyStatement -> SEMI .)
    TRY             reduce using rule 379 (emptyStatement -> SEMI .)
    Identifier      reduce using rule 379 (emptyStatement -> SEMI .)
    AT              reduce using rule 379 (emptyStatement -> SEMI .)
    BOOLEAN         reduce using rule 379 (emptyStatement -> SEMI .)
    VOID            reduce using rule 379 (emptyStatement -> SEMI .)
    BYTE            reduce using rule 379 (emptyStatement -> SEMI .)
    SHORT           reduce using rule 379 (emptyStatement -> SEMI .)
    INT             reduce using rule 379 (emptyStatement -> SEMI .)
    LONG            reduce using rule 379 (emptyStatement -> SEMI .)
    CHAR            reduce using rule 379 (emptyStatement -> SEMI .)
    FLOAT           reduce using rule 379 (emptyStatement -> SEMI .)
    DOUBLE          reduce using rule 379 (emptyStatement -> SEMI .)
    PUBLIC          reduce using rule 379 (emptyStatement -> SEMI .)
    PROTECTED       reduce using rule 379 (emptyStatement -> SEMI .)
    PRIVATE         reduce using rule 379 (emptyStatement -> SEMI .)
    STATIC          reduce using rule 379 (emptyStatement -> SEMI .)
    ABSTRACT        reduce using rule 379 (emptyStatement -> SEMI .)
    FINAL           reduce using rule 379 (emptyStatement -> SEMI .)
    NATIVE          reduce using rule 379 (emptyStatement -> SEMI .)
    TRANSIENT       reduce using rule 379 (emptyStatement -> SEMI .)
    VOLATILE        reduce using rule 379 (emptyStatement -> SEMI .)
    STRICTFP        reduce using rule 379 (emptyStatement -> SEMI .)
    THIS            reduce using rule 379 (emptyStatement -> SEMI .)
    SUPER           reduce using rule 379 (emptyStatement -> SEMI .)
    OP_INC          reduce using rule 379 (emptyStatement -> SEMI .)
    OP_DEC          reduce using rule 379 (emptyStatement -> SEMI .)
    NEW             reduce using rule 379 (emptyStatement -> SEMI .)
    LESS            reduce using rule 379 (emptyStatement -> SEMI .)
    LPAREN          reduce using rule 379 (emptyStatement -> SEMI .)
    CharacterLiteral reduce using rule 379 (emptyStatement -> SEMI .)
    StringLiteral   reduce using rule 379 (emptyStatement -> SEMI .)
    NULL            reduce using rule 379 (emptyStatement -> SEMI .)
    LONG_NUMBER     reduce using rule 379 (emptyStatement -> SEMI .)
    LONG_HEX_NUMBER reduce using rule 379 (emptyStatement -> SEMI .)
    NON_INTEGER_1   reduce using rule 379 (emptyStatement -> SEMI .)
    NON_INTEGER_2   reduce using rule 379 (emptyStatement -> SEMI .)
    NON_INTEGER_3   reduce using rule 379 (emptyStatement -> SEMI .)
    NON_INTEGER_4   reduce using rule 379 (emptyStatement -> SEMI .)
    NON_INTEGER_5   reduce using rule 379 (emptyStatement -> SEMI .)
    NON_INTEGER_6   reduce using rule 379 (emptyStatement -> SEMI .)
    TRUE            reduce using rule 379 (emptyStatement -> SEMI .)
    FALSE           reduce using rule 379 (emptyStatement -> SEMI .)
    INTERFACE       reduce using rule 379 (emptyStatement -> SEMI .)
    ENUM            reduce using rule 379 (emptyStatement -> SEMI .)
    CLASS           reduce using rule 379 (emptyStatement -> SEMI .)
    BRPAREN         reduce using rule 379 (emptyStatement -> SEMI .)
    CASE            reduce using rule 379 (emptyStatement -> SEMI .)
    DEFAULT         reduce using rule 379 (emptyStatement -> SEMI .)
    ELSE            reduce using rule 379 (emptyStatement -> SEMI .)


state 342

    (322) statementWithoutTrailingSubStatement -> tryStatement .

    IF              reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    WHILE           reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    FOR             reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    BLPAREN         reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    ASSERT          reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    SEMI            reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    SWITCH          reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    DO              reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    BREAK           reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    CONTINUE        reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    RETURN          reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    SYNCHRONIZED    reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    THROW           reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    TRY             reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    Identifier      reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    AT              reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    BOOLEAN         reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    VOID            reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    BYTE            reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    SHORT           reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    INT             reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    LONG            reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    CHAR            reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    FLOAT           reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    DOUBLE          reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    PUBLIC          reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    PROTECTED       reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    PRIVATE         reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    STATIC          reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    ABSTRACT        reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    FINAL           reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    NATIVE          reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    TRANSIENT       reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    VOLATILE        reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    STRICTFP        reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    THIS            reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    SUPER           reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    OP_INC          reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    OP_DEC          reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    NEW             reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    LESS            reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    LPAREN          reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    CharacterLiteral reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    StringLiteral   reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    NULL            reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    LONG_NUMBER     reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    LONG_HEX_NUMBER reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    NON_INTEGER_1   reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    NON_INTEGER_2   reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    NON_INTEGER_3   reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    NON_INTEGER_4   reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    NON_INTEGER_5   reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    NON_INTEGER_6   reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    TRUE            reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    FALSE           reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    INTERFACE       reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    ENUM            reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    CLASS           reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    BRPAREN         reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    CASE            reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    DEFAULT         reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)
    ELSE            reduce using rule 322 (statementWithoutTrailingSubStatement -> tryStatement .)


state 343

    (291) blockStatement -> interfaceDeclaration .

    IF              reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    WHILE           reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    FOR             reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    BLPAREN         reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    ASSERT          reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    SEMI            reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    SWITCH          reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    DO              reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    BREAK           reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    CONTINUE        reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    RETURN          reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    SYNCHRONIZED    reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    THROW           reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    TRY             reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    Identifier      reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    AT              reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    BOOLEAN         reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    VOID            reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    BYTE            reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    SHORT           reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    INT             reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    LONG            reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    CHAR            reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    FLOAT           reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    DOUBLE          reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    PUBLIC          reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    PROTECTED       reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    PRIVATE         reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    STATIC          reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    ABSTRACT        reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    FINAL           reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    NATIVE          reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    TRANSIENT       reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    VOLATILE        reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    STRICTFP        reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    THIS            reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    SUPER           reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    OP_INC          reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    OP_DEC          reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    NEW             reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    LESS            reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    LPAREN          reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    CharacterLiteral reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    StringLiteral   reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    NULL            reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    LONG_NUMBER     reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    LONG_HEX_NUMBER reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    NON_INTEGER_1   reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    NON_INTEGER_2   reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    NON_INTEGER_3   reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    NON_INTEGER_4   reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    NON_INTEGER_5   reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    NON_INTEGER_6   reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    TRUE            reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    FALSE           reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    INTERFACE       reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    ENUM            reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    CLASS           reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    BRPAREN         reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    CASE            reduce using rule 291 (blockStatement -> interfaceDeclaration .)
    DEFAULT         reduce using rule 291 (blockStatement -> interfaceDeclaration .)


state 344

    (304) statement -> statementWithoutTrailingSubStatement .

    IF              reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    WHILE           reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    FOR             reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    BLPAREN         reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    ASSERT          reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    SEMI            reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    SWITCH          reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    DO              reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    BREAK           reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    CONTINUE        reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    RETURN          reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    SYNCHRONIZED    reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    THROW           reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    TRY             reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    Identifier      reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    AT              reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    BOOLEAN         reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    VOID            reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    BYTE            reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    SHORT           reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    INT             reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    LONG            reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    CHAR            reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    FLOAT           reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    DOUBLE          reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    PUBLIC          reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    PROTECTED       reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    PRIVATE         reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    STATIC          reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    ABSTRACT        reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    FINAL           reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    NATIVE          reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    TRANSIENT       reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    VOLATILE        reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    STRICTFP        reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    THIS            reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    SUPER           reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    OP_INC          reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    OP_DEC          reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    NEW             reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    LESS            reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    LPAREN          reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    CharacterLiteral reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    StringLiteral   reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    NULL            reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    LONG_NUMBER     reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    LONG_HEX_NUMBER reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    NON_INTEGER_1   reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    NON_INTEGER_2   reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    NON_INTEGER_3   reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    NON_INTEGER_4   reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    NON_INTEGER_5   reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    NON_INTEGER_6   reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    TRUE            reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    FALSE           reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    INTERFACE       reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    ENUM            reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    CLASS           reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    BRPAREN         reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    CASE            reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    DEFAULT         reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)


state 345

    (286) blockStatements_opt -> blockStatements .
    (285) blockStatements -> blockStatements . blockStatement
    (288) blockStatement -> . localVariableDeclarationStatement
    (289) blockStatement -> . statement
    (290) blockStatement -> . classDeclaration
    (291) blockStatement -> . interfaceDeclaration
    (292) blockStatement -> . annotationTypeDeclaration
    (293) blockStatement -> . enumDeclaration
    (294) localVariableDeclarationStatement -> . localVariableDeclaration SEMI
    (304) statement -> . statementWithoutTrailingSubStatement
    (305) statement -> . labeldStatement
    (306) statement -> . ifThenStatement
    (307) statement -> . ifThenElseStatement
    (308) statement -> . whileStatement
    (309) statement -> . forStatement
    (310) statement -> . enhancedForStatement
    (136) classDeclaration -> . classHead classBody
    (195) interfaceDeclaration -> . interfaceHead InterfaceBody
    (239) annotationTypeDeclaration -> . annotationTypeDeclarationHead annotationTypeBody
    (215) enumDeclaration -> . enumHead enumBody
    (295) localVariableDeclaration -> . type variableDeclarators
    (296) localVariableDeclaration -> . modifiers type variableDeclarators
    (311) statementWithoutTrailingSubStatement -> . block
    (312) statementWithoutTrailingSubStatement -> . expressionStatement
    (313) statementWithoutTrailingSubStatement -> . assertStatement
    (314) statementWithoutTrailingSubStatement -> . emptyStatement
    (315) statementWithoutTrailingSubStatement -> . switchStatement
    (316) statementWithoutTrailingSubStatement -> . doStatement
    (317) statementWithoutTrailingSubStatement -> . breakStatement
    (318) statementWithoutTrailingSubStatement -> . continueStatement
    (319) statementWithoutTrailingSubStatement -> . returnStatement
    (320) statementWithoutTrailingSubStatement -> . synchronizedStatement
    (321) statementWithoutTrailingSubStatement -> . throwStatment
    (322) statementWithoutTrailingSubStatement -> . tryStatement
    (323) statementWithoutTrailingSubStatement -> . tryStatementWithResources
    (346) labeldStatement -> . label COLON statement
    (349) ifThenStatement -> . IF LPAREN expression RPAREN statement
    (350) ifThenElseStatement -> . IF LPAREN expression RPAREN statementNoShortIf ELSE statement
    (352) whileStatement -> . WHILE LPAREN expression RPAREN statement
    (354) forStatement -> . FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement
    (367) enhancedForStatement -> . enhancedForStatementHead statement
    (137) classHead -> . className classExtends_opt classImpls_opt
    (196) interfaceHead -> . interfaceHeadName interfaceHeadExtends_opt
    (240) annotationTypeDeclarationHead -> . annotationTypeDeclarationHeadName classExtends_opt classImpls_opt
    (216) enumHead -> . enumHeadName classImpls_opt
    (33) type -> . primitiveType
    (34) type -> . referenceType
    (122) modifiers -> . modifier
    (123) modifiers -> . modifiers modifier
    (283) block -> . BLPAREN blockStatements_opt BRPAREN
    (324) expressionStatement -> . statementExpression SEMI
    (325) expressionStatement -> . explicitConstructorInvocation
    (377) assertStatement -> . ASSERT expression SEMI
    (378) assertStatement -> . ASSERT expression COLON expression SEMI
    (379) emptyStatement -> . SEMI
    (380) switchStatement -> . SWITCH LPAREN expression RPAREN switchBlock
    (393) doStatement -> . DO statement WHILE LPAREN expression RPAREN SEMI
    (394) breakStatement -> . BREAK SEMI
    (395) breakStatement -> . BREAK Identifier SEMI
    (396) continueStatement -> . CONTINUE SEMI
    (397) continueStatement -> . CONTINUE Identifier SEMI
    (398) returnStatement -> . RETURN expression_opt SEMI
    (399) synchronizedStatement -> . SYNCHRONIZED LPAREN expression RPAREN block
    (400) throwStatment -> . THROW expression SEMI
    (401) tryStatement -> . TRY tryBlock catches
    (402) tryStatement -> . TRY tryBlock catches_opt finally
    (413) tryStatementWithResources -> . TRY resourceSpecification tryBlock catches_opt
    (414) tryStatementWithResources -> . TRY resourceSpecification tryBlock catches_opt finally
    (348) label -> . Identifier
    (369) enhancedForStatementHead -> . enhancedForStatementHeadInit COLON expression RPAREN
    (138) className -> . classHeadName1 typeParameters
    (139) className -> . classHeadName1
    (197) interfaceHeadName -> . modifiers_opt INTERFACE Identifier typeParameters
    (198) interfaceHeadName -> . modifiers_opt INTERFACE Identifier
    (241) annotationTypeDeclarationHeadName -> . modifiers AT INTERFACE Identifier
    (242) annotationTypeDeclarationHeadName -> . modifiers AT INTERFACE Identifier typeParameters
    (243) annotationTypeDeclarationHeadName -> . AT INTERFACE Identifier typeParameters
    (244) annotationTypeDeclarationHeadName -> . AT INTERFACE Identifier
    (217) enumHeadName -> . modifiers_opt ENUM Identifier
    (218) enumHeadName -> . modifiers_opt ENUM Identifier typeParameters
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (44) referenceType -> . classOrInterfaceType
    (45) referenceType -> . arrayType
    (124) modifier -> . PUBLIC
    (125) modifier -> . PROTECTED
    (126) modifier -> . PRIVATE
    (127) modifier -> . STATIC
    (128) modifier -> . ABSTRACT
    (129) modifier -> . FINAL
    (130) modifier -> . NATIVE
    (131) modifier -> . SYNCHRONIZED
    (132) modifier -> . TRANSIENT
    (133) modifier -> . VOLATILE
    (134) modifier -> . STRICTFP
    (135) modifier -> . annotation
    (326) statementExpression -> . assignment
    (327) statementExpression -> . preIncrementExpression
    (328) statementExpression -> . preDecrementExpression
    (329) statementExpression -> . postIncrementExpression
    (330) statementExpression -> . postDecrementExpression
    (331) statementExpression -> . methodInvocation
    (332) statementExpression -> . classInstanceCreationExpression
    (424) explicitConstructorInvocation -> . THIS LPAREN argumentList_opt RPAREN SEMI
    (425) explicitConstructorInvocation -> . SUPER LPAREN argumentList_opt RPAREN SEMI
    (426) explicitConstructorInvocation -> . typeArguments SUPER LPAREN argumentList RPAREN SEMI
    (427) explicitConstructorInvocation -> . typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (428) explicitConstructorInvocation -> . primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI
    (429) explicitConstructorInvocation -> . name DOT SUPER LPAREN argumentList_opt RPAREN SEMI
    (430) explicitConstructorInvocation -> . primary DOT THIS LPAREN argumentList_opt RPAREN SEMI
    (431) explicitConstructorInvocation -> . name DOT THIS LPAREN argumentList_opt RPAREN SEMI
    (432) explicitConstructorInvocation -> . primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI
    (433) explicitConstructorInvocation -> . name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI
    (434) explicitConstructorInvocation -> . primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (435) explicitConstructorInvocation -> . name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (370) enhancedForStatementHeadInit -> . FOR LPAREN type Identifier arrays_opt
    (371) enhancedForStatementHeadInit -> . FOR LPAREN modifiers type Identifier arrays_opt
    (140) classHeadName1 -> . modifiers_opt CLASS Identifier
    (120) modifiers_opt -> . modifiers
    (121) modifiers_opt -> . empty
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (54) arrayType -> . genericType arrays
    (55) arrayType -> . genericType DOT name arrays
    (56) arrayType -> . primitiveType arrays
    (57) arrayType -> . name arrays
    (270) annotation -> . normalAnnotation
    (271) annotation -> . markerAnnotation
    (272) annotation -> . singleMemberAnnotation
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (82) typeArguments -> . LESS typeArgumentList1
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (631) empty -> .
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (273) normalAnnotation -> . annotationName LPAREN memberValuePairs_opt RPAREN
    (280) markerAnnotation -> . annotationName
    (281) singleMemberAnnotation -> . annotationName LPAREN singleMemberAnnotationMemberValue RPAREN
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (442) classInstanceCreationExpressionName -> . name DOT
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (274) annotationName -> . AT name
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE

    BRPAREN         reduce using rule 286 (blockStatements_opt -> blockStatements .)
    IF              shift and go to state 349
    WHILE           shift and go to state 325
    FOR             shift and go to state 312
    BLPAREN         shift and go to state 120
    ASSERT          shift and go to state 336
    SEMI            shift and go to state 341
    SWITCH          shift and go to state 328
    DO              shift and go to state 335
    BREAK           shift and go to state 305
    CONTINUE        shift and go to state 318
    RETURN          shift and go to state 302
    SYNCHRONIZED    shift and go to state 303
    THROW           shift and go to state 354
    TRY             shift and go to state 314
    Identifier      shift and go to state 316
    AT              shift and go to state 48
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    PUBLIC          shift and go to state 46
    PROTECTED       shift and go to state 6
    PRIVATE         shift and go to state 14
    STATIC          shift and go to state 7
    ABSTRACT        shift and go to state 5
    FINAL           shift and go to state 11
    NATIVE          shift and go to state 12
    TRANSIENT       shift and go to state 19
    VOLATILE        shift and go to state 43
    STRICTFP        shift and go to state 18
    THIS            shift and go to state 300
    SUPER           shift and go to state 353
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    NEW             shift and go to state 326
    LESS            shift and go to state 287
    INTERFACE       reduce using rule 631 (empty -> .)
    ENUM            reduce using rule 631 (empty -> .)
    CLASS           reduce using rule 631 (empty -> .)
    LPAREN          shift and go to state 348
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    forStatement                   shift and go to state 286
    switchStatement                shift and go to state 288
    assertStatement                shift and go to state 289
    blockStatement                 shift and go to state 580
    genericType                    shift and go to state 271
    markerAnnotation               shift and go to state 9
    classOrInterfaceType           shift and go to state 272
    preIncrementExpression         shift and go to state 308
    booleanLiteral                 shift and go to state 173
    ifThenElseStatement            shift and go to state 291
    primaryNoNewArray              shift and go to state 178
    whileStatement                 shift and go to state 292
    classHeadName1                 shift and go to state 33
    annotationTypeDeclarationHeadName shift and go to state 34
    postIncrementExpression        shift and go to state 293
    localVariableDeclarationStatement shift and go to state 294
    emptyStatement                 shift and go to state 295
    enhancedForStatementHead       shift and go to state 296
    returnStatement                shift and go to state 297
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 298
    name                           shift and go to state 299
    expressionStatement            shift and go to state 301
    annotationName                 shift and go to state 40
    classOrInterface               shift and go to state 122
    qualifiedName                  shift and go to state 64
    continueStatement              shift and go to state 304
    primitiveType                  shift and go to state 334
    postDecrementExpression        shift and go to state 306
    typeArguments                  shift and go to state 307
    label                          shift and go to state 309
    simpleName                     shift and go to state 66
    throwStatment                  shift and go to state 310
    methodInvocation               shift and go to state 311
    classInstanceCreationExpressionName shift and go to state 187
    enhancedForStatementHeadInit   shift and go to state 313
    enumHead                       shift and go to state 30
    classDeclaration               shift and go to state 315
    annotationTypeDeclaration      shift and go to state 317
    interfaceDeclaration           shift and go to state 343
    normalAnnotation               shift and go to state 24
    ifThenStatement                shift and go to state 347
    preDecrementExpression         shift and go to state 320
    block                          shift and go to state 321
    classInstanceCreationExpression shift and go to state 322
    localVariableDeclaration       shift and go to state 323
    modifiers_opt                  shift and go to state 1
    primary                        shift and go to state 324
    singleMemberAnnotation         shift and go to state 8
    enumHeadName                   shift and go to state 10
    doStatement                    shift and go to state 327
    literal                        shift and go to state 208
    labeldStatement                shift and go to state 329
    statement                      shift and go to state 330
    interfaceHeadName              shift and go to state 27
    referenceType                  shift and go to state 273
    type                           shift and go to state 331
    empty                          shift and go to state 74
    annotationTypeDeclarationHead  shift and go to state 15
    modifiers                      shift and go to state 333
    arrayType                      shift and go to state 269
    className                      shift and go to state 13
    modifier                       shift and go to state 45
    arrayCreationWithArrayInitializer shift and go to state 227
    classHead                      shift and go to state 3
    breakStatement                 shift and go to state 337
    tryStatementWithResources      shift and go to state 338
    synchronizedStatement          shift and go to state 339
    enumDeclaration                shift and go to state 340
    arrayCreationWithoutArrayInitializer shift and go to state 232
    tryStatement                   shift and go to state 342
    FloatingPointLiteral           shift and go to state 214
    fieldAccess                    shift and go to state 189
    statementWithoutTrailingSubStatement shift and go to state 344
    integerLiteral                 shift and go to state 183
    assignment                     shift and go to state 346
    annotation                     shift and go to state 35
    statementExpression            shift and go to state 350
    explicitConstructorInvocation  shift and go to state 351
    enhancedForStatement           shift and go to state 352
    interfaceHead                  shift and go to state 47

state 346

    (326) statementExpression -> assignment .

    SEMI            reduce using rule 326 (statementExpression -> assignment .)
    COMMA           reduce using rule 326 (statementExpression -> assignment .)
    RPAREN          reduce using rule 326 (statementExpression -> assignment .)


state 347

    (306) statement -> ifThenStatement .

    IF              reduce using rule 306 (statement -> ifThenStatement .)
    WHILE           reduce using rule 306 (statement -> ifThenStatement .)
    FOR             reduce using rule 306 (statement -> ifThenStatement .)
    BLPAREN         reduce using rule 306 (statement -> ifThenStatement .)
    ASSERT          reduce using rule 306 (statement -> ifThenStatement .)
    SEMI            reduce using rule 306 (statement -> ifThenStatement .)
    SWITCH          reduce using rule 306 (statement -> ifThenStatement .)
    DO              reduce using rule 306 (statement -> ifThenStatement .)
    BREAK           reduce using rule 306 (statement -> ifThenStatement .)
    CONTINUE        reduce using rule 306 (statement -> ifThenStatement .)
    RETURN          reduce using rule 306 (statement -> ifThenStatement .)
    SYNCHRONIZED    reduce using rule 306 (statement -> ifThenStatement .)
    THROW           reduce using rule 306 (statement -> ifThenStatement .)
    TRY             reduce using rule 306 (statement -> ifThenStatement .)
    Identifier      reduce using rule 306 (statement -> ifThenStatement .)
    AT              reduce using rule 306 (statement -> ifThenStatement .)
    BOOLEAN         reduce using rule 306 (statement -> ifThenStatement .)
    VOID            reduce using rule 306 (statement -> ifThenStatement .)
    BYTE            reduce using rule 306 (statement -> ifThenStatement .)
    SHORT           reduce using rule 306 (statement -> ifThenStatement .)
    INT             reduce using rule 306 (statement -> ifThenStatement .)
    LONG            reduce using rule 306 (statement -> ifThenStatement .)
    CHAR            reduce using rule 306 (statement -> ifThenStatement .)
    FLOAT           reduce using rule 306 (statement -> ifThenStatement .)
    DOUBLE          reduce using rule 306 (statement -> ifThenStatement .)
    PUBLIC          reduce using rule 306 (statement -> ifThenStatement .)
    PROTECTED       reduce using rule 306 (statement -> ifThenStatement .)
    PRIVATE         reduce using rule 306 (statement -> ifThenStatement .)
    STATIC          reduce using rule 306 (statement -> ifThenStatement .)
    ABSTRACT        reduce using rule 306 (statement -> ifThenStatement .)
    FINAL           reduce using rule 306 (statement -> ifThenStatement .)
    NATIVE          reduce using rule 306 (statement -> ifThenStatement .)
    TRANSIENT       reduce using rule 306 (statement -> ifThenStatement .)
    VOLATILE        reduce using rule 306 (statement -> ifThenStatement .)
    STRICTFP        reduce using rule 306 (statement -> ifThenStatement .)
    THIS            reduce using rule 306 (statement -> ifThenStatement .)
    SUPER           reduce using rule 306 (statement -> ifThenStatement .)
    OP_INC          reduce using rule 306 (statement -> ifThenStatement .)
    OP_DEC          reduce using rule 306 (statement -> ifThenStatement .)
    NEW             reduce using rule 306 (statement -> ifThenStatement .)
    LESS            reduce using rule 306 (statement -> ifThenStatement .)
    LPAREN          reduce using rule 306 (statement -> ifThenStatement .)
    CharacterLiteral reduce using rule 306 (statement -> ifThenStatement .)
    StringLiteral   reduce using rule 306 (statement -> ifThenStatement .)
    NULL            reduce using rule 306 (statement -> ifThenStatement .)
    LONG_NUMBER     reduce using rule 306 (statement -> ifThenStatement .)
    LONG_HEX_NUMBER reduce using rule 306 (statement -> ifThenStatement .)
    NON_INTEGER_1   reduce using rule 306 (statement -> ifThenStatement .)
    NON_INTEGER_2   reduce using rule 306 (statement -> ifThenStatement .)
    NON_INTEGER_3   reduce using rule 306 (statement -> ifThenStatement .)
    NON_INTEGER_4   reduce using rule 306 (statement -> ifThenStatement .)
    NON_INTEGER_5   reduce using rule 306 (statement -> ifThenStatement .)
    NON_INTEGER_6   reduce using rule 306 (statement -> ifThenStatement .)
    TRUE            reduce using rule 306 (statement -> ifThenStatement .)
    FALSE           reduce using rule 306 (statement -> ifThenStatement .)
    INTERFACE       reduce using rule 306 (statement -> ifThenStatement .)
    ENUM            reduce using rule 306 (statement -> ifThenStatement .)
    CLASS           reduce using rule 306 (statement -> ifThenStatement .)
    BRPAREN         reduce using rule 306 (statement -> ifThenStatement .)
    CASE            reduce using rule 306 (statement -> ifThenStatement .)
    DEFAULT         reduce using rule 306 (statement -> ifThenStatement .)


state 348

    (600) primaryNoNewArray -> LPAREN . name RPAREN
    (601) primaryNoNewArray -> LPAREN . expressionNotName RPAREN
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (457) expressionNotName -> . assignmentExpressionNotName
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (460) assignmentExpressionNotName -> . assignment
    (461) assignmentExpressionNotName -> . conditionalExpressionNotName
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (477) conditionalExpressionNotName -> . conditionalOrExpressionNotName
    (478) conditionalExpressionNotName -> . conditionalOrExpressionNotName QUES expression COLON conditionalExpression
    (479) conditionalExpressionNotName -> . name QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (482) conditionalOrExpressionNotName -> . conditionalAndExpressionNotName
    (483) conditionalOrExpressionNotName -> . conditionalOrExpressionNotName OP_LOR conditionalAndExpression
    (484) conditionalOrExpressionNotName -> . name OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (487) conditionalAndExpressionNotName -> . inclusiveOrExpressionNotName
    (488) conditionalAndExpressionNotName -> . conditionalAndExpressionNotName OP_LAND inclusiveOrExpression
    (489) conditionalAndExpressionNotName -> . name OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (492) inclusiveOrExpressionNotName -> . exclusiveOrExpressionNotName
    (493) inclusiveOrExpressionNotName -> . inclusiveOrExpressionNotName VERTICAL exclusiveOrExpression
    (494) inclusiveOrExpressionNotName -> . name VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (497) exclusiveOrExpressionNotName -> . andExpressionNotName
    (498) exclusiveOrExpressionNotName -> . exclusiveOrExpressionNotName CARET andExpression
    (499) exclusiveOrExpressionNotName -> . name CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (502) andExpressionNotName -> . equalityExpressionNotName
    (503) andExpressionNotName -> . andExpressionNotName AND equalityExpression
    (504) andExpressionNotName -> . name AND equalityExpression
    (508) equalityExpressionNotName -> . instanceOfExpressionNotName
    (509) equalityExpressionNotName -> . equalityExpressionNotName OP_EQ instanceOfExpression
    (510) equalityExpressionNotName -> . equalityExpressionNotName OP_NE instanceOfExpression
    (511) equalityExpressionNotName -> . name OP_EQ instanceOfExpression
    (512) equalityExpressionNotName -> . name OP_NE instanceOfExpression
    (515) instanceOfExpressionNotName -> . relationalExpressionNotName
    (516) instanceOfExpressionNotName -> . instanceOfExpressionNotName INSTANCEOF referenceType
    (517) instanceOfExpressionNotName -> . name INSTANCEOF referenceType
    (523) relationalExpressionNotName -> . shiftExpressionNotName
    (524) relationalExpressionNotName -> . relationalExpressionNotName LESS shiftExpression
    (525) relationalExpressionNotName -> . relationalExpressionNotName OP_GE shiftExpression
    (526) relationalExpressionNotName -> . relationalExpressionNotName MORE shiftExpression
    (527) relationalExpressionNotName -> . relationalExpressionNotName OP_LE shiftExpression
    (528) relationalExpressionNotName -> . name LESS shiftExpression
    (529) relationalExpressionNotName -> . name OP_GE shiftExpression
    (530) relationalExpressionNotName -> . name MORE shiftExpression
    (531) relationalExpressionNotName -> . name OP_LE shiftExpression
    (536) shiftExpressionNotName -> . additiveExpressionNotName
    (537) shiftExpressionNotName -> . shiftExpressionNotName OP_SHR additiveExpression
    (538) shiftExpressionNotName -> . shiftExpressionNotName OP_SHL additiveExpression
    (539) shiftExpressionNotName -> . shiftExpressionNotName OP_SHRR additiveExpression
    (540) shiftExpressionNotName -> . name OP_SHR additiveExpression
    (541) shiftExpressionNotName -> . name OP_SHL additiveExpression
    (542) shiftExpressionNotName -> . name OP_SHRR additiveExpression
    (546) additiveExpressionNotName -> . multiplicativeExpressionNotName
    (547) additiveExpressionNotName -> . additiveExpressionNotName PLUS multiplicativeExpression
    (548) additiveExpressionNotName -> . additiveExpressionNotName DASH multiplicativeExpression
    (549) additiveExpressionNotName -> . name PLUS multiplicativeExpression
    (550) additiveExpressionNotName -> . name DASH multiplicativeExpression
    (555) multiplicativeExpressionNotName -> . unaryExpressionNotName
    (556) multiplicativeExpressionNotName -> . multiplicativeExpressionNotName MULT unaryExpression
    (557) multiplicativeExpressionNotName -> . multiplicativeExpressionNotName SLASH unaryExpression
    (558) multiplicativeExpressionNotName -> . multiplicativeExpressionNotName PERCENT unaryExpression
    (559) multiplicativeExpressionNotName -> . name MULT unaryExpression
    (560) multiplicativeExpressionNotName -> . name SLASH unaryExpression
    (561) multiplicativeExpressionNotName -> . name PERCENT unaryExpression
    (567) unaryExpressionNotName -> . preIncrementExpression
    (568) unaryExpressionNotName -> . preDecrementExpression
    (569) unaryExpressionNotName -> . PLUS unaryExpression
    (570) unaryExpressionNotName -> . DASH unaryExpression
    (571) unaryExpressionNotName -> . unaryExpressionNotPlusMinusNotName
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (580) unaryExpressionNotPlusMinusNotName -> . TILDE unaryExpression
    (581) unaryExpressionNotPlusMinusNotName -> . EXCLAMATION unaryExpression
    (582) unaryExpressionNotPlusMinusNotName -> . postfixExpressionNotName
    (583) unaryExpressionNotPlusMinusNotName -> . castExpression
    (588) postfixExpressionNotName -> . primary
    (589) postfixExpressionNotName -> . postIncrementExpression
    (590) postfixExpressionNotName -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    Identifier      shift and go to state 68
    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 174
    DASH            shift and go to state 240
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 209
    EXCLAMATION     shift and go to state 169

    exclusiveOrExpressionNotName   shift and go to state 231
    qualifiedName                  shift and go to state 64
    fieldAccess                    shift and go to state 189
    multiplicativeExpressionNotName shift and go to state 222
    postfixExpressionNotName       shift and go to state 239
    primary                        shift and go to state 469
    unaryExpressionNotName         shift and go to state 229
    inclusiveOrExpressionNotName   shift and go to state 235
    preIncrementExpression         shift and go to state 172
    conditionalAndExpressionNotName shift and go to state 205
    unaryExpressionNotPlusMinusNotName shift and go to state 175
    postDecrementExpression        shift and go to state 468
    castExpression                 shift and go to state 241
    arrayCreationWithoutArrayInitializer shift and go to state 232
    shiftExpressionNotName         shift and go to state 233
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    assignmentExpressionNotName    shift and go to state 473
    integerLiteral                 shift and go to state 183
    classInstanceCreationExpressionName shift and go to state 187
    primaryNoNewArray              shift and go to state 178
    conditionalExpressionNotName   shift and go to state 470
    assignment                     shift and go to state 474
    conditionalOrExpressionNotName shift and go to state 237
    FloatingPointLiteral           shift and go to state 214
    postIncrementExpression        shift and go to state 466
    arrayAccess                    shift and go to state 234
    expressionNotName              shift and go to state 471
    postfixExpression              shift and go to state 298
    additiveExpressionNotName      shift and go to state 212
    name                           shift and go to state 581
    relationalExpressionNotName    shift and go to state 217
    primitiveType                  shift and go to state 219
    equalityExpressionNotName      shift and go to state 188
    instanceOfExpressionNotName    shift and go to state 220
    andExpressionNotName           shift and go to state 223
    preDecrementExpression         shift and go to state 196
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 349

    (349) ifThenStatement -> IF . LPAREN expression RPAREN statement
    (350) ifThenElseStatement -> IF . LPAREN expression RPAREN statementNoShortIf ELSE statement

    LPAREN          shift and go to state 582


state 350

    (324) expressionStatement -> statementExpression . SEMI

    SEMI            shift and go to state 583


state 351

    (325) expressionStatement -> explicitConstructorInvocation .

    IF              reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    WHILE           reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    FOR             reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    BLPAREN         reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    ASSERT          reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    SEMI            reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    SWITCH          reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    DO              reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    BREAK           reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    CONTINUE        reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    RETURN          reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    SYNCHRONIZED    reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    THROW           reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    TRY             reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    Identifier      reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    AT              reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    BOOLEAN         reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    VOID            reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    BYTE            reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    SHORT           reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    INT             reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    LONG            reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    CHAR            reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    FLOAT           reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    DOUBLE          reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    PUBLIC          reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    PROTECTED       reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    PRIVATE         reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    STATIC          reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    ABSTRACT        reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    FINAL           reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    NATIVE          reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    TRANSIENT       reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    VOLATILE        reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    STRICTFP        reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    THIS            reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    SUPER           reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    OP_INC          reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    OP_DEC          reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    NEW             reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    LESS            reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    LPAREN          reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    CharacterLiteral reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    StringLiteral   reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    NULL            reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    LONG_NUMBER     reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    LONG_HEX_NUMBER reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    NON_INTEGER_1   reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    NON_INTEGER_2   reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    NON_INTEGER_3   reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    NON_INTEGER_4   reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    NON_INTEGER_5   reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    NON_INTEGER_6   reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    TRUE            reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    FALSE           reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    INTERFACE       reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    ENUM            reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    CLASS           reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    BRPAREN         reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    CASE            reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    DEFAULT         reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)
    ELSE            reduce using rule 325 (expressionStatement -> explicitConstructorInvocation .)


state 352

    (310) statement -> enhancedForStatement .

    IF              reduce using rule 310 (statement -> enhancedForStatement .)
    WHILE           reduce using rule 310 (statement -> enhancedForStatement .)
    FOR             reduce using rule 310 (statement -> enhancedForStatement .)
    BLPAREN         reduce using rule 310 (statement -> enhancedForStatement .)
    ASSERT          reduce using rule 310 (statement -> enhancedForStatement .)
    SEMI            reduce using rule 310 (statement -> enhancedForStatement .)
    SWITCH          reduce using rule 310 (statement -> enhancedForStatement .)
    DO              reduce using rule 310 (statement -> enhancedForStatement .)
    BREAK           reduce using rule 310 (statement -> enhancedForStatement .)
    CONTINUE        reduce using rule 310 (statement -> enhancedForStatement .)
    RETURN          reduce using rule 310 (statement -> enhancedForStatement .)
    SYNCHRONIZED    reduce using rule 310 (statement -> enhancedForStatement .)
    THROW           reduce using rule 310 (statement -> enhancedForStatement .)
    TRY             reduce using rule 310 (statement -> enhancedForStatement .)
    Identifier      reduce using rule 310 (statement -> enhancedForStatement .)
    AT              reduce using rule 310 (statement -> enhancedForStatement .)
    BOOLEAN         reduce using rule 310 (statement -> enhancedForStatement .)
    VOID            reduce using rule 310 (statement -> enhancedForStatement .)
    BYTE            reduce using rule 310 (statement -> enhancedForStatement .)
    SHORT           reduce using rule 310 (statement -> enhancedForStatement .)
    INT             reduce using rule 310 (statement -> enhancedForStatement .)
    LONG            reduce using rule 310 (statement -> enhancedForStatement .)
    CHAR            reduce using rule 310 (statement -> enhancedForStatement .)
    FLOAT           reduce using rule 310 (statement -> enhancedForStatement .)
    DOUBLE          reduce using rule 310 (statement -> enhancedForStatement .)
    PUBLIC          reduce using rule 310 (statement -> enhancedForStatement .)
    PROTECTED       reduce using rule 310 (statement -> enhancedForStatement .)
    PRIVATE         reduce using rule 310 (statement -> enhancedForStatement .)
    STATIC          reduce using rule 310 (statement -> enhancedForStatement .)
    ABSTRACT        reduce using rule 310 (statement -> enhancedForStatement .)
    FINAL           reduce using rule 310 (statement -> enhancedForStatement .)
    NATIVE          reduce using rule 310 (statement -> enhancedForStatement .)
    TRANSIENT       reduce using rule 310 (statement -> enhancedForStatement .)
    VOLATILE        reduce using rule 310 (statement -> enhancedForStatement .)
    STRICTFP        reduce using rule 310 (statement -> enhancedForStatement .)
    THIS            reduce using rule 310 (statement -> enhancedForStatement .)
    SUPER           reduce using rule 310 (statement -> enhancedForStatement .)
    OP_INC          reduce using rule 310 (statement -> enhancedForStatement .)
    OP_DEC          reduce using rule 310 (statement -> enhancedForStatement .)
    NEW             reduce using rule 310 (statement -> enhancedForStatement .)
    LESS            reduce using rule 310 (statement -> enhancedForStatement .)
    LPAREN          reduce using rule 310 (statement -> enhancedForStatement .)
    CharacterLiteral reduce using rule 310 (statement -> enhancedForStatement .)
    StringLiteral   reduce using rule 310 (statement -> enhancedForStatement .)
    NULL            reduce using rule 310 (statement -> enhancedForStatement .)
    LONG_NUMBER     reduce using rule 310 (statement -> enhancedForStatement .)
    LONG_HEX_NUMBER reduce using rule 310 (statement -> enhancedForStatement .)
    NON_INTEGER_1   reduce using rule 310 (statement -> enhancedForStatement .)
    NON_INTEGER_2   reduce using rule 310 (statement -> enhancedForStatement .)
    NON_INTEGER_3   reduce using rule 310 (statement -> enhancedForStatement .)
    NON_INTEGER_4   reduce using rule 310 (statement -> enhancedForStatement .)
    NON_INTEGER_5   reduce using rule 310 (statement -> enhancedForStatement .)
    NON_INTEGER_6   reduce using rule 310 (statement -> enhancedForStatement .)
    TRUE            reduce using rule 310 (statement -> enhancedForStatement .)
    FALSE           reduce using rule 310 (statement -> enhancedForStatement .)
    INTERFACE       reduce using rule 310 (statement -> enhancedForStatement .)
    ENUM            reduce using rule 310 (statement -> enhancedForStatement .)
    CLASS           reduce using rule 310 (statement -> enhancedForStatement .)
    BRPAREN         reduce using rule 310 (statement -> enhancedForStatement .)
    CASE            reduce using rule 310 (statement -> enhancedForStatement .)
    DEFAULT         reduce using rule 310 (statement -> enhancedForStatement .)


state 353

    (425) explicitConstructorInvocation -> SUPER . LPAREN argumentList_opt RPAREN SEMI
    (343) methodInvocation -> SUPER . DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> SUPER . DOT Identifier LPAREN argumentList_opt RPAREN
    (446) fieldAccess -> SUPER . DOT Identifier

    LPAREN          shift and go to state 584
    DOT             shift and go to state 585


state 354

    (400) throwStatment -> THROW . expression SEMI
    (456) expression -> . assignmentExpression
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    assignmentExpression           shift and go to state 543
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    assignment                     shift and go to state 554
    fieldAccess                    shift and go to state 189
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    unaryExpressionNotPlusMinus    shift and go to state 397
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    expression                     shift and go to state 586
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 355

    (50) genericType -> classOrInterface typeArguments .

    DOT             reduce using rule 50 (genericType -> classOrInterface typeArguments .)
    FLPAREN         reduce using rule 50 (genericType -> classOrInterface typeArguments .)
    Identifier      reduce using rule 50 (genericType -> classOrInterface typeArguments .)
    MORE            reduce using rule 50 (genericType -> classOrInterface typeArguments .)
    COMMA           reduce using rule 50 (genericType -> classOrInterface typeArguments .)
    IMPLEMENTS      reduce using rule 50 (genericType -> classOrInterface typeArguments .)
    BLPAREN         reduce using rule 50 (genericType -> classOrInterface typeArguments .)
    VERTICAL        reduce using rule 50 (genericType -> classOrInterface typeArguments .)
    OP_SHRR         reduce using rule 50 (genericType -> classOrInterface typeArguments .)
    OP_SHR          reduce using rule 50 (genericType -> classOrInterface typeArguments .)
    RPAREN          reduce using rule 50 (genericType -> classOrInterface typeArguments .)
    SEMI            reduce using rule 50 (genericType -> classOrInterface typeArguments .)
    LPAREN          reduce using rule 50 (genericType -> classOrInterface typeArguments .)
    INSTANCEOF      reduce using rule 50 (genericType -> classOrInterface typeArguments .)
    OP_EQ           reduce using rule 50 (genericType -> classOrInterface typeArguments .)
    OP_NE           reduce using rule 50 (genericType -> classOrInterface typeArguments .)
    AND             reduce using rule 50 (genericType -> classOrInterface typeArguments .)
    CARET           reduce using rule 50 (genericType -> classOrInterface typeArguments .)
    OP_LAND         reduce using rule 50 (genericType -> classOrInterface typeArguments .)
    QUES            reduce using rule 50 (genericType -> classOrInterface typeArguments .)
    OP_LOR          reduce using rule 50 (genericType -> classOrInterface typeArguments .)
    BRPAREN         reduce using rule 50 (genericType -> classOrInterface typeArguments .)
    OP_ARRAY        reduce using rule 50 (genericType -> classOrInterface typeArguments .)
    COLON           reduce using rule 50 (genericType -> classOrInterface typeArguments .)
    FRPAREN         reduce using rule 50 (genericType -> classOrInterface typeArguments .)


state 356

    (51) genericType -> classOrInterface LESS . MORE
    (82) typeArguments -> LESS . typeArgumentList1
    (87) typeArgumentList1 -> . typeArgument1
    (88) typeArgumentList1 -> . typeArgumentList COMMA typeArgument1
    (89) typeArgument1 -> . referenceType1
    (90) typeArgument1 -> . wildcard1
    (85) typeArgumentList -> . typeArgument
    (86) typeArgumentList -> . typeArgumentList COMMA typeArgument
    (91) referenceType1 -> . referenceType MORE
    (92) referenceType1 -> . classOrInterface LESS typeArgumentList2
    (108) wildcard1 -> . QUES MORE
    (109) wildcard1 -> . QUES wildcardBounds1
    (83) typeArgument -> . referenceType
    (84) typeArgument -> . wildcard
    (44) referenceType -> . classOrInterfaceType
    (45) referenceType -> . arrayType
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (104) wildcard -> . QUES
    (105) wildcard -> . QUES wildcardBounds
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (54) arrayType -> . genericType arrays
    (55) arrayType -> . genericType DOT name arrays
    (56) arrayType -> . primitiveType arrays
    (57) arrayType -> . name arrays
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    MORE            shift and go to state 587
    QUES            shift and go to state 515
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    Identifier      shift and go to state 68

    wildcard1                      shift and go to state 508
    primitiveType                  shift and go to state 504
    name                           shift and go to state 512
    simpleName                     shift and go to state 66
    classOrInterfaceType           shift and go to state 272
    typeArgument1                  shift and go to state 513
    qualifiedName                  shift and go to state 64
    arrayType                      shift and go to state 269
    typeArgumentList1              shift and go to state 509
    classOrInterface               shift and go to state 514
    typeArgument                   shift and go to state 510
    typeArgumentList               shift and go to state 507
    wildcard                       shift and go to state 516
    referenceType1                 shift and go to state 511
    genericType                    shift and go to state 505
    referenceType                  shift and go to state 506

state 357

    (148) interfaceTypeList -> interfaceTypeList COMMA . interfaceType
    (53) interfaceType -> . classOrInterfaceType
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    Identifier      shift and go to state 68

    classOrInterface               shift and go to state 122
    qualifiedName                  shift and go to state 64
    name                           shift and go to state 123
    classOrInterfaceType           shift and go to state 124
    simpleName                     shift and go to state 66
    interfaceType                  shift and go to state 588
    genericType                    shift and go to state 127

state 358

    (49) classOrInterface -> genericType DOT . name
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    Identifier      shift and go to state 68

    simpleName                     shift and go to state 66
    qualifiedName                  shift and go to state 64
    name                           shift and go to state 589

state 359

    (245) annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .

    SEMI            reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    AT              reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    PUBLIC          reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    PROTECTED       reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    PRIVATE         reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    STATIC          reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    ABSTRACT        reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    FINAL           reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    NATIVE          reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    SYNCHRONIZED    reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    TRANSIENT       reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    VOLATILE        reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    STRICTFP        reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    INTERFACE       reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    ENUM            reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    CLASS           reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    $end            reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    BLPAREN         reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    Identifier      reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    LESS            reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    BOOLEAN         reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    VOID            reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    BYTE            reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    SHORT           reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    INT             reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    LONG            reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    CHAR            reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    FLOAT           reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    DOUBLE          reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    BRPAREN         reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    IF              reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    WHILE           reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    FOR             reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    ASSERT          reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    SWITCH          reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    DO              reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    BREAK           reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    CONTINUE        reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    RETURN          reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    THROW           reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    TRY             reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    THIS            reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    SUPER           reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    OP_INC          reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    OP_DEC          reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    NEW             reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    LPAREN          reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    CharacterLiteral reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    StringLiteral   reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    NULL            reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    LONG_NUMBER     reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    LONG_HEX_NUMBER reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    NON_INTEGER_1   reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    NON_INTEGER_2   reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    NON_INTEGER_3   reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    NON_INTEGER_4   reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    NON_INTEGER_5   reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    NON_INTEGER_6   reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    TRUE            reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    FALSE           reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    CASE            reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)
    DEFAULT         reduce using rule 245 (annotationTypeBody -> BLPAREN annotationTypeMemberDeclarations_opt BRPAREN .)


state 360

    (257) annotationMethodHeadName -> modifiers_opt typeParameters . type Identifier LPAREN
    (163) constructorName -> modifiers_opt typeParameters . Identifier LPAREN
    (33) type -> . primitiveType
    (34) type -> . referenceType
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (44) referenceType -> . classOrInterfaceType
    (45) referenceType -> . arrayType
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (54) arrayType -> . genericType arrays
    (55) arrayType -> . genericType DOT name arrays
    (56) arrayType -> . primitiveType arrays
    (57) arrayType -> . name arrays
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    Identifier      shift and go to state 492
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182

    qualifiedName                  shift and go to state 64
    genericType                    shift and go to state 271
    classOrInterfaceType           shift and go to state 272
    primitiveType                  shift and go to state 277
    classOrInterface               shift and go to state 122
    simpleName                     shift and go to state 66
    arrayType                      shift and go to state 269
    type                           shift and go to state 590
    referenceType                  shift and go to state 273
    name                           shift and go to state 276

state 361

    (258) annotationMethodHeadName -> modifiers_opt type . Identifier LPAREN
    (181) fieldDeclaration -> modifiers_opt type . variableDeclarators SEMI
    (297) variableDeclarators -> . variableDeclarator
    (298) variableDeclarators -> . variableDeclarators COMMA variableDeclarator
    (299) variableDeclarator -> . variableDeclaratorId
    (300) variableDeclarator -> . variableDeclaratorId ASS variableInitializer
    (301) variableDeclaratorId -> . Identifier arrays_opt

    Identifier      shift and go to state 591

    variableDeclarators            shift and go to state 495
    variableDeclaratorId           shift and go to state 496
    variableDeclarator             shift and go to state 498

state 362

    (249) annotationTypeMemberDeclarations -> annotationTypeMemberDeclarations annotationTypeMemberDeclaration .

    SEMI            reduce using rule 249 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclarations annotationTypeMemberDeclaration .)
    AT              reduce using rule 249 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclarations annotationTypeMemberDeclaration .)
    PUBLIC          reduce using rule 249 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclarations annotationTypeMemberDeclaration .)
    PROTECTED       reduce using rule 249 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclarations annotationTypeMemberDeclaration .)
    PRIVATE         reduce using rule 249 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclarations annotationTypeMemberDeclaration .)
    STATIC          reduce using rule 249 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclarations annotationTypeMemberDeclaration .)
    ABSTRACT        reduce using rule 249 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclarations annotationTypeMemberDeclaration .)
    FINAL           reduce using rule 249 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclarations annotationTypeMemberDeclaration .)
    NATIVE          reduce using rule 249 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclarations annotationTypeMemberDeclaration .)
    SYNCHRONIZED    reduce using rule 249 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclarations annotationTypeMemberDeclaration .)
    TRANSIENT       reduce using rule 249 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclarations annotationTypeMemberDeclaration .)
    VOLATILE        reduce using rule 249 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclarations annotationTypeMemberDeclaration .)
    STRICTFP        reduce using rule 249 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclarations annotationTypeMemberDeclaration .)
    Identifier      reduce using rule 249 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclarations annotationTypeMemberDeclaration .)
    INTERFACE       reduce using rule 249 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclarations annotationTypeMemberDeclaration .)
    ENUM            reduce using rule 249 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclarations annotationTypeMemberDeclaration .)
    CLASS           reduce using rule 249 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclarations annotationTypeMemberDeclaration .)
    LESS            reduce using rule 249 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclarations annotationTypeMemberDeclaration .)
    BOOLEAN         reduce using rule 249 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclarations annotationTypeMemberDeclaration .)
    VOID            reduce using rule 249 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclarations annotationTypeMemberDeclaration .)
    BYTE            reduce using rule 249 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclarations annotationTypeMemberDeclaration .)
    SHORT           reduce using rule 249 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclarations annotationTypeMemberDeclaration .)
    INT             reduce using rule 249 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclarations annotationTypeMemberDeclaration .)
    LONG            reduce using rule 249 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclarations annotationTypeMemberDeclaration .)
    CHAR            reduce using rule 249 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclarations annotationTypeMemberDeclaration .)
    FLOAT           reduce using rule 249 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclarations annotationTypeMemberDeclaration .)
    DOUBLE          reduce using rule 249 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclarations annotationTypeMemberDeclaration .)
    BRPAREN         reduce using rule 249 (annotationTypeMemberDeclarations -> annotationTypeMemberDeclarations annotationTypeMemberDeclaration .)


state 363

    (254) annotationMethodHead -> annotationMethodHeadName formalParameterList_opt . RPAREN methodHeadExtendedDims annotationMethodHeadDefaultValue_opt

    RPAREN          shift and go to state 592


state 364

    (250) annotationTypeMemberDeclaration -> annotationMethodHead SEMI .

    SEMI            reduce using rule 250 (annotationTypeMemberDeclaration -> annotationMethodHead SEMI .)
    AT              reduce using rule 250 (annotationTypeMemberDeclaration -> annotationMethodHead SEMI .)
    PUBLIC          reduce using rule 250 (annotationTypeMemberDeclaration -> annotationMethodHead SEMI .)
    PROTECTED       reduce using rule 250 (annotationTypeMemberDeclaration -> annotationMethodHead SEMI .)
    PRIVATE         reduce using rule 250 (annotationTypeMemberDeclaration -> annotationMethodHead SEMI .)
    STATIC          reduce using rule 250 (annotationTypeMemberDeclaration -> annotationMethodHead SEMI .)
    ABSTRACT        reduce using rule 250 (annotationTypeMemberDeclaration -> annotationMethodHead SEMI .)
    FINAL           reduce using rule 250 (annotationTypeMemberDeclaration -> annotationMethodHead SEMI .)
    NATIVE          reduce using rule 250 (annotationTypeMemberDeclaration -> annotationMethodHead SEMI .)
    SYNCHRONIZED    reduce using rule 250 (annotationTypeMemberDeclaration -> annotationMethodHead SEMI .)
    TRANSIENT       reduce using rule 250 (annotationTypeMemberDeclaration -> annotationMethodHead SEMI .)
    VOLATILE        reduce using rule 250 (annotationTypeMemberDeclaration -> annotationMethodHead SEMI .)
    STRICTFP        reduce using rule 250 (annotationTypeMemberDeclaration -> annotationMethodHead SEMI .)
    Identifier      reduce using rule 250 (annotationTypeMemberDeclaration -> annotationMethodHead SEMI .)
    INTERFACE       reduce using rule 250 (annotationTypeMemberDeclaration -> annotationMethodHead SEMI .)
    ENUM            reduce using rule 250 (annotationTypeMemberDeclaration -> annotationMethodHead SEMI .)
    CLASS           reduce using rule 250 (annotationTypeMemberDeclaration -> annotationMethodHead SEMI .)
    LESS            reduce using rule 250 (annotationTypeMemberDeclaration -> annotationMethodHead SEMI .)
    BOOLEAN         reduce using rule 250 (annotationTypeMemberDeclaration -> annotationMethodHead SEMI .)
    VOID            reduce using rule 250 (annotationTypeMemberDeclaration -> annotationMethodHead SEMI .)
    BYTE            reduce using rule 250 (annotationTypeMemberDeclaration -> annotationMethodHead SEMI .)
    SHORT           reduce using rule 250 (annotationTypeMemberDeclaration -> annotationMethodHead SEMI .)
    INT             reduce using rule 250 (annotationTypeMemberDeclaration -> annotationMethodHead SEMI .)
    LONG            reduce using rule 250 (annotationTypeMemberDeclaration -> annotationMethodHead SEMI .)
    CHAR            reduce using rule 250 (annotationTypeMemberDeclaration -> annotationMethodHead SEMI .)
    FLOAT           reduce using rule 250 (annotationTypeMemberDeclaration -> annotationMethodHead SEMI .)
    DOUBLE          reduce using rule 250 (annotationTypeMemberDeclaration -> annotationMethodHead SEMI .)
    BRPAREN         reduce using rule 250 (annotationTypeMemberDeclaration -> annotationMethodHead SEMI .)


state 365

    (32) qualifiedName -> name DOT simpleName .

    DOT             reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    LPAREN          reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    FLPAREN         reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    OP_INC          reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    OP_DEC          reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    MULT            reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    SLASH           reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    PERCENT         reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    PLUS            reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    DASH            reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    OP_SHR          reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    OP_SHL          reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    OP_SHRR         reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    LESS            reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    OP_GE           reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    MORE            reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    OP_LE           reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    INSTANCEOF      reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    OP_EQ           reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    OP_NE           reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    AND             reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    CARET           reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    VERTICAL        reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    OP_LAND         reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    QUES            reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    OP_LOR          reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    RPAREN          reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    SEMI            reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    COMMA           reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    BRPAREN         reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    COLON           reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    FRPAREN         reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    ASS             reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    ASS_ADD         reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    ASS_SUB         reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    ASS_MUL         reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    ASS_DIV         reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    ASS_AND         reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    ASS_OR          reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    ASS_XOR         reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    ASS_MOD         reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    ASS_SHL         reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    ASS_SHRR        reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    ASS_SHR         reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    PACKAGE         reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    AT              reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    PUBLIC          reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    PROTECTED       reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    PRIVATE         reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    STATIC          reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    ABSTRACT        reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    FINAL           reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    NATIVE          reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    SYNCHRONIZED    reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    TRANSIENT       reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    VOLATILE        reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    STRICTFP        reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    INTERFACE       reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    ENUM            reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    CLASS           reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    Identifier      reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    BOOLEAN         reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    VOID            reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    BYTE            reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    SHORT           reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    INT             reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    LONG            reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    CHAR            reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    FLOAT           reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    DOUBLE          reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    IMPLEMENTS      reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    BLPAREN         reduce using rule 32 (qualifiedName -> name DOT simpleName .)
    OP_ARRAY        reduce using rule 32 (qualifiedName -> name DOT simpleName .)


state 366

    (21) typeImportOnDemandDeclaration -> IMPORT name DOT MULT . SEMI

    SEMI            shift and go to state 593


state 367

    (22) singleStaticImportDeclaration -> IMPORT STATIC name SEMI .

    SEMI            reduce using rule 22 (singleStaticImportDeclaration -> IMPORT STATIC name SEMI .)
    IMPORT          reduce using rule 22 (singleStaticImportDeclaration -> IMPORT STATIC name SEMI .)
    AT              reduce using rule 22 (singleStaticImportDeclaration -> IMPORT STATIC name SEMI .)
    PUBLIC          reduce using rule 22 (singleStaticImportDeclaration -> IMPORT STATIC name SEMI .)
    PROTECTED       reduce using rule 22 (singleStaticImportDeclaration -> IMPORT STATIC name SEMI .)
    PRIVATE         reduce using rule 22 (singleStaticImportDeclaration -> IMPORT STATIC name SEMI .)
    STATIC          reduce using rule 22 (singleStaticImportDeclaration -> IMPORT STATIC name SEMI .)
    ABSTRACT        reduce using rule 22 (singleStaticImportDeclaration -> IMPORT STATIC name SEMI .)
    FINAL           reduce using rule 22 (singleStaticImportDeclaration -> IMPORT STATIC name SEMI .)
    NATIVE          reduce using rule 22 (singleStaticImportDeclaration -> IMPORT STATIC name SEMI .)
    SYNCHRONIZED    reduce using rule 22 (singleStaticImportDeclaration -> IMPORT STATIC name SEMI .)
    TRANSIENT       reduce using rule 22 (singleStaticImportDeclaration -> IMPORT STATIC name SEMI .)
    VOLATILE        reduce using rule 22 (singleStaticImportDeclaration -> IMPORT STATIC name SEMI .)
    STRICTFP        reduce using rule 22 (singleStaticImportDeclaration -> IMPORT STATIC name SEMI .)
    INTERFACE       reduce using rule 22 (singleStaticImportDeclaration -> IMPORT STATIC name SEMI .)
    ENUM            reduce using rule 22 (singleStaticImportDeclaration -> IMPORT STATIC name SEMI .)
    CLASS           reduce using rule 22 (singleStaticImportDeclaration -> IMPORT STATIC name SEMI .)
    $end            reduce using rule 22 (singleStaticImportDeclaration -> IMPORT STATIC name SEMI .)


state 368

    (23) staticImportOnDemandDeclaration -> IMPORT STATIC name DOT . MULT SEMI
    (32) qualifiedName -> name DOT . simpleName
    (31) simpleName -> . Identifier

    MULT            shift and go to state 594
    Identifier      shift and go to state 68

    simpleName                     shift and go to state 365

state 369

    (228) enumConstantHeadName -> modifiers_opt Identifier .

    LPAREN          reduce using rule 228 (enumConstantHeadName -> modifiers_opt Identifier .)
    BLPAREN         reduce using rule 228 (enumConstantHeadName -> modifiers_opt Identifier .)
    COMMA           reduce using rule 228 (enumConstantHeadName -> modifiers_opt Identifier .)
    SEMI            reduce using rule 228 (enumConstantHeadName -> modifiers_opt Identifier .)
    BRPAREN         reduce using rule 228 (enumConstantHeadName -> modifiers_opt Identifier .)


state 370

    (238) enumDeclarations -> SEMI classBodyDeclarations_opt .

    BRPAREN         reduce using rule 238 (enumDeclarations -> SEMI classBodyDeclarations_opt .)


state 371

    (222) enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt . BRPAREN

    BRPAREN         shift and go to state 595


state 372

    (221) enumBody -> BLPAREN enumConstants COMMA . enumBodyDeclarations_opt BRPAREN
    (224) enumConstants -> enumConstants COMMA . enumConstant
    (236) enumBodyDeclarations_opt -> . enumDeclarations
    (237) enumBodyDeclarations_opt -> . empty
    (225) enumConstant -> . enumConstantHead classBody
    (226) enumConstant -> . enumConstantHead
    (238) enumDeclarations -> . SEMI classBodyDeclarations_opt
    (631) empty -> .
    (227) enumConstantHead -> . enumConstantHeadName arguments_opt
    (228) enumConstantHeadName -> . modifiers_opt Identifier
    (120) modifiers_opt -> . modifiers
    (121) modifiers_opt -> . empty
    (122) modifiers -> . modifier
    (123) modifiers -> . modifiers modifier
    (124) modifier -> . PUBLIC
    (125) modifier -> . PROTECTED
    (126) modifier -> . PRIVATE
    (127) modifier -> . STATIC
    (128) modifier -> . ABSTRACT
    (129) modifier -> . FINAL
    (130) modifier -> . NATIVE
    (131) modifier -> . SYNCHRONIZED
    (132) modifier -> . TRANSIENT
    (133) modifier -> . VOLATILE
    (134) modifier -> . STRICTFP
    (135) modifier -> . annotation
    (270) annotation -> . normalAnnotation
    (271) annotation -> . markerAnnotation
    (272) annotation -> . singleMemberAnnotation
    (273) normalAnnotation -> . annotationName LPAREN memberValuePairs_opt RPAREN
    (280) markerAnnotation -> . annotationName
    (281) singleMemberAnnotation -> . annotationName LPAREN singleMemberAnnotationMemberValue RPAREN
    (274) annotationName -> . AT name

    SEMI            shift and go to state 150
    BRPAREN         reduce using rule 631 (empty -> .)
    Identifier      reduce using rule 631 (empty -> .)
    PUBLIC          shift and go to state 46
    PROTECTED       shift and go to state 6
    PRIVATE         shift and go to state 14
    STATIC          shift and go to state 7
    ABSTRACT        shift and go to state 5
    FINAL           shift and go to state 11
    NATIVE          shift and go to state 12
    SYNCHRONIZED    shift and go to state 2
    TRANSIENT       shift and go to state 19
    VOLATILE        shift and go to state 43
    STRICTFP        shift and go to state 18
    AT              shift and go to state 155

    markerAnnotation               shift and go to state 9
    modifier                       shift and go to state 45
    enumConstant                   shift and go to state 596
    enumConstantHeadName           shift and go to state 157
    modifiers_opt                  shift and go to state 148
    enumBodyDeclarations_opt       shift and go to state 597
    enumConstantHead               shift and go to state 159
    annotationName                 shift and go to state 40
    singleMemberAnnotation         shift and go to state 8
    normalAnnotation               shift and go to state 24
    enumDeclarations               shift and go to state 154
    modifiers                      shift and go to state 156
    annotation                     shift and go to state 35
    empty                          shift and go to state 153

state 373

    (237) enumBodyDeclarations_opt -> empty .

    BRPAREN         reduce using rule 237 (enumBodyDeclarations_opt -> empty .)


state 374

    (220) enumBody -> BLPAREN COMMA enumBodyDeclarations_opt . BRPAREN

    BRPAREN         shift and go to state 598


state 375

    (229) arguments_opt -> arguments .

    BLPAREN         reduce using rule 229 (arguments_opt -> arguments .)
    COMMA           reduce using rule 229 (arguments_opt -> arguments .)
    SEMI            reduce using rule 229 (arguments_opt -> arguments .)
    BRPAREN         reduce using rule 229 (arguments_opt -> arguments .)


state 376

    (231) arguments -> LPAREN . argumentList_opt RPAREN
    (232) argumentList_opt -> . argumentList
    (233) argumentList_opt -> . empty
    (234) argumentList -> . expression
    (235) argumentList -> . argumentList COMMA expression
    (631) empty -> .
    (456) expression -> . assignmentExpression
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    RPAREN          reduce using rule 631 (empty -> .)
    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    argumentList                   shift and go to state 602
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    argumentList_opt               shift and go to state 599
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    assignmentExpression           shift and go to state 543
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    fieldAccess                    shift and go to state 189
    integerLiteral                 shift and go to state 183
    empty                          shift and go to state 601
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 554
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    unaryExpressionNotPlusMinus    shift and go to state 397
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    expression                     shift and go to state 600
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 377

    (227) enumConstantHead -> enumConstantHeadName arguments_opt .

    BLPAREN         reduce using rule 227 (enumConstantHead -> enumConstantHeadName arguments_opt .)
    COMMA           reduce using rule 227 (enumConstantHead -> enumConstantHeadName arguments_opt .)
    SEMI            reduce using rule 227 (enumConstantHead -> enumConstantHeadName arguments_opt .)
    BRPAREN         reduce using rule 227 (enumConstantHead -> enumConstantHeadName arguments_opt .)


state 378

    (230) arguments_opt -> empty .

    BLPAREN         reduce using rule 230 (arguments_opt -> empty .)
    COMMA           reduce using rule 230 (arguments_opt -> empty .)
    SEMI            reduce using rule 230 (arguments_opt -> empty .)
    BRPAREN         reduce using rule 230 (arguments_opt -> empty .)


state 379

    (219) enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .

    SEMI            reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    AT              reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    PUBLIC          reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    PROTECTED       reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    PRIVATE         reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    STATIC          reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    ABSTRACT        reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    FINAL           reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    NATIVE          reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    SYNCHRONIZED    reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    TRANSIENT       reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    VOLATILE        reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    STRICTFP        reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    INTERFACE       reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    ENUM            reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    CLASS           reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    $end            reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    BLPAREN         reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    Identifier      reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    LESS            reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    BOOLEAN         reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    VOID            reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    BYTE            reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    SHORT           reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    INT             reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    LONG            reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    CHAR            reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    FLOAT           reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    DOUBLE          reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    BRPAREN         reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    IF              reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    WHILE           reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    FOR             reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    ASSERT          reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    SWITCH          reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    DO              reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    BREAK           reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    CONTINUE        reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    RETURN          reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    THROW           reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    TRY             reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    THIS            reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    SUPER           reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    OP_INC          reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    OP_DEC          reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    NEW             reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    LPAREN          reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    CharacterLiteral reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    StringLiteral   reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    NULL            reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    LONG_NUMBER     reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    LONG_HEX_NUMBER reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    NON_INTEGER_1   reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    NON_INTEGER_2   reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    NON_INTEGER_3   reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    NON_INTEGER_4   reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    NON_INTEGER_5   reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    NON_INTEGER_6   reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    TRUE            reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    FALSE           reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    CASE            reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)
    DEFAULT         reduce using rule 219 (enumBody -> BLPAREN enumBodyDeclarations_opt BRPAREN .)


state 380

    (225) enumConstant -> enumConstantHead classBody .

    COMMA           reduce using rule 225 (enumConstant -> enumConstantHead classBody .)
    SEMI            reduce using rule 225 (enumConstant -> enumConstantHead classBody .)
    BRPAREN         reduce using rule 225 (enumConstant -> enumConstantHead classBody .)


state 381

    (75) typeParameterList1 -> typeParameterList COMMA . typeParameter1
    (67) typeParameterList -> typeParameterList COMMA . typeParameter
    (76) typeParameter1 -> . typeParametersHeaderName MORE
    (77) typeParameter1 -> . typeParametersHeaderName EXTENDS referenceType1
    (78) typeParameter1 -> . typeParametersHeaderName EXTENDS referenceType additionalBoundList1
    (68) typeParameter -> . typeParametersHeaderName
    (69) typeParameter -> . typeParametersHeaderName EXTENDS referenceType
    (70) typeParameter -> . typeParametersHeaderName EXTENDS referenceType additionalBoundList
    (64) typeParametersHeaderName -> . Identifier

    Identifier      shift and go to state 163

    typeParameter                  shift and go to state 603
    typeParameter1                 shift and go to state 604
    typeParametersHeaderName       shift and go to state 165

state 382

    (77) typeParameter1 -> typeParametersHeaderName EXTENDS . referenceType1
    (78) typeParameter1 -> typeParametersHeaderName EXTENDS . referenceType additionalBoundList1
    (69) typeParameter -> typeParametersHeaderName EXTENDS . referenceType
    (70) typeParameter -> typeParametersHeaderName EXTENDS . referenceType additionalBoundList
    (91) referenceType1 -> . referenceType MORE
    (92) referenceType1 -> . classOrInterface LESS typeArgumentList2
    (44) referenceType -> . classOrInterfaceType
    (45) referenceType -> . arrayType
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (54) arrayType -> . genericType arrays
    (55) arrayType -> . genericType DOT name arrays
    (56) arrayType -> . primitiveType arrays
    (57) arrayType -> . name arrays
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    Identifier      shift and go to state 68

    qualifiedName                  shift and go to state 64
    primitiveType                  shift and go to state 504
    name                           shift and go to state 512
    classOrInterfaceType           shift and go to state 272
    arrayType                      shift and go to state 269
    classOrInterface               shift and go to state 514
    simpleName                     shift and go to state 66
    referenceType                  shift and go to state 605
    genericType                    shift and go to state 505
    referenceType1                 shift and go to state 606

state 383

    (76) typeParameter1 -> typeParametersHeaderName MORE .

    EXTENDS         reduce using rule 76 (typeParameter1 -> typeParametersHeaderName MORE .)
    IMPLEMENTS      reduce using rule 76 (typeParameter1 -> typeParametersHeaderName MORE .)
    BLPAREN         reduce using rule 76 (typeParameter1 -> typeParametersHeaderName MORE .)
    Identifier      reduce using rule 76 (typeParameter1 -> typeParametersHeaderName MORE .)
    BOOLEAN         reduce using rule 76 (typeParameter1 -> typeParametersHeaderName MORE .)
    VOID            reduce using rule 76 (typeParameter1 -> typeParametersHeaderName MORE .)
    BYTE            reduce using rule 76 (typeParameter1 -> typeParametersHeaderName MORE .)
    SHORT           reduce using rule 76 (typeParameter1 -> typeParametersHeaderName MORE .)
    INT             reduce using rule 76 (typeParameter1 -> typeParametersHeaderName MORE .)
    LONG            reduce using rule 76 (typeParameter1 -> typeParametersHeaderName MORE .)
    CHAR            reduce using rule 76 (typeParameter1 -> typeParametersHeaderName MORE .)
    FLOAT           reduce using rule 76 (typeParameter1 -> typeParametersHeaderName MORE .)
    DOUBLE          reduce using rule 76 (typeParameter1 -> typeParametersHeaderName MORE .)


state 384

    (241) annotationTypeDeclarationHeadName -> modifiers AT INTERFACE Identifier .
    (242) annotationTypeDeclarationHeadName -> modifiers AT INTERFACE Identifier . typeParameters
    (65) typeParameters -> . LESS typeParameterList1

    EXTENDS         reduce using rule 241 (annotationTypeDeclarationHeadName -> modifiers AT INTERFACE Identifier .)
    IMPLEMENTS      reduce using rule 241 (annotationTypeDeclarationHeadName -> modifiers AT INTERFACE Identifier .)
    BLPAREN         reduce using rule 241 (annotationTypeDeclarationHeadName -> modifiers AT INTERFACE Identifier .)
    LESS            shift and go to state 83

    typeParameters                 shift and go to state 607

state 385

    (577) unaryExpressionNotPlusMinus -> EXCLAMATION . unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    primary                        shift and go to state 386
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 608
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    name                           shift and go to state 393
    postfixExpression              shift and go to state 394
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 386

    (584) postfixExpression -> primary .
    (438) classInstanceCreationExpression -> primary . DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> primary . DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> primary . DOT Identifier
    (342) methodInvocation -> primary . DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> primary . DOT Identifier LPAREN argumentList_opt RPAREN

    OP_INC          reduce using rule 584 (postfixExpression -> primary .)
    OP_DEC          reduce using rule 584 (postfixExpression -> primary .)
    MULT            reduce using rule 584 (postfixExpression -> primary .)
    SLASH           reduce using rule 584 (postfixExpression -> primary .)
    PERCENT         reduce using rule 584 (postfixExpression -> primary .)
    PLUS            reduce using rule 584 (postfixExpression -> primary .)
    DASH            reduce using rule 584 (postfixExpression -> primary .)
    OP_SHR          reduce using rule 584 (postfixExpression -> primary .)
    OP_SHL          reduce using rule 584 (postfixExpression -> primary .)
    OP_SHRR         reduce using rule 584 (postfixExpression -> primary .)
    LESS            reduce using rule 584 (postfixExpression -> primary .)
    OP_GE           reduce using rule 584 (postfixExpression -> primary .)
    MORE            reduce using rule 584 (postfixExpression -> primary .)
    OP_LE           reduce using rule 584 (postfixExpression -> primary .)
    INSTANCEOF      reduce using rule 584 (postfixExpression -> primary .)
    OP_EQ           reduce using rule 584 (postfixExpression -> primary .)
    OP_NE           reduce using rule 584 (postfixExpression -> primary .)
    AND             reduce using rule 584 (postfixExpression -> primary .)
    CARET           reduce using rule 584 (postfixExpression -> primary .)
    VERTICAL        reduce using rule 584 (postfixExpression -> primary .)
    OP_LAND         reduce using rule 584 (postfixExpression -> primary .)
    QUES            reduce using rule 584 (postfixExpression -> primary .)
    OP_LOR          reduce using rule 584 (postfixExpression -> primary .)
    RPAREN          reduce using rule 584 (postfixExpression -> primary .)
    COMMA           reduce using rule 584 (postfixExpression -> primary .)
    BRPAREN         reduce using rule 584 (postfixExpression -> primary .)
    SEMI            reduce using rule 584 (postfixExpression -> primary .)
    ASS             reduce using rule 584 (postfixExpression -> primary .)
    ASS_ADD         reduce using rule 584 (postfixExpression -> primary .)
    ASS_SUB         reduce using rule 584 (postfixExpression -> primary .)
    ASS_MUL         reduce using rule 584 (postfixExpression -> primary .)
    ASS_DIV         reduce using rule 584 (postfixExpression -> primary .)
    ASS_AND         reduce using rule 584 (postfixExpression -> primary .)
    ASS_OR          reduce using rule 584 (postfixExpression -> primary .)
    ASS_XOR         reduce using rule 584 (postfixExpression -> primary .)
    ASS_MOD         reduce using rule 584 (postfixExpression -> primary .)
    ASS_SHL         reduce using rule 584 (postfixExpression -> primary .)
    ASS_SHRR        reduce using rule 584 (postfixExpression -> primary .)
    ASS_SHR         reduce using rule 584 (postfixExpression -> primary .)
    COLON           reduce using rule 584 (postfixExpression -> primary .)
    FRPAREN         reduce using rule 584 (postfixExpression -> primary .)
    DOT             shift and go to state 435


state 387

    (587) postfixExpression -> postDecrementExpression .

    OP_INC          reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    OP_DEC          reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    MULT            reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    SLASH           reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    PERCENT         reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    PLUS            reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    DASH            reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    OP_SHR          reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    OP_SHL          reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    OP_SHRR         reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    LESS            reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    OP_GE           reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    MORE            reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    OP_LE           reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    INSTANCEOF      reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    OP_EQ           reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    OP_NE           reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    AND             reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    CARET           reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    VERTICAL        reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    OP_LAND         reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    QUES            reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    OP_LOR          reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    RPAREN          reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    COMMA           reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    BRPAREN         reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    SEMI            reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    ASS             reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    ASS_ADD         reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    ASS_SUB         reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    ASS_MUL         reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    ASS_DIV         reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    ASS_AND         reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    ASS_OR          reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    ASS_XOR         reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    ASS_MOD         reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    ASS_SHL         reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    ASS_SHRR        reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    ASS_SHR         reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    COLON           reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    FRPAREN         reduce using rule 587 (postfixExpression -> postDecrementExpression .)


state 388

    (562) unaryExpression -> preIncrementExpression .

    MULT            reduce using rule 562 (unaryExpression -> preIncrementExpression .)
    SLASH           reduce using rule 562 (unaryExpression -> preIncrementExpression .)
    PERCENT         reduce using rule 562 (unaryExpression -> preIncrementExpression .)
    PLUS            reduce using rule 562 (unaryExpression -> preIncrementExpression .)
    DASH            reduce using rule 562 (unaryExpression -> preIncrementExpression .)
    OP_SHR          reduce using rule 562 (unaryExpression -> preIncrementExpression .)
    OP_SHL          reduce using rule 562 (unaryExpression -> preIncrementExpression .)
    OP_SHRR         reduce using rule 562 (unaryExpression -> preIncrementExpression .)
    LESS            reduce using rule 562 (unaryExpression -> preIncrementExpression .)
    OP_GE           reduce using rule 562 (unaryExpression -> preIncrementExpression .)
    MORE            reduce using rule 562 (unaryExpression -> preIncrementExpression .)
    OP_LE           reduce using rule 562 (unaryExpression -> preIncrementExpression .)
    INSTANCEOF      reduce using rule 562 (unaryExpression -> preIncrementExpression .)
    OP_EQ           reduce using rule 562 (unaryExpression -> preIncrementExpression .)
    OP_NE           reduce using rule 562 (unaryExpression -> preIncrementExpression .)
    AND             reduce using rule 562 (unaryExpression -> preIncrementExpression .)
    CARET           reduce using rule 562 (unaryExpression -> preIncrementExpression .)
    VERTICAL        reduce using rule 562 (unaryExpression -> preIncrementExpression .)
    OP_LAND         reduce using rule 562 (unaryExpression -> preIncrementExpression .)
    QUES            reduce using rule 562 (unaryExpression -> preIncrementExpression .)
    OP_LOR          reduce using rule 562 (unaryExpression -> preIncrementExpression .)
    RPAREN          reduce using rule 562 (unaryExpression -> preIncrementExpression .)
    COMMA           reduce using rule 562 (unaryExpression -> preIncrementExpression .)
    BRPAREN         reduce using rule 562 (unaryExpression -> preIncrementExpression .)
    SEMI            reduce using rule 562 (unaryExpression -> preIncrementExpression .)
    COLON           reduce using rule 562 (unaryExpression -> preIncrementExpression .)
    FRPAREN         reduce using rule 562 (unaryExpression -> preIncrementExpression .)


state 389

    (564) unaryExpression -> PLUS . unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    primary                        shift and go to state 386
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 609
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    name                           shift and go to state 393
    postfixExpression              shift and go to state 394
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 390

    (576) unaryExpressionNotPlusMinus -> TILDE . unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    primary                        shift and go to state 386
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 610
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    name                           shift and go to state 393
    postfixExpression              shift and go to state 394
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 391

    (581) unaryExpressionNotPlusMinusNotName -> EXCLAMATION unaryExpression .

    MULT            reduce using rule 581 (unaryExpressionNotPlusMinusNotName -> EXCLAMATION unaryExpression .)
    SLASH           reduce using rule 581 (unaryExpressionNotPlusMinusNotName -> EXCLAMATION unaryExpression .)
    PERCENT         reduce using rule 581 (unaryExpressionNotPlusMinusNotName -> EXCLAMATION unaryExpression .)
    PLUS            reduce using rule 581 (unaryExpressionNotPlusMinusNotName -> EXCLAMATION unaryExpression .)
    DASH            reduce using rule 581 (unaryExpressionNotPlusMinusNotName -> EXCLAMATION unaryExpression .)
    OP_SHR          reduce using rule 581 (unaryExpressionNotPlusMinusNotName -> EXCLAMATION unaryExpression .)
    OP_SHL          reduce using rule 581 (unaryExpressionNotPlusMinusNotName -> EXCLAMATION unaryExpression .)
    OP_SHRR         reduce using rule 581 (unaryExpressionNotPlusMinusNotName -> EXCLAMATION unaryExpression .)
    LESS            reduce using rule 581 (unaryExpressionNotPlusMinusNotName -> EXCLAMATION unaryExpression .)
    OP_GE           reduce using rule 581 (unaryExpressionNotPlusMinusNotName -> EXCLAMATION unaryExpression .)
    MORE            reduce using rule 581 (unaryExpressionNotPlusMinusNotName -> EXCLAMATION unaryExpression .)
    OP_LE           reduce using rule 581 (unaryExpressionNotPlusMinusNotName -> EXCLAMATION unaryExpression .)
    INSTANCEOF      reduce using rule 581 (unaryExpressionNotPlusMinusNotName -> EXCLAMATION unaryExpression .)
    OP_EQ           reduce using rule 581 (unaryExpressionNotPlusMinusNotName -> EXCLAMATION unaryExpression .)
    OP_NE           reduce using rule 581 (unaryExpressionNotPlusMinusNotName -> EXCLAMATION unaryExpression .)
    AND             reduce using rule 581 (unaryExpressionNotPlusMinusNotName -> EXCLAMATION unaryExpression .)
    CARET           reduce using rule 581 (unaryExpressionNotPlusMinusNotName -> EXCLAMATION unaryExpression .)
    VERTICAL        reduce using rule 581 (unaryExpressionNotPlusMinusNotName -> EXCLAMATION unaryExpression .)
    OP_LAND         reduce using rule 581 (unaryExpressionNotPlusMinusNotName -> EXCLAMATION unaryExpression .)
    QUES            reduce using rule 581 (unaryExpressionNotPlusMinusNotName -> EXCLAMATION unaryExpression .)
    OP_LOR          reduce using rule 581 (unaryExpressionNotPlusMinusNotName -> EXCLAMATION unaryExpression .)
    SEMI            reduce using rule 581 (unaryExpressionNotPlusMinusNotName -> EXCLAMATION unaryExpression .)
    COMMA           reduce using rule 581 (unaryExpressionNotPlusMinusNotName -> EXCLAMATION unaryExpression .)
    RPAREN          reduce using rule 581 (unaryExpressionNotPlusMinusNotName -> EXCLAMATION unaryExpression .)
    BRPAREN         reduce using rule 581 (unaryExpressionNotPlusMinusNotName -> EXCLAMATION unaryExpression .)


state 392

    (586) postfixExpression -> postIncrementExpression .

    OP_INC          reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    OP_DEC          reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    MULT            reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    SLASH           reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    PERCENT         reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    PLUS            reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    DASH            reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    OP_SHR          reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    OP_SHL          reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    OP_SHRR         reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    LESS            reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    OP_GE           reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    MORE            reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    OP_LE           reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    INSTANCEOF      reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    OP_EQ           reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    OP_NE           reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    AND             reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    CARET           reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    VERTICAL        reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    OP_LAND         reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    QUES            reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    OP_LOR          reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    RPAREN          reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    COMMA           reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    BRPAREN         reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    SEMI            reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    ASS             reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    ASS_ADD         reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    ASS_SUB         reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    ASS_MUL         reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    ASS_DIV         reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    ASS_AND         reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    ASS_OR          reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    ASS_XOR         reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    ASS_MOD         reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    ASS_SHL         reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    ASS_SHRR        reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    ASS_SHR         reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    COLON           reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    FRPAREN         reduce using rule 586 (postfixExpression -> postIncrementExpression .)


state 393

    (585) postfixExpression -> name .
    (602) primaryNoNewArray -> name . DOT THIS
    (603) primaryNoNewArray -> name . DOT SUPER
    (604) primaryNoNewArray -> name . DOT CLASS
    (605) primaryNoNewArray -> name . arrays DOT CLASS
    (32) qualifiedName -> name . DOT simpleName
    (340) methodInvocation -> name . LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> name . DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> name . FLPAREN expression FRPAREN
    (442) classInstanceCreationExpressionName -> name . DOT
    (59) arrays -> . array_loop
    (60) array_loop -> . array
    (61) array_loop -> . array_loop array
    (58) array -> . FLPAREN FRPAREN

    OP_INC          reduce using rule 585 (postfixExpression -> name .)
    OP_DEC          reduce using rule 585 (postfixExpression -> name .)
    MULT            reduce using rule 585 (postfixExpression -> name .)
    SLASH           reduce using rule 585 (postfixExpression -> name .)
    PERCENT         reduce using rule 585 (postfixExpression -> name .)
    PLUS            reduce using rule 585 (postfixExpression -> name .)
    DASH            reduce using rule 585 (postfixExpression -> name .)
    OP_SHR          reduce using rule 585 (postfixExpression -> name .)
    OP_SHL          reduce using rule 585 (postfixExpression -> name .)
    OP_SHRR         reduce using rule 585 (postfixExpression -> name .)
    LESS            reduce using rule 585 (postfixExpression -> name .)
    OP_GE           reduce using rule 585 (postfixExpression -> name .)
    MORE            reduce using rule 585 (postfixExpression -> name .)
    OP_LE           reduce using rule 585 (postfixExpression -> name .)
    INSTANCEOF      reduce using rule 585 (postfixExpression -> name .)
    OP_EQ           reduce using rule 585 (postfixExpression -> name .)
    OP_NE           reduce using rule 585 (postfixExpression -> name .)
    AND             reduce using rule 585 (postfixExpression -> name .)
    CARET           reduce using rule 585 (postfixExpression -> name .)
    VERTICAL        reduce using rule 585 (postfixExpression -> name .)
    OP_LAND         reduce using rule 585 (postfixExpression -> name .)
    QUES            reduce using rule 585 (postfixExpression -> name .)
    OP_LOR          reduce using rule 585 (postfixExpression -> name .)
    RPAREN          reduce using rule 585 (postfixExpression -> name .)
    COMMA           reduce using rule 585 (postfixExpression -> name .)
    BRPAREN         reduce using rule 585 (postfixExpression -> name .)
    SEMI            reduce using rule 585 (postfixExpression -> name .)
    ASS             reduce using rule 585 (postfixExpression -> name .)
    ASS_ADD         reduce using rule 585 (postfixExpression -> name .)
    ASS_SUB         reduce using rule 585 (postfixExpression -> name .)
    ASS_MUL         reduce using rule 585 (postfixExpression -> name .)
    ASS_DIV         reduce using rule 585 (postfixExpression -> name .)
    ASS_AND         reduce using rule 585 (postfixExpression -> name .)
    ASS_OR          reduce using rule 585 (postfixExpression -> name .)
    ASS_XOR         reduce using rule 585 (postfixExpression -> name .)
    ASS_MOD         reduce using rule 585 (postfixExpression -> name .)
    ASS_SHL         reduce using rule 585 (postfixExpression -> name .)
    ASS_SHRR        reduce using rule 585 (postfixExpression -> name .)
    ASS_SHR         reduce using rule 585 (postfixExpression -> name .)
    COLON           reduce using rule 585 (postfixExpression -> name .)
    FRPAREN         reduce using rule 585 (postfixExpression -> name .)
    DOT             shift and go to state 611
    LPAREN          shift and go to state 404
    FLPAREN         shift and go to state 411

    arrays                         shift and go to state 426
    array_loop                     shift and go to state 413
    array                          shift and go to state 407

state 394

    (578) unaryExpressionNotPlusMinus -> postfixExpression .
    (574) postIncrementExpression -> postfixExpression . OP_INC
    (575) postDecrementExpression -> postfixExpression . OP_DEC

    MULT            reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    SLASH           reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    PERCENT         reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    PLUS            reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    DASH            reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    OP_SHR          reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    OP_SHL          reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    OP_SHRR         reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    LESS            reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    OP_GE           reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    MORE            reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    OP_LE           reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    INSTANCEOF      reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    OP_EQ           reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    OP_NE           reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    AND             reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    CARET           reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    VERTICAL        reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    OP_LAND         reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    QUES            reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    OP_LOR          reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    RPAREN          reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    COMMA           reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    BRPAREN         reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    SEMI            reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    COLON           reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    FRPAREN         reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    OP_INC          shift and go to state 400
    OP_DEC          shift and go to state 401


state 395

    (565) unaryExpression -> DASH . unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    primary                        shift and go to state 386
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 612
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    name                           shift and go to state 393
    postfixExpression              shift and go to state 394
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 396

    (579) unaryExpressionNotPlusMinus -> castExpression .

    MULT            reduce using rule 579 (unaryExpressionNotPlusMinus -> castExpression .)
    SLASH           reduce using rule 579 (unaryExpressionNotPlusMinus -> castExpression .)
    PERCENT         reduce using rule 579 (unaryExpressionNotPlusMinus -> castExpression .)
    PLUS            reduce using rule 579 (unaryExpressionNotPlusMinus -> castExpression .)
    DASH            reduce using rule 579 (unaryExpressionNotPlusMinus -> castExpression .)
    OP_SHR          reduce using rule 579 (unaryExpressionNotPlusMinus -> castExpression .)
    OP_SHL          reduce using rule 579 (unaryExpressionNotPlusMinus -> castExpression .)
    OP_SHRR         reduce using rule 579 (unaryExpressionNotPlusMinus -> castExpression .)
    LESS            reduce using rule 579 (unaryExpressionNotPlusMinus -> castExpression .)
    OP_GE           reduce using rule 579 (unaryExpressionNotPlusMinus -> castExpression .)
    MORE            reduce using rule 579 (unaryExpressionNotPlusMinus -> castExpression .)
    OP_LE           reduce using rule 579 (unaryExpressionNotPlusMinus -> castExpression .)
    INSTANCEOF      reduce using rule 579 (unaryExpressionNotPlusMinus -> castExpression .)
    OP_EQ           reduce using rule 579 (unaryExpressionNotPlusMinus -> castExpression .)
    OP_NE           reduce using rule 579 (unaryExpressionNotPlusMinus -> castExpression .)
    AND             reduce using rule 579 (unaryExpressionNotPlusMinus -> castExpression .)
    CARET           reduce using rule 579 (unaryExpressionNotPlusMinus -> castExpression .)
    VERTICAL        reduce using rule 579 (unaryExpressionNotPlusMinus -> castExpression .)
    OP_LAND         reduce using rule 579 (unaryExpressionNotPlusMinus -> castExpression .)
    QUES            reduce using rule 579 (unaryExpressionNotPlusMinus -> castExpression .)
    OP_LOR          reduce using rule 579 (unaryExpressionNotPlusMinus -> castExpression .)
    SEMI            reduce using rule 579 (unaryExpressionNotPlusMinus -> castExpression .)
    RPAREN          reduce using rule 579 (unaryExpressionNotPlusMinus -> castExpression .)
    COMMA           reduce using rule 579 (unaryExpressionNotPlusMinus -> castExpression .)
    BRPAREN         reduce using rule 579 (unaryExpressionNotPlusMinus -> castExpression .)
    COLON           reduce using rule 579 (unaryExpressionNotPlusMinus -> castExpression .)
    FRPAREN         reduce using rule 579 (unaryExpressionNotPlusMinus -> castExpression .)


state 397

    (566) unaryExpression -> unaryExpressionNotPlusMinus .

    MULT            reduce using rule 566 (unaryExpression -> unaryExpressionNotPlusMinus .)
    SLASH           reduce using rule 566 (unaryExpression -> unaryExpressionNotPlusMinus .)
    PERCENT         reduce using rule 566 (unaryExpression -> unaryExpressionNotPlusMinus .)
    PLUS            reduce using rule 566 (unaryExpression -> unaryExpressionNotPlusMinus .)
    DASH            reduce using rule 566 (unaryExpression -> unaryExpressionNotPlusMinus .)
    OP_SHR          reduce using rule 566 (unaryExpression -> unaryExpressionNotPlusMinus .)
    OP_SHL          reduce using rule 566 (unaryExpression -> unaryExpressionNotPlusMinus .)
    OP_SHRR         reduce using rule 566 (unaryExpression -> unaryExpressionNotPlusMinus .)
    LESS            reduce using rule 566 (unaryExpression -> unaryExpressionNotPlusMinus .)
    OP_GE           reduce using rule 566 (unaryExpression -> unaryExpressionNotPlusMinus .)
    MORE            reduce using rule 566 (unaryExpression -> unaryExpressionNotPlusMinus .)
    OP_LE           reduce using rule 566 (unaryExpression -> unaryExpressionNotPlusMinus .)
    INSTANCEOF      reduce using rule 566 (unaryExpression -> unaryExpressionNotPlusMinus .)
    OP_EQ           reduce using rule 566 (unaryExpression -> unaryExpressionNotPlusMinus .)
    OP_NE           reduce using rule 566 (unaryExpression -> unaryExpressionNotPlusMinus .)
    AND             reduce using rule 566 (unaryExpression -> unaryExpressionNotPlusMinus .)
    CARET           reduce using rule 566 (unaryExpression -> unaryExpressionNotPlusMinus .)
    VERTICAL        reduce using rule 566 (unaryExpression -> unaryExpressionNotPlusMinus .)
    OP_LAND         reduce using rule 566 (unaryExpression -> unaryExpressionNotPlusMinus .)
    QUES            reduce using rule 566 (unaryExpression -> unaryExpressionNotPlusMinus .)
    OP_LOR          reduce using rule 566 (unaryExpression -> unaryExpressionNotPlusMinus .)
    RPAREN          reduce using rule 566 (unaryExpression -> unaryExpressionNotPlusMinus .)
    COMMA           reduce using rule 566 (unaryExpression -> unaryExpressionNotPlusMinus .)
    BRPAREN         reduce using rule 566 (unaryExpression -> unaryExpressionNotPlusMinus .)
    SEMI            reduce using rule 566 (unaryExpression -> unaryExpressionNotPlusMinus .)
    COLON           reduce using rule 566 (unaryExpression -> unaryExpressionNotPlusMinus .)
    FRPAREN         reduce using rule 566 (unaryExpression -> unaryExpressionNotPlusMinus .)


state 398

    (563) unaryExpression -> preDecrementExpression .

    MULT            reduce using rule 563 (unaryExpression -> preDecrementExpression .)
    SLASH           reduce using rule 563 (unaryExpression -> preDecrementExpression .)
    PERCENT         reduce using rule 563 (unaryExpression -> preDecrementExpression .)
    PLUS            reduce using rule 563 (unaryExpression -> preDecrementExpression .)
    DASH            reduce using rule 563 (unaryExpression -> preDecrementExpression .)
    OP_SHR          reduce using rule 563 (unaryExpression -> preDecrementExpression .)
    OP_SHL          reduce using rule 563 (unaryExpression -> preDecrementExpression .)
    OP_SHRR         reduce using rule 563 (unaryExpression -> preDecrementExpression .)
    LESS            reduce using rule 563 (unaryExpression -> preDecrementExpression .)
    OP_GE           reduce using rule 563 (unaryExpression -> preDecrementExpression .)
    MORE            reduce using rule 563 (unaryExpression -> preDecrementExpression .)
    OP_LE           reduce using rule 563 (unaryExpression -> preDecrementExpression .)
    INSTANCEOF      reduce using rule 563 (unaryExpression -> preDecrementExpression .)
    OP_EQ           reduce using rule 563 (unaryExpression -> preDecrementExpression .)
    OP_NE           reduce using rule 563 (unaryExpression -> preDecrementExpression .)
    AND             reduce using rule 563 (unaryExpression -> preDecrementExpression .)
    CARET           reduce using rule 563 (unaryExpression -> preDecrementExpression .)
    VERTICAL        reduce using rule 563 (unaryExpression -> preDecrementExpression .)
    OP_LAND         reduce using rule 563 (unaryExpression -> preDecrementExpression .)
    QUES            reduce using rule 563 (unaryExpression -> preDecrementExpression .)
    OP_LOR          reduce using rule 563 (unaryExpression -> preDecrementExpression .)
    RPAREN          reduce using rule 563 (unaryExpression -> preDecrementExpression .)
    COMMA           reduce using rule 563 (unaryExpression -> preDecrementExpression .)
    BRPAREN         reduce using rule 563 (unaryExpression -> preDecrementExpression .)
    SEMI            reduce using rule 563 (unaryExpression -> preDecrementExpression .)
    COLON           reduce using rule 563 (unaryExpression -> preDecrementExpression .)
    FRPAREN         reduce using rule 563 (unaryExpression -> preDecrementExpression .)


state 399

    (569) unaryExpressionNotName -> PLUS unaryExpression .

    MULT            reduce using rule 569 (unaryExpressionNotName -> PLUS unaryExpression .)
    SLASH           reduce using rule 569 (unaryExpressionNotName -> PLUS unaryExpression .)
    PERCENT         reduce using rule 569 (unaryExpressionNotName -> PLUS unaryExpression .)
    PLUS            reduce using rule 569 (unaryExpressionNotName -> PLUS unaryExpression .)
    DASH            reduce using rule 569 (unaryExpressionNotName -> PLUS unaryExpression .)
    OP_SHR          reduce using rule 569 (unaryExpressionNotName -> PLUS unaryExpression .)
    OP_SHL          reduce using rule 569 (unaryExpressionNotName -> PLUS unaryExpression .)
    OP_SHRR         reduce using rule 569 (unaryExpressionNotName -> PLUS unaryExpression .)
    LESS            reduce using rule 569 (unaryExpressionNotName -> PLUS unaryExpression .)
    OP_GE           reduce using rule 569 (unaryExpressionNotName -> PLUS unaryExpression .)
    MORE            reduce using rule 569 (unaryExpressionNotName -> PLUS unaryExpression .)
    OP_LE           reduce using rule 569 (unaryExpressionNotName -> PLUS unaryExpression .)
    INSTANCEOF      reduce using rule 569 (unaryExpressionNotName -> PLUS unaryExpression .)
    OP_EQ           reduce using rule 569 (unaryExpressionNotName -> PLUS unaryExpression .)
    OP_NE           reduce using rule 569 (unaryExpressionNotName -> PLUS unaryExpression .)
    AND             reduce using rule 569 (unaryExpressionNotName -> PLUS unaryExpression .)
    CARET           reduce using rule 569 (unaryExpressionNotName -> PLUS unaryExpression .)
    VERTICAL        reduce using rule 569 (unaryExpressionNotName -> PLUS unaryExpression .)
    OP_LAND         reduce using rule 569 (unaryExpressionNotName -> PLUS unaryExpression .)
    QUES            reduce using rule 569 (unaryExpressionNotName -> PLUS unaryExpression .)
    OP_LOR          reduce using rule 569 (unaryExpressionNotName -> PLUS unaryExpression .)
    RPAREN          reduce using rule 569 (unaryExpressionNotName -> PLUS unaryExpression .)
    COMMA           reduce using rule 569 (unaryExpressionNotName -> PLUS unaryExpression .)
    BRPAREN         reduce using rule 569 (unaryExpressionNotName -> PLUS unaryExpression .)
    SEMI            reduce using rule 569 (unaryExpressionNotName -> PLUS unaryExpression .)


state 400

    (574) postIncrementExpression -> postfixExpression OP_INC .

    OP_INC          reduce using rule 574 (postIncrementExpression -> postfixExpression OP_INC .)
    OP_DEC          reduce using rule 574 (postIncrementExpression -> postfixExpression OP_INC .)
    MULT            reduce using rule 574 (postIncrementExpression -> postfixExpression OP_INC .)
    SLASH           reduce using rule 574 (postIncrementExpression -> postfixExpression OP_INC .)
    PERCENT         reduce using rule 574 (postIncrementExpression -> postfixExpression OP_INC .)
    PLUS            reduce using rule 574 (postIncrementExpression -> postfixExpression OP_INC .)
    DASH            reduce using rule 574 (postIncrementExpression -> postfixExpression OP_INC .)
    OP_SHR          reduce using rule 574 (postIncrementExpression -> postfixExpression OP_INC .)
    OP_SHL          reduce using rule 574 (postIncrementExpression -> postfixExpression OP_INC .)
    OP_SHRR         reduce using rule 574 (postIncrementExpression -> postfixExpression OP_INC .)
    LESS            reduce using rule 574 (postIncrementExpression -> postfixExpression OP_INC .)
    OP_GE           reduce using rule 574 (postIncrementExpression -> postfixExpression OP_INC .)
    MORE            reduce using rule 574 (postIncrementExpression -> postfixExpression OP_INC .)
    OP_LE           reduce using rule 574 (postIncrementExpression -> postfixExpression OP_INC .)
    INSTANCEOF      reduce using rule 574 (postIncrementExpression -> postfixExpression OP_INC .)
    OP_EQ           reduce using rule 574 (postIncrementExpression -> postfixExpression OP_INC .)
    OP_NE           reduce using rule 574 (postIncrementExpression -> postfixExpression OP_INC .)
    AND             reduce using rule 574 (postIncrementExpression -> postfixExpression OP_INC .)
    CARET           reduce using rule 574 (postIncrementExpression -> postfixExpression OP_INC .)
    VERTICAL        reduce using rule 574 (postIncrementExpression -> postfixExpression OP_INC .)
    OP_LAND         reduce using rule 574 (postIncrementExpression -> postfixExpression OP_INC .)
    QUES            reduce using rule 574 (postIncrementExpression -> postfixExpression OP_INC .)
    OP_LOR          reduce using rule 574 (postIncrementExpression -> postfixExpression OP_INC .)
    RPAREN          reduce using rule 574 (postIncrementExpression -> postfixExpression OP_INC .)
    COMMA           reduce using rule 574 (postIncrementExpression -> postfixExpression OP_INC .)
    BRPAREN         reduce using rule 574 (postIncrementExpression -> postfixExpression OP_INC .)
    SEMI            reduce using rule 574 (postIncrementExpression -> postfixExpression OP_INC .)
    COLON           reduce using rule 574 (postIncrementExpression -> postfixExpression OP_INC .)
    FRPAREN         reduce using rule 574 (postIncrementExpression -> postfixExpression OP_INC .)
    ASS             reduce using rule 574 (postIncrementExpression -> postfixExpression OP_INC .)
    ASS_ADD         reduce using rule 574 (postIncrementExpression -> postfixExpression OP_INC .)
    ASS_SUB         reduce using rule 574 (postIncrementExpression -> postfixExpression OP_INC .)
    ASS_MUL         reduce using rule 574 (postIncrementExpression -> postfixExpression OP_INC .)
    ASS_DIV         reduce using rule 574 (postIncrementExpression -> postfixExpression OP_INC .)
    ASS_AND         reduce using rule 574 (postIncrementExpression -> postfixExpression OP_INC .)
    ASS_OR          reduce using rule 574 (postIncrementExpression -> postfixExpression OP_INC .)
    ASS_XOR         reduce using rule 574 (postIncrementExpression -> postfixExpression OP_INC .)
    ASS_MOD         reduce using rule 574 (postIncrementExpression -> postfixExpression OP_INC .)
    ASS_SHL         reduce using rule 574 (postIncrementExpression -> postfixExpression OP_INC .)
    ASS_SHRR        reduce using rule 574 (postIncrementExpression -> postfixExpression OP_INC .)
    ASS_SHR         reduce using rule 574 (postIncrementExpression -> postfixExpression OP_INC .)


state 401

    (575) postDecrementExpression -> postfixExpression OP_DEC .

    SEMI            reduce using rule 575 (postDecrementExpression -> postfixExpression OP_DEC .)
    OP_INC          reduce using rule 575 (postDecrementExpression -> postfixExpression OP_DEC .)
    OP_DEC          reduce using rule 575 (postDecrementExpression -> postfixExpression OP_DEC .)
    ASS             reduce using rule 575 (postDecrementExpression -> postfixExpression OP_DEC .)
    ASS_ADD         reduce using rule 575 (postDecrementExpression -> postfixExpression OP_DEC .)
    ASS_SUB         reduce using rule 575 (postDecrementExpression -> postfixExpression OP_DEC .)
    ASS_MUL         reduce using rule 575 (postDecrementExpression -> postfixExpression OP_DEC .)
    ASS_DIV         reduce using rule 575 (postDecrementExpression -> postfixExpression OP_DEC .)
    ASS_AND         reduce using rule 575 (postDecrementExpression -> postfixExpression OP_DEC .)
    ASS_OR          reduce using rule 575 (postDecrementExpression -> postfixExpression OP_DEC .)
    ASS_XOR         reduce using rule 575 (postDecrementExpression -> postfixExpression OP_DEC .)
    ASS_MOD         reduce using rule 575 (postDecrementExpression -> postfixExpression OP_DEC .)
    ASS_SHL         reduce using rule 575 (postDecrementExpression -> postfixExpression OP_DEC .)
    ASS_SHRR        reduce using rule 575 (postDecrementExpression -> postfixExpression OP_DEC .)
    ASS_SHR         reduce using rule 575 (postDecrementExpression -> postfixExpression OP_DEC .)
    MULT            reduce using rule 575 (postDecrementExpression -> postfixExpression OP_DEC .)
    SLASH           reduce using rule 575 (postDecrementExpression -> postfixExpression OP_DEC .)
    PERCENT         reduce using rule 575 (postDecrementExpression -> postfixExpression OP_DEC .)
    PLUS            reduce using rule 575 (postDecrementExpression -> postfixExpression OP_DEC .)
    DASH            reduce using rule 575 (postDecrementExpression -> postfixExpression OP_DEC .)
    OP_SHR          reduce using rule 575 (postDecrementExpression -> postfixExpression OP_DEC .)
    OP_SHL          reduce using rule 575 (postDecrementExpression -> postfixExpression OP_DEC .)
    OP_SHRR         reduce using rule 575 (postDecrementExpression -> postfixExpression OP_DEC .)
    LESS            reduce using rule 575 (postDecrementExpression -> postfixExpression OP_DEC .)
    OP_GE           reduce using rule 575 (postDecrementExpression -> postfixExpression OP_DEC .)
    MORE            reduce using rule 575 (postDecrementExpression -> postfixExpression OP_DEC .)
    OP_LE           reduce using rule 575 (postDecrementExpression -> postfixExpression OP_DEC .)
    INSTANCEOF      reduce using rule 575 (postDecrementExpression -> postfixExpression OP_DEC .)
    OP_EQ           reduce using rule 575 (postDecrementExpression -> postfixExpression OP_DEC .)
    OP_NE           reduce using rule 575 (postDecrementExpression -> postfixExpression OP_DEC .)
    AND             reduce using rule 575 (postDecrementExpression -> postfixExpression OP_DEC .)
    CARET           reduce using rule 575 (postDecrementExpression -> postfixExpression OP_DEC .)
    VERTICAL        reduce using rule 575 (postDecrementExpression -> postfixExpression OP_DEC .)
    OP_LAND         reduce using rule 575 (postDecrementExpression -> postfixExpression OP_DEC .)
    QUES            reduce using rule 575 (postDecrementExpression -> postfixExpression OP_DEC .)
    OP_LOR          reduce using rule 575 (postDecrementExpression -> postfixExpression OP_DEC .)
    RPAREN          reduce using rule 575 (postDecrementExpression -> postfixExpression OP_DEC .)
    COMMA           reduce using rule 575 (postDecrementExpression -> postfixExpression OP_DEC .)
    BRPAREN         reduce using rule 575 (postDecrementExpression -> postfixExpression OP_DEC .)
    COLON           reduce using rule 575 (postDecrementExpression -> postfixExpression OP_DEC .)
    FRPAREN         reduce using rule 575 (postDecrementExpression -> postfixExpression OP_DEC .)


state 402

    (448) arrayAccess -> primaryNoNewArray FLPAREN . expression FRPAREN
    (456) expression -> . assignmentExpression
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    assignmentExpression           shift and go to state 543
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    fieldAccess                    shift and go to state 189
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 554
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    unaryExpressionNotPlusMinus    shift and go to state 397
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    expression                     shift and go to state 613
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 403

    (499) exclusiveOrExpressionNotName -> name CARET . andExpression
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    equalityExpression             shift and go to state 546
    qualifiedName                  shift and go to state 64
    multiplicativeExpression       shift and go to state 551
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    postfixExpression              shift and go to state 394
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    arrayAccess                    shift and go to state 234
    castExpression                 shift and go to state 396
    instanceOfExpression           shift and go to state 540
    name                           shift and go to state 393
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 614
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 404

    (340) methodInvocation -> name LPAREN . argumentList_opt RPAREN
    (232) argumentList_opt -> . argumentList
    (233) argumentList_opt -> . empty
    (234) argumentList -> . expression
    (235) argumentList -> . argumentList COMMA expression
    (631) empty -> .
    (456) expression -> . assignmentExpression
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    RPAREN          reduce using rule 631 (empty -> .)
    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    argumentList                   shift and go to state 602
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    argumentList_opt               shift and go to state 615
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    assignmentExpression           shift and go to state 543
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    fieldAccess                    shift and go to state 189
    integerLiteral                 shift and go to state 183
    empty                          shift and go to state 601
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 554
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    unaryExpressionNotPlusMinus    shift and go to state 397
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    expression                     shift and go to state 600
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 405

    (528) relationalExpressionNotName -> name LESS . shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    multiplicativeExpression       shift and go to state 551
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 616
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    castExpression                 shift and go to state 396
    postfixExpression              shift and go to state 394
    name                           shift and go to state 393
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 406

    (489) conditionalAndExpressionNotName -> name OP_LAND . inclusiveOrExpression
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    equalityExpression             shift and go to state 546
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 617
    multiplicativeExpression       shift and go to state 551
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    postfixExpression              shift and go to state 394
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    arrayAccess                    shift and go to state 234
    castExpression                 shift and go to state 396
    instanceOfExpression           shift and go to state 540
    name                           shift and go to state 393
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 407

    (60) array_loop -> array .

    FLPAREN         reduce using rule 60 (array_loop -> array .)
    Identifier      reduce using rule 60 (array_loop -> array .)
    OP_ARRAY        reduce using rule 60 (array_loop -> array .)
    INSTANCEOF      reduce using rule 60 (array_loop -> array .)
    OP_EQ           reduce using rule 60 (array_loop -> array .)
    OP_NE           reduce using rule 60 (array_loop -> array .)
    AND             reduce using rule 60 (array_loop -> array .)
    CARET           reduce using rule 60 (array_loop -> array .)
    VERTICAL        reduce using rule 60 (array_loop -> array .)
    OP_LAND         reduce using rule 60 (array_loop -> array .)
    QUES            reduce using rule 60 (array_loop -> array .)
    OP_LOR          reduce using rule 60 (array_loop -> array .)
    RPAREN          reduce using rule 60 (array_loop -> array .)
    COMMA           reduce using rule 60 (array_loop -> array .)
    BRPAREN         reduce using rule 60 (array_loop -> array .)
    SEMI            reduce using rule 60 (array_loop -> array .)
    COLON           reduce using rule 60 (array_loop -> array .)
    FRPAREN         reduce using rule 60 (array_loop -> array .)
    DEFAULT         reduce using rule 60 (array_loop -> array .)
    DOT             reduce using rule 60 (array_loop -> array .)
    MORE            reduce using rule 60 (array_loop -> array .)
    ASS             reduce using rule 60 (array_loop -> array .)
    OP_SHR          reduce using rule 60 (array_loop -> array .)
    OP_SHRR         reduce using rule 60 (array_loop -> array .)
    THROWS          reduce using rule 60 (array_loop -> array .)
    BLPAREN         reduce using rule 60 (array_loop -> array .)


state 408

    (531) relationalExpressionNotName -> name OP_LE . shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    multiplicativeExpression       shift and go to state 551
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 618
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    castExpression                 shift and go to state 396
    postfixExpression              shift and go to state 394
    name                           shift and go to state 393
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 409

    (32) qualifiedName -> name DOT . simpleName
    (602) primaryNoNewArray -> name DOT . THIS
    (603) primaryNoNewArray -> name DOT . SUPER
    (604) primaryNoNewArray -> name DOT . CLASS
    (341) methodInvocation -> name DOT . typeArguments Identifier LPAREN argumentList_opt RPAREN
    (442) classInstanceCreationExpressionName -> name DOT .
    (31) simpleName -> . Identifier
    (82) typeArguments -> . LESS typeArgumentList1

    THIS            shift and go to state 619
    SUPER           shift and go to state 621
    CLASS           shift and go to state 622
    NEW             reduce using rule 442 (classInstanceCreationExpressionName -> name DOT .)
    Identifier      shift and go to state 68
    LESS            shift and go to state 287

    simpleName                     shift and go to state 365
    typeArguments                  shift and go to state 620

state 410

    (512) equalityExpressionNotName -> name OP_NE . instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    multiplicativeExpression       shift and go to state 551
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    postfixExpression              shift and go to state 394
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    arrayAccess                    shift and go to state 234
    castExpression                 shift and go to state 396
    instanceOfExpression           shift and go to state 623
    name                           shift and go to state 393
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 411

    (447) arrayAccess -> name FLPAREN . expression FRPAREN
    (58) array -> FLPAREN . FRPAREN
    (456) expression -> . assignmentExpression
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    FRPAREN         shift and go to state 625
    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    assignmentExpression           shift and go to state 543
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    fieldAccess                    shift and go to state 189
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 554
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    unaryExpressionNotPlusMinus    shift and go to state 397
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    expression                     shift and go to state 624
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 412

    (484) conditionalOrExpressionNotName -> name OP_LOR . conditionalAndExpression
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    equalityExpression             shift and go to state 546
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    exclusiveOrExpression          shift and go to state 548
    conditionalAndExpression       shift and go to state 626
    shiftExpression                shift and go to state 552
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    postfixExpression              shift and go to state 394
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    primary                        shift and go to state 386
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    arrayAccess                    shift and go to state 234
    castExpression                 shift and go to state 396
    instanceOfExpression           shift and go to state 540
    name                           shift and go to state 393
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 413

    (59) arrays -> array_loop .
    (61) array_loop -> array_loop . array
    (58) array -> . FLPAREN FRPAREN

    RPAREN          reduce using rule 59 (arrays -> array_loop .)
    DOT             reduce using rule 59 (arrays -> array_loop .)
    MORE            reduce using rule 59 (arrays -> array_loop .)
    COMMA           reduce using rule 59 (arrays -> array_loop .)
    Identifier      reduce using rule 59 (arrays -> array_loop .)
    OP_ARRAY        reduce using rule 59 (arrays -> array_loop .)
    INSTANCEOF      reduce using rule 59 (arrays -> array_loop .)
    OP_EQ           reduce using rule 59 (arrays -> array_loop .)
    OP_NE           reduce using rule 59 (arrays -> array_loop .)
    AND             reduce using rule 59 (arrays -> array_loop .)
    CARET           reduce using rule 59 (arrays -> array_loop .)
    VERTICAL        reduce using rule 59 (arrays -> array_loop .)
    OP_LAND         reduce using rule 59 (arrays -> array_loop .)
    QUES            reduce using rule 59 (arrays -> array_loop .)
    OP_LOR          reduce using rule 59 (arrays -> array_loop .)
    BRPAREN         reduce using rule 59 (arrays -> array_loop .)
    SEMI            reduce using rule 59 (arrays -> array_loop .)
    COLON           reduce using rule 59 (arrays -> array_loop .)
    FRPAREN         reduce using rule 59 (arrays -> array_loop .)
    ASS             reduce using rule 59 (arrays -> array_loop .)
    OP_SHR          reduce using rule 59 (arrays -> array_loop .)
    OP_SHRR         reduce using rule 59 (arrays -> array_loop .)
    THROWS          reduce using rule 59 (arrays -> array_loop .)
    BLPAREN         reduce using rule 59 (arrays -> array_loop .)
    DEFAULT         reduce using rule 59 (arrays -> array_loop .)
    FLPAREN         shift and go to state 451

    array                          shift and go to state 627

state 414

    (559) multiplicativeExpressionNotName -> name MULT . unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    primary                        shift and go to state 386
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 628
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    castExpression                 shift and go to state 396
    postfixExpression              shift and go to state 394
    name                           shift and go to state 393
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 415

    (549) additiveExpressionNotName -> name PLUS . multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    multiplicativeExpression       shift and go to state 629
    primary                        shift and go to state 386
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    castExpression                 shift and go to state 396
    postfixExpression              shift and go to state 394
    name                           shift and go to state 393
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 416

    (494) inclusiveOrExpressionNotName -> name VERTICAL . exclusiveOrExpression
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    equalityExpression             shift and go to state 546
    qualifiedName                  shift and go to state 64
    multiplicativeExpression       shift and go to state 551
    exclusiveOrExpression          shift and go to state 630
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    postfixExpression              shift and go to state 394
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    arrayAccess                    shift and go to state 234
    castExpression                 shift and go to state 396
    instanceOfExpression           shift and go to state 540
    name                           shift and go to state 393
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 417

    (561) multiplicativeExpressionNotName -> name PERCENT . unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    primary                        shift and go to state 386
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 631
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    castExpression                 shift and go to state 396
    postfixExpression              shift and go to state 394
    name                           shift and go to state 393
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 418

    (542) shiftExpressionNotName -> name OP_SHRR . additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    multiplicativeExpression       shift and go to state 551
    primary                        shift and go to state 386
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 632
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    castExpression                 shift and go to state 396
    postfixExpression              shift and go to state 394
    name                           shift and go to state 393
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 419

    (540) shiftExpressionNotName -> name OP_SHR . additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    multiplicativeExpression       shift and go to state 551
    primary                        shift and go to state 386
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 633
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    castExpression                 shift and go to state 396
    postfixExpression              shift and go to state 394
    name                           shift and go to state 393
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 420

    (550) additiveExpressionNotName -> name DASH . multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    multiplicativeExpression       shift and go to state 634
    primary                        shift and go to state 386
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    castExpression                 shift and go to state 396
    postfixExpression              shift and go to state 394
    name                           shift and go to state 393
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 421

    (541) shiftExpressionNotName -> name OP_SHL . additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    multiplicativeExpression       shift and go to state 551
    primary                        shift and go to state 386
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 635
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    castExpression                 shift and go to state 396
    postfixExpression              shift and go to state 394
    name                           shift and go to state 393
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 422

    (560) multiplicativeExpressionNotName -> name SLASH . unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    primary                        shift and go to state 386
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 636
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    castExpression                 shift and go to state 396
    postfixExpression              shift and go to state 394
    name                           shift and go to state 393
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 423

    (504) andExpressionNotName -> name AND . equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    equalityExpression             shift and go to state 637
    qualifiedName                  shift and go to state 64
    multiplicativeExpression       shift and go to state 551
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    postfixExpression              shift and go to state 394
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    arrayAccess                    shift and go to state 234
    castExpression                 shift and go to state 396
    instanceOfExpression           shift and go to state 540
    name                           shift and go to state 393
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 424

    (511) equalityExpressionNotName -> name OP_EQ . instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    multiplicativeExpression       shift and go to state 551
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    postfixExpression              shift and go to state 394
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    arrayAccess                    shift and go to state 234
    castExpression                 shift and go to state 396
    instanceOfExpression           shift and go to state 638
    name                           shift and go to state 393
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 425

    (529) relationalExpressionNotName -> name OP_GE . shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    multiplicativeExpression       shift and go to state 551
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 639
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    castExpression                 shift and go to state 396
    postfixExpression              shift and go to state 394
    name                           shift and go to state 393
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 426

    (605) primaryNoNewArray -> name arrays . DOT CLASS

    DOT             shift and go to state 640


state 427

    (479) conditionalExpressionNotName -> name QUES . expression COLON conditionalExpression
    (456) expression -> . assignmentExpression
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    assignmentExpression           shift and go to state 543
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    fieldAccess                    shift and go to state 189
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 554
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    unaryExpressionNotPlusMinus    shift and go to state 397
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    expression                     shift and go to state 641
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 428

    (517) instanceOfExpressionNotName -> name INSTANCEOF . referenceType
    (44) referenceType -> . classOrInterfaceType
    (45) referenceType -> . arrayType
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (54) arrayType -> . genericType arrays
    (55) arrayType -> . genericType DOT name arrays
    (56) arrayType -> . primitiveType arrays
    (57) arrayType -> . name arrays
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    Identifier      shift and go to state 68

    qualifiedName                  shift and go to state 64
    name                           shift and go to state 276
    classOrInterfaceType           shift and go to state 272
    arrayType                      shift and go to state 269
    classOrInterface               shift and go to state 122
    simpleName                     shift and go to state 66
    primitiveType                  shift and go to state 504
    referenceType                  shift and go to state 642
    genericType                    shift and go to state 271

state 429

    (530) relationalExpressionNotName -> name MORE . shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    multiplicativeExpression       shift and go to state 551
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 643
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    castExpression                 shift and go to state 396
    postfixExpression              shift and go to state 394
    name                           shift and go to state 393
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 430

    (440) classInstanceCreationExpression -> classInstanceCreationExpressionName NEW . classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> classInstanceCreationExpressionName NEW . typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (52) classType -> . classOrInterfaceType
    (82) typeArguments -> . LESS typeArgumentList1
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    LESS            shift and go to state 287
    Identifier      shift and go to state 68

    name                           shift and go to state 123
    typeArguments                  shift and go to state 644
    classOrInterfaceType           shift and go to state 129
    qualifiedName                  shift and go to state 64
    classOrInterface               shift and go to state 122
    simpleName                     shift and go to state 66
    classType                      shift and go to state 645
    genericType                    shift and go to state 127

state 431

    (510) equalityExpressionNotName -> equalityExpressionNotName OP_NE . instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    multiplicativeExpression       shift and go to state 551
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    postfixExpression              shift and go to state 394
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    arrayAccess                    shift and go to state 234
    name                           shift and go to state 393
    instanceOfExpression           shift and go to state 646
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 432

    (509) equalityExpressionNotName -> equalityExpressionNotName OP_EQ . instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    multiplicativeExpression       shift and go to state 551
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    postfixExpression              shift and go to state 394
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    arrayAccess                    shift and go to state 234
    name                           shift and go to state 393
    instanceOfExpression           shift and go to state 647
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 433

    (273) normalAnnotation -> annotationName LPAREN memberValuePairs_opt RPAREN .

    PUBLIC          reduce using rule 273 (normalAnnotation -> annotationName LPAREN memberValuePairs_opt RPAREN .)
    PROTECTED       reduce using rule 273 (normalAnnotation -> annotationName LPAREN memberValuePairs_opt RPAREN .)
    PRIVATE         reduce using rule 273 (normalAnnotation -> annotationName LPAREN memberValuePairs_opt RPAREN .)
    STATIC          reduce using rule 273 (normalAnnotation -> annotationName LPAREN memberValuePairs_opt RPAREN .)
    ABSTRACT        reduce using rule 273 (normalAnnotation -> annotationName LPAREN memberValuePairs_opt RPAREN .)
    FINAL           reduce using rule 273 (normalAnnotation -> annotationName LPAREN memberValuePairs_opt RPAREN .)
    NATIVE          reduce using rule 273 (normalAnnotation -> annotationName LPAREN memberValuePairs_opt RPAREN .)
    SYNCHRONIZED    reduce using rule 273 (normalAnnotation -> annotationName LPAREN memberValuePairs_opt RPAREN .)
    TRANSIENT       reduce using rule 273 (normalAnnotation -> annotationName LPAREN memberValuePairs_opt RPAREN .)
    VOLATILE        reduce using rule 273 (normalAnnotation -> annotationName LPAREN memberValuePairs_opt RPAREN .)
    STRICTFP        reduce using rule 273 (normalAnnotation -> annotationName LPAREN memberValuePairs_opt RPAREN .)
    BOOLEAN         reduce using rule 273 (normalAnnotation -> annotationName LPAREN memberValuePairs_opt RPAREN .)
    VOID            reduce using rule 273 (normalAnnotation -> annotationName LPAREN memberValuePairs_opt RPAREN .)
    BYTE            reduce using rule 273 (normalAnnotation -> annotationName LPAREN memberValuePairs_opt RPAREN .)
    SHORT           reduce using rule 273 (normalAnnotation -> annotationName LPAREN memberValuePairs_opt RPAREN .)
    INT             reduce using rule 273 (normalAnnotation -> annotationName LPAREN memberValuePairs_opt RPAREN .)
    LONG            reduce using rule 273 (normalAnnotation -> annotationName LPAREN memberValuePairs_opt RPAREN .)
    CHAR            reduce using rule 273 (normalAnnotation -> annotationName LPAREN memberValuePairs_opt RPAREN .)
    FLOAT           reduce using rule 273 (normalAnnotation -> annotationName LPAREN memberValuePairs_opt RPAREN .)
    DOUBLE          reduce using rule 273 (normalAnnotation -> annotationName LPAREN memberValuePairs_opt RPAREN .)
    AT              reduce using rule 273 (normalAnnotation -> annotationName LPAREN memberValuePairs_opt RPAREN .)
    Identifier      reduce using rule 273 (normalAnnotation -> annotationName LPAREN memberValuePairs_opt RPAREN .)
    COMMA           reduce using rule 273 (normalAnnotation -> annotationName LPAREN memberValuePairs_opt RPAREN .)
    BRPAREN         reduce using rule 273 (normalAnnotation -> annotationName LPAREN memberValuePairs_opt RPAREN .)
    INTERFACE       reduce using rule 273 (normalAnnotation -> annotationName LPAREN memberValuePairs_opt RPAREN .)
    ENUM            reduce using rule 273 (normalAnnotation -> annotationName LPAREN memberValuePairs_opt RPAREN .)
    CLASS           reduce using rule 273 (normalAnnotation -> annotationName LPAREN memberValuePairs_opt RPAREN .)
    LESS            reduce using rule 273 (normalAnnotation -> annotationName LPAREN memberValuePairs_opt RPAREN .)
    PACKAGE         reduce using rule 273 (normalAnnotation -> annotationName LPAREN memberValuePairs_opt RPAREN .)
    SEMI            reduce using rule 273 (normalAnnotation -> annotationName LPAREN memberValuePairs_opt RPAREN .)
    RPAREN          reduce using rule 273 (normalAnnotation -> annotationName LPAREN memberValuePairs_opt RPAREN .)


state 434

    (279) memberValuePair -> Identifier ASS . memberValue
    (260) memberValue -> . conditionalExpressionNotName
    (261) memberValue -> . name
    (262) memberValue -> . annotation
    (263) memberValue -> . memberValueArrayInitializer
    (477) conditionalExpressionNotName -> . conditionalOrExpressionNotName
    (478) conditionalExpressionNotName -> . conditionalOrExpressionNotName QUES expression COLON conditionalExpression
    (479) conditionalExpressionNotName -> . name QUES expression COLON conditionalExpression
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (270) annotation -> . normalAnnotation
    (271) annotation -> . markerAnnotation
    (272) annotation -> . singleMemberAnnotation
    (264) memberValueArrayInitializer -> . BLPAREN memberValues COMMA BRPAREN
    (265) memberValueArrayInitializer -> . BLPAREN memberValues BRPAREN
    (266) memberValueArrayInitializer -> . BLPAREN COMMA BRPAREN
    (267) memberValueArrayInitializer -> . BLPAREN BRPAREN
    (482) conditionalOrExpressionNotName -> . conditionalAndExpressionNotName
    (483) conditionalOrExpressionNotName -> . conditionalOrExpressionNotName OP_LOR conditionalAndExpression
    (484) conditionalOrExpressionNotName -> . name OP_LOR conditionalAndExpression
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (273) normalAnnotation -> . annotationName LPAREN memberValuePairs_opt RPAREN
    (280) markerAnnotation -> . annotationName
    (281) singleMemberAnnotation -> . annotationName LPAREN singleMemberAnnotationMemberValue RPAREN
    (487) conditionalAndExpressionNotName -> . inclusiveOrExpressionNotName
    (488) conditionalAndExpressionNotName -> . conditionalAndExpressionNotName OP_LAND inclusiveOrExpression
    (489) conditionalAndExpressionNotName -> . name OP_LAND inclusiveOrExpression
    (274) annotationName -> . AT name
    (492) inclusiveOrExpressionNotName -> . exclusiveOrExpressionNotName
    (493) inclusiveOrExpressionNotName -> . inclusiveOrExpressionNotName VERTICAL exclusiveOrExpression
    (494) inclusiveOrExpressionNotName -> . name VERTICAL exclusiveOrExpression
    (497) exclusiveOrExpressionNotName -> . andExpressionNotName
    (498) exclusiveOrExpressionNotName -> . exclusiveOrExpressionNotName CARET andExpression
    (499) exclusiveOrExpressionNotName -> . name CARET andExpression
    (502) andExpressionNotName -> . equalityExpressionNotName
    (503) andExpressionNotName -> . andExpressionNotName AND equalityExpression
    (504) andExpressionNotName -> . name AND equalityExpression
    (508) equalityExpressionNotName -> . instanceOfExpressionNotName
    (509) equalityExpressionNotName -> . equalityExpressionNotName OP_EQ instanceOfExpression
    (510) equalityExpressionNotName -> . equalityExpressionNotName OP_NE instanceOfExpression
    (511) equalityExpressionNotName -> . name OP_EQ instanceOfExpression
    (512) equalityExpressionNotName -> . name OP_NE instanceOfExpression
    (515) instanceOfExpressionNotName -> . relationalExpressionNotName
    (516) instanceOfExpressionNotName -> . instanceOfExpressionNotName INSTANCEOF referenceType
    (517) instanceOfExpressionNotName -> . name INSTANCEOF referenceType
    (523) relationalExpressionNotName -> . shiftExpressionNotName
    (524) relationalExpressionNotName -> . relationalExpressionNotName LESS shiftExpression
    (525) relationalExpressionNotName -> . relationalExpressionNotName OP_GE shiftExpression
    (526) relationalExpressionNotName -> . relationalExpressionNotName MORE shiftExpression
    (527) relationalExpressionNotName -> . relationalExpressionNotName OP_LE shiftExpression
    (528) relationalExpressionNotName -> . name LESS shiftExpression
    (529) relationalExpressionNotName -> . name OP_GE shiftExpression
    (530) relationalExpressionNotName -> . name MORE shiftExpression
    (531) relationalExpressionNotName -> . name OP_LE shiftExpression
    (536) shiftExpressionNotName -> . additiveExpressionNotName
    (537) shiftExpressionNotName -> . shiftExpressionNotName OP_SHR additiveExpression
    (538) shiftExpressionNotName -> . shiftExpressionNotName OP_SHL additiveExpression
    (539) shiftExpressionNotName -> . shiftExpressionNotName OP_SHRR additiveExpression
    (540) shiftExpressionNotName -> . name OP_SHR additiveExpression
    (541) shiftExpressionNotName -> . name OP_SHL additiveExpression
    (542) shiftExpressionNotName -> . name OP_SHRR additiveExpression
    (546) additiveExpressionNotName -> . multiplicativeExpressionNotName
    (547) additiveExpressionNotName -> . additiveExpressionNotName PLUS multiplicativeExpression
    (548) additiveExpressionNotName -> . additiveExpressionNotName DASH multiplicativeExpression
    (549) additiveExpressionNotName -> . name PLUS multiplicativeExpression
    (550) additiveExpressionNotName -> . name DASH multiplicativeExpression
    (555) multiplicativeExpressionNotName -> . unaryExpressionNotName
    (556) multiplicativeExpressionNotName -> . multiplicativeExpressionNotName MULT unaryExpression
    (557) multiplicativeExpressionNotName -> . multiplicativeExpressionNotName SLASH unaryExpression
    (558) multiplicativeExpressionNotName -> . multiplicativeExpressionNotName PERCENT unaryExpression
    (559) multiplicativeExpressionNotName -> . name MULT unaryExpression
    (560) multiplicativeExpressionNotName -> . name SLASH unaryExpression
    (561) multiplicativeExpressionNotName -> . name PERCENT unaryExpression
    (567) unaryExpressionNotName -> . preIncrementExpression
    (568) unaryExpressionNotName -> . preDecrementExpression
    (569) unaryExpressionNotName -> . PLUS unaryExpression
    (570) unaryExpressionNotName -> . DASH unaryExpression
    (571) unaryExpressionNotName -> . unaryExpressionNotPlusMinusNotName
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (580) unaryExpressionNotPlusMinusNotName -> . TILDE unaryExpression
    (581) unaryExpressionNotPlusMinusNotName -> . EXCLAMATION unaryExpression
    (582) unaryExpressionNotPlusMinusNotName -> . postfixExpressionNotName
    (583) unaryExpressionNotPlusMinusNotName -> . castExpression
    (588) postfixExpressionNotName -> . primary
    (589) postfixExpressionNotName -> . postIncrementExpression
    (590) postfixExpressionNotName -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    BLPAREN         shift and go to state 243
    Identifier      shift and go to state 68
    AT              shift and go to state 155
    PLUS            shift and go to state 174
    DASH            shift and go to state 240
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 209
    EXCLAMATION     shift and go to state 169
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    multiplicativeExpressionNotName shift and go to state 222
    qualifiedName                  shift and go to state 64
    arrayCreationWithArrayInitializer shift and go to state 227
    arrayAccess                    shift and go to state 234
    unaryExpressionNotName         shift and go to state 229
    inclusiveOrExpressionNotName   shift and go to state 235
    preIncrementExpression         shift and go to state 172
    booleanLiteral                 shift and go to state 173
    conditionalAndExpressionNotName shift and go to state 205
    memberValueArrayInitializer    shift and go to state 206
    markerAnnotation               shift and go to state 9
    unaryExpressionNotPlusMinusNotName shift and go to state 175
    postDecrementExpression        shift and go to state 186
    primaryNoNewArray              shift and go to state 178
    arrayCreationWithoutArrayInitializer shift and go to state 232
    shiftExpressionNotName         shift and go to state 233
    postfixExpressionNotName       shift and go to state 239
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    equalityExpressionNotName      shift and go to state 188
    FloatingPointLiteral           shift and go to state 214
    integerLiteral                 shift and go to state 183
    methodInvocation               shift and go to state 176
    postfixExpression              shift and go to state 177
    memberValue                    shift and go to state 648
    exclusiveOrExpressionNotName   shift and go to state 231
    conditionalExpressionNotName   shift and go to state 213
    fieldAccess                    shift and go to state 189
    conditionalOrExpressionNotName shift and go to state 237
    primary                        shift and go to state 199
    postIncrementExpression        shift and go to state 179
    annotation                     shift and go to state 207
    castExpression                 shift and go to state 241
    additiveExpressionNotName      shift and go to state 212
    name                           shift and go to state 180
    relationalExpressionNotName    shift and go to state 217
    annotationName                 shift and go to state 40
    primitiveType                  shift and go to state 219
    instanceOfExpressionNotName    shift and go to state 220
    singleMemberAnnotation         shift and go to state 8
    andExpressionNotName           shift and go to state 223
    normalAnnotation               shift and go to state 24
    preDecrementExpression         shift and go to state 196
    classInstanceCreationExpressionName shift and go to state 187
    classInstanceCreationExpression shift and go to state 198

state 435

    (438) classInstanceCreationExpression -> primary DOT . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> primary DOT . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> primary DOT . Identifier
    (342) methodInvocation -> primary DOT . typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> primary DOT . Identifier LPAREN argumentList_opt RPAREN
    (82) typeArguments -> . LESS typeArgumentList1

    NEW             shift and go to state 650
    Identifier      shift and go to state 651
    LESS            shift and go to state 287

    typeArguments                  shift and go to state 649

state 436

    (572) preIncrementExpression -> OP_INC unaryExpression .

    MULT            reduce using rule 572 (preIncrementExpression -> OP_INC unaryExpression .)
    SLASH           reduce using rule 572 (preIncrementExpression -> OP_INC unaryExpression .)
    PERCENT         reduce using rule 572 (preIncrementExpression -> OP_INC unaryExpression .)
    PLUS            reduce using rule 572 (preIncrementExpression -> OP_INC unaryExpression .)
    DASH            reduce using rule 572 (preIncrementExpression -> OP_INC unaryExpression .)
    OP_SHR          reduce using rule 572 (preIncrementExpression -> OP_INC unaryExpression .)
    OP_SHL          reduce using rule 572 (preIncrementExpression -> OP_INC unaryExpression .)
    OP_SHRR         reduce using rule 572 (preIncrementExpression -> OP_INC unaryExpression .)
    LESS            reduce using rule 572 (preIncrementExpression -> OP_INC unaryExpression .)
    OP_GE           reduce using rule 572 (preIncrementExpression -> OP_INC unaryExpression .)
    MORE            reduce using rule 572 (preIncrementExpression -> OP_INC unaryExpression .)
    OP_LE           reduce using rule 572 (preIncrementExpression -> OP_INC unaryExpression .)
    INSTANCEOF      reduce using rule 572 (preIncrementExpression -> OP_INC unaryExpression .)
    OP_EQ           reduce using rule 572 (preIncrementExpression -> OP_INC unaryExpression .)
    OP_NE           reduce using rule 572 (preIncrementExpression -> OP_INC unaryExpression .)
    AND             reduce using rule 572 (preIncrementExpression -> OP_INC unaryExpression .)
    CARET           reduce using rule 572 (preIncrementExpression -> OP_INC unaryExpression .)
    VERTICAL        reduce using rule 572 (preIncrementExpression -> OP_INC unaryExpression .)
    OP_LAND         reduce using rule 572 (preIncrementExpression -> OP_INC unaryExpression .)
    QUES            reduce using rule 572 (preIncrementExpression -> OP_INC unaryExpression .)
    OP_LOR          reduce using rule 572 (preIncrementExpression -> OP_INC unaryExpression .)
    RPAREN          reduce using rule 572 (preIncrementExpression -> OP_INC unaryExpression .)
    COMMA           reduce using rule 572 (preIncrementExpression -> OP_INC unaryExpression .)
    BRPAREN         reduce using rule 572 (preIncrementExpression -> OP_INC unaryExpression .)
    SEMI            reduce using rule 572 (preIncrementExpression -> OP_INC unaryExpression .)
    COLON           reduce using rule 572 (preIncrementExpression -> OP_INC unaryExpression .)
    FRPAREN         reduce using rule 572 (preIncrementExpression -> OP_INC unaryExpression .)


state 437

    (573) preDecrementExpression -> OP_DEC unaryExpression .

    MULT            reduce using rule 573 (preDecrementExpression -> OP_DEC unaryExpression .)
    SLASH           reduce using rule 573 (preDecrementExpression -> OP_DEC unaryExpression .)
    PERCENT         reduce using rule 573 (preDecrementExpression -> OP_DEC unaryExpression .)
    PLUS            reduce using rule 573 (preDecrementExpression -> OP_DEC unaryExpression .)
    DASH            reduce using rule 573 (preDecrementExpression -> OP_DEC unaryExpression .)
    OP_SHR          reduce using rule 573 (preDecrementExpression -> OP_DEC unaryExpression .)
    OP_SHL          reduce using rule 573 (preDecrementExpression -> OP_DEC unaryExpression .)
    OP_SHRR         reduce using rule 573 (preDecrementExpression -> OP_DEC unaryExpression .)
    LESS            reduce using rule 573 (preDecrementExpression -> OP_DEC unaryExpression .)
    OP_GE           reduce using rule 573 (preDecrementExpression -> OP_DEC unaryExpression .)
    MORE            reduce using rule 573 (preDecrementExpression -> OP_DEC unaryExpression .)
    OP_LE           reduce using rule 573 (preDecrementExpression -> OP_DEC unaryExpression .)
    INSTANCEOF      reduce using rule 573 (preDecrementExpression -> OP_DEC unaryExpression .)
    OP_EQ           reduce using rule 573 (preDecrementExpression -> OP_DEC unaryExpression .)
    OP_NE           reduce using rule 573 (preDecrementExpression -> OP_DEC unaryExpression .)
    AND             reduce using rule 573 (preDecrementExpression -> OP_DEC unaryExpression .)
    CARET           reduce using rule 573 (preDecrementExpression -> OP_DEC unaryExpression .)
    VERTICAL        reduce using rule 573 (preDecrementExpression -> OP_DEC unaryExpression .)
    OP_LAND         reduce using rule 573 (preDecrementExpression -> OP_DEC unaryExpression .)
    QUES            reduce using rule 573 (preDecrementExpression -> OP_DEC unaryExpression .)
    OP_LOR          reduce using rule 573 (preDecrementExpression -> OP_DEC unaryExpression .)
    COMMA           reduce using rule 573 (preDecrementExpression -> OP_DEC unaryExpression .)
    RPAREN          reduce using rule 573 (preDecrementExpression -> OP_DEC unaryExpression .)
    SEMI            reduce using rule 573 (preDecrementExpression -> OP_DEC unaryExpression .)
    COLON           reduce using rule 573 (preDecrementExpression -> OP_DEC unaryExpression .)
    FRPAREN         reduce using rule 573 (preDecrementExpression -> OP_DEC unaryExpression .)
    BRPAREN         reduce using rule 573 (preDecrementExpression -> OP_DEC unaryExpression .)


state 438

    (436) classInstanceCreationExpression -> NEW typeArguments . classType LPAREN argumentList_opt RPAREN classBody_opt
    (52) classType -> . classOrInterfaceType
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    Identifier      shift and go to state 68

    qualifiedName                  shift and go to state 64
    name                           shift and go to state 123
    classOrInterfaceType           shift and go to state 129
    classOrInterface               shift and go to state 122
    simpleName                     shift and go to state 66
    genericType                    shift and go to state 127
    classType                      shift and go to state 652

state 439

    (451) arrayCreationWithArrayInitializer -> NEW classOrInterfaceType . arrayWithOrWithoutExprs arrayInitializer
    (614) arrayCreationWithoutArrayInitializer -> NEW classOrInterfaceType . arrayWithOrWithoutExprs
    (52) classType -> classOrInterfaceType .
    (452) arrayWithOrWithoutExprs -> . arrayWithOrWithoutExpr
    (453) arrayWithOrWithoutExprs -> . arrayWithOrWithoutExprs arrayWithOrWithoutExpr
    (454) arrayWithOrWithoutExpr -> . FLPAREN expression FRPAREN
    (455) arrayWithOrWithoutExpr -> . FLPAREN FRPAREN

    LPAREN          reduce using rule 52 (classType -> classOrInterfaceType .)
    FLPAREN         shift and go to state 654

    arrayWithOrWithoutExpr         shift and go to state 655
    arrayWithOrWithoutExprs        shift and go to state 653

state 440

    (437) classInstanceCreationExpression -> NEW classType . LPAREN argumentList_opt RPAREN classBody_opt

    LPAREN          shift and go to state 656


state 441

    (450) arrayCreationWithArrayInitializer -> NEW primitiveType . arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> NEW primitiveType . arrayWithOrWithoutExprs
    (452) arrayWithOrWithoutExprs -> . arrayWithOrWithoutExpr
    (453) arrayWithOrWithoutExprs -> . arrayWithOrWithoutExprs arrayWithOrWithoutExpr
    (454) arrayWithOrWithoutExpr -> . FLPAREN expression FRPAREN
    (455) arrayWithOrWithoutExpr -> . FLPAREN FRPAREN

    FLPAREN         shift and go to state 654

    arrayWithOrWithoutExpr         shift and go to state 655
    arrayWithOrWithoutExprs        shift and go to state 657

state 442

    (488) conditionalAndExpressionNotName -> conditionalAndExpressionNotName OP_LAND . inclusiveOrExpression
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    equalityExpression             shift and go to state 546
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 658
    multiplicativeExpression       shift and go to state 551
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    postfixExpression              shift and go to state 394
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    arrayAccess                    shift and go to state 234
    name                           shift and go to state 393
    instanceOfExpression           shift and go to state 540
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 443

    (580) unaryExpressionNotPlusMinusNotName -> TILDE unaryExpression .

    MULT            reduce using rule 580 (unaryExpressionNotPlusMinusNotName -> TILDE unaryExpression .)
    SLASH           reduce using rule 580 (unaryExpressionNotPlusMinusNotName -> TILDE unaryExpression .)
    PERCENT         reduce using rule 580 (unaryExpressionNotPlusMinusNotName -> TILDE unaryExpression .)
    PLUS            reduce using rule 580 (unaryExpressionNotPlusMinusNotName -> TILDE unaryExpression .)
    DASH            reduce using rule 580 (unaryExpressionNotPlusMinusNotName -> TILDE unaryExpression .)
    OP_SHR          reduce using rule 580 (unaryExpressionNotPlusMinusNotName -> TILDE unaryExpression .)
    OP_SHL          reduce using rule 580 (unaryExpressionNotPlusMinusNotName -> TILDE unaryExpression .)
    OP_SHRR         reduce using rule 580 (unaryExpressionNotPlusMinusNotName -> TILDE unaryExpression .)
    LESS            reduce using rule 580 (unaryExpressionNotPlusMinusNotName -> TILDE unaryExpression .)
    OP_GE           reduce using rule 580 (unaryExpressionNotPlusMinusNotName -> TILDE unaryExpression .)
    MORE            reduce using rule 580 (unaryExpressionNotPlusMinusNotName -> TILDE unaryExpression .)
    OP_LE           reduce using rule 580 (unaryExpressionNotPlusMinusNotName -> TILDE unaryExpression .)
    INSTANCEOF      reduce using rule 580 (unaryExpressionNotPlusMinusNotName -> TILDE unaryExpression .)
    OP_EQ           reduce using rule 580 (unaryExpressionNotPlusMinusNotName -> TILDE unaryExpression .)
    OP_NE           reduce using rule 580 (unaryExpressionNotPlusMinusNotName -> TILDE unaryExpression .)
    AND             reduce using rule 580 (unaryExpressionNotPlusMinusNotName -> TILDE unaryExpression .)
    CARET           reduce using rule 580 (unaryExpressionNotPlusMinusNotName -> TILDE unaryExpression .)
    VERTICAL        reduce using rule 580 (unaryExpressionNotPlusMinusNotName -> TILDE unaryExpression .)
    OP_LAND         reduce using rule 580 (unaryExpressionNotPlusMinusNotName -> TILDE unaryExpression .)
    QUES            reduce using rule 580 (unaryExpressionNotPlusMinusNotName -> TILDE unaryExpression .)
    OP_LOR          reduce using rule 580 (unaryExpressionNotPlusMinusNotName -> TILDE unaryExpression .)
    SEMI            reduce using rule 580 (unaryExpressionNotPlusMinusNotName -> TILDE unaryExpression .)
    COMMA           reduce using rule 580 (unaryExpressionNotPlusMinusNotName -> TILDE unaryExpression .)
    RPAREN          reduce using rule 580 (unaryExpressionNotPlusMinusNotName -> TILDE unaryExpression .)
    BRPAREN         reduce using rule 580 (unaryExpressionNotPlusMinusNotName -> TILDE unaryExpression .)


state 444

    (547) additiveExpressionNotName -> additiveExpressionNotName PLUS . multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    multiplicativeExpression       shift and go to state 659
    primary                        shift and go to state 386
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    name                           shift and go to state 393
    postfixExpression              shift and go to state 394
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 445

    (548) additiveExpressionNotName -> additiveExpressionNotName DASH . multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    multiplicativeExpression       shift and go to state 660
    primary                        shift and go to state 386
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    name                           shift and go to state 393
    postfixExpression              shift and go to state 394
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 446

    (524) relationalExpressionNotName -> relationalExpressionNotName LESS . shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    multiplicativeExpression       shift and go to state 551
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 661
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    name                           shift and go to state 393
    postfixExpression              shift and go to state 394
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 447

    (527) relationalExpressionNotName -> relationalExpressionNotName OP_LE . shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    multiplicativeExpression       shift and go to state 551
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 662
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    name                           shift and go to state 393
    postfixExpression              shift and go to state 394
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 448

    (525) relationalExpressionNotName -> relationalExpressionNotName OP_GE . shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    multiplicativeExpression       shift and go to state 551
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 663
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    name                           shift and go to state 393
    postfixExpression              shift and go to state 394
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 449

    (526) relationalExpressionNotName -> relationalExpressionNotName MORE . shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    multiplicativeExpression       shift and go to state 551
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 664
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    name                           shift and go to state 393
    postfixExpression              shift and go to state 394
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 450

    (606) primaryNoNewArray -> primitiveType arrays . DOT CLASS

    DOT             shift and go to state 665


state 451

    (58) array -> FLPAREN . FRPAREN

    FRPAREN         shift and go to state 625


state 452

    (607) primaryNoNewArray -> primitiveType DOT . CLASS

    CLASS           shift and go to state 666


state 453

    (516) instanceOfExpressionNotName -> instanceOfExpressionNotName INSTANCEOF . referenceType
    (44) referenceType -> . classOrInterfaceType
    (45) referenceType -> . arrayType
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (54) arrayType -> . genericType arrays
    (55) arrayType -> . genericType DOT name arrays
    (56) arrayType -> . primitiveType arrays
    (57) arrayType -> . name arrays
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    Identifier      shift and go to state 68

    qualifiedName                  shift and go to state 64
    name                           shift and go to state 276
    simpleName                     shift and go to state 66
    classOrInterfaceType           shift and go to state 272
    arrayType                      shift and go to state 269
    classOrInterface               shift and go to state 122
    primitiveType                  shift and go to state 504
    referenceType                  shift and go to state 667
    genericType                    shift and go to state 271

state 454

    (558) multiplicativeExpressionNotName -> multiplicativeExpressionNotName PERCENT . unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    primary                        shift and go to state 386
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 668
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    name                           shift and go to state 393
    postfixExpression              shift and go to state 394
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 455

    (557) multiplicativeExpressionNotName -> multiplicativeExpressionNotName SLASH . unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    primary                        shift and go to state 386
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 669
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    name                           shift and go to state 393
    postfixExpression              shift and go to state 394
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 456

    (556) multiplicativeExpressionNotName -> multiplicativeExpressionNotName MULT . unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    primary                        shift and go to state 386
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 670
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    name                           shift and go to state 393
    postfixExpression              shift and go to state 394
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 457

    (503) andExpressionNotName -> andExpressionNotName AND . equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    equalityExpression             shift and go to state 671
    qualifiedName                  shift and go to state 64
    multiplicativeExpression       shift and go to state 551
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    postfixExpression              shift and go to state 394
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    arrayAccess                    shift and go to state 234
    name                           shift and go to state 393
    instanceOfExpression           shift and go to state 540
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 458

    (449) arrayAccess -> arrayCreationWithArrayInitializer FLPAREN . expression FRPAREN
    (456) expression -> . assignmentExpression
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    assignmentExpression           shift and go to state 543
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    fieldAccess                    shift and go to state 189
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 554
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    unaryExpressionNotPlusMinus    shift and go to state 397
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    expression                     shift and go to state 672
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 459

    (498) exclusiveOrExpressionNotName -> exclusiveOrExpressionNotName CARET . andExpression
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    equalityExpression             shift and go to state 546
    qualifiedName                  shift and go to state 64
    multiplicativeExpression       shift and go to state 551
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    postfixExpression              shift and go to state 394
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    arrayAccess                    shift and go to state 234
    name                           shift and go to state 393
    instanceOfExpression           shift and go to state 540
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 673
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 460

    (538) shiftExpressionNotName -> shiftExpressionNotName OP_SHL . additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    multiplicativeExpression       shift and go to state 551
    primary                        shift and go to state 386
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 674
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    name                           shift and go to state 393
    postfixExpression              shift and go to state 394
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 461

    (539) shiftExpressionNotName -> shiftExpressionNotName OP_SHRR . additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    multiplicativeExpression       shift and go to state 551
    primary                        shift and go to state 386
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 675
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    name                           shift and go to state 393
    postfixExpression              shift and go to state 394
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 462

    (537) shiftExpressionNotName -> shiftExpressionNotName OP_SHR . additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    multiplicativeExpression       shift and go to state 551
    primary                        shift and go to state 386
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 676
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    name                           shift and go to state 393
    postfixExpression              shift and go to state 394
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 463

    (493) inclusiveOrExpressionNotName -> inclusiveOrExpressionNotName VERTICAL . exclusiveOrExpression
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    equalityExpression             shift and go to state 546
    qualifiedName                  shift and go to state 64
    multiplicativeExpression       shift and go to state 551
    exclusiveOrExpression          shift and go to state 677
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    postfixExpression              shift and go to state 394
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    arrayAccess                    shift and go to state 234
    name                           shift and go to state 393
    instanceOfExpression           shift and go to state 540
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 464

    (483) conditionalOrExpressionNotName -> conditionalOrExpressionNotName OP_LOR . conditionalAndExpression
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    equalityExpression             shift and go to state 546
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    exclusiveOrExpression          shift and go to state 548
    conditionalAndExpression       shift and go to state 678
    shiftExpression                shift and go to state 552
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    postfixExpression              shift and go to state 394
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    primary                        shift and go to state 386
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    arrayAccess                    shift and go to state 234
    name                           shift and go to state 393
    instanceOfExpression           shift and go to state 540
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 465

    (478) conditionalExpressionNotName -> conditionalOrExpressionNotName QUES . expression COLON conditionalExpression
    (456) expression -> . assignmentExpression
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    assignmentExpression           shift and go to state 543
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    fieldAccess                    shift and go to state 189
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 554
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    unaryExpressionNotPlusMinus    shift and go to state 397
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    expression                     shift and go to state 679
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 466

    (586) postfixExpression -> postIncrementExpression .
    (589) postfixExpressionNotName -> postIncrementExpression .

    OP_INC          reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    OP_DEC          reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    ASS             reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    ASS_ADD         reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    ASS_SUB         reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    ASS_MUL         reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    ASS_DIV         reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    ASS_AND         reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    ASS_OR          reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    ASS_XOR         reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    ASS_MOD         reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    ASS_SHL         reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    ASS_SHRR        reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    ASS_SHR         reduce using rule 586 (postfixExpression -> postIncrementExpression .)
    MULT            reduce using rule 589 (postfixExpressionNotName -> postIncrementExpression .)
    SLASH           reduce using rule 589 (postfixExpressionNotName -> postIncrementExpression .)
    PERCENT         reduce using rule 589 (postfixExpressionNotName -> postIncrementExpression .)
    PLUS            reduce using rule 589 (postfixExpressionNotName -> postIncrementExpression .)
    DASH            reduce using rule 589 (postfixExpressionNotName -> postIncrementExpression .)
    OP_SHR          reduce using rule 589 (postfixExpressionNotName -> postIncrementExpression .)
    OP_SHL          reduce using rule 589 (postfixExpressionNotName -> postIncrementExpression .)
    OP_SHRR         reduce using rule 589 (postfixExpressionNotName -> postIncrementExpression .)
    LESS            reduce using rule 589 (postfixExpressionNotName -> postIncrementExpression .)
    OP_GE           reduce using rule 589 (postfixExpressionNotName -> postIncrementExpression .)
    MORE            reduce using rule 589 (postfixExpressionNotName -> postIncrementExpression .)
    OP_LE           reduce using rule 589 (postfixExpressionNotName -> postIncrementExpression .)
    INSTANCEOF      reduce using rule 589 (postfixExpressionNotName -> postIncrementExpression .)
    OP_EQ           reduce using rule 589 (postfixExpressionNotName -> postIncrementExpression .)
    OP_NE           reduce using rule 589 (postfixExpressionNotName -> postIncrementExpression .)
    AND             reduce using rule 589 (postfixExpressionNotName -> postIncrementExpression .)
    CARET           reduce using rule 589 (postfixExpressionNotName -> postIncrementExpression .)
    VERTICAL        reduce using rule 589 (postfixExpressionNotName -> postIncrementExpression .)
    OP_LAND         reduce using rule 589 (postfixExpressionNotName -> postIncrementExpression .)
    QUES            reduce using rule 589 (postfixExpressionNotName -> postIncrementExpression .)
    OP_LOR          reduce using rule 589 (postfixExpressionNotName -> postIncrementExpression .)
    RPAREN          reduce using rule 589 (postfixExpressionNotName -> postIncrementExpression .)


state 467

    (609) castExpression -> LPAREN name . typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> LPAREN name . typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> LPAREN name . RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> LPAREN name . arrays RPAREN unaryExpressionNotPlusMinus
    (600) primaryNoNewArray -> LPAREN name . RPAREN
    (32) qualifiedName -> name . DOT simpleName
    (479) conditionalExpressionNotName -> name . QUES expression COLON conditionalExpression
    (585) postfixExpression -> name .
    (484) conditionalOrExpressionNotName -> name . OP_LOR conditionalAndExpression
    (489) conditionalAndExpressionNotName -> name . OP_LAND inclusiveOrExpression
    (602) primaryNoNewArray -> name . DOT THIS
    (603) primaryNoNewArray -> name . DOT SUPER
    (604) primaryNoNewArray -> name . DOT CLASS
    (605) primaryNoNewArray -> name . arrays DOT CLASS
    (494) inclusiveOrExpressionNotName -> name . VERTICAL exclusiveOrExpression
    (340) methodInvocation -> name . LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> name . DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> name . FLPAREN expression FRPAREN
    (499) exclusiveOrExpressionNotName -> name . CARET andExpression
    (442) classInstanceCreationExpressionName -> name . DOT
    (504) andExpressionNotName -> name . AND equalityExpression
    (511) equalityExpressionNotName -> name . OP_EQ instanceOfExpression
    (512) equalityExpressionNotName -> name . OP_NE instanceOfExpression
    (517) instanceOfExpressionNotName -> name . INSTANCEOF referenceType
    (528) relationalExpressionNotName -> name . LESS shiftExpression
    (529) relationalExpressionNotName -> name . OP_GE shiftExpression
    (530) relationalExpressionNotName -> name . MORE shiftExpression
    (531) relationalExpressionNotName -> name . OP_LE shiftExpression
    (540) shiftExpressionNotName -> name . OP_SHR additiveExpression
    (541) shiftExpressionNotName -> name . OP_SHL additiveExpression
    (542) shiftExpressionNotName -> name . OP_SHRR additiveExpression
    (549) additiveExpressionNotName -> name . PLUS multiplicativeExpression
    (550) additiveExpressionNotName -> name . DASH multiplicativeExpression
    (559) multiplicativeExpressionNotName -> name . MULT unaryExpression
    (560) multiplicativeExpressionNotName -> name . SLASH unaryExpression
    (561) multiplicativeExpressionNotName -> name . PERCENT unaryExpression
    (82) typeArguments -> . LESS typeArgumentList1
    (59) arrays -> . array_loop
    (60) array_loop -> . array
    (61) array_loop -> . array_loop array
    (58) array -> . FLPAREN FRPAREN

    RPAREN          shift and go to state 681
    DOT             shift and go to state 409
    QUES            shift and go to state 427
    OP_INC          reduce using rule 585 (postfixExpression -> name .)
    OP_DEC          reduce using rule 585 (postfixExpression -> name .)
    ASS             reduce using rule 585 (postfixExpression -> name .)
    ASS_ADD         reduce using rule 585 (postfixExpression -> name .)
    ASS_SUB         reduce using rule 585 (postfixExpression -> name .)
    ASS_MUL         reduce using rule 585 (postfixExpression -> name .)
    ASS_DIV         reduce using rule 585 (postfixExpression -> name .)
    ASS_AND         reduce using rule 585 (postfixExpression -> name .)
    ASS_OR          reduce using rule 585 (postfixExpression -> name .)
    ASS_XOR         reduce using rule 585 (postfixExpression -> name .)
    ASS_MOD         reduce using rule 585 (postfixExpression -> name .)
    ASS_SHL         reduce using rule 585 (postfixExpression -> name .)
    ASS_SHRR        reduce using rule 585 (postfixExpression -> name .)
    ASS_SHR         reduce using rule 585 (postfixExpression -> name .)
    OP_LOR          shift and go to state 412
    OP_LAND         shift and go to state 406
    VERTICAL        shift and go to state 416
    LPAREN          shift and go to state 404
    FLPAREN         shift and go to state 411
    CARET           shift and go to state 403
    AND             shift and go to state 423
    OP_EQ           shift and go to state 424
    OP_NE           shift and go to state 410
    INSTANCEOF      shift and go to state 428
    LESS            shift and go to state 680
    OP_GE           shift and go to state 425
    MORE            shift and go to state 429
    OP_LE           shift and go to state 408
    OP_SHR          shift and go to state 419
    OP_SHL          shift and go to state 421
    OP_SHRR         shift and go to state 418
    PLUS            shift and go to state 415
    DASH            shift and go to state 420
    MULT            shift and go to state 414
    SLASH           shift and go to state 422
    PERCENT         shift and go to state 417

    array                          shift and go to state 407
    typeArguments                  shift and go to state 682
    array_loop                     shift and go to state 413
    arrays                         shift and go to state 683

state 468

    (587) postfixExpression -> postDecrementExpression .
    (590) postfixExpressionNotName -> postDecrementExpression .

    OP_INC          reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    OP_DEC          reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    ASS             reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    ASS_ADD         reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    ASS_SUB         reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    ASS_MUL         reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    ASS_DIV         reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    ASS_AND         reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    ASS_OR          reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    ASS_XOR         reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    ASS_MOD         reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    ASS_SHL         reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    ASS_SHRR        reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    ASS_SHR         reduce using rule 587 (postfixExpression -> postDecrementExpression .)
    MULT            reduce using rule 590 (postfixExpressionNotName -> postDecrementExpression .)
    SLASH           reduce using rule 590 (postfixExpressionNotName -> postDecrementExpression .)
    PERCENT         reduce using rule 590 (postfixExpressionNotName -> postDecrementExpression .)
    PLUS            reduce using rule 590 (postfixExpressionNotName -> postDecrementExpression .)
    DASH            reduce using rule 590 (postfixExpressionNotName -> postDecrementExpression .)
    OP_SHR          reduce using rule 590 (postfixExpressionNotName -> postDecrementExpression .)
    OP_SHL          reduce using rule 590 (postfixExpressionNotName -> postDecrementExpression .)
    OP_SHRR         reduce using rule 590 (postfixExpressionNotName -> postDecrementExpression .)
    LESS            reduce using rule 590 (postfixExpressionNotName -> postDecrementExpression .)
    OP_GE           reduce using rule 590 (postfixExpressionNotName -> postDecrementExpression .)
    MORE            reduce using rule 590 (postfixExpressionNotName -> postDecrementExpression .)
    OP_LE           reduce using rule 590 (postfixExpressionNotName -> postDecrementExpression .)
    INSTANCEOF      reduce using rule 590 (postfixExpressionNotName -> postDecrementExpression .)
    OP_EQ           reduce using rule 590 (postfixExpressionNotName -> postDecrementExpression .)
    OP_NE           reduce using rule 590 (postfixExpressionNotName -> postDecrementExpression .)
    AND             reduce using rule 590 (postfixExpressionNotName -> postDecrementExpression .)
    CARET           reduce using rule 590 (postfixExpressionNotName -> postDecrementExpression .)
    VERTICAL        reduce using rule 590 (postfixExpressionNotName -> postDecrementExpression .)
    OP_LAND         reduce using rule 590 (postfixExpressionNotName -> postDecrementExpression .)
    QUES            reduce using rule 590 (postfixExpressionNotName -> postDecrementExpression .)
    OP_LOR          reduce using rule 590 (postfixExpressionNotName -> postDecrementExpression .)
    RPAREN          reduce using rule 590 (postfixExpressionNotName -> postDecrementExpression .)


state 469

    (584) postfixExpression -> primary .
    (438) classInstanceCreationExpression -> primary . DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> primary . DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> primary . DOT Identifier
    (342) methodInvocation -> primary . DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> primary . DOT Identifier LPAREN argumentList_opt RPAREN
    (588) postfixExpressionNotName -> primary .

    OP_INC          reduce using rule 584 (postfixExpression -> primary .)
    OP_DEC          reduce using rule 584 (postfixExpression -> primary .)
    ASS             reduce using rule 584 (postfixExpression -> primary .)
    ASS_ADD         reduce using rule 584 (postfixExpression -> primary .)
    ASS_SUB         reduce using rule 584 (postfixExpression -> primary .)
    ASS_MUL         reduce using rule 584 (postfixExpression -> primary .)
    ASS_DIV         reduce using rule 584 (postfixExpression -> primary .)
    ASS_AND         reduce using rule 584 (postfixExpression -> primary .)
    ASS_OR          reduce using rule 584 (postfixExpression -> primary .)
    ASS_XOR         reduce using rule 584 (postfixExpression -> primary .)
    ASS_MOD         reduce using rule 584 (postfixExpression -> primary .)
    ASS_SHL         reduce using rule 584 (postfixExpression -> primary .)
    ASS_SHRR        reduce using rule 584 (postfixExpression -> primary .)
    ASS_SHR         reduce using rule 584 (postfixExpression -> primary .)
    DOT             shift and go to state 435
    MULT            reduce using rule 588 (postfixExpressionNotName -> primary .)
    SLASH           reduce using rule 588 (postfixExpressionNotName -> primary .)
    PERCENT         reduce using rule 588 (postfixExpressionNotName -> primary .)
    PLUS            reduce using rule 588 (postfixExpressionNotName -> primary .)
    DASH            reduce using rule 588 (postfixExpressionNotName -> primary .)
    OP_SHR          reduce using rule 588 (postfixExpressionNotName -> primary .)
    OP_SHL          reduce using rule 588 (postfixExpressionNotName -> primary .)
    OP_SHRR         reduce using rule 588 (postfixExpressionNotName -> primary .)
    LESS            reduce using rule 588 (postfixExpressionNotName -> primary .)
    OP_GE           reduce using rule 588 (postfixExpressionNotName -> primary .)
    MORE            reduce using rule 588 (postfixExpressionNotName -> primary .)
    OP_LE           reduce using rule 588 (postfixExpressionNotName -> primary .)
    INSTANCEOF      reduce using rule 588 (postfixExpressionNotName -> primary .)
    OP_EQ           reduce using rule 588 (postfixExpressionNotName -> primary .)
    OP_NE           reduce using rule 588 (postfixExpressionNotName -> primary .)
    AND             reduce using rule 588 (postfixExpressionNotName -> primary .)
    CARET           reduce using rule 588 (postfixExpressionNotName -> primary .)
    VERTICAL        reduce using rule 588 (postfixExpressionNotName -> primary .)
    OP_LAND         reduce using rule 588 (postfixExpressionNotName -> primary .)
    QUES            reduce using rule 588 (postfixExpressionNotName -> primary .)
    OP_LOR          reduce using rule 588 (postfixExpressionNotName -> primary .)
    RPAREN          reduce using rule 588 (postfixExpressionNotName -> primary .)


state 470

    (461) assignmentExpressionNotName -> conditionalExpressionNotName .

    RPAREN          reduce using rule 461 (assignmentExpressionNotName -> conditionalExpressionNotName .)


state 471

    (601) primaryNoNewArray -> LPAREN expressionNotName . RPAREN

    RPAREN          shift and go to state 684


state 472

    (608) castExpression -> LPAREN primitiveType . arrays_opt RPAREN unaryExpression
    (606) primaryNoNewArray -> primitiveType . arrays DOT CLASS
    (607) primaryNoNewArray -> primitiveType . DOT CLASS
    (62) arrays_opt -> . arrays
    (63) arrays_opt -> . empty
    (59) arrays -> . array_loop
    (631) empty -> .
    (60) array_loop -> . array
    (61) array_loop -> . array_loop array
    (58) array -> . FLPAREN FRPAREN

    DOT             shift and go to state 452
    RPAREN          reduce using rule 631 (empty -> .)
    FLPAREN         shift and go to state 451

    arrays                         shift and go to state 685
    arrays_opt                     shift and go to state 687
    array_loop                     shift and go to state 413
    array                          shift and go to state 407
    empty                          shift and go to state 686

state 473

    (457) expressionNotName -> assignmentExpressionNotName .

    RPAREN          reduce using rule 457 (expressionNotName -> assignmentExpressionNotName .)


state 474

    (460) assignmentExpressionNotName -> assignment .

    RPAREN          reduce using rule 460 (assignmentExpressionNotName -> assignment .)


state 475

    (600) primaryNoNewArray -> LPAREN . name RPAREN
    (601) primaryNoNewArray -> LPAREN . expressionNotName RPAREN
    (608) castExpression -> LPAREN . primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> LPAREN . name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> LPAREN . name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> LPAREN . name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> LPAREN . name arrays RPAREN unaryExpressionNotPlusMinus
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (457) expressionNotName -> . assignmentExpressionNotName
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (460) assignmentExpressionNotName -> . assignment
    (461) assignmentExpressionNotName -> . conditionalExpressionNotName
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (477) conditionalExpressionNotName -> . conditionalOrExpressionNotName
    (478) conditionalExpressionNotName -> . conditionalOrExpressionNotName QUES expression COLON conditionalExpression
    (479) conditionalExpressionNotName -> . name QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (482) conditionalOrExpressionNotName -> . conditionalAndExpressionNotName
    (483) conditionalOrExpressionNotName -> . conditionalOrExpressionNotName OP_LOR conditionalAndExpression
    (484) conditionalOrExpressionNotName -> . name OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (487) conditionalAndExpressionNotName -> . inclusiveOrExpressionNotName
    (488) conditionalAndExpressionNotName -> . conditionalAndExpressionNotName OP_LAND inclusiveOrExpression
    (489) conditionalAndExpressionNotName -> . name OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (492) inclusiveOrExpressionNotName -> . exclusiveOrExpressionNotName
    (493) inclusiveOrExpressionNotName -> . inclusiveOrExpressionNotName VERTICAL exclusiveOrExpression
    (494) inclusiveOrExpressionNotName -> . name VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (497) exclusiveOrExpressionNotName -> . andExpressionNotName
    (498) exclusiveOrExpressionNotName -> . exclusiveOrExpressionNotName CARET andExpression
    (499) exclusiveOrExpressionNotName -> . name CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (502) andExpressionNotName -> . equalityExpressionNotName
    (503) andExpressionNotName -> . andExpressionNotName AND equalityExpression
    (504) andExpressionNotName -> . name AND equalityExpression
    (508) equalityExpressionNotName -> . instanceOfExpressionNotName
    (509) equalityExpressionNotName -> . equalityExpressionNotName OP_EQ instanceOfExpression
    (510) equalityExpressionNotName -> . equalityExpressionNotName OP_NE instanceOfExpression
    (511) equalityExpressionNotName -> . name OP_EQ instanceOfExpression
    (512) equalityExpressionNotName -> . name OP_NE instanceOfExpression
    (515) instanceOfExpressionNotName -> . relationalExpressionNotName
    (516) instanceOfExpressionNotName -> . instanceOfExpressionNotName INSTANCEOF referenceType
    (517) instanceOfExpressionNotName -> . name INSTANCEOF referenceType
    (523) relationalExpressionNotName -> . shiftExpressionNotName
    (524) relationalExpressionNotName -> . relationalExpressionNotName LESS shiftExpression
    (525) relationalExpressionNotName -> . relationalExpressionNotName OP_GE shiftExpression
    (526) relationalExpressionNotName -> . relationalExpressionNotName MORE shiftExpression
    (527) relationalExpressionNotName -> . relationalExpressionNotName OP_LE shiftExpression
    (528) relationalExpressionNotName -> . name LESS shiftExpression
    (529) relationalExpressionNotName -> . name OP_GE shiftExpression
    (530) relationalExpressionNotName -> . name MORE shiftExpression
    (531) relationalExpressionNotName -> . name OP_LE shiftExpression
    (536) shiftExpressionNotName -> . additiveExpressionNotName
    (537) shiftExpressionNotName -> . shiftExpressionNotName OP_SHR additiveExpression
    (538) shiftExpressionNotName -> . shiftExpressionNotName OP_SHL additiveExpression
    (539) shiftExpressionNotName -> . shiftExpressionNotName OP_SHRR additiveExpression
    (540) shiftExpressionNotName -> . name OP_SHR additiveExpression
    (541) shiftExpressionNotName -> . name OP_SHL additiveExpression
    (542) shiftExpressionNotName -> . name OP_SHRR additiveExpression
    (546) additiveExpressionNotName -> . multiplicativeExpressionNotName
    (547) additiveExpressionNotName -> . additiveExpressionNotName PLUS multiplicativeExpression
    (548) additiveExpressionNotName -> . additiveExpressionNotName DASH multiplicativeExpression
    (549) additiveExpressionNotName -> . name PLUS multiplicativeExpression
    (550) additiveExpressionNotName -> . name DASH multiplicativeExpression
    (555) multiplicativeExpressionNotName -> . unaryExpressionNotName
    (556) multiplicativeExpressionNotName -> . multiplicativeExpressionNotName MULT unaryExpression
    (557) multiplicativeExpressionNotName -> . multiplicativeExpressionNotName SLASH unaryExpression
    (558) multiplicativeExpressionNotName -> . multiplicativeExpressionNotName PERCENT unaryExpression
    (559) multiplicativeExpressionNotName -> . name MULT unaryExpression
    (560) multiplicativeExpressionNotName -> . name SLASH unaryExpression
    (561) multiplicativeExpressionNotName -> . name PERCENT unaryExpression
    (567) unaryExpressionNotName -> . preIncrementExpression
    (568) unaryExpressionNotName -> . preDecrementExpression
    (569) unaryExpressionNotName -> . PLUS unaryExpression
    (570) unaryExpressionNotName -> . DASH unaryExpression
    (571) unaryExpressionNotName -> . unaryExpressionNotPlusMinusNotName
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (580) unaryExpressionNotPlusMinusNotName -> . TILDE unaryExpression
    (581) unaryExpressionNotPlusMinusNotName -> . EXCLAMATION unaryExpression
    (582) unaryExpressionNotPlusMinusNotName -> . postfixExpressionNotName
    (583) unaryExpressionNotPlusMinusNotName -> . castExpression
    (588) postfixExpressionNotName -> . primary
    (589) postfixExpressionNotName -> . postIncrementExpression
    (590) postfixExpressionNotName -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    Identifier      shift and go to state 68
    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 174
    DASH            shift and go to state 240
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 209
    EXCLAMATION     shift and go to state 169

    exclusiveOrExpressionNotName   shift and go to state 231
    qualifiedName                  shift and go to state 64
    fieldAccess                    shift and go to state 189
    multiplicativeExpressionNotName shift and go to state 222
    arrayCreationWithArrayInitializer shift and go to state 227
    postfixExpressionNotName       shift and go to state 239
    primary                        shift and go to state 469
    unaryExpressionNotName         shift and go to state 229
    inclusiveOrExpressionNotName   shift and go to state 235
    preIncrementExpression         shift and go to state 172
    conditionalAndExpressionNotName shift and go to state 205
    unaryExpressionNotPlusMinusNotName shift and go to state 175
    postDecrementExpression        shift and go to state 468
    castExpression                 shift and go to state 241
    arrayCreationWithoutArrayInitializer shift and go to state 232
    shiftExpressionNotName         shift and go to state 233
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    assignmentExpressionNotName    shift and go to state 473
    integerLiteral                 shift and go to state 183
    classInstanceCreationExpressionName shift and go to state 187
    primaryNoNewArray              shift and go to state 178
    conditionalExpressionNotName   shift and go to state 470
    assignment                     shift and go to state 474
    conditionalOrExpressionNotName shift and go to state 237
    FloatingPointLiteral           shift and go to state 214
    postIncrementExpression        shift and go to state 466
    arrayAccess                    shift and go to state 234
    expressionNotName              shift and go to state 471
    postfixExpression              shift and go to state 298
    additiveExpressionNotName      shift and go to state 212
    name                           shift and go to state 688
    relationalExpressionNotName    shift and go to state 217
    primitiveType                  shift and go to state 472
    equalityExpressionNotName      shift and go to state 188
    instanceOfExpressionNotName    shift and go to state 220
    andExpressionNotName           shift and go to state 223
    preDecrementExpression         shift and go to state 196
    classInstanceCreationExpression shift and go to state 198

state 476

    (570) unaryExpressionNotName -> DASH unaryExpression .

    MULT            reduce using rule 570 (unaryExpressionNotName -> DASH unaryExpression .)
    SLASH           reduce using rule 570 (unaryExpressionNotName -> DASH unaryExpression .)
    PERCENT         reduce using rule 570 (unaryExpressionNotName -> DASH unaryExpression .)
    PLUS            reduce using rule 570 (unaryExpressionNotName -> DASH unaryExpression .)
    DASH            reduce using rule 570 (unaryExpressionNotName -> DASH unaryExpression .)
    OP_SHR          reduce using rule 570 (unaryExpressionNotName -> DASH unaryExpression .)
    OP_SHL          reduce using rule 570 (unaryExpressionNotName -> DASH unaryExpression .)
    OP_SHRR         reduce using rule 570 (unaryExpressionNotName -> DASH unaryExpression .)
    LESS            reduce using rule 570 (unaryExpressionNotName -> DASH unaryExpression .)
    OP_GE           reduce using rule 570 (unaryExpressionNotName -> DASH unaryExpression .)
    MORE            reduce using rule 570 (unaryExpressionNotName -> DASH unaryExpression .)
    OP_LE           reduce using rule 570 (unaryExpressionNotName -> DASH unaryExpression .)
    INSTANCEOF      reduce using rule 570 (unaryExpressionNotName -> DASH unaryExpression .)
    OP_EQ           reduce using rule 570 (unaryExpressionNotName -> DASH unaryExpression .)
    OP_NE           reduce using rule 570 (unaryExpressionNotName -> DASH unaryExpression .)
    AND             reduce using rule 570 (unaryExpressionNotName -> DASH unaryExpression .)
    CARET           reduce using rule 570 (unaryExpressionNotName -> DASH unaryExpression .)
    VERTICAL        reduce using rule 570 (unaryExpressionNotName -> DASH unaryExpression .)
    OP_LAND         reduce using rule 570 (unaryExpressionNotName -> DASH unaryExpression .)
    QUES            reduce using rule 570 (unaryExpressionNotName -> DASH unaryExpression .)
    OP_LOR          reduce using rule 570 (unaryExpressionNotName -> DASH unaryExpression .)
    RPAREN          reduce using rule 570 (unaryExpressionNotName -> DASH unaryExpression .)
    COMMA           reduce using rule 570 (unaryExpressionNotName -> DASH unaryExpression .)
    BRPAREN         reduce using rule 570 (unaryExpressionNotName -> DASH unaryExpression .)
    SEMI            reduce using rule 570 (unaryExpressionNotName -> DASH unaryExpression .)


state 477

    (264) memberValueArrayInitializer -> BLPAREN memberValues . COMMA BRPAREN
    (265) memberValueArrayInitializer -> BLPAREN memberValues . BRPAREN
    (269) memberValues -> memberValues . COMMA memberValue

    COMMA           shift and go to state 689
    BRPAREN         shift and go to state 690


state 478

    (268) memberValues -> memberValue .

    COMMA           reduce using rule 268 (memberValues -> memberValue .)
    BRPAREN         reduce using rule 268 (memberValues -> memberValue .)


state 479

    (266) memberValueArrayInitializer -> BLPAREN COMMA . BRPAREN

    BRPAREN         shift and go to state 691


state 480

    (267) memberValueArrayInitializer -> BLPAREN BRPAREN .

    COMMA           reduce using rule 267 (memberValueArrayInitializer -> BLPAREN BRPAREN .)
    BRPAREN         reduce using rule 267 (memberValueArrayInitializer -> BLPAREN BRPAREN .)
    RPAREN          reduce using rule 267 (memberValueArrayInitializer -> BLPAREN BRPAREN .)
    SEMI            reduce using rule 267 (memberValueArrayInitializer -> BLPAREN BRPAREN .)


state 481

    (281) singleMemberAnnotation -> annotationName LPAREN singleMemberAnnotationMemberValue RPAREN .

    AT              reduce using rule 281 (singleMemberAnnotation -> annotationName LPAREN singleMemberAnnotationMemberValue RPAREN .)
    PUBLIC          reduce using rule 281 (singleMemberAnnotation -> annotationName LPAREN singleMemberAnnotationMemberValue RPAREN .)
    PROTECTED       reduce using rule 281 (singleMemberAnnotation -> annotationName LPAREN singleMemberAnnotationMemberValue RPAREN .)
    PRIVATE         reduce using rule 281 (singleMemberAnnotation -> annotationName LPAREN singleMemberAnnotationMemberValue RPAREN .)
    STATIC          reduce using rule 281 (singleMemberAnnotation -> annotationName LPAREN singleMemberAnnotationMemberValue RPAREN .)
    ABSTRACT        reduce using rule 281 (singleMemberAnnotation -> annotationName LPAREN singleMemberAnnotationMemberValue RPAREN .)
    FINAL           reduce using rule 281 (singleMemberAnnotation -> annotationName LPAREN singleMemberAnnotationMemberValue RPAREN .)
    NATIVE          reduce using rule 281 (singleMemberAnnotation -> annotationName LPAREN singleMemberAnnotationMemberValue RPAREN .)
    SYNCHRONIZED    reduce using rule 281 (singleMemberAnnotation -> annotationName LPAREN singleMemberAnnotationMemberValue RPAREN .)
    TRANSIENT       reduce using rule 281 (singleMemberAnnotation -> annotationName LPAREN singleMemberAnnotationMemberValue RPAREN .)
    VOLATILE        reduce using rule 281 (singleMemberAnnotation -> annotationName LPAREN singleMemberAnnotationMemberValue RPAREN .)
    STRICTFP        reduce using rule 281 (singleMemberAnnotation -> annotationName LPAREN singleMemberAnnotationMemberValue RPAREN .)
    BOOLEAN         reduce using rule 281 (singleMemberAnnotation -> annotationName LPAREN singleMemberAnnotationMemberValue RPAREN .)
    VOID            reduce using rule 281 (singleMemberAnnotation -> annotationName LPAREN singleMemberAnnotationMemberValue RPAREN .)
    BYTE            reduce using rule 281 (singleMemberAnnotation -> annotationName LPAREN singleMemberAnnotationMemberValue RPAREN .)
    SHORT           reduce using rule 281 (singleMemberAnnotation -> annotationName LPAREN singleMemberAnnotationMemberValue RPAREN .)
    INT             reduce using rule 281 (singleMemberAnnotation -> annotationName LPAREN singleMemberAnnotationMemberValue RPAREN .)
    LONG            reduce using rule 281 (singleMemberAnnotation -> annotationName LPAREN singleMemberAnnotationMemberValue RPAREN .)
    CHAR            reduce using rule 281 (singleMemberAnnotation -> annotationName LPAREN singleMemberAnnotationMemberValue RPAREN .)
    FLOAT           reduce using rule 281 (singleMemberAnnotation -> annotationName LPAREN singleMemberAnnotationMemberValue RPAREN .)
    DOUBLE          reduce using rule 281 (singleMemberAnnotation -> annotationName LPAREN singleMemberAnnotationMemberValue RPAREN .)
    Identifier      reduce using rule 281 (singleMemberAnnotation -> annotationName LPAREN singleMemberAnnotationMemberValue RPAREN .)
    INTERFACE       reduce using rule 281 (singleMemberAnnotation -> annotationName LPAREN singleMemberAnnotationMemberValue RPAREN .)
    ENUM            reduce using rule 281 (singleMemberAnnotation -> annotationName LPAREN singleMemberAnnotationMemberValue RPAREN .)
    CLASS           reduce using rule 281 (singleMemberAnnotation -> annotationName LPAREN singleMemberAnnotationMemberValue RPAREN .)
    COMMA           reduce using rule 281 (singleMemberAnnotation -> annotationName LPAREN singleMemberAnnotationMemberValue RPAREN .)
    BRPAREN         reduce using rule 281 (singleMemberAnnotation -> annotationName LPAREN singleMemberAnnotationMemberValue RPAREN .)
    LESS            reduce using rule 281 (singleMemberAnnotation -> annotationName LPAREN singleMemberAnnotationMemberValue RPAREN .)
    PACKAGE         reduce using rule 281 (singleMemberAnnotation -> annotationName LPAREN singleMemberAnnotationMemberValue RPAREN .)
    RPAREN          reduce using rule 281 (singleMemberAnnotation -> annotationName LPAREN singleMemberAnnotationMemberValue RPAREN .)
    SEMI            reduce using rule 281 (singleMemberAnnotation -> annotationName LPAREN singleMemberAnnotationMemberValue RPAREN .)


state 482

    (278) memberValuePairs -> memberValuePairs COMMA . memberValuePair
    (279) memberValuePair -> . Identifier ASS memberValue

    Identifier      shift and go to state 693

    memberValuePair                shift and go to state 692

state 483

    (446) fieldAccess -> SUPER DOT . Identifier
    (343) methodInvocation -> SUPER DOT . typeArguments Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> SUPER DOT . Identifier LPAREN argumentList_opt RPAREN
    (82) typeArguments -> . LESS typeArgumentList1

    Identifier      shift and go to state 695
    LESS            shift and go to state 287

    typeArguments                  shift and go to state 694

state 484

    (186) methodName -> modifiers_opt typeParameters . type Identifier LPAREN
    (33) type -> . primitiveType
    (34) type -> . referenceType
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (44) referenceType -> . classOrInterfaceType
    (45) referenceType -> . arrayType
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (54) arrayType -> . genericType arrays
    (55) arrayType -> . genericType DOT name arrays
    (56) arrayType -> . primitiveType arrays
    (57) arrayType -> . name arrays
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    Identifier      shift and go to state 68

    qualifiedName                  shift and go to state 64
    genericType                    shift and go to state 271
    classOrInterfaceType           shift and go to state 272
    primitiveType                  shift and go to state 277
    classOrInterface               shift and go to state 122
    simpleName                     shift and go to state 66
    arrayType                      shift and go to state 269
    type                           shift and go to state 491
    referenceType                  shift and go to state 273
    name                           shift and go to state 276

state 485

    (202) InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .

    SEMI            reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    AT              reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    PUBLIC          reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    PROTECTED       reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    PRIVATE         reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    STATIC          reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    ABSTRACT        reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    FINAL           reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    NATIVE          reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    SYNCHRONIZED    reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    TRANSIENT       reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    VOLATILE        reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    STRICTFP        reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    INTERFACE       reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    ENUM            reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    CLASS           reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    $end            reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    BLPAREN         reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    Identifier      reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    LESS            reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    BOOLEAN         reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    VOID            reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    BYTE            reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    SHORT           reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    INT             reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    LONG            reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    CHAR            reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    FLOAT           reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    DOUBLE          reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    BRPAREN         reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    IF              reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    WHILE           reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    FOR             reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    ASSERT          reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    SWITCH          reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    DO              reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    BREAK           reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    CONTINUE        reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    RETURN          reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    THROW           reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    TRY             reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    THIS            reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    SUPER           reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    OP_INC          reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    OP_DEC          reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    NEW             reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    LPAREN          reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    CharacterLiteral reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    StringLiteral   reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    NULL            reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    LONG_NUMBER     reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    LONG_HEX_NUMBER reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    NON_INTEGER_1   reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    NON_INTEGER_2   reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    NON_INTEGER_3   reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    NON_INTEGER_4   reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    NON_INTEGER_5   reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    NON_INTEGER_6   reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    TRUE            reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    FALSE           reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    CASE            reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)
    DEFAULT         reduce using rule 202 (InterfaceBody -> BLPAREN interfaceMemberDeclarations_opt BRPAREN .)


state 486

    (206) interfaceMemberDeclarations -> interfaceMemberDeclarations interfaceMemberDeclaration .

    SEMI            reduce using rule 206 (interfaceMemberDeclarations -> interfaceMemberDeclarations interfaceMemberDeclaration .)
    AT              reduce using rule 206 (interfaceMemberDeclarations -> interfaceMemberDeclarations interfaceMemberDeclaration .)
    PUBLIC          reduce using rule 206 (interfaceMemberDeclarations -> interfaceMemberDeclarations interfaceMemberDeclaration .)
    PROTECTED       reduce using rule 206 (interfaceMemberDeclarations -> interfaceMemberDeclarations interfaceMemberDeclaration .)
    PRIVATE         reduce using rule 206 (interfaceMemberDeclarations -> interfaceMemberDeclarations interfaceMemberDeclaration .)
    STATIC          reduce using rule 206 (interfaceMemberDeclarations -> interfaceMemberDeclarations interfaceMemberDeclaration .)
    ABSTRACT        reduce using rule 206 (interfaceMemberDeclarations -> interfaceMemberDeclarations interfaceMemberDeclaration .)
    FINAL           reduce using rule 206 (interfaceMemberDeclarations -> interfaceMemberDeclarations interfaceMemberDeclaration .)
    NATIVE          reduce using rule 206 (interfaceMemberDeclarations -> interfaceMemberDeclarations interfaceMemberDeclaration .)
    SYNCHRONIZED    reduce using rule 206 (interfaceMemberDeclarations -> interfaceMemberDeclarations interfaceMemberDeclaration .)
    TRANSIENT       reduce using rule 206 (interfaceMemberDeclarations -> interfaceMemberDeclarations interfaceMemberDeclaration .)
    VOLATILE        reduce using rule 206 (interfaceMemberDeclarations -> interfaceMemberDeclarations interfaceMemberDeclaration .)
    STRICTFP        reduce using rule 206 (interfaceMemberDeclarations -> interfaceMemberDeclarations interfaceMemberDeclaration .)
    INTERFACE       reduce using rule 206 (interfaceMemberDeclarations -> interfaceMemberDeclarations interfaceMemberDeclaration .)
    ENUM            reduce using rule 206 (interfaceMemberDeclarations -> interfaceMemberDeclarations interfaceMemberDeclaration .)
    CLASS           reduce using rule 206 (interfaceMemberDeclarations -> interfaceMemberDeclarations interfaceMemberDeclaration .)
    LESS            reduce using rule 206 (interfaceMemberDeclarations -> interfaceMemberDeclarations interfaceMemberDeclaration .)
    BOOLEAN         reduce using rule 206 (interfaceMemberDeclarations -> interfaceMemberDeclarations interfaceMemberDeclaration .)
    VOID            reduce using rule 206 (interfaceMemberDeclarations -> interfaceMemberDeclarations interfaceMemberDeclaration .)
    BYTE            reduce using rule 206 (interfaceMemberDeclarations -> interfaceMemberDeclarations interfaceMemberDeclaration .)
    SHORT           reduce using rule 206 (interfaceMemberDeclarations -> interfaceMemberDeclarations interfaceMemberDeclaration .)
    INT             reduce using rule 206 (interfaceMemberDeclarations -> interfaceMemberDeclarations interfaceMemberDeclaration .)
    LONG            reduce using rule 206 (interfaceMemberDeclarations -> interfaceMemberDeclarations interfaceMemberDeclaration .)
    CHAR            reduce using rule 206 (interfaceMemberDeclarations -> interfaceMemberDeclarations interfaceMemberDeclaration .)
    FLOAT           reduce using rule 206 (interfaceMemberDeclarations -> interfaceMemberDeclarations interfaceMemberDeclaration .)
    DOUBLE          reduce using rule 206 (interfaceMemberDeclarations -> interfaceMemberDeclarations interfaceMemberDeclaration .)
    Identifier      reduce using rule 206 (interfaceMemberDeclarations -> interfaceMemberDeclarations interfaceMemberDeclaration .)
    BRPAREN         reduce using rule 206 (interfaceMemberDeclarations -> interfaceMemberDeclarations interfaceMemberDeclaration .)


state 487

    (243) annotationTypeDeclarationHeadName -> AT INTERFACE Identifier typeParameters .

    EXTENDS         reduce using rule 243 (annotationTypeDeclarationHeadName -> AT INTERFACE Identifier typeParameters .)
    IMPLEMENTS      reduce using rule 243 (annotationTypeDeclarationHeadName -> AT INTERFACE Identifier typeParameters .)
    BLPAREN         reduce using rule 243 (annotationTypeDeclarationHeadName -> AT INTERFACE Identifier typeParameters .)


state 488

    (169) formalParameter -> modifiers_opt type . variableDeclaratorId
    (170) formalParameter -> modifiers_opt type . OP_ARRAY variableDeclaratorId
    (301) variableDeclaratorId -> . Identifier arrays_opt

    OP_ARRAY        shift and go to state 696
    Identifier      shift and go to state 575

    variableDeclaratorId           shift and go to state 697

state 489

    (185) methodHeader -> methodName formalParameterList_opt RPAREN . methodHeadExtendedDims methodHeadThrowList_opt
    (188) methodHeadExtendedDims -> . arrays_opt
    (62) arrays_opt -> . arrays
    (63) arrays_opt -> . empty
    (59) arrays -> . array_loop
    (631) empty -> .
    (60) array_loop -> . array
    (61) array_loop -> . array_loop array
    (58) array -> . FLPAREN FRPAREN

    THROWS          reduce using rule 631 (empty -> .)
    SEMI            reduce using rule 631 (empty -> .)
    BLPAREN         reduce using rule 631 (empty -> .)
    FLPAREN         shift and go to state 451

    arrays                         shift and go to state 698
    array_loop                     shift and go to state 413
    empty                          shift and go to state 686
    array                          shift and go to state 407
    methodHeadExtendedDims         shift and go to state 699
    arrays_opt                     shift and go to state 700

state 490

    (168) formalParameterList -> formalParameterList COMMA . formalParameter
    (169) formalParameter -> . modifiers_opt type variableDeclaratorId
    (170) formalParameter -> . modifiers_opt type OP_ARRAY variableDeclaratorId
    (120) modifiers_opt -> . modifiers
    (121) modifiers_opt -> . empty
    (122) modifiers -> . modifier
    (123) modifiers -> . modifiers modifier
    (631) empty -> .
    (124) modifier -> . PUBLIC
    (125) modifier -> . PROTECTED
    (126) modifier -> . PRIVATE
    (127) modifier -> . STATIC
    (128) modifier -> . ABSTRACT
    (129) modifier -> . FINAL
    (130) modifier -> . NATIVE
    (131) modifier -> . SYNCHRONIZED
    (132) modifier -> . TRANSIENT
    (133) modifier -> . VOLATILE
    (134) modifier -> . STRICTFP
    (135) modifier -> . annotation
    (270) annotation -> . normalAnnotation
    (271) annotation -> . markerAnnotation
    (272) annotation -> . singleMemberAnnotation
    (273) normalAnnotation -> . annotationName LPAREN memberValuePairs_opt RPAREN
    (280) markerAnnotation -> . annotationName
    (281) singleMemberAnnotation -> . annotationName LPAREN singleMemberAnnotationMemberValue RPAREN
    (274) annotationName -> . AT name

    BOOLEAN         reduce using rule 631 (empty -> .)
    VOID            reduce using rule 631 (empty -> .)
    BYTE            reduce using rule 631 (empty -> .)
    SHORT           reduce using rule 631 (empty -> .)
    INT             reduce using rule 631 (empty -> .)
    LONG            reduce using rule 631 (empty -> .)
    CHAR            reduce using rule 631 (empty -> .)
    FLOAT           reduce using rule 631 (empty -> .)
    DOUBLE          reduce using rule 631 (empty -> .)
    Identifier      reduce using rule 631 (empty -> .)
    PUBLIC          shift and go to state 46
    PROTECTED       shift and go to state 6
    PRIVATE         shift and go to state 14
    STATIC          shift and go to state 7
    ABSTRACT        shift and go to state 5
    FINAL           shift and go to state 11
    NATIVE          shift and go to state 12
    SYNCHRONIZED    shift and go to state 2
    TRANSIENT       shift and go to state 19
    VOLATILE        shift and go to state 43
    STRICTFP        shift and go to state 18
    AT              shift and go to state 155

    markerAnnotation               shift and go to state 9
    modifiers                      shift and go to state 156
    modifiers_opt                  shift and go to state 264
    formalParameter                shift and go to state 701
    annotationName                 shift and go to state 40
    singleMemberAnnotation         shift and go to state 8
    normalAnnotation               shift and go to state 24
    modifier                       shift and go to state 45
    annotation                     shift and go to state 35
    empty                          shift and go to state 74

state 491

    (186) methodName -> modifiers_opt typeParameters type . Identifier LPAREN

    Identifier      shift and go to state 702


state 492

    (163) constructorName -> modifiers_opt typeParameters Identifier . LPAREN
    (31) simpleName -> Identifier .

    LPAREN          shift and go to state 703
    DOT             reduce using rule 31 (simpleName -> Identifier .)
    FLPAREN         reduce using rule 31 (simpleName -> Identifier .)
    LESS            reduce using rule 31 (simpleName -> Identifier .)
    Identifier      reduce using rule 31 (simpleName -> Identifier .)


state 493

    (54) arrayType -> genericType arrays .

    VERTICAL        reduce using rule 54 (arrayType -> genericType arrays .)
    Identifier      reduce using rule 54 (arrayType -> genericType arrays .)
    OP_SHR          reduce using rule 54 (arrayType -> genericType arrays .)
    MORE            reduce using rule 54 (arrayType -> genericType arrays .)
    COMMA           reduce using rule 54 (arrayType -> genericType arrays .)
    OP_SHRR         reduce using rule 54 (arrayType -> genericType arrays .)
    INSTANCEOF      reduce using rule 54 (arrayType -> genericType arrays .)
    OP_EQ           reduce using rule 54 (arrayType -> genericType arrays .)
    OP_NE           reduce using rule 54 (arrayType -> genericType arrays .)
    AND             reduce using rule 54 (arrayType -> genericType arrays .)
    CARET           reduce using rule 54 (arrayType -> genericType arrays .)
    OP_LAND         reduce using rule 54 (arrayType -> genericType arrays .)
    QUES            reduce using rule 54 (arrayType -> genericType arrays .)
    OP_LOR          reduce using rule 54 (arrayType -> genericType arrays .)
    SEMI            reduce using rule 54 (arrayType -> genericType arrays .)
    COLON           reduce using rule 54 (arrayType -> genericType arrays .)
    RPAREN          reduce using rule 54 (arrayType -> genericType arrays .)
    FRPAREN         reduce using rule 54 (arrayType -> genericType arrays .)
    BRPAREN         reduce using rule 54 (arrayType -> genericType arrays .)
    OP_ARRAY        reduce using rule 54 (arrayType -> genericType arrays .)


state 494

    (55) arrayType -> genericType DOT . name arrays
    (49) classOrInterface -> genericType DOT . name
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    Identifier      shift and go to state 68

    simpleName                     shift and go to state 66
    qualifiedName                  shift and go to state 64
    name                           shift and go to state 704

state 495

    (181) fieldDeclaration -> modifiers_opt type variableDeclarators . SEMI
    (298) variableDeclarators -> variableDeclarators . COMMA variableDeclarator

    SEMI            shift and go to state 705
    COMMA           shift and go to state 706


state 496

    (299) variableDeclarator -> variableDeclaratorId .
    (300) variableDeclarator -> variableDeclaratorId . ASS variableInitializer

    SEMI            reduce using rule 299 (variableDeclarator -> variableDeclaratorId .)
    COMMA           reduce using rule 299 (variableDeclarator -> variableDeclaratorId .)
    ASS             shift and go to state 707


state 497

    (187) methodName -> modifiers_opt type Identifier . LPAREN
    (301) variableDeclaratorId -> Identifier . arrays_opt
    (62) arrays_opt -> . arrays
    (63) arrays_opt -> . empty
    (59) arrays -> . array_loop
    (631) empty -> .
    (60) array_loop -> . array
    (61) array_loop -> . array_loop array
    (58) array -> . FLPAREN FRPAREN

    LPAREN          shift and go to state 708
    ASS             reduce using rule 631 (empty -> .)
    SEMI            reduce using rule 631 (empty -> .)
    COMMA           reduce using rule 631 (empty -> .)
    FLPAREN         shift and go to state 451

    arrays                         shift and go to state 698
    array_loop                     shift and go to state 413
    arrays_opt                     shift and go to state 709
    array                          shift and go to state 407
    empty                          shift and go to state 686

state 498

    (297) variableDeclarators -> variableDeclarator .

    COMMA           reduce using rule 297 (variableDeclarators -> variableDeclarator .)
    SEMI            reduce using rule 297 (variableDeclarators -> variableDeclarator .)


state 499

    (164) constructorName -> modifiers_opt Identifier LPAREN .

    PUBLIC          reduce using rule 164 (constructorName -> modifiers_opt Identifier LPAREN .)
    PROTECTED       reduce using rule 164 (constructorName -> modifiers_opt Identifier LPAREN .)
    PRIVATE         reduce using rule 164 (constructorName -> modifiers_opt Identifier LPAREN .)
    STATIC          reduce using rule 164 (constructorName -> modifiers_opt Identifier LPAREN .)
    ABSTRACT        reduce using rule 164 (constructorName -> modifiers_opt Identifier LPAREN .)
    FINAL           reduce using rule 164 (constructorName -> modifiers_opt Identifier LPAREN .)
    NATIVE          reduce using rule 164 (constructorName -> modifiers_opt Identifier LPAREN .)
    SYNCHRONIZED    reduce using rule 164 (constructorName -> modifiers_opt Identifier LPAREN .)
    TRANSIENT       reduce using rule 164 (constructorName -> modifiers_opt Identifier LPAREN .)
    VOLATILE        reduce using rule 164 (constructorName -> modifiers_opt Identifier LPAREN .)
    STRICTFP        reduce using rule 164 (constructorName -> modifiers_opt Identifier LPAREN .)
    AT              reduce using rule 164 (constructorName -> modifiers_opt Identifier LPAREN .)
    RPAREN          reduce using rule 164 (constructorName -> modifiers_opt Identifier LPAREN .)
    BOOLEAN         reduce using rule 164 (constructorName -> modifiers_opt Identifier LPAREN .)
    VOID            reduce using rule 164 (constructorName -> modifiers_opt Identifier LPAREN .)
    BYTE            reduce using rule 164 (constructorName -> modifiers_opt Identifier LPAREN .)
    SHORT           reduce using rule 164 (constructorName -> modifiers_opt Identifier LPAREN .)
    INT             reduce using rule 164 (constructorName -> modifiers_opt Identifier LPAREN .)
    LONG            reduce using rule 164 (constructorName -> modifiers_opt Identifier LPAREN .)
    CHAR            reduce using rule 164 (constructorName -> modifiers_opt Identifier LPAREN .)
    FLOAT           reduce using rule 164 (constructorName -> modifiers_opt Identifier LPAREN .)
    DOUBLE          reduce using rule 164 (constructorName -> modifiers_opt Identifier LPAREN .)
    Identifier      reduce using rule 164 (constructorName -> modifiers_opt Identifier LPAREN .)


state 500

    (57) arrayType -> name arrays .

    VERTICAL        reduce using rule 57 (arrayType -> name arrays .)
    Identifier      reduce using rule 57 (arrayType -> name arrays .)
    OP_SHR          reduce using rule 57 (arrayType -> name arrays .)
    MORE            reduce using rule 57 (arrayType -> name arrays .)
    COMMA           reduce using rule 57 (arrayType -> name arrays .)
    OP_SHRR         reduce using rule 57 (arrayType -> name arrays .)
    INSTANCEOF      reduce using rule 57 (arrayType -> name arrays .)
    OP_EQ           reduce using rule 57 (arrayType -> name arrays .)
    OP_NE           reduce using rule 57 (arrayType -> name arrays .)
    AND             reduce using rule 57 (arrayType -> name arrays .)
    CARET           reduce using rule 57 (arrayType -> name arrays .)
    OP_LAND         reduce using rule 57 (arrayType -> name arrays .)
    QUES            reduce using rule 57 (arrayType -> name arrays .)
    OP_LOR          reduce using rule 57 (arrayType -> name arrays .)
    SEMI            reduce using rule 57 (arrayType -> name arrays .)
    COLON           reduce using rule 57 (arrayType -> name arrays .)
    RPAREN          reduce using rule 57 (arrayType -> name arrays .)
    FRPAREN         reduce using rule 57 (arrayType -> name arrays .)
    BRPAREN         reduce using rule 57 (arrayType -> name arrays .)
    OP_ARRAY        reduce using rule 57 (arrayType -> name arrays .)


state 501

    (56) arrayType -> primitiveType arrays .

    VERTICAL        reduce using rule 56 (arrayType -> primitiveType arrays .)
    Identifier      reduce using rule 56 (arrayType -> primitiveType arrays .)
    OP_SHR          reduce using rule 56 (arrayType -> primitiveType arrays .)
    MORE            reduce using rule 56 (arrayType -> primitiveType arrays .)
    COMMA           reduce using rule 56 (arrayType -> primitiveType arrays .)
    OP_SHRR         reduce using rule 56 (arrayType -> primitiveType arrays .)
    INSTANCEOF      reduce using rule 56 (arrayType -> primitiveType arrays .)
    OP_EQ           reduce using rule 56 (arrayType -> primitiveType arrays .)
    OP_NE           reduce using rule 56 (arrayType -> primitiveType arrays .)
    AND             reduce using rule 56 (arrayType -> primitiveType arrays .)
    CARET           reduce using rule 56 (arrayType -> primitiveType arrays .)
    OP_LAND         reduce using rule 56 (arrayType -> primitiveType arrays .)
    QUES            reduce using rule 56 (arrayType -> primitiveType arrays .)
    OP_LOR          reduce using rule 56 (arrayType -> primitiveType arrays .)
    SEMI            reduce using rule 56 (arrayType -> primitiveType arrays .)
    COLON           reduce using rule 56 (arrayType -> primitiveType arrays .)
    RPAREN          reduce using rule 56 (arrayType -> primitiveType arrays .)
    FRPAREN         reduce using rule 56 (arrayType -> primitiveType arrays .)
    BRPAREN         reduce using rule 56 (arrayType -> primitiveType arrays .)
    OP_ARRAY        reduce using rule 56 (arrayType -> primitiveType arrays .)


state 502

    (194) methodBody -> BLPAREN blockStatements_opt . BRPAREN

    BRPAREN         shift and go to state 710


state 503

    (162) constructorHead -> constructorName formalParameterList_opt RPAREN . methodHeadThrowList_opt
    (189) methodHeadThrowList_opt -> . methodHeadThrowList
    (190) methodHeadThrowList_opt -> . empty
    (191) methodHeadThrowList -> . THROWS classTypeList
    (631) empty -> .

    THROWS          shift and go to state 713
    BLPAREN         reduce using rule 631 (empty -> .)

    methodHeadThrowList_opt        shift and go to state 711
    methodHeadThrowList            shift and go to state 712
    empty                          shift and go to state 714

state 504

    (56) arrayType -> primitiveType . arrays
    (59) arrays -> . array_loop
    (60) array_loop -> . array
    (61) array_loop -> . array_loop array
    (58) array -> . FLPAREN FRPAREN

    FLPAREN         shift and go to state 451

    arrays                         shift and go to state 501
    array                          shift and go to state 407
    array_loop                     shift and go to state 413

state 505

    (49) classOrInterface -> genericType . DOT name
    (47) classOrInterfaceType -> genericType .
    (54) arrayType -> genericType . arrays
    (55) arrayType -> genericType . DOT name arrays
    (59) arrays -> . array_loop
    (60) array_loop -> . array
    (61) array_loop -> . array_loop array
    (58) array -> . FLPAREN FRPAREN

    DOT             shift and go to state 715
    OP_SHRR         reduce using rule 47 (classOrInterfaceType -> genericType .)
    OP_SHR          reduce using rule 47 (classOrInterfaceType -> genericType .)
    MORE            reduce using rule 47 (classOrInterfaceType -> genericType .)
    COMMA           reduce using rule 47 (classOrInterfaceType -> genericType .)
    AND             reduce using rule 47 (classOrInterfaceType -> genericType .)
    FLPAREN         shift and go to state 451

    arrays                         shift and go to state 493
    array                          shift and go to state 407
    array_loop                     shift and go to state 413

state 506

    (91) referenceType1 -> referenceType . MORE
    (83) typeArgument -> referenceType .

    MORE            shift and go to state 716
    COMMA           reduce using rule 83 (typeArgument -> referenceType .)


state 507

    (88) typeArgumentList1 -> typeArgumentList . COMMA typeArgument1
    (86) typeArgumentList -> typeArgumentList . COMMA typeArgument

    COMMA           shift and go to state 717


state 508

    (90) typeArgument1 -> wildcard1 .

    SUPER           reduce using rule 90 (typeArgument1 -> wildcard1 .)
    THIS            reduce using rule 90 (typeArgument1 -> wildcard1 .)
    Identifier      reduce using rule 90 (typeArgument1 -> wildcard1 .)
    DOT             reduce using rule 90 (typeArgument1 -> wildcard1 .)
    COMMA           reduce using rule 90 (typeArgument1 -> wildcard1 .)
    BLPAREN         reduce using rule 90 (typeArgument1 -> wildcard1 .)
    IMPLEMENTS      reduce using rule 90 (typeArgument1 -> wildcard1 .)
    FLPAREN         reduce using rule 90 (typeArgument1 -> wildcard1 .)
    LPAREN          reduce using rule 90 (typeArgument1 -> wildcard1 .)
    OP_ARRAY        reduce using rule 90 (typeArgument1 -> wildcard1 .)
    INSTANCEOF      reduce using rule 90 (typeArgument1 -> wildcard1 .)
    OP_EQ           reduce using rule 90 (typeArgument1 -> wildcard1 .)
    OP_NE           reduce using rule 90 (typeArgument1 -> wildcard1 .)
    AND             reduce using rule 90 (typeArgument1 -> wildcard1 .)
    CARET           reduce using rule 90 (typeArgument1 -> wildcard1 .)
    VERTICAL        reduce using rule 90 (typeArgument1 -> wildcard1 .)
    OP_LAND         reduce using rule 90 (typeArgument1 -> wildcard1 .)
    QUES            reduce using rule 90 (typeArgument1 -> wildcard1 .)
    OP_LOR          reduce using rule 90 (typeArgument1 -> wildcard1 .)
    RPAREN          reduce using rule 90 (typeArgument1 -> wildcard1 .)
    BRPAREN         reduce using rule 90 (typeArgument1 -> wildcard1 .)
    SEMI            reduce using rule 90 (typeArgument1 -> wildcard1 .)
    COLON           reduce using rule 90 (typeArgument1 -> wildcard1 .)
    FRPAREN         reduce using rule 90 (typeArgument1 -> wildcard1 .)
    MORE            reduce using rule 90 (typeArgument1 -> wildcard1 .)
    OP_SHR          reduce using rule 90 (typeArgument1 -> wildcard1 .)
    OP_SHRR         reduce using rule 90 (typeArgument1 -> wildcard1 .)


state 509

    (82) typeArguments -> LESS typeArgumentList1 .

    Identifier      reduce using rule 82 (typeArguments -> LESS typeArgumentList1 .)
    SUPER           reduce using rule 82 (typeArguments -> LESS typeArgumentList1 .)
    THIS            reduce using rule 82 (typeArguments -> LESS typeArgumentList1 .)
    DOT             reduce using rule 82 (typeArguments -> LESS typeArgumentList1 .)
    FLPAREN         reduce using rule 82 (typeArguments -> LESS typeArgumentList1 .)
    MORE            reduce using rule 82 (typeArguments -> LESS typeArgumentList1 .)
    COMMA           reduce using rule 82 (typeArguments -> LESS typeArgumentList1 .)
    AND             reduce using rule 82 (typeArguments -> LESS typeArgumentList1 .)
    RPAREN          reduce using rule 82 (typeArguments -> LESS typeArgumentList1 .)
    BLPAREN         reduce using rule 82 (typeArguments -> LESS typeArgumentList1 .)
    IMPLEMENTS      reduce using rule 82 (typeArguments -> LESS typeArgumentList1 .)
    LPAREN          reduce using rule 82 (typeArguments -> LESS typeArgumentList1 .)
    OP_ARRAY        reduce using rule 82 (typeArguments -> LESS typeArgumentList1 .)
    INSTANCEOF      reduce using rule 82 (typeArguments -> LESS typeArgumentList1 .)
    OP_EQ           reduce using rule 82 (typeArguments -> LESS typeArgumentList1 .)
    OP_NE           reduce using rule 82 (typeArguments -> LESS typeArgumentList1 .)
    CARET           reduce using rule 82 (typeArguments -> LESS typeArgumentList1 .)
    VERTICAL        reduce using rule 82 (typeArguments -> LESS typeArgumentList1 .)
    OP_LAND         reduce using rule 82 (typeArguments -> LESS typeArgumentList1 .)
    QUES            reduce using rule 82 (typeArguments -> LESS typeArgumentList1 .)
    OP_LOR          reduce using rule 82 (typeArguments -> LESS typeArgumentList1 .)
    BRPAREN         reduce using rule 82 (typeArguments -> LESS typeArgumentList1 .)
    SEMI            reduce using rule 82 (typeArguments -> LESS typeArgumentList1 .)
    COLON           reduce using rule 82 (typeArguments -> LESS typeArgumentList1 .)
    FRPAREN         reduce using rule 82 (typeArguments -> LESS typeArgumentList1 .)
    OP_SHR          reduce using rule 82 (typeArguments -> LESS typeArgumentList1 .)
    OP_SHRR         reduce using rule 82 (typeArguments -> LESS typeArgumentList1 .)


state 510

    (85) typeArgumentList -> typeArgument .

    COMMA           reduce using rule 85 (typeArgumentList -> typeArgument .)


state 511

    (89) typeArgument1 -> referenceType1 .

    SUPER           reduce using rule 89 (typeArgument1 -> referenceType1 .)
    THIS            reduce using rule 89 (typeArgument1 -> referenceType1 .)
    Identifier      reduce using rule 89 (typeArgument1 -> referenceType1 .)
    DOT             reduce using rule 89 (typeArgument1 -> referenceType1 .)
    COMMA           reduce using rule 89 (typeArgument1 -> referenceType1 .)
    BLPAREN         reduce using rule 89 (typeArgument1 -> referenceType1 .)
    IMPLEMENTS      reduce using rule 89 (typeArgument1 -> referenceType1 .)
    FLPAREN         reduce using rule 89 (typeArgument1 -> referenceType1 .)
    LPAREN          reduce using rule 89 (typeArgument1 -> referenceType1 .)
    OP_ARRAY        reduce using rule 89 (typeArgument1 -> referenceType1 .)
    INSTANCEOF      reduce using rule 89 (typeArgument1 -> referenceType1 .)
    OP_EQ           reduce using rule 89 (typeArgument1 -> referenceType1 .)
    OP_NE           reduce using rule 89 (typeArgument1 -> referenceType1 .)
    AND             reduce using rule 89 (typeArgument1 -> referenceType1 .)
    CARET           reduce using rule 89 (typeArgument1 -> referenceType1 .)
    VERTICAL        reduce using rule 89 (typeArgument1 -> referenceType1 .)
    OP_LAND         reduce using rule 89 (typeArgument1 -> referenceType1 .)
    QUES            reduce using rule 89 (typeArgument1 -> referenceType1 .)
    OP_LOR          reduce using rule 89 (typeArgument1 -> referenceType1 .)
    RPAREN          reduce using rule 89 (typeArgument1 -> referenceType1 .)
    BRPAREN         reduce using rule 89 (typeArgument1 -> referenceType1 .)
    SEMI            reduce using rule 89 (typeArgument1 -> referenceType1 .)
    COLON           reduce using rule 89 (typeArgument1 -> referenceType1 .)
    FRPAREN         reduce using rule 89 (typeArgument1 -> referenceType1 .)
    MORE            reduce using rule 89 (typeArgument1 -> referenceType1 .)
    OP_SHR          reduce using rule 89 (typeArgument1 -> referenceType1 .)
    OP_SHRR         reduce using rule 89 (typeArgument1 -> referenceType1 .)


state 512

    (48) classOrInterface -> name .
    (57) arrayType -> name . arrays
    (32) qualifiedName -> name . DOT simpleName
    (59) arrays -> . array_loop
    (60) array_loop -> . array
    (61) array_loop -> . array_loop array
    (58) array -> . FLPAREN FRPAREN

    LESS            reduce using rule 48 (classOrInterface -> name .)
    OP_SHR          reduce using rule 48 (classOrInterface -> name .)
    MORE            reduce using rule 48 (classOrInterface -> name .)
    COMMA           reduce using rule 48 (classOrInterface -> name .)
    OP_SHRR         reduce using rule 48 (classOrInterface -> name .)
    AND             reduce using rule 48 (classOrInterface -> name .)
    DOT             shift and go to state 145
    FLPAREN         shift and go to state 451

    arrays                         shift and go to state 500
    array                          shift and go to state 407
    array_loop                     shift and go to state 413

state 513

    (87) typeArgumentList1 -> typeArgument1 .

    DOT             reduce using rule 87 (typeArgumentList1 -> typeArgument1 .)
    FLPAREN         reduce using rule 87 (typeArgumentList1 -> typeArgument1 .)
    RPAREN          reduce using rule 87 (typeArgumentList1 -> typeArgument1 .)
    MORE            reduce using rule 87 (typeArgumentList1 -> typeArgument1 .)
    COMMA           reduce using rule 87 (typeArgumentList1 -> typeArgument1 .)
    AND             reduce using rule 87 (typeArgumentList1 -> typeArgument1 .)
    BLPAREN         reduce using rule 87 (typeArgumentList1 -> typeArgument1 .)
    IMPLEMENTS      reduce using rule 87 (typeArgumentList1 -> typeArgument1 .)
    Identifier      reduce using rule 87 (typeArgumentList1 -> typeArgument1 .)
    LPAREN          reduce using rule 87 (typeArgumentList1 -> typeArgument1 .)
    OP_ARRAY        reduce using rule 87 (typeArgumentList1 -> typeArgument1 .)
    INSTANCEOF      reduce using rule 87 (typeArgumentList1 -> typeArgument1 .)
    OP_EQ           reduce using rule 87 (typeArgumentList1 -> typeArgument1 .)
    OP_NE           reduce using rule 87 (typeArgumentList1 -> typeArgument1 .)
    CARET           reduce using rule 87 (typeArgumentList1 -> typeArgument1 .)
    VERTICAL        reduce using rule 87 (typeArgumentList1 -> typeArgument1 .)
    OP_LAND         reduce using rule 87 (typeArgumentList1 -> typeArgument1 .)
    QUES            reduce using rule 87 (typeArgumentList1 -> typeArgument1 .)
    OP_LOR          reduce using rule 87 (typeArgumentList1 -> typeArgument1 .)
    BRPAREN         reduce using rule 87 (typeArgumentList1 -> typeArgument1 .)
    SEMI            reduce using rule 87 (typeArgumentList1 -> typeArgument1 .)
    COLON           reduce using rule 87 (typeArgumentList1 -> typeArgument1 .)
    FRPAREN         reduce using rule 87 (typeArgumentList1 -> typeArgument1 .)
    OP_SHR          reduce using rule 87 (typeArgumentList1 -> typeArgument1 .)
    OP_SHRR         reduce using rule 87 (typeArgumentList1 -> typeArgument1 .)
    SUPER           reduce using rule 87 (typeArgumentList1 -> typeArgument1 .)
    THIS            reduce using rule 87 (typeArgumentList1 -> typeArgument1 .)


state 514

    (92) referenceType1 -> classOrInterface . LESS typeArgumentList2
    (46) classOrInterfaceType -> classOrInterface .
    (50) genericType -> classOrInterface . typeArguments
    (51) genericType -> classOrInterface . LESS MORE
    (82) typeArguments -> . LESS typeArgumentList1

    LESS            shift and go to state 718
    MORE            reduce using rule 46 (classOrInterfaceType -> classOrInterface .)
    COMMA           reduce using rule 46 (classOrInterfaceType -> classOrInterface .)
    AND             reduce using rule 46 (classOrInterfaceType -> classOrInterface .)

    typeArguments                  shift and go to state 355

state 515

    (108) wildcard1 -> QUES . MORE
    (109) wildcard1 -> QUES . wildcardBounds1
    (104) wildcard -> QUES .
    (105) wildcard -> QUES . wildcardBounds
    (110) wildcardBounds1 -> . EXTENDS referenceType1
    (111) wildcardBounds1 -> . SUPER referenceType1
    (106) wildcardBounds -> . EXTENDS referenceType
    (107) wildcardBounds -> . SUPER referenceType

    MORE            shift and go to state 723
    COMMA           reduce using rule 104 (wildcard -> QUES .)
    EXTENDS         shift and go to state 719
    SUPER           shift and go to state 722

    wildcardBounds1                shift and go to state 720
    wildcardBounds                 shift and go to state 721

state 516

    (84) typeArgument -> wildcard .

    COMMA           reduce using rule 84 (typeArgument -> wildcard .)


state 517

    (429) explicitConstructorInvocation -> name . DOT SUPER LPAREN argumentList_opt RPAREN SEMI
    (431) explicitConstructorInvocation -> name . DOT THIS LPAREN argumentList_opt RPAREN SEMI
    (433) explicitConstructorInvocation -> name . DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI
    (435) explicitConstructorInvocation -> name . DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (340) methodInvocation -> name . LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> name . DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (585) postfixExpression -> name .
    (442) classInstanceCreationExpressionName -> name . DOT
    (602) primaryNoNewArray -> name . DOT THIS
    (603) primaryNoNewArray -> name . DOT SUPER
    (604) primaryNoNewArray -> name . DOT CLASS
    (605) primaryNoNewArray -> name . arrays DOT CLASS
    (32) qualifiedName -> name . DOT simpleName
    (447) arrayAccess -> name . FLPAREN expression FRPAREN
    (59) arrays -> . array_loop
    (60) array_loop -> . array
    (61) array_loop -> . array_loop array
    (58) array -> . FLPAREN FRPAREN

    DOT             shift and go to state 534
    LPAREN          shift and go to state 404
    OP_INC          reduce using rule 585 (postfixExpression -> name .)
    OP_DEC          reduce using rule 585 (postfixExpression -> name .)
    ASS             reduce using rule 585 (postfixExpression -> name .)
    ASS_ADD         reduce using rule 585 (postfixExpression -> name .)
    ASS_SUB         reduce using rule 585 (postfixExpression -> name .)
    ASS_MUL         reduce using rule 585 (postfixExpression -> name .)
    ASS_DIV         reduce using rule 585 (postfixExpression -> name .)
    ASS_AND         reduce using rule 585 (postfixExpression -> name .)
    ASS_OR          reduce using rule 585 (postfixExpression -> name .)
    ASS_XOR         reduce using rule 585 (postfixExpression -> name .)
    ASS_MOD         reduce using rule 585 (postfixExpression -> name .)
    ASS_SHL         reduce using rule 585 (postfixExpression -> name .)
    ASS_SHRR        reduce using rule 585 (postfixExpression -> name .)
    ASS_SHR         reduce using rule 585 (postfixExpression -> name .)
    FLPAREN         shift and go to state 411

    arrays                         shift and go to state 426
    array_loop                     shift and go to state 413
    array                          shift and go to state 407

state 518

    (399) synchronizedStatement -> SYNCHRONIZED . LPAREN expression RPAREN block

    LPAREN          shift and go to state 555


state 519

    (367) enhancedForStatement -> enhancedForStatementHead statement .

    IF              reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    WHILE           reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    FOR             reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    BLPAREN         reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    ASSERT          reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    SEMI            reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    SWITCH          reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    DO              reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    BREAK           reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    CONTINUE        reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    RETURN          reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    SYNCHRONIZED    reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    THROW           reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    TRY             reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    Identifier      reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    AT              reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    BOOLEAN         reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    VOID            reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    BYTE            reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    SHORT           reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    INT             reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    LONG            reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    CHAR            reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    FLOAT           reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    DOUBLE          reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    PUBLIC          reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    PROTECTED       reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    PRIVATE         reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    STATIC          reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    ABSTRACT        reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    FINAL           reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    NATIVE          reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    TRANSIENT       reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    VOLATILE        reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    STRICTFP        reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    THIS            reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    SUPER           reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    OP_INC          reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    OP_DEC          reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    NEW             reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    LESS            reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    LPAREN          reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    CharacterLiteral reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    StringLiteral   reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    NULL            reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    LONG_NUMBER     reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    LONG_HEX_NUMBER reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    NON_INTEGER_1   reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    NON_INTEGER_2   reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    NON_INTEGER_3   reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    NON_INTEGER_4   reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    NON_INTEGER_5   reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    NON_INTEGER_6   reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    TRUE            reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    FALSE           reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    INTERFACE       reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    ENUM            reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    CLASS           reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    BRPAREN         reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    CASE            reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)
    DEFAULT         reduce using rule 367 (enhancedForStatement -> enhancedForStatementHead statement .)


state 520

    (462) assignmentOperator -> ASS .

    THIS            reduce using rule 462 (assignmentOperator -> ASS .)
    LPAREN          reduce using rule 462 (assignmentOperator -> ASS .)
    NEW             reduce using rule 462 (assignmentOperator -> ASS .)
    Identifier      reduce using rule 462 (assignmentOperator -> ASS .)
    CharacterLiteral reduce using rule 462 (assignmentOperator -> ASS .)
    StringLiteral   reduce using rule 462 (assignmentOperator -> ASS .)
    NULL            reduce using rule 462 (assignmentOperator -> ASS .)
    SUPER           reduce using rule 462 (assignmentOperator -> ASS .)
    BOOLEAN         reduce using rule 462 (assignmentOperator -> ASS .)
    VOID            reduce using rule 462 (assignmentOperator -> ASS .)
    BYTE            reduce using rule 462 (assignmentOperator -> ASS .)
    SHORT           reduce using rule 462 (assignmentOperator -> ASS .)
    INT             reduce using rule 462 (assignmentOperator -> ASS .)
    LONG            reduce using rule 462 (assignmentOperator -> ASS .)
    CHAR            reduce using rule 462 (assignmentOperator -> ASS .)
    FLOAT           reduce using rule 462 (assignmentOperator -> ASS .)
    DOUBLE          reduce using rule 462 (assignmentOperator -> ASS .)
    LONG_NUMBER     reduce using rule 462 (assignmentOperator -> ASS .)
    LONG_HEX_NUMBER reduce using rule 462 (assignmentOperator -> ASS .)
    NON_INTEGER_1   reduce using rule 462 (assignmentOperator -> ASS .)
    NON_INTEGER_2   reduce using rule 462 (assignmentOperator -> ASS .)
    NON_INTEGER_3   reduce using rule 462 (assignmentOperator -> ASS .)
    NON_INTEGER_4   reduce using rule 462 (assignmentOperator -> ASS .)
    NON_INTEGER_5   reduce using rule 462 (assignmentOperator -> ASS .)
    NON_INTEGER_6   reduce using rule 462 (assignmentOperator -> ASS .)
    TRUE            reduce using rule 462 (assignmentOperator -> ASS .)
    FALSE           reduce using rule 462 (assignmentOperator -> ASS .)
    PLUS            reduce using rule 462 (assignmentOperator -> ASS .)
    DASH            reduce using rule 462 (assignmentOperator -> ASS .)
    OP_INC          reduce using rule 462 (assignmentOperator -> ASS .)
    OP_DEC          reduce using rule 462 (assignmentOperator -> ASS .)
    TILDE           reduce using rule 462 (assignmentOperator -> ASS .)
    EXCLAMATION     reduce using rule 462 (assignmentOperator -> ASS .)


state 521

    (465) assignmentOperator -> ASS_MUL .

    THIS            reduce using rule 465 (assignmentOperator -> ASS_MUL .)
    LPAREN          reduce using rule 465 (assignmentOperator -> ASS_MUL .)
    NEW             reduce using rule 465 (assignmentOperator -> ASS_MUL .)
    Identifier      reduce using rule 465 (assignmentOperator -> ASS_MUL .)
    CharacterLiteral reduce using rule 465 (assignmentOperator -> ASS_MUL .)
    StringLiteral   reduce using rule 465 (assignmentOperator -> ASS_MUL .)
    NULL            reduce using rule 465 (assignmentOperator -> ASS_MUL .)
    SUPER           reduce using rule 465 (assignmentOperator -> ASS_MUL .)
    BOOLEAN         reduce using rule 465 (assignmentOperator -> ASS_MUL .)
    VOID            reduce using rule 465 (assignmentOperator -> ASS_MUL .)
    BYTE            reduce using rule 465 (assignmentOperator -> ASS_MUL .)
    SHORT           reduce using rule 465 (assignmentOperator -> ASS_MUL .)
    INT             reduce using rule 465 (assignmentOperator -> ASS_MUL .)
    LONG            reduce using rule 465 (assignmentOperator -> ASS_MUL .)
    CHAR            reduce using rule 465 (assignmentOperator -> ASS_MUL .)
    FLOAT           reduce using rule 465 (assignmentOperator -> ASS_MUL .)
    DOUBLE          reduce using rule 465 (assignmentOperator -> ASS_MUL .)
    LONG_NUMBER     reduce using rule 465 (assignmentOperator -> ASS_MUL .)
    LONG_HEX_NUMBER reduce using rule 465 (assignmentOperator -> ASS_MUL .)
    NON_INTEGER_1   reduce using rule 465 (assignmentOperator -> ASS_MUL .)
    NON_INTEGER_2   reduce using rule 465 (assignmentOperator -> ASS_MUL .)
    NON_INTEGER_3   reduce using rule 465 (assignmentOperator -> ASS_MUL .)
    NON_INTEGER_4   reduce using rule 465 (assignmentOperator -> ASS_MUL .)
    NON_INTEGER_5   reduce using rule 465 (assignmentOperator -> ASS_MUL .)
    NON_INTEGER_6   reduce using rule 465 (assignmentOperator -> ASS_MUL .)
    TRUE            reduce using rule 465 (assignmentOperator -> ASS_MUL .)
    FALSE           reduce using rule 465 (assignmentOperator -> ASS_MUL .)
    PLUS            reduce using rule 465 (assignmentOperator -> ASS_MUL .)
    DASH            reduce using rule 465 (assignmentOperator -> ASS_MUL .)
    OP_INC          reduce using rule 465 (assignmentOperator -> ASS_MUL .)
    OP_DEC          reduce using rule 465 (assignmentOperator -> ASS_MUL .)
    TILDE           reduce using rule 465 (assignmentOperator -> ASS_MUL .)
    EXCLAMATION     reduce using rule 465 (assignmentOperator -> ASS_MUL .)


state 522

    (463) assignmentOperator -> ASS_ADD .

    THIS            reduce using rule 463 (assignmentOperator -> ASS_ADD .)
    LPAREN          reduce using rule 463 (assignmentOperator -> ASS_ADD .)
    NEW             reduce using rule 463 (assignmentOperator -> ASS_ADD .)
    Identifier      reduce using rule 463 (assignmentOperator -> ASS_ADD .)
    CharacterLiteral reduce using rule 463 (assignmentOperator -> ASS_ADD .)
    StringLiteral   reduce using rule 463 (assignmentOperator -> ASS_ADD .)
    NULL            reduce using rule 463 (assignmentOperator -> ASS_ADD .)
    SUPER           reduce using rule 463 (assignmentOperator -> ASS_ADD .)
    BOOLEAN         reduce using rule 463 (assignmentOperator -> ASS_ADD .)
    VOID            reduce using rule 463 (assignmentOperator -> ASS_ADD .)
    BYTE            reduce using rule 463 (assignmentOperator -> ASS_ADD .)
    SHORT           reduce using rule 463 (assignmentOperator -> ASS_ADD .)
    INT             reduce using rule 463 (assignmentOperator -> ASS_ADD .)
    LONG            reduce using rule 463 (assignmentOperator -> ASS_ADD .)
    CHAR            reduce using rule 463 (assignmentOperator -> ASS_ADD .)
    FLOAT           reduce using rule 463 (assignmentOperator -> ASS_ADD .)
    DOUBLE          reduce using rule 463 (assignmentOperator -> ASS_ADD .)
    LONG_NUMBER     reduce using rule 463 (assignmentOperator -> ASS_ADD .)
    LONG_HEX_NUMBER reduce using rule 463 (assignmentOperator -> ASS_ADD .)
    NON_INTEGER_1   reduce using rule 463 (assignmentOperator -> ASS_ADD .)
    NON_INTEGER_2   reduce using rule 463 (assignmentOperator -> ASS_ADD .)
    NON_INTEGER_3   reduce using rule 463 (assignmentOperator -> ASS_ADD .)
    NON_INTEGER_4   reduce using rule 463 (assignmentOperator -> ASS_ADD .)
    NON_INTEGER_5   reduce using rule 463 (assignmentOperator -> ASS_ADD .)
    NON_INTEGER_6   reduce using rule 463 (assignmentOperator -> ASS_ADD .)
    TRUE            reduce using rule 463 (assignmentOperator -> ASS_ADD .)
    FALSE           reduce using rule 463 (assignmentOperator -> ASS_ADD .)
    PLUS            reduce using rule 463 (assignmentOperator -> ASS_ADD .)
    DASH            reduce using rule 463 (assignmentOperator -> ASS_ADD .)
    OP_INC          reduce using rule 463 (assignmentOperator -> ASS_ADD .)
    OP_DEC          reduce using rule 463 (assignmentOperator -> ASS_ADD .)
    TILDE           reduce using rule 463 (assignmentOperator -> ASS_ADD .)
    EXCLAMATION     reduce using rule 463 (assignmentOperator -> ASS_ADD .)


state 523

    (467) assignmentOperator -> ASS_AND .

    THIS            reduce using rule 467 (assignmentOperator -> ASS_AND .)
    LPAREN          reduce using rule 467 (assignmentOperator -> ASS_AND .)
    NEW             reduce using rule 467 (assignmentOperator -> ASS_AND .)
    Identifier      reduce using rule 467 (assignmentOperator -> ASS_AND .)
    CharacterLiteral reduce using rule 467 (assignmentOperator -> ASS_AND .)
    StringLiteral   reduce using rule 467 (assignmentOperator -> ASS_AND .)
    NULL            reduce using rule 467 (assignmentOperator -> ASS_AND .)
    SUPER           reduce using rule 467 (assignmentOperator -> ASS_AND .)
    BOOLEAN         reduce using rule 467 (assignmentOperator -> ASS_AND .)
    VOID            reduce using rule 467 (assignmentOperator -> ASS_AND .)
    BYTE            reduce using rule 467 (assignmentOperator -> ASS_AND .)
    SHORT           reduce using rule 467 (assignmentOperator -> ASS_AND .)
    INT             reduce using rule 467 (assignmentOperator -> ASS_AND .)
    LONG            reduce using rule 467 (assignmentOperator -> ASS_AND .)
    CHAR            reduce using rule 467 (assignmentOperator -> ASS_AND .)
    FLOAT           reduce using rule 467 (assignmentOperator -> ASS_AND .)
    DOUBLE          reduce using rule 467 (assignmentOperator -> ASS_AND .)
    LONG_NUMBER     reduce using rule 467 (assignmentOperator -> ASS_AND .)
    LONG_HEX_NUMBER reduce using rule 467 (assignmentOperator -> ASS_AND .)
    NON_INTEGER_1   reduce using rule 467 (assignmentOperator -> ASS_AND .)
    NON_INTEGER_2   reduce using rule 467 (assignmentOperator -> ASS_AND .)
    NON_INTEGER_3   reduce using rule 467 (assignmentOperator -> ASS_AND .)
    NON_INTEGER_4   reduce using rule 467 (assignmentOperator -> ASS_AND .)
    NON_INTEGER_5   reduce using rule 467 (assignmentOperator -> ASS_AND .)
    NON_INTEGER_6   reduce using rule 467 (assignmentOperator -> ASS_AND .)
    TRUE            reduce using rule 467 (assignmentOperator -> ASS_AND .)
    FALSE           reduce using rule 467 (assignmentOperator -> ASS_AND .)
    PLUS            reduce using rule 467 (assignmentOperator -> ASS_AND .)
    DASH            reduce using rule 467 (assignmentOperator -> ASS_AND .)
    OP_INC          reduce using rule 467 (assignmentOperator -> ASS_AND .)
    OP_DEC          reduce using rule 467 (assignmentOperator -> ASS_AND .)
    TILDE           reduce using rule 467 (assignmentOperator -> ASS_AND .)
    EXCLAMATION     reduce using rule 467 (assignmentOperator -> ASS_AND .)


state 524

    (472) assignmentOperator -> ASS_SHRR .

    THIS            reduce using rule 472 (assignmentOperator -> ASS_SHRR .)
    LPAREN          reduce using rule 472 (assignmentOperator -> ASS_SHRR .)
    NEW             reduce using rule 472 (assignmentOperator -> ASS_SHRR .)
    Identifier      reduce using rule 472 (assignmentOperator -> ASS_SHRR .)
    CharacterLiteral reduce using rule 472 (assignmentOperator -> ASS_SHRR .)
    StringLiteral   reduce using rule 472 (assignmentOperator -> ASS_SHRR .)
    NULL            reduce using rule 472 (assignmentOperator -> ASS_SHRR .)
    SUPER           reduce using rule 472 (assignmentOperator -> ASS_SHRR .)
    BOOLEAN         reduce using rule 472 (assignmentOperator -> ASS_SHRR .)
    VOID            reduce using rule 472 (assignmentOperator -> ASS_SHRR .)
    BYTE            reduce using rule 472 (assignmentOperator -> ASS_SHRR .)
    SHORT           reduce using rule 472 (assignmentOperator -> ASS_SHRR .)
    INT             reduce using rule 472 (assignmentOperator -> ASS_SHRR .)
    LONG            reduce using rule 472 (assignmentOperator -> ASS_SHRR .)
    CHAR            reduce using rule 472 (assignmentOperator -> ASS_SHRR .)
    FLOAT           reduce using rule 472 (assignmentOperator -> ASS_SHRR .)
    DOUBLE          reduce using rule 472 (assignmentOperator -> ASS_SHRR .)
    LONG_NUMBER     reduce using rule 472 (assignmentOperator -> ASS_SHRR .)
    LONG_HEX_NUMBER reduce using rule 472 (assignmentOperator -> ASS_SHRR .)
    NON_INTEGER_1   reduce using rule 472 (assignmentOperator -> ASS_SHRR .)
    NON_INTEGER_2   reduce using rule 472 (assignmentOperator -> ASS_SHRR .)
    NON_INTEGER_3   reduce using rule 472 (assignmentOperator -> ASS_SHRR .)
    NON_INTEGER_4   reduce using rule 472 (assignmentOperator -> ASS_SHRR .)
    NON_INTEGER_5   reduce using rule 472 (assignmentOperator -> ASS_SHRR .)
    NON_INTEGER_6   reduce using rule 472 (assignmentOperator -> ASS_SHRR .)
    TRUE            reduce using rule 472 (assignmentOperator -> ASS_SHRR .)
    FALSE           reduce using rule 472 (assignmentOperator -> ASS_SHRR .)
    PLUS            reduce using rule 472 (assignmentOperator -> ASS_SHRR .)
    DASH            reduce using rule 472 (assignmentOperator -> ASS_SHRR .)
    OP_INC          reduce using rule 472 (assignmentOperator -> ASS_SHRR .)
    OP_DEC          reduce using rule 472 (assignmentOperator -> ASS_SHRR .)
    TILDE           reduce using rule 472 (assignmentOperator -> ASS_SHRR .)
    EXCLAMATION     reduce using rule 472 (assignmentOperator -> ASS_SHRR .)


state 525

    (474) assignment -> postfixExpression assignmentOperator . assignmentExpression
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    assignmentExpression           shift and go to state 724
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    assignment                     shift and go to state 554
    fieldAccess                    shift and go to state 189
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    unaryExpressionNotPlusMinus    shift and go to state 397
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 526

    (469) assignmentOperator -> ASS_XOR .

    THIS            reduce using rule 469 (assignmentOperator -> ASS_XOR .)
    LPAREN          reduce using rule 469 (assignmentOperator -> ASS_XOR .)
    NEW             reduce using rule 469 (assignmentOperator -> ASS_XOR .)
    Identifier      reduce using rule 469 (assignmentOperator -> ASS_XOR .)
    CharacterLiteral reduce using rule 469 (assignmentOperator -> ASS_XOR .)
    StringLiteral   reduce using rule 469 (assignmentOperator -> ASS_XOR .)
    NULL            reduce using rule 469 (assignmentOperator -> ASS_XOR .)
    SUPER           reduce using rule 469 (assignmentOperator -> ASS_XOR .)
    BOOLEAN         reduce using rule 469 (assignmentOperator -> ASS_XOR .)
    VOID            reduce using rule 469 (assignmentOperator -> ASS_XOR .)
    BYTE            reduce using rule 469 (assignmentOperator -> ASS_XOR .)
    SHORT           reduce using rule 469 (assignmentOperator -> ASS_XOR .)
    INT             reduce using rule 469 (assignmentOperator -> ASS_XOR .)
    LONG            reduce using rule 469 (assignmentOperator -> ASS_XOR .)
    CHAR            reduce using rule 469 (assignmentOperator -> ASS_XOR .)
    FLOAT           reduce using rule 469 (assignmentOperator -> ASS_XOR .)
    DOUBLE          reduce using rule 469 (assignmentOperator -> ASS_XOR .)
    LONG_NUMBER     reduce using rule 469 (assignmentOperator -> ASS_XOR .)
    LONG_HEX_NUMBER reduce using rule 469 (assignmentOperator -> ASS_XOR .)
    NON_INTEGER_1   reduce using rule 469 (assignmentOperator -> ASS_XOR .)
    NON_INTEGER_2   reduce using rule 469 (assignmentOperator -> ASS_XOR .)
    NON_INTEGER_3   reduce using rule 469 (assignmentOperator -> ASS_XOR .)
    NON_INTEGER_4   reduce using rule 469 (assignmentOperator -> ASS_XOR .)
    NON_INTEGER_5   reduce using rule 469 (assignmentOperator -> ASS_XOR .)
    NON_INTEGER_6   reduce using rule 469 (assignmentOperator -> ASS_XOR .)
    TRUE            reduce using rule 469 (assignmentOperator -> ASS_XOR .)
    FALSE           reduce using rule 469 (assignmentOperator -> ASS_XOR .)
    PLUS            reduce using rule 469 (assignmentOperator -> ASS_XOR .)
    DASH            reduce using rule 469 (assignmentOperator -> ASS_XOR .)
    OP_INC          reduce using rule 469 (assignmentOperator -> ASS_XOR .)
    OP_DEC          reduce using rule 469 (assignmentOperator -> ASS_XOR .)
    TILDE           reduce using rule 469 (assignmentOperator -> ASS_XOR .)
    EXCLAMATION     reduce using rule 469 (assignmentOperator -> ASS_XOR .)


state 527

    (468) assignmentOperator -> ASS_OR .

    THIS            reduce using rule 468 (assignmentOperator -> ASS_OR .)
    LPAREN          reduce using rule 468 (assignmentOperator -> ASS_OR .)
    NEW             reduce using rule 468 (assignmentOperator -> ASS_OR .)
    Identifier      reduce using rule 468 (assignmentOperator -> ASS_OR .)
    CharacterLiteral reduce using rule 468 (assignmentOperator -> ASS_OR .)
    StringLiteral   reduce using rule 468 (assignmentOperator -> ASS_OR .)
    NULL            reduce using rule 468 (assignmentOperator -> ASS_OR .)
    SUPER           reduce using rule 468 (assignmentOperator -> ASS_OR .)
    BOOLEAN         reduce using rule 468 (assignmentOperator -> ASS_OR .)
    VOID            reduce using rule 468 (assignmentOperator -> ASS_OR .)
    BYTE            reduce using rule 468 (assignmentOperator -> ASS_OR .)
    SHORT           reduce using rule 468 (assignmentOperator -> ASS_OR .)
    INT             reduce using rule 468 (assignmentOperator -> ASS_OR .)
    LONG            reduce using rule 468 (assignmentOperator -> ASS_OR .)
    CHAR            reduce using rule 468 (assignmentOperator -> ASS_OR .)
    FLOAT           reduce using rule 468 (assignmentOperator -> ASS_OR .)
    DOUBLE          reduce using rule 468 (assignmentOperator -> ASS_OR .)
    LONG_NUMBER     reduce using rule 468 (assignmentOperator -> ASS_OR .)
    LONG_HEX_NUMBER reduce using rule 468 (assignmentOperator -> ASS_OR .)
    NON_INTEGER_1   reduce using rule 468 (assignmentOperator -> ASS_OR .)
    NON_INTEGER_2   reduce using rule 468 (assignmentOperator -> ASS_OR .)
    NON_INTEGER_3   reduce using rule 468 (assignmentOperator -> ASS_OR .)
    NON_INTEGER_4   reduce using rule 468 (assignmentOperator -> ASS_OR .)
    NON_INTEGER_5   reduce using rule 468 (assignmentOperator -> ASS_OR .)
    NON_INTEGER_6   reduce using rule 468 (assignmentOperator -> ASS_OR .)
    TRUE            reduce using rule 468 (assignmentOperator -> ASS_OR .)
    FALSE           reduce using rule 468 (assignmentOperator -> ASS_OR .)
    PLUS            reduce using rule 468 (assignmentOperator -> ASS_OR .)
    DASH            reduce using rule 468 (assignmentOperator -> ASS_OR .)
    OP_INC          reduce using rule 468 (assignmentOperator -> ASS_OR .)
    OP_DEC          reduce using rule 468 (assignmentOperator -> ASS_OR .)
    TILDE           reduce using rule 468 (assignmentOperator -> ASS_OR .)
    EXCLAMATION     reduce using rule 468 (assignmentOperator -> ASS_OR .)


state 528

    (466) assignmentOperator -> ASS_DIV .

    THIS            reduce using rule 466 (assignmentOperator -> ASS_DIV .)
    LPAREN          reduce using rule 466 (assignmentOperator -> ASS_DIV .)
    NEW             reduce using rule 466 (assignmentOperator -> ASS_DIV .)
    Identifier      reduce using rule 466 (assignmentOperator -> ASS_DIV .)
    CharacterLiteral reduce using rule 466 (assignmentOperator -> ASS_DIV .)
    StringLiteral   reduce using rule 466 (assignmentOperator -> ASS_DIV .)
    NULL            reduce using rule 466 (assignmentOperator -> ASS_DIV .)
    SUPER           reduce using rule 466 (assignmentOperator -> ASS_DIV .)
    BOOLEAN         reduce using rule 466 (assignmentOperator -> ASS_DIV .)
    VOID            reduce using rule 466 (assignmentOperator -> ASS_DIV .)
    BYTE            reduce using rule 466 (assignmentOperator -> ASS_DIV .)
    SHORT           reduce using rule 466 (assignmentOperator -> ASS_DIV .)
    INT             reduce using rule 466 (assignmentOperator -> ASS_DIV .)
    LONG            reduce using rule 466 (assignmentOperator -> ASS_DIV .)
    CHAR            reduce using rule 466 (assignmentOperator -> ASS_DIV .)
    FLOAT           reduce using rule 466 (assignmentOperator -> ASS_DIV .)
    DOUBLE          reduce using rule 466 (assignmentOperator -> ASS_DIV .)
    LONG_NUMBER     reduce using rule 466 (assignmentOperator -> ASS_DIV .)
    LONG_HEX_NUMBER reduce using rule 466 (assignmentOperator -> ASS_DIV .)
    NON_INTEGER_1   reduce using rule 466 (assignmentOperator -> ASS_DIV .)
    NON_INTEGER_2   reduce using rule 466 (assignmentOperator -> ASS_DIV .)
    NON_INTEGER_3   reduce using rule 466 (assignmentOperator -> ASS_DIV .)
    NON_INTEGER_4   reduce using rule 466 (assignmentOperator -> ASS_DIV .)
    NON_INTEGER_5   reduce using rule 466 (assignmentOperator -> ASS_DIV .)
    NON_INTEGER_6   reduce using rule 466 (assignmentOperator -> ASS_DIV .)
    TRUE            reduce using rule 466 (assignmentOperator -> ASS_DIV .)
    FALSE           reduce using rule 466 (assignmentOperator -> ASS_DIV .)
    PLUS            reduce using rule 466 (assignmentOperator -> ASS_DIV .)
    DASH            reduce using rule 466 (assignmentOperator -> ASS_DIV .)
    OP_INC          reduce using rule 466 (assignmentOperator -> ASS_DIV .)
    OP_DEC          reduce using rule 466 (assignmentOperator -> ASS_DIV .)
    TILDE           reduce using rule 466 (assignmentOperator -> ASS_DIV .)
    EXCLAMATION     reduce using rule 466 (assignmentOperator -> ASS_DIV .)


state 529

    (464) assignmentOperator -> ASS_SUB .

    THIS            reduce using rule 464 (assignmentOperator -> ASS_SUB .)
    LPAREN          reduce using rule 464 (assignmentOperator -> ASS_SUB .)
    NEW             reduce using rule 464 (assignmentOperator -> ASS_SUB .)
    Identifier      reduce using rule 464 (assignmentOperator -> ASS_SUB .)
    CharacterLiteral reduce using rule 464 (assignmentOperator -> ASS_SUB .)
    StringLiteral   reduce using rule 464 (assignmentOperator -> ASS_SUB .)
    NULL            reduce using rule 464 (assignmentOperator -> ASS_SUB .)
    SUPER           reduce using rule 464 (assignmentOperator -> ASS_SUB .)
    BOOLEAN         reduce using rule 464 (assignmentOperator -> ASS_SUB .)
    VOID            reduce using rule 464 (assignmentOperator -> ASS_SUB .)
    BYTE            reduce using rule 464 (assignmentOperator -> ASS_SUB .)
    SHORT           reduce using rule 464 (assignmentOperator -> ASS_SUB .)
    INT             reduce using rule 464 (assignmentOperator -> ASS_SUB .)
    LONG            reduce using rule 464 (assignmentOperator -> ASS_SUB .)
    CHAR            reduce using rule 464 (assignmentOperator -> ASS_SUB .)
    FLOAT           reduce using rule 464 (assignmentOperator -> ASS_SUB .)
    DOUBLE          reduce using rule 464 (assignmentOperator -> ASS_SUB .)
    LONG_NUMBER     reduce using rule 464 (assignmentOperator -> ASS_SUB .)
    LONG_HEX_NUMBER reduce using rule 464 (assignmentOperator -> ASS_SUB .)
    NON_INTEGER_1   reduce using rule 464 (assignmentOperator -> ASS_SUB .)
    NON_INTEGER_2   reduce using rule 464 (assignmentOperator -> ASS_SUB .)
    NON_INTEGER_3   reduce using rule 464 (assignmentOperator -> ASS_SUB .)
    NON_INTEGER_4   reduce using rule 464 (assignmentOperator -> ASS_SUB .)
    NON_INTEGER_5   reduce using rule 464 (assignmentOperator -> ASS_SUB .)
    NON_INTEGER_6   reduce using rule 464 (assignmentOperator -> ASS_SUB .)
    TRUE            reduce using rule 464 (assignmentOperator -> ASS_SUB .)
    FALSE           reduce using rule 464 (assignmentOperator -> ASS_SUB .)
    PLUS            reduce using rule 464 (assignmentOperator -> ASS_SUB .)
    DASH            reduce using rule 464 (assignmentOperator -> ASS_SUB .)
    OP_INC          reduce using rule 464 (assignmentOperator -> ASS_SUB .)
    OP_DEC          reduce using rule 464 (assignmentOperator -> ASS_SUB .)
    TILDE           reduce using rule 464 (assignmentOperator -> ASS_SUB .)
    EXCLAMATION     reduce using rule 464 (assignmentOperator -> ASS_SUB .)


state 530

    (473) assignmentOperator -> ASS_SHR .

    THIS            reduce using rule 473 (assignmentOperator -> ASS_SHR .)
    LPAREN          reduce using rule 473 (assignmentOperator -> ASS_SHR .)
    NEW             reduce using rule 473 (assignmentOperator -> ASS_SHR .)
    Identifier      reduce using rule 473 (assignmentOperator -> ASS_SHR .)
    CharacterLiteral reduce using rule 473 (assignmentOperator -> ASS_SHR .)
    StringLiteral   reduce using rule 473 (assignmentOperator -> ASS_SHR .)
    NULL            reduce using rule 473 (assignmentOperator -> ASS_SHR .)
    SUPER           reduce using rule 473 (assignmentOperator -> ASS_SHR .)
    BOOLEAN         reduce using rule 473 (assignmentOperator -> ASS_SHR .)
    VOID            reduce using rule 473 (assignmentOperator -> ASS_SHR .)
    BYTE            reduce using rule 473 (assignmentOperator -> ASS_SHR .)
    SHORT           reduce using rule 473 (assignmentOperator -> ASS_SHR .)
    INT             reduce using rule 473 (assignmentOperator -> ASS_SHR .)
    LONG            reduce using rule 473 (assignmentOperator -> ASS_SHR .)
    CHAR            reduce using rule 473 (assignmentOperator -> ASS_SHR .)
    FLOAT           reduce using rule 473 (assignmentOperator -> ASS_SHR .)
    DOUBLE          reduce using rule 473 (assignmentOperator -> ASS_SHR .)
    LONG_NUMBER     reduce using rule 473 (assignmentOperator -> ASS_SHR .)
    LONG_HEX_NUMBER reduce using rule 473 (assignmentOperator -> ASS_SHR .)
    NON_INTEGER_1   reduce using rule 473 (assignmentOperator -> ASS_SHR .)
    NON_INTEGER_2   reduce using rule 473 (assignmentOperator -> ASS_SHR .)
    NON_INTEGER_3   reduce using rule 473 (assignmentOperator -> ASS_SHR .)
    NON_INTEGER_4   reduce using rule 473 (assignmentOperator -> ASS_SHR .)
    NON_INTEGER_5   reduce using rule 473 (assignmentOperator -> ASS_SHR .)
    NON_INTEGER_6   reduce using rule 473 (assignmentOperator -> ASS_SHR .)
    TRUE            reduce using rule 473 (assignmentOperator -> ASS_SHR .)
    FALSE           reduce using rule 473 (assignmentOperator -> ASS_SHR .)
    PLUS            reduce using rule 473 (assignmentOperator -> ASS_SHR .)
    DASH            reduce using rule 473 (assignmentOperator -> ASS_SHR .)
    OP_INC          reduce using rule 473 (assignmentOperator -> ASS_SHR .)
    OP_DEC          reduce using rule 473 (assignmentOperator -> ASS_SHR .)
    TILDE           reduce using rule 473 (assignmentOperator -> ASS_SHR .)
    EXCLAMATION     reduce using rule 473 (assignmentOperator -> ASS_SHR .)


state 531

    (471) assignmentOperator -> ASS_SHL .

    THIS            reduce using rule 471 (assignmentOperator -> ASS_SHL .)
    LPAREN          reduce using rule 471 (assignmentOperator -> ASS_SHL .)
    NEW             reduce using rule 471 (assignmentOperator -> ASS_SHL .)
    Identifier      reduce using rule 471 (assignmentOperator -> ASS_SHL .)
    CharacterLiteral reduce using rule 471 (assignmentOperator -> ASS_SHL .)
    StringLiteral   reduce using rule 471 (assignmentOperator -> ASS_SHL .)
    NULL            reduce using rule 471 (assignmentOperator -> ASS_SHL .)
    SUPER           reduce using rule 471 (assignmentOperator -> ASS_SHL .)
    BOOLEAN         reduce using rule 471 (assignmentOperator -> ASS_SHL .)
    VOID            reduce using rule 471 (assignmentOperator -> ASS_SHL .)
    BYTE            reduce using rule 471 (assignmentOperator -> ASS_SHL .)
    SHORT           reduce using rule 471 (assignmentOperator -> ASS_SHL .)
    INT             reduce using rule 471 (assignmentOperator -> ASS_SHL .)
    LONG            reduce using rule 471 (assignmentOperator -> ASS_SHL .)
    CHAR            reduce using rule 471 (assignmentOperator -> ASS_SHL .)
    FLOAT           reduce using rule 471 (assignmentOperator -> ASS_SHL .)
    DOUBLE          reduce using rule 471 (assignmentOperator -> ASS_SHL .)
    LONG_NUMBER     reduce using rule 471 (assignmentOperator -> ASS_SHL .)
    LONG_HEX_NUMBER reduce using rule 471 (assignmentOperator -> ASS_SHL .)
    NON_INTEGER_1   reduce using rule 471 (assignmentOperator -> ASS_SHL .)
    NON_INTEGER_2   reduce using rule 471 (assignmentOperator -> ASS_SHL .)
    NON_INTEGER_3   reduce using rule 471 (assignmentOperator -> ASS_SHL .)
    NON_INTEGER_4   reduce using rule 471 (assignmentOperator -> ASS_SHL .)
    NON_INTEGER_5   reduce using rule 471 (assignmentOperator -> ASS_SHL .)
    NON_INTEGER_6   reduce using rule 471 (assignmentOperator -> ASS_SHL .)
    TRUE            reduce using rule 471 (assignmentOperator -> ASS_SHL .)
    FALSE           reduce using rule 471 (assignmentOperator -> ASS_SHL .)
    PLUS            reduce using rule 471 (assignmentOperator -> ASS_SHL .)
    DASH            reduce using rule 471 (assignmentOperator -> ASS_SHL .)
    OP_INC          reduce using rule 471 (assignmentOperator -> ASS_SHL .)
    OP_DEC          reduce using rule 471 (assignmentOperator -> ASS_SHL .)
    TILDE           reduce using rule 471 (assignmentOperator -> ASS_SHL .)
    EXCLAMATION     reduce using rule 471 (assignmentOperator -> ASS_SHL .)


state 532

    (470) assignmentOperator -> ASS_MOD .

    THIS            reduce using rule 470 (assignmentOperator -> ASS_MOD .)
    LPAREN          reduce using rule 470 (assignmentOperator -> ASS_MOD .)
    NEW             reduce using rule 470 (assignmentOperator -> ASS_MOD .)
    Identifier      reduce using rule 470 (assignmentOperator -> ASS_MOD .)
    CharacterLiteral reduce using rule 470 (assignmentOperator -> ASS_MOD .)
    StringLiteral   reduce using rule 470 (assignmentOperator -> ASS_MOD .)
    NULL            reduce using rule 470 (assignmentOperator -> ASS_MOD .)
    SUPER           reduce using rule 470 (assignmentOperator -> ASS_MOD .)
    BOOLEAN         reduce using rule 470 (assignmentOperator -> ASS_MOD .)
    VOID            reduce using rule 470 (assignmentOperator -> ASS_MOD .)
    BYTE            reduce using rule 470 (assignmentOperator -> ASS_MOD .)
    SHORT           reduce using rule 470 (assignmentOperator -> ASS_MOD .)
    INT             reduce using rule 470 (assignmentOperator -> ASS_MOD .)
    LONG            reduce using rule 470 (assignmentOperator -> ASS_MOD .)
    CHAR            reduce using rule 470 (assignmentOperator -> ASS_MOD .)
    FLOAT           reduce using rule 470 (assignmentOperator -> ASS_MOD .)
    DOUBLE          reduce using rule 470 (assignmentOperator -> ASS_MOD .)
    LONG_NUMBER     reduce using rule 470 (assignmentOperator -> ASS_MOD .)
    LONG_HEX_NUMBER reduce using rule 470 (assignmentOperator -> ASS_MOD .)
    NON_INTEGER_1   reduce using rule 470 (assignmentOperator -> ASS_MOD .)
    NON_INTEGER_2   reduce using rule 470 (assignmentOperator -> ASS_MOD .)
    NON_INTEGER_3   reduce using rule 470 (assignmentOperator -> ASS_MOD .)
    NON_INTEGER_4   reduce using rule 470 (assignmentOperator -> ASS_MOD .)
    NON_INTEGER_5   reduce using rule 470 (assignmentOperator -> ASS_MOD .)
    NON_INTEGER_6   reduce using rule 470 (assignmentOperator -> ASS_MOD .)
    TRUE            reduce using rule 470 (assignmentOperator -> ASS_MOD .)
    FALSE           reduce using rule 470 (assignmentOperator -> ASS_MOD .)
    PLUS            reduce using rule 470 (assignmentOperator -> ASS_MOD .)
    DASH            reduce using rule 470 (assignmentOperator -> ASS_MOD .)
    OP_INC          reduce using rule 470 (assignmentOperator -> ASS_MOD .)
    OP_DEC          reduce using rule 470 (assignmentOperator -> ASS_MOD .)
    TILDE           reduce using rule 470 (assignmentOperator -> ASS_MOD .)
    EXCLAMATION     reduce using rule 470 (assignmentOperator -> ASS_MOD .)


state 533

    (57) arrayType -> name arrays .
    (605) primaryNoNewArray -> name arrays . DOT CLASS

    Identifier      reduce using rule 57 (arrayType -> name arrays .)
    MORE            reduce using rule 57 (arrayType -> name arrays .)
    COMMA           reduce using rule 57 (arrayType -> name arrays .)
    DOT             shift and go to state 640


state 534

    (429) explicitConstructorInvocation -> name DOT . SUPER LPAREN argumentList_opt RPAREN SEMI
    (431) explicitConstructorInvocation -> name DOT . THIS LPAREN argumentList_opt RPAREN SEMI
    (433) explicitConstructorInvocation -> name DOT . typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI
    (435) explicitConstructorInvocation -> name DOT . typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (341) methodInvocation -> name DOT . typeArguments Identifier LPAREN argumentList_opt RPAREN
    (442) classInstanceCreationExpressionName -> name DOT .
    (602) primaryNoNewArray -> name DOT . THIS
    (603) primaryNoNewArray -> name DOT . SUPER
    (604) primaryNoNewArray -> name DOT . CLASS
    (32) qualifiedName -> name DOT . simpleName
    (82) typeArguments -> . LESS typeArgumentList1
    (31) simpleName -> . Identifier

    SUPER           shift and go to state 727
    THIS            shift and go to state 725
    NEW             reduce using rule 442 (classInstanceCreationExpressionName -> name DOT .)
    CLASS           shift and go to state 622
    LESS            shift and go to state 287
    Identifier      shift and go to state 68

    typeArguments                  shift and go to state 726
    simpleName                     shift and go to state 365

state 535

    (424) explicitConstructorInvocation -> THIS LPAREN . argumentList_opt RPAREN SEMI
    (232) argumentList_opt -> . argumentList
    (233) argumentList_opt -> . empty
    (234) argumentList -> . expression
    (235) argumentList -> . argumentList COMMA expression
    (631) empty -> .
    (456) expression -> . assignmentExpression
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    RPAREN          reduce using rule 631 (empty -> .)
    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    argumentList                   shift and go to state 602
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    argumentList_opt               shift and go to state 728
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    assignmentExpression           shift and go to state 543
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    fieldAccess                    shift and go to state 189
    integerLiteral                 shift and go to state 183
    empty                          shift and go to state 601
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 554
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    unaryExpressionNotPlusMinus    shift and go to state 397
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    expression                     shift and go to state 600
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 536

    (480) conditionalOrExpression -> conditionalAndExpression .
    (486) conditionalAndExpression -> conditionalAndExpression . OP_LAND inclusiveOrExpression

    QUES            reduce using rule 480 (conditionalOrExpression -> conditionalAndExpression .)
    OP_LOR          reduce using rule 480 (conditionalOrExpression -> conditionalAndExpression .)
    COLON           reduce using rule 480 (conditionalOrExpression -> conditionalAndExpression .)
    COMMA           reduce using rule 480 (conditionalOrExpression -> conditionalAndExpression .)
    RPAREN          reduce using rule 480 (conditionalOrExpression -> conditionalAndExpression .)
    SEMI            reduce using rule 480 (conditionalOrExpression -> conditionalAndExpression .)
    FRPAREN         reduce using rule 480 (conditionalOrExpression -> conditionalAndExpression .)
    BRPAREN         reduce using rule 480 (conditionalOrExpression -> conditionalAndExpression .)
    OP_LAND         shift and go to state 729


state 537

    (474) assignment -> postfixExpression . assignmentOperator assignmentExpression
    (574) postIncrementExpression -> postfixExpression . OP_INC
    (575) postDecrementExpression -> postfixExpression . OP_DEC
    (578) unaryExpressionNotPlusMinus -> postfixExpression .
    (462) assignmentOperator -> . ASS
    (463) assignmentOperator -> . ASS_ADD
    (464) assignmentOperator -> . ASS_SUB
    (465) assignmentOperator -> . ASS_MUL
    (466) assignmentOperator -> . ASS_DIV
    (467) assignmentOperator -> . ASS_AND
    (468) assignmentOperator -> . ASS_OR
    (469) assignmentOperator -> . ASS_XOR
    (470) assignmentOperator -> . ASS_MOD
    (471) assignmentOperator -> . ASS_SHL
    (472) assignmentOperator -> . ASS_SHRR
    (473) assignmentOperator -> . ASS_SHR

    OP_INC          shift and go to state 400
    OP_DEC          shift and go to state 401
    MULT            reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    SLASH           reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    PERCENT         reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    PLUS            reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    DASH            reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    OP_SHR          reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    OP_SHL          reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    OP_SHRR         reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    LESS            reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    OP_GE           reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    MORE            reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    OP_LE           reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    INSTANCEOF      reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    OP_EQ           reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    OP_NE           reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    AND             reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    CARET           reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    VERTICAL        reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    OP_LAND         reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    QUES            reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    OP_LOR          reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    SEMI            reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    RPAREN          reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    COMMA           reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    COLON           reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    BRPAREN         reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    FRPAREN         reduce using rule 578 (unaryExpressionNotPlusMinus -> postfixExpression .)
    ASS             shift and go to state 520
    ASS_ADD         shift and go to state 522
    ASS_SUB         shift and go to state 529
    ASS_MUL         shift and go to state 521
    ASS_DIV         shift and go to state 528
    ASS_AND         shift and go to state 523
    ASS_OR          shift and go to state 527
    ASS_XOR         shift and go to state 526
    ASS_MOD         shift and go to state 532
    ASS_SHL         shift and go to state 531
    ASS_SHRR        shift and go to state 524
    ASS_SHR         shift and go to state 530

    assignmentOperator             shift and go to state 525

state 538

    (513) instanceOfExpression -> relationalExpression .
    (519) relationalExpression -> relationalExpression . LESS shiftExpression
    (520) relationalExpression -> relationalExpression . OP_GE shiftExpression
    (521) relationalExpression -> relationalExpression . MORE shiftExpression
    (522) relationalExpression -> relationalExpression . OP_LE shiftExpression

    INSTANCEOF      reduce using rule 513 (instanceOfExpression -> relationalExpression .)
    OP_EQ           reduce using rule 513 (instanceOfExpression -> relationalExpression .)
    OP_NE           reduce using rule 513 (instanceOfExpression -> relationalExpression .)
    AND             reduce using rule 513 (instanceOfExpression -> relationalExpression .)
    CARET           reduce using rule 513 (instanceOfExpression -> relationalExpression .)
    VERTICAL        reduce using rule 513 (instanceOfExpression -> relationalExpression .)
    OP_LAND         reduce using rule 513 (instanceOfExpression -> relationalExpression .)
    QUES            reduce using rule 513 (instanceOfExpression -> relationalExpression .)
    OP_LOR          reduce using rule 513 (instanceOfExpression -> relationalExpression .)
    SEMI            reduce using rule 513 (instanceOfExpression -> relationalExpression .)
    COLON           reduce using rule 513 (instanceOfExpression -> relationalExpression .)
    COMMA           reduce using rule 513 (instanceOfExpression -> relationalExpression .)
    RPAREN          reduce using rule 513 (instanceOfExpression -> relationalExpression .)
    FRPAREN         reduce using rule 513 (instanceOfExpression -> relationalExpression .)
    BRPAREN         reduce using rule 513 (instanceOfExpression -> relationalExpression .)
    LESS            shift and go to state 730
    OP_GE           shift and go to state 732
    MORE            shift and go to state 733
    OP_LE           shift and go to state 731


state 539

    (398) returnStatement -> RETURN expression_opt . SEMI

    SEMI            shift and go to state 734


state 540

    (505) equalityExpression -> instanceOfExpression .
    (514) instanceOfExpression -> instanceOfExpression . INSTANCEOF referenceType

    OP_EQ           reduce using rule 505 (equalityExpression -> instanceOfExpression .)
    OP_NE           reduce using rule 505 (equalityExpression -> instanceOfExpression .)
    AND             reduce using rule 505 (equalityExpression -> instanceOfExpression .)
    CARET           reduce using rule 505 (equalityExpression -> instanceOfExpression .)
    VERTICAL        reduce using rule 505 (equalityExpression -> instanceOfExpression .)
    OP_LAND         reduce using rule 505 (equalityExpression -> instanceOfExpression .)
    QUES            reduce using rule 505 (equalityExpression -> instanceOfExpression .)
    OP_LOR          reduce using rule 505 (equalityExpression -> instanceOfExpression .)
    RPAREN          reduce using rule 505 (equalityExpression -> instanceOfExpression .)
    COMMA           reduce using rule 505 (equalityExpression -> instanceOfExpression .)
    BRPAREN         reduce using rule 505 (equalityExpression -> instanceOfExpression .)
    SEMI            reduce using rule 505 (equalityExpression -> instanceOfExpression .)
    FRPAREN         reduce using rule 505 (equalityExpression -> instanceOfExpression .)
    COLON           reduce using rule 505 (equalityExpression -> instanceOfExpression .)
    INSTANCEOF      shift and go to state 735


state 541

    (485) conditionalAndExpression -> inclusiveOrExpression .
    (491) inclusiveOrExpression -> inclusiveOrExpression . VERTICAL exclusiveOrExpression

    OP_LAND         reduce using rule 485 (conditionalAndExpression -> inclusiveOrExpression .)
    QUES            reduce using rule 485 (conditionalAndExpression -> inclusiveOrExpression .)
    OP_LOR          reduce using rule 485 (conditionalAndExpression -> inclusiveOrExpression .)
    COMMA           reduce using rule 485 (conditionalAndExpression -> inclusiveOrExpression .)
    RPAREN          reduce using rule 485 (conditionalAndExpression -> inclusiveOrExpression .)
    SEMI            reduce using rule 485 (conditionalAndExpression -> inclusiveOrExpression .)
    BRPAREN         reduce using rule 485 (conditionalAndExpression -> inclusiveOrExpression .)
    COLON           reduce using rule 485 (conditionalAndExpression -> inclusiveOrExpression .)
    FRPAREN         reduce using rule 485 (conditionalAndExpression -> inclusiveOrExpression .)
    VERTICAL        shift and go to state 736


state 542

    (532) shiftExpression -> additiveExpression .
    (544) additiveExpression -> additiveExpression . PLUS multiplicativeExpression
    (545) additiveExpression -> additiveExpression . DASH multiplicativeExpression

    OP_SHR          reduce using rule 532 (shiftExpression -> additiveExpression .)
    OP_SHL          reduce using rule 532 (shiftExpression -> additiveExpression .)
    OP_SHRR         reduce using rule 532 (shiftExpression -> additiveExpression .)
    LESS            reduce using rule 532 (shiftExpression -> additiveExpression .)
    OP_GE           reduce using rule 532 (shiftExpression -> additiveExpression .)
    MORE            reduce using rule 532 (shiftExpression -> additiveExpression .)
    OP_LE           reduce using rule 532 (shiftExpression -> additiveExpression .)
    INSTANCEOF      reduce using rule 532 (shiftExpression -> additiveExpression .)
    OP_EQ           reduce using rule 532 (shiftExpression -> additiveExpression .)
    OP_NE           reduce using rule 532 (shiftExpression -> additiveExpression .)
    AND             reduce using rule 532 (shiftExpression -> additiveExpression .)
    CARET           reduce using rule 532 (shiftExpression -> additiveExpression .)
    VERTICAL        reduce using rule 532 (shiftExpression -> additiveExpression .)
    OP_LAND         reduce using rule 532 (shiftExpression -> additiveExpression .)
    QUES            reduce using rule 532 (shiftExpression -> additiveExpression .)
    OP_LOR          reduce using rule 532 (shiftExpression -> additiveExpression .)
    COMMA           reduce using rule 532 (shiftExpression -> additiveExpression .)
    RPAREN          reduce using rule 532 (shiftExpression -> additiveExpression .)
    SEMI            reduce using rule 532 (shiftExpression -> additiveExpression .)
    COLON           reduce using rule 532 (shiftExpression -> additiveExpression .)
    FRPAREN         reduce using rule 532 (shiftExpression -> additiveExpression .)
    BRPAREN         reduce using rule 532 (shiftExpression -> additiveExpression .)
    PLUS            shift and go to state 737
    DASH            shift and go to state 738


state 543

    (456) expression -> assignmentExpression .

    SEMI            reduce using rule 456 (expression -> assignmentExpression .)
    RPAREN          reduce using rule 456 (expression -> assignmentExpression .)
    COMMA           reduce using rule 456 (expression -> assignmentExpression .)
    COLON           reduce using rule 456 (expression -> assignmentExpression .)
    BRPAREN         reduce using rule 456 (expression -> assignmentExpression .)
    FRPAREN         reduce using rule 456 (expression -> assignmentExpression .)


state 544

    (495) exclusiveOrExpression -> andExpression .
    (501) andExpression -> andExpression . AND equalityExpression

    CARET           reduce using rule 495 (exclusiveOrExpression -> andExpression .)
    VERTICAL        reduce using rule 495 (exclusiveOrExpression -> andExpression .)
    OP_LAND         reduce using rule 495 (exclusiveOrExpression -> andExpression .)
    QUES            reduce using rule 495 (exclusiveOrExpression -> andExpression .)
    OP_LOR          reduce using rule 495 (exclusiveOrExpression -> andExpression .)
    RPAREN          reduce using rule 495 (exclusiveOrExpression -> andExpression .)
    COMMA           reduce using rule 495 (exclusiveOrExpression -> andExpression .)
    BRPAREN         reduce using rule 495 (exclusiveOrExpression -> andExpression .)
    SEMI            reduce using rule 495 (exclusiveOrExpression -> andExpression .)
    FRPAREN         reduce using rule 495 (exclusiveOrExpression -> andExpression .)
    COLON           reduce using rule 495 (exclusiveOrExpression -> andExpression .)
    AND             shift and go to state 739


state 545

    (362) expression_opt -> expression .

    SEMI            reduce using rule 362 (expression_opt -> expression .)


state 546

    (500) andExpression -> equalityExpression .
    (506) equalityExpression -> equalityExpression . OP_EQ instanceOfExpression
    (507) equalityExpression -> equalityExpression . OP_NE instanceOfExpression

    AND             reduce using rule 500 (andExpression -> equalityExpression .)
    CARET           reduce using rule 500 (andExpression -> equalityExpression .)
    VERTICAL        reduce using rule 500 (andExpression -> equalityExpression .)
    OP_LAND         reduce using rule 500 (andExpression -> equalityExpression .)
    QUES            reduce using rule 500 (andExpression -> equalityExpression .)
    OP_LOR          reduce using rule 500 (andExpression -> equalityExpression .)
    COMMA           reduce using rule 500 (andExpression -> equalityExpression .)
    RPAREN          reduce using rule 500 (andExpression -> equalityExpression .)
    SEMI            reduce using rule 500 (andExpression -> equalityExpression .)
    COLON           reduce using rule 500 (andExpression -> equalityExpression .)
    FRPAREN         reduce using rule 500 (andExpression -> equalityExpression .)
    BRPAREN         reduce using rule 500 (andExpression -> equalityExpression .)
    OP_EQ           shift and go to state 741
    OP_NE           shift and go to state 740


state 547

    (475) conditionalExpression -> conditionalOrExpression .
    (476) conditionalExpression -> conditionalOrExpression . QUES expression COLON conditionalExpression
    (481) conditionalOrExpression -> conditionalOrExpression . OP_LOR conditionalAndExpression

    RPAREN          reduce using rule 475 (conditionalExpression -> conditionalOrExpression .)
    COMMA           reduce using rule 475 (conditionalExpression -> conditionalOrExpression .)
    BRPAREN         reduce using rule 475 (conditionalExpression -> conditionalOrExpression .)
    SEMI            reduce using rule 475 (conditionalExpression -> conditionalOrExpression .)
    FRPAREN         reduce using rule 475 (conditionalExpression -> conditionalOrExpression .)
    COLON           reduce using rule 475 (conditionalExpression -> conditionalOrExpression .)
    QUES            shift and go to state 743
    OP_LOR          shift and go to state 742


state 548

    (490) inclusiveOrExpression -> exclusiveOrExpression .
    (496) exclusiveOrExpression -> exclusiveOrExpression . CARET andExpression

    VERTICAL        reduce using rule 490 (inclusiveOrExpression -> exclusiveOrExpression .)
    OP_LAND         reduce using rule 490 (inclusiveOrExpression -> exclusiveOrExpression .)
    QUES            reduce using rule 490 (inclusiveOrExpression -> exclusiveOrExpression .)
    OP_LOR          reduce using rule 490 (inclusiveOrExpression -> exclusiveOrExpression .)
    RPAREN          reduce using rule 490 (inclusiveOrExpression -> exclusiveOrExpression .)
    COMMA           reduce using rule 490 (inclusiveOrExpression -> exclusiveOrExpression .)
    FRPAREN         reduce using rule 490 (inclusiveOrExpression -> exclusiveOrExpression .)
    SEMI            reduce using rule 490 (inclusiveOrExpression -> exclusiveOrExpression .)
    BRPAREN         reduce using rule 490 (inclusiveOrExpression -> exclusiveOrExpression .)
    COLON           reduce using rule 490 (inclusiveOrExpression -> exclusiveOrExpression .)
    CARET           shift and go to state 744


state 549

    (363) expression_opt -> empty .

    SEMI            reduce using rule 363 (expression_opt -> empty .)


state 550

    (459) assignmentExpression -> conditionalExpression .

    COMMA           reduce using rule 459 (assignmentExpression -> conditionalExpression .)
    RPAREN          reduce using rule 459 (assignmentExpression -> conditionalExpression .)
    BRPAREN         reduce using rule 459 (assignmentExpression -> conditionalExpression .)
    FRPAREN         reduce using rule 459 (assignmentExpression -> conditionalExpression .)
    SEMI            reduce using rule 459 (assignmentExpression -> conditionalExpression .)
    COLON           reduce using rule 459 (assignmentExpression -> conditionalExpression .)


state 551

    (543) additiveExpression -> multiplicativeExpression .
    (552) multiplicativeExpression -> multiplicativeExpression . MULT unaryExpression
    (553) multiplicativeExpression -> multiplicativeExpression . SLASH unaryExpression
    (554) multiplicativeExpression -> multiplicativeExpression . PERCENT unaryExpression

    PLUS            reduce using rule 543 (additiveExpression -> multiplicativeExpression .)
    DASH            reduce using rule 543 (additiveExpression -> multiplicativeExpression .)
    OP_SHR          reduce using rule 543 (additiveExpression -> multiplicativeExpression .)
    OP_SHL          reduce using rule 543 (additiveExpression -> multiplicativeExpression .)
    OP_SHRR         reduce using rule 543 (additiveExpression -> multiplicativeExpression .)
    LESS            reduce using rule 543 (additiveExpression -> multiplicativeExpression .)
    OP_GE           reduce using rule 543 (additiveExpression -> multiplicativeExpression .)
    MORE            reduce using rule 543 (additiveExpression -> multiplicativeExpression .)
    OP_LE           reduce using rule 543 (additiveExpression -> multiplicativeExpression .)
    INSTANCEOF      reduce using rule 543 (additiveExpression -> multiplicativeExpression .)
    OP_EQ           reduce using rule 543 (additiveExpression -> multiplicativeExpression .)
    OP_NE           reduce using rule 543 (additiveExpression -> multiplicativeExpression .)
    AND             reduce using rule 543 (additiveExpression -> multiplicativeExpression .)
    CARET           reduce using rule 543 (additiveExpression -> multiplicativeExpression .)
    VERTICAL        reduce using rule 543 (additiveExpression -> multiplicativeExpression .)
    OP_LAND         reduce using rule 543 (additiveExpression -> multiplicativeExpression .)
    QUES            reduce using rule 543 (additiveExpression -> multiplicativeExpression .)
    OP_LOR          reduce using rule 543 (additiveExpression -> multiplicativeExpression .)
    RPAREN          reduce using rule 543 (additiveExpression -> multiplicativeExpression .)
    COMMA           reduce using rule 543 (additiveExpression -> multiplicativeExpression .)
    BRPAREN         reduce using rule 543 (additiveExpression -> multiplicativeExpression .)
    SEMI            reduce using rule 543 (additiveExpression -> multiplicativeExpression .)
    COLON           reduce using rule 543 (additiveExpression -> multiplicativeExpression .)
    FRPAREN         reduce using rule 543 (additiveExpression -> multiplicativeExpression .)
    MULT            shift and go to state 747
    SLASH           shift and go to state 746
    PERCENT         shift and go to state 745


state 552

    (518) relationalExpression -> shiftExpression .
    (533) shiftExpression -> shiftExpression . OP_SHR additiveExpression
    (534) shiftExpression -> shiftExpression . OP_SHL additiveExpression
    (535) shiftExpression -> shiftExpression . OP_SHRR additiveExpression

    LESS            reduce using rule 518 (relationalExpression -> shiftExpression .)
    OP_GE           reduce using rule 518 (relationalExpression -> shiftExpression .)
    MORE            reduce using rule 518 (relationalExpression -> shiftExpression .)
    OP_LE           reduce using rule 518 (relationalExpression -> shiftExpression .)
    INSTANCEOF      reduce using rule 518 (relationalExpression -> shiftExpression .)
    OP_EQ           reduce using rule 518 (relationalExpression -> shiftExpression .)
    OP_NE           reduce using rule 518 (relationalExpression -> shiftExpression .)
    AND             reduce using rule 518 (relationalExpression -> shiftExpression .)
    CARET           reduce using rule 518 (relationalExpression -> shiftExpression .)
    VERTICAL        reduce using rule 518 (relationalExpression -> shiftExpression .)
    OP_LAND         reduce using rule 518 (relationalExpression -> shiftExpression .)
    QUES            reduce using rule 518 (relationalExpression -> shiftExpression .)
    OP_LOR          reduce using rule 518 (relationalExpression -> shiftExpression .)
    RPAREN          reduce using rule 518 (relationalExpression -> shiftExpression .)
    COMMA           reduce using rule 518 (relationalExpression -> shiftExpression .)
    BRPAREN         reduce using rule 518 (relationalExpression -> shiftExpression .)
    SEMI            reduce using rule 518 (relationalExpression -> shiftExpression .)
    COLON           reduce using rule 518 (relationalExpression -> shiftExpression .)
    FRPAREN         reduce using rule 518 (relationalExpression -> shiftExpression .)
    OP_SHR          shift and go to state 750
    OP_SHL          shift and go to state 748
    OP_SHRR         shift and go to state 749


state 553

    (551) multiplicativeExpression -> unaryExpression .

    MULT            reduce using rule 551 (multiplicativeExpression -> unaryExpression .)
    SLASH           reduce using rule 551 (multiplicativeExpression -> unaryExpression .)
    PERCENT         reduce using rule 551 (multiplicativeExpression -> unaryExpression .)
    PLUS            reduce using rule 551 (multiplicativeExpression -> unaryExpression .)
    DASH            reduce using rule 551 (multiplicativeExpression -> unaryExpression .)
    OP_SHR          reduce using rule 551 (multiplicativeExpression -> unaryExpression .)
    OP_SHL          reduce using rule 551 (multiplicativeExpression -> unaryExpression .)
    OP_SHRR         reduce using rule 551 (multiplicativeExpression -> unaryExpression .)
    LESS            reduce using rule 551 (multiplicativeExpression -> unaryExpression .)
    OP_GE           reduce using rule 551 (multiplicativeExpression -> unaryExpression .)
    MORE            reduce using rule 551 (multiplicativeExpression -> unaryExpression .)
    OP_LE           reduce using rule 551 (multiplicativeExpression -> unaryExpression .)
    INSTANCEOF      reduce using rule 551 (multiplicativeExpression -> unaryExpression .)
    OP_EQ           reduce using rule 551 (multiplicativeExpression -> unaryExpression .)
    OP_NE           reduce using rule 551 (multiplicativeExpression -> unaryExpression .)
    AND             reduce using rule 551 (multiplicativeExpression -> unaryExpression .)
    CARET           reduce using rule 551 (multiplicativeExpression -> unaryExpression .)
    VERTICAL        reduce using rule 551 (multiplicativeExpression -> unaryExpression .)
    OP_LAND         reduce using rule 551 (multiplicativeExpression -> unaryExpression .)
    QUES            reduce using rule 551 (multiplicativeExpression -> unaryExpression .)
    OP_LOR          reduce using rule 551 (multiplicativeExpression -> unaryExpression .)
    RPAREN          reduce using rule 551 (multiplicativeExpression -> unaryExpression .)
    COMMA           reduce using rule 551 (multiplicativeExpression -> unaryExpression .)
    BRPAREN         reduce using rule 551 (multiplicativeExpression -> unaryExpression .)
    SEMI            reduce using rule 551 (multiplicativeExpression -> unaryExpression .)
    FRPAREN         reduce using rule 551 (multiplicativeExpression -> unaryExpression .)
    COLON           reduce using rule 551 (multiplicativeExpression -> unaryExpression .)


state 554

    (458) assignmentExpression -> assignment .

    COMMA           reduce using rule 458 (assignmentExpression -> assignment .)
    RPAREN          reduce using rule 458 (assignmentExpression -> assignment .)
    BRPAREN         reduce using rule 458 (assignmentExpression -> assignment .)
    FRPAREN         reduce using rule 458 (assignmentExpression -> assignment .)
    SEMI            reduce using rule 458 (assignmentExpression -> assignment .)
    COLON           reduce using rule 458 (assignmentExpression -> assignment .)


state 555

    (399) synchronizedStatement -> SYNCHRONIZED LPAREN . expression RPAREN block
    (456) expression -> . assignmentExpression
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    assignmentExpression           shift and go to state 543
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    fieldAccess                    shift and go to state 189
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 554
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    unaryExpressionNotPlusMinus    shift and go to state 397
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    expression                     shift and go to state 751
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 556

    (395) breakStatement -> BREAK Identifier . SEMI

    SEMI            shift and go to state 752


state 557

    (394) breakStatement -> BREAK SEMI .

    IF              reduce using rule 394 (breakStatement -> BREAK SEMI .)
    WHILE           reduce using rule 394 (breakStatement -> BREAK SEMI .)
    FOR             reduce using rule 394 (breakStatement -> BREAK SEMI .)
    BLPAREN         reduce using rule 394 (breakStatement -> BREAK SEMI .)
    ASSERT          reduce using rule 394 (breakStatement -> BREAK SEMI .)
    SEMI            reduce using rule 394 (breakStatement -> BREAK SEMI .)
    SWITCH          reduce using rule 394 (breakStatement -> BREAK SEMI .)
    DO              reduce using rule 394 (breakStatement -> BREAK SEMI .)
    BREAK           reduce using rule 394 (breakStatement -> BREAK SEMI .)
    CONTINUE        reduce using rule 394 (breakStatement -> BREAK SEMI .)
    RETURN          reduce using rule 394 (breakStatement -> BREAK SEMI .)
    SYNCHRONIZED    reduce using rule 394 (breakStatement -> BREAK SEMI .)
    THROW           reduce using rule 394 (breakStatement -> BREAK SEMI .)
    TRY             reduce using rule 394 (breakStatement -> BREAK SEMI .)
    Identifier      reduce using rule 394 (breakStatement -> BREAK SEMI .)
    AT              reduce using rule 394 (breakStatement -> BREAK SEMI .)
    BOOLEAN         reduce using rule 394 (breakStatement -> BREAK SEMI .)
    VOID            reduce using rule 394 (breakStatement -> BREAK SEMI .)
    BYTE            reduce using rule 394 (breakStatement -> BREAK SEMI .)
    SHORT           reduce using rule 394 (breakStatement -> BREAK SEMI .)
    INT             reduce using rule 394 (breakStatement -> BREAK SEMI .)
    LONG            reduce using rule 394 (breakStatement -> BREAK SEMI .)
    CHAR            reduce using rule 394 (breakStatement -> BREAK SEMI .)
    FLOAT           reduce using rule 394 (breakStatement -> BREAK SEMI .)
    DOUBLE          reduce using rule 394 (breakStatement -> BREAK SEMI .)
    PUBLIC          reduce using rule 394 (breakStatement -> BREAK SEMI .)
    PROTECTED       reduce using rule 394 (breakStatement -> BREAK SEMI .)
    PRIVATE         reduce using rule 394 (breakStatement -> BREAK SEMI .)
    STATIC          reduce using rule 394 (breakStatement -> BREAK SEMI .)
    ABSTRACT        reduce using rule 394 (breakStatement -> BREAK SEMI .)
    FINAL           reduce using rule 394 (breakStatement -> BREAK SEMI .)
    NATIVE          reduce using rule 394 (breakStatement -> BREAK SEMI .)
    TRANSIENT       reduce using rule 394 (breakStatement -> BREAK SEMI .)
    VOLATILE        reduce using rule 394 (breakStatement -> BREAK SEMI .)
    STRICTFP        reduce using rule 394 (breakStatement -> BREAK SEMI .)
    THIS            reduce using rule 394 (breakStatement -> BREAK SEMI .)
    SUPER           reduce using rule 394 (breakStatement -> BREAK SEMI .)
    OP_INC          reduce using rule 394 (breakStatement -> BREAK SEMI .)
    OP_DEC          reduce using rule 394 (breakStatement -> BREAK SEMI .)
    NEW             reduce using rule 394 (breakStatement -> BREAK SEMI .)
    LESS            reduce using rule 394 (breakStatement -> BREAK SEMI .)
    LPAREN          reduce using rule 394 (breakStatement -> BREAK SEMI .)
    CharacterLiteral reduce using rule 394 (breakStatement -> BREAK SEMI .)
    StringLiteral   reduce using rule 394 (breakStatement -> BREAK SEMI .)
    NULL            reduce using rule 394 (breakStatement -> BREAK SEMI .)
    LONG_NUMBER     reduce using rule 394 (breakStatement -> BREAK SEMI .)
    LONG_HEX_NUMBER reduce using rule 394 (breakStatement -> BREAK SEMI .)
    NON_INTEGER_1   reduce using rule 394 (breakStatement -> BREAK SEMI .)
    NON_INTEGER_2   reduce using rule 394 (breakStatement -> BREAK SEMI .)
    NON_INTEGER_3   reduce using rule 394 (breakStatement -> BREAK SEMI .)
    NON_INTEGER_4   reduce using rule 394 (breakStatement -> BREAK SEMI .)
    NON_INTEGER_5   reduce using rule 394 (breakStatement -> BREAK SEMI .)
    NON_INTEGER_6   reduce using rule 394 (breakStatement -> BREAK SEMI .)
    TRUE            reduce using rule 394 (breakStatement -> BREAK SEMI .)
    FALSE           reduce using rule 394 (breakStatement -> BREAK SEMI .)
    INTERFACE       reduce using rule 394 (breakStatement -> BREAK SEMI .)
    ENUM            reduce using rule 394 (breakStatement -> BREAK SEMI .)
    CLASS           reduce using rule 394 (breakStatement -> BREAK SEMI .)
    BRPAREN         reduce using rule 394 (breakStatement -> BREAK SEMI .)
    CASE            reduce using rule 394 (breakStatement -> BREAK SEMI .)
    DEFAULT         reduce using rule 394 (breakStatement -> BREAK SEMI .)
    ELSE            reduce using rule 394 (breakStatement -> BREAK SEMI .)


state 558

    (427) explicitConstructorInvocation -> typeArguments THIS . LPAREN argumentList_opt RPAREN SEMI

    LPAREN          shift and go to state 753


state 559

    (426) explicitConstructorInvocation -> typeArguments SUPER . LPAREN argumentList RPAREN SEMI

    LPAREN          shift and go to state 754


state 560

    (346) labeldStatement -> label COLON . statement
    (304) statement -> . statementWithoutTrailingSubStatement
    (305) statement -> . labeldStatement
    (306) statement -> . ifThenStatement
    (307) statement -> . ifThenElseStatement
    (308) statement -> . whileStatement
    (309) statement -> . forStatement
    (310) statement -> . enhancedForStatement
    (311) statementWithoutTrailingSubStatement -> . block
    (312) statementWithoutTrailingSubStatement -> . expressionStatement
    (313) statementWithoutTrailingSubStatement -> . assertStatement
    (314) statementWithoutTrailingSubStatement -> . emptyStatement
    (315) statementWithoutTrailingSubStatement -> . switchStatement
    (316) statementWithoutTrailingSubStatement -> . doStatement
    (317) statementWithoutTrailingSubStatement -> . breakStatement
    (318) statementWithoutTrailingSubStatement -> . continueStatement
    (319) statementWithoutTrailingSubStatement -> . returnStatement
    (320) statementWithoutTrailingSubStatement -> . synchronizedStatement
    (321) statementWithoutTrailingSubStatement -> . throwStatment
    (322) statementWithoutTrailingSubStatement -> . tryStatement
    (323) statementWithoutTrailingSubStatement -> . tryStatementWithResources
    (346) labeldStatement -> . label COLON statement
    (349) ifThenStatement -> . IF LPAREN expression RPAREN statement
    (350) ifThenElseStatement -> . IF LPAREN expression RPAREN statementNoShortIf ELSE statement
    (352) whileStatement -> . WHILE LPAREN expression RPAREN statement
    (354) forStatement -> . FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement
    (367) enhancedForStatement -> . enhancedForStatementHead statement
    (283) block -> . BLPAREN blockStatements_opt BRPAREN
    (324) expressionStatement -> . statementExpression SEMI
    (325) expressionStatement -> . explicitConstructorInvocation
    (377) assertStatement -> . ASSERT expression SEMI
    (378) assertStatement -> . ASSERT expression COLON expression SEMI
    (379) emptyStatement -> . SEMI
    (380) switchStatement -> . SWITCH LPAREN expression RPAREN switchBlock
    (393) doStatement -> . DO statement WHILE LPAREN expression RPAREN SEMI
    (394) breakStatement -> . BREAK SEMI
    (395) breakStatement -> . BREAK Identifier SEMI
    (396) continueStatement -> . CONTINUE SEMI
    (397) continueStatement -> . CONTINUE Identifier SEMI
    (398) returnStatement -> . RETURN expression_opt SEMI
    (399) synchronizedStatement -> . SYNCHRONIZED LPAREN expression RPAREN block
    (400) throwStatment -> . THROW expression SEMI
    (401) tryStatement -> . TRY tryBlock catches
    (402) tryStatement -> . TRY tryBlock catches_opt finally
    (413) tryStatementWithResources -> . TRY resourceSpecification tryBlock catches_opt
    (414) tryStatementWithResources -> . TRY resourceSpecification tryBlock catches_opt finally
    (348) label -> . Identifier
    (369) enhancedForStatementHead -> . enhancedForStatementHeadInit COLON expression RPAREN
    (326) statementExpression -> . assignment
    (327) statementExpression -> . preIncrementExpression
    (328) statementExpression -> . preDecrementExpression
    (329) statementExpression -> . postIncrementExpression
    (330) statementExpression -> . postDecrementExpression
    (331) statementExpression -> . methodInvocation
    (332) statementExpression -> . classInstanceCreationExpression
    (424) explicitConstructorInvocation -> . THIS LPAREN argumentList_opt RPAREN SEMI
    (425) explicitConstructorInvocation -> . SUPER LPAREN argumentList_opt RPAREN SEMI
    (426) explicitConstructorInvocation -> . typeArguments SUPER LPAREN argumentList RPAREN SEMI
    (427) explicitConstructorInvocation -> . typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (428) explicitConstructorInvocation -> . primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI
    (429) explicitConstructorInvocation -> . name DOT SUPER LPAREN argumentList_opt RPAREN SEMI
    (430) explicitConstructorInvocation -> . primary DOT THIS LPAREN argumentList_opt RPAREN SEMI
    (431) explicitConstructorInvocation -> . name DOT THIS LPAREN argumentList_opt RPAREN SEMI
    (432) explicitConstructorInvocation -> . primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI
    (433) explicitConstructorInvocation -> . name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI
    (434) explicitConstructorInvocation -> . primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (435) explicitConstructorInvocation -> . name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (370) enhancedForStatementHeadInit -> . FOR LPAREN type Identifier arrays_opt
    (371) enhancedForStatementHeadInit -> . FOR LPAREN modifiers type Identifier arrays_opt
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (82) typeArguments -> . LESS typeArgumentList1
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (442) classInstanceCreationExpressionName -> . name DOT
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE

    IF              shift and go to state 349
    WHILE           shift and go to state 325
    FOR             shift and go to state 312
    BLPAREN         shift and go to state 120
    ASSERT          shift and go to state 336
    SEMI            shift and go to state 341
    SWITCH          shift and go to state 328
    DO              shift and go to state 335
    BREAK           shift and go to state 305
    CONTINUE        shift and go to state 318
    RETURN          shift and go to state 302
    SYNCHRONIZED    shift and go to state 518
    THROW           shift and go to state 354
    TRY             shift and go to state 314
    Identifier      shift and go to state 316
    THIS            shift and go to state 300
    SUPER           shift and go to state 353
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    NEW             shift and go to state 326
    LESS            shift and go to state 287
    LPAREN          shift and go to state 348
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    forStatement                   shift and go to state 286
    qualifiedName                  shift and go to state 64
    continueStatement              shift and go to state 304
    arrayCreationWithArrayInitializer shift and go to state 227
    switchStatement                shift and go to state 288
    primary                        shift and go to state 324
    arrayCreationWithoutArrayInitializer shift and go to state 232
    breakStatement                 shift and go to state 337
    tryStatementWithResources      shift and go to state 338
    assertStatement                shift and go to state 289
    synchronizedStatement          shift and go to state 339
    booleanLiteral                 shift and go to state 173
    doStatement                    shift and go to state 327
    postDecrementExpression        shift and go to state 306
    typeArguments                  shift and go to state 307
    literal                        shift and go to state 208
    labeldStatement                shift and go to state 329
    preIncrementExpression         shift and go to state 308
    label                          shift and go to state 309
    simpleName                     shift and go to state 66
    tryStatement                   shift and go to state 342
    throwStatment                  shift and go to state 310
    methodInvocation               shift and go to state 311
    statement                      shift and go to state 755
    arrayAccess                    shift and go to state 234
    ifThenElseStatement            shift and go to state 291
    fieldAccess                    shift and go to state 189
    statementWithoutTrailingSubStatement shift and go to state 344
    integerLiteral                 shift and go to state 183
    classInstanceCreationExpressionName shift and go to state 187
    FloatingPointLiteral           shift and go to state 214
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 346
    whileStatement                 shift and go to state 292
    enhancedForStatementHeadInit   shift and go to state 313
    postIncrementExpression        shift and go to state 293
    ifThenStatement                shift and go to state 347
    emptyStatement                 shift and go to state 295
    returnStatement                shift and go to state 297
    preDecrementExpression         shift and go to state 320
    postfixExpression              shift and go to state 298
    enhancedForStatementHead       shift and go to state 296
    name                           shift and go to state 517
    expressionStatement            shift and go to state 301
    primitiveType                  shift and go to state 219
    statementExpression            shift and go to state 350
    explicitConstructorInvocation  shift and go to state 351
    enhancedForStatement           shift and go to state 352
    block                          shift and go to state 321
    classInstanceCreationExpression shift and go to state 322

state 561

    (354) forStatement -> FOR LPAREN . forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement
    (370) enhancedForStatementHeadInit -> FOR LPAREN . type Identifier arrays_opt
    (371) enhancedForStatementHeadInit -> FOR LPAREN . modifiers type Identifier arrays_opt
    (356) forInit_opt -> . forInit
    (357) forInit_opt -> . empty
    (33) type -> . primitiveType
    (34) type -> . referenceType
    (122) modifiers -> . modifier
    (123) modifiers -> . modifiers modifier
    (358) forInit -> . statementExpressionList
    (359) forInit -> . localVariableDeclaration
    (631) empty -> .
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (44) referenceType -> . classOrInterfaceType
    (45) referenceType -> . arrayType
    (124) modifier -> . PUBLIC
    (125) modifier -> . PROTECTED
    (126) modifier -> . PRIVATE
    (127) modifier -> . STATIC
    (128) modifier -> . ABSTRACT
    (129) modifier -> . FINAL
    (130) modifier -> . NATIVE
    (131) modifier -> . SYNCHRONIZED
    (132) modifier -> . TRANSIENT
    (133) modifier -> . VOLATILE
    (134) modifier -> . STRICTFP
    (135) modifier -> . annotation
    (360) statementExpressionList -> . statementExpression
    (361) statementExpressionList -> . statementExpressionList COMMA statementExpression
    (295) localVariableDeclaration -> . type variableDeclarators
    (296) localVariableDeclaration -> . modifiers type variableDeclarators
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (54) arrayType -> . genericType arrays
    (55) arrayType -> . genericType DOT name arrays
    (56) arrayType -> . primitiveType arrays
    (57) arrayType -> . name arrays
    (270) annotation -> . normalAnnotation
    (271) annotation -> . markerAnnotation
    (272) annotation -> . singleMemberAnnotation
    (326) statementExpression -> . assignment
    (327) statementExpression -> . preIncrementExpression
    (328) statementExpression -> . preDecrementExpression
    (329) statementExpression -> . postIncrementExpression
    (330) statementExpression -> . postDecrementExpression
    (331) statementExpression -> . methodInvocation
    (332) statementExpression -> . classInstanceCreationExpression
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (273) normalAnnotation -> . annotationName LPAREN memberValuePairs_opt RPAREN
    (280) markerAnnotation -> . annotationName
    (281) singleMemberAnnotation -> . annotationName LPAREN singleMemberAnnotationMemberValue RPAREN
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (274) annotationName -> . AT name
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (442) classInstanceCreationExpressionName -> . name DOT
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE

    SEMI            reduce using rule 631 (empty -> .)
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    PUBLIC          shift and go to state 46
    PROTECTED       shift and go to state 6
    PRIVATE         shift and go to state 14
    STATIC          shift and go to state 7
    ABSTRACT        shift and go to state 5
    FINAL           shift and go to state 11
    NATIVE          shift and go to state 12
    SYNCHRONIZED    shift and go to state 2
    TRANSIENT       shift and go to state 19
    VOLATILE        shift and go to state 43
    STRICTFP        shift and go to state 18
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    SUPER           shift and go to state 765
    NEW             shift and go to state 326
    Identifier      shift and go to state 68
    AT              shift and go to state 155
    THIS            shift and go to state 181
    LPAREN          shift and go to state 348
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    localVariableDeclaration       shift and go to state 758
    fieldAccess                    shift and go to state 189
    primary                        shift and go to state 759
    arrayAccess                    shift and go to state 234
    singleMemberAnnotation         shift and go to state 8
    arrayType                      shift and go to state 269
    genericType                    shift and go to state 271
    markerAnnotation               shift and go to state 9
    postDecrementExpression        shift and go to state 306
    primaryNoNewArray              shift and go to state 178
    classOrInterfaceType           shift and go to state 272
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 308
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 311
    referenceType                  shift and go to state 273
    type                           shift and go to state 760
    integerLiteral                 shift and go to state 183
    empty                          shift and go to state 761
    classInstanceCreationExpressionName shift and go to state 187
    forInit                        shift and go to state 756
    assignment                     shift and go to state 346
    FloatingPointLiteral           shift and go to state 214
    postIncrementExpression        shift and go to state 293
    forInit_opt                    shift and go to state 763
    annotation                     shift and go to state 35
    postfixExpression              shift and go to state 298
    modifiers                      shift and go to state 762
    name                           shift and go to state 757
    annotationName                 shift and go to state 40
    primitiveType                  shift and go to state 334
    classOrInterface               shift and go to state 122
    statementExpression            shift and go to state 764
    normalAnnotation               shift and go to state 24
    preDecrementExpression         shift and go to state 320
    modifier                       shift and go to state 45
    arrayCreationWithArrayInitializer shift and go to state 227
    statementExpressionList        shift and go to state 766
    classInstanceCreationExpression shift and go to state 322

state 562

    (369) enhancedForStatementHead -> enhancedForStatementHeadInit COLON . expression RPAREN
    (456) expression -> . assignmentExpression
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    FloatingPointLiteral           shift and go to state 214
    shiftExpression                shift and go to state 552
    assignmentExpression           shift and go to state 543
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    fieldAccess                    shift and go to state 189
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 554
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    unaryExpressionNotPlusMinus    shift and go to state 397
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    expression                     shift and go to state 767
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 563

    (401) tryStatement -> TRY tryBlock . catches
    (402) tryStatement -> TRY tryBlock . catches_opt finally
    (406) catches -> . catchClause
    (407) catches -> . catches catchClause
    (404) catches_opt -> . catches
    (405) catches_opt -> . empty
    (408) catchClause -> . CATCH LPAREN catchFormalParameter RPAREN block
    (631) empty -> .

    CATCH           shift and go to state 770
    FINALLY         reduce using rule 631 (empty -> .)

    catches                        shift and go to state 768
    catchClause                    shift and go to state 769
    catches_opt                    shift and go to state 771
    empty                          shift and go to state 772

state 564

    (413) tryStatementWithResources -> TRY resourceSpecification . tryBlock catches_opt
    (414) tryStatementWithResources -> TRY resourceSpecification . tryBlock catches_opt finally
    (403) tryBlock -> . block
    (283) block -> . BLPAREN blockStatements_opt BRPAREN

    BLPAREN         shift and go to state 120

    tryBlock                       shift and go to state 773
    block                          shift and go to state 566

state 565

    (415) resourceSpecification -> LPAREN . resources semi_opt RPAREN
    (418) resources -> . resource
    (419) resources -> . resources trailingSemicolon resource
    (421) resource -> . type variableDeclaratorId ASS variableInitializer
    (422) resource -> . modifiers type variableDeclaratorId ASS variableInitializer
    (33) type -> . primitiveType
    (34) type -> . referenceType
    (122) modifiers -> . modifier
    (123) modifiers -> . modifiers modifier
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (44) referenceType -> . classOrInterfaceType
    (45) referenceType -> . arrayType
    (124) modifier -> . PUBLIC
    (125) modifier -> . PROTECTED
    (126) modifier -> . PRIVATE
    (127) modifier -> . STATIC
    (128) modifier -> . ABSTRACT
    (129) modifier -> . FINAL
    (130) modifier -> . NATIVE
    (131) modifier -> . SYNCHRONIZED
    (132) modifier -> . TRANSIENT
    (133) modifier -> . VOLATILE
    (134) modifier -> . STRICTFP
    (135) modifier -> . annotation
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (54) arrayType -> . genericType arrays
    (55) arrayType -> . genericType DOT name arrays
    (56) arrayType -> . primitiveType arrays
    (57) arrayType -> . name arrays
    (270) annotation -> . normalAnnotation
    (271) annotation -> . markerAnnotation
    (272) annotation -> . singleMemberAnnotation
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (273) normalAnnotation -> . annotationName LPAREN memberValuePairs_opt RPAREN
    (280) markerAnnotation -> . annotationName
    (281) singleMemberAnnotation -> . annotationName LPAREN singleMemberAnnotationMemberValue RPAREN
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (274) annotationName -> . AT name

    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    PUBLIC          shift and go to state 46
    PROTECTED       shift and go to state 6
    PRIVATE         shift and go to state 14
    STATIC          shift and go to state 7
    ABSTRACT        shift and go to state 5
    FINAL           shift and go to state 11
    NATIVE          shift and go to state 12
    SYNCHRONIZED    shift and go to state 2
    TRANSIENT       shift and go to state 19
    VOLATILE        shift and go to state 43
    STRICTFP        shift and go to state 18
    Identifier      shift and go to state 68
    AT              shift and go to state 155

    qualifiedName                  shift and go to state 64
    singleMemberAnnotation         shift and go to state 8
    arrayType                      shift and go to state 269
    genericType                    shift and go to state 271
    markerAnnotation               shift and go to state 9
    classOrInterfaceType           shift and go to state 272
    simpleName                     shift and go to state 66
    referenceType                  shift and go to state 273
    type                           shift and go to state 774
    resources                      shift and go to state 775
    annotation                     shift and go to state 35
    modifiers                      shift and go to state 776
    resource                       shift and go to state 777
    name                           shift and go to state 276
    annotationName                 shift and go to state 40
    primitiveType                  shift and go to state 277
    classOrInterface               shift and go to state 122
    normalAnnotation               shift and go to state 24
    modifier                       shift and go to state 45

state 566

    (403) tryBlock -> block .

    CATCH           reduce using rule 403 (tryBlock -> block .)
    FINALLY         reduce using rule 403 (tryBlock -> block .)
    IF              reduce using rule 403 (tryBlock -> block .)
    WHILE           reduce using rule 403 (tryBlock -> block .)
    FOR             reduce using rule 403 (tryBlock -> block .)
    BLPAREN         reduce using rule 403 (tryBlock -> block .)
    ASSERT          reduce using rule 403 (tryBlock -> block .)
    SEMI            reduce using rule 403 (tryBlock -> block .)
    SWITCH          reduce using rule 403 (tryBlock -> block .)
    DO              reduce using rule 403 (tryBlock -> block .)
    BREAK           reduce using rule 403 (tryBlock -> block .)
    CONTINUE        reduce using rule 403 (tryBlock -> block .)
    RETURN          reduce using rule 403 (tryBlock -> block .)
    SYNCHRONIZED    reduce using rule 403 (tryBlock -> block .)
    THROW           reduce using rule 403 (tryBlock -> block .)
    TRY             reduce using rule 403 (tryBlock -> block .)
    Identifier      reduce using rule 403 (tryBlock -> block .)
    AT              reduce using rule 403 (tryBlock -> block .)
    BOOLEAN         reduce using rule 403 (tryBlock -> block .)
    VOID            reduce using rule 403 (tryBlock -> block .)
    BYTE            reduce using rule 403 (tryBlock -> block .)
    SHORT           reduce using rule 403 (tryBlock -> block .)
    INT             reduce using rule 403 (tryBlock -> block .)
    LONG            reduce using rule 403 (tryBlock -> block .)
    CHAR            reduce using rule 403 (tryBlock -> block .)
    FLOAT           reduce using rule 403 (tryBlock -> block .)
    DOUBLE          reduce using rule 403 (tryBlock -> block .)
    PUBLIC          reduce using rule 403 (tryBlock -> block .)
    PROTECTED       reduce using rule 403 (tryBlock -> block .)
    PRIVATE         reduce using rule 403 (tryBlock -> block .)
    STATIC          reduce using rule 403 (tryBlock -> block .)
    ABSTRACT        reduce using rule 403 (tryBlock -> block .)
    FINAL           reduce using rule 403 (tryBlock -> block .)
    NATIVE          reduce using rule 403 (tryBlock -> block .)
    TRANSIENT       reduce using rule 403 (tryBlock -> block .)
    VOLATILE        reduce using rule 403 (tryBlock -> block .)
    STRICTFP        reduce using rule 403 (tryBlock -> block .)
    THIS            reduce using rule 403 (tryBlock -> block .)
    SUPER           reduce using rule 403 (tryBlock -> block .)
    OP_INC          reduce using rule 403 (tryBlock -> block .)
    OP_DEC          reduce using rule 403 (tryBlock -> block .)
    NEW             reduce using rule 403 (tryBlock -> block .)
    LESS            reduce using rule 403 (tryBlock -> block .)
    LPAREN          reduce using rule 403 (tryBlock -> block .)
    CharacterLiteral reduce using rule 403 (tryBlock -> block .)
    StringLiteral   reduce using rule 403 (tryBlock -> block .)
    NULL            reduce using rule 403 (tryBlock -> block .)
    LONG_NUMBER     reduce using rule 403 (tryBlock -> block .)
    LONG_HEX_NUMBER reduce using rule 403 (tryBlock -> block .)
    NON_INTEGER_1   reduce using rule 403 (tryBlock -> block .)
    NON_INTEGER_2   reduce using rule 403 (tryBlock -> block .)
    NON_INTEGER_3   reduce using rule 403 (tryBlock -> block .)
    NON_INTEGER_4   reduce using rule 403 (tryBlock -> block .)
    NON_INTEGER_5   reduce using rule 403 (tryBlock -> block .)
    NON_INTEGER_6   reduce using rule 403 (tryBlock -> block .)
    TRUE            reduce using rule 403 (tryBlock -> block .)
    FALSE           reduce using rule 403 (tryBlock -> block .)
    INTERFACE       reduce using rule 403 (tryBlock -> block .)
    ENUM            reduce using rule 403 (tryBlock -> block .)
    CLASS           reduce using rule 403 (tryBlock -> block .)
    BRPAREN         reduce using rule 403 (tryBlock -> block .)
    CASE            reduce using rule 403 (tryBlock -> block .)
    DEFAULT         reduce using rule 403 (tryBlock -> block .)
    ELSE            reduce using rule 403 (tryBlock -> block .)


state 567

    (397) continueStatement -> CONTINUE Identifier . SEMI

    SEMI            shift and go to state 778


state 568

    (396) continueStatement -> CONTINUE SEMI .

    IF              reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    WHILE           reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    FOR             reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    BLPAREN         reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    ASSERT          reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    SEMI            reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    SWITCH          reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    DO              reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    BREAK           reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    CONTINUE        reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    RETURN          reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    SYNCHRONIZED    reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    THROW           reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    TRY             reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    Identifier      reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    AT              reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    BOOLEAN         reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    VOID            reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    BYTE            reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    SHORT           reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    INT             reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    LONG            reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    CHAR            reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    FLOAT           reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    DOUBLE          reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    PUBLIC          reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    PROTECTED       reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    PRIVATE         reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    STATIC          reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    ABSTRACT        reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    FINAL           reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    NATIVE          reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    TRANSIENT       reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    VOLATILE        reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    STRICTFP        reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    THIS            reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    SUPER           reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    OP_INC          reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    OP_DEC          reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    NEW             reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    LESS            reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    LPAREN          reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    CharacterLiteral reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    StringLiteral   reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    NULL            reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    LONG_NUMBER     reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    LONG_HEX_NUMBER reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    NON_INTEGER_1   reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    NON_INTEGER_2   reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    NON_INTEGER_3   reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    NON_INTEGER_4   reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    NON_INTEGER_5   reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    NON_INTEGER_6   reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    TRUE            reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    FALSE           reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    INTERFACE       reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    ENUM            reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    CLASS           reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    BRPAREN         reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    CASE            reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    DEFAULT         reduce using rule 396 (continueStatement -> CONTINUE SEMI .)
    ELSE            reduce using rule 396 (continueStatement -> CONTINUE SEMI .)


state 569

    (283) block -> BLPAREN blockStatements_opt BRPAREN .

    IF              reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    WHILE           reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    FOR             reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    BLPAREN         reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    ASSERT          reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    SEMI            reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    SWITCH          reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    DO              reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    BREAK           reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    CONTINUE        reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    RETURN          reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    SYNCHRONIZED    reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    THROW           reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    TRY             reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    Identifier      reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    AT              reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    BOOLEAN         reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    VOID            reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    BYTE            reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    SHORT           reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    INT             reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    LONG            reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    CHAR            reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    FLOAT           reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    DOUBLE          reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    PUBLIC          reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    PROTECTED       reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    PRIVATE         reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    STATIC          reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    ABSTRACT        reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    FINAL           reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    NATIVE          reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    TRANSIENT       reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    VOLATILE        reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    STRICTFP        reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    THIS            reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    SUPER           reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    OP_INC          reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    OP_DEC          reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    NEW             reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    LESS            reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    LPAREN          reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    CharacterLiteral reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    StringLiteral   reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    NULL            reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    LONG_NUMBER     reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    LONG_HEX_NUMBER reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    NON_INTEGER_1   reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    NON_INTEGER_2   reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    NON_INTEGER_3   reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    NON_INTEGER_4   reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    NON_INTEGER_5   reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    NON_INTEGER_6   reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    TRUE            reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    FALSE           reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    INTERFACE       reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    ENUM            reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    CLASS           reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    BRPAREN         reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    CASE            reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    DEFAULT         reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    ELSE            reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    CATCH           reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)
    FINALLY         reduce using rule 283 (block -> BLPAREN blockStatements_opt BRPAREN .)


state 570

    (294) localVariableDeclarationStatement -> localVariableDeclaration SEMI .

    IF              reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    WHILE           reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    FOR             reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    BLPAREN         reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    ASSERT          reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    SEMI            reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    SWITCH          reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    DO              reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    BREAK           reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    CONTINUE        reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    RETURN          reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    SYNCHRONIZED    reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    THROW           reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    TRY             reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    Identifier      reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    AT              reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    BOOLEAN         reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    VOID            reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    BYTE            reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    SHORT           reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    INT             reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    LONG            reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    CHAR            reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    FLOAT           reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    DOUBLE          reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    PUBLIC          reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    PROTECTED       reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    PRIVATE         reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    STATIC          reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    ABSTRACT        reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    FINAL           reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    NATIVE          reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    TRANSIENT       reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    VOLATILE        reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    STRICTFP        reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    THIS            reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    SUPER           reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    OP_INC          reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    OP_DEC          reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    NEW             reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    LESS            reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    LPAREN          reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    CharacterLiteral reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    StringLiteral   reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    NULL            reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    LONG_NUMBER     reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    LONG_HEX_NUMBER reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    NON_INTEGER_1   reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    NON_INTEGER_2   reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    NON_INTEGER_3   reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    NON_INTEGER_4   reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    NON_INTEGER_5   reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    NON_INTEGER_6   reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    TRUE            reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    FALSE           reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    INTERFACE       reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    ENUM            reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    CLASS           reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    BRPAREN         reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    CASE            reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)
    DEFAULT         reduce using rule 294 (localVariableDeclarationStatement -> localVariableDeclaration SEMI .)


state 571

    (428) explicitConstructorInvocation -> primary DOT . SUPER LPAREN argumentList_opt RPAREN SEMI
    (430) explicitConstructorInvocation -> primary DOT . THIS LPAREN argumentList_opt RPAREN SEMI
    (432) explicitConstructorInvocation -> primary DOT . typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI
    (434) explicitConstructorInvocation -> primary DOT . typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (342) methodInvocation -> primary DOT . typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> primary DOT . Identifier LPAREN argumentList_opt RPAREN
    (438) classInstanceCreationExpression -> primary DOT . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> primary DOT . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> primary DOT . Identifier
    (82) typeArguments -> . LESS typeArgumentList1

    SUPER           shift and go to state 782
    THIS            shift and go to state 779
    Identifier      shift and go to state 781
    NEW             shift and go to state 650
    LESS            shift and go to state 287

    typeArguments                  shift and go to state 780

state 572

    (352) whileStatement -> WHILE LPAREN . expression RPAREN statement
    (456) expression -> . assignmentExpression
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    assignmentExpression           shift and go to state 543
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    fieldAccess                    shift and go to state 189
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 554
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    unaryExpressionNotPlusMinus    shift and go to state 397
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    expression                     shift and go to state 783
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 573

    (380) switchStatement -> SWITCH LPAREN . expression RPAREN switchBlock
    (456) expression -> . assignmentExpression
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    assignmentExpression           shift and go to state 543
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    fieldAccess                    shift and go to state 189
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 554
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    unaryExpressionNotPlusMinus    shift and go to state 397
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    expression                     shift and go to state 784
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 574

    (295) localVariableDeclaration -> type variableDeclarators .
    (298) variableDeclarators -> variableDeclarators . COMMA variableDeclarator

    SEMI            reduce using rule 295 (localVariableDeclaration -> type variableDeclarators .)
    COMMA           shift and go to state 706


state 575

    (301) variableDeclaratorId -> Identifier . arrays_opt
    (62) arrays_opt -> . arrays
    (63) arrays_opt -> . empty
    (59) arrays -> . array_loop
    (631) empty -> .
    (60) array_loop -> . array
    (61) array_loop -> . array_loop array
    (58) array -> . FLPAREN FRPAREN

    ASS             reduce using rule 631 (empty -> .)
    COMMA           reduce using rule 631 (empty -> .)
    SEMI            reduce using rule 631 (empty -> .)
    RPAREN          reduce using rule 631 (empty -> .)
    FLPAREN         shift and go to state 451

    arrays                         shift and go to state 698
    array                          shift and go to state 407
    empty                          shift and go to state 686
    arrays_opt                     shift and go to state 709
    array_loop                     shift and go to state 413

state 576

    (296) localVariableDeclaration -> modifiers type . variableDeclarators
    (297) variableDeclarators -> . variableDeclarator
    (298) variableDeclarators -> . variableDeclarators COMMA variableDeclarator
    (299) variableDeclarator -> . variableDeclaratorId
    (300) variableDeclarator -> . variableDeclaratorId ASS variableInitializer
    (301) variableDeclaratorId -> . Identifier arrays_opt

    Identifier      shift and go to state 575

    variableDeclarators            shift and go to state 785
    variableDeclaratorId           shift and go to state 496
    variableDeclarator             shift and go to state 498

state 577

    (56) arrayType -> primitiveType arrays .
    (606) primaryNoNewArray -> primitiveType arrays . DOT CLASS

    Identifier      reduce using rule 56 (arrayType -> primitiveType arrays .)
    MORE            reduce using rule 56 (arrayType -> primitiveType arrays .)
    COMMA           reduce using rule 56 (arrayType -> primitiveType arrays .)
    DOT             shift and go to state 665


state 578

    (393) doStatement -> DO statement . WHILE LPAREN expression RPAREN SEMI

    WHILE           shift and go to state 786


state 579

    (377) assertStatement -> ASSERT expression . SEMI
    (378) assertStatement -> ASSERT expression . COLON expression SEMI

    SEMI            shift and go to state 788
    COLON           shift and go to state 787


state 580

    (285) blockStatements -> blockStatements blockStatement .

    IF              reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    WHILE           reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    FOR             reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    BLPAREN         reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    ASSERT          reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    SEMI            reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    SWITCH          reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    DO              reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    BREAK           reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    CONTINUE        reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    RETURN          reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    SYNCHRONIZED    reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    THROW           reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    TRY             reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    Identifier      reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    AT              reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    BOOLEAN         reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    VOID            reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    BYTE            reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    SHORT           reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    INT             reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    LONG            reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    CHAR            reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    FLOAT           reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    DOUBLE          reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    PUBLIC          reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    PROTECTED       reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    PRIVATE         reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    STATIC          reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    ABSTRACT        reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    FINAL           reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    NATIVE          reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    TRANSIENT       reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    VOLATILE        reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    STRICTFP        reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    THIS            reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    SUPER           reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    OP_INC          reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    OP_DEC          reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    NEW             reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    LESS            reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    LPAREN          reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    CharacterLiteral reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    StringLiteral   reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    NULL            reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    LONG_NUMBER     reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    LONG_HEX_NUMBER reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    NON_INTEGER_1   reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    NON_INTEGER_2   reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    NON_INTEGER_3   reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    NON_INTEGER_4   reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    NON_INTEGER_5   reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    NON_INTEGER_6   reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    TRUE            reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    FALSE           reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    INTERFACE       reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    ENUM            reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    CLASS           reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    BRPAREN         reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    CASE            reduce using rule 285 (blockStatements -> blockStatements blockStatement .)
    DEFAULT         reduce using rule 285 (blockStatements -> blockStatements blockStatement .)


state 581

    (600) primaryNoNewArray -> LPAREN name . RPAREN
    (32) qualifiedName -> name . DOT simpleName
    (479) conditionalExpressionNotName -> name . QUES expression COLON conditionalExpression
    (585) postfixExpression -> name .
    (484) conditionalOrExpressionNotName -> name . OP_LOR conditionalAndExpression
    (489) conditionalAndExpressionNotName -> name . OP_LAND inclusiveOrExpression
    (602) primaryNoNewArray -> name . DOT THIS
    (603) primaryNoNewArray -> name . DOT SUPER
    (604) primaryNoNewArray -> name . DOT CLASS
    (605) primaryNoNewArray -> name . arrays DOT CLASS
    (494) inclusiveOrExpressionNotName -> name . VERTICAL exclusiveOrExpression
    (340) methodInvocation -> name . LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> name . DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> name . FLPAREN expression FRPAREN
    (499) exclusiveOrExpressionNotName -> name . CARET andExpression
    (442) classInstanceCreationExpressionName -> name . DOT
    (504) andExpressionNotName -> name . AND equalityExpression
    (511) equalityExpressionNotName -> name . OP_EQ instanceOfExpression
    (512) equalityExpressionNotName -> name . OP_NE instanceOfExpression
    (517) instanceOfExpressionNotName -> name . INSTANCEOF referenceType
    (528) relationalExpressionNotName -> name . LESS shiftExpression
    (529) relationalExpressionNotName -> name . OP_GE shiftExpression
    (530) relationalExpressionNotName -> name . MORE shiftExpression
    (531) relationalExpressionNotName -> name . OP_LE shiftExpression
    (540) shiftExpressionNotName -> name . OP_SHR additiveExpression
    (541) shiftExpressionNotName -> name . OP_SHL additiveExpression
    (542) shiftExpressionNotName -> name . OP_SHRR additiveExpression
    (549) additiveExpressionNotName -> name . PLUS multiplicativeExpression
    (550) additiveExpressionNotName -> name . DASH multiplicativeExpression
    (559) multiplicativeExpressionNotName -> name . MULT unaryExpression
    (560) multiplicativeExpressionNotName -> name . SLASH unaryExpression
    (561) multiplicativeExpressionNotName -> name . PERCENT unaryExpression
    (59) arrays -> . array_loop
    (60) array_loop -> . array
    (61) array_loop -> . array_loop array
    (58) array -> . FLPAREN FRPAREN

    RPAREN          shift and go to state 789
    DOT             shift and go to state 409
    QUES            shift and go to state 427
    OP_INC          reduce using rule 585 (postfixExpression -> name .)
    OP_DEC          reduce using rule 585 (postfixExpression -> name .)
    ASS             reduce using rule 585 (postfixExpression -> name .)
    ASS_ADD         reduce using rule 585 (postfixExpression -> name .)
    ASS_SUB         reduce using rule 585 (postfixExpression -> name .)
    ASS_MUL         reduce using rule 585 (postfixExpression -> name .)
    ASS_DIV         reduce using rule 585 (postfixExpression -> name .)
    ASS_AND         reduce using rule 585 (postfixExpression -> name .)
    ASS_OR          reduce using rule 585 (postfixExpression -> name .)
    ASS_XOR         reduce using rule 585 (postfixExpression -> name .)
    ASS_MOD         reduce using rule 585 (postfixExpression -> name .)
    ASS_SHL         reduce using rule 585 (postfixExpression -> name .)
    ASS_SHRR        reduce using rule 585 (postfixExpression -> name .)
    ASS_SHR         reduce using rule 585 (postfixExpression -> name .)
    OP_LOR          shift and go to state 412
    OP_LAND         shift and go to state 406
    VERTICAL        shift and go to state 416
    LPAREN          shift and go to state 404
    FLPAREN         shift and go to state 411
    CARET           shift and go to state 403
    AND             shift and go to state 423
    OP_EQ           shift and go to state 424
    OP_NE           shift and go to state 410
    INSTANCEOF      shift and go to state 428
    LESS            shift and go to state 405
    OP_GE           shift and go to state 425
    MORE            shift and go to state 429
    OP_LE           shift and go to state 408
    OP_SHR          shift and go to state 419
    OP_SHL          shift and go to state 421
    OP_SHRR         shift and go to state 418
    PLUS            shift and go to state 415
    DASH            shift and go to state 420
    MULT            shift and go to state 414
    SLASH           shift and go to state 422
    PERCENT         shift and go to state 417

    arrays                         shift and go to state 426
    array                          shift and go to state 407
    array_loop                     shift and go to state 413

state 582

    (349) ifThenStatement -> IF LPAREN . expression RPAREN statement
    (350) ifThenElseStatement -> IF LPAREN . expression RPAREN statementNoShortIf ELSE statement
    (456) expression -> . assignmentExpression
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    assignmentExpression           shift and go to state 543
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    fieldAccess                    shift and go to state 189
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 554
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    unaryExpressionNotPlusMinus    shift and go to state 397
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    expression                     shift and go to state 790
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 583

    (324) expressionStatement -> statementExpression SEMI .

    IF              reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    WHILE           reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    FOR             reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    BLPAREN         reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    ASSERT          reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    SEMI            reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    SWITCH          reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    DO              reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    BREAK           reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    CONTINUE        reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    RETURN          reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    SYNCHRONIZED    reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    THROW           reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    TRY             reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    Identifier      reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    AT              reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    BOOLEAN         reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    VOID            reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    BYTE            reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    SHORT           reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    INT             reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    LONG            reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    CHAR            reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    FLOAT           reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    DOUBLE          reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    PUBLIC          reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    PROTECTED       reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    PRIVATE         reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    STATIC          reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    ABSTRACT        reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    FINAL           reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    NATIVE          reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    TRANSIENT       reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    VOLATILE        reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    STRICTFP        reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    THIS            reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    SUPER           reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    OP_INC          reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    OP_DEC          reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    NEW             reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    LESS            reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    LPAREN          reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    CharacterLiteral reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    StringLiteral   reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    NULL            reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    LONG_NUMBER     reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    LONG_HEX_NUMBER reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    NON_INTEGER_1   reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    NON_INTEGER_2   reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    NON_INTEGER_3   reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    NON_INTEGER_4   reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    NON_INTEGER_5   reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    NON_INTEGER_6   reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    TRUE            reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    FALSE           reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    INTERFACE       reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    ENUM            reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    CLASS           reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    BRPAREN         reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    CASE            reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    DEFAULT         reduce using rule 324 (expressionStatement -> statementExpression SEMI .)
    ELSE            reduce using rule 324 (expressionStatement -> statementExpression SEMI .)


state 584

    (425) explicitConstructorInvocation -> SUPER LPAREN . argumentList_opt RPAREN SEMI
    (232) argumentList_opt -> . argumentList
    (233) argumentList_opt -> . empty
    (234) argumentList -> . expression
    (235) argumentList -> . argumentList COMMA expression
    (631) empty -> .
    (456) expression -> . assignmentExpression
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    RPAREN          reduce using rule 631 (empty -> .)
    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    argumentList                   shift and go to state 602
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    argumentList_opt               shift and go to state 791
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    assignmentExpression           shift and go to state 543
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    fieldAccess                    shift and go to state 189
    integerLiteral                 shift and go to state 183
    empty                          shift and go to state 601
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 554
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    unaryExpressionNotPlusMinus    shift and go to state 397
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    expression                     shift and go to state 600
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 585

    (343) methodInvocation -> SUPER DOT . typeArguments Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> SUPER DOT . Identifier LPAREN argumentList_opt RPAREN
    (446) fieldAccess -> SUPER DOT . Identifier
    (82) typeArguments -> . LESS typeArgumentList1

    Identifier      shift and go to state 792
    LESS            shift and go to state 287

    typeArguments                  shift and go to state 694

state 586

    (400) throwStatment -> THROW expression . SEMI

    SEMI            shift and go to state 793


state 587

    (51) genericType -> classOrInterface LESS MORE .

    DOT             reduce using rule 51 (genericType -> classOrInterface LESS MORE .)
    FLPAREN         reduce using rule 51 (genericType -> classOrInterface LESS MORE .)
    Identifier      reduce using rule 51 (genericType -> classOrInterface LESS MORE .)
    MORE            reduce using rule 51 (genericType -> classOrInterface LESS MORE .)
    COMMA           reduce using rule 51 (genericType -> classOrInterface LESS MORE .)
    IMPLEMENTS      reduce using rule 51 (genericType -> classOrInterface LESS MORE .)
    BLPAREN         reduce using rule 51 (genericType -> classOrInterface LESS MORE .)
    VERTICAL        reduce using rule 51 (genericType -> classOrInterface LESS MORE .)
    OP_SHRR         reduce using rule 51 (genericType -> classOrInterface LESS MORE .)
    OP_SHR          reduce using rule 51 (genericType -> classOrInterface LESS MORE .)
    RPAREN          reduce using rule 51 (genericType -> classOrInterface LESS MORE .)
    SEMI            reduce using rule 51 (genericType -> classOrInterface LESS MORE .)
    LPAREN          reduce using rule 51 (genericType -> classOrInterface LESS MORE .)
    INSTANCEOF      reduce using rule 51 (genericType -> classOrInterface LESS MORE .)
    OP_EQ           reduce using rule 51 (genericType -> classOrInterface LESS MORE .)
    OP_NE           reduce using rule 51 (genericType -> classOrInterface LESS MORE .)
    AND             reduce using rule 51 (genericType -> classOrInterface LESS MORE .)
    CARET           reduce using rule 51 (genericType -> classOrInterface LESS MORE .)
    OP_LAND         reduce using rule 51 (genericType -> classOrInterface LESS MORE .)
    QUES            reduce using rule 51 (genericType -> classOrInterface LESS MORE .)
    OP_LOR          reduce using rule 51 (genericType -> classOrInterface LESS MORE .)
    BRPAREN         reduce using rule 51 (genericType -> classOrInterface LESS MORE .)
    OP_ARRAY        reduce using rule 51 (genericType -> classOrInterface LESS MORE .)
    COLON           reduce using rule 51 (genericType -> classOrInterface LESS MORE .)
    FRPAREN         reduce using rule 51 (genericType -> classOrInterface LESS MORE .)


state 588

    (148) interfaceTypeList -> interfaceTypeList COMMA interfaceType .

    COMMA           reduce using rule 148 (interfaceTypeList -> interfaceTypeList COMMA interfaceType .)
    BLPAREN         reduce using rule 148 (interfaceTypeList -> interfaceTypeList COMMA interfaceType .)


state 589

    (49) classOrInterface -> genericType DOT name .
    (32) qualifiedName -> name . DOT simpleName

    LESS            reduce using rule 49 (classOrInterface -> genericType DOT name .)
    COMMA           reduce using rule 49 (classOrInterface -> genericType DOT name .)
    BLPAREN         reduce using rule 49 (classOrInterface -> genericType DOT name .)
    SEMI            reduce using rule 49 (classOrInterface -> genericType DOT name .)
    LPAREN          reduce using rule 49 (classOrInterface -> genericType DOT name .)
    FLPAREN         reduce using rule 49 (classOrInterface -> genericType DOT name .)
    RPAREN          reduce using rule 49 (classOrInterface -> genericType DOT name .)
    IMPLEMENTS      reduce using rule 49 (classOrInterface -> genericType DOT name .)
    DOT             shift and go to state 145


state 590

    (257) annotationMethodHeadName -> modifiers_opt typeParameters type . Identifier LPAREN

    Identifier      shift and go to state 794


state 591

    (258) annotationMethodHeadName -> modifiers_opt type Identifier . LPAREN
    (301) variableDeclaratorId -> Identifier . arrays_opt
    (62) arrays_opt -> . arrays
    (63) arrays_opt -> . empty
    (59) arrays -> . array_loop
    (631) empty -> .
    (60) array_loop -> . array
    (61) array_loop -> . array_loop array
    (58) array -> . FLPAREN FRPAREN

    LPAREN          shift and go to state 795
    ASS             reduce using rule 631 (empty -> .)
    SEMI            reduce using rule 631 (empty -> .)
    COMMA           reduce using rule 631 (empty -> .)
    FLPAREN         shift and go to state 451

    arrays                         shift and go to state 698
    array_loop                     shift and go to state 413
    arrays_opt                     shift and go to state 709
    array                          shift and go to state 407
    empty                          shift and go to state 686

state 592

    (254) annotationMethodHead -> annotationMethodHeadName formalParameterList_opt RPAREN . methodHeadExtendedDims annotationMethodHeadDefaultValue_opt
    (188) methodHeadExtendedDims -> . arrays_opt
    (62) arrays_opt -> . arrays
    (63) arrays_opt -> . empty
    (59) arrays -> . array_loop
    (631) empty -> .
    (60) array_loop -> . array
    (61) array_loop -> . array_loop array
    (58) array -> . FLPAREN FRPAREN

    DEFAULT         reduce using rule 631 (empty -> .)
    SEMI            reduce using rule 631 (empty -> .)
    FLPAREN         shift and go to state 451

    arrays                         shift and go to state 698
    empty                          shift and go to state 686
    array_loop                     shift and go to state 413
    array                          shift and go to state 407
    methodHeadExtendedDims         shift and go to state 796
    arrays_opt                     shift and go to state 700

state 593

    (21) typeImportOnDemandDeclaration -> IMPORT name DOT MULT SEMI .

    SEMI            reduce using rule 21 (typeImportOnDemandDeclaration -> IMPORT name DOT MULT SEMI .)
    IMPORT          reduce using rule 21 (typeImportOnDemandDeclaration -> IMPORT name DOT MULT SEMI .)
    AT              reduce using rule 21 (typeImportOnDemandDeclaration -> IMPORT name DOT MULT SEMI .)
    PUBLIC          reduce using rule 21 (typeImportOnDemandDeclaration -> IMPORT name DOT MULT SEMI .)
    PROTECTED       reduce using rule 21 (typeImportOnDemandDeclaration -> IMPORT name DOT MULT SEMI .)
    PRIVATE         reduce using rule 21 (typeImportOnDemandDeclaration -> IMPORT name DOT MULT SEMI .)
    STATIC          reduce using rule 21 (typeImportOnDemandDeclaration -> IMPORT name DOT MULT SEMI .)
    ABSTRACT        reduce using rule 21 (typeImportOnDemandDeclaration -> IMPORT name DOT MULT SEMI .)
    FINAL           reduce using rule 21 (typeImportOnDemandDeclaration -> IMPORT name DOT MULT SEMI .)
    NATIVE          reduce using rule 21 (typeImportOnDemandDeclaration -> IMPORT name DOT MULT SEMI .)
    SYNCHRONIZED    reduce using rule 21 (typeImportOnDemandDeclaration -> IMPORT name DOT MULT SEMI .)
    TRANSIENT       reduce using rule 21 (typeImportOnDemandDeclaration -> IMPORT name DOT MULT SEMI .)
    VOLATILE        reduce using rule 21 (typeImportOnDemandDeclaration -> IMPORT name DOT MULT SEMI .)
    STRICTFP        reduce using rule 21 (typeImportOnDemandDeclaration -> IMPORT name DOT MULT SEMI .)
    INTERFACE       reduce using rule 21 (typeImportOnDemandDeclaration -> IMPORT name DOT MULT SEMI .)
    ENUM            reduce using rule 21 (typeImportOnDemandDeclaration -> IMPORT name DOT MULT SEMI .)
    CLASS           reduce using rule 21 (typeImportOnDemandDeclaration -> IMPORT name DOT MULT SEMI .)
    $end            reduce using rule 21 (typeImportOnDemandDeclaration -> IMPORT name DOT MULT SEMI .)


state 594

    (23) staticImportOnDemandDeclaration -> IMPORT STATIC name DOT MULT . SEMI

    SEMI            shift and go to state 797


state 595

    (222) enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .

    SEMI            reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    AT              reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    PUBLIC          reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    PROTECTED       reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    PRIVATE         reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    STATIC          reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    ABSTRACT        reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    FINAL           reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    NATIVE          reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    SYNCHRONIZED    reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    TRANSIENT       reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    VOLATILE        reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    STRICTFP        reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    INTERFACE       reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    ENUM            reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    CLASS           reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    $end            reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    BLPAREN         reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    Identifier      reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    LESS            reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    BOOLEAN         reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    VOID            reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    BYTE            reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    SHORT           reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    INT             reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    LONG            reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    CHAR            reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    FLOAT           reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    DOUBLE          reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    BRPAREN         reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    IF              reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    WHILE           reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    FOR             reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    ASSERT          reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    SWITCH          reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    DO              reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    BREAK           reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    CONTINUE        reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    RETURN          reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    THROW           reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    TRY             reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    THIS            reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    SUPER           reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    OP_INC          reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    OP_DEC          reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    NEW             reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    LPAREN          reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    CharacterLiteral reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    StringLiteral   reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    NULL            reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    LONG_NUMBER     reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    LONG_HEX_NUMBER reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    NON_INTEGER_1   reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    NON_INTEGER_2   reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    NON_INTEGER_3   reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    NON_INTEGER_4   reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    NON_INTEGER_5   reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    NON_INTEGER_6   reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    TRUE            reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    FALSE           reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    CASE            reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)
    DEFAULT         reduce using rule 222 (enumBody -> BLPAREN enumConstants enumBodyDeclarations_opt BRPAREN .)


state 596

    (224) enumConstants -> enumConstants COMMA enumConstant .

    COMMA           reduce using rule 224 (enumConstants -> enumConstants COMMA enumConstant .)
    SEMI            reduce using rule 224 (enumConstants -> enumConstants COMMA enumConstant .)
    BRPAREN         reduce using rule 224 (enumConstants -> enumConstants COMMA enumConstant .)


state 597

    (221) enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt . BRPAREN

    BRPAREN         shift and go to state 798


state 598

    (220) enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .

    SEMI            reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    AT              reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    PUBLIC          reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    PROTECTED       reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    PRIVATE         reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    STATIC          reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    ABSTRACT        reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    FINAL           reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    NATIVE          reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    SYNCHRONIZED    reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    TRANSIENT       reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    VOLATILE        reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    STRICTFP        reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    INTERFACE       reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    ENUM            reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    CLASS           reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    $end            reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    BLPAREN         reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    Identifier      reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    LESS            reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    BOOLEAN         reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    VOID            reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    BYTE            reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    SHORT           reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    INT             reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    LONG            reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    CHAR            reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    FLOAT           reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    DOUBLE          reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    BRPAREN         reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    IF              reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    WHILE           reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    FOR             reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    ASSERT          reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    SWITCH          reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    DO              reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    BREAK           reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    CONTINUE        reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    RETURN          reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    THROW           reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    TRY             reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    THIS            reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    SUPER           reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    OP_INC          reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    OP_DEC          reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    NEW             reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    LPAREN          reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    CharacterLiteral reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    StringLiteral   reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    NULL            reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    LONG_NUMBER     reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    LONG_HEX_NUMBER reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    NON_INTEGER_1   reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    NON_INTEGER_2   reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    NON_INTEGER_3   reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    NON_INTEGER_4   reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    NON_INTEGER_5   reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    NON_INTEGER_6   reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    TRUE            reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    FALSE           reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    CASE            reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)
    DEFAULT         reduce using rule 220 (enumBody -> BLPAREN COMMA enumBodyDeclarations_opt BRPAREN .)


state 599

    (231) arguments -> LPAREN argumentList_opt . RPAREN

    RPAREN          shift and go to state 799


state 600

    (234) argumentList -> expression .

    RPAREN          reduce using rule 234 (argumentList -> expression .)
    COMMA           reduce using rule 234 (argumentList -> expression .)


state 601

    (233) argumentList_opt -> empty .

    RPAREN          reduce using rule 233 (argumentList_opt -> empty .)


state 602

    (232) argumentList_opt -> argumentList .
    (235) argumentList -> argumentList . COMMA expression

    RPAREN          reduce using rule 232 (argumentList_opt -> argumentList .)
    COMMA           shift and go to state 800


state 603

    (67) typeParameterList -> typeParameterList COMMA typeParameter .

    COMMA           reduce using rule 67 (typeParameterList -> typeParameterList COMMA typeParameter .)


state 604

    (75) typeParameterList1 -> typeParameterList COMMA typeParameter1 .

    EXTENDS         reduce using rule 75 (typeParameterList1 -> typeParameterList COMMA typeParameter1 .)
    IMPLEMENTS      reduce using rule 75 (typeParameterList1 -> typeParameterList COMMA typeParameter1 .)
    BLPAREN         reduce using rule 75 (typeParameterList1 -> typeParameterList COMMA typeParameter1 .)
    Identifier      reduce using rule 75 (typeParameterList1 -> typeParameterList COMMA typeParameter1 .)
    BOOLEAN         reduce using rule 75 (typeParameterList1 -> typeParameterList COMMA typeParameter1 .)
    VOID            reduce using rule 75 (typeParameterList1 -> typeParameterList COMMA typeParameter1 .)
    BYTE            reduce using rule 75 (typeParameterList1 -> typeParameterList COMMA typeParameter1 .)
    SHORT           reduce using rule 75 (typeParameterList1 -> typeParameterList COMMA typeParameter1 .)
    INT             reduce using rule 75 (typeParameterList1 -> typeParameterList COMMA typeParameter1 .)
    LONG            reduce using rule 75 (typeParameterList1 -> typeParameterList COMMA typeParameter1 .)
    CHAR            reduce using rule 75 (typeParameterList1 -> typeParameterList COMMA typeParameter1 .)
    FLOAT           reduce using rule 75 (typeParameterList1 -> typeParameterList COMMA typeParameter1 .)
    DOUBLE          reduce using rule 75 (typeParameterList1 -> typeParameterList COMMA typeParameter1 .)


state 605

    (78) typeParameter1 -> typeParametersHeaderName EXTENDS referenceType . additionalBoundList1
    (69) typeParameter -> typeParametersHeaderName EXTENDS referenceType .
    (70) typeParameter -> typeParametersHeaderName EXTENDS referenceType . additionalBoundList
    (91) referenceType1 -> referenceType . MORE
    (79) additionalBoundList1 -> . additionalBound1
    (80) additionalBoundList1 -> . additionalBoundList additionalBound1
    (71) additionalBoundList -> . additionalBound
    (72) additionalBoundList -> . additionalBoundList additionalBound
    (81) additionalBound1 -> . AND referenceType1
    (73) additionalBound -> . AND referenceType

    COMMA           reduce using rule 69 (typeParameter -> typeParametersHeaderName EXTENDS referenceType .)
    MORE            shift and go to state 716
    AND             shift and go to state 801

    additionalBound1               shift and go to state 802
    additionalBound                shift and go to state 803
    additionalBoundList            shift and go to state 804
    additionalBoundList1           shift and go to state 805

state 606

    (77) typeParameter1 -> typeParametersHeaderName EXTENDS referenceType1 .

    EXTENDS         reduce using rule 77 (typeParameter1 -> typeParametersHeaderName EXTENDS referenceType1 .)
    IMPLEMENTS      reduce using rule 77 (typeParameter1 -> typeParametersHeaderName EXTENDS referenceType1 .)
    BLPAREN         reduce using rule 77 (typeParameter1 -> typeParametersHeaderName EXTENDS referenceType1 .)
    Identifier      reduce using rule 77 (typeParameter1 -> typeParametersHeaderName EXTENDS referenceType1 .)
    BOOLEAN         reduce using rule 77 (typeParameter1 -> typeParametersHeaderName EXTENDS referenceType1 .)
    VOID            reduce using rule 77 (typeParameter1 -> typeParametersHeaderName EXTENDS referenceType1 .)
    BYTE            reduce using rule 77 (typeParameter1 -> typeParametersHeaderName EXTENDS referenceType1 .)
    SHORT           reduce using rule 77 (typeParameter1 -> typeParametersHeaderName EXTENDS referenceType1 .)
    INT             reduce using rule 77 (typeParameter1 -> typeParametersHeaderName EXTENDS referenceType1 .)
    LONG            reduce using rule 77 (typeParameter1 -> typeParametersHeaderName EXTENDS referenceType1 .)
    CHAR            reduce using rule 77 (typeParameter1 -> typeParametersHeaderName EXTENDS referenceType1 .)
    FLOAT           reduce using rule 77 (typeParameter1 -> typeParametersHeaderName EXTENDS referenceType1 .)
    DOUBLE          reduce using rule 77 (typeParameter1 -> typeParametersHeaderName EXTENDS referenceType1 .)


state 607

    (242) annotationTypeDeclarationHeadName -> modifiers AT INTERFACE Identifier typeParameters .

    EXTENDS         reduce using rule 242 (annotationTypeDeclarationHeadName -> modifiers AT INTERFACE Identifier typeParameters .)
    IMPLEMENTS      reduce using rule 242 (annotationTypeDeclarationHeadName -> modifiers AT INTERFACE Identifier typeParameters .)
    BLPAREN         reduce using rule 242 (annotationTypeDeclarationHeadName -> modifiers AT INTERFACE Identifier typeParameters .)


state 608

    (577) unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .

    MULT            reduce using rule 577 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    SLASH           reduce using rule 577 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    PERCENT         reduce using rule 577 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    PLUS            reduce using rule 577 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    DASH            reduce using rule 577 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    OP_SHR          reduce using rule 577 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    OP_SHL          reduce using rule 577 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    OP_SHRR         reduce using rule 577 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    LESS            reduce using rule 577 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    OP_GE           reduce using rule 577 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    MORE            reduce using rule 577 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    OP_LE           reduce using rule 577 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    INSTANCEOF      reduce using rule 577 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    OP_EQ           reduce using rule 577 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    OP_NE           reduce using rule 577 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    AND             reduce using rule 577 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    CARET           reduce using rule 577 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    VERTICAL        reduce using rule 577 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    OP_LAND         reduce using rule 577 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    QUES            reduce using rule 577 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    OP_LOR          reduce using rule 577 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    SEMI            reduce using rule 577 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    RPAREN          reduce using rule 577 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    COMMA           reduce using rule 577 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    BRPAREN         reduce using rule 577 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    COLON           reduce using rule 577 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)
    FRPAREN         reduce using rule 577 (unaryExpressionNotPlusMinus -> EXCLAMATION unaryExpression .)


state 609

    (564) unaryExpression -> PLUS unaryExpression .

    MULT            reduce using rule 564 (unaryExpression -> PLUS unaryExpression .)
    SLASH           reduce using rule 564 (unaryExpression -> PLUS unaryExpression .)
    PERCENT         reduce using rule 564 (unaryExpression -> PLUS unaryExpression .)
    PLUS            reduce using rule 564 (unaryExpression -> PLUS unaryExpression .)
    DASH            reduce using rule 564 (unaryExpression -> PLUS unaryExpression .)
    OP_SHR          reduce using rule 564 (unaryExpression -> PLUS unaryExpression .)
    OP_SHL          reduce using rule 564 (unaryExpression -> PLUS unaryExpression .)
    OP_SHRR         reduce using rule 564 (unaryExpression -> PLUS unaryExpression .)
    LESS            reduce using rule 564 (unaryExpression -> PLUS unaryExpression .)
    OP_GE           reduce using rule 564 (unaryExpression -> PLUS unaryExpression .)
    MORE            reduce using rule 564 (unaryExpression -> PLUS unaryExpression .)
    OP_LE           reduce using rule 564 (unaryExpression -> PLUS unaryExpression .)
    INSTANCEOF      reduce using rule 564 (unaryExpression -> PLUS unaryExpression .)
    OP_EQ           reduce using rule 564 (unaryExpression -> PLUS unaryExpression .)
    OP_NE           reduce using rule 564 (unaryExpression -> PLUS unaryExpression .)
    AND             reduce using rule 564 (unaryExpression -> PLUS unaryExpression .)
    CARET           reduce using rule 564 (unaryExpression -> PLUS unaryExpression .)
    VERTICAL        reduce using rule 564 (unaryExpression -> PLUS unaryExpression .)
    OP_LAND         reduce using rule 564 (unaryExpression -> PLUS unaryExpression .)
    QUES            reduce using rule 564 (unaryExpression -> PLUS unaryExpression .)
    OP_LOR          reduce using rule 564 (unaryExpression -> PLUS unaryExpression .)
    RPAREN          reduce using rule 564 (unaryExpression -> PLUS unaryExpression .)
    COMMA           reduce using rule 564 (unaryExpression -> PLUS unaryExpression .)
    BRPAREN         reduce using rule 564 (unaryExpression -> PLUS unaryExpression .)
    SEMI            reduce using rule 564 (unaryExpression -> PLUS unaryExpression .)
    COLON           reduce using rule 564 (unaryExpression -> PLUS unaryExpression .)
    FRPAREN         reduce using rule 564 (unaryExpression -> PLUS unaryExpression .)


state 610

    (576) unaryExpressionNotPlusMinus -> TILDE unaryExpression .

    MULT            reduce using rule 576 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    SLASH           reduce using rule 576 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    PERCENT         reduce using rule 576 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    PLUS            reduce using rule 576 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    DASH            reduce using rule 576 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    OP_SHR          reduce using rule 576 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    OP_SHL          reduce using rule 576 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    OP_SHRR         reduce using rule 576 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    LESS            reduce using rule 576 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    OP_GE           reduce using rule 576 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    MORE            reduce using rule 576 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    OP_LE           reduce using rule 576 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    INSTANCEOF      reduce using rule 576 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    OP_EQ           reduce using rule 576 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    OP_NE           reduce using rule 576 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    AND             reduce using rule 576 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    CARET           reduce using rule 576 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    VERTICAL        reduce using rule 576 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    OP_LAND         reduce using rule 576 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    QUES            reduce using rule 576 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    OP_LOR          reduce using rule 576 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    SEMI            reduce using rule 576 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    RPAREN          reduce using rule 576 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    COMMA           reduce using rule 576 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    BRPAREN         reduce using rule 576 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    COLON           reduce using rule 576 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)
    FRPAREN         reduce using rule 576 (unaryExpressionNotPlusMinus -> TILDE unaryExpression .)


state 611

    (602) primaryNoNewArray -> name DOT . THIS
    (603) primaryNoNewArray -> name DOT . SUPER
    (604) primaryNoNewArray -> name DOT . CLASS
    (32) qualifiedName -> name DOT . simpleName
    (341) methodInvocation -> name DOT . typeArguments Identifier LPAREN argumentList_opt RPAREN
    (442) classInstanceCreationExpressionName -> name DOT .
    (31) simpleName -> . Identifier
    (82) typeArguments -> . LESS typeArgumentList1

    THIS            shift and go to state 619
    SUPER           shift and go to state 621
    CLASS           shift and go to state 622
    NEW             reduce using rule 442 (classInstanceCreationExpressionName -> name DOT .)
    Identifier      shift and go to state 68
    LESS            shift and go to state 287

    simpleName                     shift and go to state 365
    typeArguments                  shift and go to state 620

state 612

    (565) unaryExpression -> DASH unaryExpression .

    MULT            reduce using rule 565 (unaryExpression -> DASH unaryExpression .)
    SLASH           reduce using rule 565 (unaryExpression -> DASH unaryExpression .)
    PERCENT         reduce using rule 565 (unaryExpression -> DASH unaryExpression .)
    PLUS            reduce using rule 565 (unaryExpression -> DASH unaryExpression .)
    DASH            reduce using rule 565 (unaryExpression -> DASH unaryExpression .)
    OP_SHR          reduce using rule 565 (unaryExpression -> DASH unaryExpression .)
    OP_SHL          reduce using rule 565 (unaryExpression -> DASH unaryExpression .)
    OP_SHRR         reduce using rule 565 (unaryExpression -> DASH unaryExpression .)
    LESS            reduce using rule 565 (unaryExpression -> DASH unaryExpression .)
    OP_GE           reduce using rule 565 (unaryExpression -> DASH unaryExpression .)
    MORE            reduce using rule 565 (unaryExpression -> DASH unaryExpression .)
    OP_LE           reduce using rule 565 (unaryExpression -> DASH unaryExpression .)
    INSTANCEOF      reduce using rule 565 (unaryExpression -> DASH unaryExpression .)
    OP_EQ           reduce using rule 565 (unaryExpression -> DASH unaryExpression .)
    OP_NE           reduce using rule 565 (unaryExpression -> DASH unaryExpression .)
    AND             reduce using rule 565 (unaryExpression -> DASH unaryExpression .)
    CARET           reduce using rule 565 (unaryExpression -> DASH unaryExpression .)
    VERTICAL        reduce using rule 565 (unaryExpression -> DASH unaryExpression .)
    OP_LAND         reduce using rule 565 (unaryExpression -> DASH unaryExpression .)
    QUES            reduce using rule 565 (unaryExpression -> DASH unaryExpression .)
    OP_LOR          reduce using rule 565 (unaryExpression -> DASH unaryExpression .)
    RPAREN          reduce using rule 565 (unaryExpression -> DASH unaryExpression .)
    COMMA           reduce using rule 565 (unaryExpression -> DASH unaryExpression .)
    BRPAREN         reduce using rule 565 (unaryExpression -> DASH unaryExpression .)
    SEMI            reduce using rule 565 (unaryExpression -> DASH unaryExpression .)
    COLON           reduce using rule 565 (unaryExpression -> DASH unaryExpression .)
    FRPAREN         reduce using rule 565 (unaryExpression -> DASH unaryExpression .)


state 613

    (448) arrayAccess -> primaryNoNewArray FLPAREN expression . FRPAREN

    FRPAREN         shift and go to state 806


state 614

    (499) exclusiveOrExpressionNotName -> name CARET andExpression .
    (501) andExpression -> andExpression . AND equalityExpression

    CARET           reduce using rule 499 (exclusiveOrExpressionNotName -> name CARET andExpression .)
    VERTICAL        reduce using rule 499 (exclusiveOrExpressionNotName -> name CARET andExpression .)
    OP_LAND         reduce using rule 499 (exclusiveOrExpressionNotName -> name CARET andExpression .)
    QUES            reduce using rule 499 (exclusiveOrExpressionNotName -> name CARET andExpression .)
    OP_LOR          reduce using rule 499 (exclusiveOrExpressionNotName -> name CARET andExpression .)
    RPAREN          reduce using rule 499 (exclusiveOrExpressionNotName -> name CARET andExpression .)
    COMMA           reduce using rule 499 (exclusiveOrExpressionNotName -> name CARET andExpression .)
    BRPAREN         reduce using rule 499 (exclusiveOrExpressionNotName -> name CARET andExpression .)
    SEMI            reduce using rule 499 (exclusiveOrExpressionNotName -> name CARET andExpression .)
    AND             shift and go to state 739


state 615

    (340) methodInvocation -> name LPAREN argumentList_opt . RPAREN

    RPAREN          shift and go to state 807


state 616

    (528) relationalExpressionNotName -> name LESS shiftExpression .
    (533) shiftExpression -> shiftExpression . OP_SHR additiveExpression
    (534) shiftExpression -> shiftExpression . OP_SHL additiveExpression
    (535) shiftExpression -> shiftExpression . OP_SHRR additiveExpression

    LESS            reduce using rule 528 (relationalExpressionNotName -> name LESS shiftExpression .)
    OP_GE           reduce using rule 528 (relationalExpressionNotName -> name LESS shiftExpression .)
    MORE            reduce using rule 528 (relationalExpressionNotName -> name LESS shiftExpression .)
    OP_LE           reduce using rule 528 (relationalExpressionNotName -> name LESS shiftExpression .)
    INSTANCEOF      reduce using rule 528 (relationalExpressionNotName -> name LESS shiftExpression .)
    OP_EQ           reduce using rule 528 (relationalExpressionNotName -> name LESS shiftExpression .)
    OP_NE           reduce using rule 528 (relationalExpressionNotName -> name LESS shiftExpression .)
    AND             reduce using rule 528 (relationalExpressionNotName -> name LESS shiftExpression .)
    CARET           reduce using rule 528 (relationalExpressionNotName -> name LESS shiftExpression .)
    VERTICAL        reduce using rule 528 (relationalExpressionNotName -> name LESS shiftExpression .)
    OP_LAND         reduce using rule 528 (relationalExpressionNotName -> name LESS shiftExpression .)
    QUES            reduce using rule 528 (relationalExpressionNotName -> name LESS shiftExpression .)
    OP_LOR          reduce using rule 528 (relationalExpressionNotName -> name LESS shiftExpression .)
    COMMA           reduce using rule 528 (relationalExpressionNotName -> name LESS shiftExpression .)
    BRPAREN         reduce using rule 528 (relationalExpressionNotName -> name LESS shiftExpression .)
    RPAREN          reduce using rule 528 (relationalExpressionNotName -> name LESS shiftExpression .)
    SEMI            reduce using rule 528 (relationalExpressionNotName -> name LESS shiftExpression .)
    OP_SHR          shift and go to state 750
    OP_SHL          shift and go to state 748
    OP_SHRR         shift and go to state 749


state 617

    (489) conditionalAndExpressionNotName -> name OP_LAND inclusiveOrExpression .
    (491) inclusiveOrExpression -> inclusiveOrExpression . VERTICAL exclusiveOrExpression

    OP_LAND         reduce using rule 489 (conditionalAndExpressionNotName -> name OP_LAND inclusiveOrExpression .)
    QUES            reduce using rule 489 (conditionalAndExpressionNotName -> name OP_LAND inclusiveOrExpression .)
    OP_LOR          reduce using rule 489 (conditionalAndExpressionNotName -> name OP_LAND inclusiveOrExpression .)
    SEMI            reduce using rule 489 (conditionalAndExpressionNotName -> name OP_LAND inclusiveOrExpression .)
    COMMA           reduce using rule 489 (conditionalAndExpressionNotName -> name OP_LAND inclusiveOrExpression .)
    BRPAREN         reduce using rule 489 (conditionalAndExpressionNotName -> name OP_LAND inclusiveOrExpression .)
    RPAREN          reduce using rule 489 (conditionalAndExpressionNotName -> name OP_LAND inclusiveOrExpression .)
    VERTICAL        shift and go to state 736


state 618

    (531) relationalExpressionNotName -> name OP_LE shiftExpression .
    (533) shiftExpression -> shiftExpression . OP_SHR additiveExpression
    (534) shiftExpression -> shiftExpression . OP_SHL additiveExpression
    (535) shiftExpression -> shiftExpression . OP_SHRR additiveExpression

    LESS            reduce using rule 531 (relationalExpressionNotName -> name OP_LE shiftExpression .)
    OP_GE           reduce using rule 531 (relationalExpressionNotName -> name OP_LE shiftExpression .)
    MORE            reduce using rule 531 (relationalExpressionNotName -> name OP_LE shiftExpression .)
    OP_LE           reduce using rule 531 (relationalExpressionNotName -> name OP_LE shiftExpression .)
    INSTANCEOF      reduce using rule 531 (relationalExpressionNotName -> name OP_LE shiftExpression .)
    OP_EQ           reduce using rule 531 (relationalExpressionNotName -> name OP_LE shiftExpression .)
    OP_NE           reduce using rule 531 (relationalExpressionNotName -> name OP_LE shiftExpression .)
    AND             reduce using rule 531 (relationalExpressionNotName -> name OP_LE shiftExpression .)
    CARET           reduce using rule 531 (relationalExpressionNotName -> name OP_LE shiftExpression .)
    VERTICAL        reduce using rule 531 (relationalExpressionNotName -> name OP_LE shiftExpression .)
    OP_LAND         reduce using rule 531 (relationalExpressionNotName -> name OP_LE shiftExpression .)
    QUES            reduce using rule 531 (relationalExpressionNotName -> name OP_LE shiftExpression .)
    OP_LOR          reduce using rule 531 (relationalExpressionNotName -> name OP_LE shiftExpression .)
    COMMA           reduce using rule 531 (relationalExpressionNotName -> name OP_LE shiftExpression .)
    BRPAREN         reduce using rule 531 (relationalExpressionNotName -> name OP_LE shiftExpression .)
    RPAREN          reduce using rule 531 (relationalExpressionNotName -> name OP_LE shiftExpression .)
    SEMI            reduce using rule 531 (relationalExpressionNotName -> name OP_LE shiftExpression .)
    OP_SHR          shift and go to state 750
    OP_SHL          shift and go to state 748
    OP_SHRR         shift and go to state 749


state 619

    (602) primaryNoNewArray -> name DOT THIS .

    FLPAREN         reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    DOT             reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    OP_INC          reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    OP_DEC          reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    MULT            reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    SLASH           reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    PERCENT         reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    PLUS            reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    DASH            reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    OP_SHR          reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    OP_SHL          reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    OP_SHRR         reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    LESS            reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    OP_GE           reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    MORE            reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    OP_LE           reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    INSTANCEOF      reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    OP_EQ           reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    OP_NE           reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    AND             reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    CARET           reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    VERTICAL        reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    OP_LAND         reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    QUES            reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    OP_LOR          reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    SEMI            reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    COLON           reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    COMMA           reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    RPAREN          reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    FRPAREN         reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    BRPAREN         reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    ASS             reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    ASS_ADD         reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    ASS_SUB         reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    ASS_MUL         reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    ASS_DIV         reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    ASS_AND         reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    ASS_OR          reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    ASS_XOR         reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    ASS_MOD         reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    ASS_SHL         reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    ASS_SHRR        reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    ASS_SHR         reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)


state 620

    (341) methodInvocation -> name DOT typeArguments . Identifier LPAREN argumentList_opt RPAREN

    Identifier      shift and go to state 808


state 621

    (603) primaryNoNewArray -> name DOT SUPER .

    FLPAREN         reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    DOT             reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    OP_INC          reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    OP_DEC          reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    MULT            reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    SLASH           reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    PERCENT         reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    PLUS            reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    DASH            reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    OP_SHR          reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    OP_SHL          reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    OP_SHRR         reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    LESS            reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    OP_GE           reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    MORE            reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    OP_LE           reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    INSTANCEOF      reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    OP_EQ           reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    OP_NE           reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    AND             reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    CARET           reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    VERTICAL        reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    OP_LAND         reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    QUES            reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    OP_LOR          reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    SEMI            reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    COLON           reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    COMMA           reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    RPAREN          reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    FRPAREN         reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    BRPAREN         reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    ASS             reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    ASS_ADD         reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    ASS_SUB         reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    ASS_MUL         reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    ASS_DIV         reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    ASS_AND         reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    ASS_OR          reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    ASS_XOR         reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    ASS_MOD         reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    ASS_SHL         reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    ASS_SHRR        reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    ASS_SHR         reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)


state 622

    (604) primaryNoNewArray -> name DOT CLASS .

    FLPAREN         reduce using rule 604 (primaryNoNewArray -> name DOT CLASS .)
    DOT             reduce using rule 604 (primaryNoNewArray -> name DOT CLASS .)
    OP_INC          reduce using rule 604 (primaryNoNewArray -> name DOT CLASS .)
    OP_DEC          reduce using rule 604 (primaryNoNewArray -> name DOT CLASS .)
    MULT            reduce using rule 604 (primaryNoNewArray -> name DOT CLASS .)
    SLASH           reduce using rule 604 (primaryNoNewArray -> name DOT CLASS .)
    PERCENT         reduce using rule 604 (primaryNoNewArray -> name DOT CLASS .)
    PLUS            reduce using rule 604 (primaryNoNewArray -> name DOT CLASS .)
    DASH            reduce using rule 604 (primaryNoNewArray -> name DOT CLASS .)
    OP_SHR          reduce using rule 604 (primaryNoNewArray -> name DOT CLASS .)
    OP_SHL          reduce using rule 604 (primaryNoNewArray -> name DOT CLASS .)
    OP_SHRR         reduce using rule 604 (primaryNoNewArray -> name DOT CLASS .)
    LESS            reduce using rule 604 (primaryNoNewArray -> name DOT CLASS .)
    OP_GE           reduce using rule 604 (primaryNoNewArray -> name DOT CLASS .)
    MORE            reduce using rule 604 (primaryNoNewArray -> name DOT CLASS .)
    OP_LE           reduce using rule 604 (primaryNoNewArray -> name DOT CLASS .)
    INSTANCEOF      reduce using rule 604 (primaryNoNewArray -> name DOT CLASS .)
    OP_EQ           reduce using rule 604 (primaryNoNewArray -> name DOT CLASS .)
    OP_NE           reduce using rule 604 (primaryNoNewArray -> name DOT CLASS .)
    AND             reduce using rule 604 (primaryNoNewArray -> name DOT CLASS .)
    CARET           reduce using rule 604 (primaryNoNewArray -> name DOT CLASS .)
    VERTICAL        reduce using rule 604 (primaryNoNewArray -> name DOT CLASS .)
    OP_LAND         reduce using rule 604 (primaryNoNewArray -> name DOT CLASS .)
    QUES            reduce using rule 604 (primaryNoNewArray -> name DOT CLASS .)
    OP_LOR          reduce using rule 604 (primaryNoNewArray -> name DOT CLASS .)
    SEMI            reduce using rule 604 (primaryNoNewArray -> name DOT CLASS .)
    COLON           reduce using rule 604 (primaryNoNewArray -> name DOT CLASS .)
    COMMA           reduce using rule 604 (primaryNoNewArray -> name DOT CLASS .)
    RPAREN          reduce using rule 604 (primaryNoNewArray -> name DOT CLASS .)
    FRPAREN         reduce using rule 604 (primaryNoNewArray -> name DOT CLASS .)
    BRPAREN         reduce using rule 604 (primaryNoNewArray -> name DOT CLASS .)
    ASS             reduce using rule 604 (primaryNoNewArray -> name DOT CLASS .)
    ASS_ADD         reduce using rule 604 (primaryNoNewArray -> name DOT CLASS .)
    ASS_SUB         reduce using rule 604 (primaryNoNewArray -> name DOT CLASS .)
    ASS_MUL         reduce using rule 604 (primaryNoNewArray -> name DOT CLASS .)
    ASS_DIV         reduce using rule 604 (primaryNoNewArray -> name DOT CLASS .)
    ASS_AND         reduce using rule 604 (primaryNoNewArray -> name DOT CLASS .)
    ASS_OR          reduce using rule 604 (primaryNoNewArray -> name DOT CLASS .)
    ASS_XOR         reduce using rule 604 (primaryNoNewArray -> name DOT CLASS .)
    ASS_MOD         reduce using rule 604 (primaryNoNewArray -> name DOT CLASS .)
    ASS_SHL         reduce using rule 604 (primaryNoNewArray -> name DOT CLASS .)
    ASS_SHRR        reduce using rule 604 (primaryNoNewArray -> name DOT CLASS .)
    ASS_SHR         reduce using rule 604 (primaryNoNewArray -> name DOT CLASS .)


state 623

    (512) equalityExpressionNotName -> name OP_NE instanceOfExpression .
    (514) instanceOfExpression -> instanceOfExpression . INSTANCEOF referenceType

    OP_EQ           reduce using rule 512 (equalityExpressionNotName -> name OP_NE instanceOfExpression .)
    OP_NE           reduce using rule 512 (equalityExpressionNotName -> name OP_NE instanceOfExpression .)
    AND             reduce using rule 512 (equalityExpressionNotName -> name OP_NE instanceOfExpression .)
    CARET           reduce using rule 512 (equalityExpressionNotName -> name OP_NE instanceOfExpression .)
    VERTICAL        reduce using rule 512 (equalityExpressionNotName -> name OP_NE instanceOfExpression .)
    OP_LAND         reduce using rule 512 (equalityExpressionNotName -> name OP_NE instanceOfExpression .)
    QUES            reduce using rule 512 (equalityExpressionNotName -> name OP_NE instanceOfExpression .)
    OP_LOR          reduce using rule 512 (equalityExpressionNotName -> name OP_NE instanceOfExpression .)
    COMMA           reduce using rule 512 (equalityExpressionNotName -> name OP_NE instanceOfExpression .)
    BRPAREN         reduce using rule 512 (equalityExpressionNotName -> name OP_NE instanceOfExpression .)
    RPAREN          reduce using rule 512 (equalityExpressionNotName -> name OP_NE instanceOfExpression .)
    SEMI            reduce using rule 512 (equalityExpressionNotName -> name OP_NE instanceOfExpression .)
    INSTANCEOF      shift and go to state 735


state 624

    (447) arrayAccess -> name FLPAREN expression . FRPAREN

    FRPAREN         shift and go to state 809


state 625

    (58) array -> FLPAREN FRPAREN .

    FLPAREN         reduce using rule 58 (array -> FLPAREN FRPAREN .)
    DOT             reduce using rule 58 (array -> FLPAREN FRPAREN .)
    Identifier      reduce using rule 58 (array -> FLPAREN FRPAREN .)
    RPAREN          reduce using rule 58 (array -> FLPAREN FRPAREN .)
    MORE            reduce using rule 58 (array -> FLPAREN FRPAREN .)
    COMMA           reduce using rule 58 (array -> FLPAREN FRPAREN .)
    COLON           reduce using rule 58 (array -> FLPAREN FRPAREN .)
    ASS             reduce using rule 58 (array -> FLPAREN FRPAREN .)
    SEMI            reduce using rule 58 (array -> FLPAREN FRPAREN .)
    THROWS          reduce using rule 58 (array -> FLPAREN FRPAREN .)
    BLPAREN         reduce using rule 58 (array -> FLPAREN FRPAREN .)
    OP_ARRAY        reduce using rule 58 (array -> FLPAREN FRPAREN .)
    VERTICAL        reduce using rule 58 (array -> FLPAREN FRPAREN .)
    DEFAULT         reduce using rule 58 (array -> FLPAREN FRPAREN .)
    AND             reduce using rule 58 (array -> FLPAREN FRPAREN .)
    INSTANCEOF      reduce using rule 58 (array -> FLPAREN FRPAREN .)
    OP_EQ           reduce using rule 58 (array -> FLPAREN FRPAREN .)
    OP_NE           reduce using rule 58 (array -> FLPAREN FRPAREN .)
    CARET           reduce using rule 58 (array -> FLPAREN FRPAREN .)
    OP_LAND         reduce using rule 58 (array -> FLPAREN FRPAREN .)
    QUES            reduce using rule 58 (array -> FLPAREN FRPAREN .)
    OP_LOR          reduce using rule 58 (array -> FLPAREN FRPAREN .)
    BRPAREN         reduce using rule 58 (array -> FLPAREN FRPAREN .)
    OP_SHR          reduce using rule 58 (array -> FLPAREN FRPAREN .)
    FRPAREN         reduce using rule 58 (array -> FLPAREN FRPAREN .)
    OP_SHRR         reduce using rule 58 (array -> FLPAREN FRPAREN .)


state 626

    (484) conditionalOrExpressionNotName -> name OP_LOR conditionalAndExpression .
    (486) conditionalAndExpression -> conditionalAndExpression . OP_LAND inclusiveOrExpression

    QUES            reduce using rule 484 (conditionalOrExpressionNotName -> name OP_LOR conditionalAndExpression .)
    OP_LOR          reduce using rule 484 (conditionalOrExpressionNotName -> name OP_LOR conditionalAndExpression .)
    RPAREN          reduce using rule 484 (conditionalOrExpressionNotName -> name OP_LOR conditionalAndExpression .)
    COMMA           reduce using rule 484 (conditionalOrExpressionNotName -> name OP_LOR conditionalAndExpression .)
    BRPAREN         reduce using rule 484 (conditionalOrExpressionNotName -> name OP_LOR conditionalAndExpression .)
    SEMI            reduce using rule 484 (conditionalOrExpressionNotName -> name OP_LOR conditionalAndExpression .)
    OP_LAND         shift and go to state 729


state 627

    (61) array_loop -> array_loop array .

    FLPAREN         reduce using rule 61 (array_loop -> array_loop array .)
    Identifier      reduce using rule 61 (array_loop -> array_loop array .)
    OP_ARRAY        reduce using rule 61 (array_loop -> array_loop array .)
    INSTANCEOF      reduce using rule 61 (array_loop -> array_loop array .)
    OP_EQ           reduce using rule 61 (array_loop -> array_loop array .)
    OP_NE           reduce using rule 61 (array_loop -> array_loop array .)
    AND             reduce using rule 61 (array_loop -> array_loop array .)
    CARET           reduce using rule 61 (array_loop -> array_loop array .)
    VERTICAL        reduce using rule 61 (array_loop -> array_loop array .)
    OP_LAND         reduce using rule 61 (array_loop -> array_loop array .)
    QUES            reduce using rule 61 (array_loop -> array_loop array .)
    OP_LOR          reduce using rule 61 (array_loop -> array_loop array .)
    RPAREN          reduce using rule 61 (array_loop -> array_loop array .)
    COMMA           reduce using rule 61 (array_loop -> array_loop array .)
    BRPAREN         reduce using rule 61 (array_loop -> array_loop array .)
    SEMI            reduce using rule 61 (array_loop -> array_loop array .)
    COLON           reduce using rule 61 (array_loop -> array_loop array .)
    FRPAREN         reduce using rule 61 (array_loop -> array_loop array .)
    DEFAULT         reduce using rule 61 (array_loop -> array_loop array .)
    DOT             reduce using rule 61 (array_loop -> array_loop array .)
    MORE            reduce using rule 61 (array_loop -> array_loop array .)
    ASS             reduce using rule 61 (array_loop -> array_loop array .)
    OP_SHR          reduce using rule 61 (array_loop -> array_loop array .)
    OP_SHRR         reduce using rule 61 (array_loop -> array_loop array .)
    THROWS          reduce using rule 61 (array_loop -> array_loop array .)
    BLPAREN         reduce using rule 61 (array_loop -> array_loop array .)


state 628

    (559) multiplicativeExpressionNotName -> name MULT unaryExpression .

    MULT            reduce using rule 559 (multiplicativeExpressionNotName -> name MULT unaryExpression .)
    SLASH           reduce using rule 559 (multiplicativeExpressionNotName -> name MULT unaryExpression .)
    PERCENT         reduce using rule 559 (multiplicativeExpressionNotName -> name MULT unaryExpression .)
    PLUS            reduce using rule 559 (multiplicativeExpressionNotName -> name MULT unaryExpression .)
    DASH            reduce using rule 559 (multiplicativeExpressionNotName -> name MULT unaryExpression .)
    OP_SHR          reduce using rule 559 (multiplicativeExpressionNotName -> name MULT unaryExpression .)
    OP_SHL          reduce using rule 559 (multiplicativeExpressionNotName -> name MULT unaryExpression .)
    OP_SHRR         reduce using rule 559 (multiplicativeExpressionNotName -> name MULT unaryExpression .)
    LESS            reduce using rule 559 (multiplicativeExpressionNotName -> name MULT unaryExpression .)
    OP_GE           reduce using rule 559 (multiplicativeExpressionNotName -> name MULT unaryExpression .)
    MORE            reduce using rule 559 (multiplicativeExpressionNotName -> name MULT unaryExpression .)
    OP_LE           reduce using rule 559 (multiplicativeExpressionNotName -> name MULT unaryExpression .)
    INSTANCEOF      reduce using rule 559 (multiplicativeExpressionNotName -> name MULT unaryExpression .)
    OP_EQ           reduce using rule 559 (multiplicativeExpressionNotName -> name MULT unaryExpression .)
    OP_NE           reduce using rule 559 (multiplicativeExpressionNotName -> name MULT unaryExpression .)
    AND             reduce using rule 559 (multiplicativeExpressionNotName -> name MULT unaryExpression .)
    CARET           reduce using rule 559 (multiplicativeExpressionNotName -> name MULT unaryExpression .)
    VERTICAL        reduce using rule 559 (multiplicativeExpressionNotName -> name MULT unaryExpression .)
    OP_LAND         reduce using rule 559 (multiplicativeExpressionNotName -> name MULT unaryExpression .)
    QUES            reduce using rule 559 (multiplicativeExpressionNotName -> name MULT unaryExpression .)
    OP_LOR          reduce using rule 559 (multiplicativeExpressionNotName -> name MULT unaryExpression .)
    SEMI            reduce using rule 559 (multiplicativeExpressionNotName -> name MULT unaryExpression .)
    RPAREN          reduce using rule 559 (multiplicativeExpressionNotName -> name MULT unaryExpression .)
    COMMA           reduce using rule 559 (multiplicativeExpressionNotName -> name MULT unaryExpression .)
    BRPAREN         reduce using rule 559 (multiplicativeExpressionNotName -> name MULT unaryExpression .)


state 629

    (549) additiveExpressionNotName -> name PLUS multiplicativeExpression .
    (552) multiplicativeExpression -> multiplicativeExpression . MULT unaryExpression
    (553) multiplicativeExpression -> multiplicativeExpression . SLASH unaryExpression
    (554) multiplicativeExpression -> multiplicativeExpression . PERCENT unaryExpression

    PLUS            reduce using rule 549 (additiveExpressionNotName -> name PLUS multiplicativeExpression .)
    DASH            reduce using rule 549 (additiveExpressionNotName -> name PLUS multiplicativeExpression .)
    OP_SHR          reduce using rule 549 (additiveExpressionNotName -> name PLUS multiplicativeExpression .)
    OP_SHL          reduce using rule 549 (additiveExpressionNotName -> name PLUS multiplicativeExpression .)
    OP_SHRR         reduce using rule 549 (additiveExpressionNotName -> name PLUS multiplicativeExpression .)
    LESS            reduce using rule 549 (additiveExpressionNotName -> name PLUS multiplicativeExpression .)
    OP_GE           reduce using rule 549 (additiveExpressionNotName -> name PLUS multiplicativeExpression .)
    MORE            reduce using rule 549 (additiveExpressionNotName -> name PLUS multiplicativeExpression .)
    OP_LE           reduce using rule 549 (additiveExpressionNotName -> name PLUS multiplicativeExpression .)
    INSTANCEOF      reduce using rule 549 (additiveExpressionNotName -> name PLUS multiplicativeExpression .)
    OP_EQ           reduce using rule 549 (additiveExpressionNotName -> name PLUS multiplicativeExpression .)
    OP_NE           reduce using rule 549 (additiveExpressionNotName -> name PLUS multiplicativeExpression .)
    AND             reduce using rule 549 (additiveExpressionNotName -> name PLUS multiplicativeExpression .)
    CARET           reduce using rule 549 (additiveExpressionNotName -> name PLUS multiplicativeExpression .)
    VERTICAL        reduce using rule 549 (additiveExpressionNotName -> name PLUS multiplicativeExpression .)
    OP_LAND         reduce using rule 549 (additiveExpressionNotName -> name PLUS multiplicativeExpression .)
    QUES            reduce using rule 549 (additiveExpressionNotName -> name PLUS multiplicativeExpression .)
    OP_LOR          reduce using rule 549 (additiveExpressionNotName -> name PLUS multiplicativeExpression .)
    RPAREN          reduce using rule 549 (additiveExpressionNotName -> name PLUS multiplicativeExpression .)
    COMMA           reduce using rule 549 (additiveExpressionNotName -> name PLUS multiplicativeExpression .)
    BRPAREN         reduce using rule 549 (additiveExpressionNotName -> name PLUS multiplicativeExpression .)
    SEMI            reduce using rule 549 (additiveExpressionNotName -> name PLUS multiplicativeExpression .)
    MULT            shift and go to state 747
    SLASH           shift and go to state 746
    PERCENT         shift and go to state 745


state 630

    (494) inclusiveOrExpressionNotName -> name VERTICAL exclusiveOrExpression .
    (496) exclusiveOrExpression -> exclusiveOrExpression . CARET andExpression

    VERTICAL        reduce using rule 494 (inclusiveOrExpressionNotName -> name VERTICAL exclusiveOrExpression .)
    OP_LAND         reduce using rule 494 (inclusiveOrExpressionNotName -> name VERTICAL exclusiveOrExpression .)
    QUES            reduce using rule 494 (inclusiveOrExpressionNotName -> name VERTICAL exclusiveOrExpression .)
    OP_LOR          reduce using rule 494 (inclusiveOrExpressionNotName -> name VERTICAL exclusiveOrExpression .)
    RPAREN          reduce using rule 494 (inclusiveOrExpressionNotName -> name VERTICAL exclusiveOrExpression .)
    SEMI            reduce using rule 494 (inclusiveOrExpressionNotName -> name VERTICAL exclusiveOrExpression .)
    COMMA           reduce using rule 494 (inclusiveOrExpressionNotName -> name VERTICAL exclusiveOrExpression .)
    BRPAREN         reduce using rule 494 (inclusiveOrExpressionNotName -> name VERTICAL exclusiveOrExpression .)
    CARET           shift and go to state 744


state 631

    (561) multiplicativeExpressionNotName -> name PERCENT unaryExpression .

    MULT            reduce using rule 561 (multiplicativeExpressionNotName -> name PERCENT unaryExpression .)
    SLASH           reduce using rule 561 (multiplicativeExpressionNotName -> name PERCENT unaryExpression .)
    PERCENT         reduce using rule 561 (multiplicativeExpressionNotName -> name PERCENT unaryExpression .)
    PLUS            reduce using rule 561 (multiplicativeExpressionNotName -> name PERCENT unaryExpression .)
    DASH            reduce using rule 561 (multiplicativeExpressionNotName -> name PERCENT unaryExpression .)
    OP_SHR          reduce using rule 561 (multiplicativeExpressionNotName -> name PERCENT unaryExpression .)
    OP_SHL          reduce using rule 561 (multiplicativeExpressionNotName -> name PERCENT unaryExpression .)
    OP_SHRR         reduce using rule 561 (multiplicativeExpressionNotName -> name PERCENT unaryExpression .)
    LESS            reduce using rule 561 (multiplicativeExpressionNotName -> name PERCENT unaryExpression .)
    OP_GE           reduce using rule 561 (multiplicativeExpressionNotName -> name PERCENT unaryExpression .)
    MORE            reduce using rule 561 (multiplicativeExpressionNotName -> name PERCENT unaryExpression .)
    OP_LE           reduce using rule 561 (multiplicativeExpressionNotName -> name PERCENT unaryExpression .)
    INSTANCEOF      reduce using rule 561 (multiplicativeExpressionNotName -> name PERCENT unaryExpression .)
    OP_EQ           reduce using rule 561 (multiplicativeExpressionNotName -> name PERCENT unaryExpression .)
    OP_NE           reduce using rule 561 (multiplicativeExpressionNotName -> name PERCENT unaryExpression .)
    AND             reduce using rule 561 (multiplicativeExpressionNotName -> name PERCENT unaryExpression .)
    CARET           reduce using rule 561 (multiplicativeExpressionNotName -> name PERCENT unaryExpression .)
    VERTICAL        reduce using rule 561 (multiplicativeExpressionNotName -> name PERCENT unaryExpression .)
    OP_LAND         reduce using rule 561 (multiplicativeExpressionNotName -> name PERCENT unaryExpression .)
    QUES            reduce using rule 561 (multiplicativeExpressionNotName -> name PERCENT unaryExpression .)
    OP_LOR          reduce using rule 561 (multiplicativeExpressionNotName -> name PERCENT unaryExpression .)
    SEMI            reduce using rule 561 (multiplicativeExpressionNotName -> name PERCENT unaryExpression .)
    RPAREN          reduce using rule 561 (multiplicativeExpressionNotName -> name PERCENT unaryExpression .)
    COMMA           reduce using rule 561 (multiplicativeExpressionNotName -> name PERCENT unaryExpression .)
    BRPAREN         reduce using rule 561 (multiplicativeExpressionNotName -> name PERCENT unaryExpression .)


state 632

    (542) shiftExpressionNotName -> name OP_SHRR additiveExpression .
    (544) additiveExpression -> additiveExpression . PLUS multiplicativeExpression
    (545) additiveExpression -> additiveExpression . DASH multiplicativeExpression

    OP_SHR          reduce using rule 542 (shiftExpressionNotName -> name OP_SHRR additiveExpression .)
    OP_SHL          reduce using rule 542 (shiftExpressionNotName -> name OP_SHRR additiveExpression .)
    OP_SHRR         reduce using rule 542 (shiftExpressionNotName -> name OP_SHRR additiveExpression .)
    LESS            reduce using rule 542 (shiftExpressionNotName -> name OP_SHRR additiveExpression .)
    OP_GE           reduce using rule 542 (shiftExpressionNotName -> name OP_SHRR additiveExpression .)
    MORE            reduce using rule 542 (shiftExpressionNotName -> name OP_SHRR additiveExpression .)
    OP_LE           reduce using rule 542 (shiftExpressionNotName -> name OP_SHRR additiveExpression .)
    INSTANCEOF      reduce using rule 542 (shiftExpressionNotName -> name OP_SHRR additiveExpression .)
    OP_EQ           reduce using rule 542 (shiftExpressionNotName -> name OP_SHRR additiveExpression .)
    OP_NE           reduce using rule 542 (shiftExpressionNotName -> name OP_SHRR additiveExpression .)
    AND             reduce using rule 542 (shiftExpressionNotName -> name OP_SHRR additiveExpression .)
    CARET           reduce using rule 542 (shiftExpressionNotName -> name OP_SHRR additiveExpression .)
    VERTICAL        reduce using rule 542 (shiftExpressionNotName -> name OP_SHRR additiveExpression .)
    OP_LAND         reduce using rule 542 (shiftExpressionNotName -> name OP_SHRR additiveExpression .)
    QUES            reduce using rule 542 (shiftExpressionNotName -> name OP_SHRR additiveExpression .)
    OP_LOR          reduce using rule 542 (shiftExpressionNotName -> name OP_SHRR additiveExpression .)
    RPAREN          reduce using rule 542 (shiftExpressionNotName -> name OP_SHRR additiveExpression .)
    COMMA           reduce using rule 542 (shiftExpressionNotName -> name OP_SHRR additiveExpression .)
    BRPAREN         reduce using rule 542 (shiftExpressionNotName -> name OP_SHRR additiveExpression .)
    SEMI            reduce using rule 542 (shiftExpressionNotName -> name OP_SHRR additiveExpression .)
    PLUS            shift and go to state 737
    DASH            shift and go to state 738


state 633

    (540) shiftExpressionNotName -> name OP_SHR additiveExpression .
    (544) additiveExpression -> additiveExpression . PLUS multiplicativeExpression
    (545) additiveExpression -> additiveExpression . DASH multiplicativeExpression

    OP_SHR          reduce using rule 540 (shiftExpressionNotName -> name OP_SHR additiveExpression .)
    OP_SHL          reduce using rule 540 (shiftExpressionNotName -> name OP_SHR additiveExpression .)
    OP_SHRR         reduce using rule 540 (shiftExpressionNotName -> name OP_SHR additiveExpression .)
    LESS            reduce using rule 540 (shiftExpressionNotName -> name OP_SHR additiveExpression .)
    OP_GE           reduce using rule 540 (shiftExpressionNotName -> name OP_SHR additiveExpression .)
    MORE            reduce using rule 540 (shiftExpressionNotName -> name OP_SHR additiveExpression .)
    OP_LE           reduce using rule 540 (shiftExpressionNotName -> name OP_SHR additiveExpression .)
    INSTANCEOF      reduce using rule 540 (shiftExpressionNotName -> name OP_SHR additiveExpression .)
    OP_EQ           reduce using rule 540 (shiftExpressionNotName -> name OP_SHR additiveExpression .)
    OP_NE           reduce using rule 540 (shiftExpressionNotName -> name OP_SHR additiveExpression .)
    AND             reduce using rule 540 (shiftExpressionNotName -> name OP_SHR additiveExpression .)
    CARET           reduce using rule 540 (shiftExpressionNotName -> name OP_SHR additiveExpression .)
    VERTICAL        reduce using rule 540 (shiftExpressionNotName -> name OP_SHR additiveExpression .)
    OP_LAND         reduce using rule 540 (shiftExpressionNotName -> name OP_SHR additiveExpression .)
    QUES            reduce using rule 540 (shiftExpressionNotName -> name OP_SHR additiveExpression .)
    OP_LOR          reduce using rule 540 (shiftExpressionNotName -> name OP_SHR additiveExpression .)
    RPAREN          reduce using rule 540 (shiftExpressionNotName -> name OP_SHR additiveExpression .)
    COMMA           reduce using rule 540 (shiftExpressionNotName -> name OP_SHR additiveExpression .)
    BRPAREN         reduce using rule 540 (shiftExpressionNotName -> name OP_SHR additiveExpression .)
    SEMI            reduce using rule 540 (shiftExpressionNotName -> name OP_SHR additiveExpression .)
    PLUS            shift and go to state 737
    DASH            shift and go to state 738


state 634

    (550) additiveExpressionNotName -> name DASH multiplicativeExpression .
    (552) multiplicativeExpression -> multiplicativeExpression . MULT unaryExpression
    (553) multiplicativeExpression -> multiplicativeExpression . SLASH unaryExpression
    (554) multiplicativeExpression -> multiplicativeExpression . PERCENT unaryExpression

    PLUS            reduce using rule 550 (additiveExpressionNotName -> name DASH multiplicativeExpression .)
    DASH            reduce using rule 550 (additiveExpressionNotName -> name DASH multiplicativeExpression .)
    OP_SHR          reduce using rule 550 (additiveExpressionNotName -> name DASH multiplicativeExpression .)
    OP_SHL          reduce using rule 550 (additiveExpressionNotName -> name DASH multiplicativeExpression .)
    OP_SHRR         reduce using rule 550 (additiveExpressionNotName -> name DASH multiplicativeExpression .)
    LESS            reduce using rule 550 (additiveExpressionNotName -> name DASH multiplicativeExpression .)
    OP_GE           reduce using rule 550 (additiveExpressionNotName -> name DASH multiplicativeExpression .)
    MORE            reduce using rule 550 (additiveExpressionNotName -> name DASH multiplicativeExpression .)
    OP_LE           reduce using rule 550 (additiveExpressionNotName -> name DASH multiplicativeExpression .)
    INSTANCEOF      reduce using rule 550 (additiveExpressionNotName -> name DASH multiplicativeExpression .)
    OP_EQ           reduce using rule 550 (additiveExpressionNotName -> name DASH multiplicativeExpression .)
    OP_NE           reduce using rule 550 (additiveExpressionNotName -> name DASH multiplicativeExpression .)
    AND             reduce using rule 550 (additiveExpressionNotName -> name DASH multiplicativeExpression .)
    CARET           reduce using rule 550 (additiveExpressionNotName -> name DASH multiplicativeExpression .)
    VERTICAL        reduce using rule 550 (additiveExpressionNotName -> name DASH multiplicativeExpression .)
    OP_LAND         reduce using rule 550 (additiveExpressionNotName -> name DASH multiplicativeExpression .)
    QUES            reduce using rule 550 (additiveExpressionNotName -> name DASH multiplicativeExpression .)
    OP_LOR          reduce using rule 550 (additiveExpressionNotName -> name DASH multiplicativeExpression .)
    RPAREN          reduce using rule 550 (additiveExpressionNotName -> name DASH multiplicativeExpression .)
    COMMA           reduce using rule 550 (additiveExpressionNotName -> name DASH multiplicativeExpression .)
    BRPAREN         reduce using rule 550 (additiveExpressionNotName -> name DASH multiplicativeExpression .)
    SEMI            reduce using rule 550 (additiveExpressionNotName -> name DASH multiplicativeExpression .)
    MULT            shift and go to state 747
    SLASH           shift and go to state 746
    PERCENT         shift and go to state 745


state 635

    (541) shiftExpressionNotName -> name OP_SHL additiveExpression .
    (544) additiveExpression -> additiveExpression . PLUS multiplicativeExpression
    (545) additiveExpression -> additiveExpression . DASH multiplicativeExpression

    OP_SHR          reduce using rule 541 (shiftExpressionNotName -> name OP_SHL additiveExpression .)
    OP_SHL          reduce using rule 541 (shiftExpressionNotName -> name OP_SHL additiveExpression .)
    OP_SHRR         reduce using rule 541 (shiftExpressionNotName -> name OP_SHL additiveExpression .)
    LESS            reduce using rule 541 (shiftExpressionNotName -> name OP_SHL additiveExpression .)
    OP_GE           reduce using rule 541 (shiftExpressionNotName -> name OP_SHL additiveExpression .)
    MORE            reduce using rule 541 (shiftExpressionNotName -> name OP_SHL additiveExpression .)
    OP_LE           reduce using rule 541 (shiftExpressionNotName -> name OP_SHL additiveExpression .)
    INSTANCEOF      reduce using rule 541 (shiftExpressionNotName -> name OP_SHL additiveExpression .)
    OP_EQ           reduce using rule 541 (shiftExpressionNotName -> name OP_SHL additiveExpression .)
    OP_NE           reduce using rule 541 (shiftExpressionNotName -> name OP_SHL additiveExpression .)
    AND             reduce using rule 541 (shiftExpressionNotName -> name OP_SHL additiveExpression .)
    CARET           reduce using rule 541 (shiftExpressionNotName -> name OP_SHL additiveExpression .)
    VERTICAL        reduce using rule 541 (shiftExpressionNotName -> name OP_SHL additiveExpression .)
    OP_LAND         reduce using rule 541 (shiftExpressionNotName -> name OP_SHL additiveExpression .)
    QUES            reduce using rule 541 (shiftExpressionNotName -> name OP_SHL additiveExpression .)
    OP_LOR          reduce using rule 541 (shiftExpressionNotName -> name OP_SHL additiveExpression .)
    RPAREN          reduce using rule 541 (shiftExpressionNotName -> name OP_SHL additiveExpression .)
    COMMA           reduce using rule 541 (shiftExpressionNotName -> name OP_SHL additiveExpression .)
    BRPAREN         reduce using rule 541 (shiftExpressionNotName -> name OP_SHL additiveExpression .)
    SEMI            reduce using rule 541 (shiftExpressionNotName -> name OP_SHL additiveExpression .)
    PLUS            shift and go to state 737
    DASH            shift and go to state 738


state 636

    (560) multiplicativeExpressionNotName -> name SLASH unaryExpression .

    MULT            reduce using rule 560 (multiplicativeExpressionNotName -> name SLASH unaryExpression .)
    SLASH           reduce using rule 560 (multiplicativeExpressionNotName -> name SLASH unaryExpression .)
    PERCENT         reduce using rule 560 (multiplicativeExpressionNotName -> name SLASH unaryExpression .)
    PLUS            reduce using rule 560 (multiplicativeExpressionNotName -> name SLASH unaryExpression .)
    DASH            reduce using rule 560 (multiplicativeExpressionNotName -> name SLASH unaryExpression .)
    OP_SHR          reduce using rule 560 (multiplicativeExpressionNotName -> name SLASH unaryExpression .)
    OP_SHL          reduce using rule 560 (multiplicativeExpressionNotName -> name SLASH unaryExpression .)
    OP_SHRR         reduce using rule 560 (multiplicativeExpressionNotName -> name SLASH unaryExpression .)
    LESS            reduce using rule 560 (multiplicativeExpressionNotName -> name SLASH unaryExpression .)
    OP_GE           reduce using rule 560 (multiplicativeExpressionNotName -> name SLASH unaryExpression .)
    MORE            reduce using rule 560 (multiplicativeExpressionNotName -> name SLASH unaryExpression .)
    OP_LE           reduce using rule 560 (multiplicativeExpressionNotName -> name SLASH unaryExpression .)
    INSTANCEOF      reduce using rule 560 (multiplicativeExpressionNotName -> name SLASH unaryExpression .)
    OP_EQ           reduce using rule 560 (multiplicativeExpressionNotName -> name SLASH unaryExpression .)
    OP_NE           reduce using rule 560 (multiplicativeExpressionNotName -> name SLASH unaryExpression .)
    AND             reduce using rule 560 (multiplicativeExpressionNotName -> name SLASH unaryExpression .)
    CARET           reduce using rule 560 (multiplicativeExpressionNotName -> name SLASH unaryExpression .)
    VERTICAL        reduce using rule 560 (multiplicativeExpressionNotName -> name SLASH unaryExpression .)
    OP_LAND         reduce using rule 560 (multiplicativeExpressionNotName -> name SLASH unaryExpression .)
    QUES            reduce using rule 560 (multiplicativeExpressionNotName -> name SLASH unaryExpression .)
    OP_LOR          reduce using rule 560 (multiplicativeExpressionNotName -> name SLASH unaryExpression .)
    SEMI            reduce using rule 560 (multiplicativeExpressionNotName -> name SLASH unaryExpression .)
    RPAREN          reduce using rule 560 (multiplicativeExpressionNotName -> name SLASH unaryExpression .)
    COMMA           reduce using rule 560 (multiplicativeExpressionNotName -> name SLASH unaryExpression .)
    BRPAREN         reduce using rule 560 (multiplicativeExpressionNotName -> name SLASH unaryExpression .)


state 637

    (504) andExpressionNotName -> name AND equalityExpression .
    (506) equalityExpression -> equalityExpression . OP_EQ instanceOfExpression
    (507) equalityExpression -> equalityExpression . OP_NE instanceOfExpression

    AND             reduce using rule 504 (andExpressionNotName -> name AND equalityExpression .)
    CARET           reduce using rule 504 (andExpressionNotName -> name AND equalityExpression .)
    VERTICAL        reduce using rule 504 (andExpressionNotName -> name AND equalityExpression .)
    OP_LAND         reduce using rule 504 (andExpressionNotName -> name AND equalityExpression .)
    QUES            reduce using rule 504 (andExpressionNotName -> name AND equalityExpression .)
    OP_LOR          reduce using rule 504 (andExpressionNotName -> name AND equalityExpression .)
    RPAREN          reduce using rule 504 (andExpressionNotName -> name AND equalityExpression .)
    SEMI            reduce using rule 504 (andExpressionNotName -> name AND equalityExpression .)
    COMMA           reduce using rule 504 (andExpressionNotName -> name AND equalityExpression .)
    BRPAREN         reduce using rule 504 (andExpressionNotName -> name AND equalityExpression .)
    OP_EQ           shift and go to state 741
    OP_NE           shift and go to state 740


state 638

    (511) equalityExpressionNotName -> name OP_EQ instanceOfExpression .
    (514) instanceOfExpression -> instanceOfExpression . INSTANCEOF referenceType

    OP_EQ           reduce using rule 511 (equalityExpressionNotName -> name OP_EQ instanceOfExpression .)
    OP_NE           reduce using rule 511 (equalityExpressionNotName -> name OP_EQ instanceOfExpression .)
    AND             reduce using rule 511 (equalityExpressionNotName -> name OP_EQ instanceOfExpression .)
    CARET           reduce using rule 511 (equalityExpressionNotName -> name OP_EQ instanceOfExpression .)
    VERTICAL        reduce using rule 511 (equalityExpressionNotName -> name OP_EQ instanceOfExpression .)
    OP_LAND         reduce using rule 511 (equalityExpressionNotName -> name OP_EQ instanceOfExpression .)
    QUES            reduce using rule 511 (equalityExpressionNotName -> name OP_EQ instanceOfExpression .)
    OP_LOR          reduce using rule 511 (equalityExpressionNotName -> name OP_EQ instanceOfExpression .)
    COMMA           reduce using rule 511 (equalityExpressionNotName -> name OP_EQ instanceOfExpression .)
    BRPAREN         reduce using rule 511 (equalityExpressionNotName -> name OP_EQ instanceOfExpression .)
    RPAREN          reduce using rule 511 (equalityExpressionNotName -> name OP_EQ instanceOfExpression .)
    SEMI            reduce using rule 511 (equalityExpressionNotName -> name OP_EQ instanceOfExpression .)
    INSTANCEOF      shift and go to state 735


state 639

    (529) relationalExpressionNotName -> name OP_GE shiftExpression .
    (533) shiftExpression -> shiftExpression . OP_SHR additiveExpression
    (534) shiftExpression -> shiftExpression . OP_SHL additiveExpression
    (535) shiftExpression -> shiftExpression . OP_SHRR additiveExpression

    LESS            reduce using rule 529 (relationalExpressionNotName -> name OP_GE shiftExpression .)
    OP_GE           reduce using rule 529 (relationalExpressionNotName -> name OP_GE shiftExpression .)
    MORE            reduce using rule 529 (relationalExpressionNotName -> name OP_GE shiftExpression .)
    OP_LE           reduce using rule 529 (relationalExpressionNotName -> name OP_GE shiftExpression .)
    INSTANCEOF      reduce using rule 529 (relationalExpressionNotName -> name OP_GE shiftExpression .)
    OP_EQ           reduce using rule 529 (relationalExpressionNotName -> name OP_GE shiftExpression .)
    OP_NE           reduce using rule 529 (relationalExpressionNotName -> name OP_GE shiftExpression .)
    AND             reduce using rule 529 (relationalExpressionNotName -> name OP_GE shiftExpression .)
    CARET           reduce using rule 529 (relationalExpressionNotName -> name OP_GE shiftExpression .)
    VERTICAL        reduce using rule 529 (relationalExpressionNotName -> name OP_GE shiftExpression .)
    OP_LAND         reduce using rule 529 (relationalExpressionNotName -> name OP_GE shiftExpression .)
    QUES            reduce using rule 529 (relationalExpressionNotName -> name OP_GE shiftExpression .)
    OP_LOR          reduce using rule 529 (relationalExpressionNotName -> name OP_GE shiftExpression .)
    COMMA           reduce using rule 529 (relationalExpressionNotName -> name OP_GE shiftExpression .)
    BRPAREN         reduce using rule 529 (relationalExpressionNotName -> name OP_GE shiftExpression .)
    RPAREN          reduce using rule 529 (relationalExpressionNotName -> name OP_GE shiftExpression .)
    SEMI            reduce using rule 529 (relationalExpressionNotName -> name OP_GE shiftExpression .)
    OP_SHR          shift and go to state 750
    OP_SHL          shift and go to state 748
    OP_SHRR         shift and go to state 749


state 640

    (605) primaryNoNewArray -> name arrays DOT . CLASS

    CLASS           shift and go to state 810


state 641

    (479) conditionalExpressionNotName -> name QUES expression . COLON conditionalExpression

    COLON           shift and go to state 811


state 642

    (517) instanceOfExpressionNotName -> name INSTANCEOF referenceType .

    INSTANCEOF      reduce using rule 517 (instanceOfExpressionNotName -> name INSTANCEOF referenceType .)
    OP_EQ           reduce using rule 517 (instanceOfExpressionNotName -> name INSTANCEOF referenceType .)
    OP_NE           reduce using rule 517 (instanceOfExpressionNotName -> name INSTANCEOF referenceType .)
    AND             reduce using rule 517 (instanceOfExpressionNotName -> name INSTANCEOF referenceType .)
    CARET           reduce using rule 517 (instanceOfExpressionNotName -> name INSTANCEOF referenceType .)
    VERTICAL        reduce using rule 517 (instanceOfExpressionNotName -> name INSTANCEOF referenceType .)
    OP_LAND         reduce using rule 517 (instanceOfExpressionNotName -> name INSTANCEOF referenceType .)
    QUES            reduce using rule 517 (instanceOfExpressionNotName -> name INSTANCEOF referenceType .)
    OP_LOR          reduce using rule 517 (instanceOfExpressionNotName -> name INSTANCEOF referenceType .)
    RPAREN          reduce using rule 517 (instanceOfExpressionNotName -> name INSTANCEOF referenceType .)
    COMMA           reduce using rule 517 (instanceOfExpressionNotName -> name INSTANCEOF referenceType .)
    BRPAREN         reduce using rule 517 (instanceOfExpressionNotName -> name INSTANCEOF referenceType .)
    SEMI            reduce using rule 517 (instanceOfExpressionNotName -> name INSTANCEOF referenceType .)


state 643

    (530) relationalExpressionNotName -> name MORE shiftExpression .
    (533) shiftExpression -> shiftExpression . OP_SHR additiveExpression
    (534) shiftExpression -> shiftExpression . OP_SHL additiveExpression
    (535) shiftExpression -> shiftExpression . OP_SHRR additiveExpression

    LESS            reduce using rule 530 (relationalExpressionNotName -> name MORE shiftExpression .)
    OP_GE           reduce using rule 530 (relationalExpressionNotName -> name MORE shiftExpression .)
    MORE            reduce using rule 530 (relationalExpressionNotName -> name MORE shiftExpression .)
    OP_LE           reduce using rule 530 (relationalExpressionNotName -> name MORE shiftExpression .)
    INSTANCEOF      reduce using rule 530 (relationalExpressionNotName -> name MORE shiftExpression .)
    OP_EQ           reduce using rule 530 (relationalExpressionNotName -> name MORE shiftExpression .)
    OP_NE           reduce using rule 530 (relationalExpressionNotName -> name MORE shiftExpression .)
    AND             reduce using rule 530 (relationalExpressionNotName -> name MORE shiftExpression .)
    CARET           reduce using rule 530 (relationalExpressionNotName -> name MORE shiftExpression .)
    VERTICAL        reduce using rule 530 (relationalExpressionNotName -> name MORE shiftExpression .)
    OP_LAND         reduce using rule 530 (relationalExpressionNotName -> name MORE shiftExpression .)
    QUES            reduce using rule 530 (relationalExpressionNotName -> name MORE shiftExpression .)
    OP_LOR          reduce using rule 530 (relationalExpressionNotName -> name MORE shiftExpression .)
    COMMA           reduce using rule 530 (relationalExpressionNotName -> name MORE shiftExpression .)
    BRPAREN         reduce using rule 530 (relationalExpressionNotName -> name MORE shiftExpression .)
    RPAREN          reduce using rule 530 (relationalExpressionNotName -> name MORE shiftExpression .)
    SEMI            reduce using rule 530 (relationalExpressionNotName -> name MORE shiftExpression .)
    OP_SHR          shift and go to state 750
    OP_SHL          shift and go to state 748
    OP_SHRR         shift and go to state 749


state 644

    (441) classInstanceCreationExpression -> classInstanceCreationExpressionName NEW typeArguments . classType LPAREN argumentList_opt RPAREN classBody_opt
    (52) classType -> . classOrInterfaceType
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    Identifier      shift and go to state 68

    name                           shift and go to state 123
    classOrInterfaceType           shift and go to state 129
    qualifiedName                  shift and go to state 64
    classOrInterface               shift and go to state 122
    simpleName                     shift and go to state 66
    genericType                    shift and go to state 127
    classType                      shift and go to state 812

state 645

    (440) classInstanceCreationExpression -> classInstanceCreationExpressionName NEW classType . LPAREN argumentList_opt RPAREN classBody_opt

    LPAREN          shift and go to state 813


state 646

    (510) equalityExpressionNotName -> equalityExpressionNotName OP_NE instanceOfExpression .
    (514) instanceOfExpression -> instanceOfExpression . INSTANCEOF referenceType

    OP_EQ           reduce using rule 510 (equalityExpressionNotName -> equalityExpressionNotName OP_NE instanceOfExpression .)
    OP_NE           reduce using rule 510 (equalityExpressionNotName -> equalityExpressionNotName OP_NE instanceOfExpression .)
    AND             reduce using rule 510 (equalityExpressionNotName -> equalityExpressionNotName OP_NE instanceOfExpression .)
    CARET           reduce using rule 510 (equalityExpressionNotName -> equalityExpressionNotName OP_NE instanceOfExpression .)
    VERTICAL        reduce using rule 510 (equalityExpressionNotName -> equalityExpressionNotName OP_NE instanceOfExpression .)
    OP_LAND         reduce using rule 510 (equalityExpressionNotName -> equalityExpressionNotName OP_NE instanceOfExpression .)
    QUES            reduce using rule 510 (equalityExpressionNotName -> equalityExpressionNotName OP_NE instanceOfExpression .)
    OP_LOR          reduce using rule 510 (equalityExpressionNotName -> equalityExpressionNotName OP_NE instanceOfExpression .)
    COMMA           reduce using rule 510 (equalityExpressionNotName -> equalityExpressionNotName OP_NE instanceOfExpression .)
    BRPAREN         reduce using rule 510 (equalityExpressionNotName -> equalityExpressionNotName OP_NE instanceOfExpression .)
    RPAREN          reduce using rule 510 (equalityExpressionNotName -> equalityExpressionNotName OP_NE instanceOfExpression .)
    SEMI            reduce using rule 510 (equalityExpressionNotName -> equalityExpressionNotName OP_NE instanceOfExpression .)
    INSTANCEOF      shift and go to state 735


state 647

    (509) equalityExpressionNotName -> equalityExpressionNotName OP_EQ instanceOfExpression .
    (514) instanceOfExpression -> instanceOfExpression . INSTANCEOF referenceType

    OP_EQ           reduce using rule 509 (equalityExpressionNotName -> equalityExpressionNotName OP_EQ instanceOfExpression .)
    OP_NE           reduce using rule 509 (equalityExpressionNotName -> equalityExpressionNotName OP_EQ instanceOfExpression .)
    AND             reduce using rule 509 (equalityExpressionNotName -> equalityExpressionNotName OP_EQ instanceOfExpression .)
    CARET           reduce using rule 509 (equalityExpressionNotName -> equalityExpressionNotName OP_EQ instanceOfExpression .)
    VERTICAL        reduce using rule 509 (equalityExpressionNotName -> equalityExpressionNotName OP_EQ instanceOfExpression .)
    OP_LAND         reduce using rule 509 (equalityExpressionNotName -> equalityExpressionNotName OP_EQ instanceOfExpression .)
    QUES            reduce using rule 509 (equalityExpressionNotName -> equalityExpressionNotName OP_EQ instanceOfExpression .)
    OP_LOR          reduce using rule 509 (equalityExpressionNotName -> equalityExpressionNotName OP_EQ instanceOfExpression .)
    COMMA           reduce using rule 509 (equalityExpressionNotName -> equalityExpressionNotName OP_EQ instanceOfExpression .)
    BRPAREN         reduce using rule 509 (equalityExpressionNotName -> equalityExpressionNotName OP_EQ instanceOfExpression .)
    RPAREN          reduce using rule 509 (equalityExpressionNotName -> equalityExpressionNotName OP_EQ instanceOfExpression .)
    SEMI            reduce using rule 509 (equalityExpressionNotName -> equalityExpressionNotName OP_EQ instanceOfExpression .)
    INSTANCEOF      shift and go to state 735


state 648

    (279) memberValuePair -> Identifier ASS memberValue .

    COMMA           reduce using rule 279 (memberValuePair -> Identifier ASS memberValue .)
    RPAREN          reduce using rule 279 (memberValuePair -> Identifier ASS memberValue .)


state 649

    (342) methodInvocation -> primary DOT typeArguments . Identifier LPAREN argumentList_opt RPAREN

    Identifier      shift and go to state 814


state 650

    (438) classInstanceCreationExpression -> primary DOT NEW . typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> primary DOT NEW . classType LPAREN argumentList_opt RPAREN classBody_opt
    (82) typeArguments -> . LESS typeArgumentList1
    (52) classType -> . classOrInterfaceType
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    LESS            shift and go to state 287
    Identifier      shift and go to state 68

    qualifiedName                  shift and go to state 64
    name                           shift and go to state 123
    typeArguments                  shift and go to state 816
    classOrInterfaceType           shift and go to state 129
    classOrInterface               shift and go to state 122
    simpleName                     shift and go to state 66
    genericType                    shift and go to state 127
    classType                      shift and go to state 815

state 651

    (445) fieldAccess -> primary DOT Identifier .
    (344) methodInvocation -> primary DOT Identifier . LPAREN argumentList_opt RPAREN

    FLPAREN         reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    DOT             reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    OP_INC          reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    OP_DEC          reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    MULT            reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    SLASH           reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    PERCENT         reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    PLUS            reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    DASH            reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    OP_SHR          reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    OP_SHL          reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    OP_SHRR         reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    LESS            reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    OP_GE           reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    MORE            reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    OP_LE           reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    INSTANCEOF      reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    OP_EQ           reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    OP_NE           reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    AND             reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    CARET           reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    VERTICAL        reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    OP_LAND         reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    QUES            reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    OP_LOR          reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    RPAREN          reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    COMMA           reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    BRPAREN         reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    SEMI            reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    ASS             reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    ASS_ADD         reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    ASS_SUB         reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    ASS_MUL         reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    ASS_DIV         reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    ASS_AND         reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    ASS_OR          reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    ASS_XOR         reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    ASS_MOD         reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    ASS_SHL         reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    ASS_SHRR        reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    ASS_SHR         reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    COLON           reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    FRPAREN         reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    LPAREN          shift and go to state 817


state 652

    (436) classInstanceCreationExpression -> NEW typeArguments classType . LPAREN argumentList_opt RPAREN classBody_opt

    LPAREN          shift and go to state 818


state 653

    (451) arrayCreationWithArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs . arrayInitializer
    (614) arrayCreationWithoutArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs .
    (453) arrayWithOrWithoutExprs -> arrayWithOrWithoutExprs . arrayWithOrWithoutExpr
    (335) arrayInitializer -> . BLPAREN comma_opt BRPAREN
    (336) arrayInitializer -> . BLPAREN variableInitializers BRPAREN
    (337) arrayInitializer -> . BLPAREN variableInitializers COMMA BRPAREN
    (454) arrayWithOrWithoutExpr -> . FLPAREN expression FRPAREN
    (455) arrayWithOrWithoutExpr -> . FLPAREN FRPAREN

    DOT             reduce using rule 614 (arrayCreationWithoutArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs .)
    OP_INC          reduce using rule 614 (arrayCreationWithoutArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs .)
    OP_DEC          reduce using rule 614 (arrayCreationWithoutArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs .)
    ASS             reduce using rule 614 (arrayCreationWithoutArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs .)
    ASS_ADD         reduce using rule 614 (arrayCreationWithoutArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs .)
    ASS_SUB         reduce using rule 614 (arrayCreationWithoutArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs .)
    ASS_MUL         reduce using rule 614 (arrayCreationWithoutArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs .)
    ASS_DIV         reduce using rule 614 (arrayCreationWithoutArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs .)
    ASS_AND         reduce using rule 614 (arrayCreationWithoutArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs .)
    ASS_OR          reduce using rule 614 (arrayCreationWithoutArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs .)
    ASS_XOR         reduce using rule 614 (arrayCreationWithoutArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs .)
    ASS_MOD         reduce using rule 614 (arrayCreationWithoutArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs .)
    ASS_SHL         reduce using rule 614 (arrayCreationWithoutArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs .)
    ASS_SHRR        reduce using rule 614 (arrayCreationWithoutArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs .)
    ASS_SHR         reduce using rule 614 (arrayCreationWithoutArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs .)
    MULT            reduce using rule 614 (arrayCreationWithoutArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs .)
    SLASH           reduce using rule 614 (arrayCreationWithoutArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs .)
    PERCENT         reduce using rule 614 (arrayCreationWithoutArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs .)
    PLUS            reduce using rule 614 (arrayCreationWithoutArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs .)
    DASH            reduce using rule 614 (arrayCreationWithoutArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs .)
    OP_SHR          reduce using rule 614 (arrayCreationWithoutArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs .)
    OP_SHL          reduce using rule 614 (arrayCreationWithoutArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs .)
    OP_SHRR         reduce using rule 614 (arrayCreationWithoutArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs .)
    LESS            reduce using rule 614 (arrayCreationWithoutArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs .)
    OP_GE           reduce using rule 614 (arrayCreationWithoutArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs .)
    MORE            reduce using rule 614 (arrayCreationWithoutArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs .)
    OP_LE           reduce using rule 614 (arrayCreationWithoutArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs .)
    INSTANCEOF      reduce using rule 614 (arrayCreationWithoutArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs .)
    OP_EQ           reduce using rule 614 (arrayCreationWithoutArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs .)
    OP_NE           reduce using rule 614 (arrayCreationWithoutArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs .)
    AND             reduce using rule 614 (arrayCreationWithoutArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs .)
    CARET           reduce using rule 614 (arrayCreationWithoutArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs .)
    VERTICAL        reduce using rule 614 (arrayCreationWithoutArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs .)
    OP_LAND         reduce using rule 614 (arrayCreationWithoutArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs .)
    QUES            reduce using rule 614 (arrayCreationWithoutArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs .)
    OP_LOR          reduce using rule 614 (arrayCreationWithoutArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs .)
    RPAREN          reduce using rule 614 (arrayCreationWithoutArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs .)
    COMMA           reduce using rule 614 (arrayCreationWithoutArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs .)
    SEMI            reduce using rule 614 (arrayCreationWithoutArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs .)
    BRPAREN         reduce using rule 614 (arrayCreationWithoutArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs .)
    COLON           reduce using rule 614 (arrayCreationWithoutArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs .)
    FRPAREN         reduce using rule 614 (arrayCreationWithoutArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs .)
    BLPAREN         shift and go to state 821
    FLPAREN         shift and go to state 654

    arrayInitializer               shift and go to state 819
    arrayWithOrWithoutExpr         shift and go to state 820

state 654

    (454) arrayWithOrWithoutExpr -> FLPAREN . expression FRPAREN
    (455) arrayWithOrWithoutExpr -> FLPAREN . FRPAREN
    (456) expression -> . assignmentExpression
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    FRPAREN         shift and go to state 823
    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    assignmentExpression           shift and go to state 543
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    assignment                     shift and go to state 554
    fieldAccess                    shift and go to state 189
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    unaryExpressionNotPlusMinus    shift and go to state 397
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    expression                     shift and go to state 822
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 655

    (452) arrayWithOrWithoutExprs -> arrayWithOrWithoutExpr .

    BLPAREN         reduce using rule 452 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExpr .)
    FLPAREN         reduce using rule 452 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExpr .)
    DOT             reduce using rule 452 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExpr .)
    MULT            reduce using rule 452 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExpr .)
    SLASH           reduce using rule 452 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExpr .)
    PERCENT         reduce using rule 452 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExpr .)
    PLUS            reduce using rule 452 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExpr .)
    DASH            reduce using rule 452 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExpr .)
    OP_SHR          reduce using rule 452 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExpr .)
    OP_SHL          reduce using rule 452 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExpr .)
    OP_SHRR         reduce using rule 452 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExpr .)
    LESS            reduce using rule 452 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExpr .)
    OP_GE           reduce using rule 452 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExpr .)
    MORE            reduce using rule 452 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExpr .)
    OP_LE           reduce using rule 452 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExpr .)
    INSTANCEOF      reduce using rule 452 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExpr .)
    OP_EQ           reduce using rule 452 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExpr .)
    OP_NE           reduce using rule 452 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExpr .)
    AND             reduce using rule 452 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExpr .)
    CARET           reduce using rule 452 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExpr .)
    VERTICAL        reduce using rule 452 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExpr .)
    OP_LAND         reduce using rule 452 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExpr .)
    QUES            reduce using rule 452 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExpr .)
    OP_LOR          reduce using rule 452 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExpr .)
    RPAREN          reduce using rule 452 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExpr .)
    OP_INC          reduce using rule 452 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExpr .)
    OP_DEC          reduce using rule 452 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExpr .)
    ASS             reduce using rule 452 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExpr .)
    ASS_ADD         reduce using rule 452 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExpr .)
    ASS_SUB         reduce using rule 452 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExpr .)
    ASS_MUL         reduce using rule 452 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExpr .)
    ASS_DIV         reduce using rule 452 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExpr .)
    ASS_AND         reduce using rule 452 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExpr .)
    ASS_OR          reduce using rule 452 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExpr .)
    ASS_XOR         reduce using rule 452 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExpr .)
    ASS_MOD         reduce using rule 452 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExpr .)
    ASS_SHL         reduce using rule 452 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExpr .)
    ASS_SHRR        reduce using rule 452 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExpr .)
    ASS_SHR         reduce using rule 452 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExpr .)
    COMMA           reduce using rule 452 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExpr .)
    BRPAREN         reduce using rule 452 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExpr .)
    SEMI            reduce using rule 452 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExpr .)
    COLON           reduce using rule 452 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExpr .)
    FRPAREN         reduce using rule 452 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExpr .)


state 656

    (437) classInstanceCreationExpression -> NEW classType LPAREN . argumentList_opt RPAREN classBody_opt
    (232) argumentList_opt -> . argumentList
    (233) argumentList_opt -> . empty
    (234) argumentList -> . expression
    (235) argumentList -> . argumentList COMMA expression
    (631) empty -> .
    (456) expression -> . assignmentExpression
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    RPAREN          reduce using rule 631 (empty -> .)
    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    argumentList                   shift and go to state 602
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    argumentList_opt               shift and go to state 824
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    unaryExpressionNotPlusMinus    shift and go to state 397
    shiftExpression                shift and go to state 552
    assignmentExpression           shift and go to state 543
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    fieldAccess                    shift and go to state 189
    integerLiteral                 shift and go to state 183
    empty                          shift and go to state 601
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 554
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    expression                     shift and go to state 600
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 657

    (450) arrayCreationWithArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs . arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs .
    (453) arrayWithOrWithoutExprs -> arrayWithOrWithoutExprs . arrayWithOrWithoutExpr
    (335) arrayInitializer -> . BLPAREN comma_opt BRPAREN
    (336) arrayInitializer -> . BLPAREN variableInitializers BRPAREN
    (337) arrayInitializer -> . BLPAREN variableInitializers COMMA BRPAREN
    (454) arrayWithOrWithoutExpr -> . FLPAREN expression FRPAREN
    (455) arrayWithOrWithoutExpr -> . FLPAREN FRPAREN

    DOT             reduce using rule 613 (arrayCreationWithoutArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs .)
    OP_INC          reduce using rule 613 (arrayCreationWithoutArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs .)
    OP_DEC          reduce using rule 613 (arrayCreationWithoutArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs .)
    ASS             reduce using rule 613 (arrayCreationWithoutArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs .)
    ASS_ADD         reduce using rule 613 (arrayCreationWithoutArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs .)
    ASS_SUB         reduce using rule 613 (arrayCreationWithoutArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs .)
    ASS_MUL         reduce using rule 613 (arrayCreationWithoutArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs .)
    ASS_DIV         reduce using rule 613 (arrayCreationWithoutArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs .)
    ASS_AND         reduce using rule 613 (arrayCreationWithoutArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs .)
    ASS_OR          reduce using rule 613 (arrayCreationWithoutArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs .)
    ASS_XOR         reduce using rule 613 (arrayCreationWithoutArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs .)
    ASS_MOD         reduce using rule 613 (arrayCreationWithoutArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs .)
    ASS_SHL         reduce using rule 613 (arrayCreationWithoutArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs .)
    ASS_SHRR        reduce using rule 613 (arrayCreationWithoutArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs .)
    ASS_SHR         reduce using rule 613 (arrayCreationWithoutArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs .)
    MULT            reduce using rule 613 (arrayCreationWithoutArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs .)
    SLASH           reduce using rule 613 (arrayCreationWithoutArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs .)
    PERCENT         reduce using rule 613 (arrayCreationWithoutArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs .)
    PLUS            reduce using rule 613 (arrayCreationWithoutArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs .)
    DASH            reduce using rule 613 (arrayCreationWithoutArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs .)
    OP_SHR          reduce using rule 613 (arrayCreationWithoutArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs .)
    OP_SHL          reduce using rule 613 (arrayCreationWithoutArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs .)
    OP_SHRR         reduce using rule 613 (arrayCreationWithoutArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs .)
    LESS            reduce using rule 613 (arrayCreationWithoutArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs .)
    OP_GE           reduce using rule 613 (arrayCreationWithoutArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs .)
    MORE            reduce using rule 613 (arrayCreationWithoutArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs .)
    OP_LE           reduce using rule 613 (arrayCreationWithoutArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs .)
    INSTANCEOF      reduce using rule 613 (arrayCreationWithoutArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs .)
    OP_EQ           reduce using rule 613 (arrayCreationWithoutArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs .)
    OP_NE           reduce using rule 613 (arrayCreationWithoutArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs .)
    AND             reduce using rule 613 (arrayCreationWithoutArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs .)
    CARET           reduce using rule 613 (arrayCreationWithoutArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs .)
    VERTICAL        reduce using rule 613 (arrayCreationWithoutArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs .)
    OP_LAND         reduce using rule 613 (arrayCreationWithoutArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs .)
    QUES            reduce using rule 613 (arrayCreationWithoutArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs .)
    OP_LOR          reduce using rule 613 (arrayCreationWithoutArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs .)
    RPAREN          reduce using rule 613 (arrayCreationWithoutArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs .)
    COMMA           reduce using rule 613 (arrayCreationWithoutArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs .)
    SEMI            reduce using rule 613 (arrayCreationWithoutArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs .)
    BRPAREN         reduce using rule 613 (arrayCreationWithoutArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs .)
    COLON           reduce using rule 613 (arrayCreationWithoutArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs .)
    FRPAREN         reduce using rule 613 (arrayCreationWithoutArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs .)
    BLPAREN         shift and go to state 821
    FLPAREN         shift and go to state 654

    arrayInitializer               shift and go to state 825
    arrayWithOrWithoutExpr         shift and go to state 820

state 658

    (488) conditionalAndExpressionNotName -> conditionalAndExpressionNotName OP_LAND inclusiveOrExpression .
    (491) inclusiveOrExpression -> inclusiveOrExpression . VERTICAL exclusiveOrExpression

    OP_LAND         reduce using rule 488 (conditionalAndExpressionNotName -> conditionalAndExpressionNotName OP_LAND inclusiveOrExpression .)
    QUES            reduce using rule 488 (conditionalAndExpressionNotName -> conditionalAndExpressionNotName OP_LAND inclusiveOrExpression .)
    OP_LOR          reduce using rule 488 (conditionalAndExpressionNotName -> conditionalAndExpressionNotName OP_LAND inclusiveOrExpression .)
    SEMI            reduce using rule 488 (conditionalAndExpressionNotName -> conditionalAndExpressionNotName OP_LAND inclusiveOrExpression .)
    COMMA           reduce using rule 488 (conditionalAndExpressionNotName -> conditionalAndExpressionNotName OP_LAND inclusiveOrExpression .)
    BRPAREN         reduce using rule 488 (conditionalAndExpressionNotName -> conditionalAndExpressionNotName OP_LAND inclusiveOrExpression .)
    RPAREN          reduce using rule 488 (conditionalAndExpressionNotName -> conditionalAndExpressionNotName OP_LAND inclusiveOrExpression .)
    VERTICAL        shift and go to state 736


state 659

    (547) additiveExpressionNotName -> additiveExpressionNotName PLUS multiplicativeExpression .
    (552) multiplicativeExpression -> multiplicativeExpression . MULT unaryExpression
    (553) multiplicativeExpression -> multiplicativeExpression . SLASH unaryExpression
    (554) multiplicativeExpression -> multiplicativeExpression . PERCENT unaryExpression

    PLUS            reduce using rule 547 (additiveExpressionNotName -> additiveExpressionNotName PLUS multiplicativeExpression .)
    DASH            reduce using rule 547 (additiveExpressionNotName -> additiveExpressionNotName PLUS multiplicativeExpression .)
    OP_SHR          reduce using rule 547 (additiveExpressionNotName -> additiveExpressionNotName PLUS multiplicativeExpression .)
    OP_SHL          reduce using rule 547 (additiveExpressionNotName -> additiveExpressionNotName PLUS multiplicativeExpression .)
    OP_SHRR         reduce using rule 547 (additiveExpressionNotName -> additiveExpressionNotName PLUS multiplicativeExpression .)
    LESS            reduce using rule 547 (additiveExpressionNotName -> additiveExpressionNotName PLUS multiplicativeExpression .)
    OP_GE           reduce using rule 547 (additiveExpressionNotName -> additiveExpressionNotName PLUS multiplicativeExpression .)
    MORE            reduce using rule 547 (additiveExpressionNotName -> additiveExpressionNotName PLUS multiplicativeExpression .)
    OP_LE           reduce using rule 547 (additiveExpressionNotName -> additiveExpressionNotName PLUS multiplicativeExpression .)
    INSTANCEOF      reduce using rule 547 (additiveExpressionNotName -> additiveExpressionNotName PLUS multiplicativeExpression .)
    OP_EQ           reduce using rule 547 (additiveExpressionNotName -> additiveExpressionNotName PLUS multiplicativeExpression .)
    OP_NE           reduce using rule 547 (additiveExpressionNotName -> additiveExpressionNotName PLUS multiplicativeExpression .)
    AND             reduce using rule 547 (additiveExpressionNotName -> additiveExpressionNotName PLUS multiplicativeExpression .)
    CARET           reduce using rule 547 (additiveExpressionNotName -> additiveExpressionNotName PLUS multiplicativeExpression .)
    VERTICAL        reduce using rule 547 (additiveExpressionNotName -> additiveExpressionNotName PLUS multiplicativeExpression .)
    OP_LAND         reduce using rule 547 (additiveExpressionNotName -> additiveExpressionNotName PLUS multiplicativeExpression .)
    QUES            reduce using rule 547 (additiveExpressionNotName -> additiveExpressionNotName PLUS multiplicativeExpression .)
    OP_LOR          reduce using rule 547 (additiveExpressionNotName -> additiveExpressionNotName PLUS multiplicativeExpression .)
    RPAREN          reduce using rule 547 (additiveExpressionNotName -> additiveExpressionNotName PLUS multiplicativeExpression .)
    COMMA           reduce using rule 547 (additiveExpressionNotName -> additiveExpressionNotName PLUS multiplicativeExpression .)
    BRPAREN         reduce using rule 547 (additiveExpressionNotName -> additiveExpressionNotName PLUS multiplicativeExpression .)
    SEMI            reduce using rule 547 (additiveExpressionNotName -> additiveExpressionNotName PLUS multiplicativeExpression .)
    MULT            shift and go to state 747
    SLASH           shift and go to state 746
    PERCENT         shift and go to state 745


state 660

    (548) additiveExpressionNotName -> additiveExpressionNotName DASH multiplicativeExpression .
    (552) multiplicativeExpression -> multiplicativeExpression . MULT unaryExpression
    (553) multiplicativeExpression -> multiplicativeExpression . SLASH unaryExpression
    (554) multiplicativeExpression -> multiplicativeExpression . PERCENT unaryExpression

    PLUS            reduce using rule 548 (additiveExpressionNotName -> additiveExpressionNotName DASH multiplicativeExpression .)
    DASH            reduce using rule 548 (additiveExpressionNotName -> additiveExpressionNotName DASH multiplicativeExpression .)
    OP_SHR          reduce using rule 548 (additiveExpressionNotName -> additiveExpressionNotName DASH multiplicativeExpression .)
    OP_SHL          reduce using rule 548 (additiveExpressionNotName -> additiveExpressionNotName DASH multiplicativeExpression .)
    OP_SHRR         reduce using rule 548 (additiveExpressionNotName -> additiveExpressionNotName DASH multiplicativeExpression .)
    LESS            reduce using rule 548 (additiveExpressionNotName -> additiveExpressionNotName DASH multiplicativeExpression .)
    OP_GE           reduce using rule 548 (additiveExpressionNotName -> additiveExpressionNotName DASH multiplicativeExpression .)
    MORE            reduce using rule 548 (additiveExpressionNotName -> additiveExpressionNotName DASH multiplicativeExpression .)
    OP_LE           reduce using rule 548 (additiveExpressionNotName -> additiveExpressionNotName DASH multiplicativeExpression .)
    INSTANCEOF      reduce using rule 548 (additiveExpressionNotName -> additiveExpressionNotName DASH multiplicativeExpression .)
    OP_EQ           reduce using rule 548 (additiveExpressionNotName -> additiveExpressionNotName DASH multiplicativeExpression .)
    OP_NE           reduce using rule 548 (additiveExpressionNotName -> additiveExpressionNotName DASH multiplicativeExpression .)
    AND             reduce using rule 548 (additiveExpressionNotName -> additiveExpressionNotName DASH multiplicativeExpression .)
    CARET           reduce using rule 548 (additiveExpressionNotName -> additiveExpressionNotName DASH multiplicativeExpression .)
    VERTICAL        reduce using rule 548 (additiveExpressionNotName -> additiveExpressionNotName DASH multiplicativeExpression .)
    OP_LAND         reduce using rule 548 (additiveExpressionNotName -> additiveExpressionNotName DASH multiplicativeExpression .)
    QUES            reduce using rule 548 (additiveExpressionNotName -> additiveExpressionNotName DASH multiplicativeExpression .)
    OP_LOR          reduce using rule 548 (additiveExpressionNotName -> additiveExpressionNotName DASH multiplicativeExpression .)
    RPAREN          reduce using rule 548 (additiveExpressionNotName -> additiveExpressionNotName DASH multiplicativeExpression .)
    COMMA           reduce using rule 548 (additiveExpressionNotName -> additiveExpressionNotName DASH multiplicativeExpression .)
    BRPAREN         reduce using rule 548 (additiveExpressionNotName -> additiveExpressionNotName DASH multiplicativeExpression .)
    SEMI            reduce using rule 548 (additiveExpressionNotName -> additiveExpressionNotName DASH multiplicativeExpression .)
    MULT            shift and go to state 747
    SLASH           shift and go to state 746
    PERCENT         shift and go to state 745


state 661

    (524) relationalExpressionNotName -> relationalExpressionNotName LESS shiftExpression .
    (533) shiftExpression -> shiftExpression . OP_SHR additiveExpression
    (534) shiftExpression -> shiftExpression . OP_SHL additiveExpression
    (535) shiftExpression -> shiftExpression . OP_SHRR additiveExpression

    LESS            reduce using rule 524 (relationalExpressionNotName -> relationalExpressionNotName LESS shiftExpression .)
    OP_GE           reduce using rule 524 (relationalExpressionNotName -> relationalExpressionNotName LESS shiftExpression .)
    MORE            reduce using rule 524 (relationalExpressionNotName -> relationalExpressionNotName LESS shiftExpression .)
    OP_LE           reduce using rule 524 (relationalExpressionNotName -> relationalExpressionNotName LESS shiftExpression .)
    INSTANCEOF      reduce using rule 524 (relationalExpressionNotName -> relationalExpressionNotName LESS shiftExpression .)
    OP_EQ           reduce using rule 524 (relationalExpressionNotName -> relationalExpressionNotName LESS shiftExpression .)
    OP_NE           reduce using rule 524 (relationalExpressionNotName -> relationalExpressionNotName LESS shiftExpression .)
    AND             reduce using rule 524 (relationalExpressionNotName -> relationalExpressionNotName LESS shiftExpression .)
    CARET           reduce using rule 524 (relationalExpressionNotName -> relationalExpressionNotName LESS shiftExpression .)
    VERTICAL        reduce using rule 524 (relationalExpressionNotName -> relationalExpressionNotName LESS shiftExpression .)
    OP_LAND         reduce using rule 524 (relationalExpressionNotName -> relationalExpressionNotName LESS shiftExpression .)
    QUES            reduce using rule 524 (relationalExpressionNotName -> relationalExpressionNotName LESS shiftExpression .)
    OP_LOR          reduce using rule 524 (relationalExpressionNotName -> relationalExpressionNotName LESS shiftExpression .)
    COMMA           reduce using rule 524 (relationalExpressionNotName -> relationalExpressionNotName LESS shiftExpression .)
    BRPAREN         reduce using rule 524 (relationalExpressionNotName -> relationalExpressionNotName LESS shiftExpression .)
    RPAREN          reduce using rule 524 (relationalExpressionNotName -> relationalExpressionNotName LESS shiftExpression .)
    SEMI            reduce using rule 524 (relationalExpressionNotName -> relationalExpressionNotName LESS shiftExpression .)
    OP_SHR          shift and go to state 750
    OP_SHL          shift and go to state 748
    OP_SHRR         shift and go to state 749


state 662

    (527) relationalExpressionNotName -> relationalExpressionNotName OP_LE shiftExpression .
    (533) shiftExpression -> shiftExpression . OP_SHR additiveExpression
    (534) shiftExpression -> shiftExpression . OP_SHL additiveExpression
    (535) shiftExpression -> shiftExpression . OP_SHRR additiveExpression

    LESS            reduce using rule 527 (relationalExpressionNotName -> relationalExpressionNotName OP_LE shiftExpression .)
    OP_GE           reduce using rule 527 (relationalExpressionNotName -> relationalExpressionNotName OP_LE shiftExpression .)
    MORE            reduce using rule 527 (relationalExpressionNotName -> relationalExpressionNotName OP_LE shiftExpression .)
    OP_LE           reduce using rule 527 (relationalExpressionNotName -> relationalExpressionNotName OP_LE shiftExpression .)
    INSTANCEOF      reduce using rule 527 (relationalExpressionNotName -> relationalExpressionNotName OP_LE shiftExpression .)
    OP_EQ           reduce using rule 527 (relationalExpressionNotName -> relationalExpressionNotName OP_LE shiftExpression .)
    OP_NE           reduce using rule 527 (relationalExpressionNotName -> relationalExpressionNotName OP_LE shiftExpression .)
    AND             reduce using rule 527 (relationalExpressionNotName -> relationalExpressionNotName OP_LE shiftExpression .)
    CARET           reduce using rule 527 (relationalExpressionNotName -> relationalExpressionNotName OP_LE shiftExpression .)
    VERTICAL        reduce using rule 527 (relationalExpressionNotName -> relationalExpressionNotName OP_LE shiftExpression .)
    OP_LAND         reduce using rule 527 (relationalExpressionNotName -> relationalExpressionNotName OP_LE shiftExpression .)
    QUES            reduce using rule 527 (relationalExpressionNotName -> relationalExpressionNotName OP_LE shiftExpression .)
    OP_LOR          reduce using rule 527 (relationalExpressionNotName -> relationalExpressionNotName OP_LE shiftExpression .)
    COMMA           reduce using rule 527 (relationalExpressionNotName -> relationalExpressionNotName OP_LE shiftExpression .)
    BRPAREN         reduce using rule 527 (relationalExpressionNotName -> relationalExpressionNotName OP_LE shiftExpression .)
    RPAREN          reduce using rule 527 (relationalExpressionNotName -> relationalExpressionNotName OP_LE shiftExpression .)
    SEMI            reduce using rule 527 (relationalExpressionNotName -> relationalExpressionNotName OP_LE shiftExpression .)
    OP_SHR          shift and go to state 750
    OP_SHL          shift and go to state 748
    OP_SHRR         shift and go to state 749


state 663

    (525) relationalExpressionNotName -> relationalExpressionNotName OP_GE shiftExpression .
    (533) shiftExpression -> shiftExpression . OP_SHR additiveExpression
    (534) shiftExpression -> shiftExpression . OP_SHL additiveExpression
    (535) shiftExpression -> shiftExpression . OP_SHRR additiveExpression

    LESS            reduce using rule 525 (relationalExpressionNotName -> relationalExpressionNotName OP_GE shiftExpression .)
    OP_GE           reduce using rule 525 (relationalExpressionNotName -> relationalExpressionNotName OP_GE shiftExpression .)
    MORE            reduce using rule 525 (relationalExpressionNotName -> relationalExpressionNotName OP_GE shiftExpression .)
    OP_LE           reduce using rule 525 (relationalExpressionNotName -> relationalExpressionNotName OP_GE shiftExpression .)
    INSTANCEOF      reduce using rule 525 (relationalExpressionNotName -> relationalExpressionNotName OP_GE shiftExpression .)
    OP_EQ           reduce using rule 525 (relationalExpressionNotName -> relationalExpressionNotName OP_GE shiftExpression .)
    OP_NE           reduce using rule 525 (relationalExpressionNotName -> relationalExpressionNotName OP_GE shiftExpression .)
    AND             reduce using rule 525 (relationalExpressionNotName -> relationalExpressionNotName OP_GE shiftExpression .)
    CARET           reduce using rule 525 (relationalExpressionNotName -> relationalExpressionNotName OP_GE shiftExpression .)
    VERTICAL        reduce using rule 525 (relationalExpressionNotName -> relationalExpressionNotName OP_GE shiftExpression .)
    OP_LAND         reduce using rule 525 (relationalExpressionNotName -> relationalExpressionNotName OP_GE shiftExpression .)
    QUES            reduce using rule 525 (relationalExpressionNotName -> relationalExpressionNotName OP_GE shiftExpression .)
    OP_LOR          reduce using rule 525 (relationalExpressionNotName -> relationalExpressionNotName OP_GE shiftExpression .)
    COMMA           reduce using rule 525 (relationalExpressionNotName -> relationalExpressionNotName OP_GE shiftExpression .)
    BRPAREN         reduce using rule 525 (relationalExpressionNotName -> relationalExpressionNotName OP_GE shiftExpression .)
    RPAREN          reduce using rule 525 (relationalExpressionNotName -> relationalExpressionNotName OP_GE shiftExpression .)
    SEMI            reduce using rule 525 (relationalExpressionNotName -> relationalExpressionNotName OP_GE shiftExpression .)
    OP_SHR          shift and go to state 750
    OP_SHL          shift and go to state 748
    OP_SHRR         shift and go to state 749


state 664

    (526) relationalExpressionNotName -> relationalExpressionNotName MORE shiftExpression .
    (533) shiftExpression -> shiftExpression . OP_SHR additiveExpression
    (534) shiftExpression -> shiftExpression . OP_SHL additiveExpression
    (535) shiftExpression -> shiftExpression . OP_SHRR additiveExpression

    LESS            reduce using rule 526 (relationalExpressionNotName -> relationalExpressionNotName MORE shiftExpression .)
    OP_GE           reduce using rule 526 (relationalExpressionNotName -> relationalExpressionNotName MORE shiftExpression .)
    MORE            reduce using rule 526 (relationalExpressionNotName -> relationalExpressionNotName MORE shiftExpression .)
    OP_LE           reduce using rule 526 (relationalExpressionNotName -> relationalExpressionNotName MORE shiftExpression .)
    INSTANCEOF      reduce using rule 526 (relationalExpressionNotName -> relationalExpressionNotName MORE shiftExpression .)
    OP_EQ           reduce using rule 526 (relationalExpressionNotName -> relationalExpressionNotName MORE shiftExpression .)
    OP_NE           reduce using rule 526 (relationalExpressionNotName -> relationalExpressionNotName MORE shiftExpression .)
    AND             reduce using rule 526 (relationalExpressionNotName -> relationalExpressionNotName MORE shiftExpression .)
    CARET           reduce using rule 526 (relationalExpressionNotName -> relationalExpressionNotName MORE shiftExpression .)
    VERTICAL        reduce using rule 526 (relationalExpressionNotName -> relationalExpressionNotName MORE shiftExpression .)
    OP_LAND         reduce using rule 526 (relationalExpressionNotName -> relationalExpressionNotName MORE shiftExpression .)
    QUES            reduce using rule 526 (relationalExpressionNotName -> relationalExpressionNotName MORE shiftExpression .)
    OP_LOR          reduce using rule 526 (relationalExpressionNotName -> relationalExpressionNotName MORE shiftExpression .)
    COMMA           reduce using rule 526 (relationalExpressionNotName -> relationalExpressionNotName MORE shiftExpression .)
    BRPAREN         reduce using rule 526 (relationalExpressionNotName -> relationalExpressionNotName MORE shiftExpression .)
    RPAREN          reduce using rule 526 (relationalExpressionNotName -> relationalExpressionNotName MORE shiftExpression .)
    SEMI            reduce using rule 526 (relationalExpressionNotName -> relationalExpressionNotName MORE shiftExpression .)
    OP_SHR          shift and go to state 750
    OP_SHL          shift and go to state 748
    OP_SHRR         shift and go to state 749


state 665

    (606) primaryNoNewArray -> primitiveType arrays DOT . CLASS

    CLASS           shift and go to state 826


state 666

    (607) primaryNoNewArray -> primitiveType DOT CLASS .

    FLPAREN         reduce using rule 607 (primaryNoNewArray -> primitiveType DOT CLASS .)
    DOT             reduce using rule 607 (primaryNoNewArray -> primitiveType DOT CLASS .)
    OP_INC          reduce using rule 607 (primaryNoNewArray -> primitiveType DOT CLASS .)
    OP_DEC          reduce using rule 607 (primaryNoNewArray -> primitiveType DOT CLASS .)
    MULT            reduce using rule 607 (primaryNoNewArray -> primitiveType DOT CLASS .)
    SLASH           reduce using rule 607 (primaryNoNewArray -> primitiveType DOT CLASS .)
    PERCENT         reduce using rule 607 (primaryNoNewArray -> primitiveType DOT CLASS .)
    PLUS            reduce using rule 607 (primaryNoNewArray -> primitiveType DOT CLASS .)
    DASH            reduce using rule 607 (primaryNoNewArray -> primitiveType DOT CLASS .)
    OP_SHR          reduce using rule 607 (primaryNoNewArray -> primitiveType DOT CLASS .)
    OP_SHL          reduce using rule 607 (primaryNoNewArray -> primitiveType DOT CLASS .)
    OP_SHRR         reduce using rule 607 (primaryNoNewArray -> primitiveType DOT CLASS .)
    LESS            reduce using rule 607 (primaryNoNewArray -> primitiveType DOT CLASS .)
    OP_GE           reduce using rule 607 (primaryNoNewArray -> primitiveType DOT CLASS .)
    MORE            reduce using rule 607 (primaryNoNewArray -> primitiveType DOT CLASS .)
    OP_LE           reduce using rule 607 (primaryNoNewArray -> primitiveType DOT CLASS .)
    INSTANCEOF      reduce using rule 607 (primaryNoNewArray -> primitiveType DOT CLASS .)
    OP_EQ           reduce using rule 607 (primaryNoNewArray -> primitiveType DOT CLASS .)
    OP_NE           reduce using rule 607 (primaryNoNewArray -> primitiveType DOT CLASS .)
    AND             reduce using rule 607 (primaryNoNewArray -> primitiveType DOT CLASS .)
    CARET           reduce using rule 607 (primaryNoNewArray -> primitiveType DOT CLASS .)
    VERTICAL        reduce using rule 607 (primaryNoNewArray -> primitiveType DOT CLASS .)
    OP_LAND         reduce using rule 607 (primaryNoNewArray -> primitiveType DOT CLASS .)
    QUES            reduce using rule 607 (primaryNoNewArray -> primitiveType DOT CLASS .)
    OP_LOR          reduce using rule 607 (primaryNoNewArray -> primitiveType DOT CLASS .)
    SEMI            reduce using rule 607 (primaryNoNewArray -> primitiveType DOT CLASS .)
    COLON           reduce using rule 607 (primaryNoNewArray -> primitiveType DOT CLASS .)
    COMMA           reduce using rule 607 (primaryNoNewArray -> primitiveType DOT CLASS .)
    RPAREN          reduce using rule 607 (primaryNoNewArray -> primitiveType DOT CLASS .)
    FRPAREN         reduce using rule 607 (primaryNoNewArray -> primitiveType DOT CLASS .)
    BRPAREN         reduce using rule 607 (primaryNoNewArray -> primitiveType DOT CLASS .)
    ASS             reduce using rule 607 (primaryNoNewArray -> primitiveType DOT CLASS .)
    ASS_ADD         reduce using rule 607 (primaryNoNewArray -> primitiveType DOT CLASS .)
    ASS_SUB         reduce using rule 607 (primaryNoNewArray -> primitiveType DOT CLASS .)
    ASS_MUL         reduce using rule 607 (primaryNoNewArray -> primitiveType DOT CLASS .)
    ASS_DIV         reduce using rule 607 (primaryNoNewArray -> primitiveType DOT CLASS .)
    ASS_AND         reduce using rule 607 (primaryNoNewArray -> primitiveType DOT CLASS .)
    ASS_OR          reduce using rule 607 (primaryNoNewArray -> primitiveType DOT CLASS .)
    ASS_XOR         reduce using rule 607 (primaryNoNewArray -> primitiveType DOT CLASS .)
    ASS_MOD         reduce using rule 607 (primaryNoNewArray -> primitiveType DOT CLASS .)
    ASS_SHL         reduce using rule 607 (primaryNoNewArray -> primitiveType DOT CLASS .)
    ASS_SHRR        reduce using rule 607 (primaryNoNewArray -> primitiveType DOT CLASS .)
    ASS_SHR         reduce using rule 607 (primaryNoNewArray -> primitiveType DOT CLASS .)


state 667

    (516) instanceOfExpressionNotName -> instanceOfExpressionNotName INSTANCEOF referenceType .

    INSTANCEOF      reduce using rule 516 (instanceOfExpressionNotName -> instanceOfExpressionNotName INSTANCEOF referenceType .)
    OP_EQ           reduce using rule 516 (instanceOfExpressionNotName -> instanceOfExpressionNotName INSTANCEOF referenceType .)
    OP_NE           reduce using rule 516 (instanceOfExpressionNotName -> instanceOfExpressionNotName INSTANCEOF referenceType .)
    AND             reduce using rule 516 (instanceOfExpressionNotName -> instanceOfExpressionNotName INSTANCEOF referenceType .)
    CARET           reduce using rule 516 (instanceOfExpressionNotName -> instanceOfExpressionNotName INSTANCEOF referenceType .)
    VERTICAL        reduce using rule 516 (instanceOfExpressionNotName -> instanceOfExpressionNotName INSTANCEOF referenceType .)
    OP_LAND         reduce using rule 516 (instanceOfExpressionNotName -> instanceOfExpressionNotName INSTANCEOF referenceType .)
    QUES            reduce using rule 516 (instanceOfExpressionNotName -> instanceOfExpressionNotName INSTANCEOF referenceType .)
    OP_LOR          reduce using rule 516 (instanceOfExpressionNotName -> instanceOfExpressionNotName INSTANCEOF referenceType .)
    RPAREN          reduce using rule 516 (instanceOfExpressionNotName -> instanceOfExpressionNotName INSTANCEOF referenceType .)
    COMMA           reduce using rule 516 (instanceOfExpressionNotName -> instanceOfExpressionNotName INSTANCEOF referenceType .)
    BRPAREN         reduce using rule 516 (instanceOfExpressionNotName -> instanceOfExpressionNotName INSTANCEOF referenceType .)
    SEMI            reduce using rule 516 (instanceOfExpressionNotName -> instanceOfExpressionNotName INSTANCEOF referenceType .)


state 668

    (558) multiplicativeExpressionNotName -> multiplicativeExpressionNotName PERCENT unaryExpression .

    MULT            reduce using rule 558 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName PERCENT unaryExpression .)
    SLASH           reduce using rule 558 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName PERCENT unaryExpression .)
    PERCENT         reduce using rule 558 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName PERCENT unaryExpression .)
    PLUS            reduce using rule 558 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName PERCENT unaryExpression .)
    DASH            reduce using rule 558 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName PERCENT unaryExpression .)
    OP_SHR          reduce using rule 558 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName PERCENT unaryExpression .)
    OP_SHL          reduce using rule 558 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName PERCENT unaryExpression .)
    OP_SHRR         reduce using rule 558 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName PERCENT unaryExpression .)
    LESS            reduce using rule 558 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName PERCENT unaryExpression .)
    OP_GE           reduce using rule 558 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName PERCENT unaryExpression .)
    MORE            reduce using rule 558 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName PERCENT unaryExpression .)
    OP_LE           reduce using rule 558 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName PERCENT unaryExpression .)
    INSTANCEOF      reduce using rule 558 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName PERCENT unaryExpression .)
    OP_EQ           reduce using rule 558 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName PERCENT unaryExpression .)
    OP_NE           reduce using rule 558 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName PERCENT unaryExpression .)
    AND             reduce using rule 558 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName PERCENT unaryExpression .)
    CARET           reduce using rule 558 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName PERCENT unaryExpression .)
    VERTICAL        reduce using rule 558 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName PERCENT unaryExpression .)
    OP_LAND         reduce using rule 558 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName PERCENT unaryExpression .)
    QUES            reduce using rule 558 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName PERCENT unaryExpression .)
    OP_LOR          reduce using rule 558 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName PERCENT unaryExpression .)
    SEMI            reduce using rule 558 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName PERCENT unaryExpression .)
    RPAREN          reduce using rule 558 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName PERCENT unaryExpression .)
    COMMA           reduce using rule 558 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName PERCENT unaryExpression .)
    BRPAREN         reduce using rule 558 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName PERCENT unaryExpression .)


state 669

    (557) multiplicativeExpressionNotName -> multiplicativeExpressionNotName SLASH unaryExpression .

    MULT            reduce using rule 557 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName SLASH unaryExpression .)
    SLASH           reduce using rule 557 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName SLASH unaryExpression .)
    PERCENT         reduce using rule 557 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName SLASH unaryExpression .)
    PLUS            reduce using rule 557 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName SLASH unaryExpression .)
    DASH            reduce using rule 557 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName SLASH unaryExpression .)
    OP_SHR          reduce using rule 557 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName SLASH unaryExpression .)
    OP_SHL          reduce using rule 557 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName SLASH unaryExpression .)
    OP_SHRR         reduce using rule 557 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName SLASH unaryExpression .)
    LESS            reduce using rule 557 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName SLASH unaryExpression .)
    OP_GE           reduce using rule 557 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName SLASH unaryExpression .)
    MORE            reduce using rule 557 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName SLASH unaryExpression .)
    OP_LE           reduce using rule 557 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName SLASH unaryExpression .)
    INSTANCEOF      reduce using rule 557 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName SLASH unaryExpression .)
    OP_EQ           reduce using rule 557 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName SLASH unaryExpression .)
    OP_NE           reduce using rule 557 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName SLASH unaryExpression .)
    AND             reduce using rule 557 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName SLASH unaryExpression .)
    CARET           reduce using rule 557 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName SLASH unaryExpression .)
    VERTICAL        reduce using rule 557 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName SLASH unaryExpression .)
    OP_LAND         reduce using rule 557 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName SLASH unaryExpression .)
    QUES            reduce using rule 557 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName SLASH unaryExpression .)
    OP_LOR          reduce using rule 557 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName SLASH unaryExpression .)
    SEMI            reduce using rule 557 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName SLASH unaryExpression .)
    RPAREN          reduce using rule 557 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName SLASH unaryExpression .)
    COMMA           reduce using rule 557 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName SLASH unaryExpression .)
    BRPAREN         reduce using rule 557 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName SLASH unaryExpression .)


state 670

    (556) multiplicativeExpressionNotName -> multiplicativeExpressionNotName MULT unaryExpression .

    MULT            reduce using rule 556 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName MULT unaryExpression .)
    SLASH           reduce using rule 556 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName MULT unaryExpression .)
    PERCENT         reduce using rule 556 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName MULT unaryExpression .)
    PLUS            reduce using rule 556 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName MULT unaryExpression .)
    DASH            reduce using rule 556 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName MULT unaryExpression .)
    OP_SHR          reduce using rule 556 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName MULT unaryExpression .)
    OP_SHL          reduce using rule 556 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName MULT unaryExpression .)
    OP_SHRR         reduce using rule 556 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName MULT unaryExpression .)
    LESS            reduce using rule 556 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName MULT unaryExpression .)
    OP_GE           reduce using rule 556 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName MULT unaryExpression .)
    MORE            reduce using rule 556 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName MULT unaryExpression .)
    OP_LE           reduce using rule 556 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName MULT unaryExpression .)
    INSTANCEOF      reduce using rule 556 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName MULT unaryExpression .)
    OP_EQ           reduce using rule 556 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName MULT unaryExpression .)
    OP_NE           reduce using rule 556 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName MULT unaryExpression .)
    AND             reduce using rule 556 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName MULT unaryExpression .)
    CARET           reduce using rule 556 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName MULT unaryExpression .)
    VERTICAL        reduce using rule 556 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName MULT unaryExpression .)
    OP_LAND         reduce using rule 556 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName MULT unaryExpression .)
    QUES            reduce using rule 556 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName MULT unaryExpression .)
    OP_LOR          reduce using rule 556 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName MULT unaryExpression .)
    SEMI            reduce using rule 556 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName MULT unaryExpression .)
    RPAREN          reduce using rule 556 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName MULT unaryExpression .)
    COMMA           reduce using rule 556 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName MULT unaryExpression .)
    BRPAREN         reduce using rule 556 (multiplicativeExpressionNotName -> multiplicativeExpressionNotName MULT unaryExpression .)


state 671

    (503) andExpressionNotName -> andExpressionNotName AND equalityExpression .
    (506) equalityExpression -> equalityExpression . OP_EQ instanceOfExpression
    (507) equalityExpression -> equalityExpression . OP_NE instanceOfExpression

    AND             reduce using rule 503 (andExpressionNotName -> andExpressionNotName AND equalityExpression .)
    CARET           reduce using rule 503 (andExpressionNotName -> andExpressionNotName AND equalityExpression .)
    VERTICAL        reduce using rule 503 (andExpressionNotName -> andExpressionNotName AND equalityExpression .)
    OP_LAND         reduce using rule 503 (andExpressionNotName -> andExpressionNotName AND equalityExpression .)
    QUES            reduce using rule 503 (andExpressionNotName -> andExpressionNotName AND equalityExpression .)
    OP_LOR          reduce using rule 503 (andExpressionNotName -> andExpressionNotName AND equalityExpression .)
    RPAREN          reduce using rule 503 (andExpressionNotName -> andExpressionNotName AND equalityExpression .)
    SEMI            reduce using rule 503 (andExpressionNotName -> andExpressionNotName AND equalityExpression .)
    COMMA           reduce using rule 503 (andExpressionNotName -> andExpressionNotName AND equalityExpression .)
    BRPAREN         reduce using rule 503 (andExpressionNotName -> andExpressionNotName AND equalityExpression .)
    OP_EQ           shift and go to state 741
    OP_NE           shift and go to state 740


state 672

    (449) arrayAccess -> arrayCreationWithArrayInitializer FLPAREN expression . FRPAREN

    FRPAREN         shift and go to state 827


state 673

    (498) exclusiveOrExpressionNotName -> exclusiveOrExpressionNotName CARET andExpression .
    (501) andExpression -> andExpression . AND equalityExpression

    CARET           reduce using rule 498 (exclusiveOrExpressionNotName -> exclusiveOrExpressionNotName CARET andExpression .)
    VERTICAL        reduce using rule 498 (exclusiveOrExpressionNotName -> exclusiveOrExpressionNotName CARET andExpression .)
    OP_LAND         reduce using rule 498 (exclusiveOrExpressionNotName -> exclusiveOrExpressionNotName CARET andExpression .)
    QUES            reduce using rule 498 (exclusiveOrExpressionNotName -> exclusiveOrExpressionNotName CARET andExpression .)
    OP_LOR          reduce using rule 498 (exclusiveOrExpressionNotName -> exclusiveOrExpressionNotName CARET andExpression .)
    RPAREN          reduce using rule 498 (exclusiveOrExpressionNotName -> exclusiveOrExpressionNotName CARET andExpression .)
    COMMA           reduce using rule 498 (exclusiveOrExpressionNotName -> exclusiveOrExpressionNotName CARET andExpression .)
    BRPAREN         reduce using rule 498 (exclusiveOrExpressionNotName -> exclusiveOrExpressionNotName CARET andExpression .)
    SEMI            reduce using rule 498 (exclusiveOrExpressionNotName -> exclusiveOrExpressionNotName CARET andExpression .)
    AND             shift and go to state 739


state 674

    (538) shiftExpressionNotName -> shiftExpressionNotName OP_SHL additiveExpression .
    (544) additiveExpression -> additiveExpression . PLUS multiplicativeExpression
    (545) additiveExpression -> additiveExpression . DASH multiplicativeExpression

    OP_SHR          reduce using rule 538 (shiftExpressionNotName -> shiftExpressionNotName OP_SHL additiveExpression .)
    OP_SHL          reduce using rule 538 (shiftExpressionNotName -> shiftExpressionNotName OP_SHL additiveExpression .)
    OP_SHRR         reduce using rule 538 (shiftExpressionNotName -> shiftExpressionNotName OP_SHL additiveExpression .)
    LESS            reduce using rule 538 (shiftExpressionNotName -> shiftExpressionNotName OP_SHL additiveExpression .)
    OP_GE           reduce using rule 538 (shiftExpressionNotName -> shiftExpressionNotName OP_SHL additiveExpression .)
    MORE            reduce using rule 538 (shiftExpressionNotName -> shiftExpressionNotName OP_SHL additiveExpression .)
    OP_LE           reduce using rule 538 (shiftExpressionNotName -> shiftExpressionNotName OP_SHL additiveExpression .)
    INSTANCEOF      reduce using rule 538 (shiftExpressionNotName -> shiftExpressionNotName OP_SHL additiveExpression .)
    OP_EQ           reduce using rule 538 (shiftExpressionNotName -> shiftExpressionNotName OP_SHL additiveExpression .)
    OP_NE           reduce using rule 538 (shiftExpressionNotName -> shiftExpressionNotName OP_SHL additiveExpression .)
    AND             reduce using rule 538 (shiftExpressionNotName -> shiftExpressionNotName OP_SHL additiveExpression .)
    CARET           reduce using rule 538 (shiftExpressionNotName -> shiftExpressionNotName OP_SHL additiveExpression .)
    VERTICAL        reduce using rule 538 (shiftExpressionNotName -> shiftExpressionNotName OP_SHL additiveExpression .)
    OP_LAND         reduce using rule 538 (shiftExpressionNotName -> shiftExpressionNotName OP_SHL additiveExpression .)
    QUES            reduce using rule 538 (shiftExpressionNotName -> shiftExpressionNotName OP_SHL additiveExpression .)
    OP_LOR          reduce using rule 538 (shiftExpressionNotName -> shiftExpressionNotName OP_SHL additiveExpression .)
    RPAREN          reduce using rule 538 (shiftExpressionNotName -> shiftExpressionNotName OP_SHL additiveExpression .)
    COMMA           reduce using rule 538 (shiftExpressionNotName -> shiftExpressionNotName OP_SHL additiveExpression .)
    BRPAREN         reduce using rule 538 (shiftExpressionNotName -> shiftExpressionNotName OP_SHL additiveExpression .)
    SEMI            reduce using rule 538 (shiftExpressionNotName -> shiftExpressionNotName OP_SHL additiveExpression .)
    PLUS            shift and go to state 737
    DASH            shift and go to state 738


state 675

    (539) shiftExpressionNotName -> shiftExpressionNotName OP_SHRR additiveExpression .
    (544) additiveExpression -> additiveExpression . PLUS multiplicativeExpression
    (545) additiveExpression -> additiveExpression . DASH multiplicativeExpression

    OP_SHR          reduce using rule 539 (shiftExpressionNotName -> shiftExpressionNotName OP_SHRR additiveExpression .)
    OP_SHL          reduce using rule 539 (shiftExpressionNotName -> shiftExpressionNotName OP_SHRR additiveExpression .)
    OP_SHRR         reduce using rule 539 (shiftExpressionNotName -> shiftExpressionNotName OP_SHRR additiveExpression .)
    LESS            reduce using rule 539 (shiftExpressionNotName -> shiftExpressionNotName OP_SHRR additiveExpression .)
    OP_GE           reduce using rule 539 (shiftExpressionNotName -> shiftExpressionNotName OP_SHRR additiveExpression .)
    MORE            reduce using rule 539 (shiftExpressionNotName -> shiftExpressionNotName OP_SHRR additiveExpression .)
    OP_LE           reduce using rule 539 (shiftExpressionNotName -> shiftExpressionNotName OP_SHRR additiveExpression .)
    INSTANCEOF      reduce using rule 539 (shiftExpressionNotName -> shiftExpressionNotName OP_SHRR additiveExpression .)
    OP_EQ           reduce using rule 539 (shiftExpressionNotName -> shiftExpressionNotName OP_SHRR additiveExpression .)
    OP_NE           reduce using rule 539 (shiftExpressionNotName -> shiftExpressionNotName OP_SHRR additiveExpression .)
    AND             reduce using rule 539 (shiftExpressionNotName -> shiftExpressionNotName OP_SHRR additiveExpression .)
    CARET           reduce using rule 539 (shiftExpressionNotName -> shiftExpressionNotName OP_SHRR additiveExpression .)
    VERTICAL        reduce using rule 539 (shiftExpressionNotName -> shiftExpressionNotName OP_SHRR additiveExpression .)
    OP_LAND         reduce using rule 539 (shiftExpressionNotName -> shiftExpressionNotName OP_SHRR additiveExpression .)
    QUES            reduce using rule 539 (shiftExpressionNotName -> shiftExpressionNotName OP_SHRR additiveExpression .)
    OP_LOR          reduce using rule 539 (shiftExpressionNotName -> shiftExpressionNotName OP_SHRR additiveExpression .)
    RPAREN          reduce using rule 539 (shiftExpressionNotName -> shiftExpressionNotName OP_SHRR additiveExpression .)
    COMMA           reduce using rule 539 (shiftExpressionNotName -> shiftExpressionNotName OP_SHRR additiveExpression .)
    BRPAREN         reduce using rule 539 (shiftExpressionNotName -> shiftExpressionNotName OP_SHRR additiveExpression .)
    SEMI            reduce using rule 539 (shiftExpressionNotName -> shiftExpressionNotName OP_SHRR additiveExpression .)
    PLUS            shift and go to state 737
    DASH            shift and go to state 738


state 676

    (537) shiftExpressionNotName -> shiftExpressionNotName OP_SHR additiveExpression .
    (544) additiveExpression -> additiveExpression . PLUS multiplicativeExpression
    (545) additiveExpression -> additiveExpression . DASH multiplicativeExpression

    OP_SHR          reduce using rule 537 (shiftExpressionNotName -> shiftExpressionNotName OP_SHR additiveExpression .)
    OP_SHL          reduce using rule 537 (shiftExpressionNotName -> shiftExpressionNotName OP_SHR additiveExpression .)
    OP_SHRR         reduce using rule 537 (shiftExpressionNotName -> shiftExpressionNotName OP_SHR additiveExpression .)
    LESS            reduce using rule 537 (shiftExpressionNotName -> shiftExpressionNotName OP_SHR additiveExpression .)
    OP_GE           reduce using rule 537 (shiftExpressionNotName -> shiftExpressionNotName OP_SHR additiveExpression .)
    MORE            reduce using rule 537 (shiftExpressionNotName -> shiftExpressionNotName OP_SHR additiveExpression .)
    OP_LE           reduce using rule 537 (shiftExpressionNotName -> shiftExpressionNotName OP_SHR additiveExpression .)
    INSTANCEOF      reduce using rule 537 (shiftExpressionNotName -> shiftExpressionNotName OP_SHR additiveExpression .)
    OP_EQ           reduce using rule 537 (shiftExpressionNotName -> shiftExpressionNotName OP_SHR additiveExpression .)
    OP_NE           reduce using rule 537 (shiftExpressionNotName -> shiftExpressionNotName OP_SHR additiveExpression .)
    AND             reduce using rule 537 (shiftExpressionNotName -> shiftExpressionNotName OP_SHR additiveExpression .)
    CARET           reduce using rule 537 (shiftExpressionNotName -> shiftExpressionNotName OP_SHR additiveExpression .)
    VERTICAL        reduce using rule 537 (shiftExpressionNotName -> shiftExpressionNotName OP_SHR additiveExpression .)
    OP_LAND         reduce using rule 537 (shiftExpressionNotName -> shiftExpressionNotName OP_SHR additiveExpression .)
    QUES            reduce using rule 537 (shiftExpressionNotName -> shiftExpressionNotName OP_SHR additiveExpression .)
    OP_LOR          reduce using rule 537 (shiftExpressionNotName -> shiftExpressionNotName OP_SHR additiveExpression .)
    RPAREN          reduce using rule 537 (shiftExpressionNotName -> shiftExpressionNotName OP_SHR additiveExpression .)
    COMMA           reduce using rule 537 (shiftExpressionNotName -> shiftExpressionNotName OP_SHR additiveExpression .)
    BRPAREN         reduce using rule 537 (shiftExpressionNotName -> shiftExpressionNotName OP_SHR additiveExpression .)
    SEMI            reduce using rule 537 (shiftExpressionNotName -> shiftExpressionNotName OP_SHR additiveExpression .)
    PLUS            shift and go to state 737
    DASH            shift and go to state 738


state 677

    (493) inclusiveOrExpressionNotName -> inclusiveOrExpressionNotName VERTICAL exclusiveOrExpression .
    (496) exclusiveOrExpression -> exclusiveOrExpression . CARET andExpression

    VERTICAL        reduce using rule 493 (inclusiveOrExpressionNotName -> inclusiveOrExpressionNotName VERTICAL exclusiveOrExpression .)
    OP_LAND         reduce using rule 493 (inclusiveOrExpressionNotName -> inclusiveOrExpressionNotName VERTICAL exclusiveOrExpression .)
    QUES            reduce using rule 493 (inclusiveOrExpressionNotName -> inclusiveOrExpressionNotName VERTICAL exclusiveOrExpression .)
    OP_LOR          reduce using rule 493 (inclusiveOrExpressionNotName -> inclusiveOrExpressionNotName VERTICAL exclusiveOrExpression .)
    RPAREN          reduce using rule 493 (inclusiveOrExpressionNotName -> inclusiveOrExpressionNotName VERTICAL exclusiveOrExpression .)
    SEMI            reduce using rule 493 (inclusiveOrExpressionNotName -> inclusiveOrExpressionNotName VERTICAL exclusiveOrExpression .)
    COMMA           reduce using rule 493 (inclusiveOrExpressionNotName -> inclusiveOrExpressionNotName VERTICAL exclusiveOrExpression .)
    BRPAREN         reduce using rule 493 (inclusiveOrExpressionNotName -> inclusiveOrExpressionNotName VERTICAL exclusiveOrExpression .)
    CARET           shift and go to state 744


state 678

    (483) conditionalOrExpressionNotName -> conditionalOrExpressionNotName OP_LOR conditionalAndExpression .
    (486) conditionalAndExpression -> conditionalAndExpression . OP_LAND inclusiveOrExpression

    QUES            reduce using rule 483 (conditionalOrExpressionNotName -> conditionalOrExpressionNotName OP_LOR conditionalAndExpression .)
    OP_LOR          reduce using rule 483 (conditionalOrExpressionNotName -> conditionalOrExpressionNotName OP_LOR conditionalAndExpression .)
    RPAREN          reduce using rule 483 (conditionalOrExpressionNotName -> conditionalOrExpressionNotName OP_LOR conditionalAndExpression .)
    COMMA           reduce using rule 483 (conditionalOrExpressionNotName -> conditionalOrExpressionNotName OP_LOR conditionalAndExpression .)
    BRPAREN         reduce using rule 483 (conditionalOrExpressionNotName -> conditionalOrExpressionNotName OP_LOR conditionalAndExpression .)
    SEMI            reduce using rule 483 (conditionalOrExpressionNotName -> conditionalOrExpressionNotName OP_LOR conditionalAndExpression .)
    OP_LAND         shift and go to state 729


state 679

    (478) conditionalExpressionNotName -> conditionalOrExpressionNotName QUES expression . COLON conditionalExpression

    COLON           shift and go to state 828


state 680

    (528) relationalExpressionNotName -> name LESS . shiftExpression
    (82) typeArguments -> LESS . typeArgumentList1
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (87) typeArgumentList1 -> . typeArgument1
    (88) typeArgumentList1 -> . typeArgumentList COMMA typeArgument1
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (89) typeArgument1 -> . referenceType1
    (90) typeArgument1 -> . wildcard1
    (85) typeArgumentList -> . typeArgument
    (86) typeArgumentList -> . typeArgumentList COMMA typeArgument
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (91) referenceType1 -> . referenceType MORE
    (92) referenceType1 -> . classOrInterface LESS typeArgumentList2
    (108) wildcard1 -> . QUES MORE
    (109) wildcard1 -> . QUES wildcardBounds1
    (83) typeArgument -> . referenceType
    (84) typeArgument -> . wildcard
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (44) referenceType -> . classOrInterfaceType
    (45) referenceType -> . arrayType
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (104) wildcard -> . QUES
    (105) wildcard -> . QUES wildcardBounds
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (54) arrayType -> . genericType arrays
    (55) arrayType -> . genericType DOT name arrays
    (56) arrayType -> . primitiveType arrays
    (57) arrayType -> . name arrays
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    QUES            shift and go to state 515
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    Identifier      shift and go to state 68
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    multiplicativeExpression       shift and go to state 551
    primary                        shift and go to state 386
    primitiveType                  shift and go to state 830
    genericType                    shift and go to state 505
    shiftExpression                shift and go to state 616
    postDecrementExpression        shift and go to state 387
    classOrInterfaceType           shift and go to state 272
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    referenceType                  shift and go to state 506
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    wildcard1                      shift and go to state 508
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    typeArgumentList1              shift and go to state 509
    postIncrementExpression        shift and go to state 392
    typeArgument                   shift and go to state 510
    referenceType1                 shift and go to state 511
    arrayAccess                    shift and go to state 234
    castExpression                 shift and go to state 396
    postfixExpression              shift and go to state 394
    name                           shift and go to state 829
    unaryExpressionNotPlusMinus    shift and go to state 397
    typeArgument1                  shift and go to state 513
    arrayType                      shift and go to state 269
    classOrInterface               shift and go to state 514
    typeArgumentList               shift and go to state 507
    wildcard                       shift and go to state 516
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpressionName shift and go to state 187
    classInstanceCreationExpression shift and go to state 198

state 681

    (611) castExpression -> LPAREN name RPAREN . unaryExpressionNotPlusMinus
    (600) primaryNoNewArray -> LPAREN name RPAREN .
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    FLPAREN         reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    DOT             reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    OP_INC          reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    OP_DEC          reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    MULT            reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    SLASH           reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    PERCENT         reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    PLUS            reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    DASH            reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    OP_SHR          reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    OP_SHL          reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    OP_SHRR         reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    LESS            reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    OP_GE           reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    MORE            reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    OP_LE           reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    INSTANCEOF      reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    OP_EQ           reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    OP_NE           reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    AND             reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    CARET           reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    VERTICAL        reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    OP_LAND         reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    QUES            reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    OP_LOR          reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    SEMI            reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    COLON           reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    COMMA           reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    RPAREN          reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    FRPAREN         reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    BRPAREN         reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    primary                        shift and go to state 386
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    classInstanceCreationExpressionName shift and go to state 187
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    castExpression                 shift and go to state 396
    postfixExpression              shift and go to state 394
    name                           shift and go to state 393
    unaryExpressionNotPlusMinus    shift and go to state 831
    primitiveType                  shift and go to state 219
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 682

    (609) castExpression -> LPAREN name typeArguments . arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> LPAREN name typeArguments . DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (62) arrays_opt -> . arrays
    (63) arrays_opt -> . empty
    (59) arrays -> . array_loop
    (631) empty -> .
    (60) array_loop -> . array
    (61) array_loop -> . array_loop array
    (58) array -> . FLPAREN FRPAREN

    DOT             shift and go to state 832
    RPAREN          reduce using rule 631 (empty -> .)
    FLPAREN         shift and go to state 451

    arrays                         shift and go to state 698
    array_loop                     shift and go to state 413
    empty                          shift and go to state 686
    array                          shift and go to state 407
    arrays_opt                     shift and go to state 833

state 683

    (612) castExpression -> LPAREN name arrays . RPAREN unaryExpressionNotPlusMinus
    (605) primaryNoNewArray -> name arrays . DOT CLASS

    RPAREN          shift and go to state 834
    DOT             shift and go to state 640


state 684

    (601) primaryNoNewArray -> LPAREN expressionNotName RPAREN .

    FLPAREN         reduce using rule 601 (primaryNoNewArray -> LPAREN expressionNotName RPAREN .)
    DOT             reduce using rule 601 (primaryNoNewArray -> LPAREN expressionNotName RPAREN .)
    OP_INC          reduce using rule 601 (primaryNoNewArray -> LPAREN expressionNotName RPAREN .)
    OP_DEC          reduce using rule 601 (primaryNoNewArray -> LPAREN expressionNotName RPAREN .)
    MULT            reduce using rule 601 (primaryNoNewArray -> LPAREN expressionNotName RPAREN .)
    SLASH           reduce using rule 601 (primaryNoNewArray -> LPAREN expressionNotName RPAREN .)
    PERCENT         reduce using rule 601 (primaryNoNewArray -> LPAREN expressionNotName RPAREN .)
    PLUS            reduce using rule 601 (primaryNoNewArray -> LPAREN expressionNotName RPAREN .)
    DASH            reduce using rule 601 (primaryNoNewArray -> LPAREN expressionNotName RPAREN .)
    OP_SHR          reduce using rule 601 (primaryNoNewArray -> LPAREN expressionNotName RPAREN .)
    OP_SHL          reduce using rule 601 (primaryNoNewArray -> LPAREN expressionNotName RPAREN .)
    OP_SHRR         reduce using rule 601 (primaryNoNewArray -> LPAREN expressionNotName RPAREN .)
    LESS            reduce using rule 601 (primaryNoNewArray -> LPAREN expressionNotName RPAREN .)
    OP_GE           reduce using rule 601 (primaryNoNewArray -> LPAREN expressionNotName RPAREN .)
    MORE            reduce using rule 601 (primaryNoNewArray -> LPAREN expressionNotName RPAREN .)
    OP_LE           reduce using rule 601 (primaryNoNewArray -> LPAREN expressionNotName RPAREN .)
    INSTANCEOF      reduce using rule 601 (primaryNoNewArray -> LPAREN expressionNotName RPAREN .)
    OP_EQ           reduce using rule 601 (primaryNoNewArray -> LPAREN expressionNotName RPAREN .)
    OP_NE           reduce using rule 601 (primaryNoNewArray -> LPAREN expressionNotName RPAREN .)
    AND             reduce using rule 601 (primaryNoNewArray -> LPAREN expressionNotName RPAREN .)
    CARET           reduce using rule 601 (primaryNoNewArray -> LPAREN expressionNotName RPAREN .)
    VERTICAL        reduce using rule 601 (primaryNoNewArray -> LPAREN expressionNotName RPAREN .)
    OP_LAND         reduce using rule 601 (primaryNoNewArray -> LPAREN expressionNotName RPAREN .)
    QUES            reduce using rule 601 (primaryNoNewArray -> LPAREN expressionNotName RPAREN .)
    OP_LOR          reduce using rule 601 (primaryNoNewArray -> LPAREN expressionNotName RPAREN .)
    SEMI            reduce using rule 601 (primaryNoNewArray -> LPAREN expressionNotName RPAREN .)
    COLON           reduce using rule 601 (primaryNoNewArray -> LPAREN expressionNotName RPAREN .)
    COMMA           reduce using rule 601 (primaryNoNewArray -> LPAREN expressionNotName RPAREN .)
    RPAREN          reduce using rule 601 (primaryNoNewArray -> LPAREN expressionNotName RPAREN .)
    FRPAREN         reduce using rule 601 (primaryNoNewArray -> LPAREN expressionNotName RPAREN .)
    BRPAREN         reduce using rule 601 (primaryNoNewArray -> LPAREN expressionNotName RPAREN .)
    ASS             reduce using rule 601 (primaryNoNewArray -> LPAREN expressionNotName RPAREN .)
    ASS_ADD         reduce using rule 601 (primaryNoNewArray -> LPAREN expressionNotName RPAREN .)
    ASS_SUB         reduce using rule 601 (primaryNoNewArray -> LPAREN expressionNotName RPAREN .)
    ASS_MUL         reduce using rule 601 (primaryNoNewArray -> LPAREN expressionNotName RPAREN .)
    ASS_DIV         reduce using rule 601 (primaryNoNewArray -> LPAREN expressionNotName RPAREN .)
    ASS_AND         reduce using rule 601 (primaryNoNewArray -> LPAREN expressionNotName RPAREN .)
    ASS_OR          reduce using rule 601 (primaryNoNewArray -> LPAREN expressionNotName RPAREN .)
    ASS_XOR         reduce using rule 601 (primaryNoNewArray -> LPAREN expressionNotName RPAREN .)
    ASS_MOD         reduce using rule 601 (primaryNoNewArray -> LPAREN expressionNotName RPAREN .)
    ASS_SHL         reduce using rule 601 (primaryNoNewArray -> LPAREN expressionNotName RPAREN .)
    ASS_SHRR        reduce using rule 601 (primaryNoNewArray -> LPAREN expressionNotName RPAREN .)
    ASS_SHR         reduce using rule 601 (primaryNoNewArray -> LPAREN expressionNotName RPAREN .)


state 685

    (606) primaryNoNewArray -> primitiveType arrays . DOT CLASS
    (62) arrays_opt -> arrays .

    DOT             shift and go to state 665
    RPAREN          reduce using rule 62 (arrays_opt -> arrays .)


state 686

    (63) arrays_opt -> empty .

    ASS             reduce using rule 63 (arrays_opt -> empty .)
    SEMI            reduce using rule 63 (arrays_opt -> empty .)
    COMMA           reduce using rule 63 (arrays_opt -> empty .)
    COLON           reduce using rule 63 (arrays_opt -> empty .)
    THROWS          reduce using rule 63 (arrays_opt -> empty .)
    BLPAREN         reduce using rule 63 (arrays_opt -> empty .)
    RPAREN          reduce using rule 63 (arrays_opt -> empty .)
    DEFAULT         reduce using rule 63 (arrays_opt -> empty .)


state 687

    (608) castExpression -> LPAREN primitiveType arrays_opt . RPAREN unaryExpression

    RPAREN          shift and go to state 835


state 688

    (600) primaryNoNewArray -> LPAREN name . RPAREN
    (609) castExpression -> LPAREN name . typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> LPAREN name . typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> LPAREN name . RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> LPAREN name . arrays RPAREN unaryExpressionNotPlusMinus
    (32) qualifiedName -> name . DOT simpleName
    (479) conditionalExpressionNotName -> name . QUES expression COLON conditionalExpression
    (585) postfixExpression -> name .
    (484) conditionalOrExpressionNotName -> name . OP_LOR conditionalAndExpression
    (489) conditionalAndExpressionNotName -> name . OP_LAND inclusiveOrExpression
    (602) primaryNoNewArray -> name . DOT THIS
    (603) primaryNoNewArray -> name . DOT SUPER
    (604) primaryNoNewArray -> name . DOT CLASS
    (605) primaryNoNewArray -> name . arrays DOT CLASS
    (494) inclusiveOrExpressionNotName -> name . VERTICAL exclusiveOrExpression
    (340) methodInvocation -> name . LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> name . DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> name . FLPAREN expression FRPAREN
    (499) exclusiveOrExpressionNotName -> name . CARET andExpression
    (442) classInstanceCreationExpressionName -> name . DOT
    (504) andExpressionNotName -> name . AND equalityExpression
    (511) equalityExpressionNotName -> name . OP_EQ instanceOfExpression
    (512) equalityExpressionNotName -> name . OP_NE instanceOfExpression
    (517) instanceOfExpressionNotName -> name . INSTANCEOF referenceType
    (528) relationalExpressionNotName -> name . LESS shiftExpression
    (529) relationalExpressionNotName -> name . OP_GE shiftExpression
    (530) relationalExpressionNotName -> name . MORE shiftExpression
    (531) relationalExpressionNotName -> name . OP_LE shiftExpression
    (540) shiftExpressionNotName -> name . OP_SHR additiveExpression
    (541) shiftExpressionNotName -> name . OP_SHL additiveExpression
    (542) shiftExpressionNotName -> name . OP_SHRR additiveExpression
    (549) additiveExpressionNotName -> name . PLUS multiplicativeExpression
    (550) additiveExpressionNotName -> name . DASH multiplicativeExpression
    (559) multiplicativeExpressionNotName -> name . MULT unaryExpression
    (560) multiplicativeExpressionNotName -> name . SLASH unaryExpression
    (561) multiplicativeExpressionNotName -> name . PERCENT unaryExpression
    (82) typeArguments -> . LESS typeArgumentList1
    (59) arrays -> . array_loop
    (60) array_loop -> . array
    (61) array_loop -> . array_loop array
    (58) array -> . FLPAREN FRPAREN

    RPAREN          shift and go to state 836
    DOT             shift and go to state 409
    QUES            shift and go to state 427
    OP_INC          reduce using rule 585 (postfixExpression -> name .)
    OP_DEC          reduce using rule 585 (postfixExpression -> name .)
    ASS             reduce using rule 585 (postfixExpression -> name .)
    ASS_ADD         reduce using rule 585 (postfixExpression -> name .)
    ASS_SUB         reduce using rule 585 (postfixExpression -> name .)
    ASS_MUL         reduce using rule 585 (postfixExpression -> name .)
    ASS_DIV         reduce using rule 585 (postfixExpression -> name .)
    ASS_AND         reduce using rule 585 (postfixExpression -> name .)
    ASS_OR          reduce using rule 585 (postfixExpression -> name .)
    ASS_XOR         reduce using rule 585 (postfixExpression -> name .)
    ASS_MOD         reduce using rule 585 (postfixExpression -> name .)
    ASS_SHL         reduce using rule 585 (postfixExpression -> name .)
    ASS_SHRR        reduce using rule 585 (postfixExpression -> name .)
    ASS_SHR         reduce using rule 585 (postfixExpression -> name .)
    OP_LOR          shift and go to state 412
    OP_LAND         shift and go to state 406
    VERTICAL        shift and go to state 416
    LPAREN          shift and go to state 404
    FLPAREN         shift and go to state 411
    CARET           shift and go to state 403
    AND             shift and go to state 423
    OP_EQ           shift and go to state 424
    OP_NE           shift and go to state 410
    INSTANCEOF      shift and go to state 428
    LESS            shift and go to state 680
    OP_GE           shift and go to state 425
    MORE            shift and go to state 429
    OP_LE           shift and go to state 408
    OP_SHR          shift and go to state 419
    OP_SHL          shift and go to state 421
    OP_SHRR         shift and go to state 418
    PLUS            shift and go to state 415
    DASH            shift and go to state 420
    MULT            shift and go to state 414
    SLASH           shift and go to state 422
    PERCENT         shift and go to state 417

    array                          shift and go to state 407
    typeArguments                  shift and go to state 682
    array_loop                     shift and go to state 413
    arrays                         shift and go to state 683

state 689

    (264) memberValueArrayInitializer -> BLPAREN memberValues COMMA . BRPAREN
    (269) memberValues -> memberValues COMMA . memberValue
    (260) memberValue -> . conditionalExpressionNotName
    (261) memberValue -> . name
    (262) memberValue -> . annotation
    (263) memberValue -> . memberValueArrayInitializer
    (477) conditionalExpressionNotName -> . conditionalOrExpressionNotName
    (478) conditionalExpressionNotName -> . conditionalOrExpressionNotName QUES expression COLON conditionalExpression
    (479) conditionalExpressionNotName -> . name QUES expression COLON conditionalExpression
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (270) annotation -> . normalAnnotation
    (271) annotation -> . markerAnnotation
    (272) annotation -> . singleMemberAnnotation
    (264) memberValueArrayInitializer -> . BLPAREN memberValues COMMA BRPAREN
    (265) memberValueArrayInitializer -> . BLPAREN memberValues BRPAREN
    (266) memberValueArrayInitializer -> . BLPAREN COMMA BRPAREN
    (267) memberValueArrayInitializer -> . BLPAREN BRPAREN
    (482) conditionalOrExpressionNotName -> . conditionalAndExpressionNotName
    (483) conditionalOrExpressionNotName -> . conditionalOrExpressionNotName OP_LOR conditionalAndExpression
    (484) conditionalOrExpressionNotName -> . name OP_LOR conditionalAndExpression
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (273) normalAnnotation -> . annotationName LPAREN memberValuePairs_opt RPAREN
    (280) markerAnnotation -> . annotationName
    (281) singleMemberAnnotation -> . annotationName LPAREN singleMemberAnnotationMemberValue RPAREN
    (487) conditionalAndExpressionNotName -> . inclusiveOrExpressionNotName
    (488) conditionalAndExpressionNotName -> . conditionalAndExpressionNotName OP_LAND inclusiveOrExpression
    (489) conditionalAndExpressionNotName -> . name OP_LAND inclusiveOrExpression
    (274) annotationName -> . AT name
    (492) inclusiveOrExpressionNotName -> . exclusiveOrExpressionNotName
    (493) inclusiveOrExpressionNotName -> . inclusiveOrExpressionNotName VERTICAL exclusiveOrExpression
    (494) inclusiveOrExpressionNotName -> . name VERTICAL exclusiveOrExpression
    (497) exclusiveOrExpressionNotName -> . andExpressionNotName
    (498) exclusiveOrExpressionNotName -> . exclusiveOrExpressionNotName CARET andExpression
    (499) exclusiveOrExpressionNotName -> . name CARET andExpression
    (502) andExpressionNotName -> . equalityExpressionNotName
    (503) andExpressionNotName -> . andExpressionNotName AND equalityExpression
    (504) andExpressionNotName -> . name AND equalityExpression
    (508) equalityExpressionNotName -> . instanceOfExpressionNotName
    (509) equalityExpressionNotName -> . equalityExpressionNotName OP_EQ instanceOfExpression
    (510) equalityExpressionNotName -> . equalityExpressionNotName OP_NE instanceOfExpression
    (511) equalityExpressionNotName -> . name OP_EQ instanceOfExpression
    (512) equalityExpressionNotName -> . name OP_NE instanceOfExpression
    (515) instanceOfExpressionNotName -> . relationalExpressionNotName
    (516) instanceOfExpressionNotName -> . instanceOfExpressionNotName INSTANCEOF referenceType
    (517) instanceOfExpressionNotName -> . name INSTANCEOF referenceType
    (523) relationalExpressionNotName -> . shiftExpressionNotName
    (524) relationalExpressionNotName -> . relationalExpressionNotName LESS shiftExpression
    (525) relationalExpressionNotName -> . relationalExpressionNotName OP_GE shiftExpression
    (526) relationalExpressionNotName -> . relationalExpressionNotName MORE shiftExpression
    (527) relationalExpressionNotName -> . relationalExpressionNotName OP_LE shiftExpression
    (528) relationalExpressionNotName -> . name LESS shiftExpression
    (529) relationalExpressionNotName -> . name OP_GE shiftExpression
    (530) relationalExpressionNotName -> . name MORE shiftExpression
    (531) relationalExpressionNotName -> . name OP_LE shiftExpression
    (536) shiftExpressionNotName -> . additiveExpressionNotName
    (537) shiftExpressionNotName -> . shiftExpressionNotName OP_SHR additiveExpression
    (538) shiftExpressionNotName -> . shiftExpressionNotName OP_SHL additiveExpression
    (539) shiftExpressionNotName -> . shiftExpressionNotName OP_SHRR additiveExpression
    (540) shiftExpressionNotName -> . name OP_SHR additiveExpression
    (541) shiftExpressionNotName -> . name OP_SHL additiveExpression
    (542) shiftExpressionNotName -> . name OP_SHRR additiveExpression
    (546) additiveExpressionNotName -> . multiplicativeExpressionNotName
    (547) additiveExpressionNotName -> . additiveExpressionNotName PLUS multiplicativeExpression
    (548) additiveExpressionNotName -> . additiveExpressionNotName DASH multiplicativeExpression
    (549) additiveExpressionNotName -> . name PLUS multiplicativeExpression
    (550) additiveExpressionNotName -> . name DASH multiplicativeExpression
    (555) multiplicativeExpressionNotName -> . unaryExpressionNotName
    (556) multiplicativeExpressionNotName -> . multiplicativeExpressionNotName MULT unaryExpression
    (557) multiplicativeExpressionNotName -> . multiplicativeExpressionNotName SLASH unaryExpression
    (558) multiplicativeExpressionNotName -> . multiplicativeExpressionNotName PERCENT unaryExpression
    (559) multiplicativeExpressionNotName -> . name MULT unaryExpression
    (560) multiplicativeExpressionNotName -> . name SLASH unaryExpression
    (561) multiplicativeExpressionNotName -> . name PERCENT unaryExpression
    (567) unaryExpressionNotName -> . preIncrementExpression
    (568) unaryExpressionNotName -> . preDecrementExpression
    (569) unaryExpressionNotName -> . PLUS unaryExpression
    (570) unaryExpressionNotName -> . DASH unaryExpression
    (571) unaryExpressionNotName -> . unaryExpressionNotPlusMinusNotName
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (580) unaryExpressionNotPlusMinusNotName -> . TILDE unaryExpression
    (581) unaryExpressionNotPlusMinusNotName -> . EXCLAMATION unaryExpression
    (582) unaryExpressionNotPlusMinusNotName -> . postfixExpressionNotName
    (583) unaryExpressionNotPlusMinusNotName -> . castExpression
    (588) postfixExpressionNotName -> . primary
    (589) postfixExpressionNotName -> . postIncrementExpression
    (590) postfixExpressionNotName -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    BRPAREN         shift and go to state 838
    BLPAREN         shift and go to state 243
    Identifier      shift and go to state 68
    AT              shift and go to state 155
    PLUS            shift and go to state 174
    DASH            shift and go to state 240
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 209
    EXCLAMATION     shift and go to state 169
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    multiplicativeExpressionNotName shift and go to state 222
    qualifiedName                  shift and go to state 64
    arrayCreationWithArrayInitializer shift and go to state 227
    arrayAccess                    shift and go to state 234
    unaryExpressionNotName         shift and go to state 229
    inclusiveOrExpressionNotName   shift and go to state 235
    preIncrementExpression         shift and go to state 172
    booleanLiteral                 shift and go to state 173
    conditionalAndExpressionNotName shift and go to state 205
    memberValueArrayInitializer    shift and go to state 206
    markerAnnotation               shift and go to state 9
    unaryExpressionNotPlusMinusNotName shift and go to state 175
    postDecrementExpression        shift and go to state 186
    primaryNoNewArray              shift and go to state 178
    arrayCreationWithoutArrayInitializer shift and go to state 232
    shiftExpressionNotName         shift and go to state 233
    postfixExpressionNotName       shift and go to state 239
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    equalityExpressionNotName      shift and go to state 188
    FloatingPointLiteral           shift and go to state 214
    integerLiteral                 shift and go to state 183
    methodInvocation               shift and go to state 176
    postfixExpression              shift and go to state 177
    memberValue                    shift and go to state 837
    exclusiveOrExpressionNotName   shift and go to state 231
    conditionalExpressionNotName   shift and go to state 213
    fieldAccess                    shift and go to state 189
    conditionalOrExpressionNotName shift and go to state 237
    primary                        shift and go to state 199
    postIncrementExpression        shift and go to state 179
    annotation                     shift and go to state 207
    castExpression                 shift and go to state 241
    additiveExpressionNotName      shift and go to state 212
    name                           shift and go to state 180
    relationalExpressionNotName    shift and go to state 217
    annotationName                 shift and go to state 40
    primitiveType                  shift and go to state 219
    instanceOfExpressionNotName    shift and go to state 220
    singleMemberAnnotation         shift and go to state 8
    andExpressionNotName           shift and go to state 223
    normalAnnotation               shift and go to state 24
    preDecrementExpression         shift and go to state 196
    classInstanceCreationExpressionName shift and go to state 187
    classInstanceCreationExpression shift and go to state 198

state 690

    (265) memberValueArrayInitializer -> BLPAREN memberValues BRPAREN .

    COMMA           reduce using rule 265 (memberValueArrayInitializer -> BLPAREN memberValues BRPAREN .)
    BRPAREN         reduce using rule 265 (memberValueArrayInitializer -> BLPAREN memberValues BRPAREN .)
    RPAREN          reduce using rule 265 (memberValueArrayInitializer -> BLPAREN memberValues BRPAREN .)
    SEMI            reduce using rule 265 (memberValueArrayInitializer -> BLPAREN memberValues BRPAREN .)


state 691

    (266) memberValueArrayInitializer -> BLPAREN COMMA BRPAREN .

    COMMA           reduce using rule 266 (memberValueArrayInitializer -> BLPAREN COMMA BRPAREN .)
    BRPAREN         reduce using rule 266 (memberValueArrayInitializer -> BLPAREN COMMA BRPAREN .)
    RPAREN          reduce using rule 266 (memberValueArrayInitializer -> BLPAREN COMMA BRPAREN .)
    SEMI            reduce using rule 266 (memberValueArrayInitializer -> BLPAREN COMMA BRPAREN .)


state 692

    (278) memberValuePairs -> memberValuePairs COMMA memberValuePair .

    COMMA           reduce using rule 278 (memberValuePairs -> memberValuePairs COMMA memberValuePair .)
    RPAREN          reduce using rule 278 (memberValuePairs -> memberValuePairs COMMA memberValuePair .)


state 693

    (279) memberValuePair -> Identifier . ASS memberValue

    ASS             shift and go to state 434


state 694

    (343) methodInvocation -> SUPER DOT typeArguments . Identifier LPAREN argumentList_opt RPAREN

    Identifier      shift and go to state 839


state 695

    (446) fieldAccess -> SUPER DOT Identifier .
    (345) methodInvocation -> SUPER DOT Identifier . LPAREN argumentList_opt RPAREN

    FLPAREN         reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    DOT             reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    OP_INC          reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    OP_DEC          reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    MULT            reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    SLASH           reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    PERCENT         reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    PLUS            reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    DASH            reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    OP_SHR          reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    OP_SHL          reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    OP_SHRR         reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    LESS            reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    OP_GE           reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    MORE            reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    OP_LE           reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    INSTANCEOF      reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    OP_EQ           reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    OP_NE           reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    AND             reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    CARET           reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    VERTICAL        reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    OP_LAND         reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    QUES            reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    OP_LOR          reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    RPAREN          reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    COMMA           reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    BRPAREN         reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    SEMI            reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    ASS             reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    ASS_ADD         reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    ASS_SUB         reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    ASS_MUL         reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    ASS_DIV         reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    ASS_AND         reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    ASS_OR          reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    ASS_XOR         reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    ASS_MOD         reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    ASS_SHL         reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    ASS_SHRR        reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    ASS_SHR         reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    COLON           reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    FRPAREN         reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    LPAREN          shift and go to state 840


state 696

    (170) formalParameter -> modifiers_opt type OP_ARRAY . variableDeclaratorId
    (301) variableDeclaratorId -> . Identifier arrays_opt

    Identifier      shift and go to state 575

    variableDeclaratorId           shift and go to state 841

state 697

    (169) formalParameter -> modifiers_opt type variableDeclaratorId .

    COMMA           reduce using rule 169 (formalParameter -> modifiers_opt type variableDeclaratorId .)
    RPAREN          reduce using rule 169 (formalParameter -> modifiers_opt type variableDeclaratorId .)


state 698

    (62) arrays_opt -> arrays .

    ASS             reduce using rule 62 (arrays_opt -> arrays .)
    SEMI            reduce using rule 62 (arrays_opt -> arrays .)
    COMMA           reduce using rule 62 (arrays_opt -> arrays .)
    COLON           reduce using rule 62 (arrays_opt -> arrays .)
    THROWS          reduce using rule 62 (arrays_opt -> arrays .)
    BLPAREN         reduce using rule 62 (arrays_opt -> arrays .)
    RPAREN          reduce using rule 62 (arrays_opt -> arrays .)
    DEFAULT         reduce using rule 62 (arrays_opt -> arrays .)


state 699

    (185) methodHeader -> methodName formalParameterList_opt RPAREN methodHeadExtendedDims . methodHeadThrowList_opt
    (189) methodHeadThrowList_opt -> . methodHeadThrowList
    (190) methodHeadThrowList_opt -> . empty
    (191) methodHeadThrowList -> . THROWS classTypeList
    (631) empty -> .

    THROWS          shift and go to state 713
    SEMI            reduce using rule 631 (empty -> .)
    BLPAREN         reduce using rule 631 (empty -> .)

    methodHeadThrowList_opt        shift and go to state 842
    methodHeadThrowList            shift and go to state 712
    empty                          shift and go to state 714

state 700

    (188) methodHeadExtendedDims -> arrays_opt .

    DEFAULT         reduce using rule 188 (methodHeadExtendedDims -> arrays_opt .)
    SEMI            reduce using rule 188 (methodHeadExtendedDims -> arrays_opt .)
    THROWS          reduce using rule 188 (methodHeadExtendedDims -> arrays_opt .)
    BLPAREN         reduce using rule 188 (methodHeadExtendedDims -> arrays_opt .)


state 701

    (168) formalParameterList -> formalParameterList COMMA formalParameter .

    COMMA           reduce using rule 168 (formalParameterList -> formalParameterList COMMA formalParameter .)
    RPAREN          reduce using rule 168 (formalParameterList -> formalParameterList COMMA formalParameter .)


state 702

    (186) methodName -> modifiers_opt typeParameters type Identifier . LPAREN

    LPAREN          shift and go to state 843


state 703

    (163) constructorName -> modifiers_opt typeParameters Identifier LPAREN .

    PUBLIC          reduce using rule 163 (constructorName -> modifiers_opt typeParameters Identifier LPAREN .)
    PROTECTED       reduce using rule 163 (constructorName -> modifiers_opt typeParameters Identifier LPAREN .)
    PRIVATE         reduce using rule 163 (constructorName -> modifiers_opt typeParameters Identifier LPAREN .)
    STATIC          reduce using rule 163 (constructorName -> modifiers_opt typeParameters Identifier LPAREN .)
    ABSTRACT        reduce using rule 163 (constructorName -> modifiers_opt typeParameters Identifier LPAREN .)
    FINAL           reduce using rule 163 (constructorName -> modifiers_opt typeParameters Identifier LPAREN .)
    NATIVE          reduce using rule 163 (constructorName -> modifiers_opt typeParameters Identifier LPAREN .)
    SYNCHRONIZED    reduce using rule 163 (constructorName -> modifiers_opt typeParameters Identifier LPAREN .)
    TRANSIENT       reduce using rule 163 (constructorName -> modifiers_opt typeParameters Identifier LPAREN .)
    VOLATILE        reduce using rule 163 (constructorName -> modifiers_opt typeParameters Identifier LPAREN .)
    STRICTFP        reduce using rule 163 (constructorName -> modifiers_opt typeParameters Identifier LPAREN .)
    AT              reduce using rule 163 (constructorName -> modifiers_opt typeParameters Identifier LPAREN .)
    RPAREN          reduce using rule 163 (constructorName -> modifiers_opt typeParameters Identifier LPAREN .)
    BOOLEAN         reduce using rule 163 (constructorName -> modifiers_opt typeParameters Identifier LPAREN .)
    VOID            reduce using rule 163 (constructorName -> modifiers_opt typeParameters Identifier LPAREN .)
    BYTE            reduce using rule 163 (constructorName -> modifiers_opt typeParameters Identifier LPAREN .)
    SHORT           reduce using rule 163 (constructorName -> modifiers_opt typeParameters Identifier LPAREN .)
    INT             reduce using rule 163 (constructorName -> modifiers_opt typeParameters Identifier LPAREN .)
    LONG            reduce using rule 163 (constructorName -> modifiers_opt typeParameters Identifier LPAREN .)
    CHAR            reduce using rule 163 (constructorName -> modifiers_opt typeParameters Identifier LPAREN .)
    FLOAT           reduce using rule 163 (constructorName -> modifiers_opt typeParameters Identifier LPAREN .)
    DOUBLE          reduce using rule 163 (constructorName -> modifiers_opt typeParameters Identifier LPAREN .)
    Identifier      reduce using rule 163 (constructorName -> modifiers_opt typeParameters Identifier LPAREN .)


state 704

    (55) arrayType -> genericType DOT name . arrays
    (49) classOrInterface -> genericType DOT name .
    (32) qualifiedName -> name . DOT simpleName
    (59) arrays -> . array_loop
    (60) array_loop -> . array
    (61) array_loop -> . array_loop array
    (58) array -> . FLPAREN FRPAREN

    LESS            reduce using rule 49 (classOrInterface -> genericType DOT name .)
    Identifier      reduce using rule 49 (classOrInterface -> genericType DOT name .)
    VERTICAL        reduce using rule 49 (classOrInterface -> genericType DOT name .)
    INSTANCEOF      reduce using rule 49 (classOrInterface -> genericType DOT name .)
    OP_EQ           reduce using rule 49 (classOrInterface -> genericType DOT name .)
    OP_NE           reduce using rule 49 (classOrInterface -> genericType DOT name .)
    AND             reduce using rule 49 (classOrInterface -> genericType DOT name .)
    CARET           reduce using rule 49 (classOrInterface -> genericType DOT name .)
    OP_LAND         reduce using rule 49 (classOrInterface -> genericType DOT name .)
    QUES            reduce using rule 49 (classOrInterface -> genericType DOT name .)
    OP_LOR          reduce using rule 49 (classOrInterface -> genericType DOT name .)
    SEMI            reduce using rule 49 (classOrInterface -> genericType DOT name .)
    COLON           reduce using rule 49 (classOrInterface -> genericType DOT name .)
    COMMA           reduce using rule 49 (classOrInterface -> genericType DOT name .)
    RPAREN          reduce using rule 49 (classOrInterface -> genericType DOT name .)
    FRPAREN         reduce using rule 49 (classOrInterface -> genericType DOT name .)
    BRPAREN         reduce using rule 49 (classOrInterface -> genericType DOT name .)
    OP_ARRAY        reduce using rule 49 (classOrInterface -> genericType DOT name .)
    DOT             shift and go to state 145
    FLPAREN         shift and go to state 451

    arrays                         shift and go to state 844
    array_loop                     shift and go to state 413
    array                          shift and go to state 407

state 705

    (181) fieldDeclaration -> modifiers_opt type variableDeclarators SEMI .

    SEMI            reduce using rule 181 (fieldDeclaration -> modifiers_opt type variableDeclarators SEMI .)
    STATIC          reduce using rule 181 (fieldDeclaration -> modifiers_opt type variableDeclarators SEMI .)
    BLPAREN         reduce using rule 181 (fieldDeclaration -> modifiers_opt type variableDeclarators SEMI .)
    AT              reduce using rule 181 (fieldDeclaration -> modifiers_opt type variableDeclarators SEMI .)
    PUBLIC          reduce using rule 181 (fieldDeclaration -> modifiers_opt type variableDeclarators SEMI .)
    PROTECTED       reduce using rule 181 (fieldDeclaration -> modifiers_opt type variableDeclarators SEMI .)
    PRIVATE         reduce using rule 181 (fieldDeclaration -> modifiers_opt type variableDeclarators SEMI .)
    ABSTRACT        reduce using rule 181 (fieldDeclaration -> modifiers_opt type variableDeclarators SEMI .)
    FINAL           reduce using rule 181 (fieldDeclaration -> modifiers_opt type variableDeclarators SEMI .)
    NATIVE          reduce using rule 181 (fieldDeclaration -> modifiers_opt type variableDeclarators SEMI .)
    SYNCHRONIZED    reduce using rule 181 (fieldDeclaration -> modifiers_opt type variableDeclarators SEMI .)
    TRANSIENT       reduce using rule 181 (fieldDeclaration -> modifiers_opt type variableDeclarators SEMI .)
    VOLATILE        reduce using rule 181 (fieldDeclaration -> modifiers_opt type variableDeclarators SEMI .)
    STRICTFP        reduce using rule 181 (fieldDeclaration -> modifiers_opt type variableDeclarators SEMI .)
    Identifier      reduce using rule 181 (fieldDeclaration -> modifiers_opt type variableDeclarators SEMI .)
    INTERFACE       reduce using rule 181 (fieldDeclaration -> modifiers_opt type variableDeclarators SEMI .)
    ENUM            reduce using rule 181 (fieldDeclaration -> modifiers_opt type variableDeclarators SEMI .)
    CLASS           reduce using rule 181 (fieldDeclaration -> modifiers_opt type variableDeclarators SEMI .)
    LESS            reduce using rule 181 (fieldDeclaration -> modifiers_opt type variableDeclarators SEMI .)
    BOOLEAN         reduce using rule 181 (fieldDeclaration -> modifiers_opt type variableDeclarators SEMI .)
    VOID            reduce using rule 181 (fieldDeclaration -> modifiers_opt type variableDeclarators SEMI .)
    BYTE            reduce using rule 181 (fieldDeclaration -> modifiers_opt type variableDeclarators SEMI .)
    SHORT           reduce using rule 181 (fieldDeclaration -> modifiers_opt type variableDeclarators SEMI .)
    INT             reduce using rule 181 (fieldDeclaration -> modifiers_opt type variableDeclarators SEMI .)
    LONG            reduce using rule 181 (fieldDeclaration -> modifiers_opt type variableDeclarators SEMI .)
    CHAR            reduce using rule 181 (fieldDeclaration -> modifiers_opt type variableDeclarators SEMI .)
    FLOAT           reduce using rule 181 (fieldDeclaration -> modifiers_opt type variableDeclarators SEMI .)
    DOUBLE          reduce using rule 181 (fieldDeclaration -> modifiers_opt type variableDeclarators SEMI .)
    BRPAREN         reduce using rule 181 (fieldDeclaration -> modifiers_opt type variableDeclarators SEMI .)


state 706

    (298) variableDeclarators -> variableDeclarators COMMA . variableDeclarator
    (299) variableDeclarator -> . variableDeclaratorId
    (300) variableDeclarator -> . variableDeclaratorId ASS variableInitializer
    (301) variableDeclaratorId -> . Identifier arrays_opt

    Identifier      shift and go to state 575

    variableDeclaratorId           shift and go to state 496
    variableDeclarator             shift and go to state 845

state 707

    (300) variableDeclarator -> variableDeclaratorId ASS . variableInitializer
    (302) variableInitializer -> . expression
    (303) variableInitializer -> . arrayInitializer
    (456) expression -> . assignmentExpression
    (335) arrayInitializer -> . BLPAREN comma_opt BRPAREN
    (336) arrayInitializer -> . BLPAREN variableInitializers BRPAREN
    (337) arrayInitializer -> . BLPAREN variableInitializers COMMA BRPAREN
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    BLPAREN         shift and go to state 821
    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    qualifiedName                  shift and go to state 64
    fieldAccess                    shift and go to state 189
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    arrayAccess                    shift and go to state 234
    primitiveType                  shift and go to state 219
    shiftExpression                shift and go to state 552
    arrayInitializer               shift and go to state 848
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 554
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    unaryExpressionNotPlusMinus    shift and go to state 397
    assignmentExpression           shift and go to state 543
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    variableInitializer            shift and go to state 846
    expression                     shift and go to state 847
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 708

    (187) methodName -> modifiers_opt type Identifier LPAREN .

    PUBLIC          reduce using rule 187 (methodName -> modifiers_opt type Identifier LPAREN .)
    PROTECTED       reduce using rule 187 (methodName -> modifiers_opt type Identifier LPAREN .)
    PRIVATE         reduce using rule 187 (methodName -> modifiers_opt type Identifier LPAREN .)
    STATIC          reduce using rule 187 (methodName -> modifiers_opt type Identifier LPAREN .)
    ABSTRACT        reduce using rule 187 (methodName -> modifiers_opt type Identifier LPAREN .)
    FINAL           reduce using rule 187 (methodName -> modifiers_opt type Identifier LPAREN .)
    NATIVE          reduce using rule 187 (methodName -> modifiers_opt type Identifier LPAREN .)
    SYNCHRONIZED    reduce using rule 187 (methodName -> modifiers_opt type Identifier LPAREN .)
    TRANSIENT       reduce using rule 187 (methodName -> modifiers_opt type Identifier LPAREN .)
    VOLATILE        reduce using rule 187 (methodName -> modifiers_opt type Identifier LPAREN .)
    STRICTFP        reduce using rule 187 (methodName -> modifiers_opt type Identifier LPAREN .)
    AT              reduce using rule 187 (methodName -> modifiers_opt type Identifier LPAREN .)
    RPAREN          reduce using rule 187 (methodName -> modifiers_opt type Identifier LPAREN .)
    BOOLEAN         reduce using rule 187 (methodName -> modifiers_opt type Identifier LPAREN .)
    VOID            reduce using rule 187 (methodName -> modifiers_opt type Identifier LPAREN .)
    BYTE            reduce using rule 187 (methodName -> modifiers_opt type Identifier LPAREN .)
    SHORT           reduce using rule 187 (methodName -> modifiers_opt type Identifier LPAREN .)
    INT             reduce using rule 187 (methodName -> modifiers_opt type Identifier LPAREN .)
    LONG            reduce using rule 187 (methodName -> modifiers_opt type Identifier LPAREN .)
    CHAR            reduce using rule 187 (methodName -> modifiers_opt type Identifier LPAREN .)
    FLOAT           reduce using rule 187 (methodName -> modifiers_opt type Identifier LPAREN .)
    DOUBLE          reduce using rule 187 (methodName -> modifiers_opt type Identifier LPAREN .)
    Identifier      reduce using rule 187 (methodName -> modifiers_opt type Identifier LPAREN .)


state 709

    (301) variableDeclaratorId -> Identifier arrays_opt .

    ASS             reduce using rule 301 (variableDeclaratorId -> Identifier arrays_opt .)
    COMMA           reduce using rule 301 (variableDeclaratorId -> Identifier arrays_opt .)
    RPAREN          reduce using rule 301 (variableDeclaratorId -> Identifier arrays_opt .)
    SEMI            reduce using rule 301 (variableDeclaratorId -> Identifier arrays_opt .)


state 710

    (194) methodBody -> BLPAREN blockStatements_opt BRPAREN .

    SEMI            reduce using rule 194 (methodBody -> BLPAREN blockStatements_opt BRPAREN .)
    STATIC          reduce using rule 194 (methodBody -> BLPAREN blockStatements_opt BRPAREN .)
    BLPAREN         reduce using rule 194 (methodBody -> BLPAREN blockStatements_opt BRPAREN .)
    AT              reduce using rule 194 (methodBody -> BLPAREN blockStatements_opt BRPAREN .)
    PUBLIC          reduce using rule 194 (methodBody -> BLPAREN blockStatements_opt BRPAREN .)
    PROTECTED       reduce using rule 194 (methodBody -> BLPAREN blockStatements_opt BRPAREN .)
    PRIVATE         reduce using rule 194 (methodBody -> BLPAREN blockStatements_opt BRPAREN .)
    ABSTRACT        reduce using rule 194 (methodBody -> BLPAREN blockStatements_opt BRPAREN .)
    FINAL           reduce using rule 194 (methodBody -> BLPAREN blockStatements_opt BRPAREN .)
    NATIVE          reduce using rule 194 (methodBody -> BLPAREN blockStatements_opt BRPAREN .)
    SYNCHRONIZED    reduce using rule 194 (methodBody -> BLPAREN blockStatements_opt BRPAREN .)
    TRANSIENT       reduce using rule 194 (methodBody -> BLPAREN blockStatements_opt BRPAREN .)
    VOLATILE        reduce using rule 194 (methodBody -> BLPAREN blockStatements_opt BRPAREN .)
    STRICTFP        reduce using rule 194 (methodBody -> BLPAREN blockStatements_opt BRPAREN .)
    Identifier      reduce using rule 194 (methodBody -> BLPAREN blockStatements_opt BRPAREN .)
    INTERFACE       reduce using rule 194 (methodBody -> BLPAREN blockStatements_opt BRPAREN .)
    ENUM            reduce using rule 194 (methodBody -> BLPAREN blockStatements_opt BRPAREN .)
    CLASS           reduce using rule 194 (methodBody -> BLPAREN blockStatements_opt BRPAREN .)
    LESS            reduce using rule 194 (methodBody -> BLPAREN blockStatements_opt BRPAREN .)
    BOOLEAN         reduce using rule 194 (methodBody -> BLPAREN blockStatements_opt BRPAREN .)
    VOID            reduce using rule 194 (methodBody -> BLPAREN blockStatements_opt BRPAREN .)
    BYTE            reduce using rule 194 (methodBody -> BLPAREN blockStatements_opt BRPAREN .)
    SHORT           reduce using rule 194 (methodBody -> BLPAREN blockStatements_opt BRPAREN .)
    INT             reduce using rule 194 (methodBody -> BLPAREN blockStatements_opt BRPAREN .)
    LONG            reduce using rule 194 (methodBody -> BLPAREN blockStatements_opt BRPAREN .)
    CHAR            reduce using rule 194 (methodBody -> BLPAREN blockStatements_opt BRPAREN .)
    FLOAT           reduce using rule 194 (methodBody -> BLPAREN blockStatements_opt BRPAREN .)
    DOUBLE          reduce using rule 194 (methodBody -> BLPAREN blockStatements_opt BRPAREN .)
    BRPAREN         reduce using rule 194 (methodBody -> BLPAREN blockStatements_opt BRPAREN .)


state 711

    (162) constructorHead -> constructorName formalParameterList_opt RPAREN methodHeadThrowList_opt .

    BLPAREN         reduce using rule 162 (constructorHead -> constructorName formalParameterList_opt RPAREN methodHeadThrowList_opt .)


state 712

    (189) methodHeadThrowList_opt -> methodHeadThrowList .

    BLPAREN         reduce using rule 189 (methodHeadThrowList_opt -> methodHeadThrowList .)
    SEMI            reduce using rule 189 (methodHeadThrowList_opt -> methodHeadThrowList .)


state 713

    (191) methodHeadThrowList -> THROWS . classTypeList
    (192) classTypeList -> . classType
    (193) classTypeList -> . classTypeList COMMA classType
    (52) classType -> . classOrInterfaceType
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    Identifier      shift and go to state 68

    qualifiedName                  shift and go to state 64
    classTypeList                  shift and go to state 849
    classType                      shift and go to state 850
    classOrInterfaceType           shift and go to state 129
    classOrInterface               shift and go to state 122
    simpleName                     shift and go to state 66
    genericType                    shift and go to state 127
    name                           shift and go to state 123

state 714

    (190) methodHeadThrowList_opt -> empty .

    BLPAREN         reduce using rule 190 (methodHeadThrowList_opt -> empty .)
    SEMI            reduce using rule 190 (methodHeadThrowList_opt -> empty .)


state 715

    (49) classOrInterface -> genericType DOT . name
    (55) arrayType -> genericType DOT . name arrays
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    Identifier      shift and go to state 68

    simpleName                     shift and go to state 66
    qualifiedName                  shift and go to state 64
    name                           shift and go to state 851

state 716

    (91) referenceType1 -> referenceType MORE .

    EXTENDS         reduce using rule 91 (referenceType1 -> referenceType MORE .)
    IMPLEMENTS      reduce using rule 91 (referenceType1 -> referenceType MORE .)
    BLPAREN         reduce using rule 91 (referenceType1 -> referenceType MORE .)
    Identifier      reduce using rule 91 (referenceType1 -> referenceType MORE .)
    BOOLEAN         reduce using rule 91 (referenceType1 -> referenceType MORE .)
    VOID            reduce using rule 91 (referenceType1 -> referenceType MORE .)
    BYTE            reduce using rule 91 (referenceType1 -> referenceType MORE .)
    SHORT           reduce using rule 91 (referenceType1 -> referenceType MORE .)
    INT             reduce using rule 91 (referenceType1 -> referenceType MORE .)
    LONG            reduce using rule 91 (referenceType1 -> referenceType MORE .)
    CHAR            reduce using rule 91 (referenceType1 -> referenceType MORE .)
    FLOAT           reduce using rule 91 (referenceType1 -> referenceType MORE .)
    DOUBLE          reduce using rule 91 (referenceType1 -> referenceType MORE .)
    SUPER           reduce using rule 91 (referenceType1 -> referenceType MORE .)
    THIS            reduce using rule 91 (referenceType1 -> referenceType MORE .)
    DOT             reduce using rule 91 (referenceType1 -> referenceType MORE .)
    COMMA           reduce using rule 91 (referenceType1 -> referenceType MORE .)
    FLPAREN         reduce using rule 91 (referenceType1 -> referenceType MORE .)
    LPAREN          reduce using rule 91 (referenceType1 -> referenceType MORE .)
    OP_ARRAY        reduce using rule 91 (referenceType1 -> referenceType MORE .)
    INSTANCEOF      reduce using rule 91 (referenceType1 -> referenceType MORE .)
    OP_EQ           reduce using rule 91 (referenceType1 -> referenceType MORE .)
    OP_NE           reduce using rule 91 (referenceType1 -> referenceType MORE .)
    AND             reduce using rule 91 (referenceType1 -> referenceType MORE .)
    CARET           reduce using rule 91 (referenceType1 -> referenceType MORE .)
    VERTICAL        reduce using rule 91 (referenceType1 -> referenceType MORE .)
    OP_LAND         reduce using rule 91 (referenceType1 -> referenceType MORE .)
    QUES            reduce using rule 91 (referenceType1 -> referenceType MORE .)
    OP_LOR          reduce using rule 91 (referenceType1 -> referenceType MORE .)
    RPAREN          reduce using rule 91 (referenceType1 -> referenceType MORE .)
    BRPAREN         reduce using rule 91 (referenceType1 -> referenceType MORE .)
    SEMI            reduce using rule 91 (referenceType1 -> referenceType MORE .)
    COLON           reduce using rule 91 (referenceType1 -> referenceType MORE .)
    FRPAREN         reduce using rule 91 (referenceType1 -> referenceType MORE .)
    MORE            reduce using rule 91 (referenceType1 -> referenceType MORE .)
    OP_SHR          reduce using rule 91 (referenceType1 -> referenceType MORE .)
    OP_SHRR         reduce using rule 91 (referenceType1 -> referenceType MORE .)


state 717

    (88) typeArgumentList1 -> typeArgumentList COMMA . typeArgument1
    (86) typeArgumentList -> typeArgumentList COMMA . typeArgument
    (89) typeArgument1 -> . referenceType1
    (90) typeArgument1 -> . wildcard1
    (83) typeArgument -> . referenceType
    (84) typeArgument -> . wildcard
    (91) referenceType1 -> . referenceType MORE
    (92) referenceType1 -> . classOrInterface LESS typeArgumentList2
    (108) wildcard1 -> . QUES MORE
    (109) wildcard1 -> . QUES wildcardBounds1
    (44) referenceType -> . classOrInterfaceType
    (45) referenceType -> . arrayType
    (104) wildcard -> . QUES
    (105) wildcard -> . QUES wildcardBounds
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (54) arrayType -> . genericType arrays
    (55) arrayType -> . genericType DOT name arrays
    (56) arrayType -> . primitiveType arrays
    (57) arrayType -> . name arrays
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    QUES            shift and go to state 515
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    Identifier      shift and go to state 68

    wildcard1                      shift and go to state 508
    primitiveType                  shift and go to state 504
    name                           shift and go to state 512
    simpleName                     shift and go to state 66
    classOrInterfaceType           shift and go to state 272
    typeArgument1                  shift and go to state 854
    qualifiedName                  shift and go to state 64
    arrayType                      shift and go to state 269
    classOrInterface               shift and go to state 514
    typeArgument                   shift and go to state 853
    wildcard                       shift and go to state 516
    referenceType1                 shift and go to state 511
    genericType                    shift and go to state 505
    referenceType                  shift and go to state 852

state 718

    (92) referenceType1 -> classOrInterface LESS . typeArgumentList2
    (51) genericType -> classOrInterface LESS . MORE
    (82) typeArguments -> LESS . typeArgumentList1
    (93) typeArgumentList2 -> . typeArgument2
    (94) typeArgumentList2 -> . typeArgumentList COMMA typeArgument2
    (87) typeArgumentList1 -> . typeArgument1
    (88) typeArgumentList1 -> . typeArgumentList COMMA typeArgument1
    (95) typeArgument2 -> . referenceType2
    (96) typeArgument2 -> . wildcard2
    (85) typeArgumentList -> . typeArgument
    (86) typeArgumentList -> . typeArgumentList COMMA typeArgument
    (89) typeArgument1 -> . referenceType1
    (90) typeArgument1 -> . wildcard1
    (97) referenceType2 -> . referenceType OP_SHR
    (98) referenceType2 -> . classOrInterface LESS typeArgumentList3
    (112) wildcard2 -> . QUES OP_SHR
    (113) wildcard2 -> . QUES wildcardBounds2
    (83) typeArgument -> . referenceType
    (84) typeArgument -> . wildcard
    (91) referenceType1 -> . referenceType MORE
    (92) referenceType1 -> . classOrInterface LESS typeArgumentList2
    (108) wildcard1 -> . QUES MORE
    (109) wildcard1 -> . QUES wildcardBounds1
    (44) referenceType -> . classOrInterfaceType
    (45) referenceType -> . arrayType
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (104) wildcard -> . QUES
    (105) wildcard -> . QUES wildcardBounds
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (54) arrayType -> . genericType arrays
    (55) arrayType -> . genericType DOT name arrays
    (56) arrayType -> . primitiveType arrays
    (57) arrayType -> . name arrays
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    MORE            shift and go to state 587
    QUES            shift and go to state 861
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    Identifier      shift and go to state 68

    qualifiedName                  shift and go to state 64
    primitiveType                  shift and go to state 504
    genericType                    shift and go to state 505
    classOrInterfaceType           shift and go to state 272
    simpleName                     shift and go to state 66
    referenceType                  shift and go to state 855
    wildcard2                      shift and go to state 856
    wildcard1                      shift and go to state 508
    typeArgumentList2              shift and go to state 857
    typeArgumentList1              shift and go to state 509
    typeArgument                   shift and go to state 510
    referenceType2                 shift and go to state 858
    referenceType1                 shift and go to state 511
    name                           shift and go to state 512
    typeArgument2                  shift and go to state 859
    typeArgument1                  shift and go to state 513
    arrayType                      shift and go to state 269
    classOrInterface               shift and go to state 860
    typeArgumentList               shift and go to state 862
    wildcard                       shift and go to state 516

state 719

    (110) wildcardBounds1 -> EXTENDS . referenceType1
    (106) wildcardBounds -> EXTENDS . referenceType
    (91) referenceType1 -> . referenceType MORE
    (92) referenceType1 -> . classOrInterface LESS typeArgumentList2
    (44) referenceType -> . classOrInterfaceType
    (45) referenceType -> . arrayType
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (54) arrayType -> . genericType arrays
    (55) arrayType -> . genericType DOT name arrays
    (56) arrayType -> . primitiveType arrays
    (57) arrayType -> . name arrays
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    Identifier      shift and go to state 68

    qualifiedName                  shift and go to state 64
    name                           shift and go to state 512
    classOrInterfaceType           shift and go to state 272
    arrayType                      shift and go to state 269
    classOrInterface               shift and go to state 514
    simpleName                     shift and go to state 66
    primitiveType                  shift and go to state 504
    referenceType1                 shift and go to state 863
    genericType                    shift and go to state 505
    referenceType                  shift and go to state 864

state 720

    (109) wildcard1 -> QUES wildcardBounds1 .

    DOT             reduce using rule 109 (wildcard1 -> QUES wildcardBounds1 .)
    COMMA           reduce using rule 109 (wildcard1 -> QUES wildcardBounds1 .)
    BLPAREN         reduce using rule 109 (wildcard1 -> QUES wildcardBounds1 .)
    IMPLEMENTS      reduce using rule 109 (wildcard1 -> QUES wildcardBounds1 .)
    FLPAREN         reduce using rule 109 (wildcard1 -> QUES wildcardBounds1 .)
    Identifier      reduce using rule 109 (wildcard1 -> QUES wildcardBounds1 .)
    LPAREN          reduce using rule 109 (wildcard1 -> QUES wildcardBounds1 .)
    OP_ARRAY        reduce using rule 109 (wildcard1 -> QUES wildcardBounds1 .)
    INSTANCEOF      reduce using rule 109 (wildcard1 -> QUES wildcardBounds1 .)
    OP_EQ           reduce using rule 109 (wildcard1 -> QUES wildcardBounds1 .)
    OP_NE           reduce using rule 109 (wildcard1 -> QUES wildcardBounds1 .)
    AND             reduce using rule 109 (wildcard1 -> QUES wildcardBounds1 .)
    CARET           reduce using rule 109 (wildcard1 -> QUES wildcardBounds1 .)
    VERTICAL        reduce using rule 109 (wildcard1 -> QUES wildcardBounds1 .)
    OP_LAND         reduce using rule 109 (wildcard1 -> QUES wildcardBounds1 .)
    QUES            reduce using rule 109 (wildcard1 -> QUES wildcardBounds1 .)
    OP_LOR          reduce using rule 109 (wildcard1 -> QUES wildcardBounds1 .)
    RPAREN          reduce using rule 109 (wildcard1 -> QUES wildcardBounds1 .)
    BRPAREN         reduce using rule 109 (wildcard1 -> QUES wildcardBounds1 .)
    SEMI            reduce using rule 109 (wildcard1 -> QUES wildcardBounds1 .)
    COLON           reduce using rule 109 (wildcard1 -> QUES wildcardBounds1 .)
    FRPAREN         reduce using rule 109 (wildcard1 -> QUES wildcardBounds1 .)
    MORE            reduce using rule 109 (wildcard1 -> QUES wildcardBounds1 .)
    SUPER           reduce using rule 109 (wildcard1 -> QUES wildcardBounds1 .)
    THIS            reduce using rule 109 (wildcard1 -> QUES wildcardBounds1 .)
    OP_SHR          reduce using rule 109 (wildcard1 -> QUES wildcardBounds1 .)
    OP_SHRR         reduce using rule 109 (wildcard1 -> QUES wildcardBounds1 .)


state 721

    (105) wildcard -> QUES wildcardBounds .

    COMMA           reduce using rule 105 (wildcard -> QUES wildcardBounds .)


state 722

    (111) wildcardBounds1 -> SUPER . referenceType1
    (107) wildcardBounds -> SUPER . referenceType
    (91) referenceType1 -> . referenceType MORE
    (92) referenceType1 -> . classOrInterface LESS typeArgumentList2
    (44) referenceType -> . classOrInterfaceType
    (45) referenceType -> . arrayType
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (54) arrayType -> . genericType arrays
    (55) arrayType -> . genericType DOT name arrays
    (56) arrayType -> . primitiveType arrays
    (57) arrayType -> . name arrays
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    Identifier      shift and go to state 68

    qualifiedName                  shift and go to state 64
    name                           shift and go to state 512
    classOrInterfaceType           shift and go to state 272
    arrayType                      shift and go to state 269
    classOrInterface               shift and go to state 514
    simpleName                     shift and go to state 66
    primitiveType                  shift and go to state 504
    referenceType1                 shift and go to state 865
    genericType                    shift and go to state 505
    referenceType                  shift and go to state 866

state 723

    (108) wildcard1 -> QUES MORE .

    DOT             reduce using rule 108 (wildcard1 -> QUES MORE .)
    COMMA           reduce using rule 108 (wildcard1 -> QUES MORE .)
    BLPAREN         reduce using rule 108 (wildcard1 -> QUES MORE .)
    IMPLEMENTS      reduce using rule 108 (wildcard1 -> QUES MORE .)
    FLPAREN         reduce using rule 108 (wildcard1 -> QUES MORE .)
    Identifier      reduce using rule 108 (wildcard1 -> QUES MORE .)
    LPAREN          reduce using rule 108 (wildcard1 -> QUES MORE .)
    OP_ARRAY        reduce using rule 108 (wildcard1 -> QUES MORE .)
    INSTANCEOF      reduce using rule 108 (wildcard1 -> QUES MORE .)
    OP_EQ           reduce using rule 108 (wildcard1 -> QUES MORE .)
    OP_NE           reduce using rule 108 (wildcard1 -> QUES MORE .)
    AND             reduce using rule 108 (wildcard1 -> QUES MORE .)
    CARET           reduce using rule 108 (wildcard1 -> QUES MORE .)
    VERTICAL        reduce using rule 108 (wildcard1 -> QUES MORE .)
    OP_LAND         reduce using rule 108 (wildcard1 -> QUES MORE .)
    QUES            reduce using rule 108 (wildcard1 -> QUES MORE .)
    OP_LOR          reduce using rule 108 (wildcard1 -> QUES MORE .)
    RPAREN          reduce using rule 108 (wildcard1 -> QUES MORE .)
    BRPAREN         reduce using rule 108 (wildcard1 -> QUES MORE .)
    SEMI            reduce using rule 108 (wildcard1 -> QUES MORE .)
    COLON           reduce using rule 108 (wildcard1 -> QUES MORE .)
    FRPAREN         reduce using rule 108 (wildcard1 -> QUES MORE .)
    MORE            reduce using rule 108 (wildcard1 -> QUES MORE .)
    SUPER           reduce using rule 108 (wildcard1 -> QUES MORE .)
    THIS            reduce using rule 108 (wildcard1 -> QUES MORE .)
    OP_SHR          reduce using rule 108 (wildcard1 -> QUES MORE .)
    OP_SHRR         reduce using rule 108 (wildcard1 -> QUES MORE .)


state 724

    (474) assignment -> postfixExpression assignmentOperator assignmentExpression .

    SEMI            reduce using rule 474 (assignment -> postfixExpression assignmentOperator assignmentExpression .)
    COMMA           reduce using rule 474 (assignment -> postfixExpression assignmentOperator assignmentExpression .)
    RPAREN          reduce using rule 474 (assignment -> postfixExpression assignmentOperator assignmentExpression .)
    COLON           reduce using rule 474 (assignment -> postfixExpression assignmentOperator assignmentExpression .)
    BRPAREN         reduce using rule 474 (assignment -> postfixExpression assignmentOperator assignmentExpression .)
    FRPAREN         reduce using rule 474 (assignment -> postfixExpression assignmentOperator assignmentExpression .)


state 725

    (431) explicitConstructorInvocation -> name DOT THIS . LPAREN argumentList_opt RPAREN SEMI
    (602) primaryNoNewArray -> name DOT THIS .

    LPAREN          shift and go to state 867
    FLPAREN         reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    DOT             reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    OP_INC          reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    OP_DEC          reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    ASS             reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    ASS_ADD         reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    ASS_SUB         reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    ASS_MUL         reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    ASS_DIV         reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    ASS_AND         reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    ASS_OR          reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    ASS_XOR         reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    ASS_MOD         reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    ASS_SHL         reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    ASS_SHRR        reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)
    ASS_SHR         reduce using rule 602 (primaryNoNewArray -> name DOT THIS .)


state 726

    (433) explicitConstructorInvocation -> name DOT typeArguments . SUPER LPAREN argumentList_opt RPAREN SEMI
    (435) explicitConstructorInvocation -> name DOT typeArguments . THIS LPAREN argumentList_opt RPAREN SEMI
    (341) methodInvocation -> name DOT typeArguments . Identifier LPAREN argumentList_opt RPAREN

    SUPER           shift and go to state 869
    THIS            shift and go to state 868
    Identifier      shift and go to state 808


state 727

    (429) explicitConstructorInvocation -> name DOT SUPER . LPAREN argumentList_opt RPAREN SEMI
    (603) primaryNoNewArray -> name DOT SUPER .

    LPAREN          shift and go to state 870
    FLPAREN         reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    DOT             reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    OP_INC          reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    OP_DEC          reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    ASS             reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    ASS_ADD         reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    ASS_SUB         reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    ASS_MUL         reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    ASS_DIV         reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    ASS_AND         reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    ASS_OR          reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    ASS_XOR         reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    ASS_MOD         reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    ASS_SHL         reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    ASS_SHRR        reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)
    ASS_SHR         reduce using rule 603 (primaryNoNewArray -> name DOT SUPER .)


state 728

    (424) explicitConstructorInvocation -> THIS LPAREN argumentList_opt . RPAREN SEMI

    RPAREN          shift and go to state 871


state 729

    (486) conditionalAndExpression -> conditionalAndExpression OP_LAND . inclusiveOrExpression
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    equalityExpression             shift and go to state 546
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 872
    multiplicativeExpression       shift and go to state 551
    exclusiveOrExpression          shift and go to state 548
    shiftExpression                shift and go to state 552
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    postfixExpression              shift and go to state 394
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    primary                        shift and go to state 386
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    arrayAccess                    shift and go to state 234
    name                           shift and go to state 393
    instanceOfExpression           shift and go to state 540
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 730

    (519) relationalExpression -> relationalExpression LESS . shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    multiplicativeExpression       shift and go to state 551
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 873
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    name                           shift and go to state 393
    postfixExpression              shift and go to state 394
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 731

    (522) relationalExpression -> relationalExpression OP_LE . shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    multiplicativeExpression       shift and go to state 551
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 874
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    name                           shift and go to state 393
    postfixExpression              shift and go to state 394
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 732

    (520) relationalExpression -> relationalExpression OP_GE . shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    multiplicativeExpression       shift and go to state 551
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 875
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    name                           shift and go to state 393
    postfixExpression              shift and go to state 394
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 733

    (521) relationalExpression -> relationalExpression MORE . shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    multiplicativeExpression       shift and go to state 551
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 876
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    name                           shift and go to state 393
    postfixExpression              shift and go to state 394
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 734

    (398) returnStatement -> RETURN expression_opt SEMI .

    IF              reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    WHILE           reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    FOR             reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    BLPAREN         reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    ASSERT          reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    SEMI            reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    SWITCH          reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    DO              reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    BREAK           reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    CONTINUE        reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    RETURN          reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    SYNCHRONIZED    reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    THROW           reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    TRY             reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    Identifier      reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    AT              reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    BOOLEAN         reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    VOID            reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    BYTE            reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    SHORT           reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    INT             reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    LONG            reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    CHAR            reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    FLOAT           reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    DOUBLE          reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    PUBLIC          reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    PROTECTED       reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    PRIVATE         reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    STATIC          reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    ABSTRACT        reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    FINAL           reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    NATIVE          reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    TRANSIENT       reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    VOLATILE        reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    STRICTFP        reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    THIS            reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    SUPER           reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    OP_INC          reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    OP_DEC          reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    NEW             reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    LESS            reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    LPAREN          reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    CharacterLiteral reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    StringLiteral   reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    NULL            reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    LONG_NUMBER     reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    LONG_HEX_NUMBER reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    NON_INTEGER_1   reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    NON_INTEGER_2   reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    NON_INTEGER_3   reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    NON_INTEGER_4   reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    NON_INTEGER_5   reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    NON_INTEGER_6   reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    TRUE            reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    FALSE           reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    INTERFACE       reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    ENUM            reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    CLASS           reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    BRPAREN         reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    CASE            reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    DEFAULT         reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)
    ELSE            reduce using rule 398 (returnStatement -> RETURN expression_opt SEMI .)


state 735

    (514) instanceOfExpression -> instanceOfExpression INSTANCEOF . referenceType
    (44) referenceType -> . classOrInterfaceType
    (45) referenceType -> . arrayType
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (54) arrayType -> . genericType arrays
    (55) arrayType -> . genericType DOT name arrays
    (56) arrayType -> . primitiveType arrays
    (57) arrayType -> . name arrays
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    Identifier      shift and go to state 68

    qualifiedName                  shift and go to state 64
    name                           shift and go to state 276
    classOrInterfaceType           shift and go to state 272
    arrayType                      shift and go to state 269
    classOrInterface               shift and go to state 122
    simpleName                     shift and go to state 66
    primitiveType                  shift and go to state 504
    referenceType                  shift and go to state 877
    genericType                    shift and go to state 271

state 736

    (491) inclusiveOrExpression -> inclusiveOrExpression VERTICAL . exclusiveOrExpression
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    equalityExpression             shift and go to state 546
    qualifiedName                  shift and go to state 64
    multiplicativeExpression       shift and go to state 551
    exclusiveOrExpression          shift and go to state 878
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    postfixExpression              shift and go to state 394
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    arrayAccess                    shift and go to state 234
    name                           shift and go to state 393
    instanceOfExpression           shift and go to state 540
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 737

    (544) additiveExpression -> additiveExpression PLUS . multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    multiplicativeExpression       shift and go to state 879
    primary                        shift and go to state 386
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    name                           shift and go to state 393
    postfixExpression              shift and go to state 394
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 738

    (545) additiveExpression -> additiveExpression DASH . multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    multiplicativeExpression       shift and go to state 880
    primary                        shift and go to state 386
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    name                           shift and go to state 393
    postfixExpression              shift and go to state 394
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 739

    (501) andExpression -> andExpression AND . equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    equalityExpression             shift and go to state 881
    qualifiedName                  shift and go to state 64
    multiplicativeExpression       shift and go to state 551
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    postfixExpression              shift and go to state 394
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    arrayAccess                    shift and go to state 234
    name                           shift and go to state 393
    instanceOfExpression           shift and go to state 540
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 740

    (507) equalityExpression -> equalityExpression OP_NE . instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    multiplicativeExpression       shift and go to state 551
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    postfixExpression              shift and go to state 394
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    arrayAccess                    shift and go to state 234
    name                           shift and go to state 393
    instanceOfExpression           shift and go to state 882
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 741

    (506) equalityExpression -> equalityExpression OP_EQ . instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    multiplicativeExpression       shift and go to state 551
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    postfixExpression              shift and go to state 394
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    arrayAccess                    shift and go to state 234
    name                           shift and go to state 393
    instanceOfExpression           shift and go to state 883
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 742

    (481) conditionalOrExpression -> conditionalOrExpression OP_LOR . conditionalAndExpression
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    equalityExpression             shift and go to state 546
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    exclusiveOrExpression          shift and go to state 548
    conditionalAndExpression       shift and go to state 884
    shiftExpression                shift and go to state 552
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    postfixExpression              shift and go to state 394
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    primary                        shift and go to state 386
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    arrayAccess                    shift and go to state 234
    name                           shift and go to state 393
    instanceOfExpression           shift and go to state 540
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 743

    (476) conditionalExpression -> conditionalOrExpression QUES . expression COLON conditionalExpression
    (456) expression -> . assignmentExpression
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    assignmentExpression           shift and go to state 543
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    fieldAccess                    shift and go to state 189
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 554
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    unaryExpressionNotPlusMinus    shift and go to state 397
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    expression                     shift and go to state 885
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 744

    (496) exclusiveOrExpression -> exclusiveOrExpression CARET . andExpression
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    equalityExpression             shift and go to state 546
    qualifiedName                  shift and go to state 64
    multiplicativeExpression       shift and go to state 551
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    postfixExpression              shift and go to state 394
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    arrayAccess                    shift and go to state 234
    name                           shift and go to state 393
    instanceOfExpression           shift and go to state 540
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 886
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 745

    (554) multiplicativeExpression -> multiplicativeExpression PERCENT . unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    primary                        shift and go to state 386
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 887
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    name                           shift and go to state 393
    postfixExpression              shift and go to state 394
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 746

    (553) multiplicativeExpression -> multiplicativeExpression SLASH . unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    primary                        shift and go to state 386
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 888
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    name                           shift and go to state 393
    postfixExpression              shift and go to state 394
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 747

    (552) multiplicativeExpression -> multiplicativeExpression MULT . unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    primary                        shift and go to state 386
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 889
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    name                           shift and go to state 393
    postfixExpression              shift and go to state 394
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 748

    (534) shiftExpression -> shiftExpression OP_SHL . additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    multiplicativeExpression       shift and go to state 551
    primary                        shift and go to state 386
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 890
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    name                           shift and go to state 393
    postfixExpression              shift and go to state 394
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 749

    (535) shiftExpression -> shiftExpression OP_SHRR . additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    multiplicativeExpression       shift and go to state 551
    primary                        shift and go to state 386
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 891
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    name                           shift and go to state 393
    postfixExpression              shift and go to state 394
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 750

    (533) shiftExpression -> shiftExpression OP_SHR . additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    multiplicativeExpression       shift and go to state 551
    primary                        shift and go to state 386
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 892
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    name                           shift and go to state 393
    postfixExpression              shift and go to state 394
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 751

    (399) synchronizedStatement -> SYNCHRONIZED LPAREN expression . RPAREN block

    RPAREN          shift and go to state 893


state 752

    (395) breakStatement -> BREAK Identifier SEMI .

    IF              reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    WHILE           reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    FOR             reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    BLPAREN         reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    ASSERT          reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    SEMI            reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    SWITCH          reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    DO              reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    BREAK           reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    CONTINUE        reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    RETURN          reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    SYNCHRONIZED    reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    THROW           reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    TRY             reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    Identifier      reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    AT              reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    BOOLEAN         reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    VOID            reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    BYTE            reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    SHORT           reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    INT             reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    LONG            reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    CHAR            reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    FLOAT           reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    DOUBLE          reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    PUBLIC          reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    PROTECTED       reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    PRIVATE         reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    STATIC          reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    ABSTRACT        reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    FINAL           reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    NATIVE          reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    TRANSIENT       reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    VOLATILE        reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    STRICTFP        reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    THIS            reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    SUPER           reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    OP_INC          reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    OP_DEC          reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    NEW             reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    LESS            reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    LPAREN          reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    CharacterLiteral reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    StringLiteral   reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    NULL            reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    LONG_NUMBER     reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    LONG_HEX_NUMBER reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    NON_INTEGER_1   reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    NON_INTEGER_2   reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    NON_INTEGER_3   reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    NON_INTEGER_4   reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    NON_INTEGER_5   reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    NON_INTEGER_6   reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    TRUE            reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    FALSE           reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    INTERFACE       reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    ENUM            reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    CLASS           reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    BRPAREN         reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    CASE            reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    DEFAULT         reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)
    ELSE            reduce using rule 395 (breakStatement -> BREAK Identifier SEMI .)


state 753

    (427) explicitConstructorInvocation -> typeArguments THIS LPAREN . argumentList_opt RPAREN SEMI
    (232) argumentList_opt -> . argumentList
    (233) argumentList_opt -> . empty
    (234) argumentList -> . expression
    (235) argumentList -> . argumentList COMMA expression
    (631) empty -> .
    (456) expression -> . assignmentExpression
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    RPAREN          reduce using rule 631 (empty -> .)
    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    argumentList                   shift and go to state 602
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    argumentList_opt               shift and go to state 894
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    assignmentExpression           shift and go to state 543
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    fieldAccess                    shift and go to state 189
    integerLiteral                 shift and go to state 183
    empty                          shift and go to state 601
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 554
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    unaryExpressionNotPlusMinus    shift and go to state 397
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    expression                     shift and go to state 600
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 754

    (426) explicitConstructorInvocation -> typeArguments SUPER LPAREN . argumentList RPAREN SEMI
    (234) argumentList -> . expression
    (235) argumentList -> . argumentList COMMA expression
    (456) expression -> . assignmentExpression
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    argumentList                   shift and go to state 895
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    assignmentExpression           shift and go to state 543
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    fieldAccess                    shift and go to state 189
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 554
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    unaryExpressionNotPlusMinus    shift and go to state 397
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    expression                     shift and go to state 600
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 755

    (346) labeldStatement -> label COLON statement .

    IF              reduce using rule 346 (labeldStatement -> label COLON statement .)
    WHILE           reduce using rule 346 (labeldStatement -> label COLON statement .)
    FOR             reduce using rule 346 (labeldStatement -> label COLON statement .)
    BLPAREN         reduce using rule 346 (labeldStatement -> label COLON statement .)
    ASSERT          reduce using rule 346 (labeldStatement -> label COLON statement .)
    SEMI            reduce using rule 346 (labeldStatement -> label COLON statement .)
    SWITCH          reduce using rule 346 (labeldStatement -> label COLON statement .)
    DO              reduce using rule 346 (labeldStatement -> label COLON statement .)
    BREAK           reduce using rule 346 (labeldStatement -> label COLON statement .)
    CONTINUE        reduce using rule 346 (labeldStatement -> label COLON statement .)
    RETURN          reduce using rule 346 (labeldStatement -> label COLON statement .)
    SYNCHRONIZED    reduce using rule 346 (labeldStatement -> label COLON statement .)
    THROW           reduce using rule 346 (labeldStatement -> label COLON statement .)
    TRY             reduce using rule 346 (labeldStatement -> label COLON statement .)
    Identifier      reduce using rule 346 (labeldStatement -> label COLON statement .)
    AT              reduce using rule 346 (labeldStatement -> label COLON statement .)
    BOOLEAN         reduce using rule 346 (labeldStatement -> label COLON statement .)
    VOID            reduce using rule 346 (labeldStatement -> label COLON statement .)
    BYTE            reduce using rule 346 (labeldStatement -> label COLON statement .)
    SHORT           reduce using rule 346 (labeldStatement -> label COLON statement .)
    INT             reduce using rule 346 (labeldStatement -> label COLON statement .)
    LONG            reduce using rule 346 (labeldStatement -> label COLON statement .)
    CHAR            reduce using rule 346 (labeldStatement -> label COLON statement .)
    FLOAT           reduce using rule 346 (labeldStatement -> label COLON statement .)
    DOUBLE          reduce using rule 346 (labeldStatement -> label COLON statement .)
    PUBLIC          reduce using rule 346 (labeldStatement -> label COLON statement .)
    PROTECTED       reduce using rule 346 (labeldStatement -> label COLON statement .)
    PRIVATE         reduce using rule 346 (labeldStatement -> label COLON statement .)
    STATIC          reduce using rule 346 (labeldStatement -> label COLON statement .)
    ABSTRACT        reduce using rule 346 (labeldStatement -> label COLON statement .)
    FINAL           reduce using rule 346 (labeldStatement -> label COLON statement .)
    NATIVE          reduce using rule 346 (labeldStatement -> label COLON statement .)
    TRANSIENT       reduce using rule 346 (labeldStatement -> label COLON statement .)
    VOLATILE        reduce using rule 346 (labeldStatement -> label COLON statement .)
    STRICTFP        reduce using rule 346 (labeldStatement -> label COLON statement .)
    THIS            reduce using rule 346 (labeldStatement -> label COLON statement .)
    SUPER           reduce using rule 346 (labeldStatement -> label COLON statement .)
    OP_INC          reduce using rule 346 (labeldStatement -> label COLON statement .)
    OP_DEC          reduce using rule 346 (labeldStatement -> label COLON statement .)
    NEW             reduce using rule 346 (labeldStatement -> label COLON statement .)
    LESS            reduce using rule 346 (labeldStatement -> label COLON statement .)
    LPAREN          reduce using rule 346 (labeldStatement -> label COLON statement .)
    CharacterLiteral reduce using rule 346 (labeldStatement -> label COLON statement .)
    StringLiteral   reduce using rule 346 (labeldStatement -> label COLON statement .)
    NULL            reduce using rule 346 (labeldStatement -> label COLON statement .)
    LONG_NUMBER     reduce using rule 346 (labeldStatement -> label COLON statement .)
    LONG_HEX_NUMBER reduce using rule 346 (labeldStatement -> label COLON statement .)
    NON_INTEGER_1   reduce using rule 346 (labeldStatement -> label COLON statement .)
    NON_INTEGER_2   reduce using rule 346 (labeldStatement -> label COLON statement .)
    NON_INTEGER_3   reduce using rule 346 (labeldStatement -> label COLON statement .)
    NON_INTEGER_4   reduce using rule 346 (labeldStatement -> label COLON statement .)
    NON_INTEGER_5   reduce using rule 346 (labeldStatement -> label COLON statement .)
    NON_INTEGER_6   reduce using rule 346 (labeldStatement -> label COLON statement .)
    TRUE            reduce using rule 346 (labeldStatement -> label COLON statement .)
    FALSE           reduce using rule 346 (labeldStatement -> label COLON statement .)
    INTERFACE       reduce using rule 346 (labeldStatement -> label COLON statement .)
    ENUM            reduce using rule 346 (labeldStatement -> label COLON statement .)
    CLASS           reduce using rule 346 (labeldStatement -> label COLON statement .)
    BRPAREN         reduce using rule 346 (labeldStatement -> label COLON statement .)
    CASE            reduce using rule 346 (labeldStatement -> label COLON statement .)
    DEFAULT         reduce using rule 346 (labeldStatement -> label COLON statement .)


state 756

    (356) forInit_opt -> forInit .

    SEMI            reduce using rule 356 (forInit_opt -> forInit .)


state 757

    (57) arrayType -> name . arrays
    (48) classOrInterface -> name .
    (340) methodInvocation -> name . LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> name . DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (32) qualifiedName -> name . DOT simpleName
    (585) postfixExpression -> name .
    (442) classInstanceCreationExpressionName -> name . DOT
    (602) primaryNoNewArray -> name . DOT THIS
    (603) primaryNoNewArray -> name . DOT SUPER
    (604) primaryNoNewArray -> name . DOT CLASS
    (605) primaryNoNewArray -> name . arrays DOT CLASS
    (447) arrayAccess -> name . FLPAREN expression FRPAREN
    (59) arrays -> . array_loop
    (60) array_loop -> . array
    (61) array_loop -> . array_loop array
    (58) array -> . FLPAREN FRPAREN

    LESS            reduce using rule 48 (classOrInterface -> name .)
    Identifier      reduce using rule 48 (classOrInterface -> name .)
    LPAREN          shift and go to state 404
    DOT             shift and go to state 896
    OP_INC          reduce using rule 585 (postfixExpression -> name .)
    OP_DEC          reduce using rule 585 (postfixExpression -> name .)
    ASS             reduce using rule 585 (postfixExpression -> name .)
    ASS_ADD         reduce using rule 585 (postfixExpression -> name .)
    ASS_SUB         reduce using rule 585 (postfixExpression -> name .)
    ASS_MUL         reduce using rule 585 (postfixExpression -> name .)
    ASS_DIV         reduce using rule 585 (postfixExpression -> name .)
    ASS_AND         reduce using rule 585 (postfixExpression -> name .)
    ASS_OR          reduce using rule 585 (postfixExpression -> name .)
    ASS_XOR         reduce using rule 585 (postfixExpression -> name .)
    ASS_MOD         reduce using rule 585 (postfixExpression -> name .)
    ASS_SHL         reduce using rule 585 (postfixExpression -> name .)
    ASS_SHRR        reduce using rule 585 (postfixExpression -> name .)
    ASS_SHR         reduce using rule 585 (postfixExpression -> name .)
    FLPAREN         shift and go to state 411

    arrays                         shift and go to state 533
    array_loop                     shift and go to state 413
    array                          shift and go to state 407

state 758

    (359) forInit -> localVariableDeclaration .

    SEMI            reduce using rule 359 (forInit -> localVariableDeclaration .)


state 759

    (342) methodInvocation -> primary . DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> primary . DOT Identifier LPAREN argumentList_opt RPAREN
    (438) classInstanceCreationExpression -> primary . DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> primary . DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (584) postfixExpression -> primary .
    (445) fieldAccess -> primary . DOT Identifier

    DOT             shift and go to state 897
    OP_INC          reduce using rule 584 (postfixExpression -> primary .)
    OP_DEC          reduce using rule 584 (postfixExpression -> primary .)
    ASS             reduce using rule 584 (postfixExpression -> primary .)
    ASS_ADD         reduce using rule 584 (postfixExpression -> primary .)
    ASS_SUB         reduce using rule 584 (postfixExpression -> primary .)
    ASS_MUL         reduce using rule 584 (postfixExpression -> primary .)
    ASS_DIV         reduce using rule 584 (postfixExpression -> primary .)
    ASS_AND         reduce using rule 584 (postfixExpression -> primary .)
    ASS_OR          reduce using rule 584 (postfixExpression -> primary .)
    ASS_XOR         reduce using rule 584 (postfixExpression -> primary .)
    ASS_MOD         reduce using rule 584 (postfixExpression -> primary .)
    ASS_SHL         reduce using rule 584 (postfixExpression -> primary .)
    ASS_SHRR        reduce using rule 584 (postfixExpression -> primary .)
    ASS_SHR         reduce using rule 584 (postfixExpression -> primary .)


state 760

    (370) enhancedForStatementHeadInit -> FOR LPAREN type . Identifier arrays_opt
    (295) localVariableDeclaration -> type . variableDeclarators
    (297) variableDeclarators -> . variableDeclarator
    (298) variableDeclarators -> . variableDeclarators COMMA variableDeclarator
    (299) variableDeclarator -> . variableDeclaratorId
    (300) variableDeclarator -> . variableDeclaratorId ASS variableInitializer
    (301) variableDeclaratorId -> . Identifier arrays_opt

    Identifier      shift and go to state 898

    variableDeclarators            shift and go to state 574
    variableDeclaratorId           shift and go to state 496
    variableDeclarator             shift and go to state 498

state 761

    (357) forInit_opt -> empty .

    SEMI            reduce using rule 357 (forInit_opt -> empty .)


state 762

    (371) enhancedForStatementHeadInit -> FOR LPAREN modifiers . type Identifier arrays_opt
    (123) modifiers -> modifiers . modifier
    (296) localVariableDeclaration -> modifiers . type variableDeclarators
    (33) type -> . primitiveType
    (34) type -> . referenceType
    (124) modifier -> . PUBLIC
    (125) modifier -> . PROTECTED
    (126) modifier -> . PRIVATE
    (127) modifier -> . STATIC
    (128) modifier -> . ABSTRACT
    (129) modifier -> . FINAL
    (130) modifier -> . NATIVE
    (131) modifier -> . SYNCHRONIZED
    (132) modifier -> . TRANSIENT
    (133) modifier -> . VOLATILE
    (134) modifier -> . STRICTFP
    (135) modifier -> . annotation
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (44) referenceType -> . classOrInterfaceType
    (45) referenceType -> . arrayType
    (270) annotation -> . normalAnnotation
    (271) annotation -> . markerAnnotation
    (272) annotation -> . singleMemberAnnotation
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (54) arrayType -> . genericType arrays
    (55) arrayType -> . genericType DOT name arrays
    (56) arrayType -> . primitiveType arrays
    (57) arrayType -> . name arrays
    (273) normalAnnotation -> . annotationName LPAREN memberValuePairs_opt RPAREN
    (280) markerAnnotation -> . annotationName
    (281) singleMemberAnnotation -> . annotationName LPAREN singleMemberAnnotationMemberValue RPAREN
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (274) annotationName -> . AT name
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    PUBLIC          shift and go to state 46
    PROTECTED       shift and go to state 6
    PRIVATE         shift and go to state 14
    STATIC          shift and go to state 7
    ABSTRACT        shift and go to state 5
    FINAL           shift and go to state 11
    NATIVE          shift and go to state 12
    SYNCHRONIZED    shift and go to state 2
    TRANSIENT       shift and go to state 19
    VOLATILE        shift and go to state 43
    STRICTFP        shift and go to state 18
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    AT              shift and go to state 155
    Identifier      shift and go to state 68

    qualifiedName                  shift and go to state 64
    singleMemberAnnotation         shift and go to state 8
    arrayType                      shift and go to state 269
    genericType                    shift and go to state 271
    markerAnnotation               shift and go to state 9
    classOrInterfaceType           shift and go to state 272
    simpleName                     shift and go to state 66
    referenceType                  shift and go to state 273
    type                           shift and go to state 899
    annotation                     shift and go to state 35
    name                           shift and go to state 276
    annotationName                 shift and go to state 40
    primitiveType                  shift and go to state 277
    classOrInterface               shift and go to state 122
    normalAnnotation               shift and go to state 24
    modifier                       shift and go to state 87

state 763

    (354) forStatement -> FOR LPAREN forInit_opt . SEMI expression_opt SEMI forUpdate_opt RPAREN statement

    SEMI            shift and go to state 900


state 764

    (360) statementExpressionList -> statementExpression .

    COMMA           reduce using rule 360 (statementExpressionList -> statementExpression .)
    SEMI            reduce using rule 360 (statementExpressionList -> statementExpression .)
    RPAREN          reduce using rule 360 (statementExpressionList -> statementExpression .)


state 765

    (343) methodInvocation -> SUPER . DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> SUPER . DOT Identifier LPAREN argumentList_opt RPAREN
    (446) fieldAccess -> SUPER . DOT Identifier

    DOT             shift and go to state 585


state 766

    (358) forInit -> statementExpressionList .
    (361) statementExpressionList -> statementExpressionList . COMMA statementExpression

    SEMI            reduce using rule 358 (forInit -> statementExpressionList .)
    COMMA           shift and go to state 901


state 767

    (369) enhancedForStatementHead -> enhancedForStatementHeadInit COLON expression . RPAREN

    RPAREN          shift and go to state 902


state 768

    (401) tryStatement -> TRY tryBlock catches .
    (407) catches -> catches . catchClause
    (404) catches_opt -> catches .
    (408) catchClause -> . CATCH LPAREN catchFormalParameter RPAREN block

    IF              reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    WHILE           reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    FOR             reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    BLPAREN         reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    ASSERT          reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    SEMI            reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    SWITCH          reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    DO              reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    BREAK           reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    CONTINUE        reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    RETURN          reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    SYNCHRONIZED    reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    THROW           reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    TRY             reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    Identifier      reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    AT              reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    BOOLEAN         reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    VOID            reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    BYTE            reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    SHORT           reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    INT             reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    LONG            reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    CHAR            reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    FLOAT           reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    DOUBLE          reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    PUBLIC          reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    PROTECTED       reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    PRIVATE         reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    STATIC          reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    ABSTRACT        reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    FINAL           reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    NATIVE          reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    TRANSIENT       reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    VOLATILE        reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    STRICTFP        reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    THIS            reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    SUPER           reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    OP_INC          reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    OP_DEC          reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    NEW             reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    LESS            reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    LPAREN          reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    CharacterLiteral reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    StringLiteral   reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    NULL            reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    LONG_NUMBER     reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    LONG_HEX_NUMBER reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    NON_INTEGER_1   reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    NON_INTEGER_2   reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    NON_INTEGER_3   reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    NON_INTEGER_4   reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    NON_INTEGER_5   reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    NON_INTEGER_6   reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    TRUE            reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    FALSE           reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    INTERFACE       reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    ENUM            reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    CLASS           reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    BRPAREN         reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    CASE            reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    DEFAULT         reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    ELSE            reduce using rule 401 (tryStatement -> TRY tryBlock catches .)
    FINALLY         reduce using rule 404 (catches_opt -> catches .)
    CATCH           shift and go to state 770

    catchClause                    shift and go to state 903

state 769

    (406) catches -> catchClause .

    CATCH           reduce using rule 406 (catches -> catchClause .)
    IF              reduce using rule 406 (catches -> catchClause .)
    WHILE           reduce using rule 406 (catches -> catchClause .)
    FOR             reduce using rule 406 (catches -> catchClause .)
    BLPAREN         reduce using rule 406 (catches -> catchClause .)
    ASSERT          reduce using rule 406 (catches -> catchClause .)
    SEMI            reduce using rule 406 (catches -> catchClause .)
    SWITCH          reduce using rule 406 (catches -> catchClause .)
    DO              reduce using rule 406 (catches -> catchClause .)
    BREAK           reduce using rule 406 (catches -> catchClause .)
    CONTINUE        reduce using rule 406 (catches -> catchClause .)
    RETURN          reduce using rule 406 (catches -> catchClause .)
    SYNCHRONIZED    reduce using rule 406 (catches -> catchClause .)
    THROW           reduce using rule 406 (catches -> catchClause .)
    TRY             reduce using rule 406 (catches -> catchClause .)
    Identifier      reduce using rule 406 (catches -> catchClause .)
    AT              reduce using rule 406 (catches -> catchClause .)
    BOOLEAN         reduce using rule 406 (catches -> catchClause .)
    VOID            reduce using rule 406 (catches -> catchClause .)
    BYTE            reduce using rule 406 (catches -> catchClause .)
    SHORT           reduce using rule 406 (catches -> catchClause .)
    INT             reduce using rule 406 (catches -> catchClause .)
    LONG            reduce using rule 406 (catches -> catchClause .)
    CHAR            reduce using rule 406 (catches -> catchClause .)
    FLOAT           reduce using rule 406 (catches -> catchClause .)
    DOUBLE          reduce using rule 406 (catches -> catchClause .)
    PUBLIC          reduce using rule 406 (catches -> catchClause .)
    PROTECTED       reduce using rule 406 (catches -> catchClause .)
    PRIVATE         reduce using rule 406 (catches -> catchClause .)
    STATIC          reduce using rule 406 (catches -> catchClause .)
    ABSTRACT        reduce using rule 406 (catches -> catchClause .)
    FINAL           reduce using rule 406 (catches -> catchClause .)
    NATIVE          reduce using rule 406 (catches -> catchClause .)
    TRANSIENT       reduce using rule 406 (catches -> catchClause .)
    VOLATILE        reduce using rule 406 (catches -> catchClause .)
    STRICTFP        reduce using rule 406 (catches -> catchClause .)
    THIS            reduce using rule 406 (catches -> catchClause .)
    SUPER           reduce using rule 406 (catches -> catchClause .)
    OP_INC          reduce using rule 406 (catches -> catchClause .)
    OP_DEC          reduce using rule 406 (catches -> catchClause .)
    NEW             reduce using rule 406 (catches -> catchClause .)
    LESS            reduce using rule 406 (catches -> catchClause .)
    LPAREN          reduce using rule 406 (catches -> catchClause .)
    CharacterLiteral reduce using rule 406 (catches -> catchClause .)
    StringLiteral   reduce using rule 406 (catches -> catchClause .)
    NULL            reduce using rule 406 (catches -> catchClause .)
    LONG_NUMBER     reduce using rule 406 (catches -> catchClause .)
    LONG_HEX_NUMBER reduce using rule 406 (catches -> catchClause .)
    NON_INTEGER_1   reduce using rule 406 (catches -> catchClause .)
    NON_INTEGER_2   reduce using rule 406 (catches -> catchClause .)
    NON_INTEGER_3   reduce using rule 406 (catches -> catchClause .)
    NON_INTEGER_4   reduce using rule 406 (catches -> catchClause .)
    NON_INTEGER_5   reduce using rule 406 (catches -> catchClause .)
    NON_INTEGER_6   reduce using rule 406 (catches -> catchClause .)
    TRUE            reduce using rule 406 (catches -> catchClause .)
    FALSE           reduce using rule 406 (catches -> catchClause .)
    INTERFACE       reduce using rule 406 (catches -> catchClause .)
    ENUM            reduce using rule 406 (catches -> catchClause .)
    CLASS           reduce using rule 406 (catches -> catchClause .)
    BRPAREN         reduce using rule 406 (catches -> catchClause .)
    CASE            reduce using rule 406 (catches -> catchClause .)
    DEFAULT         reduce using rule 406 (catches -> catchClause .)
    FINALLY         reduce using rule 406 (catches -> catchClause .)
    ELSE            reduce using rule 406 (catches -> catchClause .)


state 770

    (408) catchClause -> CATCH . LPAREN catchFormalParameter RPAREN block

    LPAREN          shift and go to state 904


state 771

    (402) tryStatement -> TRY tryBlock catches_opt . finally
    (423) finally -> . FINALLY block

    FINALLY         shift and go to state 906

    finally                        shift and go to state 905

state 772

    (405) catches_opt -> empty .

    FINALLY         reduce using rule 405 (catches_opt -> empty .)
    IF              reduce using rule 405 (catches_opt -> empty .)
    WHILE           reduce using rule 405 (catches_opt -> empty .)
    FOR             reduce using rule 405 (catches_opt -> empty .)
    BLPAREN         reduce using rule 405 (catches_opt -> empty .)
    ASSERT          reduce using rule 405 (catches_opt -> empty .)
    SEMI            reduce using rule 405 (catches_opt -> empty .)
    SWITCH          reduce using rule 405 (catches_opt -> empty .)
    DO              reduce using rule 405 (catches_opt -> empty .)
    BREAK           reduce using rule 405 (catches_opt -> empty .)
    CONTINUE        reduce using rule 405 (catches_opt -> empty .)
    RETURN          reduce using rule 405 (catches_opt -> empty .)
    SYNCHRONIZED    reduce using rule 405 (catches_opt -> empty .)
    THROW           reduce using rule 405 (catches_opt -> empty .)
    TRY             reduce using rule 405 (catches_opt -> empty .)
    Identifier      reduce using rule 405 (catches_opt -> empty .)
    AT              reduce using rule 405 (catches_opt -> empty .)
    BOOLEAN         reduce using rule 405 (catches_opt -> empty .)
    VOID            reduce using rule 405 (catches_opt -> empty .)
    BYTE            reduce using rule 405 (catches_opt -> empty .)
    SHORT           reduce using rule 405 (catches_opt -> empty .)
    INT             reduce using rule 405 (catches_opt -> empty .)
    LONG            reduce using rule 405 (catches_opt -> empty .)
    CHAR            reduce using rule 405 (catches_opt -> empty .)
    FLOAT           reduce using rule 405 (catches_opt -> empty .)
    DOUBLE          reduce using rule 405 (catches_opt -> empty .)
    PUBLIC          reduce using rule 405 (catches_opt -> empty .)
    PROTECTED       reduce using rule 405 (catches_opt -> empty .)
    PRIVATE         reduce using rule 405 (catches_opt -> empty .)
    STATIC          reduce using rule 405 (catches_opt -> empty .)
    ABSTRACT        reduce using rule 405 (catches_opt -> empty .)
    FINAL           reduce using rule 405 (catches_opt -> empty .)
    NATIVE          reduce using rule 405 (catches_opt -> empty .)
    TRANSIENT       reduce using rule 405 (catches_opt -> empty .)
    VOLATILE        reduce using rule 405 (catches_opt -> empty .)
    STRICTFP        reduce using rule 405 (catches_opt -> empty .)
    THIS            reduce using rule 405 (catches_opt -> empty .)
    SUPER           reduce using rule 405 (catches_opt -> empty .)
    OP_INC          reduce using rule 405 (catches_opt -> empty .)
    OP_DEC          reduce using rule 405 (catches_opt -> empty .)
    NEW             reduce using rule 405 (catches_opt -> empty .)
    LESS            reduce using rule 405 (catches_opt -> empty .)
    LPAREN          reduce using rule 405 (catches_opt -> empty .)
    CharacterLiteral reduce using rule 405 (catches_opt -> empty .)
    StringLiteral   reduce using rule 405 (catches_opt -> empty .)
    NULL            reduce using rule 405 (catches_opt -> empty .)
    LONG_NUMBER     reduce using rule 405 (catches_opt -> empty .)
    LONG_HEX_NUMBER reduce using rule 405 (catches_opt -> empty .)
    NON_INTEGER_1   reduce using rule 405 (catches_opt -> empty .)
    NON_INTEGER_2   reduce using rule 405 (catches_opt -> empty .)
    NON_INTEGER_3   reduce using rule 405 (catches_opt -> empty .)
    NON_INTEGER_4   reduce using rule 405 (catches_opt -> empty .)
    NON_INTEGER_5   reduce using rule 405 (catches_opt -> empty .)
    NON_INTEGER_6   reduce using rule 405 (catches_opt -> empty .)
    TRUE            reduce using rule 405 (catches_opt -> empty .)
    FALSE           reduce using rule 405 (catches_opt -> empty .)
    INTERFACE       reduce using rule 405 (catches_opt -> empty .)
    ENUM            reduce using rule 405 (catches_opt -> empty .)
    CLASS           reduce using rule 405 (catches_opt -> empty .)
    BRPAREN         reduce using rule 405 (catches_opt -> empty .)
    CASE            reduce using rule 405 (catches_opt -> empty .)
    DEFAULT         reduce using rule 405 (catches_opt -> empty .)
    ELSE            reduce using rule 405 (catches_opt -> empty .)


state 773

    (413) tryStatementWithResources -> TRY resourceSpecification tryBlock . catches_opt
    (414) tryStatementWithResources -> TRY resourceSpecification tryBlock . catches_opt finally
    (404) catches_opt -> . catches
    (405) catches_opt -> . empty
    (406) catches -> . catchClause
    (407) catches -> . catches catchClause
    (631) empty -> .
    (408) catchClause -> . CATCH LPAREN catchFormalParameter RPAREN block

    FINALLY         reduce using rule 631 (empty -> .)
    IF              reduce using rule 631 (empty -> .)
    WHILE           reduce using rule 631 (empty -> .)
    FOR             reduce using rule 631 (empty -> .)
    BLPAREN         reduce using rule 631 (empty -> .)
    ASSERT          reduce using rule 631 (empty -> .)
    SEMI            reduce using rule 631 (empty -> .)
    SWITCH          reduce using rule 631 (empty -> .)
    DO              reduce using rule 631 (empty -> .)
    BREAK           reduce using rule 631 (empty -> .)
    CONTINUE        reduce using rule 631 (empty -> .)
    RETURN          reduce using rule 631 (empty -> .)
    SYNCHRONIZED    reduce using rule 631 (empty -> .)
    THROW           reduce using rule 631 (empty -> .)
    TRY             reduce using rule 631 (empty -> .)
    Identifier      reduce using rule 631 (empty -> .)
    AT              reduce using rule 631 (empty -> .)
    BOOLEAN         reduce using rule 631 (empty -> .)
    VOID            reduce using rule 631 (empty -> .)
    BYTE            reduce using rule 631 (empty -> .)
    SHORT           reduce using rule 631 (empty -> .)
    INT             reduce using rule 631 (empty -> .)
    LONG            reduce using rule 631 (empty -> .)
    CHAR            reduce using rule 631 (empty -> .)
    FLOAT           reduce using rule 631 (empty -> .)
    DOUBLE          reduce using rule 631 (empty -> .)
    PUBLIC          reduce using rule 631 (empty -> .)
    PROTECTED       reduce using rule 631 (empty -> .)
    PRIVATE         reduce using rule 631 (empty -> .)
    STATIC          reduce using rule 631 (empty -> .)
    ABSTRACT        reduce using rule 631 (empty -> .)
    FINAL           reduce using rule 631 (empty -> .)
    NATIVE          reduce using rule 631 (empty -> .)
    TRANSIENT       reduce using rule 631 (empty -> .)
    VOLATILE        reduce using rule 631 (empty -> .)
    STRICTFP        reduce using rule 631 (empty -> .)
    THIS            reduce using rule 631 (empty -> .)
    SUPER           reduce using rule 631 (empty -> .)
    OP_INC          reduce using rule 631 (empty -> .)
    OP_DEC          reduce using rule 631 (empty -> .)
    NEW             reduce using rule 631 (empty -> .)
    LESS            reduce using rule 631 (empty -> .)
    LPAREN          reduce using rule 631 (empty -> .)
    CharacterLiteral reduce using rule 631 (empty -> .)
    StringLiteral   reduce using rule 631 (empty -> .)
    NULL            reduce using rule 631 (empty -> .)
    LONG_NUMBER     reduce using rule 631 (empty -> .)
    LONG_HEX_NUMBER reduce using rule 631 (empty -> .)
    NON_INTEGER_1   reduce using rule 631 (empty -> .)
    NON_INTEGER_2   reduce using rule 631 (empty -> .)
    NON_INTEGER_3   reduce using rule 631 (empty -> .)
    NON_INTEGER_4   reduce using rule 631 (empty -> .)
    NON_INTEGER_5   reduce using rule 631 (empty -> .)
    NON_INTEGER_6   reduce using rule 631 (empty -> .)
    TRUE            reduce using rule 631 (empty -> .)
    FALSE           reduce using rule 631 (empty -> .)
    INTERFACE       reduce using rule 631 (empty -> .)
    ENUM            reduce using rule 631 (empty -> .)
    CLASS           reduce using rule 631 (empty -> .)
    BRPAREN         reduce using rule 631 (empty -> .)
    CASE            reduce using rule 631 (empty -> .)
    DEFAULT         reduce using rule 631 (empty -> .)
    ELSE            reduce using rule 631 (empty -> .)
    CATCH           shift and go to state 770

    catches                        shift and go to state 907
    catchClause                    shift and go to state 769
    catches_opt                    shift and go to state 908
    empty                          shift and go to state 772

state 774

    (421) resource -> type . variableDeclaratorId ASS variableInitializer
    (301) variableDeclaratorId -> . Identifier arrays_opt

    Identifier      shift and go to state 575

    variableDeclaratorId           shift and go to state 909

state 775

    (415) resourceSpecification -> LPAREN resources . semi_opt RPAREN
    (419) resources -> resources . trailingSemicolon resource
    (416) semi_opt -> . SEMI
    (417) semi_opt -> . empty
    (420) trailingSemicolon -> . SEMI
    (631) empty -> .

    SEMI            shift and go to state 910
    RPAREN          reduce using rule 631 (empty -> .)

    semi_opt                       shift and go to state 911
    trailingSemicolon              shift and go to state 913
    empty                          shift and go to state 912

state 776

    (422) resource -> modifiers . type variableDeclaratorId ASS variableInitializer
    (123) modifiers -> modifiers . modifier
    (33) type -> . primitiveType
    (34) type -> . referenceType
    (124) modifier -> . PUBLIC
    (125) modifier -> . PROTECTED
    (126) modifier -> . PRIVATE
    (127) modifier -> . STATIC
    (128) modifier -> . ABSTRACT
    (129) modifier -> . FINAL
    (130) modifier -> . NATIVE
    (131) modifier -> . SYNCHRONIZED
    (132) modifier -> . TRANSIENT
    (133) modifier -> . VOLATILE
    (134) modifier -> . STRICTFP
    (135) modifier -> . annotation
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (44) referenceType -> . classOrInterfaceType
    (45) referenceType -> . arrayType
    (270) annotation -> . normalAnnotation
    (271) annotation -> . markerAnnotation
    (272) annotation -> . singleMemberAnnotation
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (54) arrayType -> . genericType arrays
    (55) arrayType -> . genericType DOT name arrays
    (56) arrayType -> . primitiveType arrays
    (57) arrayType -> . name arrays
    (273) normalAnnotation -> . annotationName LPAREN memberValuePairs_opt RPAREN
    (280) markerAnnotation -> . annotationName
    (281) singleMemberAnnotation -> . annotationName LPAREN singleMemberAnnotationMemberValue RPAREN
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (274) annotationName -> . AT name
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    PUBLIC          shift and go to state 46
    PROTECTED       shift and go to state 6
    PRIVATE         shift and go to state 14
    STATIC          shift and go to state 7
    ABSTRACT        shift and go to state 5
    FINAL           shift and go to state 11
    NATIVE          shift and go to state 12
    SYNCHRONIZED    shift and go to state 2
    TRANSIENT       shift and go to state 19
    VOLATILE        shift and go to state 43
    STRICTFP        shift and go to state 18
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    AT              shift and go to state 155
    Identifier      shift and go to state 68

    qualifiedName                  shift and go to state 64
    singleMemberAnnotation         shift and go to state 8
    arrayType                      shift and go to state 269
    genericType                    shift and go to state 271
    markerAnnotation               shift and go to state 9
    classOrInterfaceType           shift and go to state 272
    simpleName                     shift and go to state 66
    type                           shift and go to state 914
    referenceType                  shift and go to state 273
    annotation                     shift and go to state 35
    name                           shift and go to state 276
    annotationName                 shift and go to state 40
    primitiveType                  shift and go to state 277
    classOrInterface               shift and go to state 122
    normalAnnotation               shift and go to state 24
    modifier                       shift and go to state 87

state 777

    (418) resources -> resource .

    SEMI            reduce using rule 418 (resources -> resource .)
    RPAREN          reduce using rule 418 (resources -> resource .)


state 778

    (397) continueStatement -> CONTINUE Identifier SEMI .

    IF              reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    WHILE           reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    FOR             reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    BLPAREN         reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    ASSERT          reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    SEMI            reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    SWITCH          reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    DO              reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    BREAK           reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    CONTINUE        reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    RETURN          reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    SYNCHRONIZED    reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    THROW           reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    TRY             reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    Identifier      reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    AT              reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    BOOLEAN         reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    VOID            reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    BYTE            reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    SHORT           reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    INT             reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    LONG            reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    CHAR            reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    FLOAT           reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    DOUBLE          reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    PUBLIC          reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    PROTECTED       reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    PRIVATE         reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    STATIC          reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    ABSTRACT        reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    FINAL           reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    NATIVE          reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    TRANSIENT       reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    VOLATILE        reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    STRICTFP        reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    THIS            reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    SUPER           reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    OP_INC          reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    OP_DEC          reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    NEW             reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    LESS            reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    LPAREN          reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    CharacterLiteral reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    StringLiteral   reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    NULL            reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    LONG_NUMBER     reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    LONG_HEX_NUMBER reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    NON_INTEGER_1   reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    NON_INTEGER_2   reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    NON_INTEGER_3   reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    NON_INTEGER_4   reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    NON_INTEGER_5   reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    NON_INTEGER_6   reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    TRUE            reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    FALSE           reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    INTERFACE       reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    ENUM            reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    CLASS           reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    BRPAREN         reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    CASE            reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    DEFAULT         reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)
    ELSE            reduce using rule 397 (continueStatement -> CONTINUE Identifier SEMI .)


state 779

    (430) explicitConstructorInvocation -> primary DOT THIS . LPAREN argumentList_opt RPAREN SEMI

    LPAREN          shift and go to state 915


state 780

    (432) explicitConstructorInvocation -> primary DOT typeArguments . SUPER LPAREN argumentList_opt RPAREN SEMI
    (434) explicitConstructorInvocation -> primary DOT typeArguments . THIS LPAREN argumentList_opt RPAREN SEMI
    (342) methodInvocation -> primary DOT typeArguments . Identifier LPAREN argumentList_opt RPAREN

    SUPER           shift and go to state 917
    THIS            shift and go to state 916
    Identifier      shift and go to state 814


state 781

    (344) methodInvocation -> primary DOT Identifier . LPAREN argumentList_opt RPAREN
    (445) fieldAccess -> primary DOT Identifier .

    LPAREN          shift and go to state 817
    FLPAREN         reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    DOT             reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    OP_INC          reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    OP_DEC          reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    ASS             reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    ASS_ADD         reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    ASS_SUB         reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    ASS_MUL         reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    ASS_DIV         reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    ASS_AND         reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    ASS_OR          reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    ASS_XOR         reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    ASS_MOD         reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    ASS_SHL         reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    ASS_SHRR        reduce using rule 445 (fieldAccess -> primary DOT Identifier .)
    ASS_SHR         reduce using rule 445 (fieldAccess -> primary DOT Identifier .)


state 782

    (428) explicitConstructorInvocation -> primary DOT SUPER . LPAREN argumentList_opt RPAREN SEMI

    LPAREN          shift and go to state 918


state 783

    (352) whileStatement -> WHILE LPAREN expression . RPAREN statement

    RPAREN          shift and go to state 919


state 784

    (380) switchStatement -> SWITCH LPAREN expression . RPAREN switchBlock

    RPAREN          shift and go to state 920


state 785

    (296) localVariableDeclaration -> modifiers type variableDeclarators .
    (298) variableDeclarators -> variableDeclarators . COMMA variableDeclarator

    SEMI            reduce using rule 296 (localVariableDeclaration -> modifiers type variableDeclarators .)
    COMMA           shift and go to state 706


state 786

    (393) doStatement -> DO statement WHILE . LPAREN expression RPAREN SEMI

    LPAREN          shift and go to state 921


state 787

    (378) assertStatement -> ASSERT expression COLON . expression SEMI
    (456) expression -> . assignmentExpression
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    assignmentExpression           shift and go to state 543
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    assignment                     shift and go to state 554
    fieldAccess                    shift and go to state 189
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    unaryExpressionNotPlusMinus    shift and go to state 397
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    expression                     shift and go to state 922
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 788

    (377) assertStatement -> ASSERT expression SEMI .

    IF              reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    WHILE           reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    FOR             reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    BLPAREN         reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    ASSERT          reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    SEMI            reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    SWITCH          reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    DO              reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    BREAK           reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    CONTINUE        reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    RETURN          reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    SYNCHRONIZED    reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    THROW           reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    TRY             reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    Identifier      reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    AT              reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    BOOLEAN         reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    VOID            reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    BYTE            reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    SHORT           reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    INT             reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    LONG            reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    CHAR            reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    FLOAT           reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    DOUBLE          reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    PUBLIC          reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    PROTECTED       reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    PRIVATE         reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    STATIC          reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    ABSTRACT        reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    FINAL           reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    NATIVE          reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    TRANSIENT       reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    VOLATILE        reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    STRICTFP        reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    THIS            reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    SUPER           reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    OP_INC          reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    OP_DEC          reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    NEW             reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    LESS            reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    LPAREN          reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    CharacterLiteral reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    StringLiteral   reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    NULL            reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    LONG_NUMBER     reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    LONG_HEX_NUMBER reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    NON_INTEGER_1   reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    NON_INTEGER_2   reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    NON_INTEGER_3   reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    NON_INTEGER_4   reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    NON_INTEGER_5   reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    NON_INTEGER_6   reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    TRUE            reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    FALSE           reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    INTERFACE       reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    ENUM            reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    CLASS           reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    BRPAREN         reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    CASE            reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    DEFAULT         reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)
    ELSE            reduce using rule 377 (assertStatement -> ASSERT expression SEMI .)


state 789

    (600) primaryNoNewArray -> LPAREN name RPAREN .

    FLPAREN         reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    DOT             reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    OP_INC          reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    OP_DEC          reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    ASS             reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    ASS_ADD         reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    ASS_SUB         reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    ASS_MUL         reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    ASS_DIV         reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    ASS_AND         reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    ASS_OR          reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    ASS_XOR         reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    ASS_MOD         reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    ASS_SHL         reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    ASS_SHRR        reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    ASS_SHR         reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)


state 790

    (349) ifThenStatement -> IF LPAREN expression . RPAREN statement
    (350) ifThenElseStatement -> IF LPAREN expression . RPAREN statementNoShortIf ELSE statement

    RPAREN          shift and go to state 923


state 791

    (425) explicitConstructorInvocation -> SUPER LPAREN argumentList_opt . RPAREN SEMI

    RPAREN          shift and go to state 924


state 792

    (345) methodInvocation -> SUPER DOT Identifier . LPAREN argumentList_opt RPAREN
    (446) fieldAccess -> SUPER DOT Identifier .

    LPAREN          shift and go to state 840
    FLPAREN         reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    DOT             reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    OP_INC          reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    OP_DEC          reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    ASS             reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    ASS_ADD         reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    ASS_SUB         reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    ASS_MUL         reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    ASS_DIV         reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    ASS_AND         reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    ASS_OR          reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    ASS_XOR         reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    ASS_MOD         reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    ASS_SHL         reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    ASS_SHRR        reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)
    ASS_SHR         reduce using rule 446 (fieldAccess -> SUPER DOT Identifier .)


state 793

    (400) throwStatment -> THROW expression SEMI .

    IF              reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    WHILE           reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    FOR             reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    BLPAREN         reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    ASSERT          reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    SEMI            reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    SWITCH          reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    DO              reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    BREAK           reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    CONTINUE        reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    RETURN          reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    SYNCHRONIZED    reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    THROW           reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    TRY             reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    Identifier      reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    AT              reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    BOOLEAN         reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    VOID            reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    BYTE            reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    SHORT           reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    INT             reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    LONG            reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    CHAR            reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    FLOAT           reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    DOUBLE          reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    PUBLIC          reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    PROTECTED       reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    PRIVATE         reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    STATIC          reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    ABSTRACT        reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    FINAL           reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    NATIVE          reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    TRANSIENT       reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    VOLATILE        reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    STRICTFP        reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    THIS            reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    SUPER           reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    OP_INC          reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    OP_DEC          reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    NEW             reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    LESS            reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    LPAREN          reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    CharacterLiteral reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    StringLiteral   reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    NULL            reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    LONG_NUMBER     reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    LONG_HEX_NUMBER reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    NON_INTEGER_1   reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    NON_INTEGER_2   reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    NON_INTEGER_3   reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    NON_INTEGER_4   reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    NON_INTEGER_5   reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    NON_INTEGER_6   reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    TRUE            reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    FALSE           reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    INTERFACE       reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    ENUM            reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    CLASS           reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    BRPAREN         reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    CASE            reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    DEFAULT         reduce using rule 400 (throwStatment -> THROW expression SEMI .)
    ELSE            reduce using rule 400 (throwStatment -> THROW expression SEMI .)


state 794

    (257) annotationMethodHeadName -> modifiers_opt typeParameters type Identifier . LPAREN

    LPAREN          shift and go to state 925


state 795

    (258) annotationMethodHeadName -> modifiers_opt type Identifier LPAREN .

    PUBLIC          reduce using rule 258 (annotationMethodHeadName -> modifiers_opt type Identifier LPAREN .)
    PROTECTED       reduce using rule 258 (annotationMethodHeadName -> modifiers_opt type Identifier LPAREN .)
    PRIVATE         reduce using rule 258 (annotationMethodHeadName -> modifiers_opt type Identifier LPAREN .)
    STATIC          reduce using rule 258 (annotationMethodHeadName -> modifiers_opt type Identifier LPAREN .)
    ABSTRACT        reduce using rule 258 (annotationMethodHeadName -> modifiers_opt type Identifier LPAREN .)
    FINAL           reduce using rule 258 (annotationMethodHeadName -> modifiers_opt type Identifier LPAREN .)
    NATIVE          reduce using rule 258 (annotationMethodHeadName -> modifiers_opt type Identifier LPAREN .)
    SYNCHRONIZED    reduce using rule 258 (annotationMethodHeadName -> modifiers_opt type Identifier LPAREN .)
    TRANSIENT       reduce using rule 258 (annotationMethodHeadName -> modifiers_opt type Identifier LPAREN .)
    VOLATILE        reduce using rule 258 (annotationMethodHeadName -> modifiers_opt type Identifier LPAREN .)
    STRICTFP        reduce using rule 258 (annotationMethodHeadName -> modifiers_opt type Identifier LPAREN .)
    AT              reduce using rule 258 (annotationMethodHeadName -> modifiers_opt type Identifier LPAREN .)
    RPAREN          reduce using rule 258 (annotationMethodHeadName -> modifiers_opt type Identifier LPAREN .)
    BOOLEAN         reduce using rule 258 (annotationMethodHeadName -> modifiers_opt type Identifier LPAREN .)
    VOID            reduce using rule 258 (annotationMethodHeadName -> modifiers_opt type Identifier LPAREN .)
    BYTE            reduce using rule 258 (annotationMethodHeadName -> modifiers_opt type Identifier LPAREN .)
    SHORT           reduce using rule 258 (annotationMethodHeadName -> modifiers_opt type Identifier LPAREN .)
    INT             reduce using rule 258 (annotationMethodHeadName -> modifiers_opt type Identifier LPAREN .)
    LONG            reduce using rule 258 (annotationMethodHeadName -> modifiers_opt type Identifier LPAREN .)
    CHAR            reduce using rule 258 (annotationMethodHeadName -> modifiers_opt type Identifier LPAREN .)
    FLOAT           reduce using rule 258 (annotationMethodHeadName -> modifiers_opt type Identifier LPAREN .)
    DOUBLE          reduce using rule 258 (annotationMethodHeadName -> modifiers_opt type Identifier LPAREN .)
    Identifier      reduce using rule 258 (annotationMethodHeadName -> modifiers_opt type Identifier LPAREN .)


state 796

    (254) annotationMethodHead -> annotationMethodHeadName formalParameterList_opt RPAREN methodHeadExtendedDims . annotationMethodHeadDefaultValue_opt
    (255) annotationMethodHeadDefaultValue_opt -> . defaultValue
    (256) annotationMethodHeadDefaultValue_opt -> . empty
    (259) defaultValue -> . DEFAULT memberValue
    (631) empty -> .

    DEFAULT         shift and go to state 926
    SEMI            reduce using rule 631 (empty -> .)

    defaultValue                   shift and go to state 927
    annotationMethodHeadDefaultValue_opt shift and go to state 928
    empty                          shift and go to state 929

state 797

    (23) staticImportOnDemandDeclaration -> IMPORT STATIC name DOT MULT SEMI .

    SEMI            reduce using rule 23 (staticImportOnDemandDeclaration -> IMPORT STATIC name DOT MULT SEMI .)
    IMPORT          reduce using rule 23 (staticImportOnDemandDeclaration -> IMPORT STATIC name DOT MULT SEMI .)
    AT              reduce using rule 23 (staticImportOnDemandDeclaration -> IMPORT STATIC name DOT MULT SEMI .)
    PUBLIC          reduce using rule 23 (staticImportOnDemandDeclaration -> IMPORT STATIC name DOT MULT SEMI .)
    PROTECTED       reduce using rule 23 (staticImportOnDemandDeclaration -> IMPORT STATIC name DOT MULT SEMI .)
    PRIVATE         reduce using rule 23 (staticImportOnDemandDeclaration -> IMPORT STATIC name DOT MULT SEMI .)
    STATIC          reduce using rule 23 (staticImportOnDemandDeclaration -> IMPORT STATIC name DOT MULT SEMI .)
    ABSTRACT        reduce using rule 23 (staticImportOnDemandDeclaration -> IMPORT STATIC name DOT MULT SEMI .)
    FINAL           reduce using rule 23 (staticImportOnDemandDeclaration -> IMPORT STATIC name DOT MULT SEMI .)
    NATIVE          reduce using rule 23 (staticImportOnDemandDeclaration -> IMPORT STATIC name DOT MULT SEMI .)
    SYNCHRONIZED    reduce using rule 23 (staticImportOnDemandDeclaration -> IMPORT STATIC name DOT MULT SEMI .)
    TRANSIENT       reduce using rule 23 (staticImportOnDemandDeclaration -> IMPORT STATIC name DOT MULT SEMI .)
    VOLATILE        reduce using rule 23 (staticImportOnDemandDeclaration -> IMPORT STATIC name DOT MULT SEMI .)
    STRICTFP        reduce using rule 23 (staticImportOnDemandDeclaration -> IMPORT STATIC name DOT MULT SEMI .)
    INTERFACE       reduce using rule 23 (staticImportOnDemandDeclaration -> IMPORT STATIC name DOT MULT SEMI .)
    ENUM            reduce using rule 23 (staticImportOnDemandDeclaration -> IMPORT STATIC name DOT MULT SEMI .)
    CLASS           reduce using rule 23 (staticImportOnDemandDeclaration -> IMPORT STATIC name DOT MULT SEMI .)
    $end            reduce using rule 23 (staticImportOnDemandDeclaration -> IMPORT STATIC name DOT MULT SEMI .)


state 798

    (221) enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .

    SEMI            reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    AT              reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    PUBLIC          reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    PROTECTED       reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    PRIVATE         reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    STATIC          reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    ABSTRACT        reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    FINAL           reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    NATIVE          reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    SYNCHRONIZED    reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    TRANSIENT       reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    VOLATILE        reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    STRICTFP        reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    INTERFACE       reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    ENUM            reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    CLASS           reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    $end            reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    BLPAREN         reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    Identifier      reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    LESS            reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    BOOLEAN         reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    VOID            reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    BYTE            reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    SHORT           reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    INT             reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    LONG            reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    CHAR            reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    FLOAT           reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    DOUBLE          reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    BRPAREN         reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    IF              reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    WHILE           reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    FOR             reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    ASSERT          reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    SWITCH          reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    DO              reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    BREAK           reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    CONTINUE        reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    RETURN          reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    THROW           reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    TRY             reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    THIS            reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    SUPER           reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    OP_INC          reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    OP_DEC          reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    NEW             reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    LPAREN          reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    CharacterLiteral reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    StringLiteral   reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    NULL            reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    LONG_NUMBER     reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    LONG_HEX_NUMBER reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    NON_INTEGER_1   reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    NON_INTEGER_2   reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    NON_INTEGER_3   reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    NON_INTEGER_4   reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    NON_INTEGER_5   reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    NON_INTEGER_6   reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    TRUE            reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    FALSE           reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    CASE            reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)
    DEFAULT         reduce using rule 221 (enumBody -> BLPAREN enumConstants COMMA enumBodyDeclarations_opt BRPAREN .)


state 799

    (231) arguments -> LPAREN argumentList_opt RPAREN .

    BLPAREN         reduce using rule 231 (arguments -> LPAREN argumentList_opt RPAREN .)
    COMMA           reduce using rule 231 (arguments -> LPAREN argumentList_opt RPAREN .)
    SEMI            reduce using rule 231 (arguments -> LPAREN argumentList_opt RPAREN .)
    BRPAREN         reduce using rule 231 (arguments -> LPAREN argumentList_opt RPAREN .)


state 800

    (235) argumentList -> argumentList COMMA . expression
    (456) expression -> . assignmentExpression
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    assignmentExpression           shift and go to state 543
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    fieldAccess                    shift and go to state 189
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 554
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    unaryExpressionNotPlusMinus    shift and go to state 397
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    expression                     shift and go to state 930
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 801

    (81) additionalBound1 -> AND . referenceType1
    (73) additionalBound -> AND . referenceType
    (91) referenceType1 -> . referenceType MORE
    (92) referenceType1 -> . classOrInterface LESS typeArgumentList2
    (44) referenceType -> . classOrInterfaceType
    (45) referenceType -> . arrayType
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (54) arrayType -> . genericType arrays
    (55) arrayType -> . genericType DOT name arrays
    (56) arrayType -> . primitiveType arrays
    (57) arrayType -> . name arrays
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    Identifier      shift and go to state 68

    qualifiedName                  shift and go to state 64
    name                           shift and go to state 512
    classOrInterfaceType           shift and go to state 272
    arrayType                      shift and go to state 269
    classOrInterface               shift and go to state 514
    simpleName                     shift and go to state 66
    primitiveType                  shift and go to state 504
    referenceType1                 shift and go to state 931
    genericType                    shift and go to state 505
    referenceType                  shift and go to state 932

state 802

    (79) additionalBoundList1 -> additionalBound1 .

    EXTENDS         reduce using rule 79 (additionalBoundList1 -> additionalBound1 .)
    IMPLEMENTS      reduce using rule 79 (additionalBoundList1 -> additionalBound1 .)
    BLPAREN         reduce using rule 79 (additionalBoundList1 -> additionalBound1 .)
    Identifier      reduce using rule 79 (additionalBoundList1 -> additionalBound1 .)
    BOOLEAN         reduce using rule 79 (additionalBoundList1 -> additionalBound1 .)
    VOID            reduce using rule 79 (additionalBoundList1 -> additionalBound1 .)
    BYTE            reduce using rule 79 (additionalBoundList1 -> additionalBound1 .)
    SHORT           reduce using rule 79 (additionalBoundList1 -> additionalBound1 .)
    INT             reduce using rule 79 (additionalBoundList1 -> additionalBound1 .)
    LONG            reduce using rule 79 (additionalBoundList1 -> additionalBound1 .)
    CHAR            reduce using rule 79 (additionalBoundList1 -> additionalBound1 .)
    FLOAT           reduce using rule 79 (additionalBoundList1 -> additionalBound1 .)
    DOUBLE          reduce using rule 79 (additionalBoundList1 -> additionalBound1 .)


state 803

    (71) additionalBoundList -> additionalBound .

    AND             reduce using rule 71 (additionalBoundList -> additionalBound .)
    COMMA           reduce using rule 71 (additionalBoundList -> additionalBound .)


state 804

    (70) typeParameter -> typeParametersHeaderName EXTENDS referenceType additionalBoundList .
    (80) additionalBoundList1 -> additionalBoundList . additionalBound1
    (72) additionalBoundList -> additionalBoundList . additionalBound
    (81) additionalBound1 -> . AND referenceType1
    (73) additionalBound -> . AND referenceType

    COMMA           reduce using rule 70 (typeParameter -> typeParametersHeaderName EXTENDS referenceType additionalBoundList .)
    AND             shift and go to state 801

    additionalBound1               shift and go to state 933
    additionalBound                shift and go to state 934

state 805

    (78) typeParameter1 -> typeParametersHeaderName EXTENDS referenceType additionalBoundList1 .

    EXTENDS         reduce using rule 78 (typeParameter1 -> typeParametersHeaderName EXTENDS referenceType additionalBoundList1 .)
    IMPLEMENTS      reduce using rule 78 (typeParameter1 -> typeParametersHeaderName EXTENDS referenceType additionalBoundList1 .)
    BLPAREN         reduce using rule 78 (typeParameter1 -> typeParametersHeaderName EXTENDS referenceType additionalBoundList1 .)
    Identifier      reduce using rule 78 (typeParameter1 -> typeParametersHeaderName EXTENDS referenceType additionalBoundList1 .)
    BOOLEAN         reduce using rule 78 (typeParameter1 -> typeParametersHeaderName EXTENDS referenceType additionalBoundList1 .)
    VOID            reduce using rule 78 (typeParameter1 -> typeParametersHeaderName EXTENDS referenceType additionalBoundList1 .)
    BYTE            reduce using rule 78 (typeParameter1 -> typeParametersHeaderName EXTENDS referenceType additionalBoundList1 .)
    SHORT           reduce using rule 78 (typeParameter1 -> typeParametersHeaderName EXTENDS referenceType additionalBoundList1 .)
    INT             reduce using rule 78 (typeParameter1 -> typeParametersHeaderName EXTENDS referenceType additionalBoundList1 .)
    LONG            reduce using rule 78 (typeParameter1 -> typeParametersHeaderName EXTENDS referenceType additionalBoundList1 .)
    CHAR            reduce using rule 78 (typeParameter1 -> typeParametersHeaderName EXTENDS referenceType additionalBoundList1 .)
    FLOAT           reduce using rule 78 (typeParameter1 -> typeParametersHeaderName EXTENDS referenceType additionalBoundList1 .)
    DOUBLE          reduce using rule 78 (typeParameter1 -> typeParametersHeaderName EXTENDS referenceType additionalBoundList1 .)


state 806

    (448) arrayAccess -> primaryNoNewArray FLPAREN expression FRPAREN .

    FLPAREN         reduce using rule 448 (arrayAccess -> primaryNoNewArray FLPAREN expression FRPAREN .)
    DOT             reduce using rule 448 (arrayAccess -> primaryNoNewArray FLPAREN expression FRPAREN .)
    OP_INC          reduce using rule 448 (arrayAccess -> primaryNoNewArray FLPAREN expression FRPAREN .)
    OP_DEC          reduce using rule 448 (arrayAccess -> primaryNoNewArray FLPAREN expression FRPAREN .)
    ASS             reduce using rule 448 (arrayAccess -> primaryNoNewArray FLPAREN expression FRPAREN .)
    ASS_ADD         reduce using rule 448 (arrayAccess -> primaryNoNewArray FLPAREN expression FRPAREN .)
    ASS_SUB         reduce using rule 448 (arrayAccess -> primaryNoNewArray FLPAREN expression FRPAREN .)
    ASS_MUL         reduce using rule 448 (arrayAccess -> primaryNoNewArray FLPAREN expression FRPAREN .)
    ASS_DIV         reduce using rule 448 (arrayAccess -> primaryNoNewArray FLPAREN expression FRPAREN .)
    ASS_AND         reduce using rule 448 (arrayAccess -> primaryNoNewArray FLPAREN expression FRPAREN .)
    ASS_OR          reduce using rule 448 (arrayAccess -> primaryNoNewArray FLPAREN expression FRPAREN .)
    ASS_XOR         reduce using rule 448 (arrayAccess -> primaryNoNewArray FLPAREN expression FRPAREN .)
    ASS_MOD         reduce using rule 448 (arrayAccess -> primaryNoNewArray FLPAREN expression FRPAREN .)
    ASS_SHL         reduce using rule 448 (arrayAccess -> primaryNoNewArray FLPAREN expression FRPAREN .)
    ASS_SHRR        reduce using rule 448 (arrayAccess -> primaryNoNewArray FLPAREN expression FRPAREN .)
    ASS_SHR         reduce using rule 448 (arrayAccess -> primaryNoNewArray FLPAREN expression FRPAREN .)
    MULT            reduce using rule 448 (arrayAccess -> primaryNoNewArray FLPAREN expression FRPAREN .)
    SLASH           reduce using rule 448 (arrayAccess -> primaryNoNewArray FLPAREN expression FRPAREN .)
    PERCENT         reduce using rule 448 (arrayAccess -> primaryNoNewArray FLPAREN expression FRPAREN .)
    PLUS            reduce using rule 448 (arrayAccess -> primaryNoNewArray FLPAREN expression FRPAREN .)
    DASH            reduce using rule 448 (arrayAccess -> primaryNoNewArray FLPAREN expression FRPAREN .)
    OP_SHR          reduce using rule 448 (arrayAccess -> primaryNoNewArray FLPAREN expression FRPAREN .)
    OP_SHL          reduce using rule 448 (arrayAccess -> primaryNoNewArray FLPAREN expression FRPAREN .)
    OP_SHRR         reduce using rule 448 (arrayAccess -> primaryNoNewArray FLPAREN expression FRPAREN .)
    LESS            reduce using rule 448 (arrayAccess -> primaryNoNewArray FLPAREN expression FRPAREN .)
    OP_GE           reduce using rule 448 (arrayAccess -> primaryNoNewArray FLPAREN expression FRPAREN .)
    MORE            reduce using rule 448 (arrayAccess -> primaryNoNewArray FLPAREN expression FRPAREN .)
    OP_LE           reduce using rule 448 (arrayAccess -> primaryNoNewArray FLPAREN expression FRPAREN .)
    INSTANCEOF      reduce using rule 448 (arrayAccess -> primaryNoNewArray FLPAREN expression FRPAREN .)
    OP_EQ           reduce using rule 448 (arrayAccess -> primaryNoNewArray FLPAREN expression FRPAREN .)
    OP_NE           reduce using rule 448 (arrayAccess -> primaryNoNewArray FLPAREN expression FRPAREN .)
    AND             reduce using rule 448 (arrayAccess -> primaryNoNewArray FLPAREN expression FRPAREN .)
    CARET           reduce using rule 448 (arrayAccess -> primaryNoNewArray FLPAREN expression FRPAREN .)
    VERTICAL        reduce using rule 448 (arrayAccess -> primaryNoNewArray FLPAREN expression FRPAREN .)
    OP_LAND         reduce using rule 448 (arrayAccess -> primaryNoNewArray FLPAREN expression FRPAREN .)
    QUES            reduce using rule 448 (arrayAccess -> primaryNoNewArray FLPAREN expression FRPAREN .)
    OP_LOR          reduce using rule 448 (arrayAccess -> primaryNoNewArray FLPAREN expression FRPAREN .)
    RPAREN          reduce using rule 448 (arrayAccess -> primaryNoNewArray FLPAREN expression FRPAREN .)
    SEMI            reduce using rule 448 (arrayAccess -> primaryNoNewArray FLPAREN expression FRPAREN .)
    COLON           reduce using rule 448 (arrayAccess -> primaryNoNewArray FLPAREN expression FRPAREN .)
    COMMA           reduce using rule 448 (arrayAccess -> primaryNoNewArray FLPAREN expression FRPAREN .)
    FRPAREN         reduce using rule 448 (arrayAccess -> primaryNoNewArray FLPAREN expression FRPAREN .)
    BRPAREN         reduce using rule 448 (arrayAccess -> primaryNoNewArray FLPAREN expression FRPAREN .)


state 807

    (340) methodInvocation -> name LPAREN argumentList_opt RPAREN .

    FLPAREN         reduce using rule 340 (methodInvocation -> name LPAREN argumentList_opt RPAREN .)
    DOT             reduce using rule 340 (methodInvocation -> name LPAREN argumentList_opt RPAREN .)
    OP_INC          reduce using rule 340 (methodInvocation -> name LPAREN argumentList_opt RPAREN .)
    OP_DEC          reduce using rule 340 (methodInvocation -> name LPAREN argumentList_opt RPAREN .)
    MULT            reduce using rule 340 (methodInvocation -> name LPAREN argumentList_opt RPAREN .)
    SLASH           reduce using rule 340 (methodInvocation -> name LPAREN argumentList_opt RPAREN .)
    PERCENT         reduce using rule 340 (methodInvocation -> name LPAREN argumentList_opt RPAREN .)
    PLUS            reduce using rule 340 (methodInvocation -> name LPAREN argumentList_opt RPAREN .)
    DASH            reduce using rule 340 (methodInvocation -> name LPAREN argumentList_opt RPAREN .)
    OP_SHR          reduce using rule 340 (methodInvocation -> name LPAREN argumentList_opt RPAREN .)
    OP_SHL          reduce using rule 340 (methodInvocation -> name LPAREN argumentList_opt RPAREN .)
    OP_SHRR         reduce using rule 340 (methodInvocation -> name LPAREN argumentList_opt RPAREN .)
    LESS            reduce using rule 340 (methodInvocation -> name LPAREN argumentList_opt RPAREN .)
    OP_GE           reduce using rule 340 (methodInvocation -> name LPAREN argumentList_opt RPAREN .)
    MORE            reduce using rule 340 (methodInvocation -> name LPAREN argumentList_opt RPAREN .)
    OP_LE           reduce using rule 340 (methodInvocation -> name LPAREN argumentList_opt RPAREN .)
    INSTANCEOF      reduce using rule 340 (methodInvocation -> name LPAREN argumentList_opt RPAREN .)
    OP_EQ           reduce using rule 340 (methodInvocation -> name LPAREN argumentList_opt RPAREN .)
    OP_NE           reduce using rule 340 (methodInvocation -> name LPAREN argumentList_opt RPAREN .)
    AND             reduce using rule 340 (methodInvocation -> name LPAREN argumentList_opt RPAREN .)
    CARET           reduce using rule 340 (methodInvocation -> name LPAREN argumentList_opt RPAREN .)
    VERTICAL        reduce using rule 340 (methodInvocation -> name LPAREN argumentList_opt RPAREN .)
    OP_LAND         reduce using rule 340 (methodInvocation -> name LPAREN argumentList_opt RPAREN .)
    QUES            reduce using rule 340 (methodInvocation -> name LPAREN argumentList_opt RPAREN .)
    OP_LOR          reduce using rule 340 (methodInvocation -> name LPAREN argumentList_opt RPAREN .)
    RPAREN          reduce using rule 340 (methodInvocation -> name LPAREN argumentList_opt RPAREN .)
    COMMA           reduce using rule 340 (methodInvocation -> name LPAREN argumentList_opt RPAREN .)
    BRPAREN         reduce using rule 340 (methodInvocation -> name LPAREN argumentList_opt RPAREN .)
    SEMI            reduce using rule 340 (methodInvocation -> name LPAREN argumentList_opt RPAREN .)
    ASS             reduce using rule 340 (methodInvocation -> name LPAREN argumentList_opt RPAREN .)
    ASS_ADD         reduce using rule 340 (methodInvocation -> name LPAREN argumentList_opt RPAREN .)
    ASS_SUB         reduce using rule 340 (methodInvocation -> name LPAREN argumentList_opt RPAREN .)
    ASS_MUL         reduce using rule 340 (methodInvocation -> name LPAREN argumentList_opt RPAREN .)
    ASS_DIV         reduce using rule 340 (methodInvocation -> name LPAREN argumentList_opt RPAREN .)
    ASS_AND         reduce using rule 340 (methodInvocation -> name LPAREN argumentList_opt RPAREN .)
    ASS_OR          reduce using rule 340 (methodInvocation -> name LPAREN argumentList_opt RPAREN .)
    ASS_XOR         reduce using rule 340 (methodInvocation -> name LPAREN argumentList_opt RPAREN .)
    ASS_MOD         reduce using rule 340 (methodInvocation -> name LPAREN argumentList_opt RPAREN .)
    ASS_SHL         reduce using rule 340 (methodInvocation -> name LPAREN argumentList_opt RPAREN .)
    ASS_SHRR        reduce using rule 340 (methodInvocation -> name LPAREN argumentList_opt RPAREN .)
    ASS_SHR         reduce using rule 340 (methodInvocation -> name LPAREN argumentList_opt RPAREN .)
    FRPAREN         reduce using rule 340 (methodInvocation -> name LPAREN argumentList_opt RPAREN .)
    COLON           reduce using rule 340 (methodInvocation -> name LPAREN argumentList_opt RPAREN .)


state 808

    (341) methodInvocation -> name DOT typeArguments Identifier . LPAREN argumentList_opt RPAREN

    LPAREN          shift and go to state 935


state 809

    (447) arrayAccess -> name FLPAREN expression FRPAREN .

    FLPAREN         reduce using rule 447 (arrayAccess -> name FLPAREN expression FRPAREN .)
    DOT             reduce using rule 447 (arrayAccess -> name FLPAREN expression FRPAREN .)
    OP_INC          reduce using rule 447 (arrayAccess -> name FLPAREN expression FRPAREN .)
    OP_DEC          reduce using rule 447 (arrayAccess -> name FLPAREN expression FRPAREN .)
    ASS             reduce using rule 447 (arrayAccess -> name FLPAREN expression FRPAREN .)
    ASS_ADD         reduce using rule 447 (arrayAccess -> name FLPAREN expression FRPAREN .)
    ASS_SUB         reduce using rule 447 (arrayAccess -> name FLPAREN expression FRPAREN .)
    ASS_MUL         reduce using rule 447 (arrayAccess -> name FLPAREN expression FRPAREN .)
    ASS_DIV         reduce using rule 447 (arrayAccess -> name FLPAREN expression FRPAREN .)
    ASS_AND         reduce using rule 447 (arrayAccess -> name FLPAREN expression FRPAREN .)
    ASS_OR          reduce using rule 447 (arrayAccess -> name FLPAREN expression FRPAREN .)
    ASS_XOR         reduce using rule 447 (arrayAccess -> name FLPAREN expression FRPAREN .)
    ASS_MOD         reduce using rule 447 (arrayAccess -> name FLPAREN expression FRPAREN .)
    ASS_SHL         reduce using rule 447 (arrayAccess -> name FLPAREN expression FRPAREN .)
    ASS_SHRR        reduce using rule 447 (arrayAccess -> name FLPAREN expression FRPAREN .)
    ASS_SHR         reduce using rule 447 (arrayAccess -> name FLPAREN expression FRPAREN .)
    MULT            reduce using rule 447 (arrayAccess -> name FLPAREN expression FRPAREN .)
    SLASH           reduce using rule 447 (arrayAccess -> name FLPAREN expression FRPAREN .)
    PERCENT         reduce using rule 447 (arrayAccess -> name FLPAREN expression FRPAREN .)
    PLUS            reduce using rule 447 (arrayAccess -> name FLPAREN expression FRPAREN .)
    DASH            reduce using rule 447 (arrayAccess -> name FLPAREN expression FRPAREN .)
    OP_SHR          reduce using rule 447 (arrayAccess -> name FLPAREN expression FRPAREN .)
    OP_SHL          reduce using rule 447 (arrayAccess -> name FLPAREN expression FRPAREN .)
    OP_SHRR         reduce using rule 447 (arrayAccess -> name FLPAREN expression FRPAREN .)
    LESS            reduce using rule 447 (arrayAccess -> name FLPAREN expression FRPAREN .)
    OP_GE           reduce using rule 447 (arrayAccess -> name FLPAREN expression FRPAREN .)
    MORE            reduce using rule 447 (arrayAccess -> name FLPAREN expression FRPAREN .)
    OP_LE           reduce using rule 447 (arrayAccess -> name FLPAREN expression FRPAREN .)
    INSTANCEOF      reduce using rule 447 (arrayAccess -> name FLPAREN expression FRPAREN .)
    OP_EQ           reduce using rule 447 (arrayAccess -> name FLPAREN expression FRPAREN .)
    OP_NE           reduce using rule 447 (arrayAccess -> name FLPAREN expression FRPAREN .)
    AND             reduce using rule 447 (arrayAccess -> name FLPAREN expression FRPAREN .)
    CARET           reduce using rule 447 (arrayAccess -> name FLPAREN expression FRPAREN .)
    VERTICAL        reduce using rule 447 (arrayAccess -> name FLPAREN expression FRPAREN .)
    OP_LAND         reduce using rule 447 (arrayAccess -> name FLPAREN expression FRPAREN .)
    QUES            reduce using rule 447 (arrayAccess -> name FLPAREN expression FRPAREN .)
    OP_LOR          reduce using rule 447 (arrayAccess -> name FLPAREN expression FRPAREN .)
    RPAREN          reduce using rule 447 (arrayAccess -> name FLPAREN expression FRPAREN .)
    SEMI            reduce using rule 447 (arrayAccess -> name FLPAREN expression FRPAREN .)
    COLON           reduce using rule 447 (arrayAccess -> name FLPAREN expression FRPAREN .)
    COMMA           reduce using rule 447 (arrayAccess -> name FLPAREN expression FRPAREN .)
    FRPAREN         reduce using rule 447 (arrayAccess -> name FLPAREN expression FRPAREN .)
    BRPAREN         reduce using rule 447 (arrayAccess -> name FLPAREN expression FRPAREN .)


state 810

    (605) primaryNoNewArray -> name arrays DOT CLASS .

    FLPAREN         reduce using rule 605 (primaryNoNewArray -> name arrays DOT CLASS .)
    DOT             reduce using rule 605 (primaryNoNewArray -> name arrays DOT CLASS .)
    OP_INC          reduce using rule 605 (primaryNoNewArray -> name arrays DOT CLASS .)
    OP_DEC          reduce using rule 605 (primaryNoNewArray -> name arrays DOT CLASS .)
    MULT            reduce using rule 605 (primaryNoNewArray -> name arrays DOT CLASS .)
    SLASH           reduce using rule 605 (primaryNoNewArray -> name arrays DOT CLASS .)
    PERCENT         reduce using rule 605 (primaryNoNewArray -> name arrays DOT CLASS .)
    PLUS            reduce using rule 605 (primaryNoNewArray -> name arrays DOT CLASS .)
    DASH            reduce using rule 605 (primaryNoNewArray -> name arrays DOT CLASS .)
    OP_SHR          reduce using rule 605 (primaryNoNewArray -> name arrays DOT CLASS .)
    OP_SHL          reduce using rule 605 (primaryNoNewArray -> name arrays DOT CLASS .)
    OP_SHRR         reduce using rule 605 (primaryNoNewArray -> name arrays DOT CLASS .)
    LESS            reduce using rule 605 (primaryNoNewArray -> name arrays DOT CLASS .)
    OP_GE           reduce using rule 605 (primaryNoNewArray -> name arrays DOT CLASS .)
    MORE            reduce using rule 605 (primaryNoNewArray -> name arrays DOT CLASS .)
    OP_LE           reduce using rule 605 (primaryNoNewArray -> name arrays DOT CLASS .)
    INSTANCEOF      reduce using rule 605 (primaryNoNewArray -> name arrays DOT CLASS .)
    OP_EQ           reduce using rule 605 (primaryNoNewArray -> name arrays DOT CLASS .)
    OP_NE           reduce using rule 605 (primaryNoNewArray -> name arrays DOT CLASS .)
    AND             reduce using rule 605 (primaryNoNewArray -> name arrays DOT CLASS .)
    CARET           reduce using rule 605 (primaryNoNewArray -> name arrays DOT CLASS .)
    VERTICAL        reduce using rule 605 (primaryNoNewArray -> name arrays DOT CLASS .)
    OP_LAND         reduce using rule 605 (primaryNoNewArray -> name arrays DOT CLASS .)
    QUES            reduce using rule 605 (primaryNoNewArray -> name arrays DOT CLASS .)
    OP_LOR          reduce using rule 605 (primaryNoNewArray -> name arrays DOT CLASS .)
    SEMI            reduce using rule 605 (primaryNoNewArray -> name arrays DOT CLASS .)
    COLON           reduce using rule 605 (primaryNoNewArray -> name arrays DOT CLASS .)
    COMMA           reduce using rule 605 (primaryNoNewArray -> name arrays DOT CLASS .)
    RPAREN          reduce using rule 605 (primaryNoNewArray -> name arrays DOT CLASS .)
    FRPAREN         reduce using rule 605 (primaryNoNewArray -> name arrays DOT CLASS .)
    BRPAREN         reduce using rule 605 (primaryNoNewArray -> name arrays DOT CLASS .)
    ASS             reduce using rule 605 (primaryNoNewArray -> name arrays DOT CLASS .)
    ASS_ADD         reduce using rule 605 (primaryNoNewArray -> name arrays DOT CLASS .)
    ASS_SUB         reduce using rule 605 (primaryNoNewArray -> name arrays DOT CLASS .)
    ASS_MUL         reduce using rule 605 (primaryNoNewArray -> name arrays DOT CLASS .)
    ASS_DIV         reduce using rule 605 (primaryNoNewArray -> name arrays DOT CLASS .)
    ASS_AND         reduce using rule 605 (primaryNoNewArray -> name arrays DOT CLASS .)
    ASS_OR          reduce using rule 605 (primaryNoNewArray -> name arrays DOT CLASS .)
    ASS_XOR         reduce using rule 605 (primaryNoNewArray -> name arrays DOT CLASS .)
    ASS_MOD         reduce using rule 605 (primaryNoNewArray -> name arrays DOT CLASS .)
    ASS_SHL         reduce using rule 605 (primaryNoNewArray -> name arrays DOT CLASS .)
    ASS_SHRR        reduce using rule 605 (primaryNoNewArray -> name arrays DOT CLASS .)
    ASS_SHR         reduce using rule 605 (primaryNoNewArray -> name arrays DOT CLASS .)


state 811

    (479) conditionalExpressionNotName -> name QUES expression COLON . conditionalExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    equalityExpression             shift and go to state 546
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    arrayCreationWithArrayInitializer shift and go to state 227
    exclusiveOrExpression          shift and go to state 548
    conditionalAndExpression       shift and go to state 536
    shiftExpression                shift and go to state 552
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    postfixExpression              shift and go to state 394
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 936
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    primary                        shift and go to state 386
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    arrayAccess                    shift and go to state 234
    castExpression                 shift and go to state 396
    instanceOfExpression           shift and go to state 540
    name                           shift and go to state 393
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    classInstanceCreationExpression shift and go to state 198

state 812

    (441) classInstanceCreationExpression -> classInstanceCreationExpressionName NEW typeArguments classType . LPAREN argumentList_opt RPAREN classBody_opt

    LPAREN          shift and go to state 937


state 813

    (440) classInstanceCreationExpression -> classInstanceCreationExpressionName NEW classType LPAREN . argumentList_opt RPAREN classBody_opt
    (232) argumentList_opt -> . argumentList
    (233) argumentList_opt -> . empty
    (234) argumentList -> . expression
    (235) argumentList -> . argumentList COMMA expression
    (631) empty -> .
    (456) expression -> . assignmentExpression
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    RPAREN          reduce using rule 631 (empty -> .)
    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    argumentList                   shift and go to state 602
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    argumentList_opt               shift and go to state 938
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    unaryExpressionNotPlusMinus    shift and go to state 397
    shiftExpression                shift and go to state 552
    assignmentExpression           shift and go to state 543
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    fieldAccess                    shift and go to state 189
    integerLiteral                 shift and go to state 183
    empty                          shift and go to state 601
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 554
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    expression                     shift and go to state 600
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 814

    (342) methodInvocation -> primary DOT typeArguments Identifier . LPAREN argumentList_opt RPAREN

    LPAREN          shift and go to state 939


state 815

    (439) classInstanceCreationExpression -> primary DOT NEW classType . LPAREN argumentList_opt RPAREN classBody_opt

    LPAREN          shift and go to state 940


state 816

    (438) classInstanceCreationExpression -> primary DOT NEW typeArguments . classType LPAREN argumentList_opt RPAREN classBody_opt
    (52) classType -> . classOrInterfaceType
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    Identifier      shift and go to state 68

    qualifiedName                  shift and go to state 64
    name                           shift and go to state 123
    classOrInterfaceType           shift and go to state 129
    classOrInterface               shift and go to state 122
    simpleName                     shift and go to state 66
    genericType                    shift and go to state 127
    classType                      shift and go to state 941

state 817

    (344) methodInvocation -> primary DOT Identifier LPAREN . argumentList_opt RPAREN
    (232) argumentList_opt -> . argumentList
    (233) argumentList_opt -> . empty
    (234) argumentList -> . expression
    (235) argumentList -> . argumentList COMMA expression
    (631) empty -> .
    (456) expression -> . assignmentExpression
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    RPAREN          reduce using rule 631 (empty -> .)
    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    argumentList                   shift and go to state 602
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    argumentList_opt               shift and go to state 942
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    assignmentExpression           shift and go to state 543
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    fieldAccess                    shift and go to state 189
    integerLiteral                 shift and go to state 183
    empty                          shift and go to state 601
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 554
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    unaryExpressionNotPlusMinus    shift and go to state 397
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    expression                     shift and go to state 600
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 818

    (436) classInstanceCreationExpression -> NEW typeArguments classType LPAREN . argumentList_opt RPAREN classBody_opt
    (232) argumentList_opt -> . argumentList
    (233) argumentList_opt -> . empty
    (234) argumentList -> . expression
    (235) argumentList -> . argumentList COMMA expression
    (631) empty -> .
    (456) expression -> . assignmentExpression
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    RPAREN          reduce using rule 631 (empty -> .)
    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    argumentList                   shift and go to state 602
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    argumentList_opt               shift and go to state 943
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    unaryExpressionNotPlusMinus    shift and go to state 397
    shiftExpression                shift and go to state 552
    assignmentExpression           shift and go to state 543
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    fieldAccess                    shift and go to state 189
    integerLiteral                 shift and go to state 183
    empty                          shift and go to state 601
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 554
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    expression                     shift and go to state 600
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 819

    (451) arrayCreationWithArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer .

    FLPAREN         reduce using rule 451 (arrayCreationWithArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer .)
    DOT             reduce using rule 451 (arrayCreationWithArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer .)
    OP_INC          reduce using rule 451 (arrayCreationWithArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer .)
    OP_DEC          reduce using rule 451 (arrayCreationWithArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer .)
    MULT            reduce using rule 451 (arrayCreationWithArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer .)
    SLASH           reduce using rule 451 (arrayCreationWithArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer .)
    PERCENT         reduce using rule 451 (arrayCreationWithArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer .)
    PLUS            reduce using rule 451 (arrayCreationWithArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer .)
    DASH            reduce using rule 451 (arrayCreationWithArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer .)
    OP_SHR          reduce using rule 451 (arrayCreationWithArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer .)
    OP_SHL          reduce using rule 451 (arrayCreationWithArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer .)
    OP_SHRR         reduce using rule 451 (arrayCreationWithArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer .)
    LESS            reduce using rule 451 (arrayCreationWithArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer .)
    OP_GE           reduce using rule 451 (arrayCreationWithArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer .)
    MORE            reduce using rule 451 (arrayCreationWithArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer .)
    OP_LE           reduce using rule 451 (arrayCreationWithArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer .)
    INSTANCEOF      reduce using rule 451 (arrayCreationWithArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer .)
    OP_EQ           reduce using rule 451 (arrayCreationWithArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer .)
    OP_NE           reduce using rule 451 (arrayCreationWithArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer .)
    AND             reduce using rule 451 (arrayCreationWithArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer .)
    CARET           reduce using rule 451 (arrayCreationWithArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer .)
    VERTICAL        reduce using rule 451 (arrayCreationWithArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer .)
    OP_LAND         reduce using rule 451 (arrayCreationWithArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer .)
    QUES            reduce using rule 451 (arrayCreationWithArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer .)
    OP_LOR          reduce using rule 451 (arrayCreationWithArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer .)
    SEMI            reduce using rule 451 (arrayCreationWithArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer .)
    COLON           reduce using rule 451 (arrayCreationWithArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer .)
    COMMA           reduce using rule 451 (arrayCreationWithArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer .)
    RPAREN          reduce using rule 451 (arrayCreationWithArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer .)
    FRPAREN         reduce using rule 451 (arrayCreationWithArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer .)
    BRPAREN         reduce using rule 451 (arrayCreationWithArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer .)
    ASS             reduce using rule 451 (arrayCreationWithArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer .)
    ASS_ADD         reduce using rule 451 (arrayCreationWithArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer .)
    ASS_SUB         reduce using rule 451 (arrayCreationWithArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer .)
    ASS_MUL         reduce using rule 451 (arrayCreationWithArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer .)
    ASS_DIV         reduce using rule 451 (arrayCreationWithArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer .)
    ASS_AND         reduce using rule 451 (arrayCreationWithArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer .)
    ASS_OR          reduce using rule 451 (arrayCreationWithArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer .)
    ASS_XOR         reduce using rule 451 (arrayCreationWithArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer .)
    ASS_MOD         reduce using rule 451 (arrayCreationWithArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer .)
    ASS_SHL         reduce using rule 451 (arrayCreationWithArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer .)
    ASS_SHRR        reduce using rule 451 (arrayCreationWithArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer .)
    ASS_SHR         reduce using rule 451 (arrayCreationWithArrayInitializer -> NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer .)


state 820

    (453) arrayWithOrWithoutExprs -> arrayWithOrWithoutExprs arrayWithOrWithoutExpr .

    BLPAREN         reduce using rule 453 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExprs arrayWithOrWithoutExpr .)
    FLPAREN         reduce using rule 453 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExprs arrayWithOrWithoutExpr .)
    DOT             reduce using rule 453 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExprs arrayWithOrWithoutExpr .)
    MULT            reduce using rule 453 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExprs arrayWithOrWithoutExpr .)
    SLASH           reduce using rule 453 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExprs arrayWithOrWithoutExpr .)
    PERCENT         reduce using rule 453 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExprs arrayWithOrWithoutExpr .)
    PLUS            reduce using rule 453 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExprs arrayWithOrWithoutExpr .)
    DASH            reduce using rule 453 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExprs arrayWithOrWithoutExpr .)
    OP_SHR          reduce using rule 453 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExprs arrayWithOrWithoutExpr .)
    OP_SHL          reduce using rule 453 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExprs arrayWithOrWithoutExpr .)
    OP_SHRR         reduce using rule 453 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExprs arrayWithOrWithoutExpr .)
    LESS            reduce using rule 453 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExprs arrayWithOrWithoutExpr .)
    OP_GE           reduce using rule 453 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExprs arrayWithOrWithoutExpr .)
    MORE            reduce using rule 453 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExprs arrayWithOrWithoutExpr .)
    OP_LE           reduce using rule 453 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExprs arrayWithOrWithoutExpr .)
    INSTANCEOF      reduce using rule 453 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExprs arrayWithOrWithoutExpr .)
    OP_EQ           reduce using rule 453 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExprs arrayWithOrWithoutExpr .)
    OP_NE           reduce using rule 453 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExprs arrayWithOrWithoutExpr .)
    AND             reduce using rule 453 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExprs arrayWithOrWithoutExpr .)
    CARET           reduce using rule 453 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExprs arrayWithOrWithoutExpr .)
    VERTICAL        reduce using rule 453 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExprs arrayWithOrWithoutExpr .)
    OP_LAND         reduce using rule 453 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExprs arrayWithOrWithoutExpr .)
    QUES            reduce using rule 453 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExprs arrayWithOrWithoutExpr .)
    OP_LOR          reduce using rule 453 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExprs arrayWithOrWithoutExpr .)
    RPAREN          reduce using rule 453 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExprs arrayWithOrWithoutExpr .)
    OP_INC          reduce using rule 453 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExprs arrayWithOrWithoutExpr .)
    OP_DEC          reduce using rule 453 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExprs arrayWithOrWithoutExpr .)
    ASS             reduce using rule 453 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExprs arrayWithOrWithoutExpr .)
    ASS_ADD         reduce using rule 453 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExprs arrayWithOrWithoutExpr .)
    ASS_SUB         reduce using rule 453 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExprs arrayWithOrWithoutExpr .)
    ASS_MUL         reduce using rule 453 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExprs arrayWithOrWithoutExpr .)
    ASS_DIV         reduce using rule 453 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExprs arrayWithOrWithoutExpr .)
    ASS_AND         reduce using rule 453 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExprs arrayWithOrWithoutExpr .)
    ASS_OR          reduce using rule 453 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExprs arrayWithOrWithoutExpr .)
    ASS_XOR         reduce using rule 453 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExprs arrayWithOrWithoutExpr .)
    ASS_MOD         reduce using rule 453 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExprs arrayWithOrWithoutExpr .)
    ASS_SHL         reduce using rule 453 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExprs arrayWithOrWithoutExpr .)
    ASS_SHRR        reduce using rule 453 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExprs arrayWithOrWithoutExpr .)
    ASS_SHR         reduce using rule 453 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExprs arrayWithOrWithoutExpr .)
    COMMA           reduce using rule 453 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExprs arrayWithOrWithoutExpr .)
    BRPAREN         reduce using rule 453 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExprs arrayWithOrWithoutExpr .)
    SEMI            reduce using rule 453 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExprs arrayWithOrWithoutExpr .)
    COLON           reduce using rule 453 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExprs arrayWithOrWithoutExpr .)
    FRPAREN         reduce using rule 453 (arrayWithOrWithoutExprs -> arrayWithOrWithoutExprs arrayWithOrWithoutExpr .)


state 821

    (335) arrayInitializer -> BLPAREN . comma_opt BRPAREN
    (336) arrayInitializer -> BLPAREN . variableInitializers BRPAREN
    (337) arrayInitializer -> BLPAREN . variableInitializers COMMA BRPAREN
    (333) comma_opt -> . COMMA
    (334) comma_opt -> . empty
    (338) variableInitializers -> . variableInitializer
    (339) variableInitializers -> . variableInitializers COMMA variableInitializer
    (631) empty -> .
    (302) variableInitializer -> . expression
    (303) variableInitializer -> . arrayInitializer
    (456) expression -> . assignmentExpression
    (335) arrayInitializer -> . BLPAREN comma_opt BRPAREN
    (336) arrayInitializer -> . BLPAREN variableInitializers BRPAREN
    (337) arrayInitializer -> . BLPAREN variableInitializers COMMA BRPAREN
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    COMMA           shift and go to state 948
    BRPAREN         reduce using rule 631 (empty -> .)
    BLPAREN         shift and go to state 821
    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    arrayAccess                    shift and go to state 234
    primitiveType                  shift and go to state 219
    shiftExpression                shift and go to state 552
    arrayInitializer               shift and go to state 848
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    fieldAccess                    shift and go to state 189
    variableInitializers           shift and go to state 944
    integerLiteral                 shift and go to state 183
    empty                          shift and go to state 947
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 554
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    unaryExpressionNotPlusMinus    shift and go to state 397
    assignmentExpression           shift and go to state 543
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    variableInitializer            shift and go to state 945
    expression                     shift and go to state 847
    comma_opt                      shift and go to state 946
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 822

    (454) arrayWithOrWithoutExpr -> FLPAREN expression . FRPAREN

    FRPAREN         shift and go to state 949


state 823

    (455) arrayWithOrWithoutExpr -> FLPAREN FRPAREN .

    BLPAREN         reduce using rule 455 (arrayWithOrWithoutExpr -> FLPAREN FRPAREN .)
    FLPAREN         reduce using rule 455 (arrayWithOrWithoutExpr -> FLPAREN FRPAREN .)
    DOT             reduce using rule 455 (arrayWithOrWithoutExpr -> FLPAREN FRPAREN .)
    MULT            reduce using rule 455 (arrayWithOrWithoutExpr -> FLPAREN FRPAREN .)
    SLASH           reduce using rule 455 (arrayWithOrWithoutExpr -> FLPAREN FRPAREN .)
    PERCENT         reduce using rule 455 (arrayWithOrWithoutExpr -> FLPAREN FRPAREN .)
    PLUS            reduce using rule 455 (arrayWithOrWithoutExpr -> FLPAREN FRPAREN .)
    DASH            reduce using rule 455 (arrayWithOrWithoutExpr -> FLPAREN FRPAREN .)
    OP_SHR          reduce using rule 455 (arrayWithOrWithoutExpr -> FLPAREN FRPAREN .)
    OP_SHL          reduce using rule 455 (arrayWithOrWithoutExpr -> FLPAREN FRPAREN .)
    OP_SHRR         reduce using rule 455 (arrayWithOrWithoutExpr -> FLPAREN FRPAREN .)
    LESS            reduce using rule 455 (arrayWithOrWithoutExpr -> FLPAREN FRPAREN .)
    OP_GE           reduce using rule 455 (arrayWithOrWithoutExpr -> FLPAREN FRPAREN .)
    MORE            reduce using rule 455 (arrayWithOrWithoutExpr -> FLPAREN FRPAREN .)
    OP_LE           reduce using rule 455 (arrayWithOrWithoutExpr -> FLPAREN FRPAREN .)
    INSTANCEOF      reduce using rule 455 (arrayWithOrWithoutExpr -> FLPAREN FRPAREN .)
    OP_EQ           reduce using rule 455 (arrayWithOrWithoutExpr -> FLPAREN FRPAREN .)
    OP_NE           reduce using rule 455 (arrayWithOrWithoutExpr -> FLPAREN FRPAREN .)
    AND             reduce using rule 455 (arrayWithOrWithoutExpr -> FLPAREN FRPAREN .)
    CARET           reduce using rule 455 (arrayWithOrWithoutExpr -> FLPAREN FRPAREN .)
    VERTICAL        reduce using rule 455 (arrayWithOrWithoutExpr -> FLPAREN FRPAREN .)
    OP_LAND         reduce using rule 455 (arrayWithOrWithoutExpr -> FLPAREN FRPAREN .)
    QUES            reduce using rule 455 (arrayWithOrWithoutExpr -> FLPAREN FRPAREN .)
    OP_LOR          reduce using rule 455 (arrayWithOrWithoutExpr -> FLPAREN FRPAREN .)
    RPAREN          reduce using rule 455 (arrayWithOrWithoutExpr -> FLPAREN FRPAREN .)
    OP_INC          reduce using rule 455 (arrayWithOrWithoutExpr -> FLPAREN FRPAREN .)
    OP_DEC          reduce using rule 455 (arrayWithOrWithoutExpr -> FLPAREN FRPAREN .)
    ASS             reduce using rule 455 (arrayWithOrWithoutExpr -> FLPAREN FRPAREN .)
    ASS_ADD         reduce using rule 455 (arrayWithOrWithoutExpr -> FLPAREN FRPAREN .)
    ASS_SUB         reduce using rule 455 (arrayWithOrWithoutExpr -> FLPAREN FRPAREN .)
    ASS_MUL         reduce using rule 455 (arrayWithOrWithoutExpr -> FLPAREN FRPAREN .)
    ASS_DIV         reduce using rule 455 (arrayWithOrWithoutExpr -> FLPAREN FRPAREN .)
    ASS_AND         reduce using rule 455 (arrayWithOrWithoutExpr -> FLPAREN FRPAREN .)
    ASS_OR          reduce using rule 455 (arrayWithOrWithoutExpr -> FLPAREN FRPAREN .)
    ASS_XOR         reduce using rule 455 (arrayWithOrWithoutExpr -> FLPAREN FRPAREN .)
    ASS_MOD         reduce using rule 455 (arrayWithOrWithoutExpr -> FLPAREN FRPAREN .)
    ASS_SHL         reduce using rule 455 (arrayWithOrWithoutExpr -> FLPAREN FRPAREN .)
    ASS_SHRR        reduce using rule 455 (arrayWithOrWithoutExpr -> FLPAREN FRPAREN .)
    ASS_SHR         reduce using rule 455 (arrayWithOrWithoutExpr -> FLPAREN FRPAREN .)
    COMMA           reduce using rule 455 (arrayWithOrWithoutExpr -> FLPAREN FRPAREN .)
    BRPAREN         reduce using rule 455 (arrayWithOrWithoutExpr -> FLPAREN FRPAREN .)
    SEMI            reduce using rule 455 (arrayWithOrWithoutExpr -> FLPAREN FRPAREN .)
    COLON           reduce using rule 455 (arrayWithOrWithoutExpr -> FLPAREN FRPAREN .)
    FRPAREN         reduce using rule 455 (arrayWithOrWithoutExpr -> FLPAREN FRPAREN .)


state 824

    (437) classInstanceCreationExpression -> NEW classType LPAREN argumentList_opt . RPAREN classBody_opt

    RPAREN          shift and go to state 950


state 825

    (450) arrayCreationWithArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs arrayInitializer .

    FLPAREN         reduce using rule 450 (arrayCreationWithArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs arrayInitializer .)
    DOT             reduce using rule 450 (arrayCreationWithArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs arrayInitializer .)
    OP_INC          reduce using rule 450 (arrayCreationWithArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs arrayInitializer .)
    OP_DEC          reduce using rule 450 (arrayCreationWithArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs arrayInitializer .)
    MULT            reduce using rule 450 (arrayCreationWithArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs arrayInitializer .)
    SLASH           reduce using rule 450 (arrayCreationWithArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs arrayInitializer .)
    PERCENT         reduce using rule 450 (arrayCreationWithArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs arrayInitializer .)
    PLUS            reduce using rule 450 (arrayCreationWithArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs arrayInitializer .)
    DASH            reduce using rule 450 (arrayCreationWithArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs arrayInitializer .)
    OP_SHR          reduce using rule 450 (arrayCreationWithArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs arrayInitializer .)
    OP_SHL          reduce using rule 450 (arrayCreationWithArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs arrayInitializer .)
    OP_SHRR         reduce using rule 450 (arrayCreationWithArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs arrayInitializer .)
    LESS            reduce using rule 450 (arrayCreationWithArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs arrayInitializer .)
    OP_GE           reduce using rule 450 (arrayCreationWithArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs arrayInitializer .)
    MORE            reduce using rule 450 (arrayCreationWithArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs arrayInitializer .)
    OP_LE           reduce using rule 450 (arrayCreationWithArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs arrayInitializer .)
    INSTANCEOF      reduce using rule 450 (arrayCreationWithArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs arrayInitializer .)
    OP_EQ           reduce using rule 450 (arrayCreationWithArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs arrayInitializer .)
    OP_NE           reduce using rule 450 (arrayCreationWithArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs arrayInitializer .)
    AND             reduce using rule 450 (arrayCreationWithArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs arrayInitializer .)
    CARET           reduce using rule 450 (arrayCreationWithArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs arrayInitializer .)
    VERTICAL        reduce using rule 450 (arrayCreationWithArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs arrayInitializer .)
    OP_LAND         reduce using rule 450 (arrayCreationWithArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs arrayInitializer .)
    QUES            reduce using rule 450 (arrayCreationWithArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs arrayInitializer .)
    OP_LOR          reduce using rule 450 (arrayCreationWithArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs arrayInitializer .)
    SEMI            reduce using rule 450 (arrayCreationWithArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs arrayInitializer .)
    COLON           reduce using rule 450 (arrayCreationWithArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs arrayInitializer .)
    COMMA           reduce using rule 450 (arrayCreationWithArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs arrayInitializer .)
    RPAREN          reduce using rule 450 (arrayCreationWithArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs arrayInitializer .)
    FRPAREN         reduce using rule 450 (arrayCreationWithArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs arrayInitializer .)
    BRPAREN         reduce using rule 450 (arrayCreationWithArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs arrayInitializer .)
    ASS             reduce using rule 450 (arrayCreationWithArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs arrayInitializer .)
    ASS_ADD         reduce using rule 450 (arrayCreationWithArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs arrayInitializer .)
    ASS_SUB         reduce using rule 450 (arrayCreationWithArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs arrayInitializer .)
    ASS_MUL         reduce using rule 450 (arrayCreationWithArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs arrayInitializer .)
    ASS_DIV         reduce using rule 450 (arrayCreationWithArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs arrayInitializer .)
    ASS_AND         reduce using rule 450 (arrayCreationWithArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs arrayInitializer .)
    ASS_OR          reduce using rule 450 (arrayCreationWithArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs arrayInitializer .)
    ASS_XOR         reduce using rule 450 (arrayCreationWithArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs arrayInitializer .)
    ASS_MOD         reduce using rule 450 (arrayCreationWithArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs arrayInitializer .)
    ASS_SHL         reduce using rule 450 (arrayCreationWithArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs arrayInitializer .)
    ASS_SHRR        reduce using rule 450 (arrayCreationWithArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs arrayInitializer .)
    ASS_SHR         reduce using rule 450 (arrayCreationWithArrayInitializer -> NEW primitiveType arrayWithOrWithoutExprs arrayInitializer .)


state 826

    (606) primaryNoNewArray -> primitiveType arrays DOT CLASS .

    FLPAREN         reduce using rule 606 (primaryNoNewArray -> primitiveType arrays DOT CLASS .)
    DOT             reduce using rule 606 (primaryNoNewArray -> primitiveType arrays DOT CLASS .)
    OP_INC          reduce using rule 606 (primaryNoNewArray -> primitiveType arrays DOT CLASS .)
    OP_DEC          reduce using rule 606 (primaryNoNewArray -> primitiveType arrays DOT CLASS .)
    MULT            reduce using rule 606 (primaryNoNewArray -> primitiveType arrays DOT CLASS .)
    SLASH           reduce using rule 606 (primaryNoNewArray -> primitiveType arrays DOT CLASS .)
    PERCENT         reduce using rule 606 (primaryNoNewArray -> primitiveType arrays DOT CLASS .)
    PLUS            reduce using rule 606 (primaryNoNewArray -> primitiveType arrays DOT CLASS .)
    DASH            reduce using rule 606 (primaryNoNewArray -> primitiveType arrays DOT CLASS .)
    OP_SHR          reduce using rule 606 (primaryNoNewArray -> primitiveType arrays DOT CLASS .)
    OP_SHL          reduce using rule 606 (primaryNoNewArray -> primitiveType arrays DOT CLASS .)
    OP_SHRR         reduce using rule 606 (primaryNoNewArray -> primitiveType arrays DOT CLASS .)
    LESS            reduce using rule 606 (primaryNoNewArray -> primitiveType arrays DOT CLASS .)
    OP_GE           reduce using rule 606 (primaryNoNewArray -> primitiveType arrays DOT CLASS .)
    MORE            reduce using rule 606 (primaryNoNewArray -> primitiveType arrays DOT CLASS .)
    OP_LE           reduce using rule 606 (primaryNoNewArray -> primitiveType arrays DOT CLASS .)
    INSTANCEOF      reduce using rule 606 (primaryNoNewArray -> primitiveType arrays DOT CLASS .)
    OP_EQ           reduce using rule 606 (primaryNoNewArray -> primitiveType arrays DOT CLASS .)
    OP_NE           reduce using rule 606 (primaryNoNewArray -> primitiveType arrays DOT CLASS .)
    AND             reduce using rule 606 (primaryNoNewArray -> primitiveType arrays DOT CLASS .)
    CARET           reduce using rule 606 (primaryNoNewArray -> primitiveType arrays DOT CLASS .)
    VERTICAL        reduce using rule 606 (primaryNoNewArray -> primitiveType arrays DOT CLASS .)
    OP_LAND         reduce using rule 606 (primaryNoNewArray -> primitiveType arrays DOT CLASS .)
    QUES            reduce using rule 606 (primaryNoNewArray -> primitiveType arrays DOT CLASS .)
    OP_LOR          reduce using rule 606 (primaryNoNewArray -> primitiveType arrays DOT CLASS .)
    SEMI            reduce using rule 606 (primaryNoNewArray -> primitiveType arrays DOT CLASS .)
    COLON           reduce using rule 606 (primaryNoNewArray -> primitiveType arrays DOT CLASS .)
    COMMA           reduce using rule 606 (primaryNoNewArray -> primitiveType arrays DOT CLASS .)
    RPAREN          reduce using rule 606 (primaryNoNewArray -> primitiveType arrays DOT CLASS .)
    FRPAREN         reduce using rule 606 (primaryNoNewArray -> primitiveType arrays DOT CLASS .)
    BRPAREN         reduce using rule 606 (primaryNoNewArray -> primitiveType arrays DOT CLASS .)
    ASS             reduce using rule 606 (primaryNoNewArray -> primitiveType arrays DOT CLASS .)
    ASS_ADD         reduce using rule 606 (primaryNoNewArray -> primitiveType arrays DOT CLASS .)
    ASS_SUB         reduce using rule 606 (primaryNoNewArray -> primitiveType arrays DOT CLASS .)
    ASS_MUL         reduce using rule 606 (primaryNoNewArray -> primitiveType arrays DOT CLASS .)
    ASS_DIV         reduce using rule 606 (primaryNoNewArray -> primitiveType arrays DOT CLASS .)
    ASS_AND         reduce using rule 606 (primaryNoNewArray -> primitiveType arrays DOT CLASS .)
    ASS_OR          reduce using rule 606 (primaryNoNewArray -> primitiveType arrays DOT CLASS .)
    ASS_XOR         reduce using rule 606 (primaryNoNewArray -> primitiveType arrays DOT CLASS .)
    ASS_MOD         reduce using rule 606 (primaryNoNewArray -> primitiveType arrays DOT CLASS .)
    ASS_SHL         reduce using rule 606 (primaryNoNewArray -> primitiveType arrays DOT CLASS .)
    ASS_SHRR        reduce using rule 606 (primaryNoNewArray -> primitiveType arrays DOT CLASS .)
    ASS_SHR         reduce using rule 606 (primaryNoNewArray -> primitiveType arrays DOT CLASS .)


state 827

    (449) arrayAccess -> arrayCreationWithArrayInitializer FLPAREN expression FRPAREN .

    FLPAREN         reduce using rule 449 (arrayAccess -> arrayCreationWithArrayInitializer FLPAREN expression FRPAREN .)
    DOT             reduce using rule 449 (arrayAccess -> arrayCreationWithArrayInitializer FLPAREN expression FRPAREN .)
    OP_INC          reduce using rule 449 (arrayAccess -> arrayCreationWithArrayInitializer FLPAREN expression FRPAREN .)
    OP_DEC          reduce using rule 449 (arrayAccess -> arrayCreationWithArrayInitializer FLPAREN expression FRPAREN .)
    ASS             reduce using rule 449 (arrayAccess -> arrayCreationWithArrayInitializer FLPAREN expression FRPAREN .)
    ASS_ADD         reduce using rule 449 (arrayAccess -> arrayCreationWithArrayInitializer FLPAREN expression FRPAREN .)
    ASS_SUB         reduce using rule 449 (arrayAccess -> arrayCreationWithArrayInitializer FLPAREN expression FRPAREN .)
    ASS_MUL         reduce using rule 449 (arrayAccess -> arrayCreationWithArrayInitializer FLPAREN expression FRPAREN .)
    ASS_DIV         reduce using rule 449 (arrayAccess -> arrayCreationWithArrayInitializer FLPAREN expression FRPAREN .)
    ASS_AND         reduce using rule 449 (arrayAccess -> arrayCreationWithArrayInitializer FLPAREN expression FRPAREN .)
    ASS_OR          reduce using rule 449 (arrayAccess -> arrayCreationWithArrayInitializer FLPAREN expression FRPAREN .)
    ASS_XOR         reduce using rule 449 (arrayAccess -> arrayCreationWithArrayInitializer FLPAREN expression FRPAREN .)
    ASS_MOD         reduce using rule 449 (arrayAccess -> arrayCreationWithArrayInitializer FLPAREN expression FRPAREN .)
    ASS_SHL         reduce using rule 449 (arrayAccess -> arrayCreationWithArrayInitializer FLPAREN expression FRPAREN .)
    ASS_SHRR        reduce using rule 449 (arrayAccess -> arrayCreationWithArrayInitializer FLPAREN expression FRPAREN .)
    ASS_SHR         reduce using rule 449 (arrayAccess -> arrayCreationWithArrayInitializer FLPAREN expression FRPAREN .)
    MULT            reduce using rule 449 (arrayAccess -> arrayCreationWithArrayInitializer FLPAREN expression FRPAREN .)
    SLASH           reduce using rule 449 (arrayAccess -> arrayCreationWithArrayInitializer FLPAREN expression FRPAREN .)
    PERCENT         reduce using rule 449 (arrayAccess -> arrayCreationWithArrayInitializer FLPAREN expression FRPAREN .)
    PLUS            reduce using rule 449 (arrayAccess -> arrayCreationWithArrayInitializer FLPAREN expression FRPAREN .)
    DASH            reduce using rule 449 (arrayAccess -> arrayCreationWithArrayInitializer FLPAREN expression FRPAREN .)
    OP_SHR          reduce using rule 449 (arrayAccess -> arrayCreationWithArrayInitializer FLPAREN expression FRPAREN .)
    OP_SHL          reduce using rule 449 (arrayAccess -> arrayCreationWithArrayInitializer FLPAREN expression FRPAREN .)
    OP_SHRR         reduce using rule 449 (arrayAccess -> arrayCreationWithArrayInitializer FLPAREN expression FRPAREN .)
    LESS            reduce using rule 449 (arrayAccess -> arrayCreationWithArrayInitializer FLPAREN expression FRPAREN .)
    OP_GE           reduce using rule 449 (arrayAccess -> arrayCreationWithArrayInitializer FLPAREN expression FRPAREN .)
    MORE            reduce using rule 449 (arrayAccess -> arrayCreationWithArrayInitializer FLPAREN expression FRPAREN .)
    OP_LE           reduce using rule 449 (arrayAccess -> arrayCreationWithArrayInitializer FLPAREN expression FRPAREN .)
    INSTANCEOF      reduce using rule 449 (arrayAccess -> arrayCreationWithArrayInitializer FLPAREN expression FRPAREN .)
    OP_EQ           reduce using rule 449 (arrayAccess -> arrayCreationWithArrayInitializer FLPAREN expression FRPAREN .)
    OP_NE           reduce using rule 449 (arrayAccess -> arrayCreationWithArrayInitializer FLPAREN expression FRPAREN .)
    AND             reduce using rule 449 (arrayAccess -> arrayCreationWithArrayInitializer FLPAREN expression FRPAREN .)
    CARET           reduce using rule 449 (arrayAccess -> arrayCreationWithArrayInitializer FLPAREN expression FRPAREN .)
    VERTICAL        reduce using rule 449 (arrayAccess -> arrayCreationWithArrayInitializer FLPAREN expression FRPAREN .)
    OP_LAND         reduce using rule 449 (arrayAccess -> arrayCreationWithArrayInitializer FLPAREN expression FRPAREN .)
    QUES            reduce using rule 449 (arrayAccess -> arrayCreationWithArrayInitializer FLPAREN expression FRPAREN .)
    OP_LOR          reduce using rule 449 (arrayAccess -> arrayCreationWithArrayInitializer FLPAREN expression FRPAREN .)
    RPAREN          reduce using rule 449 (arrayAccess -> arrayCreationWithArrayInitializer FLPAREN expression FRPAREN .)
    SEMI            reduce using rule 449 (arrayAccess -> arrayCreationWithArrayInitializer FLPAREN expression FRPAREN .)
    COLON           reduce using rule 449 (arrayAccess -> arrayCreationWithArrayInitializer FLPAREN expression FRPAREN .)
    COMMA           reduce using rule 449 (arrayAccess -> arrayCreationWithArrayInitializer FLPAREN expression FRPAREN .)
    FRPAREN         reduce using rule 449 (arrayAccess -> arrayCreationWithArrayInitializer FLPAREN expression FRPAREN .)
    BRPAREN         reduce using rule 449 (arrayAccess -> arrayCreationWithArrayInitializer FLPAREN expression FRPAREN .)


state 828

    (478) conditionalExpressionNotName -> conditionalOrExpressionNotName QUES expression COLON . conditionalExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    equalityExpression             shift and go to state 546
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    arrayCreationWithArrayInitializer shift and go to state 227
    exclusiveOrExpression          shift and go to state 548
    conditionalAndExpression       shift and go to state 536
    shiftExpression                shift and go to state 552
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    postfixExpression              shift and go to state 394
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 951
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    primary                        shift and go to state 386
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    arrayAccess                    shift and go to state 234
    name                           shift and go to state 393
    instanceOfExpression           shift and go to state 540
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    classInstanceCreationExpression shift and go to state 198

state 829

    (48) classOrInterface -> name .
    (57) arrayType -> name . arrays
    (585) postfixExpression -> name .
    (32) qualifiedName -> name . DOT simpleName
    (602) primaryNoNewArray -> name . DOT THIS
    (603) primaryNoNewArray -> name . DOT SUPER
    (604) primaryNoNewArray -> name . DOT CLASS
    (605) primaryNoNewArray -> name . arrays DOT CLASS
    (340) methodInvocation -> name . LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> name . DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> name . FLPAREN expression FRPAREN
    (442) classInstanceCreationExpressionName -> name . DOT
    (59) arrays -> . array_loop
    (60) array_loop -> . array
    (61) array_loop -> . array_loop array
    (58) array -> . FLPAREN FRPAREN

  ! reduce/reduce conflict for LESS resolved using rule 48 (classOrInterface -> name .)
  ! reduce/reduce conflict for MORE resolved using rule 48 (classOrInterface -> name .)
    LESS            reduce using rule 48 (classOrInterface -> name .)
    MORE            reduce using rule 48 (classOrInterface -> name .)
    COMMA           reduce using rule 48 (classOrInterface -> name .)
    OP_INC          reduce using rule 585 (postfixExpression -> name .)
    OP_DEC          reduce using rule 585 (postfixExpression -> name .)
    MULT            reduce using rule 585 (postfixExpression -> name .)
    SLASH           reduce using rule 585 (postfixExpression -> name .)
    PERCENT         reduce using rule 585 (postfixExpression -> name .)
    PLUS            reduce using rule 585 (postfixExpression -> name .)
    DASH            reduce using rule 585 (postfixExpression -> name .)
    OP_SHR          reduce using rule 585 (postfixExpression -> name .)
    OP_SHL          reduce using rule 585 (postfixExpression -> name .)
    OP_SHRR         reduce using rule 585 (postfixExpression -> name .)
    OP_GE           reduce using rule 585 (postfixExpression -> name .)
    OP_LE           reduce using rule 585 (postfixExpression -> name .)
    INSTANCEOF      reduce using rule 585 (postfixExpression -> name .)
    OP_EQ           reduce using rule 585 (postfixExpression -> name .)
    OP_NE           reduce using rule 585 (postfixExpression -> name .)
    AND             reduce using rule 585 (postfixExpression -> name .)
    CARET           reduce using rule 585 (postfixExpression -> name .)
    VERTICAL        reduce using rule 585 (postfixExpression -> name .)
    OP_LAND         reduce using rule 585 (postfixExpression -> name .)
    QUES            reduce using rule 585 (postfixExpression -> name .)
    OP_LOR          reduce using rule 585 (postfixExpression -> name .)
    RPAREN          reduce using rule 585 (postfixExpression -> name .)
    DOT             shift and go to state 409
    LPAREN          shift and go to state 404
    FLPAREN         shift and go to state 411

  ! LESS            [ reduce using rule 585 (postfixExpression -> name .) ]
  ! MORE            [ reduce using rule 585 (postfixExpression -> name .) ]

    arrays                         shift and go to state 533
    array_loop                     shift and go to state 413
    array                          shift and go to state 407

state 830

    (56) arrayType -> primitiveType . arrays
    (606) primaryNoNewArray -> primitiveType . arrays DOT CLASS
    (607) primaryNoNewArray -> primitiveType . DOT CLASS
    (59) arrays -> . array_loop
    (60) array_loop -> . array
    (61) array_loop -> . array_loop array
    (58) array -> . FLPAREN FRPAREN

    DOT             shift and go to state 452
    FLPAREN         shift and go to state 451

    arrays                         shift and go to state 577
    array                          shift and go to state 407
    array_loop                     shift and go to state 413

state 831

    (611) castExpression -> LPAREN name RPAREN unaryExpressionNotPlusMinus .

    MULT            reduce using rule 611 (castExpression -> LPAREN name RPAREN unaryExpressionNotPlusMinus .)
    SLASH           reduce using rule 611 (castExpression -> LPAREN name RPAREN unaryExpressionNotPlusMinus .)
    PERCENT         reduce using rule 611 (castExpression -> LPAREN name RPAREN unaryExpressionNotPlusMinus .)
    PLUS            reduce using rule 611 (castExpression -> LPAREN name RPAREN unaryExpressionNotPlusMinus .)
    DASH            reduce using rule 611 (castExpression -> LPAREN name RPAREN unaryExpressionNotPlusMinus .)
    OP_SHR          reduce using rule 611 (castExpression -> LPAREN name RPAREN unaryExpressionNotPlusMinus .)
    OP_SHL          reduce using rule 611 (castExpression -> LPAREN name RPAREN unaryExpressionNotPlusMinus .)
    OP_SHRR         reduce using rule 611 (castExpression -> LPAREN name RPAREN unaryExpressionNotPlusMinus .)
    LESS            reduce using rule 611 (castExpression -> LPAREN name RPAREN unaryExpressionNotPlusMinus .)
    OP_GE           reduce using rule 611 (castExpression -> LPAREN name RPAREN unaryExpressionNotPlusMinus .)
    MORE            reduce using rule 611 (castExpression -> LPAREN name RPAREN unaryExpressionNotPlusMinus .)
    OP_LE           reduce using rule 611 (castExpression -> LPAREN name RPAREN unaryExpressionNotPlusMinus .)
    INSTANCEOF      reduce using rule 611 (castExpression -> LPAREN name RPAREN unaryExpressionNotPlusMinus .)
    OP_EQ           reduce using rule 611 (castExpression -> LPAREN name RPAREN unaryExpressionNotPlusMinus .)
    OP_NE           reduce using rule 611 (castExpression -> LPAREN name RPAREN unaryExpressionNotPlusMinus .)
    AND             reduce using rule 611 (castExpression -> LPAREN name RPAREN unaryExpressionNotPlusMinus .)
    CARET           reduce using rule 611 (castExpression -> LPAREN name RPAREN unaryExpressionNotPlusMinus .)
    VERTICAL        reduce using rule 611 (castExpression -> LPAREN name RPAREN unaryExpressionNotPlusMinus .)
    OP_LAND         reduce using rule 611 (castExpression -> LPAREN name RPAREN unaryExpressionNotPlusMinus .)
    QUES            reduce using rule 611 (castExpression -> LPAREN name RPAREN unaryExpressionNotPlusMinus .)
    OP_LOR          reduce using rule 611 (castExpression -> LPAREN name RPAREN unaryExpressionNotPlusMinus .)
    RPAREN          reduce using rule 611 (castExpression -> LPAREN name RPAREN unaryExpressionNotPlusMinus .)
    SEMI            reduce using rule 611 (castExpression -> LPAREN name RPAREN unaryExpressionNotPlusMinus .)
    COMMA           reduce using rule 611 (castExpression -> LPAREN name RPAREN unaryExpressionNotPlusMinus .)
    BRPAREN         reduce using rule 611 (castExpression -> LPAREN name RPAREN unaryExpressionNotPlusMinus .)
    COLON           reduce using rule 611 (castExpression -> LPAREN name RPAREN unaryExpressionNotPlusMinus .)
    FRPAREN         reduce using rule 611 (castExpression -> LPAREN name RPAREN unaryExpressionNotPlusMinus .)


state 832

    (610) castExpression -> LPAREN name typeArguments DOT . classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    Identifier      shift and go to state 68

    qualifiedName                  shift and go to state 64
    name                           shift and go to state 123
    classOrInterfaceType           shift and go to state 952
    classOrInterface               shift and go to state 122
    simpleName                     shift and go to state 66
    genericType                    shift and go to state 127

state 833

    (609) castExpression -> LPAREN name typeArguments arrays_opt . RPAREN unaryExpressionNotPlusMinus

    RPAREN          shift and go to state 953


state 834

    (612) castExpression -> LPAREN name arrays RPAREN . unaryExpressionNotPlusMinus
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    primary                        shift and go to state 386
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    classInstanceCreationExpressionName shift and go to state 187
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    name                           shift and go to state 393
    postfixExpression              shift and go to state 394
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 954
    primitiveType                  shift and go to state 219
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 835

    (608) castExpression -> LPAREN primitiveType arrays_opt RPAREN . unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    primary                        shift and go to state 386
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    classInstanceCreationExpressionName shift and go to state 187
    unaryExpression                shift and go to state 955
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    name                           shift and go to state 393
    postfixExpression              shift and go to state 394
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 836

    (600) primaryNoNewArray -> LPAREN name RPAREN .
    (611) castExpression -> LPAREN name RPAREN . unaryExpressionNotPlusMinus
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    FLPAREN         reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    DOT             reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    OP_INC          reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    OP_DEC          reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    ASS             reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    ASS_ADD         reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    ASS_SUB         reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    ASS_MUL         reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    ASS_DIV         reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    ASS_AND         reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    ASS_OR          reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    ASS_XOR         reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    ASS_MOD         reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    ASS_SHL         reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    ASS_SHRR        reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    ASS_SHR         reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    MULT            reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    SLASH           reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    PERCENT         reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    PLUS            reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    DASH            reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    OP_SHR          reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    OP_SHL          reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    OP_SHRR         reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    LESS            reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    OP_GE           reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    MORE            reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    OP_LE           reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    INSTANCEOF      reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    OP_EQ           reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    OP_NE           reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    AND             reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    CARET           reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    VERTICAL        reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    OP_LAND         reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    QUES            reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    OP_LOR          reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    COMMA           reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    RPAREN          reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    COLON           reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    FRPAREN         reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    SEMI            reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    BRPAREN         reduce using rule 600 (primaryNoNewArray -> LPAREN name RPAREN .)
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    primary                        shift and go to state 386
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    classInstanceCreationExpressionName shift and go to state 187
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    castExpression                 shift and go to state 396
    postfixExpression              shift and go to state 394
    name                           shift and go to state 393
    unaryExpressionNotPlusMinus    shift and go to state 831
    primitiveType                  shift and go to state 219
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 837

    (269) memberValues -> memberValues COMMA memberValue .

    COMMA           reduce using rule 269 (memberValues -> memberValues COMMA memberValue .)
    BRPAREN         reduce using rule 269 (memberValues -> memberValues COMMA memberValue .)


state 838

    (264) memberValueArrayInitializer -> BLPAREN memberValues COMMA BRPAREN .

    COMMA           reduce using rule 264 (memberValueArrayInitializer -> BLPAREN memberValues COMMA BRPAREN .)
    BRPAREN         reduce using rule 264 (memberValueArrayInitializer -> BLPAREN memberValues COMMA BRPAREN .)
    RPAREN          reduce using rule 264 (memberValueArrayInitializer -> BLPAREN memberValues COMMA BRPAREN .)
    SEMI            reduce using rule 264 (memberValueArrayInitializer -> BLPAREN memberValues COMMA BRPAREN .)


state 839

    (343) methodInvocation -> SUPER DOT typeArguments Identifier . LPAREN argumentList_opt RPAREN

    LPAREN          shift and go to state 956


state 840

    (345) methodInvocation -> SUPER DOT Identifier LPAREN . argumentList_opt RPAREN
    (232) argumentList_opt -> . argumentList
    (233) argumentList_opt -> . empty
    (234) argumentList -> . expression
    (235) argumentList -> . argumentList COMMA expression
    (631) empty -> .
    (456) expression -> . assignmentExpression
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    RPAREN          reduce using rule 631 (empty -> .)
    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    argumentList                   shift and go to state 602
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    argumentList_opt               shift and go to state 957
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    assignmentExpression           shift and go to state 543
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    fieldAccess                    shift and go to state 189
    integerLiteral                 shift and go to state 183
    empty                          shift and go to state 601
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 554
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    unaryExpressionNotPlusMinus    shift and go to state 397
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    expression                     shift and go to state 600
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 841

    (170) formalParameter -> modifiers_opt type OP_ARRAY variableDeclaratorId .

    COMMA           reduce using rule 170 (formalParameter -> modifiers_opt type OP_ARRAY variableDeclaratorId .)
    RPAREN          reduce using rule 170 (formalParameter -> modifiers_opt type OP_ARRAY variableDeclaratorId .)


state 842

    (185) methodHeader -> methodName formalParameterList_opt RPAREN methodHeadExtendedDims methodHeadThrowList_opt .

    SEMI            reduce using rule 185 (methodHeader -> methodName formalParameterList_opt RPAREN methodHeadExtendedDims methodHeadThrowList_opt .)
    BLPAREN         reduce using rule 185 (methodHeader -> methodName formalParameterList_opt RPAREN methodHeadExtendedDims methodHeadThrowList_opt .)


state 843

    (186) methodName -> modifiers_opt typeParameters type Identifier LPAREN .

    PUBLIC          reduce using rule 186 (methodName -> modifiers_opt typeParameters type Identifier LPAREN .)
    PROTECTED       reduce using rule 186 (methodName -> modifiers_opt typeParameters type Identifier LPAREN .)
    PRIVATE         reduce using rule 186 (methodName -> modifiers_opt typeParameters type Identifier LPAREN .)
    STATIC          reduce using rule 186 (methodName -> modifiers_opt typeParameters type Identifier LPAREN .)
    ABSTRACT        reduce using rule 186 (methodName -> modifiers_opt typeParameters type Identifier LPAREN .)
    FINAL           reduce using rule 186 (methodName -> modifiers_opt typeParameters type Identifier LPAREN .)
    NATIVE          reduce using rule 186 (methodName -> modifiers_opt typeParameters type Identifier LPAREN .)
    SYNCHRONIZED    reduce using rule 186 (methodName -> modifiers_opt typeParameters type Identifier LPAREN .)
    TRANSIENT       reduce using rule 186 (methodName -> modifiers_opt typeParameters type Identifier LPAREN .)
    VOLATILE        reduce using rule 186 (methodName -> modifiers_opt typeParameters type Identifier LPAREN .)
    STRICTFP        reduce using rule 186 (methodName -> modifiers_opt typeParameters type Identifier LPAREN .)
    AT              reduce using rule 186 (methodName -> modifiers_opt typeParameters type Identifier LPAREN .)
    RPAREN          reduce using rule 186 (methodName -> modifiers_opt typeParameters type Identifier LPAREN .)
    BOOLEAN         reduce using rule 186 (methodName -> modifiers_opt typeParameters type Identifier LPAREN .)
    VOID            reduce using rule 186 (methodName -> modifiers_opt typeParameters type Identifier LPAREN .)
    BYTE            reduce using rule 186 (methodName -> modifiers_opt typeParameters type Identifier LPAREN .)
    SHORT           reduce using rule 186 (methodName -> modifiers_opt typeParameters type Identifier LPAREN .)
    INT             reduce using rule 186 (methodName -> modifiers_opt typeParameters type Identifier LPAREN .)
    LONG            reduce using rule 186 (methodName -> modifiers_opt typeParameters type Identifier LPAREN .)
    CHAR            reduce using rule 186 (methodName -> modifiers_opt typeParameters type Identifier LPAREN .)
    FLOAT           reduce using rule 186 (methodName -> modifiers_opt typeParameters type Identifier LPAREN .)
    DOUBLE          reduce using rule 186 (methodName -> modifiers_opt typeParameters type Identifier LPAREN .)
    Identifier      reduce using rule 186 (methodName -> modifiers_opt typeParameters type Identifier LPAREN .)


state 844

    (55) arrayType -> genericType DOT name arrays .

    VERTICAL        reduce using rule 55 (arrayType -> genericType DOT name arrays .)
    Identifier      reduce using rule 55 (arrayType -> genericType DOT name arrays .)
    OP_SHR          reduce using rule 55 (arrayType -> genericType DOT name arrays .)
    MORE            reduce using rule 55 (arrayType -> genericType DOT name arrays .)
    COMMA           reduce using rule 55 (arrayType -> genericType DOT name arrays .)
    OP_SHRR         reduce using rule 55 (arrayType -> genericType DOT name arrays .)
    INSTANCEOF      reduce using rule 55 (arrayType -> genericType DOT name arrays .)
    OP_EQ           reduce using rule 55 (arrayType -> genericType DOT name arrays .)
    OP_NE           reduce using rule 55 (arrayType -> genericType DOT name arrays .)
    AND             reduce using rule 55 (arrayType -> genericType DOT name arrays .)
    CARET           reduce using rule 55 (arrayType -> genericType DOT name arrays .)
    OP_LAND         reduce using rule 55 (arrayType -> genericType DOT name arrays .)
    QUES            reduce using rule 55 (arrayType -> genericType DOT name arrays .)
    OP_LOR          reduce using rule 55 (arrayType -> genericType DOT name arrays .)
    SEMI            reduce using rule 55 (arrayType -> genericType DOT name arrays .)
    COLON           reduce using rule 55 (arrayType -> genericType DOT name arrays .)
    RPAREN          reduce using rule 55 (arrayType -> genericType DOT name arrays .)
    FRPAREN         reduce using rule 55 (arrayType -> genericType DOT name arrays .)
    BRPAREN         reduce using rule 55 (arrayType -> genericType DOT name arrays .)
    OP_ARRAY        reduce using rule 55 (arrayType -> genericType DOT name arrays .)


state 845

    (298) variableDeclarators -> variableDeclarators COMMA variableDeclarator .

    COMMA           reduce using rule 298 (variableDeclarators -> variableDeclarators COMMA variableDeclarator .)
    SEMI            reduce using rule 298 (variableDeclarators -> variableDeclarators COMMA variableDeclarator .)


state 846

    (300) variableDeclarator -> variableDeclaratorId ASS variableInitializer .

    SEMI            reduce using rule 300 (variableDeclarator -> variableDeclaratorId ASS variableInitializer .)
    COMMA           reduce using rule 300 (variableDeclarator -> variableDeclaratorId ASS variableInitializer .)


state 847

    (302) variableInitializer -> expression .

    SEMI            reduce using rule 302 (variableInitializer -> expression .)
    COMMA           reduce using rule 302 (variableInitializer -> expression .)
    RPAREN          reduce using rule 302 (variableInitializer -> expression .)
    BRPAREN         reduce using rule 302 (variableInitializer -> expression .)


state 848

    (303) variableInitializer -> arrayInitializer .

    SEMI            reduce using rule 303 (variableInitializer -> arrayInitializer .)
    COMMA           reduce using rule 303 (variableInitializer -> arrayInitializer .)
    RPAREN          reduce using rule 303 (variableInitializer -> arrayInitializer .)
    BRPAREN         reduce using rule 303 (variableInitializer -> arrayInitializer .)


state 849

    (191) methodHeadThrowList -> THROWS classTypeList .
    (193) classTypeList -> classTypeList . COMMA classType

    BLPAREN         reduce using rule 191 (methodHeadThrowList -> THROWS classTypeList .)
    SEMI            reduce using rule 191 (methodHeadThrowList -> THROWS classTypeList .)
    COMMA           shift and go to state 958


state 850

    (192) classTypeList -> classType .

    COMMA           reduce using rule 192 (classTypeList -> classType .)
    BLPAREN         reduce using rule 192 (classTypeList -> classType .)
    SEMI            reduce using rule 192 (classTypeList -> classType .)


state 851

    (49) classOrInterface -> genericType DOT name .
    (55) arrayType -> genericType DOT name . arrays
    (32) qualifiedName -> name . DOT simpleName
    (59) arrays -> . array_loop
    (60) array_loop -> . array
    (61) array_loop -> . array_loop array
    (58) array -> . FLPAREN FRPAREN

    LESS            reduce using rule 49 (classOrInterface -> genericType DOT name .)
    OP_SHR          reduce using rule 49 (classOrInterface -> genericType DOT name .)
    MORE            reduce using rule 49 (classOrInterface -> genericType DOT name .)
    COMMA           reduce using rule 49 (classOrInterface -> genericType DOT name .)
    OP_SHRR         reduce using rule 49 (classOrInterface -> genericType DOT name .)
    AND             reduce using rule 49 (classOrInterface -> genericType DOT name .)
    DOT             shift and go to state 145
    FLPAREN         shift and go to state 451

    arrays                         shift and go to state 844
    array_loop                     shift and go to state 413
    array                          shift and go to state 407

state 852

    (83) typeArgument -> referenceType .
    (91) referenceType1 -> referenceType . MORE

    COMMA           reduce using rule 83 (typeArgument -> referenceType .)
    MORE            shift and go to state 716


state 853

    (86) typeArgumentList -> typeArgumentList COMMA typeArgument .

    COMMA           reduce using rule 86 (typeArgumentList -> typeArgumentList COMMA typeArgument .)


state 854

    (88) typeArgumentList1 -> typeArgumentList COMMA typeArgument1 .

    DOT             reduce using rule 88 (typeArgumentList1 -> typeArgumentList COMMA typeArgument1 .)
    FLPAREN         reduce using rule 88 (typeArgumentList1 -> typeArgumentList COMMA typeArgument1 .)
    RPAREN          reduce using rule 88 (typeArgumentList1 -> typeArgumentList COMMA typeArgument1 .)
    MORE            reduce using rule 88 (typeArgumentList1 -> typeArgumentList COMMA typeArgument1 .)
    COMMA           reduce using rule 88 (typeArgumentList1 -> typeArgumentList COMMA typeArgument1 .)
    AND             reduce using rule 88 (typeArgumentList1 -> typeArgumentList COMMA typeArgument1 .)
    BLPAREN         reduce using rule 88 (typeArgumentList1 -> typeArgumentList COMMA typeArgument1 .)
    IMPLEMENTS      reduce using rule 88 (typeArgumentList1 -> typeArgumentList COMMA typeArgument1 .)
    Identifier      reduce using rule 88 (typeArgumentList1 -> typeArgumentList COMMA typeArgument1 .)
    LPAREN          reduce using rule 88 (typeArgumentList1 -> typeArgumentList COMMA typeArgument1 .)
    OP_ARRAY        reduce using rule 88 (typeArgumentList1 -> typeArgumentList COMMA typeArgument1 .)
    INSTANCEOF      reduce using rule 88 (typeArgumentList1 -> typeArgumentList COMMA typeArgument1 .)
    OP_EQ           reduce using rule 88 (typeArgumentList1 -> typeArgumentList COMMA typeArgument1 .)
    OP_NE           reduce using rule 88 (typeArgumentList1 -> typeArgumentList COMMA typeArgument1 .)
    CARET           reduce using rule 88 (typeArgumentList1 -> typeArgumentList COMMA typeArgument1 .)
    VERTICAL        reduce using rule 88 (typeArgumentList1 -> typeArgumentList COMMA typeArgument1 .)
    OP_LAND         reduce using rule 88 (typeArgumentList1 -> typeArgumentList COMMA typeArgument1 .)
    QUES            reduce using rule 88 (typeArgumentList1 -> typeArgumentList COMMA typeArgument1 .)
    OP_LOR          reduce using rule 88 (typeArgumentList1 -> typeArgumentList COMMA typeArgument1 .)
    BRPAREN         reduce using rule 88 (typeArgumentList1 -> typeArgumentList COMMA typeArgument1 .)
    SEMI            reduce using rule 88 (typeArgumentList1 -> typeArgumentList COMMA typeArgument1 .)
    COLON           reduce using rule 88 (typeArgumentList1 -> typeArgumentList COMMA typeArgument1 .)
    FRPAREN         reduce using rule 88 (typeArgumentList1 -> typeArgumentList COMMA typeArgument1 .)
    OP_SHR          reduce using rule 88 (typeArgumentList1 -> typeArgumentList COMMA typeArgument1 .)
    OP_SHRR         reduce using rule 88 (typeArgumentList1 -> typeArgumentList COMMA typeArgument1 .)
    SUPER           reduce using rule 88 (typeArgumentList1 -> typeArgumentList COMMA typeArgument1 .)
    THIS            reduce using rule 88 (typeArgumentList1 -> typeArgumentList COMMA typeArgument1 .)


state 855

    (97) referenceType2 -> referenceType . OP_SHR
    (83) typeArgument -> referenceType .
    (91) referenceType1 -> referenceType . MORE

    OP_SHR          shift and go to state 959
    COMMA           reduce using rule 83 (typeArgument -> referenceType .)
    MORE            shift and go to state 716


state 856

    (96) typeArgument2 -> wildcard2 .

    SUPER           reduce using rule 96 (typeArgument2 -> wildcard2 .)
    THIS            reduce using rule 96 (typeArgument2 -> wildcard2 .)
    Identifier      reduce using rule 96 (typeArgument2 -> wildcard2 .)
    DOT             reduce using rule 96 (typeArgument2 -> wildcard2 .)
    COMMA           reduce using rule 96 (typeArgument2 -> wildcard2 .)
    BLPAREN         reduce using rule 96 (typeArgument2 -> wildcard2 .)
    IMPLEMENTS      reduce using rule 96 (typeArgument2 -> wildcard2 .)
    FLPAREN         reduce using rule 96 (typeArgument2 -> wildcard2 .)
    LPAREN          reduce using rule 96 (typeArgument2 -> wildcard2 .)
    OP_ARRAY        reduce using rule 96 (typeArgument2 -> wildcard2 .)
    INSTANCEOF      reduce using rule 96 (typeArgument2 -> wildcard2 .)
    OP_EQ           reduce using rule 96 (typeArgument2 -> wildcard2 .)
    OP_NE           reduce using rule 96 (typeArgument2 -> wildcard2 .)
    AND             reduce using rule 96 (typeArgument2 -> wildcard2 .)
    CARET           reduce using rule 96 (typeArgument2 -> wildcard2 .)
    VERTICAL        reduce using rule 96 (typeArgument2 -> wildcard2 .)
    OP_LAND         reduce using rule 96 (typeArgument2 -> wildcard2 .)
    QUES            reduce using rule 96 (typeArgument2 -> wildcard2 .)
    OP_LOR          reduce using rule 96 (typeArgument2 -> wildcard2 .)
    RPAREN          reduce using rule 96 (typeArgument2 -> wildcard2 .)
    BRPAREN         reduce using rule 96 (typeArgument2 -> wildcard2 .)
    SEMI            reduce using rule 96 (typeArgument2 -> wildcard2 .)
    COLON           reduce using rule 96 (typeArgument2 -> wildcard2 .)
    FRPAREN         reduce using rule 96 (typeArgument2 -> wildcard2 .)
    EXTENDS         reduce using rule 96 (typeArgument2 -> wildcard2 .)
    BOOLEAN         reduce using rule 96 (typeArgument2 -> wildcard2 .)
    VOID            reduce using rule 96 (typeArgument2 -> wildcard2 .)
    BYTE            reduce using rule 96 (typeArgument2 -> wildcard2 .)
    SHORT           reduce using rule 96 (typeArgument2 -> wildcard2 .)
    INT             reduce using rule 96 (typeArgument2 -> wildcard2 .)
    LONG            reduce using rule 96 (typeArgument2 -> wildcard2 .)
    CHAR            reduce using rule 96 (typeArgument2 -> wildcard2 .)
    FLOAT           reduce using rule 96 (typeArgument2 -> wildcard2 .)
    DOUBLE          reduce using rule 96 (typeArgument2 -> wildcard2 .)
    MORE            reduce using rule 96 (typeArgument2 -> wildcard2 .)
    OP_SHR          reduce using rule 96 (typeArgument2 -> wildcard2 .)
    OP_SHRR         reduce using rule 96 (typeArgument2 -> wildcard2 .)


state 857

    (92) referenceType1 -> classOrInterface LESS typeArgumentList2 .

    EXTENDS         reduce using rule 92 (referenceType1 -> classOrInterface LESS typeArgumentList2 .)
    IMPLEMENTS      reduce using rule 92 (referenceType1 -> classOrInterface LESS typeArgumentList2 .)
    BLPAREN         reduce using rule 92 (referenceType1 -> classOrInterface LESS typeArgumentList2 .)
    Identifier      reduce using rule 92 (referenceType1 -> classOrInterface LESS typeArgumentList2 .)
    BOOLEAN         reduce using rule 92 (referenceType1 -> classOrInterface LESS typeArgumentList2 .)
    VOID            reduce using rule 92 (referenceType1 -> classOrInterface LESS typeArgumentList2 .)
    BYTE            reduce using rule 92 (referenceType1 -> classOrInterface LESS typeArgumentList2 .)
    SHORT           reduce using rule 92 (referenceType1 -> classOrInterface LESS typeArgumentList2 .)
    INT             reduce using rule 92 (referenceType1 -> classOrInterface LESS typeArgumentList2 .)
    LONG            reduce using rule 92 (referenceType1 -> classOrInterface LESS typeArgumentList2 .)
    CHAR            reduce using rule 92 (referenceType1 -> classOrInterface LESS typeArgumentList2 .)
    FLOAT           reduce using rule 92 (referenceType1 -> classOrInterface LESS typeArgumentList2 .)
    DOUBLE          reduce using rule 92 (referenceType1 -> classOrInterface LESS typeArgumentList2 .)
    SUPER           reduce using rule 92 (referenceType1 -> classOrInterface LESS typeArgumentList2 .)
    THIS            reduce using rule 92 (referenceType1 -> classOrInterface LESS typeArgumentList2 .)
    DOT             reduce using rule 92 (referenceType1 -> classOrInterface LESS typeArgumentList2 .)
    COMMA           reduce using rule 92 (referenceType1 -> classOrInterface LESS typeArgumentList2 .)
    FLPAREN         reduce using rule 92 (referenceType1 -> classOrInterface LESS typeArgumentList2 .)
    LPAREN          reduce using rule 92 (referenceType1 -> classOrInterface LESS typeArgumentList2 .)
    OP_ARRAY        reduce using rule 92 (referenceType1 -> classOrInterface LESS typeArgumentList2 .)
    INSTANCEOF      reduce using rule 92 (referenceType1 -> classOrInterface LESS typeArgumentList2 .)
    OP_EQ           reduce using rule 92 (referenceType1 -> classOrInterface LESS typeArgumentList2 .)
    OP_NE           reduce using rule 92 (referenceType1 -> classOrInterface LESS typeArgumentList2 .)
    AND             reduce using rule 92 (referenceType1 -> classOrInterface LESS typeArgumentList2 .)
    CARET           reduce using rule 92 (referenceType1 -> classOrInterface LESS typeArgumentList2 .)
    VERTICAL        reduce using rule 92 (referenceType1 -> classOrInterface LESS typeArgumentList2 .)
    OP_LAND         reduce using rule 92 (referenceType1 -> classOrInterface LESS typeArgumentList2 .)
    QUES            reduce using rule 92 (referenceType1 -> classOrInterface LESS typeArgumentList2 .)
    OP_LOR          reduce using rule 92 (referenceType1 -> classOrInterface LESS typeArgumentList2 .)
    RPAREN          reduce using rule 92 (referenceType1 -> classOrInterface LESS typeArgumentList2 .)
    BRPAREN         reduce using rule 92 (referenceType1 -> classOrInterface LESS typeArgumentList2 .)
    SEMI            reduce using rule 92 (referenceType1 -> classOrInterface LESS typeArgumentList2 .)
    COLON           reduce using rule 92 (referenceType1 -> classOrInterface LESS typeArgumentList2 .)
    FRPAREN         reduce using rule 92 (referenceType1 -> classOrInterface LESS typeArgumentList2 .)
    MORE            reduce using rule 92 (referenceType1 -> classOrInterface LESS typeArgumentList2 .)
    OP_SHR          reduce using rule 92 (referenceType1 -> classOrInterface LESS typeArgumentList2 .)
    OP_SHRR         reduce using rule 92 (referenceType1 -> classOrInterface LESS typeArgumentList2 .)


state 858

    (95) typeArgument2 -> referenceType2 .

    SUPER           reduce using rule 95 (typeArgument2 -> referenceType2 .)
    THIS            reduce using rule 95 (typeArgument2 -> referenceType2 .)
    Identifier      reduce using rule 95 (typeArgument2 -> referenceType2 .)
    DOT             reduce using rule 95 (typeArgument2 -> referenceType2 .)
    COMMA           reduce using rule 95 (typeArgument2 -> referenceType2 .)
    BLPAREN         reduce using rule 95 (typeArgument2 -> referenceType2 .)
    IMPLEMENTS      reduce using rule 95 (typeArgument2 -> referenceType2 .)
    FLPAREN         reduce using rule 95 (typeArgument2 -> referenceType2 .)
    LPAREN          reduce using rule 95 (typeArgument2 -> referenceType2 .)
    OP_ARRAY        reduce using rule 95 (typeArgument2 -> referenceType2 .)
    INSTANCEOF      reduce using rule 95 (typeArgument2 -> referenceType2 .)
    OP_EQ           reduce using rule 95 (typeArgument2 -> referenceType2 .)
    OP_NE           reduce using rule 95 (typeArgument2 -> referenceType2 .)
    AND             reduce using rule 95 (typeArgument2 -> referenceType2 .)
    CARET           reduce using rule 95 (typeArgument2 -> referenceType2 .)
    VERTICAL        reduce using rule 95 (typeArgument2 -> referenceType2 .)
    OP_LAND         reduce using rule 95 (typeArgument2 -> referenceType2 .)
    QUES            reduce using rule 95 (typeArgument2 -> referenceType2 .)
    OP_LOR          reduce using rule 95 (typeArgument2 -> referenceType2 .)
    RPAREN          reduce using rule 95 (typeArgument2 -> referenceType2 .)
    BRPAREN         reduce using rule 95 (typeArgument2 -> referenceType2 .)
    SEMI            reduce using rule 95 (typeArgument2 -> referenceType2 .)
    COLON           reduce using rule 95 (typeArgument2 -> referenceType2 .)
    FRPAREN         reduce using rule 95 (typeArgument2 -> referenceType2 .)
    EXTENDS         reduce using rule 95 (typeArgument2 -> referenceType2 .)
    BOOLEAN         reduce using rule 95 (typeArgument2 -> referenceType2 .)
    VOID            reduce using rule 95 (typeArgument2 -> referenceType2 .)
    BYTE            reduce using rule 95 (typeArgument2 -> referenceType2 .)
    SHORT           reduce using rule 95 (typeArgument2 -> referenceType2 .)
    INT             reduce using rule 95 (typeArgument2 -> referenceType2 .)
    LONG            reduce using rule 95 (typeArgument2 -> referenceType2 .)
    CHAR            reduce using rule 95 (typeArgument2 -> referenceType2 .)
    FLOAT           reduce using rule 95 (typeArgument2 -> referenceType2 .)
    DOUBLE          reduce using rule 95 (typeArgument2 -> referenceType2 .)
    MORE            reduce using rule 95 (typeArgument2 -> referenceType2 .)
    OP_SHR          reduce using rule 95 (typeArgument2 -> referenceType2 .)
    OP_SHRR         reduce using rule 95 (typeArgument2 -> referenceType2 .)


state 859

    (93) typeArgumentList2 -> typeArgument2 .

    SUPER           reduce using rule 93 (typeArgumentList2 -> typeArgument2 .)
    THIS            reduce using rule 93 (typeArgumentList2 -> typeArgument2 .)
    Identifier      reduce using rule 93 (typeArgumentList2 -> typeArgument2 .)
    DOT             reduce using rule 93 (typeArgumentList2 -> typeArgument2 .)
    COMMA           reduce using rule 93 (typeArgumentList2 -> typeArgument2 .)
    BLPAREN         reduce using rule 93 (typeArgumentList2 -> typeArgument2 .)
    IMPLEMENTS      reduce using rule 93 (typeArgumentList2 -> typeArgument2 .)
    FLPAREN         reduce using rule 93 (typeArgumentList2 -> typeArgument2 .)
    LPAREN          reduce using rule 93 (typeArgumentList2 -> typeArgument2 .)
    OP_ARRAY        reduce using rule 93 (typeArgumentList2 -> typeArgument2 .)
    INSTANCEOF      reduce using rule 93 (typeArgumentList2 -> typeArgument2 .)
    OP_EQ           reduce using rule 93 (typeArgumentList2 -> typeArgument2 .)
    OP_NE           reduce using rule 93 (typeArgumentList2 -> typeArgument2 .)
    AND             reduce using rule 93 (typeArgumentList2 -> typeArgument2 .)
    CARET           reduce using rule 93 (typeArgumentList2 -> typeArgument2 .)
    VERTICAL        reduce using rule 93 (typeArgumentList2 -> typeArgument2 .)
    OP_LAND         reduce using rule 93 (typeArgumentList2 -> typeArgument2 .)
    QUES            reduce using rule 93 (typeArgumentList2 -> typeArgument2 .)
    OP_LOR          reduce using rule 93 (typeArgumentList2 -> typeArgument2 .)
    RPAREN          reduce using rule 93 (typeArgumentList2 -> typeArgument2 .)
    BRPAREN         reduce using rule 93 (typeArgumentList2 -> typeArgument2 .)
    SEMI            reduce using rule 93 (typeArgumentList2 -> typeArgument2 .)
    COLON           reduce using rule 93 (typeArgumentList2 -> typeArgument2 .)
    FRPAREN         reduce using rule 93 (typeArgumentList2 -> typeArgument2 .)
    EXTENDS         reduce using rule 93 (typeArgumentList2 -> typeArgument2 .)
    BOOLEAN         reduce using rule 93 (typeArgumentList2 -> typeArgument2 .)
    VOID            reduce using rule 93 (typeArgumentList2 -> typeArgument2 .)
    BYTE            reduce using rule 93 (typeArgumentList2 -> typeArgument2 .)
    SHORT           reduce using rule 93 (typeArgumentList2 -> typeArgument2 .)
    INT             reduce using rule 93 (typeArgumentList2 -> typeArgument2 .)
    LONG            reduce using rule 93 (typeArgumentList2 -> typeArgument2 .)
    CHAR            reduce using rule 93 (typeArgumentList2 -> typeArgument2 .)
    FLOAT           reduce using rule 93 (typeArgumentList2 -> typeArgument2 .)
    DOUBLE          reduce using rule 93 (typeArgumentList2 -> typeArgument2 .)
    MORE            reduce using rule 93 (typeArgumentList2 -> typeArgument2 .)
    OP_SHR          reduce using rule 93 (typeArgumentList2 -> typeArgument2 .)
    OP_SHRR         reduce using rule 93 (typeArgumentList2 -> typeArgument2 .)


state 860

    (98) referenceType2 -> classOrInterface . LESS typeArgumentList3
    (92) referenceType1 -> classOrInterface . LESS typeArgumentList2
    (46) classOrInterfaceType -> classOrInterface .
    (50) genericType -> classOrInterface . typeArguments
    (51) genericType -> classOrInterface . LESS MORE
    (82) typeArguments -> . LESS typeArgumentList1

    LESS            shift and go to state 960
    OP_SHRR         reduce using rule 46 (classOrInterfaceType -> classOrInterface .)
    OP_SHR          reduce using rule 46 (classOrInterfaceType -> classOrInterface .)
    MORE            reduce using rule 46 (classOrInterfaceType -> classOrInterface .)
    COMMA           reduce using rule 46 (classOrInterfaceType -> classOrInterface .)

    typeArguments                  shift and go to state 355

state 861

    (112) wildcard2 -> QUES . OP_SHR
    (113) wildcard2 -> QUES . wildcardBounds2
    (108) wildcard1 -> QUES . MORE
    (109) wildcard1 -> QUES . wildcardBounds1
    (104) wildcard -> QUES .
    (105) wildcard -> QUES . wildcardBounds
    (114) wildcardBounds2 -> . EXTENDS referenceType2
    (115) wildcardBounds2 -> . SUPER referenceType2
    (110) wildcardBounds1 -> . EXTENDS referenceType1
    (111) wildcardBounds1 -> . SUPER referenceType1
    (106) wildcardBounds -> . EXTENDS referenceType
    (107) wildcardBounds -> . SUPER referenceType

    OP_SHR          shift and go to state 961
    MORE            shift and go to state 723
    COMMA           reduce using rule 104 (wildcard -> QUES .)
    EXTENDS         shift and go to state 962
    SUPER           shift and go to state 964

    wildcardBounds1                shift and go to state 720
    wildcardBounds2                shift and go to state 963
    wildcardBounds                 shift and go to state 721

state 862

    (94) typeArgumentList2 -> typeArgumentList . COMMA typeArgument2
    (88) typeArgumentList1 -> typeArgumentList . COMMA typeArgument1
    (86) typeArgumentList -> typeArgumentList . COMMA typeArgument

    COMMA           shift and go to state 965


state 863

    (110) wildcardBounds1 -> EXTENDS referenceType1 .

    SUPER           reduce using rule 110 (wildcardBounds1 -> EXTENDS referenceType1 .)
    THIS            reduce using rule 110 (wildcardBounds1 -> EXTENDS referenceType1 .)
    Identifier      reduce using rule 110 (wildcardBounds1 -> EXTENDS referenceType1 .)
    DOT             reduce using rule 110 (wildcardBounds1 -> EXTENDS referenceType1 .)
    COMMA           reduce using rule 110 (wildcardBounds1 -> EXTENDS referenceType1 .)
    BLPAREN         reduce using rule 110 (wildcardBounds1 -> EXTENDS referenceType1 .)
    IMPLEMENTS      reduce using rule 110 (wildcardBounds1 -> EXTENDS referenceType1 .)
    FLPAREN         reduce using rule 110 (wildcardBounds1 -> EXTENDS referenceType1 .)
    LPAREN          reduce using rule 110 (wildcardBounds1 -> EXTENDS referenceType1 .)
    OP_ARRAY        reduce using rule 110 (wildcardBounds1 -> EXTENDS referenceType1 .)
    INSTANCEOF      reduce using rule 110 (wildcardBounds1 -> EXTENDS referenceType1 .)
    OP_EQ           reduce using rule 110 (wildcardBounds1 -> EXTENDS referenceType1 .)
    OP_NE           reduce using rule 110 (wildcardBounds1 -> EXTENDS referenceType1 .)
    AND             reduce using rule 110 (wildcardBounds1 -> EXTENDS referenceType1 .)
    CARET           reduce using rule 110 (wildcardBounds1 -> EXTENDS referenceType1 .)
    VERTICAL        reduce using rule 110 (wildcardBounds1 -> EXTENDS referenceType1 .)
    OP_LAND         reduce using rule 110 (wildcardBounds1 -> EXTENDS referenceType1 .)
    QUES            reduce using rule 110 (wildcardBounds1 -> EXTENDS referenceType1 .)
    OP_LOR          reduce using rule 110 (wildcardBounds1 -> EXTENDS referenceType1 .)
    RPAREN          reduce using rule 110 (wildcardBounds1 -> EXTENDS referenceType1 .)
    BRPAREN         reduce using rule 110 (wildcardBounds1 -> EXTENDS referenceType1 .)
    SEMI            reduce using rule 110 (wildcardBounds1 -> EXTENDS referenceType1 .)
    COLON           reduce using rule 110 (wildcardBounds1 -> EXTENDS referenceType1 .)
    FRPAREN         reduce using rule 110 (wildcardBounds1 -> EXTENDS referenceType1 .)
    MORE            reduce using rule 110 (wildcardBounds1 -> EXTENDS referenceType1 .)
    OP_SHR          reduce using rule 110 (wildcardBounds1 -> EXTENDS referenceType1 .)
    OP_SHRR         reduce using rule 110 (wildcardBounds1 -> EXTENDS referenceType1 .)


state 864

    (106) wildcardBounds -> EXTENDS referenceType .
    (91) referenceType1 -> referenceType . MORE

    COMMA           reduce using rule 106 (wildcardBounds -> EXTENDS referenceType .)
    MORE            shift and go to state 716


state 865

    (111) wildcardBounds1 -> SUPER referenceType1 .

    SUPER           reduce using rule 111 (wildcardBounds1 -> SUPER referenceType1 .)
    THIS            reduce using rule 111 (wildcardBounds1 -> SUPER referenceType1 .)
    Identifier      reduce using rule 111 (wildcardBounds1 -> SUPER referenceType1 .)
    DOT             reduce using rule 111 (wildcardBounds1 -> SUPER referenceType1 .)
    COMMA           reduce using rule 111 (wildcardBounds1 -> SUPER referenceType1 .)
    BLPAREN         reduce using rule 111 (wildcardBounds1 -> SUPER referenceType1 .)
    IMPLEMENTS      reduce using rule 111 (wildcardBounds1 -> SUPER referenceType1 .)
    FLPAREN         reduce using rule 111 (wildcardBounds1 -> SUPER referenceType1 .)
    LPAREN          reduce using rule 111 (wildcardBounds1 -> SUPER referenceType1 .)
    OP_ARRAY        reduce using rule 111 (wildcardBounds1 -> SUPER referenceType1 .)
    INSTANCEOF      reduce using rule 111 (wildcardBounds1 -> SUPER referenceType1 .)
    OP_EQ           reduce using rule 111 (wildcardBounds1 -> SUPER referenceType1 .)
    OP_NE           reduce using rule 111 (wildcardBounds1 -> SUPER referenceType1 .)
    AND             reduce using rule 111 (wildcardBounds1 -> SUPER referenceType1 .)
    CARET           reduce using rule 111 (wildcardBounds1 -> SUPER referenceType1 .)
    VERTICAL        reduce using rule 111 (wildcardBounds1 -> SUPER referenceType1 .)
    OP_LAND         reduce using rule 111 (wildcardBounds1 -> SUPER referenceType1 .)
    QUES            reduce using rule 111 (wildcardBounds1 -> SUPER referenceType1 .)
    OP_LOR          reduce using rule 111 (wildcardBounds1 -> SUPER referenceType1 .)
    RPAREN          reduce using rule 111 (wildcardBounds1 -> SUPER referenceType1 .)
    BRPAREN         reduce using rule 111 (wildcardBounds1 -> SUPER referenceType1 .)
    SEMI            reduce using rule 111 (wildcardBounds1 -> SUPER referenceType1 .)
    COLON           reduce using rule 111 (wildcardBounds1 -> SUPER referenceType1 .)
    FRPAREN         reduce using rule 111 (wildcardBounds1 -> SUPER referenceType1 .)
    MORE            reduce using rule 111 (wildcardBounds1 -> SUPER referenceType1 .)
    OP_SHR          reduce using rule 111 (wildcardBounds1 -> SUPER referenceType1 .)
    OP_SHRR         reduce using rule 111 (wildcardBounds1 -> SUPER referenceType1 .)


state 866

    (107) wildcardBounds -> SUPER referenceType .
    (91) referenceType1 -> referenceType . MORE

    COMMA           reduce using rule 107 (wildcardBounds -> SUPER referenceType .)
    MORE            shift and go to state 716


state 867

    (431) explicitConstructorInvocation -> name DOT THIS LPAREN . argumentList_opt RPAREN SEMI
    (232) argumentList_opt -> . argumentList
    (233) argumentList_opt -> . empty
    (234) argumentList -> . expression
    (235) argumentList -> . argumentList COMMA expression
    (631) empty -> .
    (456) expression -> . assignmentExpression
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    RPAREN          reduce using rule 631 (empty -> .)
    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    argumentList                   shift and go to state 602
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    argumentList_opt               shift and go to state 966
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    assignmentExpression           shift and go to state 543
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    fieldAccess                    shift and go to state 189
    integerLiteral                 shift and go to state 183
    empty                          shift and go to state 601
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 554
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    unaryExpressionNotPlusMinus    shift and go to state 397
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    expression                     shift and go to state 600
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 868

    (435) explicitConstructorInvocation -> name DOT typeArguments THIS . LPAREN argumentList_opt RPAREN SEMI

    LPAREN          shift and go to state 967


state 869

    (433) explicitConstructorInvocation -> name DOT typeArguments SUPER . LPAREN argumentList_opt RPAREN SEMI

    LPAREN          shift and go to state 968


state 870

    (429) explicitConstructorInvocation -> name DOT SUPER LPAREN . argumentList_opt RPAREN SEMI
    (232) argumentList_opt -> . argumentList
    (233) argumentList_opt -> . empty
    (234) argumentList -> . expression
    (235) argumentList -> . argumentList COMMA expression
    (631) empty -> .
    (456) expression -> . assignmentExpression
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    RPAREN          reduce using rule 631 (empty -> .)
    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    argumentList                   shift and go to state 602
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    argumentList_opt               shift and go to state 969
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    assignmentExpression           shift and go to state 543
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    fieldAccess                    shift and go to state 189
    integerLiteral                 shift and go to state 183
    empty                          shift and go to state 601
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 554
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    unaryExpressionNotPlusMinus    shift and go to state 397
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    expression                     shift and go to state 600
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 871

    (424) explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN . SEMI

    SEMI            shift and go to state 970


state 872

    (486) conditionalAndExpression -> conditionalAndExpression OP_LAND inclusiveOrExpression .
    (491) inclusiveOrExpression -> inclusiveOrExpression . VERTICAL exclusiveOrExpression

    OP_LAND         reduce using rule 486 (conditionalAndExpression -> conditionalAndExpression OP_LAND inclusiveOrExpression .)
    QUES            reduce using rule 486 (conditionalAndExpression -> conditionalAndExpression OP_LAND inclusiveOrExpression .)
    OP_LOR          reduce using rule 486 (conditionalAndExpression -> conditionalAndExpression OP_LAND inclusiveOrExpression .)
    COMMA           reduce using rule 486 (conditionalAndExpression -> conditionalAndExpression OP_LAND inclusiveOrExpression .)
    RPAREN          reduce using rule 486 (conditionalAndExpression -> conditionalAndExpression OP_LAND inclusiveOrExpression .)
    SEMI            reduce using rule 486 (conditionalAndExpression -> conditionalAndExpression OP_LAND inclusiveOrExpression .)
    BRPAREN         reduce using rule 486 (conditionalAndExpression -> conditionalAndExpression OP_LAND inclusiveOrExpression .)
    COLON           reduce using rule 486 (conditionalAndExpression -> conditionalAndExpression OP_LAND inclusiveOrExpression .)
    FRPAREN         reduce using rule 486 (conditionalAndExpression -> conditionalAndExpression OP_LAND inclusiveOrExpression .)
    VERTICAL        shift and go to state 736


state 873

    (519) relationalExpression -> relationalExpression LESS shiftExpression .
    (533) shiftExpression -> shiftExpression . OP_SHR additiveExpression
    (534) shiftExpression -> shiftExpression . OP_SHL additiveExpression
    (535) shiftExpression -> shiftExpression . OP_SHRR additiveExpression

    LESS            reduce using rule 519 (relationalExpression -> relationalExpression LESS shiftExpression .)
    OP_GE           reduce using rule 519 (relationalExpression -> relationalExpression LESS shiftExpression .)
    MORE            reduce using rule 519 (relationalExpression -> relationalExpression LESS shiftExpression .)
    OP_LE           reduce using rule 519 (relationalExpression -> relationalExpression LESS shiftExpression .)
    INSTANCEOF      reduce using rule 519 (relationalExpression -> relationalExpression LESS shiftExpression .)
    OP_EQ           reduce using rule 519 (relationalExpression -> relationalExpression LESS shiftExpression .)
    OP_NE           reduce using rule 519 (relationalExpression -> relationalExpression LESS shiftExpression .)
    AND             reduce using rule 519 (relationalExpression -> relationalExpression LESS shiftExpression .)
    CARET           reduce using rule 519 (relationalExpression -> relationalExpression LESS shiftExpression .)
    VERTICAL        reduce using rule 519 (relationalExpression -> relationalExpression LESS shiftExpression .)
    OP_LAND         reduce using rule 519 (relationalExpression -> relationalExpression LESS shiftExpression .)
    QUES            reduce using rule 519 (relationalExpression -> relationalExpression LESS shiftExpression .)
    OP_LOR          reduce using rule 519 (relationalExpression -> relationalExpression LESS shiftExpression .)
    RPAREN          reduce using rule 519 (relationalExpression -> relationalExpression LESS shiftExpression .)
    COMMA           reduce using rule 519 (relationalExpression -> relationalExpression LESS shiftExpression .)
    BRPAREN         reduce using rule 519 (relationalExpression -> relationalExpression LESS shiftExpression .)
    SEMI            reduce using rule 519 (relationalExpression -> relationalExpression LESS shiftExpression .)
    COLON           reduce using rule 519 (relationalExpression -> relationalExpression LESS shiftExpression .)
    FRPAREN         reduce using rule 519 (relationalExpression -> relationalExpression LESS shiftExpression .)
    OP_SHR          shift and go to state 750
    OP_SHL          shift and go to state 748
    OP_SHRR         shift and go to state 749


state 874

    (522) relationalExpression -> relationalExpression OP_LE shiftExpression .
    (533) shiftExpression -> shiftExpression . OP_SHR additiveExpression
    (534) shiftExpression -> shiftExpression . OP_SHL additiveExpression
    (535) shiftExpression -> shiftExpression . OP_SHRR additiveExpression

    LESS            reduce using rule 522 (relationalExpression -> relationalExpression OP_LE shiftExpression .)
    OP_GE           reduce using rule 522 (relationalExpression -> relationalExpression OP_LE shiftExpression .)
    MORE            reduce using rule 522 (relationalExpression -> relationalExpression OP_LE shiftExpression .)
    OP_LE           reduce using rule 522 (relationalExpression -> relationalExpression OP_LE shiftExpression .)
    INSTANCEOF      reduce using rule 522 (relationalExpression -> relationalExpression OP_LE shiftExpression .)
    OP_EQ           reduce using rule 522 (relationalExpression -> relationalExpression OP_LE shiftExpression .)
    OP_NE           reduce using rule 522 (relationalExpression -> relationalExpression OP_LE shiftExpression .)
    AND             reduce using rule 522 (relationalExpression -> relationalExpression OP_LE shiftExpression .)
    CARET           reduce using rule 522 (relationalExpression -> relationalExpression OP_LE shiftExpression .)
    VERTICAL        reduce using rule 522 (relationalExpression -> relationalExpression OP_LE shiftExpression .)
    OP_LAND         reduce using rule 522 (relationalExpression -> relationalExpression OP_LE shiftExpression .)
    QUES            reduce using rule 522 (relationalExpression -> relationalExpression OP_LE shiftExpression .)
    OP_LOR          reduce using rule 522 (relationalExpression -> relationalExpression OP_LE shiftExpression .)
    RPAREN          reduce using rule 522 (relationalExpression -> relationalExpression OP_LE shiftExpression .)
    COMMA           reduce using rule 522 (relationalExpression -> relationalExpression OP_LE shiftExpression .)
    BRPAREN         reduce using rule 522 (relationalExpression -> relationalExpression OP_LE shiftExpression .)
    SEMI            reduce using rule 522 (relationalExpression -> relationalExpression OP_LE shiftExpression .)
    COLON           reduce using rule 522 (relationalExpression -> relationalExpression OP_LE shiftExpression .)
    FRPAREN         reduce using rule 522 (relationalExpression -> relationalExpression OP_LE shiftExpression .)
    OP_SHR          shift and go to state 750
    OP_SHL          shift and go to state 748
    OP_SHRR         shift and go to state 749


state 875

    (520) relationalExpression -> relationalExpression OP_GE shiftExpression .
    (533) shiftExpression -> shiftExpression . OP_SHR additiveExpression
    (534) shiftExpression -> shiftExpression . OP_SHL additiveExpression
    (535) shiftExpression -> shiftExpression . OP_SHRR additiveExpression

    LESS            reduce using rule 520 (relationalExpression -> relationalExpression OP_GE shiftExpression .)
    OP_GE           reduce using rule 520 (relationalExpression -> relationalExpression OP_GE shiftExpression .)
    MORE            reduce using rule 520 (relationalExpression -> relationalExpression OP_GE shiftExpression .)
    OP_LE           reduce using rule 520 (relationalExpression -> relationalExpression OP_GE shiftExpression .)
    INSTANCEOF      reduce using rule 520 (relationalExpression -> relationalExpression OP_GE shiftExpression .)
    OP_EQ           reduce using rule 520 (relationalExpression -> relationalExpression OP_GE shiftExpression .)
    OP_NE           reduce using rule 520 (relationalExpression -> relationalExpression OP_GE shiftExpression .)
    AND             reduce using rule 520 (relationalExpression -> relationalExpression OP_GE shiftExpression .)
    CARET           reduce using rule 520 (relationalExpression -> relationalExpression OP_GE shiftExpression .)
    VERTICAL        reduce using rule 520 (relationalExpression -> relationalExpression OP_GE shiftExpression .)
    OP_LAND         reduce using rule 520 (relationalExpression -> relationalExpression OP_GE shiftExpression .)
    QUES            reduce using rule 520 (relationalExpression -> relationalExpression OP_GE shiftExpression .)
    OP_LOR          reduce using rule 520 (relationalExpression -> relationalExpression OP_GE shiftExpression .)
    RPAREN          reduce using rule 520 (relationalExpression -> relationalExpression OP_GE shiftExpression .)
    COMMA           reduce using rule 520 (relationalExpression -> relationalExpression OP_GE shiftExpression .)
    BRPAREN         reduce using rule 520 (relationalExpression -> relationalExpression OP_GE shiftExpression .)
    SEMI            reduce using rule 520 (relationalExpression -> relationalExpression OP_GE shiftExpression .)
    COLON           reduce using rule 520 (relationalExpression -> relationalExpression OP_GE shiftExpression .)
    FRPAREN         reduce using rule 520 (relationalExpression -> relationalExpression OP_GE shiftExpression .)
    OP_SHR          shift and go to state 750
    OP_SHL          shift and go to state 748
    OP_SHRR         shift and go to state 749


state 876

    (521) relationalExpression -> relationalExpression MORE shiftExpression .
    (533) shiftExpression -> shiftExpression . OP_SHR additiveExpression
    (534) shiftExpression -> shiftExpression . OP_SHL additiveExpression
    (535) shiftExpression -> shiftExpression . OP_SHRR additiveExpression

    LESS            reduce using rule 521 (relationalExpression -> relationalExpression MORE shiftExpression .)
    OP_GE           reduce using rule 521 (relationalExpression -> relationalExpression MORE shiftExpression .)
    MORE            reduce using rule 521 (relationalExpression -> relationalExpression MORE shiftExpression .)
    OP_LE           reduce using rule 521 (relationalExpression -> relationalExpression MORE shiftExpression .)
    INSTANCEOF      reduce using rule 521 (relationalExpression -> relationalExpression MORE shiftExpression .)
    OP_EQ           reduce using rule 521 (relationalExpression -> relationalExpression MORE shiftExpression .)
    OP_NE           reduce using rule 521 (relationalExpression -> relationalExpression MORE shiftExpression .)
    AND             reduce using rule 521 (relationalExpression -> relationalExpression MORE shiftExpression .)
    CARET           reduce using rule 521 (relationalExpression -> relationalExpression MORE shiftExpression .)
    VERTICAL        reduce using rule 521 (relationalExpression -> relationalExpression MORE shiftExpression .)
    OP_LAND         reduce using rule 521 (relationalExpression -> relationalExpression MORE shiftExpression .)
    QUES            reduce using rule 521 (relationalExpression -> relationalExpression MORE shiftExpression .)
    OP_LOR          reduce using rule 521 (relationalExpression -> relationalExpression MORE shiftExpression .)
    RPAREN          reduce using rule 521 (relationalExpression -> relationalExpression MORE shiftExpression .)
    COMMA           reduce using rule 521 (relationalExpression -> relationalExpression MORE shiftExpression .)
    BRPAREN         reduce using rule 521 (relationalExpression -> relationalExpression MORE shiftExpression .)
    SEMI            reduce using rule 521 (relationalExpression -> relationalExpression MORE shiftExpression .)
    COLON           reduce using rule 521 (relationalExpression -> relationalExpression MORE shiftExpression .)
    FRPAREN         reduce using rule 521 (relationalExpression -> relationalExpression MORE shiftExpression .)
    OP_SHR          shift and go to state 750
    OP_SHL          shift and go to state 748
    OP_SHRR         shift and go to state 749


state 877

    (514) instanceOfExpression -> instanceOfExpression INSTANCEOF referenceType .

    INSTANCEOF      reduce using rule 514 (instanceOfExpression -> instanceOfExpression INSTANCEOF referenceType .)
    OP_EQ           reduce using rule 514 (instanceOfExpression -> instanceOfExpression INSTANCEOF referenceType .)
    OP_NE           reduce using rule 514 (instanceOfExpression -> instanceOfExpression INSTANCEOF referenceType .)
    AND             reduce using rule 514 (instanceOfExpression -> instanceOfExpression INSTANCEOF referenceType .)
    CARET           reduce using rule 514 (instanceOfExpression -> instanceOfExpression INSTANCEOF referenceType .)
    VERTICAL        reduce using rule 514 (instanceOfExpression -> instanceOfExpression INSTANCEOF referenceType .)
    OP_LAND         reduce using rule 514 (instanceOfExpression -> instanceOfExpression INSTANCEOF referenceType .)
    QUES            reduce using rule 514 (instanceOfExpression -> instanceOfExpression INSTANCEOF referenceType .)
    OP_LOR          reduce using rule 514 (instanceOfExpression -> instanceOfExpression INSTANCEOF referenceType .)
    SEMI            reduce using rule 514 (instanceOfExpression -> instanceOfExpression INSTANCEOF referenceType .)
    COLON           reduce using rule 514 (instanceOfExpression -> instanceOfExpression INSTANCEOF referenceType .)
    COMMA           reduce using rule 514 (instanceOfExpression -> instanceOfExpression INSTANCEOF referenceType .)
    RPAREN          reduce using rule 514 (instanceOfExpression -> instanceOfExpression INSTANCEOF referenceType .)
    FRPAREN         reduce using rule 514 (instanceOfExpression -> instanceOfExpression INSTANCEOF referenceType .)
    BRPAREN         reduce using rule 514 (instanceOfExpression -> instanceOfExpression INSTANCEOF referenceType .)


state 878

    (491) inclusiveOrExpression -> inclusiveOrExpression VERTICAL exclusiveOrExpression .
    (496) exclusiveOrExpression -> exclusiveOrExpression . CARET andExpression

    VERTICAL        reduce using rule 491 (inclusiveOrExpression -> inclusiveOrExpression VERTICAL exclusiveOrExpression .)
    OP_LAND         reduce using rule 491 (inclusiveOrExpression -> inclusiveOrExpression VERTICAL exclusiveOrExpression .)
    QUES            reduce using rule 491 (inclusiveOrExpression -> inclusiveOrExpression VERTICAL exclusiveOrExpression .)
    OP_LOR          reduce using rule 491 (inclusiveOrExpression -> inclusiveOrExpression VERTICAL exclusiveOrExpression .)
    RPAREN          reduce using rule 491 (inclusiveOrExpression -> inclusiveOrExpression VERTICAL exclusiveOrExpression .)
    COMMA           reduce using rule 491 (inclusiveOrExpression -> inclusiveOrExpression VERTICAL exclusiveOrExpression .)
    FRPAREN         reduce using rule 491 (inclusiveOrExpression -> inclusiveOrExpression VERTICAL exclusiveOrExpression .)
    SEMI            reduce using rule 491 (inclusiveOrExpression -> inclusiveOrExpression VERTICAL exclusiveOrExpression .)
    BRPAREN         reduce using rule 491 (inclusiveOrExpression -> inclusiveOrExpression VERTICAL exclusiveOrExpression .)
    COLON           reduce using rule 491 (inclusiveOrExpression -> inclusiveOrExpression VERTICAL exclusiveOrExpression .)
    CARET           shift and go to state 744


state 879

    (544) additiveExpression -> additiveExpression PLUS multiplicativeExpression .
    (552) multiplicativeExpression -> multiplicativeExpression . MULT unaryExpression
    (553) multiplicativeExpression -> multiplicativeExpression . SLASH unaryExpression
    (554) multiplicativeExpression -> multiplicativeExpression . PERCENT unaryExpression

    PLUS            reduce using rule 544 (additiveExpression -> additiveExpression PLUS multiplicativeExpression .)
    DASH            reduce using rule 544 (additiveExpression -> additiveExpression PLUS multiplicativeExpression .)
    OP_SHR          reduce using rule 544 (additiveExpression -> additiveExpression PLUS multiplicativeExpression .)
    OP_SHL          reduce using rule 544 (additiveExpression -> additiveExpression PLUS multiplicativeExpression .)
    OP_SHRR         reduce using rule 544 (additiveExpression -> additiveExpression PLUS multiplicativeExpression .)
    LESS            reduce using rule 544 (additiveExpression -> additiveExpression PLUS multiplicativeExpression .)
    OP_GE           reduce using rule 544 (additiveExpression -> additiveExpression PLUS multiplicativeExpression .)
    MORE            reduce using rule 544 (additiveExpression -> additiveExpression PLUS multiplicativeExpression .)
    OP_LE           reduce using rule 544 (additiveExpression -> additiveExpression PLUS multiplicativeExpression .)
    INSTANCEOF      reduce using rule 544 (additiveExpression -> additiveExpression PLUS multiplicativeExpression .)
    OP_EQ           reduce using rule 544 (additiveExpression -> additiveExpression PLUS multiplicativeExpression .)
    OP_NE           reduce using rule 544 (additiveExpression -> additiveExpression PLUS multiplicativeExpression .)
    AND             reduce using rule 544 (additiveExpression -> additiveExpression PLUS multiplicativeExpression .)
    CARET           reduce using rule 544 (additiveExpression -> additiveExpression PLUS multiplicativeExpression .)
    VERTICAL        reduce using rule 544 (additiveExpression -> additiveExpression PLUS multiplicativeExpression .)
    OP_LAND         reduce using rule 544 (additiveExpression -> additiveExpression PLUS multiplicativeExpression .)
    QUES            reduce using rule 544 (additiveExpression -> additiveExpression PLUS multiplicativeExpression .)
    OP_LOR          reduce using rule 544 (additiveExpression -> additiveExpression PLUS multiplicativeExpression .)
    RPAREN          reduce using rule 544 (additiveExpression -> additiveExpression PLUS multiplicativeExpression .)
    COMMA           reduce using rule 544 (additiveExpression -> additiveExpression PLUS multiplicativeExpression .)
    BRPAREN         reduce using rule 544 (additiveExpression -> additiveExpression PLUS multiplicativeExpression .)
    SEMI            reduce using rule 544 (additiveExpression -> additiveExpression PLUS multiplicativeExpression .)
    COLON           reduce using rule 544 (additiveExpression -> additiveExpression PLUS multiplicativeExpression .)
    FRPAREN         reduce using rule 544 (additiveExpression -> additiveExpression PLUS multiplicativeExpression .)
    MULT            shift and go to state 747
    SLASH           shift and go to state 746
    PERCENT         shift and go to state 745


state 880

    (545) additiveExpression -> additiveExpression DASH multiplicativeExpression .
    (552) multiplicativeExpression -> multiplicativeExpression . MULT unaryExpression
    (553) multiplicativeExpression -> multiplicativeExpression . SLASH unaryExpression
    (554) multiplicativeExpression -> multiplicativeExpression . PERCENT unaryExpression

    PLUS            reduce using rule 545 (additiveExpression -> additiveExpression DASH multiplicativeExpression .)
    DASH            reduce using rule 545 (additiveExpression -> additiveExpression DASH multiplicativeExpression .)
    OP_SHR          reduce using rule 545 (additiveExpression -> additiveExpression DASH multiplicativeExpression .)
    OP_SHL          reduce using rule 545 (additiveExpression -> additiveExpression DASH multiplicativeExpression .)
    OP_SHRR         reduce using rule 545 (additiveExpression -> additiveExpression DASH multiplicativeExpression .)
    LESS            reduce using rule 545 (additiveExpression -> additiveExpression DASH multiplicativeExpression .)
    OP_GE           reduce using rule 545 (additiveExpression -> additiveExpression DASH multiplicativeExpression .)
    MORE            reduce using rule 545 (additiveExpression -> additiveExpression DASH multiplicativeExpression .)
    OP_LE           reduce using rule 545 (additiveExpression -> additiveExpression DASH multiplicativeExpression .)
    INSTANCEOF      reduce using rule 545 (additiveExpression -> additiveExpression DASH multiplicativeExpression .)
    OP_EQ           reduce using rule 545 (additiveExpression -> additiveExpression DASH multiplicativeExpression .)
    OP_NE           reduce using rule 545 (additiveExpression -> additiveExpression DASH multiplicativeExpression .)
    AND             reduce using rule 545 (additiveExpression -> additiveExpression DASH multiplicativeExpression .)
    CARET           reduce using rule 545 (additiveExpression -> additiveExpression DASH multiplicativeExpression .)
    VERTICAL        reduce using rule 545 (additiveExpression -> additiveExpression DASH multiplicativeExpression .)
    OP_LAND         reduce using rule 545 (additiveExpression -> additiveExpression DASH multiplicativeExpression .)
    QUES            reduce using rule 545 (additiveExpression -> additiveExpression DASH multiplicativeExpression .)
    OP_LOR          reduce using rule 545 (additiveExpression -> additiveExpression DASH multiplicativeExpression .)
    RPAREN          reduce using rule 545 (additiveExpression -> additiveExpression DASH multiplicativeExpression .)
    COMMA           reduce using rule 545 (additiveExpression -> additiveExpression DASH multiplicativeExpression .)
    BRPAREN         reduce using rule 545 (additiveExpression -> additiveExpression DASH multiplicativeExpression .)
    SEMI            reduce using rule 545 (additiveExpression -> additiveExpression DASH multiplicativeExpression .)
    COLON           reduce using rule 545 (additiveExpression -> additiveExpression DASH multiplicativeExpression .)
    FRPAREN         reduce using rule 545 (additiveExpression -> additiveExpression DASH multiplicativeExpression .)
    MULT            shift and go to state 747
    SLASH           shift and go to state 746
    PERCENT         shift and go to state 745


state 881

    (501) andExpression -> andExpression AND equalityExpression .
    (506) equalityExpression -> equalityExpression . OP_EQ instanceOfExpression
    (507) equalityExpression -> equalityExpression . OP_NE instanceOfExpression

    AND             reduce using rule 501 (andExpression -> andExpression AND equalityExpression .)
    CARET           reduce using rule 501 (andExpression -> andExpression AND equalityExpression .)
    VERTICAL        reduce using rule 501 (andExpression -> andExpression AND equalityExpression .)
    OP_LAND         reduce using rule 501 (andExpression -> andExpression AND equalityExpression .)
    QUES            reduce using rule 501 (andExpression -> andExpression AND equalityExpression .)
    OP_LOR          reduce using rule 501 (andExpression -> andExpression AND equalityExpression .)
    COMMA           reduce using rule 501 (andExpression -> andExpression AND equalityExpression .)
    RPAREN          reduce using rule 501 (andExpression -> andExpression AND equalityExpression .)
    SEMI            reduce using rule 501 (andExpression -> andExpression AND equalityExpression .)
    COLON           reduce using rule 501 (andExpression -> andExpression AND equalityExpression .)
    FRPAREN         reduce using rule 501 (andExpression -> andExpression AND equalityExpression .)
    BRPAREN         reduce using rule 501 (andExpression -> andExpression AND equalityExpression .)
    OP_EQ           shift and go to state 741
    OP_NE           shift and go to state 740


state 882

    (507) equalityExpression -> equalityExpression OP_NE instanceOfExpression .
    (514) instanceOfExpression -> instanceOfExpression . INSTANCEOF referenceType

    OP_EQ           reduce using rule 507 (equalityExpression -> equalityExpression OP_NE instanceOfExpression .)
    OP_NE           reduce using rule 507 (equalityExpression -> equalityExpression OP_NE instanceOfExpression .)
    AND             reduce using rule 507 (equalityExpression -> equalityExpression OP_NE instanceOfExpression .)
    CARET           reduce using rule 507 (equalityExpression -> equalityExpression OP_NE instanceOfExpression .)
    VERTICAL        reduce using rule 507 (equalityExpression -> equalityExpression OP_NE instanceOfExpression .)
    OP_LAND         reduce using rule 507 (equalityExpression -> equalityExpression OP_NE instanceOfExpression .)
    QUES            reduce using rule 507 (equalityExpression -> equalityExpression OP_NE instanceOfExpression .)
    OP_LOR          reduce using rule 507 (equalityExpression -> equalityExpression OP_NE instanceOfExpression .)
    RPAREN          reduce using rule 507 (equalityExpression -> equalityExpression OP_NE instanceOfExpression .)
    COMMA           reduce using rule 507 (equalityExpression -> equalityExpression OP_NE instanceOfExpression .)
    BRPAREN         reduce using rule 507 (equalityExpression -> equalityExpression OP_NE instanceOfExpression .)
    SEMI            reduce using rule 507 (equalityExpression -> equalityExpression OP_NE instanceOfExpression .)
    FRPAREN         reduce using rule 507 (equalityExpression -> equalityExpression OP_NE instanceOfExpression .)
    COLON           reduce using rule 507 (equalityExpression -> equalityExpression OP_NE instanceOfExpression .)
    INSTANCEOF      shift and go to state 735


state 883

    (506) equalityExpression -> equalityExpression OP_EQ instanceOfExpression .
    (514) instanceOfExpression -> instanceOfExpression . INSTANCEOF referenceType

    OP_EQ           reduce using rule 506 (equalityExpression -> equalityExpression OP_EQ instanceOfExpression .)
    OP_NE           reduce using rule 506 (equalityExpression -> equalityExpression OP_EQ instanceOfExpression .)
    AND             reduce using rule 506 (equalityExpression -> equalityExpression OP_EQ instanceOfExpression .)
    CARET           reduce using rule 506 (equalityExpression -> equalityExpression OP_EQ instanceOfExpression .)
    VERTICAL        reduce using rule 506 (equalityExpression -> equalityExpression OP_EQ instanceOfExpression .)
    OP_LAND         reduce using rule 506 (equalityExpression -> equalityExpression OP_EQ instanceOfExpression .)
    QUES            reduce using rule 506 (equalityExpression -> equalityExpression OP_EQ instanceOfExpression .)
    OP_LOR          reduce using rule 506 (equalityExpression -> equalityExpression OP_EQ instanceOfExpression .)
    RPAREN          reduce using rule 506 (equalityExpression -> equalityExpression OP_EQ instanceOfExpression .)
    COMMA           reduce using rule 506 (equalityExpression -> equalityExpression OP_EQ instanceOfExpression .)
    BRPAREN         reduce using rule 506 (equalityExpression -> equalityExpression OP_EQ instanceOfExpression .)
    SEMI            reduce using rule 506 (equalityExpression -> equalityExpression OP_EQ instanceOfExpression .)
    FRPAREN         reduce using rule 506 (equalityExpression -> equalityExpression OP_EQ instanceOfExpression .)
    COLON           reduce using rule 506 (equalityExpression -> equalityExpression OP_EQ instanceOfExpression .)
    INSTANCEOF      shift and go to state 735


state 884

    (481) conditionalOrExpression -> conditionalOrExpression OP_LOR conditionalAndExpression .
    (486) conditionalAndExpression -> conditionalAndExpression . OP_LAND inclusiveOrExpression

    QUES            reduce using rule 481 (conditionalOrExpression -> conditionalOrExpression OP_LOR conditionalAndExpression .)
    OP_LOR          reduce using rule 481 (conditionalOrExpression -> conditionalOrExpression OP_LOR conditionalAndExpression .)
    COLON           reduce using rule 481 (conditionalOrExpression -> conditionalOrExpression OP_LOR conditionalAndExpression .)
    COMMA           reduce using rule 481 (conditionalOrExpression -> conditionalOrExpression OP_LOR conditionalAndExpression .)
    RPAREN          reduce using rule 481 (conditionalOrExpression -> conditionalOrExpression OP_LOR conditionalAndExpression .)
    SEMI            reduce using rule 481 (conditionalOrExpression -> conditionalOrExpression OP_LOR conditionalAndExpression .)
    FRPAREN         reduce using rule 481 (conditionalOrExpression -> conditionalOrExpression OP_LOR conditionalAndExpression .)
    BRPAREN         reduce using rule 481 (conditionalOrExpression -> conditionalOrExpression OP_LOR conditionalAndExpression .)
    OP_LAND         shift and go to state 729


state 885

    (476) conditionalExpression -> conditionalOrExpression QUES expression . COLON conditionalExpression

    COLON           shift and go to state 971


state 886

    (496) exclusiveOrExpression -> exclusiveOrExpression CARET andExpression .
    (501) andExpression -> andExpression . AND equalityExpression

    CARET           reduce using rule 496 (exclusiveOrExpression -> exclusiveOrExpression CARET andExpression .)
    VERTICAL        reduce using rule 496 (exclusiveOrExpression -> exclusiveOrExpression CARET andExpression .)
    OP_LAND         reduce using rule 496 (exclusiveOrExpression -> exclusiveOrExpression CARET andExpression .)
    QUES            reduce using rule 496 (exclusiveOrExpression -> exclusiveOrExpression CARET andExpression .)
    OP_LOR          reduce using rule 496 (exclusiveOrExpression -> exclusiveOrExpression CARET andExpression .)
    RPAREN          reduce using rule 496 (exclusiveOrExpression -> exclusiveOrExpression CARET andExpression .)
    COMMA           reduce using rule 496 (exclusiveOrExpression -> exclusiveOrExpression CARET andExpression .)
    BRPAREN         reduce using rule 496 (exclusiveOrExpression -> exclusiveOrExpression CARET andExpression .)
    SEMI            reduce using rule 496 (exclusiveOrExpression -> exclusiveOrExpression CARET andExpression .)
    FRPAREN         reduce using rule 496 (exclusiveOrExpression -> exclusiveOrExpression CARET andExpression .)
    COLON           reduce using rule 496 (exclusiveOrExpression -> exclusiveOrExpression CARET andExpression .)
    AND             shift and go to state 739


state 887

    (554) multiplicativeExpression -> multiplicativeExpression PERCENT unaryExpression .

    MULT            reduce using rule 554 (multiplicativeExpression -> multiplicativeExpression PERCENT unaryExpression .)
    SLASH           reduce using rule 554 (multiplicativeExpression -> multiplicativeExpression PERCENT unaryExpression .)
    PERCENT         reduce using rule 554 (multiplicativeExpression -> multiplicativeExpression PERCENT unaryExpression .)
    PLUS            reduce using rule 554 (multiplicativeExpression -> multiplicativeExpression PERCENT unaryExpression .)
    DASH            reduce using rule 554 (multiplicativeExpression -> multiplicativeExpression PERCENT unaryExpression .)
    OP_SHR          reduce using rule 554 (multiplicativeExpression -> multiplicativeExpression PERCENT unaryExpression .)
    OP_SHL          reduce using rule 554 (multiplicativeExpression -> multiplicativeExpression PERCENT unaryExpression .)
    OP_SHRR         reduce using rule 554 (multiplicativeExpression -> multiplicativeExpression PERCENT unaryExpression .)
    LESS            reduce using rule 554 (multiplicativeExpression -> multiplicativeExpression PERCENT unaryExpression .)
    OP_GE           reduce using rule 554 (multiplicativeExpression -> multiplicativeExpression PERCENT unaryExpression .)
    MORE            reduce using rule 554 (multiplicativeExpression -> multiplicativeExpression PERCENT unaryExpression .)
    OP_LE           reduce using rule 554 (multiplicativeExpression -> multiplicativeExpression PERCENT unaryExpression .)
    INSTANCEOF      reduce using rule 554 (multiplicativeExpression -> multiplicativeExpression PERCENT unaryExpression .)
    OP_EQ           reduce using rule 554 (multiplicativeExpression -> multiplicativeExpression PERCENT unaryExpression .)
    OP_NE           reduce using rule 554 (multiplicativeExpression -> multiplicativeExpression PERCENT unaryExpression .)
    AND             reduce using rule 554 (multiplicativeExpression -> multiplicativeExpression PERCENT unaryExpression .)
    CARET           reduce using rule 554 (multiplicativeExpression -> multiplicativeExpression PERCENT unaryExpression .)
    VERTICAL        reduce using rule 554 (multiplicativeExpression -> multiplicativeExpression PERCENT unaryExpression .)
    OP_LAND         reduce using rule 554 (multiplicativeExpression -> multiplicativeExpression PERCENT unaryExpression .)
    QUES            reduce using rule 554 (multiplicativeExpression -> multiplicativeExpression PERCENT unaryExpression .)
    OP_LOR          reduce using rule 554 (multiplicativeExpression -> multiplicativeExpression PERCENT unaryExpression .)
    RPAREN          reduce using rule 554 (multiplicativeExpression -> multiplicativeExpression PERCENT unaryExpression .)
    COMMA           reduce using rule 554 (multiplicativeExpression -> multiplicativeExpression PERCENT unaryExpression .)
    BRPAREN         reduce using rule 554 (multiplicativeExpression -> multiplicativeExpression PERCENT unaryExpression .)
    SEMI            reduce using rule 554 (multiplicativeExpression -> multiplicativeExpression PERCENT unaryExpression .)
    FRPAREN         reduce using rule 554 (multiplicativeExpression -> multiplicativeExpression PERCENT unaryExpression .)
    COLON           reduce using rule 554 (multiplicativeExpression -> multiplicativeExpression PERCENT unaryExpression .)


state 888

    (553) multiplicativeExpression -> multiplicativeExpression SLASH unaryExpression .

    MULT            reduce using rule 553 (multiplicativeExpression -> multiplicativeExpression SLASH unaryExpression .)
    SLASH           reduce using rule 553 (multiplicativeExpression -> multiplicativeExpression SLASH unaryExpression .)
    PERCENT         reduce using rule 553 (multiplicativeExpression -> multiplicativeExpression SLASH unaryExpression .)
    PLUS            reduce using rule 553 (multiplicativeExpression -> multiplicativeExpression SLASH unaryExpression .)
    DASH            reduce using rule 553 (multiplicativeExpression -> multiplicativeExpression SLASH unaryExpression .)
    OP_SHR          reduce using rule 553 (multiplicativeExpression -> multiplicativeExpression SLASH unaryExpression .)
    OP_SHL          reduce using rule 553 (multiplicativeExpression -> multiplicativeExpression SLASH unaryExpression .)
    OP_SHRR         reduce using rule 553 (multiplicativeExpression -> multiplicativeExpression SLASH unaryExpression .)
    LESS            reduce using rule 553 (multiplicativeExpression -> multiplicativeExpression SLASH unaryExpression .)
    OP_GE           reduce using rule 553 (multiplicativeExpression -> multiplicativeExpression SLASH unaryExpression .)
    MORE            reduce using rule 553 (multiplicativeExpression -> multiplicativeExpression SLASH unaryExpression .)
    OP_LE           reduce using rule 553 (multiplicativeExpression -> multiplicativeExpression SLASH unaryExpression .)
    INSTANCEOF      reduce using rule 553 (multiplicativeExpression -> multiplicativeExpression SLASH unaryExpression .)
    OP_EQ           reduce using rule 553 (multiplicativeExpression -> multiplicativeExpression SLASH unaryExpression .)
    OP_NE           reduce using rule 553 (multiplicativeExpression -> multiplicativeExpression SLASH unaryExpression .)
    AND             reduce using rule 553 (multiplicativeExpression -> multiplicativeExpression SLASH unaryExpression .)
    CARET           reduce using rule 553 (multiplicativeExpression -> multiplicativeExpression SLASH unaryExpression .)
    VERTICAL        reduce using rule 553 (multiplicativeExpression -> multiplicativeExpression SLASH unaryExpression .)
    OP_LAND         reduce using rule 553 (multiplicativeExpression -> multiplicativeExpression SLASH unaryExpression .)
    QUES            reduce using rule 553 (multiplicativeExpression -> multiplicativeExpression SLASH unaryExpression .)
    OP_LOR          reduce using rule 553 (multiplicativeExpression -> multiplicativeExpression SLASH unaryExpression .)
    RPAREN          reduce using rule 553 (multiplicativeExpression -> multiplicativeExpression SLASH unaryExpression .)
    COMMA           reduce using rule 553 (multiplicativeExpression -> multiplicativeExpression SLASH unaryExpression .)
    BRPAREN         reduce using rule 553 (multiplicativeExpression -> multiplicativeExpression SLASH unaryExpression .)
    SEMI            reduce using rule 553 (multiplicativeExpression -> multiplicativeExpression SLASH unaryExpression .)
    FRPAREN         reduce using rule 553 (multiplicativeExpression -> multiplicativeExpression SLASH unaryExpression .)
    COLON           reduce using rule 553 (multiplicativeExpression -> multiplicativeExpression SLASH unaryExpression .)


state 889

    (552) multiplicativeExpression -> multiplicativeExpression MULT unaryExpression .

    MULT            reduce using rule 552 (multiplicativeExpression -> multiplicativeExpression MULT unaryExpression .)
    SLASH           reduce using rule 552 (multiplicativeExpression -> multiplicativeExpression MULT unaryExpression .)
    PERCENT         reduce using rule 552 (multiplicativeExpression -> multiplicativeExpression MULT unaryExpression .)
    PLUS            reduce using rule 552 (multiplicativeExpression -> multiplicativeExpression MULT unaryExpression .)
    DASH            reduce using rule 552 (multiplicativeExpression -> multiplicativeExpression MULT unaryExpression .)
    OP_SHR          reduce using rule 552 (multiplicativeExpression -> multiplicativeExpression MULT unaryExpression .)
    OP_SHL          reduce using rule 552 (multiplicativeExpression -> multiplicativeExpression MULT unaryExpression .)
    OP_SHRR         reduce using rule 552 (multiplicativeExpression -> multiplicativeExpression MULT unaryExpression .)
    LESS            reduce using rule 552 (multiplicativeExpression -> multiplicativeExpression MULT unaryExpression .)
    OP_GE           reduce using rule 552 (multiplicativeExpression -> multiplicativeExpression MULT unaryExpression .)
    MORE            reduce using rule 552 (multiplicativeExpression -> multiplicativeExpression MULT unaryExpression .)
    OP_LE           reduce using rule 552 (multiplicativeExpression -> multiplicativeExpression MULT unaryExpression .)
    INSTANCEOF      reduce using rule 552 (multiplicativeExpression -> multiplicativeExpression MULT unaryExpression .)
    OP_EQ           reduce using rule 552 (multiplicativeExpression -> multiplicativeExpression MULT unaryExpression .)
    OP_NE           reduce using rule 552 (multiplicativeExpression -> multiplicativeExpression MULT unaryExpression .)
    AND             reduce using rule 552 (multiplicativeExpression -> multiplicativeExpression MULT unaryExpression .)
    CARET           reduce using rule 552 (multiplicativeExpression -> multiplicativeExpression MULT unaryExpression .)
    VERTICAL        reduce using rule 552 (multiplicativeExpression -> multiplicativeExpression MULT unaryExpression .)
    OP_LAND         reduce using rule 552 (multiplicativeExpression -> multiplicativeExpression MULT unaryExpression .)
    QUES            reduce using rule 552 (multiplicativeExpression -> multiplicativeExpression MULT unaryExpression .)
    OP_LOR          reduce using rule 552 (multiplicativeExpression -> multiplicativeExpression MULT unaryExpression .)
    RPAREN          reduce using rule 552 (multiplicativeExpression -> multiplicativeExpression MULT unaryExpression .)
    COMMA           reduce using rule 552 (multiplicativeExpression -> multiplicativeExpression MULT unaryExpression .)
    BRPAREN         reduce using rule 552 (multiplicativeExpression -> multiplicativeExpression MULT unaryExpression .)
    SEMI            reduce using rule 552 (multiplicativeExpression -> multiplicativeExpression MULT unaryExpression .)
    FRPAREN         reduce using rule 552 (multiplicativeExpression -> multiplicativeExpression MULT unaryExpression .)
    COLON           reduce using rule 552 (multiplicativeExpression -> multiplicativeExpression MULT unaryExpression .)


state 890

    (534) shiftExpression -> shiftExpression OP_SHL additiveExpression .
    (544) additiveExpression -> additiveExpression . PLUS multiplicativeExpression
    (545) additiveExpression -> additiveExpression . DASH multiplicativeExpression

    OP_SHR          reduce using rule 534 (shiftExpression -> shiftExpression OP_SHL additiveExpression .)
    OP_SHL          reduce using rule 534 (shiftExpression -> shiftExpression OP_SHL additiveExpression .)
    OP_SHRR         reduce using rule 534 (shiftExpression -> shiftExpression OP_SHL additiveExpression .)
    LESS            reduce using rule 534 (shiftExpression -> shiftExpression OP_SHL additiveExpression .)
    OP_GE           reduce using rule 534 (shiftExpression -> shiftExpression OP_SHL additiveExpression .)
    MORE            reduce using rule 534 (shiftExpression -> shiftExpression OP_SHL additiveExpression .)
    OP_LE           reduce using rule 534 (shiftExpression -> shiftExpression OP_SHL additiveExpression .)
    INSTANCEOF      reduce using rule 534 (shiftExpression -> shiftExpression OP_SHL additiveExpression .)
    OP_EQ           reduce using rule 534 (shiftExpression -> shiftExpression OP_SHL additiveExpression .)
    OP_NE           reduce using rule 534 (shiftExpression -> shiftExpression OP_SHL additiveExpression .)
    AND             reduce using rule 534 (shiftExpression -> shiftExpression OP_SHL additiveExpression .)
    CARET           reduce using rule 534 (shiftExpression -> shiftExpression OP_SHL additiveExpression .)
    VERTICAL        reduce using rule 534 (shiftExpression -> shiftExpression OP_SHL additiveExpression .)
    OP_LAND         reduce using rule 534 (shiftExpression -> shiftExpression OP_SHL additiveExpression .)
    QUES            reduce using rule 534 (shiftExpression -> shiftExpression OP_SHL additiveExpression .)
    OP_LOR          reduce using rule 534 (shiftExpression -> shiftExpression OP_SHL additiveExpression .)
    COMMA           reduce using rule 534 (shiftExpression -> shiftExpression OP_SHL additiveExpression .)
    RPAREN          reduce using rule 534 (shiftExpression -> shiftExpression OP_SHL additiveExpression .)
    SEMI            reduce using rule 534 (shiftExpression -> shiftExpression OP_SHL additiveExpression .)
    COLON           reduce using rule 534 (shiftExpression -> shiftExpression OP_SHL additiveExpression .)
    FRPAREN         reduce using rule 534 (shiftExpression -> shiftExpression OP_SHL additiveExpression .)
    BRPAREN         reduce using rule 534 (shiftExpression -> shiftExpression OP_SHL additiveExpression .)
    PLUS            shift and go to state 737
    DASH            shift and go to state 738


state 891

    (535) shiftExpression -> shiftExpression OP_SHRR additiveExpression .
    (544) additiveExpression -> additiveExpression . PLUS multiplicativeExpression
    (545) additiveExpression -> additiveExpression . DASH multiplicativeExpression

    OP_SHR          reduce using rule 535 (shiftExpression -> shiftExpression OP_SHRR additiveExpression .)
    OP_SHL          reduce using rule 535 (shiftExpression -> shiftExpression OP_SHRR additiveExpression .)
    OP_SHRR         reduce using rule 535 (shiftExpression -> shiftExpression OP_SHRR additiveExpression .)
    LESS            reduce using rule 535 (shiftExpression -> shiftExpression OP_SHRR additiveExpression .)
    OP_GE           reduce using rule 535 (shiftExpression -> shiftExpression OP_SHRR additiveExpression .)
    MORE            reduce using rule 535 (shiftExpression -> shiftExpression OP_SHRR additiveExpression .)
    OP_LE           reduce using rule 535 (shiftExpression -> shiftExpression OP_SHRR additiveExpression .)
    INSTANCEOF      reduce using rule 535 (shiftExpression -> shiftExpression OP_SHRR additiveExpression .)
    OP_EQ           reduce using rule 535 (shiftExpression -> shiftExpression OP_SHRR additiveExpression .)
    OP_NE           reduce using rule 535 (shiftExpression -> shiftExpression OP_SHRR additiveExpression .)
    AND             reduce using rule 535 (shiftExpression -> shiftExpression OP_SHRR additiveExpression .)
    CARET           reduce using rule 535 (shiftExpression -> shiftExpression OP_SHRR additiveExpression .)
    VERTICAL        reduce using rule 535 (shiftExpression -> shiftExpression OP_SHRR additiveExpression .)
    OP_LAND         reduce using rule 535 (shiftExpression -> shiftExpression OP_SHRR additiveExpression .)
    QUES            reduce using rule 535 (shiftExpression -> shiftExpression OP_SHRR additiveExpression .)
    OP_LOR          reduce using rule 535 (shiftExpression -> shiftExpression OP_SHRR additiveExpression .)
    COMMA           reduce using rule 535 (shiftExpression -> shiftExpression OP_SHRR additiveExpression .)
    RPAREN          reduce using rule 535 (shiftExpression -> shiftExpression OP_SHRR additiveExpression .)
    SEMI            reduce using rule 535 (shiftExpression -> shiftExpression OP_SHRR additiveExpression .)
    COLON           reduce using rule 535 (shiftExpression -> shiftExpression OP_SHRR additiveExpression .)
    FRPAREN         reduce using rule 535 (shiftExpression -> shiftExpression OP_SHRR additiveExpression .)
    BRPAREN         reduce using rule 535 (shiftExpression -> shiftExpression OP_SHRR additiveExpression .)
    PLUS            shift and go to state 737
    DASH            shift and go to state 738


state 892

    (533) shiftExpression -> shiftExpression OP_SHR additiveExpression .
    (544) additiveExpression -> additiveExpression . PLUS multiplicativeExpression
    (545) additiveExpression -> additiveExpression . DASH multiplicativeExpression

    OP_SHR          reduce using rule 533 (shiftExpression -> shiftExpression OP_SHR additiveExpression .)
    OP_SHL          reduce using rule 533 (shiftExpression -> shiftExpression OP_SHR additiveExpression .)
    OP_SHRR         reduce using rule 533 (shiftExpression -> shiftExpression OP_SHR additiveExpression .)
    LESS            reduce using rule 533 (shiftExpression -> shiftExpression OP_SHR additiveExpression .)
    OP_GE           reduce using rule 533 (shiftExpression -> shiftExpression OP_SHR additiveExpression .)
    MORE            reduce using rule 533 (shiftExpression -> shiftExpression OP_SHR additiveExpression .)
    OP_LE           reduce using rule 533 (shiftExpression -> shiftExpression OP_SHR additiveExpression .)
    INSTANCEOF      reduce using rule 533 (shiftExpression -> shiftExpression OP_SHR additiveExpression .)
    OP_EQ           reduce using rule 533 (shiftExpression -> shiftExpression OP_SHR additiveExpression .)
    OP_NE           reduce using rule 533 (shiftExpression -> shiftExpression OP_SHR additiveExpression .)
    AND             reduce using rule 533 (shiftExpression -> shiftExpression OP_SHR additiveExpression .)
    CARET           reduce using rule 533 (shiftExpression -> shiftExpression OP_SHR additiveExpression .)
    VERTICAL        reduce using rule 533 (shiftExpression -> shiftExpression OP_SHR additiveExpression .)
    OP_LAND         reduce using rule 533 (shiftExpression -> shiftExpression OP_SHR additiveExpression .)
    QUES            reduce using rule 533 (shiftExpression -> shiftExpression OP_SHR additiveExpression .)
    OP_LOR          reduce using rule 533 (shiftExpression -> shiftExpression OP_SHR additiveExpression .)
    COMMA           reduce using rule 533 (shiftExpression -> shiftExpression OP_SHR additiveExpression .)
    RPAREN          reduce using rule 533 (shiftExpression -> shiftExpression OP_SHR additiveExpression .)
    SEMI            reduce using rule 533 (shiftExpression -> shiftExpression OP_SHR additiveExpression .)
    COLON           reduce using rule 533 (shiftExpression -> shiftExpression OP_SHR additiveExpression .)
    FRPAREN         reduce using rule 533 (shiftExpression -> shiftExpression OP_SHR additiveExpression .)
    BRPAREN         reduce using rule 533 (shiftExpression -> shiftExpression OP_SHR additiveExpression .)
    PLUS            shift and go to state 737
    DASH            shift and go to state 738


state 893

    (399) synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN . block
    (283) block -> . BLPAREN blockStatements_opt BRPAREN

    BLPAREN         shift and go to state 120

    block                          shift and go to state 972

state 894

    (427) explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt . RPAREN SEMI

    RPAREN          shift and go to state 973


state 895

    (426) explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList . RPAREN SEMI
    (235) argumentList -> argumentList . COMMA expression

    RPAREN          shift and go to state 974
    COMMA           shift and go to state 800


state 896

    (341) methodInvocation -> name DOT . typeArguments Identifier LPAREN argumentList_opt RPAREN
    (32) qualifiedName -> name DOT . simpleName
    (442) classInstanceCreationExpressionName -> name DOT .
    (602) primaryNoNewArray -> name DOT . THIS
    (603) primaryNoNewArray -> name DOT . SUPER
    (604) primaryNoNewArray -> name DOT . CLASS
    (82) typeArguments -> . LESS typeArgumentList1
    (31) simpleName -> . Identifier

    NEW             reduce using rule 442 (classInstanceCreationExpressionName -> name DOT .)
    THIS            shift and go to state 619
    SUPER           shift and go to state 621
    CLASS           shift and go to state 622
    LESS            shift and go to state 287
    Identifier      shift and go to state 68

    typeArguments                  shift and go to state 620
    simpleName                     shift and go to state 365

state 897

    (342) methodInvocation -> primary DOT . typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> primary DOT . Identifier LPAREN argumentList_opt RPAREN
    (438) classInstanceCreationExpression -> primary DOT . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> primary DOT . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> primary DOT . Identifier
    (82) typeArguments -> . LESS typeArgumentList1

    Identifier      shift and go to state 781
    NEW             shift and go to state 650
    LESS            shift and go to state 287

    typeArguments                  shift and go to state 649

state 898

    (370) enhancedForStatementHeadInit -> FOR LPAREN type Identifier . arrays_opt
    (301) variableDeclaratorId -> Identifier . arrays_opt
    (62) arrays_opt -> . arrays
    (63) arrays_opt -> . empty
    (59) arrays -> . array_loop
    (631) empty -> .
    (60) array_loop -> . array
    (61) array_loop -> . array_loop array
    (58) array -> . FLPAREN FRPAREN

    COLON           reduce using rule 631 (empty -> .)
    ASS             reduce using rule 631 (empty -> .)
    COMMA           reduce using rule 631 (empty -> .)
    SEMI            reduce using rule 631 (empty -> .)
    FLPAREN         shift and go to state 451

    arrays                         shift and go to state 698
    array_loop                     shift and go to state 413
    arrays_opt                     shift and go to state 975
    array                          shift and go to state 407
    empty                          shift and go to state 686

state 899

    (371) enhancedForStatementHeadInit -> FOR LPAREN modifiers type . Identifier arrays_opt
    (296) localVariableDeclaration -> modifiers type . variableDeclarators
    (297) variableDeclarators -> . variableDeclarator
    (298) variableDeclarators -> . variableDeclarators COMMA variableDeclarator
    (299) variableDeclarator -> . variableDeclaratorId
    (300) variableDeclarator -> . variableDeclaratorId ASS variableInitializer
    (301) variableDeclaratorId -> . Identifier arrays_opt

    Identifier      shift and go to state 976

    variableDeclarators            shift and go to state 785
    variableDeclaratorId           shift and go to state 496
    variableDeclarator             shift and go to state 498

state 900

    (354) forStatement -> FOR LPAREN forInit_opt SEMI . expression_opt SEMI forUpdate_opt RPAREN statement
    (362) expression_opt -> . expression
    (363) expression_opt -> . empty
    (456) expression -> . assignmentExpression
    (631) empty -> .
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    SEMI            reduce using rule 631 (empty -> .)
    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    unaryExpressionNotPlusMinus    shift and go to state 397
    shiftExpression                shift and go to state 552
    assignmentExpression           shift and go to state 543
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    fieldAccess                    shift and go to state 189
    integerLiteral                 shift and go to state 183
    empty                          shift and go to state 549
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 554
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    expression_opt                 shift and go to state 977
    conditionalOrExpression        shift and go to state 547
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    arrayCreationWithArrayInitializer shift and go to state 227
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    expression                     shift and go to state 545
    classInstanceCreationExpression shift and go to state 198

state 901

    (361) statementExpressionList -> statementExpressionList COMMA . statementExpression
    (326) statementExpression -> . assignment
    (327) statementExpression -> . preIncrementExpression
    (328) statementExpression -> . preDecrementExpression
    (329) statementExpression -> . postIncrementExpression
    (330) statementExpression -> . postDecrementExpression
    (331) statementExpression -> . methodInvocation
    (332) statementExpression -> . classInstanceCreationExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (442) classInstanceCreationExpressionName -> . name DOT
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE

    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    SUPER           shift and go to state 765
    NEW             shift and go to state 326
    Identifier      shift and go to state 68
    THIS            shift and go to state 181
    LPAREN          shift and go to state 348
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    primary                        shift and go to state 759
    postDecrementExpression        shift and go to state 306
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 308
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 311
    assignment                     shift and go to state 346
    fieldAccess                    shift and go to state 189
    integerLiteral                 shift and go to state 183
    classInstanceCreationExpressionName shift and go to state 187
    primaryNoNewArray              shift and go to state 178
    FloatingPointLiteral           shift and go to state 214
    postIncrementExpression        shift and go to state 293
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 298
    name                           shift and go to state 978
    primitiveType                  shift and go to state 219
    statementExpression            shift and go to state 979
    preDecrementExpression         shift and go to state 320
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 322

state 902

    (369) enhancedForStatementHead -> enhancedForStatementHeadInit COLON expression RPAREN .

    IF              reduce using rule 369 (enhancedForStatementHead -> enhancedForStatementHeadInit COLON expression RPAREN .)
    WHILE           reduce using rule 369 (enhancedForStatementHead -> enhancedForStatementHeadInit COLON expression RPAREN .)
    FOR             reduce using rule 369 (enhancedForStatementHead -> enhancedForStatementHeadInit COLON expression RPAREN .)
    BLPAREN         reduce using rule 369 (enhancedForStatementHead -> enhancedForStatementHeadInit COLON expression RPAREN .)
    ASSERT          reduce using rule 369 (enhancedForStatementHead -> enhancedForStatementHeadInit COLON expression RPAREN .)
    SEMI            reduce using rule 369 (enhancedForStatementHead -> enhancedForStatementHeadInit COLON expression RPAREN .)
    SWITCH          reduce using rule 369 (enhancedForStatementHead -> enhancedForStatementHeadInit COLON expression RPAREN .)
    DO              reduce using rule 369 (enhancedForStatementHead -> enhancedForStatementHeadInit COLON expression RPAREN .)
    BREAK           reduce using rule 369 (enhancedForStatementHead -> enhancedForStatementHeadInit COLON expression RPAREN .)
    CONTINUE        reduce using rule 369 (enhancedForStatementHead -> enhancedForStatementHeadInit COLON expression RPAREN .)
    RETURN          reduce using rule 369 (enhancedForStatementHead -> enhancedForStatementHeadInit COLON expression RPAREN .)
    SYNCHRONIZED    reduce using rule 369 (enhancedForStatementHead -> enhancedForStatementHeadInit COLON expression RPAREN .)
    THROW           reduce using rule 369 (enhancedForStatementHead -> enhancedForStatementHeadInit COLON expression RPAREN .)
    TRY             reduce using rule 369 (enhancedForStatementHead -> enhancedForStatementHeadInit COLON expression RPAREN .)
    Identifier      reduce using rule 369 (enhancedForStatementHead -> enhancedForStatementHeadInit COLON expression RPAREN .)
    THIS            reduce using rule 369 (enhancedForStatementHead -> enhancedForStatementHeadInit COLON expression RPAREN .)
    SUPER           reduce using rule 369 (enhancedForStatementHead -> enhancedForStatementHeadInit COLON expression RPAREN .)
    OP_INC          reduce using rule 369 (enhancedForStatementHead -> enhancedForStatementHeadInit COLON expression RPAREN .)
    OP_DEC          reduce using rule 369 (enhancedForStatementHead -> enhancedForStatementHeadInit COLON expression RPAREN .)
    NEW             reduce using rule 369 (enhancedForStatementHead -> enhancedForStatementHeadInit COLON expression RPAREN .)
    LESS            reduce using rule 369 (enhancedForStatementHead -> enhancedForStatementHeadInit COLON expression RPAREN .)
    LPAREN          reduce using rule 369 (enhancedForStatementHead -> enhancedForStatementHeadInit COLON expression RPAREN .)
    CharacterLiteral reduce using rule 369 (enhancedForStatementHead -> enhancedForStatementHeadInit COLON expression RPAREN .)
    StringLiteral   reduce using rule 369 (enhancedForStatementHead -> enhancedForStatementHeadInit COLON expression RPAREN .)
    NULL            reduce using rule 369 (enhancedForStatementHead -> enhancedForStatementHeadInit COLON expression RPAREN .)
    BOOLEAN         reduce using rule 369 (enhancedForStatementHead -> enhancedForStatementHeadInit COLON expression RPAREN .)
    VOID            reduce using rule 369 (enhancedForStatementHead -> enhancedForStatementHeadInit COLON expression RPAREN .)
    BYTE            reduce using rule 369 (enhancedForStatementHead -> enhancedForStatementHeadInit COLON expression RPAREN .)
    SHORT           reduce using rule 369 (enhancedForStatementHead -> enhancedForStatementHeadInit COLON expression RPAREN .)
    INT             reduce using rule 369 (enhancedForStatementHead -> enhancedForStatementHeadInit COLON expression RPAREN .)
    LONG            reduce using rule 369 (enhancedForStatementHead -> enhancedForStatementHeadInit COLON expression RPAREN .)
    CHAR            reduce using rule 369 (enhancedForStatementHead -> enhancedForStatementHeadInit COLON expression RPAREN .)
    FLOAT           reduce using rule 369 (enhancedForStatementHead -> enhancedForStatementHeadInit COLON expression RPAREN .)
    DOUBLE          reduce using rule 369 (enhancedForStatementHead -> enhancedForStatementHeadInit COLON expression RPAREN .)
    LONG_NUMBER     reduce using rule 369 (enhancedForStatementHead -> enhancedForStatementHeadInit COLON expression RPAREN .)
    LONG_HEX_NUMBER reduce using rule 369 (enhancedForStatementHead -> enhancedForStatementHeadInit COLON expression RPAREN .)
    NON_INTEGER_1   reduce using rule 369 (enhancedForStatementHead -> enhancedForStatementHeadInit COLON expression RPAREN .)
    NON_INTEGER_2   reduce using rule 369 (enhancedForStatementHead -> enhancedForStatementHeadInit COLON expression RPAREN .)
    NON_INTEGER_3   reduce using rule 369 (enhancedForStatementHead -> enhancedForStatementHeadInit COLON expression RPAREN .)
    NON_INTEGER_4   reduce using rule 369 (enhancedForStatementHead -> enhancedForStatementHeadInit COLON expression RPAREN .)
    NON_INTEGER_5   reduce using rule 369 (enhancedForStatementHead -> enhancedForStatementHeadInit COLON expression RPAREN .)
    NON_INTEGER_6   reduce using rule 369 (enhancedForStatementHead -> enhancedForStatementHeadInit COLON expression RPAREN .)
    TRUE            reduce using rule 369 (enhancedForStatementHead -> enhancedForStatementHeadInit COLON expression RPAREN .)
    FALSE           reduce using rule 369 (enhancedForStatementHead -> enhancedForStatementHeadInit COLON expression RPAREN .)


state 903

    (407) catches -> catches catchClause .

    CATCH           reduce using rule 407 (catches -> catches catchClause .)
    IF              reduce using rule 407 (catches -> catches catchClause .)
    WHILE           reduce using rule 407 (catches -> catches catchClause .)
    FOR             reduce using rule 407 (catches -> catches catchClause .)
    BLPAREN         reduce using rule 407 (catches -> catches catchClause .)
    ASSERT          reduce using rule 407 (catches -> catches catchClause .)
    SEMI            reduce using rule 407 (catches -> catches catchClause .)
    SWITCH          reduce using rule 407 (catches -> catches catchClause .)
    DO              reduce using rule 407 (catches -> catches catchClause .)
    BREAK           reduce using rule 407 (catches -> catches catchClause .)
    CONTINUE        reduce using rule 407 (catches -> catches catchClause .)
    RETURN          reduce using rule 407 (catches -> catches catchClause .)
    SYNCHRONIZED    reduce using rule 407 (catches -> catches catchClause .)
    THROW           reduce using rule 407 (catches -> catches catchClause .)
    TRY             reduce using rule 407 (catches -> catches catchClause .)
    Identifier      reduce using rule 407 (catches -> catches catchClause .)
    AT              reduce using rule 407 (catches -> catches catchClause .)
    BOOLEAN         reduce using rule 407 (catches -> catches catchClause .)
    VOID            reduce using rule 407 (catches -> catches catchClause .)
    BYTE            reduce using rule 407 (catches -> catches catchClause .)
    SHORT           reduce using rule 407 (catches -> catches catchClause .)
    INT             reduce using rule 407 (catches -> catches catchClause .)
    LONG            reduce using rule 407 (catches -> catches catchClause .)
    CHAR            reduce using rule 407 (catches -> catches catchClause .)
    FLOAT           reduce using rule 407 (catches -> catches catchClause .)
    DOUBLE          reduce using rule 407 (catches -> catches catchClause .)
    PUBLIC          reduce using rule 407 (catches -> catches catchClause .)
    PROTECTED       reduce using rule 407 (catches -> catches catchClause .)
    PRIVATE         reduce using rule 407 (catches -> catches catchClause .)
    STATIC          reduce using rule 407 (catches -> catches catchClause .)
    ABSTRACT        reduce using rule 407 (catches -> catches catchClause .)
    FINAL           reduce using rule 407 (catches -> catches catchClause .)
    NATIVE          reduce using rule 407 (catches -> catches catchClause .)
    TRANSIENT       reduce using rule 407 (catches -> catches catchClause .)
    VOLATILE        reduce using rule 407 (catches -> catches catchClause .)
    STRICTFP        reduce using rule 407 (catches -> catches catchClause .)
    THIS            reduce using rule 407 (catches -> catches catchClause .)
    SUPER           reduce using rule 407 (catches -> catches catchClause .)
    OP_INC          reduce using rule 407 (catches -> catches catchClause .)
    OP_DEC          reduce using rule 407 (catches -> catches catchClause .)
    NEW             reduce using rule 407 (catches -> catches catchClause .)
    LESS            reduce using rule 407 (catches -> catches catchClause .)
    LPAREN          reduce using rule 407 (catches -> catches catchClause .)
    CharacterLiteral reduce using rule 407 (catches -> catches catchClause .)
    StringLiteral   reduce using rule 407 (catches -> catches catchClause .)
    NULL            reduce using rule 407 (catches -> catches catchClause .)
    LONG_NUMBER     reduce using rule 407 (catches -> catches catchClause .)
    LONG_HEX_NUMBER reduce using rule 407 (catches -> catches catchClause .)
    NON_INTEGER_1   reduce using rule 407 (catches -> catches catchClause .)
    NON_INTEGER_2   reduce using rule 407 (catches -> catches catchClause .)
    NON_INTEGER_3   reduce using rule 407 (catches -> catches catchClause .)
    NON_INTEGER_4   reduce using rule 407 (catches -> catches catchClause .)
    NON_INTEGER_5   reduce using rule 407 (catches -> catches catchClause .)
    NON_INTEGER_6   reduce using rule 407 (catches -> catches catchClause .)
    TRUE            reduce using rule 407 (catches -> catches catchClause .)
    FALSE           reduce using rule 407 (catches -> catches catchClause .)
    INTERFACE       reduce using rule 407 (catches -> catches catchClause .)
    ENUM            reduce using rule 407 (catches -> catches catchClause .)
    CLASS           reduce using rule 407 (catches -> catches catchClause .)
    BRPAREN         reduce using rule 407 (catches -> catches catchClause .)
    CASE            reduce using rule 407 (catches -> catches catchClause .)
    DEFAULT         reduce using rule 407 (catches -> catches catchClause .)
    FINALLY         reduce using rule 407 (catches -> catches catchClause .)
    ELSE            reduce using rule 407 (catches -> catches catchClause .)


state 904

    (408) catchClause -> CATCH LPAREN . catchFormalParameter RPAREN block
    (409) catchFormalParameter -> . modifiers_opt catchType variableDeclaratorId
    (120) modifiers_opt -> . modifiers
    (121) modifiers_opt -> . empty
    (122) modifiers -> . modifier
    (123) modifiers -> . modifiers modifier
    (631) empty -> .
    (124) modifier -> . PUBLIC
    (125) modifier -> . PROTECTED
    (126) modifier -> . PRIVATE
    (127) modifier -> . STATIC
    (128) modifier -> . ABSTRACT
    (129) modifier -> . FINAL
    (130) modifier -> . NATIVE
    (131) modifier -> . SYNCHRONIZED
    (132) modifier -> . TRANSIENT
    (133) modifier -> . VOLATILE
    (134) modifier -> . STRICTFP
    (135) modifier -> . annotation
    (270) annotation -> . normalAnnotation
    (271) annotation -> . markerAnnotation
    (272) annotation -> . singleMemberAnnotation
    (273) normalAnnotation -> . annotationName LPAREN memberValuePairs_opt RPAREN
    (280) markerAnnotation -> . annotationName
    (281) singleMemberAnnotation -> . annotationName LPAREN singleMemberAnnotationMemberValue RPAREN
    (274) annotationName -> . AT name

    BOOLEAN         reduce using rule 631 (empty -> .)
    VOID            reduce using rule 631 (empty -> .)
    BYTE            reduce using rule 631 (empty -> .)
    SHORT           reduce using rule 631 (empty -> .)
    INT             reduce using rule 631 (empty -> .)
    LONG            reduce using rule 631 (empty -> .)
    CHAR            reduce using rule 631 (empty -> .)
    FLOAT           reduce using rule 631 (empty -> .)
    DOUBLE          reduce using rule 631 (empty -> .)
    Identifier      reduce using rule 631 (empty -> .)
    PUBLIC          shift and go to state 46
    PROTECTED       shift and go to state 6
    PRIVATE         shift and go to state 14
    STATIC          shift and go to state 7
    ABSTRACT        shift and go to state 5
    FINAL           shift and go to state 11
    NATIVE          shift and go to state 12
    SYNCHRONIZED    shift and go to state 2
    TRANSIENT       shift and go to state 19
    VOLATILE        shift and go to state 43
    STRICTFP        shift and go to state 18
    AT              shift and go to state 155

    markerAnnotation               shift and go to state 9
    modifiers                      shift and go to state 156
    modifiers_opt                  shift and go to state 980
    annotationName                 shift and go to state 40
    singleMemberAnnotation         shift and go to state 8
    empty                          shift and go to state 74
    normalAnnotation               shift and go to state 24
    catchFormalParameter           shift and go to state 981
    modifier                       shift and go to state 45
    annotation                     shift and go to state 35

state 905

    (402) tryStatement -> TRY tryBlock catches_opt finally .

    IF              reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    WHILE           reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    FOR             reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    BLPAREN         reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    ASSERT          reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    SEMI            reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    SWITCH          reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    DO              reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    BREAK           reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    CONTINUE        reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    RETURN          reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    SYNCHRONIZED    reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    THROW           reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    TRY             reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    Identifier      reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    AT              reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    BOOLEAN         reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    VOID            reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    BYTE            reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    SHORT           reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    INT             reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    LONG            reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    CHAR            reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    FLOAT           reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    DOUBLE          reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    PUBLIC          reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    PROTECTED       reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    PRIVATE         reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    STATIC          reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    ABSTRACT        reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    FINAL           reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    NATIVE          reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    TRANSIENT       reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    VOLATILE        reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    STRICTFP        reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    THIS            reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    SUPER           reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    OP_INC          reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    OP_DEC          reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    NEW             reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    LESS            reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    LPAREN          reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    CharacterLiteral reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    StringLiteral   reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    NULL            reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    LONG_NUMBER     reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    LONG_HEX_NUMBER reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    NON_INTEGER_1   reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    NON_INTEGER_2   reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    NON_INTEGER_3   reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    NON_INTEGER_4   reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    NON_INTEGER_5   reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    NON_INTEGER_6   reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    TRUE            reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    FALSE           reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    INTERFACE       reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    ENUM            reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    CLASS           reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    BRPAREN         reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    CASE            reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    DEFAULT         reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)
    ELSE            reduce using rule 402 (tryStatement -> TRY tryBlock catches_opt finally .)


state 906

    (423) finally -> FINALLY . block
    (283) block -> . BLPAREN blockStatements_opt BRPAREN

    BLPAREN         shift and go to state 120

    block                          shift and go to state 982

state 907

    (404) catches_opt -> catches .
    (407) catches -> catches . catchClause
    (408) catchClause -> . CATCH LPAREN catchFormalParameter RPAREN block

    FINALLY         reduce using rule 404 (catches_opt -> catches .)
    IF              reduce using rule 404 (catches_opt -> catches .)
    WHILE           reduce using rule 404 (catches_opt -> catches .)
    FOR             reduce using rule 404 (catches_opt -> catches .)
    BLPAREN         reduce using rule 404 (catches_opt -> catches .)
    ASSERT          reduce using rule 404 (catches_opt -> catches .)
    SEMI            reduce using rule 404 (catches_opt -> catches .)
    SWITCH          reduce using rule 404 (catches_opt -> catches .)
    DO              reduce using rule 404 (catches_opt -> catches .)
    BREAK           reduce using rule 404 (catches_opt -> catches .)
    CONTINUE        reduce using rule 404 (catches_opt -> catches .)
    RETURN          reduce using rule 404 (catches_opt -> catches .)
    SYNCHRONIZED    reduce using rule 404 (catches_opt -> catches .)
    THROW           reduce using rule 404 (catches_opt -> catches .)
    TRY             reduce using rule 404 (catches_opt -> catches .)
    Identifier      reduce using rule 404 (catches_opt -> catches .)
    AT              reduce using rule 404 (catches_opt -> catches .)
    BOOLEAN         reduce using rule 404 (catches_opt -> catches .)
    VOID            reduce using rule 404 (catches_opt -> catches .)
    BYTE            reduce using rule 404 (catches_opt -> catches .)
    SHORT           reduce using rule 404 (catches_opt -> catches .)
    INT             reduce using rule 404 (catches_opt -> catches .)
    LONG            reduce using rule 404 (catches_opt -> catches .)
    CHAR            reduce using rule 404 (catches_opt -> catches .)
    FLOAT           reduce using rule 404 (catches_opt -> catches .)
    DOUBLE          reduce using rule 404 (catches_opt -> catches .)
    PUBLIC          reduce using rule 404 (catches_opt -> catches .)
    PROTECTED       reduce using rule 404 (catches_opt -> catches .)
    PRIVATE         reduce using rule 404 (catches_opt -> catches .)
    STATIC          reduce using rule 404 (catches_opt -> catches .)
    ABSTRACT        reduce using rule 404 (catches_opt -> catches .)
    FINAL           reduce using rule 404 (catches_opt -> catches .)
    NATIVE          reduce using rule 404 (catches_opt -> catches .)
    TRANSIENT       reduce using rule 404 (catches_opt -> catches .)
    VOLATILE        reduce using rule 404 (catches_opt -> catches .)
    STRICTFP        reduce using rule 404 (catches_opt -> catches .)
    THIS            reduce using rule 404 (catches_opt -> catches .)
    SUPER           reduce using rule 404 (catches_opt -> catches .)
    OP_INC          reduce using rule 404 (catches_opt -> catches .)
    OP_DEC          reduce using rule 404 (catches_opt -> catches .)
    NEW             reduce using rule 404 (catches_opt -> catches .)
    LESS            reduce using rule 404 (catches_opt -> catches .)
    LPAREN          reduce using rule 404 (catches_opt -> catches .)
    CharacterLiteral reduce using rule 404 (catches_opt -> catches .)
    StringLiteral   reduce using rule 404 (catches_opt -> catches .)
    NULL            reduce using rule 404 (catches_opt -> catches .)
    LONG_NUMBER     reduce using rule 404 (catches_opt -> catches .)
    LONG_HEX_NUMBER reduce using rule 404 (catches_opt -> catches .)
    NON_INTEGER_1   reduce using rule 404 (catches_opt -> catches .)
    NON_INTEGER_2   reduce using rule 404 (catches_opt -> catches .)
    NON_INTEGER_3   reduce using rule 404 (catches_opt -> catches .)
    NON_INTEGER_4   reduce using rule 404 (catches_opt -> catches .)
    NON_INTEGER_5   reduce using rule 404 (catches_opt -> catches .)
    NON_INTEGER_6   reduce using rule 404 (catches_opt -> catches .)
    TRUE            reduce using rule 404 (catches_opt -> catches .)
    FALSE           reduce using rule 404 (catches_opt -> catches .)
    INTERFACE       reduce using rule 404 (catches_opt -> catches .)
    ENUM            reduce using rule 404 (catches_opt -> catches .)
    CLASS           reduce using rule 404 (catches_opt -> catches .)
    BRPAREN         reduce using rule 404 (catches_opt -> catches .)
    CASE            reduce using rule 404 (catches_opt -> catches .)
    DEFAULT         reduce using rule 404 (catches_opt -> catches .)
    ELSE            reduce using rule 404 (catches_opt -> catches .)
    CATCH           shift and go to state 770

    catchClause                    shift and go to state 903

state 908

    (413) tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .
    (414) tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt . finally
    (423) finally -> . FINALLY block

    IF              reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    WHILE           reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    FOR             reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    BLPAREN         reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    ASSERT          reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    SEMI            reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    SWITCH          reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    DO              reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    BREAK           reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    CONTINUE        reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    RETURN          reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    SYNCHRONIZED    reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    THROW           reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    TRY             reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    Identifier      reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    AT              reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    BOOLEAN         reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    VOID            reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    BYTE            reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    SHORT           reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    INT             reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    LONG            reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    CHAR            reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    FLOAT           reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    DOUBLE          reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    PUBLIC          reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    PROTECTED       reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    PRIVATE         reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    STATIC          reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    ABSTRACT        reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    FINAL           reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    NATIVE          reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    TRANSIENT       reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    VOLATILE        reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    STRICTFP        reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    THIS            reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    SUPER           reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    OP_INC          reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    OP_DEC          reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    NEW             reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    LESS            reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    LPAREN          reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    CharacterLiteral reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    StringLiteral   reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    NULL            reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    LONG_NUMBER     reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    LONG_HEX_NUMBER reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    NON_INTEGER_1   reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    NON_INTEGER_2   reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    NON_INTEGER_3   reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    NON_INTEGER_4   reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    NON_INTEGER_5   reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    NON_INTEGER_6   reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    TRUE            reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    FALSE           reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    INTERFACE       reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    ENUM            reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    CLASS           reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    BRPAREN         reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    CASE            reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    DEFAULT         reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    ELSE            reduce using rule 413 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt .)
    FINALLY         shift and go to state 906

    finally                        shift and go to state 983

state 909

    (421) resource -> type variableDeclaratorId . ASS variableInitializer

    ASS             shift and go to state 984


state 910

    (416) semi_opt -> SEMI .
    (420) trailingSemicolon -> SEMI .

    RPAREN          reduce using rule 416 (semi_opt -> SEMI .)
    BOOLEAN         reduce using rule 420 (trailingSemicolon -> SEMI .)
    VOID            reduce using rule 420 (trailingSemicolon -> SEMI .)
    BYTE            reduce using rule 420 (trailingSemicolon -> SEMI .)
    SHORT           reduce using rule 420 (trailingSemicolon -> SEMI .)
    INT             reduce using rule 420 (trailingSemicolon -> SEMI .)
    LONG            reduce using rule 420 (trailingSemicolon -> SEMI .)
    CHAR            reduce using rule 420 (trailingSemicolon -> SEMI .)
    FLOAT           reduce using rule 420 (trailingSemicolon -> SEMI .)
    DOUBLE          reduce using rule 420 (trailingSemicolon -> SEMI .)
    PUBLIC          reduce using rule 420 (trailingSemicolon -> SEMI .)
    PROTECTED       reduce using rule 420 (trailingSemicolon -> SEMI .)
    PRIVATE         reduce using rule 420 (trailingSemicolon -> SEMI .)
    STATIC          reduce using rule 420 (trailingSemicolon -> SEMI .)
    ABSTRACT        reduce using rule 420 (trailingSemicolon -> SEMI .)
    FINAL           reduce using rule 420 (trailingSemicolon -> SEMI .)
    NATIVE          reduce using rule 420 (trailingSemicolon -> SEMI .)
    SYNCHRONIZED    reduce using rule 420 (trailingSemicolon -> SEMI .)
    TRANSIENT       reduce using rule 420 (trailingSemicolon -> SEMI .)
    VOLATILE        reduce using rule 420 (trailingSemicolon -> SEMI .)
    STRICTFP        reduce using rule 420 (trailingSemicolon -> SEMI .)
    Identifier      reduce using rule 420 (trailingSemicolon -> SEMI .)
    AT              reduce using rule 420 (trailingSemicolon -> SEMI .)


state 911

    (415) resourceSpecification -> LPAREN resources semi_opt . RPAREN

    RPAREN          shift and go to state 985


state 912

    (417) semi_opt -> empty .

    RPAREN          reduce using rule 417 (semi_opt -> empty .)


state 913

    (419) resources -> resources trailingSemicolon . resource
    (421) resource -> . type variableDeclaratorId ASS variableInitializer
    (422) resource -> . modifiers type variableDeclaratorId ASS variableInitializer
    (33) type -> . primitiveType
    (34) type -> . referenceType
    (122) modifiers -> . modifier
    (123) modifiers -> . modifiers modifier
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (44) referenceType -> . classOrInterfaceType
    (45) referenceType -> . arrayType
    (124) modifier -> . PUBLIC
    (125) modifier -> . PROTECTED
    (126) modifier -> . PRIVATE
    (127) modifier -> . STATIC
    (128) modifier -> . ABSTRACT
    (129) modifier -> . FINAL
    (130) modifier -> . NATIVE
    (131) modifier -> . SYNCHRONIZED
    (132) modifier -> . TRANSIENT
    (133) modifier -> . VOLATILE
    (134) modifier -> . STRICTFP
    (135) modifier -> . annotation
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (54) arrayType -> . genericType arrays
    (55) arrayType -> . genericType DOT name arrays
    (56) arrayType -> . primitiveType arrays
    (57) arrayType -> . name arrays
    (270) annotation -> . normalAnnotation
    (271) annotation -> . markerAnnotation
    (272) annotation -> . singleMemberAnnotation
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (273) normalAnnotation -> . annotationName LPAREN memberValuePairs_opt RPAREN
    (280) markerAnnotation -> . annotationName
    (281) singleMemberAnnotation -> . annotationName LPAREN singleMemberAnnotationMemberValue RPAREN
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (274) annotationName -> . AT name

    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    PUBLIC          shift and go to state 46
    PROTECTED       shift and go to state 6
    PRIVATE         shift and go to state 14
    STATIC          shift and go to state 7
    ABSTRACT        shift and go to state 5
    FINAL           shift and go to state 11
    NATIVE          shift and go to state 12
    SYNCHRONIZED    shift and go to state 2
    TRANSIENT       shift and go to state 19
    VOLATILE        shift and go to state 43
    STRICTFP        shift and go to state 18
    Identifier      shift and go to state 68
    AT              shift and go to state 155

    qualifiedName                  shift and go to state 64
    singleMemberAnnotation         shift and go to state 8
    arrayType                      shift and go to state 269
    genericType                    shift and go to state 271
    markerAnnotation               shift and go to state 9
    classOrInterfaceType           shift and go to state 272
    simpleName                     shift and go to state 66
    referenceType                  shift and go to state 273
    type                           shift and go to state 774
    annotation                     shift and go to state 35
    modifiers                      shift and go to state 776
    resource                       shift and go to state 986
    name                           shift and go to state 276
    annotationName                 shift and go to state 40
    primitiveType                  shift and go to state 277
    classOrInterface               shift and go to state 122
    normalAnnotation               shift and go to state 24
    modifier                       shift and go to state 45

state 914

    (422) resource -> modifiers type . variableDeclaratorId ASS variableInitializer
    (301) variableDeclaratorId -> . Identifier arrays_opt

    Identifier      shift and go to state 575

    variableDeclaratorId           shift and go to state 987

state 915

    (430) explicitConstructorInvocation -> primary DOT THIS LPAREN . argumentList_opt RPAREN SEMI
    (232) argumentList_opt -> . argumentList
    (233) argumentList_opt -> . empty
    (234) argumentList -> . expression
    (235) argumentList -> . argumentList COMMA expression
    (631) empty -> .
    (456) expression -> . assignmentExpression
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    RPAREN          reduce using rule 631 (empty -> .)
    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    argumentList                   shift and go to state 602
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    argumentList_opt               shift and go to state 988
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    assignmentExpression           shift and go to state 543
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    fieldAccess                    shift and go to state 189
    integerLiteral                 shift and go to state 183
    empty                          shift and go to state 601
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 554
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    unaryExpressionNotPlusMinus    shift and go to state 397
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    expression                     shift and go to state 600
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 916

    (434) explicitConstructorInvocation -> primary DOT typeArguments THIS . LPAREN argumentList_opt RPAREN SEMI

    LPAREN          shift and go to state 989


state 917

    (432) explicitConstructorInvocation -> primary DOT typeArguments SUPER . LPAREN argumentList_opt RPAREN SEMI

    LPAREN          shift and go to state 990


state 918

    (428) explicitConstructorInvocation -> primary DOT SUPER LPAREN . argumentList_opt RPAREN SEMI
    (232) argumentList_opt -> . argumentList
    (233) argumentList_opt -> . empty
    (234) argumentList -> . expression
    (235) argumentList -> . argumentList COMMA expression
    (631) empty -> .
    (456) expression -> . assignmentExpression
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    RPAREN          reduce using rule 631 (empty -> .)
    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    argumentList                   shift and go to state 602
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    argumentList_opt               shift and go to state 991
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    assignmentExpression           shift and go to state 543
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    fieldAccess                    shift and go to state 189
    integerLiteral                 shift and go to state 183
    empty                          shift and go to state 601
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 554
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    unaryExpressionNotPlusMinus    shift and go to state 397
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    expression                     shift and go to state 600
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 919

    (352) whileStatement -> WHILE LPAREN expression RPAREN . statement
    (304) statement -> . statementWithoutTrailingSubStatement
    (305) statement -> . labeldStatement
    (306) statement -> . ifThenStatement
    (307) statement -> . ifThenElseStatement
    (308) statement -> . whileStatement
    (309) statement -> . forStatement
    (310) statement -> . enhancedForStatement
    (311) statementWithoutTrailingSubStatement -> . block
    (312) statementWithoutTrailingSubStatement -> . expressionStatement
    (313) statementWithoutTrailingSubStatement -> . assertStatement
    (314) statementWithoutTrailingSubStatement -> . emptyStatement
    (315) statementWithoutTrailingSubStatement -> . switchStatement
    (316) statementWithoutTrailingSubStatement -> . doStatement
    (317) statementWithoutTrailingSubStatement -> . breakStatement
    (318) statementWithoutTrailingSubStatement -> . continueStatement
    (319) statementWithoutTrailingSubStatement -> . returnStatement
    (320) statementWithoutTrailingSubStatement -> . synchronizedStatement
    (321) statementWithoutTrailingSubStatement -> . throwStatment
    (322) statementWithoutTrailingSubStatement -> . tryStatement
    (323) statementWithoutTrailingSubStatement -> . tryStatementWithResources
    (346) labeldStatement -> . label COLON statement
    (349) ifThenStatement -> . IF LPAREN expression RPAREN statement
    (350) ifThenElseStatement -> . IF LPAREN expression RPAREN statementNoShortIf ELSE statement
    (352) whileStatement -> . WHILE LPAREN expression RPAREN statement
    (354) forStatement -> . FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement
    (367) enhancedForStatement -> . enhancedForStatementHead statement
    (283) block -> . BLPAREN blockStatements_opt BRPAREN
    (324) expressionStatement -> . statementExpression SEMI
    (325) expressionStatement -> . explicitConstructorInvocation
    (377) assertStatement -> . ASSERT expression SEMI
    (378) assertStatement -> . ASSERT expression COLON expression SEMI
    (379) emptyStatement -> . SEMI
    (380) switchStatement -> . SWITCH LPAREN expression RPAREN switchBlock
    (393) doStatement -> . DO statement WHILE LPAREN expression RPAREN SEMI
    (394) breakStatement -> . BREAK SEMI
    (395) breakStatement -> . BREAK Identifier SEMI
    (396) continueStatement -> . CONTINUE SEMI
    (397) continueStatement -> . CONTINUE Identifier SEMI
    (398) returnStatement -> . RETURN expression_opt SEMI
    (399) synchronizedStatement -> . SYNCHRONIZED LPAREN expression RPAREN block
    (400) throwStatment -> . THROW expression SEMI
    (401) tryStatement -> . TRY tryBlock catches
    (402) tryStatement -> . TRY tryBlock catches_opt finally
    (413) tryStatementWithResources -> . TRY resourceSpecification tryBlock catches_opt
    (414) tryStatementWithResources -> . TRY resourceSpecification tryBlock catches_opt finally
    (348) label -> . Identifier
    (369) enhancedForStatementHead -> . enhancedForStatementHeadInit COLON expression RPAREN
    (326) statementExpression -> . assignment
    (327) statementExpression -> . preIncrementExpression
    (328) statementExpression -> . preDecrementExpression
    (329) statementExpression -> . postIncrementExpression
    (330) statementExpression -> . postDecrementExpression
    (331) statementExpression -> . methodInvocation
    (332) statementExpression -> . classInstanceCreationExpression
    (424) explicitConstructorInvocation -> . THIS LPAREN argumentList_opt RPAREN SEMI
    (425) explicitConstructorInvocation -> . SUPER LPAREN argumentList_opt RPAREN SEMI
    (426) explicitConstructorInvocation -> . typeArguments SUPER LPAREN argumentList RPAREN SEMI
    (427) explicitConstructorInvocation -> . typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (428) explicitConstructorInvocation -> . primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI
    (429) explicitConstructorInvocation -> . name DOT SUPER LPAREN argumentList_opt RPAREN SEMI
    (430) explicitConstructorInvocation -> . primary DOT THIS LPAREN argumentList_opt RPAREN SEMI
    (431) explicitConstructorInvocation -> . name DOT THIS LPAREN argumentList_opt RPAREN SEMI
    (432) explicitConstructorInvocation -> . primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI
    (433) explicitConstructorInvocation -> . name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI
    (434) explicitConstructorInvocation -> . primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (435) explicitConstructorInvocation -> . name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (370) enhancedForStatementHeadInit -> . FOR LPAREN type Identifier arrays_opt
    (371) enhancedForStatementHeadInit -> . FOR LPAREN modifiers type Identifier arrays_opt
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (82) typeArguments -> . LESS typeArgumentList1
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (442) classInstanceCreationExpressionName -> . name DOT
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE

    IF              shift and go to state 349
    WHILE           shift and go to state 325
    FOR             shift and go to state 312
    BLPAREN         shift and go to state 120
    ASSERT          shift and go to state 336
    SEMI            shift and go to state 341
    SWITCH          shift and go to state 328
    DO              shift and go to state 335
    BREAK           shift and go to state 305
    CONTINUE        shift and go to state 318
    RETURN          shift and go to state 302
    SYNCHRONIZED    shift and go to state 518
    THROW           shift and go to state 354
    TRY             shift and go to state 314
    Identifier      shift and go to state 316
    THIS            shift and go to state 300
    SUPER           shift and go to state 353
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    NEW             shift and go to state 326
    LESS            shift and go to state 287
    LPAREN          shift and go to state 348
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    forStatement                   shift and go to state 286
    qualifiedName                  shift and go to state 64
    continueStatement              shift and go to state 304
    arrayCreationWithArrayInitializer shift and go to state 227
    switchStatement                shift and go to state 288
    primary                        shift and go to state 324
    arrayCreationWithoutArrayInitializer shift and go to state 232
    breakStatement                 shift and go to state 337
    tryStatementWithResources      shift and go to state 338
    assertStatement                shift and go to state 289
    synchronizedStatement          shift and go to state 339
    booleanLiteral                 shift and go to state 173
    doStatement                    shift and go to state 327
    postDecrementExpression        shift and go to state 306
    typeArguments                  shift and go to state 307
    literal                        shift and go to state 208
    labeldStatement                shift and go to state 329
    preIncrementExpression         shift and go to state 308
    label                          shift and go to state 309
    simpleName                     shift and go to state 66
    tryStatement                   shift and go to state 342
    throwStatment                  shift and go to state 310
    methodInvocation               shift and go to state 311
    statement                      shift and go to state 992
    arrayAccess                    shift and go to state 234
    ifThenElseStatement            shift and go to state 291
    fieldAccess                    shift and go to state 189
    statementWithoutTrailingSubStatement shift and go to state 344
    integerLiteral                 shift and go to state 183
    classInstanceCreationExpressionName shift and go to state 187
    FloatingPointLiteral           shift and go to state 214
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 346
    whileStatement                 shift and go to state 292
    enhancedForStatementHeadInit   shift and go to state 313
    postIncrementExpression        shift and go to state 293
    ifThenStatement                shift and go to state 347
    emptyStatement                 shift and go to state 295
    returnStatement                shift and go to state 297
    preDecrementExpression         shift and go to state 320
    postfixExpression              shift and go to state 298
    enhancedForStatementHead       shift and go to state 296
    name                           shift and go to state 517
    expressionStatement            shift and go to state 301
    primitiveType                  shift and go to state 219
    statementExpression            shift and go to state 350
    explicitConstructorInvocation  shift and go to state 351
    enhancedForStatement           shift and go to state 352
    block                          shift and go to state 321
    classInstanceCreationExpression shift and go to state 322

state 920

    (380) switchStatement -> SWITCH LPAREN expression RPAREN . switchBlock
    (381) switchBlock -> . BLPAREN BRPAREN
    (382) switchBlock -> . BLPAREN switchBlockStatements BRPAREN
    (383) switchBlock -> . BLPAREN switchLabels BRPAREN
    (384) switchBlock -> . BLPAREN switchBlockStatements switchLabels BRPAREN

    BLPAREN         shift and go to state 994

    switchBlock                    shift and go to state 993

state 921

    (393) doStatement -> DO statement WHILE LPAREN . expression RPAREN SEMI
    (456) expression -> . assignmentExpression
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    assignmentExpression           shift and go to state 543
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    fieldAccess                    shift and go to state 189
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 554
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    unaryExpressionNotPlusMinus    shift and go to state 397
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    expression                     shift and go to state 995
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 922

    (378) assertStatement -> ASSERT expression COLON expression . SEMI

    SEMI            shift and go to state 996


state 923

    (349) ifThenStatement -> IF LPAREN expression RPAREN . statement
    (350) ifThenElseStatement -> IF LPAREN expression RPAREN . statementNoShortIf ELSE statement
    (304) statement -> . statementWithoutTrailingSubStatement
    (305) statement -> . labeldStatement
    (306) statement -> . ifThenStatement
    (307) statement -> . ifThenElseStatement
    (308) statement -> . whileStatement
    (309) statement -> . forStatement
    (310) statement -> . enhancedForStatement
    (372) statementNoShortIf -> . statementWithoutTrailingSubStatement
    (373) statementNoShortIf -> . labeledStatementNoShortIf
    (374) statementNoShortIf -> . ifThenElseStatementNoShortIf
    (375) statementNoShortIf -> . whileStatementNoShortIf
    (376) statementNoShortIf -> . enhancedForStatementNoShortIf
    (311) statementWithoutTrailingSubStatement -> . block
    (312) statementWithoutTrailingSubStatement -> . expressionStatement
    (313) statementWithoutTrailingSubStatement -> . assertStatement
    (314) statementWithoutTrailingSubStatement -> . emptyStatement
    (315) statementWithoutTrailingSubStatement -> . switchStatement
    (316) statementWithoutTrailingSubStatement -> . doStatement
    (317) statementWithoutTrailingSubStatement -> . breakStatement
    (318) statementWithoutTrailingSubStatement -> . continueStatement
    (319) statementWithoutTrailingSubStatement -> . returnStatement
    (320) statementWithoutTrailingSubStatement -> . synchronizedStatement
    (321) statementWithoutTrailingSubStatement -> . throwStatment
    (322) statementWithoutTrailingSubStatement -> . tryStatement
    (323) statementWithoutTrailingSubStatement -> . tryStatementWithResources
    (346) labeldStatement -> . label COLON statement
    (349) ifThenStatement -> . IF LPAREN expression RPAREN statement
    (350) ifThenElseStatement -> . IF LPAREN expression RPAREN statementNoShortIf ELSE statement
    (352) whileStatement -> . WHILE LPAREN expression RPAREN statement
    (354) forStatement -> . FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement
    (367) enhancedForStatement -> . enhancedForStatementHead statement
    (347) labeledStatementNoShortIf -> . label COLON statementNoShortIf
    (351) ifThenElseStatementNoShortIf -> . IF LPAREN expression RPAREN statementNoShortIf ELSE statementNoShortIf
    (353) whileStatementNoShortIf -> . WHILE LPAREN expression RPAREN statementNoShortIf
    (368) enhancedForStatementNoShortIf -> . enhancedForStatementHead statementNoShortIf
    (283) block -> . BLPAREN blockStatements_opt BRPAREN
    (324) expressionStatement -> . statementExpression SEMI
    (325) expressionStatement -> . explicitConstructorInvocation
    (377) assertStatement -> . ASSERT expression SEMI
    (378) assertStatement -> . ASSERT expression COLON expression SEMI
    (379) emptyStatement -> . SEMI
    (380) switchStatement -> . SWITCH LPAREN expression RPAREN switchBlock
    (393) doStatement -> . DO statement WHILE LPAREN expression RPAREN SEMI
    (394) breakStatement -> . BREAK SEMI
    (395) breakStatement -> . BREAK Identifier SEMI
    (396) continueStatement -> . CONTINUE SEMI
    (397) continueStatement -> . CONTINUE Identifier SEMI
    (398) returnStatement -> . RETURN expression_opt SEMI
    (399) synchronizedStatement -> . SYNCHRONIZED LPAREN expression RPAREN block
    (400) throwStatment -> . THROW expression SEMI
    (401) tryStatement -> . TRY tryBlock catches
    (402) tryStatement -> . TRY tryBlock catches_opt finally
    (413) tryStatementWithResources -> . TRY resourceSpecification tryBlock catches_opt
    (414) tryStatementWithResources -> . TRY resourceSpecification tryBlock catches_opt finally
    (348) label -> . Identifier
    (369) enhancedForStatementHead -> . enhancedForStatementHeadInit COLON expression RPAREN
    (326) statementExpression -> . assignment
    (327) statementExpression -> . preIncrementExpression
    (328) statementExpression -> . preDecrementExpression
    (329) statementExpression -> . postIncrementExpression
    (330) statementExpression -> . postDecrementExpression
    (331) statementExpression -> . methodInvocation
    (332) statementExpression -> . classInstanceCreationExpression
    (424) explicitConstructorInvocation -> . THIS LPAREN argumentList_opt RPAREN SEMI
    (425) explicitConstructorInvocation -> . SUPER LPAREN argumentList_opt RPAREN SEMI
    (426) explicitConstructorInvocation -> . typeArguments SUPER LPAREN argumentList RPAREN SEMI
    (427) explicitConstructorInvocation -> . typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (428) explicitConstructorInvocation -> . primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI
    (429) explicitConstructorInvocation -> . name DOT SUPER LPAREN argumentList_opt RPAREN SEMI
    (430) explicitConstructorInvocation -> . primary DOT THIS LPAREN argumentList_opt RPAREN SEMI
    (431) explicitConstructorInvocation -> . name DOT THIS LPAREN argumentList_opt RPAREN SEMI
    (432) explicitConstructorInvocation -> . primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI
    (433) explicitConstructorInvocation -> . name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI
    (434) explicitConstructorInvocation -> . primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (435) explicitConstructorInvocation -> . name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (370) enhancedForStatementHeadInit -> . FOR LPAREN type Identifier arrays_opt
    (371) enhancedForStatementHeadInit -> . FOR LPAREN modifiers type Identifier arrays_opt
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (82) typeArguments -> . LESS typeArgumentList1
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (442) classInstanceCreationExpressionName -> . name DOT
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE

    IF              shift and go to state 1007
    WHILE           shift and go to state 998
    FOR             shift and go to state 312
    BLPAREN         shift and go to state 120
    ASSERT          shift and go to state 336
    SEMI            shift and go to state 341
    SWITCH          shift and go to state 328
    DO              shift and go to state 335
    BREAK           shift and go to state 305
    CONTINUE        shift and go to state 318
    RETURN          shift and go to state 302
    SYNCHRONIZED    shift and go to state 518
    THROW           shift and go to state 354
    TRY             shift and go to state 314
    Identifier      shift and go to state 316
    THIS            shift and go to state 300
    SUPER           shift and go to state 353
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    NEW             shift and go to state 326
    LESS            shift and go to state 287
    LPAREN          shift and go to state 348
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    forStatement                   shift and go to state 286
    labeledStatementNoShortIf      shift and go to state 1000
    qualifiedName                  shift and go to state 64
    continueStatement              shift and go to state 304
    arrayCreationWithArrayInitializer shift and go to state 227
    switchStatement                shift and go to state 288
    primary                        shift and go to state 324
    arrayCreationWithoutArrayInitializer shift and go to state 232
    breakStatement                 shift and go to state 337
    tryStatementWithResources      shift and go to state 338
    whileStatementNoShortIf        shift and go to state 1001
    assertStatement                shift and go to state 289
    synchronizedStatement          shift and go to state 339
    booleanLiteral                 shift and go to state 173
    doStatement                    shift and go to state 327
    postDecrementExpression        shift and go to state 306
    typeArguments                  shift and go to state 307
    literal                        shift and go to state 208
    tryStatement                   shift and go to state 342
    preIncrementExpression         shift and go to state 308
    label                          shift and go to state 999
    simpleName                     shift and go to state 66
    labeldStatement                shift and go to state 329
    statementNoShortIf             shift and go to state 1002
    methodInvocation               shift and go to state 311
    statement                      shift and go to state 1003
    arrayAccess                    shift and go to state 234
    ifThenElseStatement            shift and go to state 291
    fieldAccess                    shift and go to state 189
    statementWithoutTrailingSubStatement shift and go to state 1005
    integerLiteral                 shift and go to state 183
    statementExpression            shift and go to state 350
    classInstanceCreationExpressionName shift and go to state 187
    FloatingPointLiteral           shift and go to state 214
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 346
    whileStatement                 shift and go to state 292
    enhancedForStatementHeadInit   shift and go to state 313
    postIncrementExpression        shift and go to state 293
    enhancedForStatementNoShortIf  shift and go to state 1006
    ifThenStatement                shift and go to state 347
    ifThenElseStatementNoShortIf   shift and go to state 1004
    emptyStatement                 shift and go to state 295
    returnStatement                shift and go to state 297
    preDecrementExpression         shift and go to state 320
    postfixExpression              shift and go to state 298
    enhancedForStatementHead       shift and go to state 997
    name                           shift and go to state 517
    expressionStatement            shift and go to state 301
    primitiveType                  shift and go to state 219
    throwStatment                  shift and go to state 310
    explicitConstructorInvocation  shift and go to state 351
    enhancedForStatement           shift and go to state 352
    block                          shift and go to state 321
    classInstanceCreationExpression shift and go to state 322

state 924

    (425) explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN . SEMI

    SEMI            shift and go to state 1008


state 925

    (257) annotationMethodHeadName -> modifiers_opt typeParameters type Identifier LPAREN .

    PUBLIC          reduce using rule 257 (annotationMethodHeadName -> modifiers_opt typeParameters type Identifier LPAREN .)
    PROTECTED       reduce using rule 257 (annotationMethodHeadName -> modifiers_opt typeParameters type Identifier LPAREN .)
    PRIVATE         reduce using rule 257 (annotationMethodHeadName -> modifiers_opt typeParameters type Identifier LPAREN .)
    STATIC          reduce using rule 257 (annotationMethodHeadName -> modifiers_opt typeParameters type Identifier LPAREN .)
    ABSTRACT        reduce using rule 257 (annotationMethodHeadName -> modifiers_opt typeParameters type Identifier LPAREN .)
    FINAL           reduce using rule 257 (annotationMethodHeadName -> modifiers_opt typeParameters type Identifier LPAREN .)
    NATIVE          reduce using rule 257 (annotationMethodHeadName -> modifiers_opt typeParameters type Identifier LPAREN .)
    SYNCHRONIZED    reduce using rule 257 (annotationMethodHeadName -> modifiers_opt typeParameters type Identifier LPAREN .)
    TRANSIENT       reduce using rule 257 (annotationMethodHeadName -> modifiers_opt typeParameters type Identifier LPAREN .)
    VOLATILE        reduce using rule 257 (annotationMethodHeadName -> modifiers_opt typeParameters type Identifier LPAREN .)
    STRICTFP        reduce using rule 257 (annotationMethodHeadName -> modifiers_opt typeParameters type Identifier LPAREN .)
    AT              reduce using rule 257 (annotationMethodHeadName -> modifiers_opt typeParameters type Identifier LPAREN .)
    RPAREN          reduce using rule 257 (annotationMethodHeadName -> modifiers_opt typeParameters type Identifier LPAREN .)
    BOOLEAN         reduce using rule 257 (annotationMethodHeadName -> modifiers_opt typeParameters type Identifier LPAREN .)
    VOID            reduce using rule 257 (annotationMethodHeadName -> modifiers_opt typeParameters type Identifier LPAREN .)
    BYTE            reduce using rule 257 (annotationMethodHeadName -> modifiers_opt typeParameters type Identifier LPAREN .)
    SHORT           reduce using rule 257 (annotationMethodHeadName -> modifiers_opt typeParameters type Identifier LPAREN .)
    INT             reduce using rule 257 (annotationMethodHeadName -> modifiers_opt typeParameters type Identifier LPAREN .)
    LONG            reduce using rule 257 (annotationMethodHeadName -> modifiers_opt typeParameters type Identifier LPAREN .)
    CHAR            reduce using rule 257 (annotationMethodHeadName -> modifiers_opt typeParameters type Identifier LPAREN .)
    FLOAT           reduce using rule 257 (annotationMethodHeadName -> modifiers_opt typeParameters type Identifier LPAREN .)
    DOUBLE          reduce using rule 257 (annotationMethodHeadName -> modifiers_opt typeParameters type Identifier LPAREN .)
    Identifier      reduce using rule 257 (annotationMethodHeadName -> modifiers_opt typeParameters type Identifier LPAREN .)


state 926

    (259) defaultValue -> DEFAULT . memberValue
    (260) memberValue -> . conditionalExpressionNotName
    (261) memberValue -> . name
    (262) memberValue -> . annotation
    (263) memberValue -> . memberValueArrayInitializer
    (477) conditionalExpressionNotName -> . conditionalOrExpressionNotName
    (478) conditionalExpressionNotName -> . conditionalOrExpressionNotName QUES expression COLON conditionalExpression
    (479) conditionalExpressionNotName -> . name QUES expression COLON conditionalExpression
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (270) annotation -> . normalAnnotation
    (271) annotation -> . markerAnnotation
    (272) annotation -> . singleMemberAnnotation
    (264) memberValueArrayInitializer -> . BLPAREN memberValues COMMA BRPAREN
    (265) memberValueArrayInitializer -> . BLPAREN memberValues BRPAREN
    (266) memberValueArrayInitializer -> . BLPAREN COMMA BRPAREN
    (267) memberValueArrayInitializer -> . BLPAREN BRPAREN
    (482) conditionalOrExpressionNotName -> . conditionalAndExpressionNotName
    (483) conditionalOrExpressionNotName -> . conditionalOrExpressionNotName OP_LOR conditionalAndExpression
    (484) conditionalOrExpressionNotName -> . name OP_LOR conditionalAndExpression
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (273) normalAnnotation -> . annotationName LPAREN memberValuePairs_opt RPAREN
    (280) markerAnnotation -> . annotationName
    (281) singleMemberAnnotation -> . annotationName LPAREN singleMemberAnnotationMemberValue RPAREN
    (487) conditionalAndExpressionNotName -> . inclusiveOrExpressionNotName
    (488) conditionalAndExpressionNotName -> . conditionalAndExpressionNotName OP_LAND inclusiveOrExpression
    (489) conditionalAndExpressionNotName -> . name OP_LAND inclusiveOrExpression
    (274) annotationName -> . AT name
    (492) inclusiveOrExpressionNotName -> . exclusiveOrExpressionNotName
    (493) inclusiveOrExpressionNotName -> . inclusiveOrExpressionNotName VERTICAL exclusiveOrExpression
    (494) inclusiveOrExpressionNotName -> . name VERTICAL exclusiveOrExpression
    (497) exclusiveOrExpressionNotName -> . andExpressionNotName
    (498) exclusiveOrExpressionNotName -> . exclusiveOrExpressionNotName CARET andExpression
    (499) exclusiveOrExpressionNotName -> . name CARET andExpression
    (502) andExpressionNotName -> . equalityExpressionNotName
    (503) andExpressionNotName -> . andExpressionNotName AND equalityExpression
    (504) andExpressionNotName -> . name AND equalityExpression
    (508) equalityExpressionNotName -> . instanceOfExpressionNotName
    (509) equalityExpressionNotName -> . equalityExpressionNotName OP_EQ instanceOfExpression
    (510) equalityExpressionNotName -> . equalityExpressionNotName OP_NE instanceOfExpression
    (511) equalityExpressionNotName -> . name OP_EQ instanceOfExpression
    (512) equalityExpressionNotName -> . name OP_NE instanceOfExpression
    (515) instanceOfExpressionNotName -> . relationalExpressionNotName
    (516) instanceOfExpressionNotName -> . instanceOfExpressionNotName INSTANCEOF referenceType
    (517) instanceOfExpressionNotName -> . name INSTANCEOF referenceType
    (523) relationalExpressionNotName -> . shiftExpressionNotName
    (524) relationalExpressionNotName -> . relationalExpressionNotName LESS shiftExpression
    (525) relationalExpressionNotName -> . relationalExpressionNotName OP_GE shiftExpression
    (526) relationalExpressionNotName -> . relationalExpressionNotName MORE shiftExpression
    (527) relationalExpressionNotName -> . relationalExpressionNotName OP_LE shiftExpression
    (528) relationalExpressionNotName -> . name LESS shiftExpression
    (529) relationalExpressionNotName -> . name OP_GE shiftExpression
    (530) relationalExpressionNotName -> . name MORE shiftExpression
    (531) relationalExpressionNotName -> . name OP_LE shiftExpression
    (536) shiftExpressionNotName -> . additiveExpressionNotName
    (537) shiftExpressionNotName -> . shiftExpressionNotName OP_SHR additiveExpression
    (538) shiftExpressionNotName -> . shiftExpressionNotName OP_SHL additiveExpression
    (539) shiftExpressionNotName -> . shiftExpressionNotName OP_SHRR additiveExpression
    (540) shiftExpressionNotName -> . name OP_SHR additiveExpression
    (541) shiftExpressionNotName -> . name OP_SHL additiveExpression
    (542) shiftExpressionNotName -> . name OP_SHRR additiveExpression
    (546) additiveExpressionNotName -> . multiplicativeExpressionNotName
    (547) additiveExpressionNotName -> . additiveExpressionNotName PLUS multiplicativeExpression
    (548) additiveExpressionNotName -> . additiveExpressionNotName DASH multiplicativeExpression
    (549) additiveExpressionNotName -> . name PLUS multiplicativeExpression
    (550) additiveExpressionNotName -> . name DASH multiplicativeExpression
    (555) multiplicativeExpressionNotName -> . unaryExpressionNotName
    (556) multiplicativeExpressionNotName -> . multiplicativeExpressionNotName MULT unaryExpression
    (557) multiplicativeExpressionNotName -> . multiplicativeExpressionNotName SLASH unaryExpression
    (558) multiplicativeExpressionNotName -> . multiplicativeExpressionNotName PERCENT unaryExpression
    (559) multiplicativeExpressionNotName -> . name MULT unaryExpression
    (560) multiplicativeExpressionNotName -> . name SLASH unaryExpression
    (561) multiplicativeExpressionNotName -> . name PERCENT unaryExpression
    (567) unaryExpressionNotName -> . preIncrementExpression
    (568) unaryExpressionNotName -> . preDecrementExpression
    (569) unaryExpressionNotName -> . PLUS unaryExpression
    (570) unaryExpressionNotName -> . DASH unaryExpression
    (571) unaryExpressionNotName -> . unaryExpressionNotPlusMinusNotName
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (580) unaryExpressionNotPlusMinusNotName -> . TILDE unaryExpression
    (581) unaryExpressionNotPlusMinusNotName -> . EXCLAMATION unaryExpression
    (582) unaryExpressionNotPlusMinusNotName -> . postfixExpressionNotName
    (583) unaryExpressionNotPlusMinusNotName -> . castExpression
    (588) postfixExpressionNotName -> . primary
    (589) postfixExpressionNotName -> . postIncrementExpression
    (590) postfixExpressionNotName -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    BLPAREN         shift and go to state 243
    Identifier      shift and go to state 68
    AT              shift and go to state 155
    PLUS            shift and go to state 174
    DASH            shift and go to state 240
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 209
    EXCLAMATION     shift and go to state 169
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    multiplicativeExpressionNotName shift and go to state 222
    qualifiedName                  shift and go to state 64
    arrayCreationWithArrayInitializer shift and go to state 227
    arrayAccess                    shift and go to state 234
    unaryExpressionNotName         shift and go to state 229
    inclusiveOrExpressionNotName   shift and go to state 235
    preIncrementExpression         shift and go to state 172
    booleanLiteral                 shift and go to state 173
    conditionalAndExpressionNotName shift and go to state 205
    memberValueArrayInitializer    shift and go to state 206
    markerAnnotation               shift and go to state 9
    unaryExpressionNotPlusMinusNotName shift and go to state 175
    postDecrementExpression        shift and go to state 186
    primaryNoNewArray              shift and go to state 178
    arrayCreationWithoutArrayInitializer shift and go to state 232
    shiftExpressionNotName         shift and go to state 233
    postfixExpressionNotName       shift and go to state 239
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    equalityExpressionNotName      shift and go to state 188
    FloatingPointLiteral           shift and go to state 214
    integerLiteral                 shift and go to state 183
    methodInvocation               shift and go to state 176
    postfixExpression              shift and go to state 177
    memberValue                    shift and go to state 1009
    exclusiveOrExpressionNotName   shift and go to state 231
    conditionalExpressionNotName   shift and go to state 213
    fieldAccess                    shift and go to state 189
    conditionalOrExpressionNotName shift and go to state 237
    primary                        shift and go to state 199
    postIncrementExpression        shift and go to state 179
    annotation                     shift and go to state 207
    castExpression                 shift and go to state 241
    additiveExpressionNotName      shift and go to state 212
    name                           shift and go to state 180
    relationalExpressionNotName    shift and go to state 217
    annotationName                 shift and go to state 40
    primitiveType                  shift and go to state 219
    instanceOfExpressionNotName    shift and go to state 220
    singleMemberAnnotation         shift and go to state 8
    andExpressionNotName           shift and go to state 223
    normalAnnotation               shift and go to state 24
    preDecrementExpression         shift and go to state 196
    classInstanceCreationExpressionName shift and go to state 187
    classInstanceCreationExpression shift and go to state 198

state 927

    (255) annotationMethodHeadDefaultValue_opt -> defaultValue .

    SEMI            reduce using rule 255 (annotationMethodHeadDefaultValue_opt -> defaultValue .)


state 928

    (254) annotationMethodHead -> annotationMethodHeadName formalParameterList_opt RPAREN methodHeadExtendedDims annotationMethodHeadDefaultValue_opt .

    SEMI            reduce using rule 254 (annotationMethodHead -> annotationMethodHeadName formalParameterList_opt RPAREN methodHeadExtendedDims annotationMethodHeadDefaultValue_opt .)


state 929

    (256) annotationMethodHeadDefaultValue_opt -> empty .

    SEMI            reduce using rule 256 (annotationMethodHeadDefaultValue_opt -> empty .)


state 930

    (235) argumentList -> argumentList COMMA expression .

    RPAREN          reduce using rule 235 (argumentList -> argumentList COMMA expression .)
    COMMA           reduce using rule 235 (argumentList -> argumentList COMMA expression .)


state 931

    (81) additionalBound1 -> AND referenceType1 .

    EXTENDS         reduce using rule 81 (additionalBound1 -> AND referenceType1 .)
    IMPLEMENTS      reduce using rule 81 (additionalBound1 -> AND referenceType1 .)
    BLPAREN         reduce using rule 81 (additionalBound1 -> AND referenceType1 .)
    Identifier      reduce using rule 81 (additionalBound1 -> AND referenceType1 .)
    BOOLEAN         reduce using rule 81 (additionalBound1 -> AND referenceType1 .)
    VOID            reduce using rule 81 (additionalBound1 -> AND referenceType1 .)
    BYTE            reduce using rule 81 (additionalBound1 -> AND referenceType1 .)
    SHORT           reduce using rule 81 (additionalBound1 -> AND referenceType1 .)
    INT             reduce using rule 81 (additionalBound1 -> AND referenceType1 .)
    LONG            reduce using rule 81 (additionalBound1 -> AND referenceType1 .)
    CHAR            reduce using rule 81 (additionalBound1 -> AND referenceType1 .)
    FLOAT           reduce using rule 81 (additionalBound1 -> AND referenceType1 .)
    DOUBLE          reduce using rule 81 (additionalBound1 -> AND referenceType1 .)


state 932

    (73) additionalBound -> AND referenceType .
    (91) referenceType1 -> referenceType . MORE

    AND             reduce using rule 73 (additionalBound -> AND referenceType .)
    COMMA           reduce using rule 73 (additionalBound -> AND referenceType .)
    MORE            shift and go to state 716


state 933

    (80) additionalBoundList1 -> additionalBoundList additionalBound1 .

    EXTENDS         reduce using rule 80 (additionalBoundList1 -> additionalBoundList additionalBound1 .)
    IMPLEMENTS      reduce using rule 80 (additionalBoundList1 -> additionalBoundList additionalBound1 .)
    BLPAREN         reduce using rule 80 (additionalBoundList1 -> additionalBoundList additionalBound1 .)
    Identifier      reduce using rule 80 (additionalBoundList1 -> additionalBoundList additionalBound1 .)
    BOOLEAN         reduce using rule 80 (additionalBoundList1 -> additionalBoundList additionalBound1 .)
    VOID            reduce using rule 80 (additionalBoundList1 -> additionalBoundList additionalBound1 .)
    BYTE            reduce using rule 80 (additionalBoundList1 -> additionalBoundList additionalBound1 .)
    SHORT           reduce using rule 80 (additionalBoundList1 -> additionalBoundList additionalBound1 .)
    INT             reduce using rule 80 (additionalBoundList1 -> additionalBoundList additionalBound1 .)
    LONG            reduce using rule 80 (additionalBoundList1 -> additionalBoundList additionalBound1 .)
    CHAR            reduce using rule 80 (additionalBoundList1 -> additionalBoundList additionalBound1 .)
    FLOAT           reduce using rule 80 (additionalBoundList1 -> additionalBoundList additionalBound1 .)
    DOUBLE          reduce using rule 80 (additionalBoundList1 -> additionalBoundList additionalBound1 .)


state 934

    (72) additionalBoundList -> additionalBoundList additionalBound .

    AND             reduce using rule 72 (additionalBoundList -> additionalBoundList additionalBound .)
    COMMA           reduce using rule 72 (additionalBoundList -> additionalBoundList additionalBound .)


state 935

    (341) methodInvocation -> name DOT typeArguments Identifier LPAREN . argumentList_opt RPAREN
    (232) argumentList_opt -> . argumentList
    (233) argumentList_opt -> . empty
    (234) argumentList -> . expression
    (235) argumentList -> . argumentList COMMA expression
    (631) empty -> .
    (456) expression -> . assignmentExpression
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    RPAREN          reduce using rule 631 (empty -> .)
    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    argumentList                   shift and go to state 602
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    argumentList_opt               shift and go to state 1010
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    assignmentExpression           shift and go to state 543
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    fieldAccess                    shift and go to state 189
    integerLiteral                 shift and go to state 183
    empty                          shift and go to state 601
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 554
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    unaryExpressionNotPlusMinus    shift and go to state 397
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    expression                     shift and go to state 600
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 936

    (479) conditionalExpressionNotName -> name QUES expression COLON conditionalExpression .

    COMMA           reduce using rule 479 (conditionalExpressionNotName -> name QUES expression COLON conditionalExpression .)
    BRPAREN         reduce using rule 479 (conditionalExpressionNotName -> name QUES expression COLON conditionalExpression .)
    RPAREN          reduce using rule 479 (conditionalExpressionNotName -> name QUES expression COLON conditionalExpression .)
    SEMI            reduce using rule 479 (conditionalExpressionNotName -> name QUES expression COLON conditionalExpression .)


state 937

    (441) classInstanceCreationExpression -> classInstanceCreationExpressionName NEW typeArguments classType LPAREN . argumentList_opt RPAREN classBody_opt
    (232) argumentList_opt -> . argumentList
    (233) argumentList_opt -> . empty
    (234) argumentList -> . expression
    (235) argumentList -> . argumentList COMMA expression
    (631) empty -> .
    (456) expression -> . assignmentExpression
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    RPAREN          reduce using rule 631 (empty -> .)
    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    argumentList                   shift and go to state 602
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    argumentList_opt               shift and go to state 1011
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    assignmentExpression           shift and go to state 543
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    fieldAccess                    shift and go to state 189
    integerLiteral                 shift and go to state 183
    empty                          shift and go to state 601
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 554
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    unaryExpressionNotPlusMinus    shift and go to state 397
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    expression                     shift and go to state 600
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 938

    (440) classInstanceCreationExpression -> classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt . RPAREN classBody_opt

    RPAREN          shift and go to state 1012


state 939

    (342) methodInvocation -> primary DOT typeArguments Identifier LPAREN . argumentList_opt RPAREN
    (232) argumentList_opt -> . argumentList
    (233) argumentList_opt -> . empty
    (234) argumentList -> . expression
    (235) argumentList -> . argumentList COMMA expression
    (631) empty -> .
    (456) expression -> . assignmentExpression
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    RPAREN          reduce using rule 631 (empty -> .)
    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    argumentList                   shift and go to state 602
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    argumentList_opt               shift and go to state 1013
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    assignmentExpression           shift and go to state 543
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    fieldAccess                    shift and go to state 189
    integerLiteral                 shift and go to state 183
    empty                          shift and go to state 601
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 554
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    unaryExpressionNotPlusMinus    shift and go to state 397
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    expression                     shift and go to state 600
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 940

    (439) classInstanceCreationExpression -> primary DOT NEW classType LPAREN . argumentList_opt RPAREN classBody_opt
    (232) argumentList_opt -> . argumentList
    (233) argumentList_opt -> . empty
    (234) argumentList -> . expression
    (235) argumentList -> . argumentList COMMA expression
    (631) empty -> .
    (456) expression -> . assignmentExpression
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    RPAREN          reduce using rule 631 (empty -> .)
    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    argumentList                   shift and go to state 602
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    argumentList_opt               shift and go to state 1014
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    unaryExpressionNotPlusMinus    shift and go to state 397
    shiftExpression                shift and go to state 552
    assignmentExpression           shift and go to state 543
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    fieldAccess                    shift and go to state 189
    integerLiteral                 shift and go to state 183
    empty                          shift and go to state 601
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 554
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    expression                     shift and go to state 600
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 941

    (438) classInstanceCreationExpression -> primary DOT NEW typeArguments classType . LPAREN argumentList_opt RPAREN classBody_opt

    LPAREN          shift and go to state 1015


state 942

    (344) methodInvocation -> primary DOT Identifier LPAREN argumentList_opt . RPAREN

    RPAREN          shift and go to state 1016


state 943

    (436) classInstanceCreationExpression -> NEW typeArguments classType LPAREN argumentList_opt . RPAREN classBody_opt

    RPAREN          shift and go to state 1017


state 944

    (336) arrayInitializer -> BLPAREN variableInitializers . BRPAREN
    (337) arrayInitializer -> BLPAREN variableInitializers . COMMA BRPAREN
    (339) variableInitializers -> variableInitializers . COMMA variableInitializer

    BRPAREN         shift and go to state 1019
    COMMA           shift and go to state 1018


state 945

    (338) variableInitializers -> variableInitializer .

    BRPAREN         reduce using rule 338 (variableInitializers -> variableInitializer .)
    COMMA           reduce using rule 338 (variableInitializers -> variableInitializer .)


state 946

    (335) arrayInitializer -> BLPAREN comma_opt . BRPAREN

    BRPAREN         shift and go to state 1020


state 947

    (334) comma_opt -> empty .

    BRPAREN         reduce using rule 334 (comma_opt -> empty .)


state 948

    (333) comma_opt -> COMMA .

    BRPAREN         reduce using rule 333 (comma_opt -> COMMA .)


state 949

    (454) arrayWithOrWithoutExpr -> FLPAREN expression FRPAREN .

    BLPAREN         reduce using rule 454 (arrayWithOrWithoutExpr -> FLPAREN expression FRPAREN .)
    FLPAREN         reduce using rule 454 (arrayWithOrWithoutExpr -> FLPAREN expression FRPAREN .)
    DOT             reduce using rule 454 (arrayWithOrWithoutExpr -> FLPAREN expression FRPAREN .)
    MULT            reduce using rule 454 (arrayWithOrWithoutExpr -> FLPAREN expression FRPAREN .)
    SLASH           reduce using rule 454 (arrayWithOrWithoutExpr -> FLPAREN expression FRPAREN .)
    PERCENT         reduce using rule 454 (arrayWithOrWithoutExpr -> FLPAREN expression FRPAREN .)
    PLUS            reduce using rule 454 (arrayWithOrWithoutExpr -> FLPAREN expression FRPAREN .)
    DASH            reduce using rule 454 (arrayWithOrWithoutExpr -> FLPAREN expression FRPAREN .)
    OP_SHR          reduce using rule 454 (arrayWithOrWithoutExpr -> FLPAREN expression FRPAREN .)
    OP_SHL          reduce using rule 454 (arrayWithOrWithoutExpr -> FLPAREN expression FRPAREN .)
    OP_SHRR         reduce using rule 454 (arrayWithOrWithoutExpr -> FLPAREN expression FRPAREN .)
    LESS            reduce using rule 454 (arrayWithOrWithoutExpr -> FLPAREN expression FRPAREN .)
    OP_GE           reduce using rule 454 (arrayWithOrWithoutExpr -> FLPAREN expression FRPAREN .)
    MORE            reduce using rule 454 (arrayWithOrWithoutExpr -> FLPAREN expression FRPAREN .)
    OP_LE           reduce using rule 454 (arrayWithOrWithoutExpr -> FLPAREN expression FRPAREN .)
    INSTANCEOF      reduce using rule 454 (arrayWithOrWithoutExpr -> FLPAREN expression FRPAREN .)
    OP_EQ           reduce using rule 454 (arrayWithOrWithoutExpr -> FLPAREN expression FRPAREN .)
    OP_NE           reduce using rule 454 (arrayWithOrWithoutExpr -> FLPAREN expression FRPAREN .)
    AND             reduce using rule 454 (arrayWithOrWithoutExpr -> FLPAREN expression FRPAREN .)
    CARET           reduce using rule 454 (arrayWithOrWithoutExpr -> FLPAREN expression FRPAREN .)
    VERTICAL        reduce using rule 454 (arrayWithOrWithoutExpr -> FLPAREN expression FRPAREN .)
    OP_LAND         reduce using rule 454 (arrayWithOrWithoutExpr -> FLPAREN expression FRPAREN .)
    QUES            reduce using rule 454 (arrayWithOrWithoutExpr -> FLPAREN expression FRPAREN .)
    OP_LOR          reduce using rule 454 (arrayWithOrWithoutExpr -> FLPAREN expression FRPAREN .)
    RPAREN          reduce using rule 454 (arrayWithOrWithoutExpr -> FLPAREN expression FRPAREN .)
    OP_INC          reduce using rule 454 (arrayWithOrWithoutExpr -> FLPAREN expression FRPAREN .)
    OP_DEC          reduce using rule 454 (arrayWithOrWithoutExpr -> FLPAREN expression FRPAREN .)
    ASS             reduce using rule 454 (arrayWithOrWithoutExpr -> FLPAREN expression FRPAREN .)
    ASS_ADD         reduce using rule 454 (arrayWithOrWithoutExpr -> FLPAREN expression FRPAREN .)
    ASS_SUB         reduce using rule 454 (arrayWithOrWithoutExpr -> FLPAREN expression FRPAREN .)
    ASS_MUL         reduce using rule 454 (arrayWithOrWithoutExpr -> FLPAREN expression FRPAREN .)
    ASS_DIV         reduce using rule 454 (arrayWithOrWithoutExpr -> FLPAREN expression FRPAREN .)
    ASS_AND         reduce using rule 454 (arrayWithOrWithoutExpr -> FLPAREN expression FRPAREN .)
    ASS_OR          reduce using rule 454 (arrayWithOrWithoutExpr -> FLPAREN expression FRPAREN .)
    ASS_XOR         reduce using rule 454 (arrayWithOrWithoutExpr -> FLPAREN expression FRPAREN .)
    ASS_MOD         reduce using rule 454 (arrayWithOrWithoutExpr -> FLPAREN expression FRPAREN .)
    ASS_SHL         reduce using rule 454 (arrayWithOrWithoutExpr -> FLPAREN expression FRPAREN .)
    ASS_SHRR        reduce using rule 454 (arrayWithOrWithoutExpr -> FLPAREN expression FRPAREN .)
    ASS_SHR         reduce using rule 454 (arrayWithOrWithoutExpr -> FLPAREN expression FRPAREN .)
    COMMA           reduce using rule 454 (arrayWithOrWithoutExpr -> FLPAREN expression FRPAREN .)
    BRPAREN         reduce using rule 454 (arrayWithOrWithoutExpr -> FLPAREN expression FRPAREN .)
    SEMI            reduce using rule 454 (arrayWithOrWithoutExpr -> FLPAREN expression FRPAREN .)
    COLON           reduce using rule 454 (arrayWithOrWithoutExpr -> FLPAREN expression FRPAREN .)
    FRPAREN         reduce using rule 454 (arrayWithOrWithoutExpr -> FLPAREN expression FRPAREN .)


state 950

    (437) classInstanceCreationExpression -> NEW classType LPAREN argumentList_opt RPAREN . classBody_opt
    (443) classBody_opt -> . classBody
    (444) classBody_opt -> . empty
    (151) classBody -> . BLPAREN classBodyDeclarations_opt BRPAREN
    (631) empty -> .

    BLPAREN         shift and go to state 52
    FLPAREN         reduce using rule 631 (empty -> .)
    DOT             reduce using rule 631 (empty -> .)
    MULT            reduce using rule 631 (empty -> .)
    SLASH           reduce using rule 631 (empty -> .)
    PERCENT         reduce using rule 631 (empty -> .)
    PLUS            reduce using rule 631 (empty -> .)
    DASH            reduce using rule 631 (empty -> .)
    OP_SHR          reduce using rule 631 (empty -> .)
    OP_SHL          reduce using rule 631 (empty -> .)
    OP_SHRR         reduce using rule 631 (empty -> .)
    LESS            reduce using rule 631 (empty -> .)
    OP_GE           reduce using rule 631 (empty -> .)
    MORE            reduce using rule 631 (empty -> .)
    OP_LE           reduce using rule 631 (empty -> .)
    INSTANCEOF      reduce using rule 631 (empty -> .)
    OP_EQ           reduce using rule 631 (empty -> .)
    OP_NE           reduce using rule 631 (empty -> .)
    AND             reduce using rule 631 (empty -> .)
    CARET           reduce using rule 631 (empty -> .)
    VERTICAL        reduce using rule 631 (empty -> .)
    OP_LAND         reduce using rule 631 (empty -> .)
    QUES            reduce using rule 631 (empty -> .)
    OP_LOR          reduce using rule 631 (empty -> .)
    RPAREN          reduce using rule 631 (empty -> .)
    OP_INC          reduce using rule 631 (empty -> .)
    OP_DEC          reduce using rule 631 (empty -> .)
    SEMI            reduce using rule 631 (empty -> .)
    ASS             reduce using rule 631 (empty -> .)
    ASS_ADD         reduce using rule 631 (empty -> .)
    ASS_SUB         reduce using rule 631 (empty -> .)
    ASS_MUL         reduce using rule 631 (empty -> .)
    ASS_DIV         reduce using rule 631 (empty -> .)
    ASS_AND         reduce using rule 631 (empty -> .)
    ASS_OR          reduce using rule 631 (empty -> .)
    ASS_XOR         reduce using rule 631 (empty -> .)
    ASS_MOD         reduce using rule 631 (empty -> .)
    ASS_SHL         reduce using rule 631 (empty -> .)
    ASS_SHRR        reduce using rule 631 (empty -> .)
    ASS_SHR         reduce using rule 631 (empty -> .)
    COMMA           reduce using rule 631 (empty -> .)
    BRPAREN         reduce using rule 631 (empty -> .)
    COLON           reduce using rule 631 (empty -> .)
    FRPAREN         reduce using rule 631 (empty -> .)

    classBody                      shift and go to state 1021
    classBody_opt                  shift and go to state 1022
    empty                          shift and go to state 1023

state 951

    (478) conditionalExpressionNotName -> conditionalOrExpressionNotName QUES expression COLON conditionalExpression .

    COMMA           reduce using rule 478 (conditionalExpressionNotName -> conditionalOrExpressionNotName QUES expression COLON conditionalExpression .)
    BRPAREN         reduce using rule 478 (conditionalExpressionNotName -> conditionalOrExpressionNotName QUES expression COLON conditionalExpression .)
    RPAREN          reduce using rule 478 (conditionalExpressionNotName -> conditionalOrExpressionNotName QUES expression COLON conditionalExpression .)
    SEMI            reduce using rule 478 (conditionalExpressionNotName -> conditionalOrExpressionNotName QUES expression COLON conditionalExpression .)


state 952

    (610) castExpression -> LPAREN name typeArguments DOT classOrInterfaceType . arrays_opt RPAREN unaryExpressionNotPlusMinus
    (62) arrays_opt -> . arrays
    (63) arrays_opt -> . empty
    (59) arrays -> . array_loop
    (631) empty -> .
    (60) array_loop -> . array
    (61) array_loop -> . array_loop array
    (58) array -> . FLPAREN FRPAREN

    RPAREN          reduce using rule 631 (empty -> .)
    FLPAREN         shift and go to state 451

    arrays                         shift and go to state 698
    array_loop                     shift and go to state 413
    empty                          shift and go to state 686
    array                          shift and go to state 407
    arrays_opt                     shift and go to state 1024

state 953

    (609) castExpression -> LPAREN name typeArguments arrays_opt RPAREN . unaryExpressionNotPlusMinus
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    primary                        shift and go to state 386
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    classInstanceCreationExpressionName shift and go to state 187
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    castExpression                 shift and go to state 396
    postfixExpression              shift and go to state 394
    name                           shift and go to state 393
    unaryExpressionNotPlusMinus    shift and go to state 1025
    primitiveType                  shift and go to state 219
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 954

    (612) castExpression -> LPAREN name arrays RPAREN unaryExpressionNotPlusMinus .

    MULT            reduce using rule 612 (castExpression -> LPAREN name arrays RPAREN unaryExpressionNotPlusMinus .)
    SLASH           reduce using rule 612 (castExpression -> LPAREN name arrays RPAREN unaryExpressionNotPlusMinus .)
    PERCENT         reduce using rule 612 (castExpression -> LPAREN name arrays RPAREN unaryExpressionNotPlusMinus .)
    PLUS            reduce using rule 612 (castExpression -> LPAREN name arrays RPAREN unaryExpressionNotPlusMinus .)
    DASH            reduce using rule 612 (castExpression -> LPAREN name arrays RPAREN unaryExpressionNotPlusMinus .)
    OP_SHR          reduce using rule 612 (castExpression -> LPAREN name arrays RPAREN unaryExpressionNotPlusMinus .)
    OP_SHL          reduce using rule 612 (castExpression -> LPAREN name arrays RPAREN unaryExpressionNotPlusMinus .)
    OP_SHRR         reduce using rule 612 (castExpression -> LPAREN name arrays RPAREN unaryExpressionNotPlusMinus .)
    LESS            reduce using rule 612 (castExpression -> LPAREN name arrays RPAREN unaryExpressionNotPlusMinus .)
    OP_GE           reduce using rule 612 (castExpression -> LPAREN name arrays RPAREN unaryExpressionNotPlusMinus .)
    MORE            reduce using rule 612 (castExpression -> LPAREN name arrays RPAREN unaryExpressionNotPlusMinus .)
    OP_LE           reduce using rule 612 (castExpression -> LPAREN name arrays RPAREN unaryExpressionNotPlusMinus .)
    INSTANCEOF      reduce using rule 612 (castExpression -> LPAREN name arrays RPAREN unaryExpressionNotPlusMinus .)
    OP_EQ           reduce using rule 612 (castExpression -> LPAREN name arrays RPAREN unaryExpressionNotPlusMinus .)
    OP_NE           reduce using rule 612 (castExpression -> LPAREN name arrays RPAREN unaryExpressionNotPlusMinus .)
    AND             reduce using rule 612 (castExpression -> LPAREN name arrays RPAREN unaryExpressionNotPlusMinus .)
    CARET           reduce using rule 612 (castExpression -> LPAREN name arrays RPAREN unaryExpressionNotPlusMinus .)
    VERTICAL        reduce using rule 612 (castExpression -> LPAREN name arrays RPAREN unaryExpressionNotPlusMinus .)
    OP_LAND         reduce using rule 612 (castExpression -> LPAREN name arrays RPAREN unaryExpressionNotPlusMinus .)
    QUES            reduce using rule 612 (castExpression -> LPAREN name arrays RPAREN unaryExpressionNotPlusMinus .)
    OP_LOR          reduce using rule 612 (castExpression -> LPAREN name arrays RPAREN unaryExpressionNotPlusMinus .)
    RPAREN          reduce using rule 612 (castExpression -> LPAREN name arrays RPAREN unaryExpressionNotPlusMinus .)
    SEMI            reduce using rule 612 (castExpression -> LPAREN name arrays RPAREN unaryExpressionNotPlusMinus .)
    COMMA           reduce using rule 612 (castExpression -> LPAREN name arrays RPAREN unaryExpressionNotPlusMinus .)
    BRPAREN         reduce using rule 612 (castExpression -> LPAREN name arrays RPAREN unaryExpressionNotPlusMinus .)
    COLON           reduce using rule 612 (castExpression -> LPAREN name arrays RPAREN unaryExpressionNotPlusMinus .)
    FRPAREN         reduce using rule 612 (castExpression -> LPAREN name arrays RPAREN unaryExpressionNotPlusMinus .)


state 955

    (608) castExpression -> LPAREN primitiveType arrays_opt RPAREN unaryExpression .

    MULT            reduce using rule 608 (castExpression -> LPAREN primitiveType arrays_opt RPAREN unaryExpression .)
    SLASH           reduce using rule 608 (castExpression -> LPAREN primitiveType arrays_opt RPAREN unaryExpression .)
    PERCENT         reduce using rule 608 (castExpression -> LPAREN primitiveType arrays_opt RPAREN unaryExpression .)
    PLUS            reduce using rule 608 (castExpression -> LPAREN primitiveType arrays_opt RPAREN unaryExpression .)
    DASH            reduce using rule 608 (castExpression -> LPAREN primitiveType arrays_opt RPAREN unaryExpression .)
    OP_SHR          reduce using rule 608 (castExpression -> LPAREN primitiveType arrays_opt RPAREN unaryExpression .)
    OP_SHL          reduce using rule 608 (castExpression -> LPAREN primitiveType arrays_opt RPAREN unaryExpression .)
    OP_SHRR         reduce using rule 608 (castExpression -> LPAREN primitiveType arrays_opt RPAREN unaryExpression .)
    LESS            reduce using rule 608 (castExpression -> LPAREN primitiveType arrays_opt RPAREN unaryExpression .)
    OP_GE           reduce using rule 608 (castExpression -> LPAREN primitiveType arrays_opt RPAREN unaryExpression .)
    MORE            reduce using rule 608 (castExpression -> LPAREN primitiveType arrays_opt RPAREN unaryExpression .)
    OP_LE           reduce using rule 608 (castExpression -> LPAREN primitiveType arrays_opt RPAREN unaryExpression .)
    INSTANCEOF      reduce using rule 608 (castExpression -> LPAREN primitiveType arrays_opt RPAREN unaryExpression .)
    OP_EQ           reduce using rule 608 (castExpression -> LPAREN primitiveType arrays_opt RPAREN unaryExpression .)
    OP_NE           reduce using rule 608 (castExpression -> LPAREN primitiveType arrays_opt RPAREN unaryExpression .)
    AND             reduce using rule 608 (castExpression -> LPAREN primitiveType arrays_opt RPAREN unaryExpression .)
    CARET           reduce using rule 608 (castExpression -> LPAREN primitiveType arrays_opt RPAREN unaryExpression .)
    VERTICAL        reduce using rule 608 (castExpression -> LPAREN primitiveType arrays_opt RPAREN unaryExpression .)
    OP_LAND         reduce using rule 608 (castExpression -> LPAREN primitiveType arrays_opt RPAREN unaryExpression .)
    QUES            reduce using rule 608 (castExpression -> LPAREN primitiveType arrays_opt RPAREN unaryExpression .)
    OP_LOR          reduce using rule 608 (castExpression -> LPAREN primitiveType arrays_opt RPAREN unaryExpression .)
    RPAREN          reduce using rule 608 (castExpression -> LPAREN primitiveType arrays_opt RPAREN unaryExpression .)
    SEMI            reduce using rule 608 (castExpression -> LPAREN primitiveType arrays_opt RPAREN unaryExpression .)
    COMMA           reduce using rule 608 (castExpression -> LPAREN primitiveType arrays_opt RPAREN unaryExpression .)
    BRPAREN         reduce using rule 608 (castExpression -> LPAREN primitiveType arrays_opt RPAREN unaryExpression .)
    COLON           reduce using rule 608 (castExpression -> LPAREN primitiveType arrays_opt RPAREN unaryExpression .)
    FRPAREN         reduce using rule 608 (castExpression -> LPAREN primitiveType arrays_opt RPAREN unaryExpression .)


state 956

    (343) methodInvocation -> SUPER DOT typeArguments Identifier LPAREN . argumentList_opt RPAREN
    (232) argumentList_opt -> . argumentList
    (233) argumentList_opt -> . empty
    (234) argumentList -> . expression
    (235) argumentList -> . argumentList COMMA expression
    (631) empty -> .
    (456) expression -> . assignmentExpression
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    RPAREN          reduce using rule 631 (empty -> .)
    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    argumentList                   shift and go to state 602
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    argumentList_opt               shift and go to state 1026
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    assignmentExpression           shift and go to state 543
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    fieldAccess                    shift and go to state 189
    integerLiteral                 shift and go to state 183
    empty                          shift and go to state 601
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 554
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    unaryExpressionNotPlusMinus    shift and go to state 397
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    expression                     shift and go to state 600
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 957

    (345) methodInvocation -> SUPER DOT Identifier LPAREN argumentList_opt . RPAREN

    RPAREN          shift and go to state 1027


state 958

    (193) classTypeList -> classTypeList COMMA . classType
    (52) classType -> . classOrInterfaceType
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    Identifier      shift and go to state 68

    qualifiedName                  shift and go to state 64
    classType                      shift and go to state 1028
    classOrInterfaceType           shift and go to state 129
    classOrInterface               shift and go to state 122
    simpleName                     shift and go to state 66
    genericType                    shift and go to state 127
    name                           shift and go to state 123

state 959

    (97) referenceType2 -> referenceType OP_SHR .

    SUPER           reduce using rule 97 (referenceType2 -> referenceType OP_SHR .)
    THIS            reduce using rule 97 (referenceType2 -> referenceType OP_SHR .)
    Identifier      reduce using rule 97 (referenceType2 -> referenceType OP_SHR .)
    DOT             reduce using rule 97 (referenceType2 -> referenceType OP_SHR .)
    COMMA           reduce using rule 97 (referenceType2 -> referenceType OP_SHR .)
    BLPAREN         reduce using rule 97 (referenceType2 -> referenceType OP_SHR .)
    IMPLEMENTS      reduce using rule 97 (referenceType2 -> referenceType OP_SHR .)
    FLPAREN         reduce using rule 97 (referenceType2 -> referenceType OP_SHR .)
    LPAREN          reduce using rule 97 (referenceType2 -> referenceType OP_SHR .)
    OP_ARRAY        reduce using rule 97 (referenceType2 -> referenceType OP_SHR .)
    INSTANCEOF      reduce using rule 97 (referenceType2 -> referenceType OP_SHR .)
    OP_EQ           reduce using rule 97 (referenceType2 -> referenceType OP_SHR .)
    OP_NE           reduce using rule 97 (referenceType2 -> referenceType OP_SHR .)
    AND             reduce using rule 97 (referenceType2 -> referenceType OP_SHR .)
    CARET           reduce using rule 97 (referenceType2 -> referenceType OP_SHR .)
    VERTICAL        reduce using rule 97 (referenceType2 -> referenceType OP_SHR .)
    OP_LAND         reduce using rule 97 (referenceType2 -> referenceType OP_SHR .)
    QUES            reduce using rule 97 (referenceType2 -> referenceType OP_SHR .)
    OP_LOR          reduce using rule 97 (referenceType2 -> referenceType OP_SHR .)
    RPAREN          reduce using rule 97 (referenceType2 -> referenceType OP_SHR .)
    BRPAREN         reduce using rule 97 (referenceType2 -> referenceType OP_SHR .)
    SEMI            reduce using rule 97 (referenceType2 -> referenceType OP_SHR .)
    COLON           reduce using rule 97 (referenceType2 -> referenceType OP_SHR .)
    FRPAREN         reduce using rule 97 (referenceType2 -> referenceType OP_SHR .)
    EXTENDS         reduce using rule 97 (referenceType2 -> referenceType OP_SHR .)
    BOOLEAN         reduce using rule 97 (referenceType2 -> referenceType OP_SHR .)
    VOID            reduce using rule 97 (referenceType2 -> referenceType OP_SHR .)
    BYTE            reduce using rule 97 (referenceType2 -> referenceType OP_SHR .)
    SHORT           reduce using rule 97 (referenceType2 -> referenceType OP_SHR .)
    INT             reduce using rule 97 (referenceType2 -> referenceType OP_SHR .)
    LONG            reduce using rule 97 (referenceType2 -> referenceType OP_SHR .)
    CHAR            reduce using rule 97 (referenceType2 -> referenceType OP_SHR .)
    FLOAT           reduce using rule 97 (referenceType2 -> referenceType OP_SHR .)
    DOUBLE          reduce using rule 97 (referenceType2 -> referenceType OP_SHR .)
    MORE            reduce using rule 97 (referenceType2 -> referenceType OP_SHR .)
    OP_SHR          reduce using rule 97 (referenceType2 -> referenceType OP_SHR .)
    OP_SHRR         reduce using rule 97 (referenceType2 -> referenceType OP_SHR .)


state 960

    (98) referenceType2 -> classOrInterface LESS . typeArgumentList3
    (92) referenceType1 -> classOrInterface LESS . typeArgumentList2
    (51) genericType -> classOrInterface LESS . MORE
    (82) typeArguments -> LESS . typeArgumentList1
    (99) typeArgumentList3 -> . typeArgument3
    (100) typeArgumentList3 -> . typeArgumentList COMMA typeArgument3
    (93) typeArgumentList2 -> . typeArgument2
    (94) typeArgumentList2 -> . typeArgumentList COMMA typeArgument2
    (87) typeArgumentList1 -> . typeArgument1
    (88) typeArgumentList1 -> . typeArgumentList COMMA typeArgument1
    (101) typeArgument3 -> . referenceType3
    (102) typeArgument3 -> . wildcard3
    (85) typeArgumentList -> . typeArgument
    (86) typeArgumentList -> . typeArgumentList COMMA typeArgument
    (95) typeArgument2 -> . referenceType2
    (96) typeArgument2 -> . wildcard2
    (89) typeArgument1 -> . referenceType1
    (90) typeArgument1 -> . wildcard1
    (103) referenceType3 -> . referenceType OP_SHRR
    (116) wildcard3 -> . QUES OP_SHRR
    (117) wildcard3 -> . QUES wildcardBounds3
    (83) typeArgument -> . referenceType
    (84) typeArgument -> . wildcard
    (97) referenceType2 -> . referenceType OP_SHR
    (98) referenceType2 -> . classOrInterface LESS typeArgumentList3
    (112) wildcard2 -> . QUES OP_SHR
    (113) wildcard2 -> . QUES wildcardBounds2
    (91) referenceType1 -> . referenceType MORE
    (92) referenceType1 -> . classOrInterface LESS typeArgumentList2
    (108) wildcard1 -> . QUES MORE
    (109) wildcard1 -> . QUES wildcardBounds1
    (44) referenceType -> . classOrInterfaceType
    (45) referenceType -> . arrayType
    (104) wildcard -> . QUES
    (105) wildcard -> . QUES wildcardBounds
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (54) arrayType -> . genericType arrays
    (55) arrayType -> . genericType DOT name arrays
    (56) arrayType -> . primitiveType arrays
    (57) arrayType -> . name arrays
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    MORE            shift and go to state 587
    QUES            shift and go to state 1034
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    Identifier      shift and go to state 68

    qualifiedName                  shift and go to state 64
    primitiveType                  shift and go to state 504
    genericType                    shift and go to state 505
    classOrInterfaceType           shift and go to state 272
    simpleName                     shift and go to state 66
    referenceType                  shift and go to state 1029
    wildcard3                      shift and go to state 1030
    wildcard2                      shift and go to state 856
    wildcard1                      shift and go to state 508
    wildcard                       shift and go to state 516
    typeArgumentList2              shift and go to state 857
    typeArgumentList3              shift and go to state 1031
    typeArgumentList1              shift and go to state 509
    typeArgument                   shift and go to state 510
    referenceType3                 shift and go to state 1032
    referenceType2                 shift and go to state 858
    referenceType1                 shift and go to state 511
    name                           shift and go to state 512
    typeArgument2                  shift and go to state 859
    typeArgument3                  shift and go to state 1033
    typeArgument1                  shift and go to state 513
    arrayType                      shift and go to state 269
    classOrInterface               shift and go to state 860
    typeArgumentList               shift and go to state 1035

state 961

    (112) wildcard2 -> QUES OP_SHR .

    DOT             reduce using rule 112 (wildcard2 -> QUES OP_SHR .)
    FLPAREN         reduce using rule 112 (wildcard2 -> QUES OP_SHR .)
    MORE            reduce using rule 112 (wildcard2 -> QUES OP_SHR .)
    COMMA           reduce using rule 112 (wildcard2 -> QUES OP_SHR .)
    AND             reduce using rule 112 (wildcard2 -> QUES OP_SHR .)
    OP_SHR          reduce using rule 112 (wildcard2 -> QUES OP_SHR .)
    OP_SHRR         reduce using rule 112 (wildcard2 -> QUES OP_SHR .)
    SUPER           reduce using rule 112 (wildcard2 -> QUES OP_SHR .)
    THIS            reduce using rule 112 (wildcard2 -> QUES OP_SHR .)
    Identifier      reduce using rule 112 (wildcard2 -> QUES OP_SHR .)
    BLPAREN         reduce using rule 112 (wildcard2 -> QUES OP_SHR .)
    IMPLEMENTS      reduce using rule 112 (wildcard2 -> QUES OP_SHR .)
    LPAREN          reduce using rule 112 (wildcard2 -> QUES OP_SHR .)
    OP_ARRAY        reduce using rule 112 (wildcard2 -> QUES OP_SHR .)
    INSTANCEOF      reduce using rule 112 (wildcard2 -> QUES OP_SHR .)
    OP_EQ           reduce using rule 112 (wildcard2 -> QUES OP_SHR .)
    OP_NE           reduce using rule 112 (wildcard2 -> QUES OP_SHR .)
    CARET           reduce using rule 112 (wildcard2 -> QUES OP_SHR .)
    VERTICAL        reduce using rule 112 (wildcard2 -> QUES OP_SHR .)
    OP_LAND         reduce using rule 112 (wildcard2 -> QUES OP_SHR .)
    QUES            reduce using rule 112 (wildcard2 -> QUES OP_SHR .)
    OP_LOR          reduce using rule 112 (wildcard2 -> QUES OP_SHR .)
    RPAREN          reduce using rule 112 (wildcard2 -> QUES OP_SHR .)
    BRPAREN         reduce using rule 112 (wildcard2 -> QUES OP_SHR .)
    SEMI            reduce using rule 112 (wildcard2 -> QUES OP_SHR .)
    COLON           reduce using rule 112 (wildcard2 -> QUES OP_SHR .)
    FRPAREN         reduce using rule 112 (wildcard2 -> QUES OP_SHR .)
    EXTENDS         reduce using rule 112 (wildcard2 -> QUES OP_SHR .)
    BOOLEAN         reduce using rule 112 (wildcard2 -> QUES OP_SHR .)
    VOID            reduce using rule 112 (wildcard2 -> QUES OP_SHR .)
    BYTE            reduce using rule 112 (wildcard2 -> QUES OP_SHR .)
    SHORT           reduce using rule 112 (wildcard2 -> QUES OP_SHR .)
    INT             reduce using rule 112 (wildcard2 -> QUES OP_SHR .)
    LONG            reduce using rule 112 (wildcard2 -> QUES OP_SHR .)
    CHAR            reduce using rule 112 (wildcard2 -> QUES OP_SHR .)
    FLOAT           reduce using rule 112 (wildcard2 -> QUES OP_SHR .)
    DOUBLE          reduce using rule 112 (wildcard2 -> QUES OP_SHR .)


state 962

    (114) wildcardBounds2 -> EXTENDS . referenceType2
    (110) wildcardBounds1 -> EXTENDS . referenceType1
    (106) wildcardBounds -> EXTENDS . referenceType
    (97) referenceType2 -> . referenceType OP_SHR
    (98) referenceType2 -> . classOrInterface LESS typeArgumentList3
    (91) referenceType1 -> . referenceType MORE
    (92) referenceType1 -> . classOrInterface LESS typeArgumentList2
    (44) referenceType -> . classOrInterfaceType
    (45) referenceType -> . arrayType
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (54) arrayType -> . genericType arrays
    (55) arrayType -> . genericType DOT name arrays
    (56) arrayType -> . primitiveType arrays
    (57) arrayType -> . name arrays
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    Identifier      shift and go to state 68

    qualifiedName                  shift and go to state 64
    name                           shift and go to state 512
    classOrInterfaceType           shift and go to state 272
    arrayType                      shift and go to state 269
    classOrInterface               shift and go to state 860
    simpleName                     shift and go to state 66
    primitiveType                  shift and go to state 504
    referenceType2                 shift and go to state 1037
    referenceType1                 shift and go to state 863
    genericType                    shift and go to state 505
    referenceType                  shift and go to state 1036

state 963

    (113) wildcard2 -> QUES wildcardBounds2 .

    DOT             reduce using rule 113 (wildcard2 -> QUES wildcardBounds2 .)
    FLPAREN         reduce using rule 113 (wildcard2 -> QUES wildcardBounds2 .)
    MORE            reduce using rule 113 (wildcard2 -> QUES wildcardBounds2 .)
    COMMA           reduce using rule 113 (wildcard2 -> QUES wildcardBounds2 .)
    AND             reduce using rule 113 (wildcard2 -> QUES wildcardBounds2 .)
    OP_SHR          reduce using rule 113 (wildcard2 -> QUES wildcardBounds2 .)
    OP_SHRR         reduce using rule 113 (wildcard2 -> QUES wildcardBounds2 .)
    SUPER           reduce using rule 113 (wildcard2 -> QUES wildcardBounds2 .)
    THIS            reduce using rule 113 (wildcard2 -> QUES wildcardBounds2 .)
    Identifier      reduce using rule 113 (wildcard2 -> QUES wildcardBounds2 .)
    BLPAREN         reduce using rule 113 (wildcard2 -> QUES wildcardBounds2 .)
    IMPLEMENTS      reduce using rule 113 (wildcard2 -> QUES wildcardBounds2 .)
    LPAREN          reduce using rule 113 (wildcard2 -> QUES wildcardBounds2 .)
    OP_ARRAY        reduce using rule 113 (wildcard2 -> QUES wildcardBounds2 .)
    INSTANCEOF      reduce using rule 113 (wildcard2 -> QUES wildcardBounds2 .)
    OP_EQ           reduce using rule 113 (wildcard2 -> QUES wildcardBounds2 .)
    OP_NE           reduce using rule 113 (wildcard2 -> QUES wildcardBounds2 .)
    CARET           reduce using rule 113 (wildcard2 -> QUES wildcardBounds2 .)
    VERTICAL        reduce using rule 113 (wildcard2 -> QUES wildcardBounds2 .)
    OP_LAND         reduce using rule 113 (wildcard2 -> QUES wildcardBounds2 .)
    QUES            reduce using rule 113 (wildcard2 -> QUES wildcardBounds2 .)
    OP_LOR          reduce using rule 113 (wildcard2 -> QUES wildcardBounds2 .)
    RPAREN          reduce using rule 113 (wildcard2 -> QUES wildcardBounds2 .)
    BRPAREN         reduce using rule 113 (wildcard2 -> QUES wildcardBounds2 .)
    SEMI            reduce using rule 113 (wildcard2 -> QUES wildcardBounds2 .)
    COLON           reduce using rule 113 (wildcard2 -> QUES wildcardBounds2 .)
    FRPAREN         reduce using rule 113 (wildcard2 -> QUES wildcardBounds2 .)
    EXTENDS         reduce using rule 113 (wildcard2 -> QUES wildcardBounds2 .)
    BOOLEAN         reduce using rule 113 (wildcard2 -> QUES wildcardBounds2 .)
    VOID            reduce using rule 113 (wildcard2 -> QUES wildcardBounds2 .)
    BYTE            reduce using rule 113 (wildcard2 -> QUES wildcardBounds2 .)
    SHORT           reduce using rule 113 (wildcard2 -> QUES wildcardBounds2 .)
    INT             reduce using rule 113 (wildcard2 -> QUES wildcardBounds2 .)
    LONG            reduce using rule 113 (wildcard2 -> QUES wildcardBounds2 .)
    CHAR            reduce using rule 113 (wildcard2 -> QUES wildcardBounds2 .)
    FLOAT           reduce using rule 113 (wildcard2 -> QUES wildcardBounds2 .)
    DOUBLE          reduce using rule 113 (wildcard2 -> QUES wildcardBounds2 .)


state 964

    (115) wildcardBounds2 -> SUPER . referenceType2
    (111) wildcardBounds1 -> SUPER . referenceType1
    (107) wildcardBounds -> SUPER . referenceType
    (97) referenceType2 -> . referenceType OP_SHR
    (98) referenceType2 -> . classOrInterface LESS typeArgumentList3
    (91) referenceType1 -> . referenceType MORE
    (92) referenceType1 -> . classOrInterface LESS typeArgumentList2
    (44) referenceType -> . classOrInterfaceType
    (45) referenceType -> . arrayType
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (54) arrayType -> . genericType arrays
    (55) arrayType -> . genericType DOT name arrays
    (56) arrayType -> . primitiveType arrays
    (57) arrayType -> . name arrays
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    Identifier      shift and go to state 68

    qualifiedName                  shift and go to state 64
    name                           shift and go to state 512
    classOrInterfaceType           shift and go to state 272
    arrayType                      shift and go to state 269
    classOrInterface               shift and go to state 860
    simpleName                     shift and go to state 66
    primitiveType                  shift and go to state 504
    referenceType2                 shift and go to state 1039
    referenceType1                 shift and go to state 865
    genericType                    shift and go to state 505
    referenceType                  shift and go to state 1038

state 965

    (94) typeArgumentList2 -> typeArgumentList COMMA . typeArgument2
    (88) typeArgumentList1 -> typeArgumentList COMMA . typeArgument1
    (86) typeArgumentList -> typeArgumentList COMMA . typeArgument
    (95) typeArgument2 -> . referenceType2
    (96) typeArgument2 -> . wildcard2
    (89) typeArgument1 -> . referenceType1
    (90) typeArgument1 -> . wildcard1
    (83) typeArgument -> . referenceType
    (84) typeArgument -> . wildcard
    (97) referenceType2 -> . referenceType OP_SHR
    (98) referenceType2 -> . classOrInterface LESS typeArgumentList3
    (112) wildcard2 -> . QUES OP_SHR
    (113) wildcard2 -> . QUES wildcardBounds2
    (91) referenceType1 -> . referenceType MORE
    (92) referenceType1 -> . classOrInterface LESS typeArgumentList2
    (108) wildcard1 -> . QUES MORE
    (109) wildcard1 -> . QUES wildcardBounds1
    (44) referenceType -> . classOrInterfaceType
    (45) referenceType -> . arrayType
    (104) wildcard -> . QUES
    (105) wildcard -> . QUES wildcardBounds
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (54) arrayType -> . genericType arrays
    (55) arrayType -> . genericType DOT name arrays
    (56) arrayType -> . primitiveType arrays
    (57) arrayType -> . name arrays
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    QUES            shift and go to state 861
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    Identifier      shift and go to state 68

    qualifiedName                  shift and go to state 64
    arrayType                      shift and go to state 269
    genericType                    shift and go to state 505
    classOrInterfaceType           shift and go to state 272
    simpleName                     shift and go to state 66
    referenceType                  shift and go to state 1040
    wildcard2                      shift and go to state 856
    wildcard1                      shift and go to state 508
    wildcard                       shift and go to state 516
    typeArgument                   shift and go to state 853
    referenceType2                 shift and go to state 858
    referenceType1                 shift and go to state 511
    name                           shift and go to state 512
    typeArgument2                  shift and go to state 1041
    typeArgument1                  shift and go to state 854
    primitiveType                  shift and go to state 504
    classOrInterface               shift and go to state 860

state 966

    (431) explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt . RPAREN SEMI

    RPAREN          shift and go to state 1042


state 967

    (435) explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN . argumentList_opt RPAREN SEMI
    (232) argumentList_opt -> . argumentList
    (233) argumentList_opt -> . empty
    (234) argumentList -> . expression
    (235) argumentList -> . argumentList COMMA expression
    (631) empty -> .
    (456) expression -> . assignmentExpression
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    RPAREN          reduce using rule 631 (empty -> .)
    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    argumentList                   shift and go to state 602
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    argumentList_opt               shift and go to state 1043
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    assignmentExpression           shift and go to state 543
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    fieldAccess                    shift and go to state 189
    integerLiteral                 shift and go to state 183
    empty                          shift and go to state 601
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 554
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    unaryExpressionNotPlusMinus    shift and go to state 397
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    expression                     shift and go to state 600
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 968

    (433) explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN . argumentList_opt RPAREN SEMI
    (232) argumentList_opt -> . argumentList
    (233) argumentList_opt -> . empty
    (234) argumentList -> . expression
    (235) argumentList -> . argumentList COMMA expression
    (631) empty -> .
    (456) expression -> . assignmentExpression
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    RPAREN          reduce using rule 631 (empty -> .)
    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    argumentList                   shift and go to state 602
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    argumentList_opt               shift and go to state 1044
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    assignmentExpression           shift and go to state 543
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    fieldAccess                    shift and go to state 189
    integerLiteral                 shift and go to state 183
    empty                          shift and go to state 601
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 554
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    unaryExpressionNotPlusMinus    shift and go to state 397
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    expression                     shift and go to state 600
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 969

    (429) explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt . RPAREN SEMI

    RPAREN          shift and go to state 1045


state 970

    (424) explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .

    IF              reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    WHILE           reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    FOR             reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    BLPAREN         reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    ASSERT          reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    SEMI            reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    SWITCH          reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    DO              reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    BREAK           reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    CONTINUE        reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    RETURN          reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    SYNCHRONIZED    reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    THROW           reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    TRY             reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    Identifier      reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    AT              reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    BOOLEAN         reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    VOID            reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    BYTE            reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    SHORT           reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    INT             reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    LONG            reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    CHAR            reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    FLOAT           reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    DOUBLE          reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    PUBLIC          reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    PROTECTED       reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    PRIVATE         reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    STATIC          reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    ABSTRACT        reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    FINAL           reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    NATIVE          reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    TRANSIENT       reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    VOLATILE        reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    STRICTFP        reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    THIS            reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    SUPER           reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    OP_INC          reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    OP_DEC          reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    NEW             reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    LESS            reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    LPAREN          reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    CharacterLiteral reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    StringLiteral   reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    NULL            reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    LONG_NUMBER     reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    LONG_HEX_NUMBER reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_1   reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_2   reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_3   reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_4   reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_5   reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_6   reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    TRUE            reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    FALSE           reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    INTERFACE       reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    ENUM            reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    CLASS           reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    BRPAREN         reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    CASE            reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    DEFAULT         reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)
    ELSE            reduce using rule 424 (explicitConstructorInvocation -> THIS LPAREN argumentList_opt RPAREN SEMI .)


state 971

    (476) conditionalExpression -> conditionalOrExpression QUES expression COLON . conditionalExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    equalityExpression             shift and go to state 546
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    arrayCreationWithArrayInitializer shift and go to state 227
    exclusiveOrExpression          shift and go to state 548
    conditionalAndExpression       shift and go to state 536
    shiftExpression                shift and go to state 552
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    postfixExpression              shift and go to state 394
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 1046
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    primary                        shift and go to state 386
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    arrayAccess                    shift and go to state 234
    name                           shift and go to state 393
    instanceOfExpression           shift and go to state 540
    castExpression                 shift and go to state 396
    unaryExpressionNotPlusMinus    shift and go to state 397
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    classInstanceCreationExpression shift and go to state 198

state 972

    (399) synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .

    IF              reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    WHILE           reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    FOR             reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    BLPAREN         reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    ASSERT          reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    SEMI            reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    SWITCH          reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    DO              reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    BREAK           reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    CONTINUE        reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    RETURN          reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    SYNCHRONIZED    reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    THROW           reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    TRY             reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    Identifier      reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    AT              reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    BOOLEAN         reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    VOID            reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    BYTE            reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    SHORT           reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    INT             reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    LONG            reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    CHAR            reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    FLOAT           reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    DOUBLE          reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    PUBLIC          reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    PROTECTED       reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    PRIVATE         reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    STATIC          reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    ABSTRACT        reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    FINAL           reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    NATIVE          reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    TRANSIENT       reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    VOLATILE        reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    STRICTFP        reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    THIS            reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    SUPER           reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    OP_INC          reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    OP_DEC          reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    NEW             reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    LESS            reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    LPAREN          reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    CharacterLiteral reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    StringLiteral   reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    NULL            reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    LONG_NUMBER     reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    LONG_HEX_NUMBER reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    NON_INTEGER_1   reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    NON_INTEGER_2   reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    NON_INTEGER_3   reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    NON_INTEGER_4   reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    NON_INTEGER_5   reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    NON_INTEGER_6   reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    TRUE            reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    FALSE           reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    INTERFACE       reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    ENUM            reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    CLASS           reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    BRPAREN         reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    CASE            reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    DEFAULT         reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)
    ELSE            reduce using rule 399 (synchronizedStatement -> SYNCHRONIZED LPAREN expression RPAREN block .)


state 973

    (427) explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN . SEMI

    SEMI            shift and go to state 1047


state 974

    (426) explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN . SEMI

    SEMI            shift and go to state 1048


state 975

    (370) enhancedForStatementHeadInit -> FOR LPAREN type Identifier arrays_opt .
    (301) variableDeclaratorId -> Identifier arrays_opt .

    COLON           reduce using rule 370 (enhancedForStatementHeadInit -> FOR LPAREN type Identifier arrays_opt .)
    ASS             reduce using rule 301 (variableDeclaratorId -> Identifier arrays_opt .)
    COMMA           reduce using rule 301 (variableDeclaratorId -> Identifier arrays_opt .)
    SEMI            reduce using rule 301 (variableDeclaratorId -> Identifier arrays_opt .)


state 976

    (371) enhancedForStatementHeadInit -> FOR LPAREN modifiers type Identifier . arrays_opt
    (301) variableDeclaratorId -> Identifier . arrays_opt
    (62) arrays_opt -> . arrays
    (63) arrays_opt -> . empty
    (59) arrays -> . array_loop
    (631) empty -> .
    (60) array_loop -> . array
    (61) array_loop -> . array_loop array
    (58) array -> . FLPAREN FRPAREN

    COLON           reduce using rule 631 (empty -> .)
    ASS             reduce using rule 631 (empty -> .)
    COMMA           reduce using rule 631 (empty -> .)
    SEMI            reduce using rule 631 (empty -> .)
    FLPAREN         shift and go to state 451

    arrays                         shift and go to state 698
    array_loop                     shift and go to state 413
    arrays_opt                     shift and go to state 1049
    array                          shift and go to state 407
    empty                          shift and go to state 686

state 977

    (354) forStatement -> FOR LPAREN forInit_opt SEMI expression_opt . SEMI forUpdate_opt RPAREN statement

    SEMI            shift and go to state 1050


state 978

    (340) methodInvocation -> name . LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> name . DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (585) postfixExpression -> name .
    (442) classInstanceCreationExpressionName -> name . DOT
    (32) qualifiedName -> name . DOT simpleName
    (602) primaryNoNewArray -> name . DOT THIS
    (603) primaryNoNewArray -> name . DOT SUPER
    (604) primaryNoNewArray -> name . DOT CLASS
    (605) primaryNoNewArray -> name . arrays DOT CLASS
    (447) arrayAccess -> name . FLPAREN expression FRPAREN
    (59) arrays -> . array_loop
    (60) array_loop -> . array
    (61) array_loop -> . array_loop array
    (58) array -> . FLPAREN FRPAREN

    LPAREN          shift and go to state 404
    DOT             shift and go to state 1051
    OP_INC          reduce using rule 585 (postfixExpression -> name .)
    OP_DEC          reduce using rule 585 (postfixExpression -> name .)
    ASS             reduce using rule 585 (postfixExpression -> name .)
    ASS_ADD         reduce using rule 585 (postfixExpression -> name .)
    ASS_SUB         reduce using rule 585 (postfixExpression -> name .)
    ASS_MUL         reduce using rule 585 (postfixExpression -> name .)
    ASS_DIV         reduce using rule 585 (postfixExpression -> name .)
    ASS_AND         reduce using rule 585 (postfixExpression -> name .)
    ASS_OR          reduce using rule 585 (postfixExpression -> name .)
    ASS_XOR         reduce using rule 585 (postfixExpression -> name .)
    ASS_MOD         reduce using rule 585 (postfixExpression -> name .)
    ASS_SHL         reduce using rule 585 (postfixExpression -> name .)
    ASS_SHRR        reduce using rule 585 (postfixExpression -> name .)
    ASS_SHR         reduce using rule 585 (postfixExpression -> name .)
    FLPAREN         shift and go to state 411

    arrays                         shift and go to state 426
    array_loop                     shift and go to state 413
    array                          shift and go to state 407

state 979

    (361) statementExpressionList -> statementExpressionList COMMA statementExpression .

    COMMA           reduce using rule 361 (statementExpressionList -> statementExpressionList COMMA statementExpression .)
    SEMI            reduce using rule 361 (statementExpressionList -> statementExpressionList COMMA statementExpression .)
    RPAREN          reduce using rule 361 (statementExpressionList -> statementExpressionList COMMA statementExpression .)


state 980

    (409) catchFormalParameter -> modifiers_opt . catchType variableDeclaratorId
    (410) catchType -> . unionType
    (411) unionType -> . type
    (412) unionType -> . unionType VERTICAL type
    (33) type -> . primitiveType
    (34) type -> . referenceType
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (44) referenceType -> . classOrInterfaceType
    (45) referenceType -> . arrayType
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (54) arrayType -> . genericType arrays
    (55) arrayType -> . genericType DOT name arrays
    (56) arrayType -> . primitiveType arrays
    (57) arrayType -> . name arrays
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    Identifier      shift and go to state 68

    qualifiedName                  shift and go to state 64
    type                           shift and go to state 1053
    catchType                      shift and go to state 1054
    primitiveType                  shift and go to state 277
    classOrInterfaceType           shift and go to state 272
    classOrInterface               shift and go to state 122
    simpleName                     shift and go to state 66
    arrayType                      shift and go to state 269
    unionType                      shift and go to state 1052
    referenceType                  shift and go to state 273
    genericType                    shift and go to state 271
    name                           shift and go to state 276

state 981

    (408) catchClause -> CATCH LPAREN catchFormalParameter . RPAREN block

    RPAREN          shift and go to state 1055


state 982

    (423) finally -> FINALLY block .

    IF              reduce using rule 423 (finally -> FINALLY block .)
    WHILE           reduce using rule 423 (finally -> FINALLY block .)
    FOR             reduce using rule 423 (finally -> FINALLY block .)
    BLPAREN         reduce using rule 423 (finally -> FINALLY block .)
    ASSERT          reduce using rule 423 (finally -> FINALLY block .)
    SEMI            reduce using rule 423 (finally -> FINALLY block .)
    SWITCH          reduce using rule 423 (finally -> FINALLY block .)
    DO              reduce using rule 423 (finally -> FINALLY block .)
    BREAK           reduce using rule 423 (finally -> FINALLY block .)
    CONTINUE        reduce using rule 423 (finally -> FINALLY block .)
    RETURN          reduce using rule 423 (finally -> FINALLY block .)
    SYNCHRONIZED    reduce using rule 423 (finally -> FINALLY block .)
    THROW           reduce using rule 423 (finally -> FINALLY block .)
    TRY             reduce using rule 423 (finally -> FINALLY block .)
    Identifier      reduce using rule 423 (finally -> FINALLY block .)
    AT              reduce using rule 423 (finally -> FINALLY block .)
    BOOLEAN         reduce using rule 423 (finally -> FINALLY block .)
    VOID            reduce using rule 423 (finally -> FINALLY block .)
    BYTE            reduce using rule 423 (finally -> FINALLY block .)
    SHORT           reduce using rule 423 (finally -> FINALLY block .)
    INT             reduce using rule 423 (finally -> FINALLY block .)
    LONG            reduce using rule 423 (finally -> FINALLY block .)
    CHAR            reduce using rule 423 (finally -> FINALLY block .)
    FLOAT           reduce using rule 423 (finally -> FINALLY block .)
    DOUBLE          reduce using rule 423 (finally -> FINALLY block .)
    PUBLIC          reduce using rule 423 (finally -> FINALLY block .)
    PROTECTED       reduce using rule 423 (finally -> FINALLY block .)
    PRIVATE         reduce using rule 423 (finally -> FINALLY block .)
    STATIC          reduce using rule 423 (finally -> FINALLY block .)
    ABSTRACT        reduce using rule 423 (finally -> FINALLY block .)
    FINAL           reduce using rule 423 (finally -> FINALLY block .)
    NATIVE          reduce using rule 423 (finally -> FINALLY block .)
    TRANSIENT       reduce using rule 423 (finally -> FINALLY block .)
    VOLATILE        reduce using rule 423 (finally -> FINALLY block .)
    STRICTFP        reduce using rule 423 (finally -> FINALLY block .)
    THIS            reduce using rule 423 (finally -> FINALLY block .)
    SUPER           reduce using rule 423 (finally -> FINALLY block .)
    OP_INC          reduce using rule 423 (finally -> FINALLY block .)
    OP_DEC          reduce using rule 423 (finally -> FINALLY block .)
    NEW             reduce using rule 423 (finally -> FINALLY block .)
    LESS            reduce using rule 423 (finally -> FINALLY block .)
    LPAREN          reduce using rule 423 (finally -> FINALLY block .)
    CharacterLiteral reduce using rule 423 (finally -> FINALLY block .)
    StringLiteral   reduce using rule 423 (finally -> FINALLY block .)
    NULL            reduce using rule 423 (finally -> FINALLY block .)
    LONG_NUMBER     reduce using rule 423 (finally -> FINALLY block .)
    LONG_HEX_NUMBER reduce using rule 423 (finally -> FINALLY block .)
    NON_INTEGER_1   reduce using rule 423 (finally -> FINALLY block .)
    NON_INTEGER_2   reduce using rule 423 (finally -> FINALLY block .)
    NON_INTEGER_3   reduce using rule 423 (finally -> FINALLY block .)
    NON_INTEGER_4   reduce using rule 423 (finally -> FINALLY block .)
    NON_INTEGER_5   reduce using rule 423 (finally -> FINALLY block .)
    NON_INTEGER_6   reduce using rule 423 (finally -> FINALLY block .)
    TRUE            reduce using rule 423 (finally -> FINALLY block .)
    FALSE           reduce using rule 423 (finally -> FINALLY block .)
    INTERFACE       reduce using rule 423 (finally -> FINALLY block .)
    ENUM            reduce using rule 423 (finally -> FINALLY block .)
    CLASS           reduce using rule 423 (finally -> FINALLY block .)
    BRPAREN         reduce using rule 423 (finally -> FINALLY block .)
    CASE            reduce using rule 423 (finally -> FINALLY block .)
    DEFAULT         reduce using rule 423 (finally -> FINALLY block .)
    ELSE            reduce using rule 423 (finally -> FINALLY block .)


state 983

    (414) tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .

    IF              reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    WHILE           reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    FOR             reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    BLPAREN         reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    ASSERT          reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    SEMI            reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    SWITCH          reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    DO              reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    BREAK           reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    CONTINUE        reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    RETURN          reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    SYNCHRONIZED    reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    THROW           reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    TRY             reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    Identifier      reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    AT              reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    BOOLEAN         reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    VOID            reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    BYTE            reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    SHORT           reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    INT             reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    LONG            reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    CHAR            reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    FLOAT           reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    DOUBLE          reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    PUBLIC          reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    PROTECTED       reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    PRIVATE         reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    STATIC          reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    ABSTRACT        reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    FINAL           reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    NATIVE          reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    TRANSIENT       reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    VOLATILE        reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    STRICTFP        reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    THIS            reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    SUPER           reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    OP_INC          reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    OP_DEC          reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    NEW             reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    LESS            reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    LPAREN          reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    CharacterLiteral reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    StringLiteral   reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    NULL            reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    LONG_NUMBER     reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    LONG_HEX_NUMBER reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    NON_INTEGER_1   reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    NON_INTEGER_2   reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    NON_INTEGER_3   reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    NON_INTEGER_4   reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    NON_INTEGER_5   reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    NON_INTEGER_6   reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    TRUE            reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    FALSE           reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    INTERFACE       reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    ENUM            reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    CLASS           reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    BRPAREN         reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    CASE            reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    DEFAULT         reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)
    ELSE            reduce using rule 414 (tryStatementWithResources -> TRY resourceSpecification tryBlock catches_opt finally .)


state 984

    (421) resource -> type variableDeclaratorId ASS . variableInitializer
    (302) variableInitializer -> . expression
    (303) variableInitializer -> . arrayInitializer
    (456) expression -> . assignmentExpression
    (335) arrayInitializer -> . BLPAREN comma_opt BRPAREN
    (336) arrayInitializer -> . BLPAREN variableInitializers BRPAREN
    (337) arrayInitializer -> . BLPAREN variableInitializers COMMA BRPAREN
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    BLPAREN         shift and go to state 821
    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    qualifiedName                  shift and go to state 64
    fieldAccess                    shift and go to state 189
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    arrayAccess                    shift and go to state 234
    primitiveType                  shift and go to state 219
    shiftExpression                shift and go to state 552
    assignmentExpression           shift and go to state 543
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 554
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    unaryExpressionNotPlusMinus    shift and go to state 397
    arrayInitializer               shift and go to state 848
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    variableInitializer            shift and go to state 1056
    expression                     shift and go to state 847
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 985

    (415) resourceSpecification -> LPAREN resources semi_opt RPAREN .

    BLPAREN         reduce using rule 415 (resourceSpecification -> LPAREN resources semi_opt RPAREN .)


state 986

    (419) resources -> resources trailingSemicolon resource .

    SEMI            reduce using rule 419 (resources -> resources trailingSemicolon resource .)
    RPAREN          reduce using rule 419 (resources -> resources trailingSemicolon resource .)


state 987

    (422) resource -> modifiers type variableDeclaratorId . ASS variableInitializer

    ASS             shift and go to state 1057


state 988

    (430) explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt . RPAREN SEMI

    RPAREN          shift and go to state 1058


state 989

    (434) explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN . argumentList_opt RPAREN SEMI
    (232) argumentList_opt -> . argumentList
    (233) argumentList_opt -> . empty
    (234) argumentList -> . expression
    (235) argumentList -> . argumentList COMMA expression
    (631) empty -> .
    (456) expression -> . assignmentExpression
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    RPAREN          reduce using rule 631 (empty -> .)
    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    argumentList                   shift and go to state 602
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    argumentList_opt               shift and go to state 1059
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    assignmentExpression           shift and go to state 543
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    fieldAccess                    shift and go to state 189
    integerLiteral                 shift and go to state 183
    empty                          shift and go to state 601
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 554
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    unaryExpressionNotPlusMinus    shift and go to state 397
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    expression                     shift and go to state 600
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 990

    (432) explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN . argumentList_opt RPAREN SEMI
    (232) argumentList_opt -> . argumentList
    (233) argumentList_opt -> . empty
    (234) argumentList -> . expression
    (235) argumentList -> . argumentList COMMA expression
    (631) empty -> .
    (456) expression -> . assignmentExpression
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    RPAREN          reduce using rule 631 (empty -> .)
    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    argumentList                   shift and go to state 602
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    argumentList_opt               shift and go to state 1060
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    assignmentExpression           shift and go to state 543
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    fieldAccess                    shift and go to state 189
    integerLiteral                 shift and go to state 183
    empty                          shift and go to state 601
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 554
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    unaryExpressionNotPlusMinus    shift and go to state 397
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    expression                     shift and go to state 600
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 991

    (428) explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt . RPAREN SEMI

    RPAREN          shift and go to state 1061


state 992

    (352) whileStatement -> WHILE LPAREN expression RPAREN statement .

    IF              reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    FOR             reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    BLPAREN         reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    ASSERT          reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    SEMI            reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    SWITCH          reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    DO              reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    BREAK           reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    CONTINUE        reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    SYNCHRONIZED    reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    THROW           reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    TRY             reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    Identifier      reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    AT              reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    BOOLEAN         reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    VOID            reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    BYTE            reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    SHORT           reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    INT             reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    LONG            reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    CHAR            reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    FLOAT           reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    DOUBLE          reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    PUBLIC          reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    PROTECTED       reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    PRIVATE         reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    STATIC          reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    ABSTRACT        reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    FINAL           reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    NATIVE          reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    TRANSIENT       reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    VOLATILE        reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    STRICTFP        reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    THIS            reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    SUPER           reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    OP_INC          reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    OP_DEC          reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    NEW             reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    LESS            reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    CharacterLiteral reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    StringLiteral   reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    NULL            reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    LONG_NUMBER     reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    LONG_HEX_NUMBER reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    NON_INTEGER_1   reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    NON_INTEGER_2   reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    NON_INTEGER_3   reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    NON_INTEGER_4   reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    NON_INTEGER_5   reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    NON_INTEGER_6   reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    TRUE            reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    FALSE           reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    INTERFACE       reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    ENUM            reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    CLASS           reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    BRPAREN         reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    CASE            reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)
    DEFAULT         reduce using rule 352 (whileStatement -> WHILE LPAREN expression RPAREN statement .)


state 993

    (380) switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .

    IF              reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    WHILE           reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    FOR             reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    BLPAREN         reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    ASSERT          reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    SEMI            reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    SWITCH          reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    DO              reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    BREAK           reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    CONTINUE        reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    RETURN          reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    SYNCHRONIZED    reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    THROW           reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    TRY             reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    Identifier      reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    AT              reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    BOOLEAN         reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    VOID            reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    BYTE            reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    SHORT           reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    INT             reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    LONG            reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    CHAR            reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    FLOAT           reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    DOUBLE          reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    PUBLIC          reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    PROTECTED       reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    PRIVATE         reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    STATIC          reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    ABSTRACT        reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    FINAL           reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    NATIVE          reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    TRANSIENT       reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    VOLATILE        reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    STRICTFP        reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    THIS            reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    SUPER           reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    OP_INC          reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    OP_DEC          reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    NEW             reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    LESS            reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    LPAREN          reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    CharacterLiteral reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    StringLiteral   reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    NULL            reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    LONG_NUMBER     reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    LONG_HEX_NUMBER reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    NON_INTEGER_1   reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    NON_INTEGER_2   reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    NON_INTEGER_3   reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    NON_INTEGER_4   reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    NON_INTEGER_5   reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    NON_INTEGER_6   reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    TRUE            reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    FALSE           reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    INTERFACE       reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    ENUM            reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    CLASS           reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    BRPAREN         reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    CASE            reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    DEFAULT         reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)
    ELSE            reduce using rule 380 (switchStatement -> SWITCH LPAREN expression RPAREN switchBlock .)


state 994

    (381) switchBlock -> BLPAREN . BRPAREN
    (382) switchBlock -> BLPAREN . switchBlockStatements BRPAREN
    (383) switchBlock -> BLPAREN . switchLabels BRPAREN
    (384) switchBlock -> BLPAREN . switchBlockStatements switchLabels BRPAREN
    (385) switchBlockStatements -> . switchBlockStatement
    (386) switchBlockStatements -> . switchBlockStatements switchBlockStatement
    (388) switchLabels -> . switchLabel
    (389) switchLabels -> . switchLabels switchLabel
    (387) switchBlockStatement -> . switchLabels blockStatements
    (390) switchLabel -> . CASE constantExpression COLON
    (391) switchLabel -> . DEFAULT COLON

    BRPAREN         shift and go to state 1068
    CASE            shift and go to state 1062
    DEFAULT         shift and go to state 1065

    switchLabel                    shift and go to state 1063
    switchBlockStatement           shift and go to state 1064
    switchBlockStatements          shift and go to state 1066
    switchLabels                   shift and go to state 1067

state 995

    (393) doStatement -> DO statement WHILE LPAREN expression . RPAREN SEMI

    RPAREN          shift and go to state 1069


state 996

    (378) assertStatement -> ASSERT expression COLON expression SEMI .

    IF              reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    WHILE           reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    FOR             reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    BLPAREN         reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    ASSERT          reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    SEMI            reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    SWITCH          reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    DO              reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    BREAK           reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    CONTINUE        reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    RETURN          reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    SYNCHRONIZED    reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    THROW           reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    TRY             reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    Identifier      reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    AT              reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    BOOLEAN         reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    VOID            reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    BYTE            reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    SHORT           reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    INT             reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    LONG            reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    CHAR            reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    FLOAT           reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    DOUBLE          reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    PUBLIC          reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    PROTECTED       reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    PRIVATE         reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    STATIC          reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    ABSTRACT        reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    FINAL           reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    NATIVE          reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    TRANSIENT       reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    VOLATILE        reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    STRICTFP        reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    THIS            reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    SUPER           reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    OP_INC          reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    OP_DEC          reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    NEW             reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    LESS            reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    LPAREN          reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    CharacterLiteral reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    StringLiteral   reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    NULL            reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    LONG_NUMBER     reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    LONG_HEX_NUMBER reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    NON_INTEGER_1   reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    NON_INTEGER_2   reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    NON_INTEGER_3   reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    NON_INTEGER_4   reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    NON_INTEGER_5   reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    NON_INTEGER_6   reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    TRUE            reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    FALSE           reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    INTERFACE       reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    ENUM            reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    CLASS           reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    BRPAREN         reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    CASE            reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    DEFAULT         reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)
    ELSE            reduce using rule 378 (assertStatement -> ASSERT expression COLON expression SEMI .)


state 997

    (367) enhancedForStatement -> enhancedForStatementHead . statement
    (368) enhancedForStatementNoShortIf -> enhancedForStatementHead . statementNoShortIf
    (304) statement -> . statementWithoutTrailingSubStatement
    (305) statement -> . labeldStatement
    (306) statement -> . ifThenStatement
    (307) statement -> . ifThenElseStatement
    (308) statement -> . whileStatement
    (309) statement -> . forStatement
    (310) statement -> . enhancedForStatement
    (372) statementNoShortIf -> . statementWithoutTrailingSubStatement
    (373) statementNoShortIf -> . labeledStatementNoShortIf
    (374) statementNoShortIf -> . ifThenElseStatementNoShortIf
    (375) statementNoShortIf -> . whileStatementNoShortIf
    (376) statementNoShortIf -> . enhancedForStatementNoShortIf
    (311) statementWithoutTrailingSubStatement -> . block
    (312) statementWithoutTrailingSubStatement -> . expressionStatement
    (313) statementWithoutTrailingSubStatement -> . assertStatement
    (314) statementWithoutTrailingSubStatement -> . emptyStatement
    (315) statementWithoutTrailingSubStatement -> . switchStatement
    (316) statementWithoutTrailingSubStatement -> . doStatement
    (317) statementWithoutTrailingSubStatement -> . breakStatement
    (318) statementWithoutTrailingSubStatement -> . continueStatement
    (319) statementWithoutTrailingSubStatement -> . returnStatement
    (320) statementWithoutTrailingSubStatement -> . synchronizedStatement
    (321) statementWithoutTrailingSubStatement -> . throwStatment
    (322) statementWithoutTrailingSubStatement -> . tryStatement
    (323) statementWithoutTrailingSubStatement -> . tryStatementWithResources
    (346) labeldStatement -> . label COLON statement
    (349) ifThenStatement -> . IF LPAREN expression RPAREN statement
    (350) ifThenElseStatement -> . IF LPAREN expression RPAREN statementNoShortIf ELSE statement
    (352) whileStatement -> . WHILE LPAREN expression RPAREN statement
    (354) forStatement -> . FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement
    (367) enhancedForStatement -> . enhancedForStatementHead statement
    (347) labeledStatementNoShortIf -> . label COLON statementNoShortIf
    (351) ifThenElseStatementNoShortIf -> . IF LPAREN expression RPAREN statementNoShortIf ELSE statementNoShortIf
    (353) whileStatementNoShortIf -> . WHILE LPAREN expression RPAREN statementNoShortIf
    (368) enhancedForStatementNoShortIf -> . enhancedForStatementHead statementNoShortIf
    (283) block -> . BLPAREN blockStatements_opt BRPAREN
    (324) expressionStatement -> . statementExpression SEMI
    (325) expressionStatement -> . explicitConstructorInvocation
    (377) assertStatement -> . ASSERT expression SEMI
    (378) assertStatement -> . ASSERT expression COLON expression SEMI
    (379) emptyStatement -> . SEMI
    (380) switchStatement -> . SWITCH LPAREN expression RPAREN switchBlock
    (393) doStatement -> . DO statement WHILE LPAREN expression RPAREN SEMI
    (394) breakStatement -> . BREAK SEMI
    (395) breakStatement -> . BREAK Identifier SEMI
    (396) continueStatement -> . CONTINUE SEMI
    (397) continueStatement -> . CONTINUE Identifier SEMI
    (398) returnStatement -> . RETURN expression_opt SEMI
    (399) synchronizedStatement -> . SYNCHRONIZED LPAREN expression RPAREN block
    (400) throwStatment -> . THROW expression SEMI
    (401) tryStatement -> . TRY tryBlock catches
    (402) tryStatement -> . TRY tryBlock catches_opt finally
    (413) tryStatementWithResources -> . TRY resourceSpecification tryBlock catches_opt
    (414) tryStatementWithResources -> . TRY resourceSpecification tryBlock catches_opt finally
    (348) label -> . Identifier
    (369) enhancedForStatementHead -> . enhancedForStatementHeadInit COLON expression RPAREN
    (326) statementExpression -> . assignment
    (327) statementExpression -> . preIncrementExpression
    (328) statementExpression -> . preDecrementExpression
    (329) statementExpression -> . postIncrementExpression
    (330) statementExpression -> . postDecrementExpression
    (331) statementExpression -> . methodInvocation
    (332) statementExpression -> . classInstanceCreationExpression
    (424) explicitConstructorInvocation -> . THIS LPAREN argumentList_opt RPAREN SEMI
    (425) explicitConstructorInvocation -> . SUPER LPAREN argumentList_opt RPAREN SEMI
    (426) explicitConstructorInvocation -> . typeArguments SUPER LPAREN argumentList RPAREN SEMI
    (427) explicitConstructorInvocation -> . typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (428) explicitConstructorInvocation -> . primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI
    (429) explicitConstructorInvocation -> . name DOT SUPER LPAREN argumentList_opt RPAREN SEMI
    (430) explicitConstructorInvocation -> . primary DOT THIS LPAREN argumentList_opt RPAREN SEMI
    (431) explicitConstructorInvocation -> . name DOT THIS LPAREN argumentList_opt RPAREN SEMI
    (432) explicitConstructorInvocation -> . primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI
    (433) explicitConstructorInvocation -> . name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI
    (434) explicitConstructorInvocation -> . primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (435) explicitConstructorInvocation -> . name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (370) enhancedForStatementHeadInit -> . FOR LPAREN type Identifier arrays_opt
    (371) enhancedForStatementHeadInit -> . FOR LPAREN modifiers type Identifier arrays_opt
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (82) typeArguments -> . LESS typeArgumentList1
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (442) classInstanceCreationExpressionName -> . name DOT
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE

    IF              shift and go to state 1007
    WHILE           shift and go to state 998
    FOR             shift and go to state 312
    BLPAREN         shift and go to state 120
    ASSERT          shift and go to state 336
    SEMI            shift and go to state 341
    SWITCH          shift and go to state 328
    DO              shift and go to state 335
    BREAK           shift and go to state 305
    CONTINUE        shift and go to state 318
    RETURN          shift and go to state 302
    SYNCHRONIZED    shift and go to state 518
    THROW           shift and go to state 354
    TRY             shift and go to state 314
    Identifier      shift and go to state 316
    THIS            shift and go to state 300
    SUPER           shift and go to state 353
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    NEW             shift and go to state 326
    LESS            shift and go to state 287
    LPAREN          shift and go to state 348
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    forStatement                   shift and go to state 286
    labeledStatementNoShortIf      shift and go to state 1000
    qualifiedName                  shift and go to state 64
    continueStatement              shift and go to state 304
    arrayCreationWithArrayInitializer shift and go to state 227
    switchStatement                shift and go to state 288
    primary                        shift and go to state 324
    arrayCreationWithoutArrayInitializer shift and go to state 232
    breakStatement                 shift and go to state 337
    tryStatementWithResources      shift and go to state 338
    whileStatementNoShortIf        shift and go to state 1001
    assertStatement                shift and go to state 289
    synchronizedStatement          shift and go to state 339
    booleanLiteral                 shift and go to state 173
    doStatement                    shift and go to state 327
    postDecrementExpression        shift and go to state 306
    typeArguments                  shift and go to state 307
    literal                        shift and go to state 208
    tryStatement                   shift and go to state 342
    preIncrementExpression         shift and go to state 308
    label                          shift and go to state 999
    simpleName                     shift and go to state 66
    labeldStatement                shift and go to state 329
    statementNoShortIf             shift and go to state 1070
    methodInvocation               shift and go to state 311
    statement                      shift and go to state 519
    arrayAccess                    shift and go to state 234
    ifThenElseStatement            shift and go to state 291
    fieldAccess                    shift and go to state 189
    statementWithoutTrailingSubStatement shift and go to state 1005
    integerLiteral                 shift and go to state 183
    statementExpression            shift and go to state 350
    classInstanceCreationExpressionName shift and go to state 187
    FloatingPointLiteral           shift and go to state 214
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 346
    whileStatement                 shift and go to state 292
    enhancedForStatementHeadInit   shift and go to state 313
    postIncrementExpression        shift and go to state 293
    enhancedForStatementNoShortIf  shift and go to state 1006
    ifThenStatement                shift and go to state 347
    ifThenElseStatementNoShortIf   shift and go to state 1004
    emptyStatement                 shift and go to state 295
    returnStatement                shift and go to state 297
    preDecrementExpression         shift and go to state 320
    postfixExpression              shift and go to state 298
    enhancedForStatementHead       shift and go to state 997
    name                           shift and go to state 517
    expressionStatement            shift and go to state 301
    primitiveType                  shift and go to state 219
    throwStatment                  shift and go to state 310
    explicitConstructorInvocation  shift and go to state 351
    enhancedForStatement           shift and go to state 352
    block                          shift and go to state 321
    classInstanceCreationExpression shift and go to state 322

state 998

    (352) whileStatement -> WHILE . LPAREN expression RPAREN statement
    (353) whileStatementNoShortIf -> WHILE . LPAREN expression RPAREN statementNoShortIf

    LPAREN          shift and go to state 1071


state 999

    (346) labeldStatement -> label . COLON statement
    (347) labeledStatementNoShortIf -> label . COLON statementNoShortIf

    COLON           shift and go to state 1072


state 1000

    (373) statementNoShortIf -> labeledStatementNoShortIf .

    ELSE            reduce using rule 373 (statementNoShortIf -> labeledStatementNoShortIf .)


state 1001

    (375) statementNoShortIf -> whileStatementNoShortIf .

    ELSE            reduce using rule 375 (statementNoShortIf -> whileStatementNoShortIf .)


state 1002

    (350) ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf . ELSE statement

    ELSE            shift and go to state 1073


state 1003

    (349) ifThenStatement -> IF LPAREN expression RPAREN statement .

    IF              reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    FOR             reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    BLPAREN         reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    ASSERT          reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    SEMI            reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    SWITCH          reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    DO              reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    BREAK           reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    CONTINUE        reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    SYNCHRONIZED    reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    THROW           reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    TRY             reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    Identifier      reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    AT              reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    BOOLEAN         reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    VOID            reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    BYTE            reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    SHORT           reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    INT             reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    LONG            reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    CHAR            reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    FLOAT           reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    DOUBLE          reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    PUBLIC          reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    PROTECTED       reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    PRIVATE         reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    STATIC          reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    ABSTRACT        reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    FINAL           reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    NATIVE          reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    TRANSIENT       reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    VOLATILE        reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    STRICTFP        reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    THIS            reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    SUPER           reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    OP_INC          reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    OP_DEC          reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    NEW             reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    LESS            reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    CharacterLiteral reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    StringLiteral   reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    NULL            reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    LONG_NUMBER     reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    LONG_HEX_NUMBER reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    NON_INTEGER_1   reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    NON_INTEGER_2   reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    NON_INTEGER_3   reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    NON_INTEGER_4   reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    NON_INTEGER_5   reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    NON_INTEGER_6   reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    TRUE            reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    FALSE           reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    INTERFACE       reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    ENUM            reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    CLASS           reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    BRPAREN         reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    CASE            reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)
    DEFAULT         reduce using rule 349 (ifThenStatement -> IF LPAREN expression RPAREN statement .)


state 1004

    (374) statementNoShortIf -> ifThenElseStatementNoShortIf .

    ELSE            reduce using rule 374 (statementNoShortIf -> ifThenElseStatementNoShortIf .)


state 1005

    (304) statement -> statementWithoutTrailingSubStatement .
    (372) statementNoShortIf -> statementWithoutTrailingSubStatement .

    IF              reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    WHILE           reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    FOR             reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    BLPAREN         reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    ASSERT          reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    SEMI            reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    SWITCH          reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    DO              reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    BREAK           reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    CONTINUE        reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    RETURN          reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    SYNCHRONIZED    reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    THROW           reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    TRY             reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    Identifier      reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    AT              reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    BOOLEAN         reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    VOID            reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    BYTE            reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    SHORT           reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    INT             reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    LONG            reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    CHAR            reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    FLOAT           reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    DOUBLE          reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    PUBLIC          reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    PROTECTED       reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    PRIVATE         reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    STATIC          reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    ABSTRACT        reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    FINAL           reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    NATIVE          reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    TRANSIENT       reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    VOLATILE        reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    STRICTFP        reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    THIS            reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    SUPER           reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    OP_INC          reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    OP_DEC          reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    NEW             reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    LESS            reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    LPAREN          reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    CharacterLiteral reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    StringLiteral   reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    NULL            reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    LONG_NUMBER     reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    LONG_HEX_NUMBER reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    NON_INTEGER_1   reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    NON_INTEGER_2   reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    NON_INTEGER_3   reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    NON_INTEGER_4   reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    NON_INTEGER_5   reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    NON_INTEGER_6   reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    TRUE            reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    FALSE           reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    INTERFACE       reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    ENUM            reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    CLASS           reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    BRPAREN         reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    CASE            reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    DEFAULT         reduce using rule 304 (statement -> statementWithoutTrailingSubStatement .)
    ELSE            reduce using rule 372 (statementNoShortIf -> statementWithoutTrailingSubStatement .)


state 1006

    (376) statementNoShortIf -> enhancedForStatementNoShortIf .

    ELSE            reduce using rule 376 (statementNoShortIf -> enhancedForStatementNoShortIf .)


state 1007

    (349) ifThenStatement -> IF . LPAREN expression RPAREN statement
    (350) ifThenElseStatement -> IF . LPAREN expression RPAREN statementNoShortIf ELSE statement
    (351) ifThenElseStatementNoShortIf -> IF . LPAREN expression RPAREN statementNoShortIf ELSE statementNoShortIf

    LPAREN          shift and go to state 1074


state 1008

    (425) explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .

    IF              reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    WHILE           reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    FOR             reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    BLPAREN         reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    ASSERT          reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    SEMI            reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    SWITCH          reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    DO              reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    BREAK           reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    CONTINUE        reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    RETURN          reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    SYNCHRONIZED    reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    THROW           reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    TRY             reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    Identifier      reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    AT              reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    BOOLEAN         reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    VOID            reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    BYTE            reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    SHORT           reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    INT             reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    LONG            reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    CHAR            reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    FLOAT           reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    DOUBLE          reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    PUBLIC          reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    PROTECTED       reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    PRIVATE         reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    STATIC          reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    ABSTRACT        reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    FINAL           reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    NATIVE          reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    TRANSIENT       reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    VOLATILE        reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    STRICTFP        reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    THIS            reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    SUPER           reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    OP_INC          reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    OP_DEC          reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    NEW             reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    LESS            reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    LPAREN          reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    CharacterLiteral reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    StringLiteral   reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    NULL            reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    LONG_NUMBER     reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    LONG_HEX_NUMBER reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_1   reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_2   reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_3   reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_4   reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_5   reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_6   reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    TRUE            reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    FALSE           reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    INTERFACE       reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    ENUM            reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    CLASS           reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    BRPAREN         reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    CASE            reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    DEFAULT         reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)
    ELSE            reduce using rule 425 (explicitConstructorInvocation -> SUPER LPAREN argumentList_opt RPAREN SEMI .)


state 1009

    (259) defaultValue -> DEFAULT memberValue .

    SEMI            reduce using rule 259 (defaultValue -> DEFAULT memberValue .)


state 1010

    (341) methodInvocation -> name DOT typeArguments Identifier LPAREN argumentList_opt . RPAREN

    RPAREN          shift and go to state 1075


state 1011

    (441) classInstanceCreationExpression -> classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt . RPAREN classBody_opt

    RPAREN          shift and go to state 1076


state 1012

    (440) classInstanceCreationExpression -> classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN . classBody_opt
    (443) classBody_opt -> . classBody
    (444) classBody_opt -> . empty
    (151) classBody -> . BLPAREN classBodyDeclarations_opt BRPAREN
    (631) empty -> .

    BLPAREN         shift and go to state 52
    FLPAREN         reduce using rule 631 (empty -> .)
    DOT             reduce using rule 631 (empty -> .)
    MULT            reduce using rule 631 (empty -> .)
    SLASH           reduce using rule 631 (empty -> .)
    PERCENT         reduce using rule 631 (empty -> .)
    PLUS            reduce using rule 631 (empty -> .)
    DASH            reduce using rule 631 (empty -> .)
    OP_SHR          reduce using rule 631 (empty -> .)
    OP_SHL          reduce using rule 631 (empty -> .)
    OP_SHRR         reduce using rule 631 (empty -> .)
    LESS            reduce using rule 631 (empty -> .)
    OP_GE           reduce using rule 631 (empty -> .)
    MORE            reduce using rule 631 (empty -> .)
    OP_LE           reduce using rule 631 (empty -> .)
    INSTANCEOF      reduce using rule 631 (empty -> .)
    OP_EQ           reduce using rule 631 (empty -> .)
    OP_NE           reduce using rule 631 (empty -> .)
    AND             reduce using rule 631 (empty -> .)
    CARET           reduce using rule 631 (empty -> .)
    VERTICAL        reduce using rule 631 (empty -> .)
    OP_LAND         reduce using rule 631 (empty -> .)
    QUES            reduce using rule 631 (empty -> .)
    OP_LOR          reduce using rule 631 (empty -> .)
    RPAREN          reduce using rule 631 (empty -> .)
    OP_INC          reduce using rule 631 (empty -> .)
    OP_DEC          reduce using rule 631 (empty -> .)
    SEMI            reduce using rule 631 (empty -> .)
    ASS             reduce using rule 631 (empty -> .)
    ASS_ADD         reduce using rule 631 (empty -> .)
    ASS_SUB         reduce using rule 631 (empty -> .)
    ASS_MUL         reduce using rule 631 (empty -> .)
    ASS_DIV         reduce using rule 631 (empty -> .)
    ASS_AND         reduce using rule 631 (empty -> .)
    ASS_OR          reduce using rule 631 (empty -> .)
    ASS_XOR         reduce using rule 631 (empty -> .)
    ASS_MOD         reduce using rule 631 (empty -> .)
    ASS_SHL         reduce using rule 631 (empty -> .)
    ASS_SHRR        reduce using rule 631 (empty -> .)
    ASS_SHR         reduce using rule 631 (empty -> .)
    COMMA           reduce using rule 631 (empty -> .)
    BRPAREN         reduce using rule 631 (empty -> .)
    COLON           reduce using rule 631 (empty -> .)
    FRPAREN         reduce using rule 631 (empty -> .)

    classBody                      shift and go to state 1021
    classBody_opt                  shift and go to state 1077
    empty                          shift and go to state 1023

state 1013

    (342) methodInvocation -> primary DOT typeArguments Identifier LPAREN argumentList_opt . RPAREN

    RPAREN          shift and go to state 1078


state 1014

    (439) classInstanceCreationExpression -> primary DOT NEW classType LPAREN argumentList_opt . RPAREN classBody_opt

    RPAREN          shift and go to state 1079


state 1015

    (438) classInstanceCreationExpression -> primary DOT NEW typeArguments classType LPAREN . argumentList_opt RPAREN classBody_opt
    (232) argumentList_opt -> . argumentList
    (233) argumentList_opt -> . empty
    (234) argumentList -> . expression
    (235) argumentList -> . argumentList COMMA expression
    (631) empty -> .
    (456) expression -> . assignmentExpression
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    RPAREN          reduce using rule 631 (empty -> .)
    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    argumentList                   shift and go to state 602
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    argumentList_opt               shift and go to state 1080
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    assignmentExpression           shift and go to state 543
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    fieldAccess                    shift and go to state 189
    integerLiteral                 shift and go to state 183
    empty                          shift and go to state 601
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 554
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    unaryExpressionNotPlusMinus    shift and go to state 397
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    expression                     shift and go to state 600
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 1016

    (344) methodInvocation -> primary DOT Identifier LPAREN argumentList_opt RPAREN .

    FLPAREN         reduce using rule 344 (methodInvocation -> primary DOT Identifier LPAREN argumentList_opt RPAREN .)
    DOT             reduce using rule 344 (methodInvocation -> primary DOT Identifier LPAREN argumentList_opt RPAREN .)
    OP_INC          reduce using rule 344 (methodInvocation -> primary DOT Identifier LPAREN argumentList_opt RPAREN .)
    OP_DEC          reduce using rule 344 (methodInvocation -> primary DOT Identifier LPAREN argumentList_opt RPAREN .)
    MULT            reduce using rule 344 (methodInvocation -> primary DOT Identifier LPAREN argumentList_opt RPAREN .)
    SLASH           reduce using rule 344 (methodInvocation -> primary DOT Identifier LPAREN argumentList_opt RPAREN .)
    PERCENT         reduce using rule 344 (methodInvocation -> primary DOT Identifier LPAREN argumentList_opt RPAREN .)
    PLUS            reduce using rule 344 (methodInvocation -> primary DOT Identifier LPAREN argumentList_opt RPAREN .)
    DASH            reduce using rule 344 (methodInvocation -> primary DOT Identifier LPAREN argumentList_opt RPAREN .)
    OP_SHR          reduce using rule 344 (methodInvocation -> primary DOT Identifier LPAREN argumentList_opt RPAREN .)
    OP_SHL          reduce using rule 344 (methodInvocation -> primary DOT Identifier LPAREN argumentList_opt RPAREN .)
    OP_SHRR         reduce using rule 344 (methodInvocation -> primary DOT Identifier LPAREN argumentList_opt RPAREN .)
    LESS            reduce using rule 344 (methodInvocation -> primary DOT Identifier LPAREN argumentList_opt RPAREN .)
    OP_GE           reduce using rule 344 (methodInvocation -> primary DOT Identifier LPAREN argumentList_opt RPAREN .)
    MORE            reduce using rule 344 (methodInvocation -> primary DOT Identifier LPAREN argumentList_opt RPAREN .)
    OP_LE           reduce using rule 344 (methodInvocation -> primary DOT Identifier LPAREN argumentList_opt RPAREN .)
    INSTANCEOF      reduce using rule 344 (methodInvocation -> primary DOT Identifier LPAREN argumentList_opt RPAREN .)
    OP_EQ           reduce using rule 344 (methodInvocation -> primary DOT Identifier LPAREN argumentList_opt RPAREN .)
    OP_NE           reduce using rule 344 (methodInvocation -> primary DOT Identifier LPAREN argumentList_opt RPAREN .)
    AND             reduce using rule 344 (methodInvocation -> primary DOT Identifier LPAREN argumentList_opt RPAREN .)
    CARET           reduce using rule 344 (methodInvocation -> primary DOT Identifier LPAREN argumentList_opt RPAREN .)
    VERTICAL        reduce using rule 344 (methodInvocation -> primary DOT Identifier LPAREN argumentList_opt RPAREN .)
    OP_LAND         reduce using rule 344 (methodInvocation -> primary DOT Identifier LPAREN argumentList_opt RPAREN .)
    QUES            reduce using rule 344 (methodInvocation -> primary DOT Identifier LPAREN argumentList_opt RPAREN .)
    OP_LOR          reduce using rule 344 (methodInvocation -> primary DOT Identifier LPAREN argumentList_opt RPAREN .)
    RPAREN          reduce using rule 344 (methodInvocation -> primary DOT Identifier LPAREN argumentList_opt RPAREN .)
    COMMA           reduce using rule 344 (methodInvocation -> primary DOT Identifier LPAREN argumentList_opt RPAREN .)
    BRPAREN         reduce using rule 344 (methodInvocation -> primary DOT Identifier LPAREN argumentList_opt RPAREN .)
    SEMI            reduce using rule 344 (methodInvocation -> primary DOT Identifier LPAREN argumentList_opt RPAREN .)
    ASS             reduce using rule 344 (methodInvocation -> primary DOT Identifier LPAREN argumentList_opt RPAREN .)
    ASS_ADD         reduce using rule 344 (methodInvocation -> primary DOT Identifier LPAREN argumentList_opt RPAREN .)
    ASS_SUB         reduce using rule 344 (methodInvocation -> primary DOT Identifier LPAREN argumentList_opt RPAREN .)
    ASS_MUL         reduce using rule 344 (methodInvocation -> primary DOT Identifier LPAREN argumentList_opt RPAREN .)
    ASS_DIV         reduce using rule 344 (methodInvocation -> primary DOT Identifier LPAREN argumentList_opt RPAREN .)
    ASS_AND         reduce using rule 344 (methodInvocation -> primary DOT Identifier LPAREN argumentList_opt RPAREN .)
    ASS_OR          reduce using rule 344 (methodInvocation -> primary DOT Identifier LPAREN argumentList_opt RPAREN .)
    ASS_XOR         reduce using rule 344 (methodInvocation -> primary DOT Identifier LPAREN argumentList_opt RPAREN .)
    ASS_MOD         reduce using rule 344 (methodInvocation -> primary DOT Identifier LPAREN argumentList_opt RPAREN .)
    ASS_SHL         reduce using rule 344 (methodInvocation -> primary DOT Identifier LPAREN argumentList_opt RPAREN .)
    ASS_SHRR        reduce using rule 344 (methodInvocation -> primary DOT Identifier LPAREN argumentList_opt RPAREN .)
    ASS_SHR         reduce using rule 344 (methodInvocation -> primary DOT Identifier LPAREN argumentList_opt RPAREN .)
    FRPAREN         reduce using rule 344 (methodInvocation -> primary DOT Identifier LPAREN argumentList_opt RPAREN .)
    COLON           reduce using rule 344 (methodInvocation -> primary DOT Identifier LPAREN argumentList_opt RPAREN .)


state 1017

    (436) classInstanceCreationExpression -> NEW typeArguments classType LPAREN argumentList_opt RPAREN . classBody_opt
    (443) classBody_opt -> . classBody
    (444) classBody_opt -> . empty
    (151) classBody -> . BLPAREN classBodyDeclarations_opt BRPAREN
    (631) empty -> .

    BLPAREN         shift and go to state 52
    FLPAREN         reduce using rule 631 (empty -> .)
    DOT             reduce using rule 631 (empty -> .)
    MULT            reduce using rule 631 (empty -> .)
    SLASH           reduce using rule 631 (empty -> .)
    PERCENT         reduce using rule 631 (empty -> .)
    PLUS            reduce using rule 631 (empty -> .)
    DASH            reduce using rule 631 (empty -> .)
    OP_SHR          reduce using rule 631 (empty -> .)
    OP_SHL          reduce using rule 631 (empty -> .)
    OP_SHRR         reduce using rule 631 (empty -> .)
    LESS            reduce using rule 631 (empty -> .)
    OP_GE           reduce using rule 631 (empty -> .)
    MORE            reduce using rule 631 (empty -> .)
    OP_LE           reduce using rule 631 (empty -> .)
    INSTANCEOF      reduce using rule 631 (empty -> .)
    OP_EQ           reduce using rule 631 (empty -> .)
    OP_NE           reduce using rule 631 (empty -> .)
    AND             reduce using rule 631 (empty -> .)
    CARET           reduce using rule 631 (empty -> .)
    VERTICAL        reduce using rule 631 (empty -> .)
    OP_LAND         reduce using rule 631 (empty -> .)
    QUES            reduce using rule 631 (empty -> .)
    OP_LOR          reduce using rule 631 (empty -> .)
    RPAREN          reduce using rule 631 (empty -> .)
    OP_INC          reduce using rule 631 (empty -> .)
    OP_DEC          reduce using rule 631 (empty -> .)
    SEMI            reduce using rule 631 (empty -> .)
    ASS             reduce using rule 631 (empty -> .)
    ASS_ADD         reduce using rule 631 (empty -> .)
    ASS_SUB         reduce using rule 631 (empty -> .)
    ASS_MUL         reduce using rule 631 (empty -> .)
    ASS_DIV         reduce using rule 631 (empty -> .)
    ASS_AND         reduce using rule 631 (empty -> .)
    ASS_OR          reduce using rule 631 (empty -> .)
    ASS_XOR         reduce using rule 631 (empty -> .)
    ASS_MOD         reduce using rule 631 (empty -> .)
    ASS_SHL         reduce using rule 631 (empty -> .)
    ASS_SHRR        reduce using rule 631 (empty -> .)
    ASS_SHR         reduce using rule 631 (empty -> .)
    COMMA           reduce using rule 631 (empty -> .)
    BRPAREN         reduce using rule 631 (empty -> .)
    COLON           reduce using rule 631 (empty -> .)
    FRPAREN         reduce using rule 631 (empty -> .)

    classBody                      shift and go to state 1021
    classBody_opt                  shift and go to state 1081
    empty                          shift and go to state 1023

state 1018

    (337) arrayInitializer -> BLPAREN variableInitializers COMMA . BRPAREN
    (339) variableInitializers -> variableInitializers COMMA . variableInitializer
    (302) variableInitializer -> . expression
    (303) variableInitializer -> . arrayInitializer
    (456) expression -> . assignmentExpression
    (335) arrayInitializer -> . BLPAREN comma_opt BRPAREN
    (336) arrayInitializer -> . BLPAREN variableInitializers BRPAREN
    (337) arrayInitializer -> . BLPAREN variableInitializers COMMA BRPAREN
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    BRPAREN         shift and go to state 1083
    BLPAREN         shift and go to state 821
    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    primitiveType                  shift and go to state 219
    shiftExpression                shift and go to state 552
    arrayInitializer               shift and go to state 848
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    primaryNoNewArray              shift and go to state 178
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    fieldAccess                    shift and go to state 189
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    assignmentExpression           shift and go to state 543
    assignment                     shift and go to state 554
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    unaryExpressionNotPlusMinus    shift and go to state 397
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    variableInitializer            shift and go to state 1082
    expression                     shift and go to state 847
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 1019

    (336) arrayInitializer -> BLPAREN variableInitializers BRPAREN .

    BRPAREN         reduce using rule 336 (arrayInitializer -> BLPAREN variableInitializers BRPAREN .)
    COMMA           reduce using rule 336 (arrayInitializer -> BLPAREN variableInitializers BRPAREN .)
    FLPAREN         reduce using rule 336 (arrayInitializer -> BLPAREN variableInitializers BRPAREN .)
    DOT             reduce using rule 336 (arrayInitializer -> BLPAREN variableInitializers BRPAREN .)
    MULT            reduce using rule 336 (arrayInitializer -> BLPAREN variableInitializers BRPAREN .)
    SLASH           reduce using rule 336 (arrayInitializer -> BLPAREN variableInitializers BRPAREN .)
    PERCENT         reduce using rule 336 (arrayInitializer -> BLPAREN variableInitializers BRPAREN .)
    PLUS            reduce using rule 336 (arrayInitializer -> BLPAREN variableInitializers BRPAREN .)
    DASH            reduce using rule 336 (arrayInitializer -> BLPAREN variableInitializers BRPAREN .)
    OP_SHR          reduce using rule 336 (arrayInitializer -> BLPAREN variableInitializers BRPAREN .)
    OP_SHL          reduce using rule 336 (arrayInitializer -> BLPAREN variableInitializers BRPAREN .)
    OP_SHRR         reduce using rule 336 (arrayInitializer -> BLPAREN variableInitializers BRPAREN .)
    LESS            reduce using rule 336 (arrayInitializer -> BLPAREN variableInitializers BRPAREN .)
    OP_GE           reduce using rule 336 (arrayInitializer -> BLPAREN variableInitializers BRPAREN .)
    MORE            reduce using rule 336 (arrayInitializer -> BLPAREN variableInitializers BRPAREN .)
    OP_LE           reduce using rule 336 (arrayInitializer -> BLPAREN variableInitializers BRPAREN .)
    INSTANCEOF      reduce using rule 336 (arrayInitializer -> BLPAREN variableInitializers BRPAREN .)
    OP_EQ           reduce using rule 336 (arrayInitializer -> BLPAREN variableInitializers BRPAREN .)
    OP_NE           reduce using rule 336 (arrayInitializer -> BLPAREN variableInitializers BRPAREN .)
    AND             reduce using rule 336 (arrayInitializer -> BLPAREN variableInitializers BRPAREN .)
    CARET           reduce using rule 336 (arrayInitializer -> BLPAREN variableInitializers BRPAREN .)
    VERTICAL        reduce using rule 336 (arrayInitializer -> BLPAREN variableInitializers BRPAREN .)
    OP_LAND         reduce using rule 336 (arrayInitializer -> BLPAREN variableInitializers BRPAREN .)
    QUES            reduce using rule 336 (arrayInitializer -> BLPAREN variableInitializers BRPAREN .)
    OP_LOR          reduce using rule 336 (arrayInitializer -> BLPAREN variableInitializers BRPAREN .)
    RPAREN          reduce using rule 336 (arrayInitializer -> BLPAREN variableInitializers BRPAREN .)
    OP_INC          reduce using rule 336 (arrayInitializer -> BLPAREN variableInitializers BRPAREN .)
    OP_DEC          reduce using rule 336 (arrayInitializer -> BLPAREN variableInitializers BRPAREN .)
    ASS             reduce using rule 336 (arrayInitializer -> BLPAREN variableInitializers BRPAREN .)
    ASS_ADD         reduce using rule 336 (arrayInitializer -> BLPAREN variableInitializers BRPAREN .)
    ASS_SUB         reduce using rule 336 (arrayInitializer -> BLPAREN variableInitializers BRPAREN .)
    ASS_MUL         reduce using rule 336 (arrayInitializer -> BLPAREN variableInitializers BRPAREN .)
    ASS_DIV         reduce using rule 336 (arrayInitializer -> BLPAREN variableInitializers BRPAREN .)
    ASS_AND         reduce using rule 336 (arrayInitializer -> BLPAREN variableInitializers BRPAREN .)
    ASS_OR          reduce using rule 336 (arrayInitializer -> BLPAREN variableInitializers BRPAREN .)
    ASS_XOR         reduce using rule 336 (arrayInitializer -> BLPAREN variableInitializers BRPAREN .)
    ASS_MOD         reduce using rule 336 (arrayInitializer -> BLPAREN variableInitializers BRPAREN .)
    ASS_SHL         reduce using rule 336 (arrayInitializer -> BLPAREN variableInitializers BRPAREN .)
    ASS_SHRR        reduce using rule 336 (arrayInitializer -> BLPAREN variableInitializers BRPAREN .)
    ASS_SHR         reduce using rule 336 (arrayInitializer -> BLPAREN variableInitializers BRPAREN .)
    SEMI            reduce using rule 336 (arrayInitializer -> BLPAREN variableInitializers BRPAREN .)
    COLON           reduce using rule 336 (arrayInitializer -> BLPAREN variableInitializers BRPAREN .)
    FRPAREN         reduce using rule 336 (arrayInitializer -> BLPAREN variableInitializers BRPAREN .)


state 1020

    (335) arrayInitializer -> BLPAREN comma_opt BRPAREN .

    BRPAREN         reduce using rule 335 (arrayInitializer -> BLPAREN comma_opt BRPAREN .)
    COMMA           reduce using rule 335 (arrayInitializer -> BLPAREN comma_opt BRPAREN .)
    FLPAREN         reduce using rule 335 (arrayInitializer -> BLPAREN comma_opt BRPAREN .)
    DOT             reduce using rule 335 (arrayInitializer -> BLPAREN comma_opt BRPAREN .)
    MULT            reduce using rule 335 (arrayInitializer -> BLPAREN comma_opt BRPAREN .)
    SLASH           reduce using rule 335 (arrayInitializer -> BLPAREN comma_opt BRPAREN .)
    PERCENT         reduce using rule 335 (arrayInitializer -> BLPAREN comma_opt BRPAREN .)
    PLUS            reduce using rule 335 (arrayInitializer -> BLPAREN comma_opt BRPAREN .)
    DASH            reduce using rule 335 (arrayInitializer -> BLPAREN comma_opt BRPAREN .)
    OP_SHR          reduce using rule 335 (arrayInitializer -> BLPAREN comma_opt BRPAREN .)
    OP_SHL          reduce using rule 335 (arrayInitializer -> BLPAREN comma_opt BRPAREN .)
    OP_SHRR         reduce using rule 335 (arrayInitializer -> BLPAREN comma_opt BRPAREN .)
    LESS            reduce using rule 335 (arrayInitializer -> BLPAREN comma_opt BRPAREN .)
    OP_GE           reduce using rule 335 (arrayInitializer -> BLPAREN comma_opt BRPAREN .)
    MORE            reduce using rule 335 (arrayInitializer -> BLPAREN comma_opt BRPAREN .)
    OP_LE           reduce using rule 335 (arrayInitializer -> BLPAREN comma_opt BRPAREN .)
    INSTANCEOF      reduce using rule 335 (arrayInitializer -> BLPAREN comma_opt BRPAREN .)
    OP_EQ           reduce using rule 335 (arrayInitializer -> BLPAREN comma_opt BRPAREN .)
    OP_NE           reduce using rule 335 (arrayInitializer -> BLPAREN comma_opt BRPAREN .)
    AND             reduce using rule 335 (arrayInitializer -> BLPAREN comma_opt BRPAREN .)
    CARET           reduce using rule 335 (arrayInitializer -> BLPAREN comma_opt BRPAREN .)
    VERTICAL        reduce using rule 335 (arrayInitializer -> BLPAREN comma_opt BRPAREN .)
    OP_LAND         reduce using rule 335 (arrayInitializer -> BLPAREN comma_opt BRPAREN .)
    QUES            reduce using rule 335 (arrayInitializer -> BLPAREN comma_opt BRPAREN .)
    OP_LOR          reduce using rule 335 (arrayInitializer -> BLPAREN comma_opt BRPAREN .)
    RPAREN          reduce using rule 335 (arrayInitializer -> BLPAREN comma_opt BRPAREN .)
    OP_INC          reduce using rule 335 (arrayInitializer -> BLPAREN comma_opt BRPAREN .)
    OP_DEC          reduce using rule 335 (arrayInitializer -> BLPAREN comma_opt BRPAREN .)
    ASS             reduce using rule 335 (arrayInitializer -> BLPAREN comma_opt BRPAREN .)
    ASS_ADD         reduce using rule 335 (arrayInitializer -> BLPAREN comma_opt BRPAREN .)
    ASS_SUB         reduce using rule 335 (arrayInitializer -> BLPAREN comma_opt BRPAREN .)
    ASS_MUL         reduce using rule 335 (arrayInitializer -> BLPAREN comma_opt BRPAREN .)
    ASS_DIV         reduce using rule 335 (arrayInitializer -> BLPAREN comma_opt BRPAREN .)
    ASS_AND         reduce using rule 335 (arrayInitializer -> BLPAREN comma_opt BRPAREN .)
    ASS_OR          reduce using rule 335 (arrayInitializer -> BLPAREN comma_opt BRPAREN .)
    ASS_XOR         reduce using rule 335 (arrayInitializer -> BLPAREN comma_opt BRPAREN .)
    ASS_MOD         reduce using rule 335 (arrayInitializer -> BLPAREN comma_opt BRPAREN .)
    ASS_SHL         reduce using rule 335 (arrayInitializer -> BLPAREN comma_opt BRPAREN .)
    ASS_SHRR        reduce using rule 335 (arrayInitializer -> BLPAREN comma_opt BRPAREN .)
    ASS_SHR         reduce using rule 335 (arrayInitializer -> BLPAREN comma_opt BRPAREN .)
    SEMI            reduce using rule 335 (arrayInitializer -> BLPAREN comma_opt BRPAREN .)
    COLON           reduce using rule 335 (arrayInitializer -> BLPAREN comma_opt BRPAREN .)
    FRPAREN         reduce using rule 335 (arrayInitializer -> BLPAREN comma_opt BRPAREN .)


state 1021

    (443) classBody_opt -> classBody .

    FLPAREN         reduce using rule 443 (classBody_opt -> classBody .)
    DOT             reduce using rule 443 (classBody_opt -> classBody .)
    MULT            reduce using rule 443 (classBody_opt -> classBody .)
    SLASH           reduce using rule 443 (classBody_opt -> classBody .)
    PERCENT         reduce using rule 443 (classBody_opt -> classBody .)
    PLUS            reduce using rule 443 (classBody_opt -> classBody .)
    DASH            reduce using rule 443 (classBody_opt -> classBody .)
    OP_SHR          reduce using rule 443 (classBody_opt -> classBody .)
    OP_SHL          reduce using rule 443 (classBody_opt -> classBody .)
    OP_SHRR         reduce using rule 443 (classBody_opt -> classBody .)
    LESS            reduce using rule 443 (classBody_opt -> classBody .)
    OP_GE           reduce using rule 443 (classBody_opt -> classBody .)
    MORE            reduce using rule 443 (classBody_opt -> classBody .)
    OP_LE           reduce using rule 443 (classBody_opt -> classBody .)
    INSTANCEOF      reduce using rule 443 (classBody_opt -> classBody .)
    OP_EQ           reduce using rule 443 (classBody_opt -> classBody .)
    OP_NE           reduce using rule 443 (classBody_opt -> classBody .)
    AND             reduce using rule 443 (classBody_opt -> classBody .)
    CARET           reduce using rule 443 (classBody_opt -> classBody .)
    VERTICAL        reduce using rule 443 (classBody_opt -> classBody .)
    OP_LAND         reduce using rule 443 (classBody_opt -> classBody .)
    QUES            reduce using rule 443 (classBody_opt -> classBody .)
    OP_LOR          reduce using rule 443 (classBody_opt -> classBody .)
    RPAREN          reduce using rule 443 (classBody_opt -> classBody .)
    OP_INC          reduce using rule 443 (classBody_opt -> classBody .)
    OP_DEC          reduce using rule 443 (classBody_opt -> classBody .)
    SEMI            reduce using rule 443 (classBody_opt -> classBody .)
    ASS             reduce using rule 443 (classBody_opt -> classBody .)
    ASS_ADD         reduce using rule 443 (classBody_opt -> classBody .)
    ASS_SUB         reduce using rule 443 (classBody_opt -> classBody .)
    ASS_MUL         reduce using rule 443 (classBody_opt -> classBody .)
    ASS_DIV         reduce using rule 443 (classBody_opt -> classBody .)
    ASS_AND         reduce using rule 443 (classBody_opt -> classBody .)
    ASS_OR          reduce using rule 443 (classBody_opt -> classBody .)
    ASS_XOR         reduce using rule 443 (classBody_opt -> classBody .)
    ASS_MOD         reduce using rule 443 (classBody_opt -> classBody .)
    ASS_SHL         reduce using rule 443 (classBody_opt -> classBody .)
    ASS_SHRR        reduce using rule 443 (classBody_opt -> classBody .)
    ASS_SHR         reduce using rule 443 (classBody_opt -> classBody .)
    COMMA           reduce using rule 443 (classBody_opt -> classBody .)
    BRPAREN         reduce using rule 443 (classBody_opt -> classBody .)
    COLON           reduce using rule 443 (classBody_opt -> classBody .)
    FRPAREN         reduce using rule 443 (classBody_opt -> classBody .)


state 1022

    (437) classInstanceCreationExpression -> NEW classType LPAREN argumentList_opt RPAREN classBody_opt .

    FLPAREN         reduce using rule 437 (classInstanceCreationExpression -> NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    DOT             reduce using rule 437 (classInstanceCreationExpression -> NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_INC          reduce using rule 437 (classInstanceCreationExpression -> NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_DEC          reduce using rule 437 (classInstanceCreationExpression -> NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    MULT            reduce using rule 437 (classInstanceCreationExpression -> NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    SLASH           reduce using rule 437 (classInstanceCreationExpression -> NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    PERCENT         reduce using rule 437 (classInstanceCreationExpression -> NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    PLUS            reduce using rule 437 (classInstanceCreationExpression -> NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    DASH            reduce using rule 437 (classInstanceCreationExpression -> NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_SHR          reduce using rule 437 (classInstanceCreationExpression -> NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_SHL          reduce using rule 437 (classInstanceCreationExpression -> NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_SHRR         reduce using rule 437 (classInstanceCreationExpression -> NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    LESS            reduce using rule 437 (classInstanceCreationExpression -> NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_GE           reduce using rule 437 (classInstanceCreationExpression -> NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    MORE            reduce using rule 437 (classInstanceCreationExpression -> NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_LE           reduce using rule 437 (classInstanceCreationExpression -> NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    INSTANCEOF      reduce using rule 437 (classInstanceCreationExpression -> NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_EQ           reduce using rule 437 (classInstanceCreationExpression -> NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_NE           reduce using rule 437 (classInstanceCreationExpression -> NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    AND             reduce using rule 437 (classInstanceCreationExpression -> NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    CARET           reduce using rule 437 (classInstanceCreationExpression -> NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    VERTICAL        reduce using rule 437 (classInstanceCreationExpression -> NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_LAND         reduce using rule 437 (classInstanceCreationExpression -> NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    QUES            reduce using rule 437 (classInstanceCreationExpression -> NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_LOR          reduce using rule 437 (classInstanceCreationExpression -> NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    RPAREN          reduce using rule 437 (classInstanceCreationExpression -> NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    COMMA           reduce using rule 437 (classInstanceCreationExpression -> NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    BRPAREN         reduce using rule 437 (classInstanceCreationExpression -> NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    SEMI            reduce using rule 437 (classInstanceCreationExpression -> NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    COLON           reduce using rule 437 (classInstanceCreationExpression -> NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    FRPAREN         reduce using rule 437 (classInstanceCreationExpression -> NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS             reduce using rule 437 (classInstanceCreationExpression -> NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_ADD         reduce using rule 437 (classInstanceCreationExpression -> NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_SUB         reduce using rule 437 (classInstanceCreationExpression -> NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_MUL         reduce using rule 437 (classInstanceCreationExpression -> NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_DIV         reduce using rule 437 (classInstanceCreationExpression -> NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_AND         reduce using rule 437 (classInstanceCreationExpression -> NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_OR          reduce using rule 437 (classInstanceCreationExpression -> NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_XOR         reduce using rule 437 (classInstanceCreationExpression -> NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_MOD         reduce using rule 437 (classInstanceCreationExpression -> NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_SHL         reduce using rule 437 (classInstanceCreationExpression -> NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_SHRR        reduce using rule 437 (classInstanceCreationExpression -> NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_SHR         reduce using rule 437 (classInstanceCreationExpression -> NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)


state 1023

    (444) classBody_opt -> empty .

    FLPAREN         reduce using rule 444 (classBody_opt -> empty .)
    DOT             reduce using rule 444 (classBody_opt -> empty .)
    MULT            reduce using rule 444 (classBody_opt -> empty .)
    SLASH           reduce using rule 444 (classBody_opt -> empty .)
    PERCENT         reduce using rule 444 (classBody_opt -> empty .)
    PLUS            reduce using rule 444 (classBody_opt -> empty .)
    DASH            reduce using rule 444 (classBody_opt -> empty .)
    OP_SHR          reduce using rule 444 (classBody_opt -> empty .)
    OP_SHL          reduce using rule 444 (classBody_opt -> empty .)
    OP_SHRR         reduce using rule 444 (classBody_opt -> empty .)
    LESS            reduce using rule 444 (classBody_opt -> empty .)
    OP_GE           reduce using rule 444 (classBody_opt -> empty .)
    MORE            reduce using rule 444 (classBody_opt -> empty .)
    OP_LE           reduce using rule 444 (classBody_opt -> empty .)
    INSTANCEOF      reduce using rule 444 (classBody_opt -> empty .)
    OP_EQ           reduce using rule 444 (classBody_opt -> empty .)
    OP_NE           reduce using rule 444 (classBody_opt -> empty .)
    AND             reduce using rule 444 (classBody_opt -> empty .)
    CARET           reduce using rule 444 (classBody_opt -> empty .)
    VERTICAL        reduce using rule 444 (classBody_opt -> empty .)
    OP_LAND         reduce using rule 444 (classBody_opt -> empty .)
    QUES            reduce using rule 444 (classBody_opt -> empty .)
    OP_LOR          reduce using rule 444 (classBody_opt -> empty .)
    RPAREN          reduce using rule 444 (classBody_opt -> empty .)
    OP_INC          reduce using rule 444 (classBody_opt -> empty .)
    OP_DEC          reduce using rule 444 (classBody_opt -> empty .)
    SEMI            reduce using rule 444 (classBody_opt -> empty .)
    ASS             reduce using rule 444 (classBody_opt -> empty .)
    ASS_ADD         reduce using rule 444 (classBody_opt -> empty .)
    ASS_SUB         reduce using rule 444 (classBody_opt -> empty .)
    ASS_MUL         reduce using rule 444 (classBody_opt -> empty .)
    ASS_DIV         reduce using rule 444 (classBody_opt -> empty .)
    ASS_AND         reduce using rule 444 (classBody_opt -> empty .)
    ASS_OR          reduce using rule 444 (classBody_opt -> empty .)
    ASS_XOR         reduce using rule 444 (classBody_opt -> empty .)
    ASS_MOD         reduce using rule 444 (classBody_opt -> empty .)
    ASS_SHL         reduce using rule 444 (classBody_opt -> empty .)
    ASS_SHRR        reduce using rule 444 (classBody_opt -> empty .)
    ASS_SHR         reduce using rule 444 (classBody_opt -> empty .)
    COMMA           reduce using rule 444 (classBody_opt -> empty .)
    BRPAREN         reduce using rule 444 (classBody_opt -> empty .)
    COLON           reduce using rule 444 (classBody_opt -> empty .)
    FRPAREN         reduce using rule 444 (classBody_opt -> empty .)


state 1024

    (610) castExpression -> LPAREN name typeArguments DOT classOrInterfaceType arrays_opt . RPAREN unaryExpressionNotPlusMinus

    RPAREN          shift and go to state 1084


state 1025

    (609) castExpression -> LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus .

    MULT            reduce using rule 609 (castExpression -> LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    SLASH           reduce using rule 609 (castExpression -> LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    PERCENT         reduce using rule 609 (castExpression -> LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    PLUS            reduce using rule 609 (castExpression -> LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    DASH            reduce using rule 609 (castExpression -> LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    OP_SHR          reduce using rule 609 (castExpression -> LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    OP_SHL          reduce using rule 609 (castExpression -> LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    OP_SHRR         reduce using rule 609 (castExpression -> LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    LESS            reduce using rule 609 (castExpression -> LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    OP_GE           reduce using rule 609 (castExpression -> LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    MORE            reduce using rule 609 (castExpression -> LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    OP_LE           reduce using rule 609 (castExpression -> LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    INSTANCEOF      reduce using rule 609 (castExpression -> LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    OP_EQ           reduce using rule 609 (castExpression -> LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    OP_NE           reduce using rule 609 (castExpression -> LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    AND             reduce using rule 609 (castExpression -> LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    CARET           reduce using rule 609 (castExpression -> LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    VERTICAL        reduce using rule 609 (castExpression -> LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    OP_LAND         reduce using rule 609 (castExpression -> LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    QUES            reduce using rule 609 (castExpression -> LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    OP_LOR          reduce using rule 609 (castExpression -> LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    RPAREN          reduce using rule 609 (castExpression -> LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    SEMI            reduce using rule 609 (castExpression -> LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    COMMA           reduce using rule 609 (castExpression -> LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    BRPAREN         reduce using rule 609 (castExpression -> LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    COLON           reduce using rule 609 (castExpression -> LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    FRPAREN         reduce using rule 609 (castExpression -> LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus .)


state 1026

    (343) methodInvocation -> SUPER DOT typeArguments Identifier LPAREN argumentList_opt . RPAREN

    RPAREN          shift and go to state 1085


state 1027

    (345) methodInvocation -> SUPER DOT Identifier LPAREN argumentList_opt RPAREN .

    FLPAREN         reduce using rule 345 (methodInvocation -> SUPER DOT Identifier LPAREN argumentList_opt RPAREN .)
    DOT             reduce using rule 345 (methodInvocation -> SUPER DOT Identifier LPAREN argumentList_opt RPAREN .)
    OP_INC          reduce using rule 345 (methodInvocation -> SUPER DOT Identifier LPAREN argumentList_opt RPAREN .)
    OP_DEC          reduce using rule 345 (methodInvocation -> SUPER DOT Identifier LPAREN argumentList_opt RPAREN .)
    MULT            reduce using rule 345 (methodInvocation -> SUPER DOT Identifier LPAREN argumentList_opt RPAREN .)
    SLASH           reduce using rule 345 (methodInvocation -> SUPER DOT Identifier LPAREN argumentList_opt RPAREN .)
    PERCENT         reduce using rule 345 (methodInvocation -> SUPER DOT Identifier LPAREN argumentList_opt RPAREN .)
    PLUS            reduce using rule 345 (methodInvocation -> SUPER DOT Identifier LPAREN argumentList_opt RPAREN .)
    DASH            reduce using rule 345 (methodInvocation -> SUPER DOT Identifier LPAREN argumentList_opt RPAREN .)
    OP_SHR          reduce using rule 345 (methodInvocation -> SUPER DOT Identifier LPAREN argumentList_opt RPAREN .)
    OP_SHL          reduce using rule 345 (methodInvocation -> SUPER DOT Identifier LPAREN argumentList_opt RPAREN .)
    OP_SHRR         reduce using rule 345 (methodInvocation -> SUPER DOT Identifier LPAREN argumentList_opt RPAREN .)
    LESS            reduce using rule 345 (methodInvocation -> SUPER DOT Identifier LPAREN argumentList_opt RPAREN .)
    OP_GE           reduce using rule 345 (methodInvocation -> SUPER DOT Identifier LPAREN argumentList_opt RPAREN .)
    MORE            reduce using rule 345 (methodInvocation -> SUPER DOT Identifier LPAREN argumentList_opt RPAREN .)
    OP_LE           reduce using rule 345 (methodInvocation -> SUPER DOT Identifier LPAREN argumentList_opt RPAREN .)
    INSTANCEOF      reduce using rule 345 (methodInvocation -> SUPER DOT Identifier LPAREN argumentList_opt RPAREN .)
    OP_EQ           reduce using rule 345 (methodInvocation -> SUPER DOT Identifier LPAREN argumentList_opt RPAREN .)
    OP_NE           reduce using rule 345 (methodInvocation -> SUPER DOT Identifier LPAREN argumentList_opt RPAREN .)
    AND             reduce using rule 345 (methodInvocation -> SUPER DOT Identifier LPAREN argumentList_opt RPAREN .)
    CARET           reduce using rule 345 (methodInvocation -> SUPER DOT Identifier LPAREN argumentList_opt RPAREN .)
    VERTICAL        reduce using rule 345 (methodInvocation -> SUPER DOT Identifier LPAREN argumentList_opt RPAREN .)
    OP_LAND         reduce using rule 345 (methodInvocation -> SUPER DOT Identifier LPAREN argumentList_opt RPAREN .)
    QUES            reduce using rule 345 (methodInvocation -> SUPER DOT Identifier LPAREN argumentList_opt RPAREN .)
    OP_LOR          reduce using rule 345 (methodInvocation -> SUPER DOT Identifier LPAREN argumentList_opt RPAREN .)
    RPAREN          reduce using rule 345 (methodInvocation -> SUPER DOT Identifier LPAREN argumentList_opt RPAREN .)
    COMMA           reduce using rule 345 (methodInvocation -> SUPER DOT Identifier LPAREN argumentList_opt RPAREN .)
    BRPAREN         reduce using rule 345 (methodInvocation -> SUPER DOT Identifier LPAREN argumentList_opt RPAREN .)
    SEMI            reduce using rule 345 (methodInvocation -> SUPER DOT Identifier LPAREN argumentList_opt RPAREN .)
    ASS             reduce using rule 345 (methodInvocation -> SUPER DOT Identifier LPAREN argumentList_opt RPAREN .)
    ASS_ADD         reduce using rule 345 (methodInvocation -> SUPER DOT Identifier LPAREN argumentList_opt RPAREN .)
    ASS_SUB         reduce using rule 345 (methodInvocation -> SUPER DOT Identifier LPAREN argumentList_opt RPAREN .)
    ASS_MUL         reduce using rule 345 (methodInvocation -> SUPER DOT Identifier LPAREN argumentList_opt RPAREN .)
    ASS_DIV         reduce using rule 345 (methodInvocation -> SUPER DOT Identifier LPAREN argumentList_opt RPAREN .)
    ASS_AND         reduce using rule 345 (methodInvocation -> SUPER DOT Identifier LPAREN argumentList_opt RPAREN .)
    ASS_OR          reduce using rule 345 (methodInvocation -> SUPER DOT Identifier LPAREN argumentList_opt RPAREN .)
    ASS_XOR         reduce using rule 345 (methodInvocation -> SUPER DOT Identifier LPAREN argumentList_opt RPAREN .)
    ASS_MOD         reduce using rule 345 (methodInvocation -> SUPER DOT Identifier LPAREN argumentList_opt RPAREN .)
    ASS_SHL         reduce using rule 345 (methodInvocation -> SUPER DOT Identifier LPAREN argumentList_opt RPAREN .)
    ASS_SHRR        reduce using rule 345 (methodInvocation -> SUPER DOT Identifier LPAREN argumentList_opt RPAREN .)
    ASS_SHR         reduce using rule 345 (methodInvocation -> SUPER DOT Identifier LPAREN argumentList_opt RPAREN .)
    FRPAREN         reduce using rule 345 (methodInvocation -> SUPER DOT Identifier LPAREN argumentList_opt RPAREN .)
    COLON           reduce using rule 345 (methodInvocation -> SUPER DOT Identifier LPAREN argumentList_opt RPAREN .)


state 1028

    (193) classTypeList -> classTypeList COMMA classType .

    COMMA           reduce using rule 193 (classTypeList -> classTypeList COMMA classType .)
    BLPAREN         reduce using rule 193 (classTypeList -> classTypeList COMMA classType .)
    SEMI            reduce using rule 193 (classTypeList -> classTypeList COMMA classType .)


state 1029

    (103) referenceType3 -> referenceType . OP_SHRR
    (83) typeArgument -> referenceType .
    (97) referenceType2 -> referenceType . OP_SHR
    (91) referenceType1 -> referenceType . MORE

    OP_SHRR         shift and go to state 1086
    COMMA           reduce using rule 83 (typeArgument -> referenceType .)
    OP_SHR          shift and go to state 959
    MORE            shift and go to state 716


state 1030

    (102) typeArgument3 -> wildcard3 .

    SUPER           reduce using rule 102 (typeArgument3 -> wildcard3 .)
    THIS            reduce using rule 102 (typeArgument3 -> wildcard3 .)
    Identifier      reduce using rule 102 (typeArgument3 -> wildcard3 .)
    DOT             reduce using rule 102 (typeArgument3 -> wildcard3 .)
    COMMA           reduce using rule 102 (typeArgument3 -> wildcard3 .)
    BLPAREN         reduce using rule 102 (typeArgument3 -> wildcard3 .)
    IMPLEMENTS      reduce using rule 102 (typeArgument3 -> wildcard3 .)
    FLPAREN         reduce using rule 102 (typeArgument3 -> wildcard3 .)
    LPAREN          reduce using rule 102 (typeArgument3 -> wildcard3 .)
    OP_ARRAY        reduce using rule 102 (typeArgument3 -> wildcard3 .)
    INSTANCEOF      reduce using rule 102 (typeArgument3 -> wildcard3 .)
    OP_EQ           reduce using rule 102 (typeArgument3 -> wildcard3 .)
    OP_NE           reduce using rule 102 (typeArgument3 -> wildcard3 .)
    AND             reduce using rule 102 (typeArgument3 -> wildcard3 .)
    CARET           reduce using rule 102 (typeArgument3 -> wildcard3 .)
    VERTICAL        reduce using rule 102 (typeArgument3 -> wildcard3 .)
    OP_LAND         reduce using rule 102 (typeArgument3 -> wildcard3 .)
    QUES            reduce using rule 102 (typeArgument3 -> wildcard3 .)
    OP_LOR          reduce using rule 102 (typeArgument3 -> wildcard3 .)
    RPAREN          reduce using rule 102 (typeArgument3 -> wildcard3 .)
    BRPAREN         reduce using rule 102 (typeArgument3 -> wildcard3 .)
    SEMI            reduce using rule 102 (typeArgument3 -> wildcard3 .)
    COLON           reduce using rule 102 (typeArgument3 -> wildcard3 .)
    FRPAREN         reduce using rule 102 (typeArgument3 -> wildcard3 .)
    EXTENDS         reduce using rule 102 (typeArgument3 -> wildcard3 .)
    BOOLEAN         reduce using rule 102 (typeArgument3 -> wildcard3 .)
    VOID            reduce using rule 102 (typeArgument3 -> wildcard3 .)
    BYTE            reduce using rule 102 (typeArgument3 -> wildcard3 .)
    SHORT           reduce using rule 102 (typeArgument3 -> wildcard3 .)
    INT             reduce using rule 102 (typeArgument3 -> wildcard3 .)
    LONG            reduce using rule 102 (typeArgument3 -> wildcard3 .)
    CHAR            reduce using rule 102 (typeArgument3 -> wildcard3 .)
    FLOAT           reduce using rule 102 (typeArgument3 -> wildcard3 .)
    DOUBLE          reduce using rule 102 (typeArgument3 -> wildcard3 .)
    MORE            reduce using rule 102 (typeArgument3 -> wildcard3 .)
    OP_SHR          reduce using rule 102 (typeArgument3 -> wildcard3 .)
    OP_SHRR         reduce using rule 102 (typeArgument3 -> wildcard3 .)


state 1031

    (98) referenceType2 -> classOrInterface LESS typeArgumentList3 .

    SUPER           reduce using rule 98 (referenceType2 -> classOrInterface LESS typeArgumentList3 .)
    THIS            reduce using rule 98 (referenceType2 -> classOrInterface LESS typeArgumentList3 .)
    Identifier      reduce using rule 98 (referenceType2 -> classOrInterface LESS typeArgumentList3 .)
    DOT             reduce using rule 98 (referenceType2 -> classOrInterface LESS typeArgumentList3 .)
    COMMA           reduce using rule 98 (referenceType2 -> classOrInterface LESS typeArgumentList3 .)
    BLPAREN         reduce using rule 98 (referenceType2 -> classOrInterface LESS typeArgumentList3 .)
    IMPLEMENTS      reduce using rule 98 (referenceType2 -> classOrInterface LESS typeArgumentList3 .)
    FLPAREN         reduce using rule 98 (referenceType2 -> classOrInterface LESS typeArgumentList3 .)
    LPAREN          reduce using rule 98 (referenceType2 -> classOrInterface LESS typeArgumentList3 .)
    OP_ARRAY        reduce using rule 98 (referenceType2 -> classOrInterface LESS typeArgumentList3 .)
    INSTANCEOF      reduce using rule 98 (referenceType2 -> classOrInterface LESS typeArgumentList3 .)
    OP_EQ           reduce using rule 98 (referenceType2 -> classOrInterface LESS typeArgumentList3 .)
    OP_NE           reduce using rule 98 (referenceType2 -> classOrInterface LESS typeArgumentList3 .)
    AND             reduce using rule 98 (referenceType2 -> classOrInterface LESS typeArgumentList3 .)
    CARET           reduce using rule 98 (referenceType2 -> classOrInterface LESS typeArgumentList3 .)
    VERTICAL        reduce using rule 98 (referenceType2 -> classOrInterface LESS typeArgumentList3 .)
    OP_LAND         reduce using rule 98 (referenceType2 -> classOrInterface LESS typeArgumentList3 .)
    QUES            reduce using rule 98 (referenceType2 -> classOrInterface LESS typeArgumentList3 .)
    OP_LOR          reduce using rule 98 (referenceType2 -> classOrInterface LESS typeArgumentList3 .)
    RPAREN          reduce using rule 98 (referenceType2 -> classOrInterface LESS typeArgumentList3 .)
    BRPAREN         reduce using rule 98 (referenceType2 -> classOrInterface LESS typeArgumentList3 .)
    SEMI            reduce using rule 98 (referenceType2 -> classOrInterface LESS typeArgumentList3 .)
    COLON           reduce using rule 98 (referenceType2 -> classOrInterface LESS typeArgumentList3 .)
    FRPAREN         reduce using rule 98 (referenceType2 -> classOrInterface LESS typeArgumentList3 .)
    EXTENDS         reduce using rule 98 (referenceType2 -> classOrInterface LESS typeArgumentList3 .)
    BOOLEAN         reduce using rule 98 (referenceType2 -> classOrInterface LESS typeArgumentList3 .)
    VOID            reduce using rule 98 (referenceType2 -> classOrInterface LESS typeArgumentList3 .)
    BYTE            reduce using rule 98 (referenceType2 -> classOrInterface LESS typeArgumentList3 .)
    SHORT           reduce using rule 98 (referenceType2 -> classOrInterface LESS typeArgumentList3 .)
    INT             reduce using rule 98 (referenceType2 -> classOrInterface LESS typeArgumentList3 .)
    LONG            reduce using rule 98 (referenceType2 -> classOrInterface LESS typeArgumentList3 .)
    CHAR            reduce using rule 98 (referenceType2 -> classOrInterface LESS typeArgumentList3 .)
    FLOAT           reduce using rule 98 (referenceType2 -> classOrInterface LESS typeArgumentList3 .)
    DOUBLE          reduce using rule 98 (referenceType2 -> classOrInterface LESS typeArgumentList3 .)
    MORE            reduce using rule 98 (referenceType2 -> classOrInterface LESS typeArgumentList3 .)
    OP_SHR          reduce using rule 98 (referenceType2 -> classOrInterface LESS typeArgumentList3 .)
    OP_SHRR         reduce using rule 98 (referenceType2 -> classOrInterface LESS typeArgumentList3 .)


state 1032

    (101) typeArgument3 -> referenceType3 .

    SUPER           reduce using rule 101 (typeArgument3 -> referenceType3 .)
    THIS            reduce using rule 101 (typeArgument3 -> referenceType3 .)
    Identifier      reduce using rule 101 (typeArgument3 -> referenceType3 .)
    DOT             reduce using rule 101 (typeArgument3 -> referenceType3 .)
    COMMA           reduce using rule 101 (typeArgument3 -> referenceType3 .)
    BLPAREN         reduce using rule 101 (typeArgument3 -> referenceType3 .)
    IMPLEMENTS      reduce using rule 101 (typeArgument3 -> referenceType3 .)
    FLPAREN         reduce using rule 101 (typeArgument3 -> referenceType3 .)
    LPAREN          reduce using rule 101 (typeArgument3 -> referenceType3 .)
    OP_ARRAY        reduce using rule 101 (typeArgument3 -> referenceType3 .)
    INSTANCEOF      reduce using rule 101 (typeArgument3 -> referenceType3 .)
    OP_EQ           reduce using rule 101 (typeArgument3 -> referenceType3 .)
    OP_NE           reduce using rule 101 (typeArgument3 -> referenceType3 .)
    AND             reduce using rule 101 (typeArgument3 -> referenceType3 .)
    CARET           reduce using rule 101 (typeArgument3 -> referenceType3 .)
    VERTICAL        reduce using rule 101 (typeArgument3 -> referenceType3 .)
    OP_LAND         reduce using rule 101 (typeArgument3 -> referenceType3 .)
    QUES            reduce using rule 101 (typeArgument3 -> referenceType3 .)
    OP_LOR          reduce using rule 101 (typeArgument3 -> referenceType3 .)
    RPAREN          reduce using rule 101 (typeArgument3 -> referenceType3 .)
    BRPAREN         reduce using rule 101 (typeArgument3 -> referenceType3 .)
    SEMI            reduce using rule 101 (typeArgument3 -> referenceType3 .)
    COLON           reduce using rule 101 (typeArgument3 -> referenceType3 .)
    FRPAREN         reduce using rule 101 (typeArgument3 -> referenceType3 .)
    EXTENDS         reduce using rule 101 (typeArgument3 -> referenceType3 .)
    BOOLEAN         reduce using rule 101 (typeArgument3 -> referenceType3 .)
    VOID            reduce using rule 101 (typeArgument3 -> referenceType3 .)
    BYTE            reduce using rule 101 (typeArgument3 -> referenceType3 .)
    SHORT           reduce using rule 101 (typeArgument3 -> referenceType3 .)
    INT             reduce using rule 101 (typeArgument3 -> referenceType3 .)
    LONG            reduce using rule 101 (typeArgument3 -> referenceType3 .)
    CHAR            reduce using rule 101 (typeArgument3 -> referenceType3 .)
    FLOAT           reduce using rule 101 (typeArgument3 -> referenceType3 .)
    DOUBLE          reduce using rule 101 (typeArgument3 -> referenceType3 .)
    MORE            reduce using rule 101 (typeArgument3 -> referenceType3 .)
    OP_SHR          reduce using rule 101 (typeArgument3 -> referenceType3 .)
    OP_SHRR         reduce using rule 101 (typeArgument3 -> referenceType3 .)


state 1033

    (99) typeArgumentList3 -> typeArgument3 .

    SUPER           reduce using rule 99 (typeArgumentList3 -> typeArgument3 .)
    THIS            reduce using rule 99 (typeArgumentList3 -> typeArgument3 .)
    Identifier      reduce using rule 99 (typeArgumentList3 -> typeArgument3 .)
    DOT             reduce using rule 99 (typeArgumentList3 -> typeArgument3 .)
    COMMA           reduce using rule 99 (typeArgumentList3 -> typeArgument3 .)
    BLPAREN         reduce using rule 99 (typeArgumentList3 -> typeArgument3 .)
    IMPLEMENTS      reduce using rule 99 (typeArgumentList3 -> typeArgument3 .)
    FLPAREN         reduce using rule 99 (typeArgumentList3 -> typeArgument3 .)
    LPAREN          reduce using rule 99 (typeArgumentList3 -> typeArgument3 .)
    OP_ARRAY        reduce using rule 99 (typeArgumentList3 -> typeArgument3 .)
    INSTANCEOF      reduce using rule 99 (typeArgumentList3 -> typeArgument3 .)
    OP_EQ           reduce using rule 99 (typeArgumentList3 -> typeArgument3 .)
    OP_NE           reduce using rule 99 (typeArgumentList3 -> typeArgument3 .)
    AND             reduce using rule 99 (typeArgumentList3 -> typeArgument3 .)
    CARET           reduce using rule 99 (typeArgumentList3 -> typeArgument3 .)
    VERTICAL        reduce using rule 99 (typeArgumentList3 -> typeArgument3 .)
    OP_LAND         reduce using rule 99 (typeArgumentList3 -> typeArgument3 .)
    QUES            reduce using rule 99 (typeArgumentList3 -> typeArgument3 .)
    OP_LOR          reduce using rule 99 (typeArgumentList3 -> typeArgument3 .)
    RPAREN          reduce using rule 99 (typeArgumentList3 -> typeArgument3 .)
    BRPAREN         reduce using rule 99 (typeArgumentList3 -> typeArgument3 .)
    SEMI            reduce using rule 99 (typeArgumentList3 -> typeArgument3 .)
    COLON           reduce using rule 99 (typeArgumentList3 -> typeArgument3 .)
    FRPAREN         reduce using rule 99 (typeArgumentList3 -> typeArgument3 .)
    EXTENDS         reduce using rule 99 (typeArgumentList3 -> typeArgument3 .)
    BOOLEAN         reduce using rule 99 (typeArgumentList3 -> typeArgument3 .)
    VOID            reduce using rule 99 (typeArgumentList3 -> typeArgument3 .)
    BYTE            reduce using rule 99 (typeArgumentList3 -> typeArgument3 .)
    SHORT           reduce using rule 99 (typeArgumentList3 -> typeArgument3 .)
    INT             reduce using rule 99 (typeArgumentList3 -> typeArgument3 .)
    LONG            reduce using rule 99 (typeArgumentList3 -> typeArgument3 .)
    CHAR            reduce using rule 99 (typeArgumentList3 -> typeArgument3 .)
    FLOAT           reduce using rule 99 (typeArgumentList3 -> typeArgument3 .)
    DOUBLE          reduce using rule 99 (typeArgumentList3 -> typeArgument3 .)
    MORE            reduce using rule 99 (typeArgumentList3 -> typeArgument3 .)
    OP_SHR          reduce using rule 99 (typeArgumentList3 -> typeArgument3 .)
    OP_SHRR         reduce using rule 99 (typeArgumentList3 -> typeArgument3 .)


state 1034

    (116) wildcard3 -> QUES . OP_SHRR
    (117) wildcard3 -> QUES . wildcardBounds3
    (112) wildcard2 -> QUES . OP_SHR
    (113) wildcard2 -> QUES . wildcardBounds2
    (108) wildcard1 -> QUES . MORE
    (109) wildcard1 -> QUES . wildcardBounds1
    (104) wildcard -> QUES .
    (105) wildcard -> QUES . wildcardBounds
    (118) wildcardBounds3 -> . EXTENDS referenceType3
    (119) wildcardBounds3 -> . SUPER referenceType3
    (114) wildcardBounds2 -> . EXTENDS referenceType2
    (115) wildcardBounds2 -> . SUPER referenceType2
    (110) wildcardBounds1 -> . EXTENDS referenceType1
    (111) wildcardBounds1 -> . SUPER referenceType1
    (106) wildcardBounds -> . EXTENDS referenceType
    (107) wildcardBounds -> . SUPER referenceType

    OP_SHRR         shift and go to state 1087
    OP_SHR          shift and go to state 961
    MORE            shift and go to state 723
    COMMA           reduce using rule 104 (wildcard -> QUES .)
    EXTENDS         shift and go to state 1088
    SUPER           shift and go to state 1090

    wildcardBounds3                shift and go to state 1089
    wildcardBounds1                shift and go to state 720
    wildcardBounds2                shift and go to state 963
    wildcardBounds                 shift and go to state 721

state 1035

    (100) typeArgumentList3 -> typeArgumentList . COMMA typeArgument3
    (94) typeArgumentList2 -> typeArgumentList . COMMA typeArgument2
    (88) typeArgumentList1 -> typeArgumentList . COMMA typeArgument1
    (86) typeArgumentList -> typeArgumentList . COMMA typeArgument

    COMMA           shift and go to state 1091


state 1036

    (106) wildcardBounds -> EXTENDS referenceType .
    (97) referenceType2 -> referenceType . OP_SHR
    (91) referenceType1 -> referenceType . MORE

    COMMA           reduce using rule 106 (wildcardBounds -> EXTENDS referenceType .)
    OP_SHR          shift and go to state 959
    MORE            shift and go to state 716


state 1037

    (114) wildcardBounds2 -> EXTENDS referenceType2 .

    SUPER           reduce using rule 114 (wildcardBounds2 -> EXTENDS referenceType2 .)
    THIS            reduce using rule 114 (wildcardBounds2 -> EXTENDS referenceType2 .)
    Identifier      reduce using rule 114 (wildcardBounds2 -> EXTENDS referenceType2 .)
    DOT             reduce using rule 114 (wildcardBounds2 -> EXTENDS referenceType2 .)
    COMMA           reduce using rule 114 (wildcardBounds2 -> EXTENDS referenceType2 .)
    BLPAREN         reduce using rule 114 (wildcardBounds2 -> EXTENDS referenceType2 .)
    IMPLEMENTS      reduce using rule 114 (wildcardBounds2 -> EXTENDS referenceType2 .)
    FLPAREN         reduce using rule 114 (wildcardBounds2 -> EXTENDS referenceType2 .)
    LPAREN          reduce using rule 114 (wildcardBounds2 -> EXTENDS referenceType2 .)
    OP_ARRAY        reduce using rule 114 (wildcardBounds2 -> EXTENDS referenceType2 .)
    INSTANCEOF      reduce using rule 114 (wildcardBounds2 -> EXTENDS referenceType2 .)
    OP_EQ           reduce using rule 114 (wildcardBounds2 -> EXTENDS referenceType2 .)
    OP_NE           reduce using rule 114 (wildcardBounds2 -> EXTENDS referenceType2 .)
    AND             reduce using rule 114 (wildcardBounds2 -> EXTENDS referenceType2 .)
    CARET           reduce using rule 114 (wildcardBounds2 -> EXTENDS referenceType2 .)
    VERTICAL        reduce using rule 114 (wildcardBounds2 -> EXTENDS referenceType2 .)
    OP_LAND         reduce using rule 114 (wildcardBounds2 -> EXTENDS referenceType2 .)
    QUES            reduce using rule 114 (wildcardBounds2 -> EXTENDS referenceType2 .)
    OP_LOR          reduce using rule 114 (wildcardBounds2 -> EXTENDS referenceType2 .)
    RPAREN          reduce using rule 114 (wildcardBounds2 -> EXTENDS referenceType2 .)
    BRPAREN         reduce using rule 114 (wildcardBounds2 -> EXTENDS referenceType2 .)
    SEMI            reduce using rule 114 (wildcardBounds2 -> EXTENDS referenceType2 .)
    COLON           reduce using rule 114 (wildcardBounds2 -> EXTENDS referenceType2 .)
    FRPAREN         reduce using rule 114 (wildcardBounds2 -> EXTENDS referenceType2 .)
    EXTENDS         reduce using rule 114 (wildcardBounds2 -> EXTENDS referenceType2 .)
    BOOLEAN         reduce using rule 114 (wildcardBounds2 -> EXTENDS referenceType2 .)
    VOID            reduce using rule 114 (wildcardBounds2 -> EXTENDS referenceType2 .)
    BYTE            reduce using rule 114 (wildcardBounds2 -> EXTENDS referenceType2 .)
    SHORT           reduce using rule 114 (wildcardBounds2 -> EXTENDS referenceType2 .)
    INT             reduce using rule 114 (wildcardBounds2 -> EXTENDS referenceType2 .)
    LONG            reduce using rule 114 (wildcardBounds2 -> EXTENDS referenceType2 .)
    CHAR            reduce using rule 114 (wildcardBounds2 -> EXTENDS referenceType2 .)
    FLOAT           reduce using rule 114 (wildcardBounds2 -> EXTENDS referenceType2 .)
    DOUBLE          reduce using rule 114 (wildcardBounds2 -> EXTENDS referenceType2 .)
    MORE            reduce using rule 114 (wildcardBounds2 -> EXTENDS referenceType2 .)
    OP_SHR          reduce using rule 114 (wildcardBounds2 -> EXTENDS referenceType2 .)
    OP_SHRR         reduce using rule 114 (wildcardBounds2 -> EXTENDS referenceType2 .)


state 1038

    (107) wildcardBounds -> SUPER referenceType .
    (97) referenceType2 -> referenceType . OP_SHR
    (91) referenceType1 -> referenceType . MORE

    COMMA           reduce using rule 107 (wildcardBounds -> SUPER referenceType .)
    OP_SHR          shift and go to state 959
    MORE            shift and go to state 716


state 1039

    (115) wildcardBounds2 -> SUPER referenceType2 .

    SUPER           reduce using rule 115 (wildcardBounds2 -> SUPER referenceType2 .)
    THIS            reduce using rule 115 (wildcardBounds2 -> SUPER referenceType2 .)
    Identifier      reduce using rule 115 (wildcardBounds2 -> SUPER referenceType2 .)
    DOT             reduce using rule 115 (wildcardBounds2 -> SUPER referenceType2 .)
    COMMA           reduce using rule 115 (wildcardBounds2 -> SUPER referenceType2 .)
    BLPAREN         reduce using rule 115 (wildcardBounds2 -> SUPER referenceType2 .)
    IMPLEMENTS      reduce using rule 115 (wildcardBounds2 -> SUPER referenceType2 .)
    FLPAREN         reduce using rule 115 (wildcardBounds2 -> SUPER referenceType2 .)
    LPAREN          reduce using rule 115 (wildcardBounds2 -> SUPER referenceType2 .)
    OP_ARRAY        reduce using rule 115 (wildcardBounds2 -> SUPER referenceType2 .)
    INSTANCEOF      reduce using rule 115 (wildcardBounds2 -> SUPER referenceType2 .)
    OP_EQ           reduce using rule 115 (wildcardBounds2 -> SUPER referenceType2 .)
    OP_NE           reduce using rule 115 (wildcardBounds2 -> SUPER referenceType2 .)
    AND             reduce using rule 115 (wildcardBounds2 -> SUPER referenceType2 .)
    CARET           reduce using rule 115 (wildcardBounds2 -> SUPER referenceType2 .)
    VERTICAL        reduce using rule 115 (wildcardBounds2 -> SUPER referenceType2 .)
    OP_LAND         reduce using rule 115 (wildcardBounds2 -> SUPER referenceType2 .)
    QUES            reduce using rule 115 (wildcardBounds2 -> SUPER referenceType2 .)
    OP_LOR          reduce using rule 115 (wildcardBounds2 -> SUPER referenceType2 .)
    RPAREN          reduce using rule 115 (wildcardBounds2 -> SUPER referenceType2 .)
    BRPAREN         reduce using rule 115 (wildcardBounds2 -> SUPER referenceType2 .)
    SEMI            reduce using rule 115 (wildcardBounds2 -> SUPER referenceType2 .)
    COLON           reduce using rule 115 (wildcardBounds2 -> SUPER referenceType2 .)
    FRPAREN         reduce using rule 115 (wildcardBounds2 -> SUPER referenceType2 .)
    EXTENDS         reduce using rule 115 (wildcardBounds2 -> SUPER referenceType2 .)
    BOOLEAN         reduce using rule 115 (wildcardBounds2 -> SUPER referenceType2 .)
    VOID            reduce using rule 115 (wildcardBounds2 -> SUPER referenceType2 .)
    BYTE            reduce using rule 115 (wildcardBounds2 -> SUPER referenceType2 .)
    SHORT           reduce using rule 115 (wildcardBounds2 -> SUPER referenceType2 .)
    INT             reduce using rule 115 (wildcardBounds2 -> SUPER referenceType2 .)
    LONG            reduce using rule 115 (wildcardBounds2 -> SUPER referenceType2 .)
    CHAR            reduce using rule 115 (wildcardBounds2 -> SUPER referenceType2 .)
    FLOAT           reduce using rule 115 (wildcardBounds2 -> SUPER referenceType2 .)
    DOUBLE          reduce using rule 115 (wildcardBounds2 -> SUPER referenceType2 .)
    MORE            reduce using rule 115 (wildcardBounds2 -> SUPER referenceType2 .)
    OP_SHR          reduce using rule 115 (wildcardBounds2 -> SUPER referenceType2 .)
    OP_SHRR         reduce using rule 115 (wildcardBounds2 -> SUPER referenceType2 .)


state 1040

    (83) typeArgument -> referenceType .
    (97) referenceType2 -> referenceType . OP_SHR
    (91) referenceType1 -> referenceType . MORE

    COMMA           reduce using rule 83 (typeArgument -> referenceType .)
    OP_SHR          shift and go to state 959
    MORE            shift and go to state 716


state 1041

    (94) typeArgumentList2 -> typeArgumentList COMMA typeArgument2 .

    SUPER           reduce using rule 94 (typeArgumentList2 -> typeArgumentList COMMA typeArgument2 .)
    THIS            reduce using rule 94 (typeArgumentList2 -> typeArgumentList COMMA typeArgument2 .)
    Identifier      reduce using rule 94 (typeArgumentList2 -> typeArgumentList COMMA typeArgument2 .)
    DOT             reduce using rule 94 (typeArgumentList2 -> typeArgumentList COMMA typeArgument2 .)
    COMMA           reduce using rule 94 (typeArgumentList2 -> typeArgumentList COMMA typeArgument2 .)
    BLPAREN         reduce using rule 94 (typeArgumentList2 -> typeArgumentList COMMA typeArgument2 .)
    IMPLEMENTS      reduce using rule 94 (typeArgumentList2 -> typeArgumentList COMMA typeArgument2 .)
    FLPAREN         reduce using rule 94 (typeArgumentList2 -> typeArgumentList COMMA typeArgument2 .)
    LPAREN          reduce using rule 94 (typeArgumentList2 -> typeArgumentList COMMA typeArgument2 .)
    OP_ARRAY        reduce using rule 94 (typeArgumentList2 -> typeArgumentList COMMA typeArgument2 .)
    INSTANCEOF      reduce using rule 94 (typeArgumentList2 -> typeArgumentList COMMA typeArgument2 .)
    OP_EQ           reduce using rule 94 (typeArgumentList2 -> typeArgumentList COMMA typeArgument2 .)
    OP_NE           reduce using rule 94 (typeArgumentList2 -> typeArgumentList COMMA typeArgument2 .)
    AND             reduce using rule 94 (typeArgumentList2 -> typeArgumentList COMMA typeArgument2 .)
    CARET           reduce using rule 94 (typeArgumentList2 -> typeArgumentList COMMA typeArgument2 .)
    VERTICAL        reduce using rule 94 (typeArgumentList2 -> typeArgumentList COMMA typeArgument2 .)
    OP_LAND         reduce using rule 94 (typeArgumentList2 -> typeArgumentList COMMA typeArgument2 .)
    QUES            reduce using rule 94 (typeArgumentList2 -> typeArgumentList COMMA typeArgument2 .)
    OP_LOR          reduce using rule 94 (typeArgumentList2 -> typeArgumentList COMMA typeArgument2 .)
    RPAREN          reduce using rule 94 (typeArgumentList2 -> typeArgumentList COMMA typeArgument2 .)
    BRPAREN         reduce using rule 94 (typeArgumentList2 -> typeArgumentList COMMA typeArgument2 .)
    SEMI            reduce using rule 94 (typeArgumentList2 -> typeArgumentList COMMA typeArgument2 .)
    COLON           reduce using rule 94 (typeArgumentList2 -> typeArgumentList COMMA typeArgument2 .)
    FRPAREN         reduce using rule 94 (typeArgumentList2 -> typeArgumentList COMMA typeArgument2 .)
    EXTENDS         reduce using rule 94 (typeArgumentList2 -> typeArgumentList COMMA typeArgument2 .)
    BOOLEAN         reduce using rule 94 (typeArgumentList2 -> typeArgumentList COMMA typeArgument2 .)
    VOID            reduce using rule 94 (typeArgumentList2 -> typeArgumentList COMMA typeArgument2 .)
    BYTE            reduce using rule 94 (typeArgumentList2 -> typeArgumentList COMMA typeArgument2 .)
    SHORT           reduce using rule 94 (typeArgumentList2 -> typeArgumentList COMMA typeArgument2 .)
    INT             reduce using rule 94 (typeArgumentList2 -> typeArgumentList COMMA typeArgument2 .)
    LONG            reduce using rule 94 (typeArgumentList2 -> typeArgumentList COMMA typeArgument2 .)
    CHAR            reduce using rule 94 (typeArgumentList2 -> typeArgumentList COMMA typeArgument2 .)
    FLOAT           reduce using rule 94 (typeArgumentList2 -> typeArgumentList COMMA typeArgument2 .)
    DOUBLE          reduce using rule 94 (typeArgumentList2 -> typeArgumentList COMMA typeArgument2 .)
    MORE            reduce using rule 94 (typeArgumentList2 -> typeArgumentList COMMA typeArgument2 .)
    OP_SHR          reduce using rule 94 (typeArgumentList2 -> typeArgumentList COMMA typeArgument2 .)
    OP_SHRR         reduce using rule 94 (typeArgumentList2 -> typeArgumentList COMMA typeArgument2 .)


state 1042

    (431) explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN . SEMI

    SEMI            shift and go to state 1092


state 1043

    (435) explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt . RPAREN SEMI

    RPAREN          shift and go to state 1093


state 1044

    (433) explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt . RPAREN SEMI

    RPAREN          shift and go to state 1094


state 1045

    (429) explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN . SEMI

    SEMI            shift and go to state 1095


state 1046

    (476) conditionalExpression -> conditionalOrExpression QUES expression COLON conditionalExpression .

    RPAREN          reduce using rule 476 (conditionalExpression -> conditionalOrExpression QUES expression COLON conditionalExpression .)
    COMMA           reduce using rule 476 (conditionalExpression -> conditionalOrExpression QUES expression COLON conditionalExpression .)
    BRPAREN         reduce using rule 476 (conditionalExpression -> conditionalOrExpression QUES expression COLON conditionalExpression .)
    SEMI            reduce using rule 476 (conditionalExpression -> conditionalOrExpression QUES expression COLON conditionalExpression .)
    FRPAREN         reduce using rule 476 (conditionalExpression -> conditionalOrExpression QUES expression COLON conditionalExpression .)
    COLON           reduce using rule 476 (conditionalExpression -> conditionalOrExpression QUES expression COLON conditionalExpression .)


state 1047

    (427) explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .

    IF              reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    WHILE           reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    FOR             reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    BLPAREN         reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    ASSERT          reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    SEMI            reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    SWITCH          reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    DO              reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    BREAK           reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    CONTINUE        reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    RETURN          reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    SYNCHRONIZED    reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    THROW           reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    TRY             reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    Identifier      reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    AT              reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    BOOLEAN         reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    VOID            reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    BYTE            reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    SHORT           reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    INT             reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    LONG            reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    CHAR            reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    FLOAT           reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    DOUBLE          reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    PUBLIC          reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    PROTECTED       reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    PRIVATE         reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    STATIC          reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    ABSTRACT        reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    FINAL           reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    NATIVE          reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    TRANSIENT       reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    VOLATILE        reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    STRICTFP        reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    THIS            reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    SUPER           reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    OP_INC          reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    OP_DEC          reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    NEW             reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    LESS            reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    LPAREN          reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    CharacterLiteral reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    StringLiteral   reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    NULL            reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    LONG_NUMBER     reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    LONG_HEX_NUMBER reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_1   reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_2   reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_3   reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_4   reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_5   reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_6   reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    TRUE            reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    FALSE           reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    INTERFACE       reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    ENUM            reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    CLASS           reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    BRPAREN         reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    CASE            reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    DEFAULT         reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    ELSE            reduce using rule 427 (explicitConstructorInvocation -> typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)


state 1048

    (426) explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .

    IF              reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    WHILE           reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    FOR             reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    BLPAREN         reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    ASSERT          reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    SEMI            reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    SWITCH          reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    DO              reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    BREAK           reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    CONTINUE        reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    RETURN          reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    SYNCHRONIZED    reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    THROW           reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    TRY             reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    Identifier      reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    AT              reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    BOOLEAN         reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    VOID            reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    BYTE            reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    SHORT           reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    INT             reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    LONG            reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    CHAR            reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    FLOAT           reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    DOUBLE          reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    PUBLIC          reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    PROTECTED       reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    PRIVATE         reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    STATIC          reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    ABSTRACT        reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    FINAL           reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    NATIVE          reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    TRANSIENT       reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    VOLATILE        reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    STRICTFP        reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    THIS            reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    SUPER           reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    OP_INC          reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    OP_DEC          reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    NEW             reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    LESS            reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    LPAREN          reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    CharacterLiteral reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    StringLiteral   reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    NULL            reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    LONG_NUMBER     reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    LONG_HEX_NUMBER reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    NON_INTEGER_1   reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    NON_INTEGER_2   reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    NON_INTEGER_3   reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    NON_INTEGER_4   reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    NON_INTEGER_5   reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    NON_INTEGER_6   reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    TRUE            reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    FALSE           reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    INTERFACE       reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    ENUM            reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    CLASS           reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    BRPAREN         reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    CASE            reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    DEFAULT         reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)
    ELSE            reduce using rule 426 (explicitConstructorInvocation -> typeArguments SUPER LPAREN argumentList RPAREN SEMI .)


state 1049

    (371) enhancedForStatementHeadInit -> FOR LPAREN modifiers type Identifier arrays_opt .
    (301) variableDeclaratorId -> Identifier arrays_opt .

    COLON           reduce using rule 371 (enhancedForStatementHeadInit -> FOR LPAREN modifiers type Identifier arrays_opt .)
    ASS             reduce using rule 301 (variableDeclaratorId -> Identifier arrays_opt .)
    COMMA           reduce using rule 301 (variableDeclaratorId -> Identifier arrays_opt .)
    SEMI            reduce using rule 301 (variableDeclaratorId -> Identifier arrays_opt .)


state 1050

    (354) forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI . forUpdate_opt RPAREN statement
    (364) forUpdate_opt -> . forUpdate
    (365) forUpdate_opt -> . empty
    (366) forUpdate -> . statementExpressionList
    (631) empty -> .
    (360) statementExpressionList -> . statementExpression
    (361) statementExpressionList -> . statementExpressionList COMMA statementExpression
    (326) statementExpression -> . assignment
    (327) statementExpression -> . preIncrementExpression
    (328) statementExpression -> . preDecrementExpression
    (329) statementExpression -> . postIncrementExpression
    (330) statementExpression -> . postDecrementExpression
    (331) statementExpression -> . methodInvocation
    (332) statementExpression -> . classInstanceCreationExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (442) classInstanceCreationExpressionName -> . name DOT
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE

    RPAREN          reduce using rule 631 (empty -> .)
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    SUPER           shift and go to state 765
    NEW             shift and go to state 326
    Identifier      shift and go to state 68
    THIS            shift and go to state 181
    LPAREN          shift and go to state 348
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    primary                        shift and go to state 759
    forUpdate_opt                  shift and go to state 1096
    postDecrementExpression        shift and go to state 306
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 308
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 311
    fieldAccess                    shift and go to state 189
    integerLiteral                 shift and go to state 183
    empty                          shift and go to state 1097
    classInstanceCreationExpressionName shift and go to state 187
    forUpdate                      shift and go to state 1098
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 346
    FloatingPointLiteral           shift and go to state 214
    postIncrementExpression        shift and go to state 293
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 298
    name                           shift and go to state 978
    primitiveType                  shift and go to state 219
    statementExpression            shift and go to state 764
    preDecrementExpression         shift and go to state 320
    arrayCreationWithArrayInitializer shift and go to state 227
    statementExpressionList        shift and go to state 1099
    classInstanceCreationExpression shift and go to state 322

state 1051

    (341) methodInvocation -> name DOT . typeArguments Identifier LPAREN argumentList_opt RPAREN
    (442) classInstanceCreationExpressionName -> name DOT .
    (32) qualifiedName -> name DOT . simpleName
    (602) primaryNoNewArray -> name DOT . THIS
    (603) primaryNoNewArray -> name DOT . SUPER
    (604) primaryNoNewArray -> name DOT . CLASS
    (82) typeArguments -> . LESS typeArgumentList1
    (31) simpleName -> . Identifier

    NEW             reduce using rule 442 (classInstanceCreationExpressionName -> name DOT .)
    THIS            shift and go to state 619
    SUPER           shift and go to state 621
    CLASS           shift and go to state 622
    LESS            shift and go to state 287
    Identifier      shift and go to state 68

    typeArguments                  shift and go to state 620
    simpleName                     shift and go to state 365

state 1052

    (410) catchType -> unionType .
    (412) unionType -> unionType . VERTICAL type

    Identifier      reduce using rule 410 (catchType -> unionType .)
    VERTICAL        shift and go to state 1100


state 1053

    (411) unionType -> type .

    VERTICAL        reduce using rule 411 (unionType -> type .)
    Identifier      reduce using rule 411 (unionType -> type .)


state 1054

    (409) catchFormalParameter -> modifiers_opt catchType . variableDeclaratorId
    (301) variableDeclaratorId -> . Identifier arrays_opt

    Identifier      shift and go to state 575

    variableDeclaratorId           shift and go to state 1101

state 1055

    (408) catchClause -> CATCH LPAREN catchFormalParameter RPAREN . block
    (283) block -> . BLPAREN blockStatements_opt BRPAREN

    BLPAREN         shift and go to state 120

    block                          shift and go to state 1102

state 1056

    (421) resource -> type variableDeclaratorId ASS variableInitializer .

    SEMI            reduce using rule 421 (resource -> type variableDeclaratorId ASS variableInitializer .)
    RPAREN          reduce using rule 421 (resource -> type variableDeclaratorId ASS variableInitializer .)


state 1057

    (422) resource -> modifiers type variableDeclaratorId ASS . variableInitializer
    (302) variableInitializer -> . expression
    (303) variableInitializer -> . arrayInitializer
    (456) expression -> . assignmentExpression
    (335) arrayInitializer -> . BLPAREN comma_opt BRPAREN
    (336) arrayInitializer -> . BLPAREN variableInitializers BRPAREN
    (337) arrayInitializer -> . BLPAREN variableInitializers COMMA BRPAREN
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    BLPAREN         shift and go to state 821
    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    qualifiedName                  shift and go to state 64
    fieldAccess                    shift and go to state 189
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    arrayAccess                    shift and go to state 234
    primitiveType                  shift and go to state 219
    shiftExpression                shift and go to state 552
    arrayInitializer               shift and go to state 848
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    assignment                     shift and go to state 554
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    unaryExpressionNotPlusMinus    shift and go to state 397
    assignmentExpression           shift and go to state 543
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    variableInitializer            shift and go to state 1103
    expression                     shift and go to state 847
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 1058

    (430) explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN . SEMI

    SEMI            shift and go to state 1104


state 1059

    (434) explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt . RPAREN SEMI

    RPAREN          shift and go to state 1105


state 1060

    (432) explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt . RPAREN SEMI

    RPAREN          shift and go to state 1106


state 1061

    (428) explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN . SEMI

    SEMI            shift and go to state 1107


state 1062

    (390) switchLabel -> CASE . constantExpression COLON
    (392) constantExpression -> . expression
    (456) expression -> . assignmentExpression
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    assignmentExpression           shift and go to state 543
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    fieldAccess                    shift and go to state 189
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    postfixExpression              shift and go to state 537
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 554
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    instanceOfExpression           shift and go to state 540
    unaryExpressionNotPlusMinus    shift and go to state 397
    arrayAccess                    shift and go to state 234
    constantExpression             shift and go to state 1108
    name                           shift and go to state 393
    expression                     shift and go to state 1109
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 1063

    (388) switchLabels -> switchLabel .

    BRPAREN         reduce using rule 388 (switchLabels -> switchLabel .)
    CASE            reduce using rule 388 (switchLabels -> switchLabel .)
    DEFAULT         reduce using rule 388 (switchLabels -> switchLabel .)
    IF              reduce using rule 388 (switchLabels -> switchLabel .)
    WHILE           reduce using rule 388 (switchLabels -> switchLabel .)
    FOR             reduce using rule 388 (switchLabels -> switchLabel .)
    BLPAREN         reduce using rule 388 (switchLabels -> switchLabel .)
    ASSERT          reduce using rule 388 (switchLabels -> switchLabel .)
    SEMI            reduce using rule 388 (switchLabels -> switchLabel .)
    SWITCH          reduce using rule 388 (switchLabels -> switchLabel .)
    DO              reduce using rule 388 (switchLabels -> switchLabel .)
    BREAK           reduce using rule 388 (switchLabels -> switchLabel .)
    CONTINUE        reduce using rule 388 (switchLabels -> switchLabel .)
    RETURN          reduce using rule 388 (switchLabels -> switchLabel .)
    SYNCHRONIZED    reduce using rule 388 (switchLabels -> switchLabel .)
    THROW           reduce using rule 388 (switchLabels -> switchLabel .)
    TRY             reduce using rule 388 (switchLabels -> switchLabel .)
    Identifier      reduce using rule 388 (switchLabels -> switchLabel .)
    AT              reduce using rule 388 (switchLabels -> switchLabel .)
    BOOLEAN         reduce using rule 388 (switchLabels -> switchLabel .)
    VOID            reduce using rule 388 (switchLabels -> switchLabel .)
    BYTE            reduce using rule 388 (switchLabels -> switchLabel .)
    SHORT           reduce using rule 388 (switchLabels -> switchLabel .)
    INT             reduce using rule 388 (switchLabels -> switchLabel .)
    LONG            reduce using rule 388 (switchLabels -> switchLabel .)
    CHAR            reduce using rule 388 (switchLabels -> switchLabel .)
    FLOAT           reduce using rule 388 (switchLabels -> switchLabel .)
    DOUBLE          reduce using rule 388 (switchLabels -> switchLabel .)
    PUBLIC          reduce using rule 388 (switchLabels -> switchLabel .)
    PROTECTED       reduce using rule 388 (switchLabels -> switchLabel .)
    PRIVATE         reduce using rule 388 (switchLabels -> switchLabel .)
    STATIC          reduce using rule 388 (switchLabels -> switchLabel .)
    ABSTRACT        reduce using rule 388 (switchLabels -> switchLabel .)
    FINAL           reduce using rule 388 (switchLabels -> switchLabel .)
    NATIVE          reduce using rule 388 (switchLabels -> switchLabel .)
    TRANSIENT       reduce using rule 388 (switchLabels -> switchLabel .)
    VOLATILE        reduce using rule 388 (switchLabels -> switchLabel .)
    STRICTFP        reduce using rule 388 (switchLabels -> switchLabel .)
    THIS            reduce using rule 388 (switchLabels -> switchLabel .)
    SUPER           reduce using rule 388 (switchLabels -> switchLabel .)
    OP_INC          reduce using rule 388 (switchLabels -> switchLabel .)
    OP_DEC          reduce using rule 388 (switchLabels -> switchLabel .)
    NEW             reduce using rule 388 (switchLabels -> switchLabel .)
    LESS            reduce using rule 388 (switchLabels -> switchLabel .)
    LPAREN          reduce using rule 388 (switchLabels -> switchLabel .)
    CharacterLiteral reduce using rule 388 (switchLabels -> switchLabel .)
    StringLiteral   reduce using rule 388 (switchLabels -> switchLabel .)
    NULL            reduce using rule 388 (switchLabels -> switchLabel .)
    LONG_NUMBER     reduce using rule 388 (switchLabels -> switchLabel .)
    LONG_HEX_NUMBER reduce using rule 388 (switchLabels -> switchLabel .)
    NON_INTEGER_1   reduce using rule 388 (switchLabels -> switchLabel .)
    NON_INTEGER_2   reduce using rule 388 (switchLabels -> switchLabel .)
    NON_INTEGER_3   reduce using rule 388 (switchLabels -> switchLabel .)
    NON_INTEGER_4   reduce using rule 388 (switchLabels -> switchLabel .)
    NON_INTEGER_5   reduce using rule 388 (switchLabels -> switchLabel .)
    NON_INTEGER_6   reduce using rule 388 (switchLabels -> switchLabel .)
    TRUE            reduce using rule 388 (switchLabels -> switchLabel .)
    FALSE           reduce using rule 388 (switchLabels -> switchLabel .)
    INTERFACE       reduce using rule 388 (switchLabels -> switchLabel .)
    ENUM            reduce using rule 388 (switchLabels -> switchLabel .)
    CLASS           reduce using rule 388 (switchLabels -> switchLabel .)


state 1064

    (385) switchBlockStatements -> switchBlockStatement .

    BRPAREN         reduce using rule 385 (switchBlockStatements -> switchBlockStatement .)
    CASE            reduce using rule 385 (switchBlockStatements -> switchBlockStatement .)
    DEFAULT         reduce using rule 385 (switchBlockStatements -> switchBlockStatement .)


state 1065

    (391) switchLabel -> DEFAULT . COLON

    COLON           shift and go to state 1110


state 1066

    (382) switchBlock -> BLPAREN switchBlockStatements . BRPAREN
    (384) switchBlock -> BLPAREN switchBlockStatements . switchLabels BRPAREN
    (386) switchBlockStatements -> switchBlockStatements . switchBlockStatement
    (388) switchLabels -> . switchLabel
    (389) switchLabels -> . switchLabels switchLabel
    (387) switchBlockStatement -> . switchLabels blockStatements
    (390) switchLabel -> . CASE constantExpression COLON
    (391) switchLabel -> . DEFAULT COLON

    BRPAREN         shift and go to state 1113
    CASE            shift and go to state 1062
    DEFAULT         shift and go to state 1065

    switchLabel                    shift and go to state 1063
    switchBlockStatement           shift and go to state 1111
    switchLabels                   shift and go to state 1112

state 1067

    (383) switchBlock -> BLPAREN switchLabels . BRPAREN
    (389) switchLabels -> switchLabels . switchLabel
    (387) switchBlockStatement -> switchLabels . blockStatements
    (390) switchLabel -> . CASE constantExpression COLON
    (391) switchLabel -> . DEFAULT COLON
    (284) blockStatements -> . blockStatement
    (285) blockStatements -> . blockStatements blockStatement
    (288) blockStatement -> . localVariableDeclarationStatement
    (289) blockStatement -> . statement
    (290) blockStatement -> . classDeclaration
    (291) blockStatement -> . interfaceDeclaration
    (292) blockStatement -> . annotationTypeDeclaration
    (293) blockStatement -> . enumDeclaration
    (294) localVariableDeclarationStatement -> . localVariableDeclaration SEMI
    (304) statement -> . statementWithoutTrailingSubStatement
    (305) statement -> . labeldStatement
    (306) statement -> . ifThenStatement
    (307) statement -> . ifThenElseStatement
    (308) statement -> . whileStatement
    (309) statement -> . forStatement
    (310) statement -> . enhancedForStatement
    (136) classDeclaration -> . classHead classBody
    (195) interfaceDeclaration -> . interfaceHead InterfaceBody
    (239) annotationTypeDeclaration -> . annotationTypeDeclarationHead annotationTypeBody
    (215) enumDeclaration -> . enumHead enumBody
    (295) localVariableDeclaration -> . type variableDeclarators
    (296) localVariableDeclaration -> . modifiers type variableDeclarators
    (311) statementWithoutTrailingSubStatement -> . block
    (312) statementWithoutTrailingSubStatement -> . expressionStatement
    (313) statementWithoutTrailingSubStatement -> . assertStatement
    (314) statementWithoutTrailingSubStatement -> . emptyStatement
    (315) statementWithoutTrailingSubStatement -> . switchStatement
    (316) statementWithoutTrailingSubStatement -> . doStatement
    (317) statementWithoutTrailingSubStatement -> . breakStatement
    (318) statementWithoutTrailingSubStatement -> . continueStatement
    (319) statementWithoutTrailingSubStatement -> . returnStatement
    (320) statementWithoutTrailingSubStatement -> . synchronizedStatement
    (321) statementWithoutTrailingSubStatement -> . throwStatment
    (322) statementWithoutTrailingSubStatement -> . tryStatement
    (323) statementWithoutTrailingSubStatement -> . tryStatementWithResources
    (346) labeldStatement -> . label COLON statement
    (349) ifThenStatement -> . IF LPAREN expression RPAREN statement
    (350) ifThenElseStatement -> . IF LPAREN expression RPAREN statementNoShortIf ELSE statement
    (352) whileStatement -> . WHILE LPAREN expression RPAREN statement
    (354) forStatement -> . FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement
    (367) enhancedForStatement -> . enhancedForStatementHead statement
    (137) classHead -> . className classExtends_opt classImpls_opt
    (196) interfaceHead -> . interfaceHeadName interfaceHeadExtends_opt
    (240) annotationTypeDeclarationHead -> . annotationTypeDeclarationHeadName classExtends_opt classImpls_opt
    (216) enumHead -> . enumHeadName classImpls_opt
    (33) type -> . primitiveType
    (34) type -> . referenceType
    (122) modifiers -> . modifier
    (123) modifiers -> . modifiers modifier
    (283) block -> . BLPAREN blockStatements_opt BRPAREN
    (324) expressionStatement -> . statementExpression SEMI
    (325) expressionStatement -> . explicitConstructorInvocation
    (377) assertStatement -> . ASSERT expression SEMI
    (378) assertStatement -> . ASSERT expression COLON expression SEMI
    (379) emptyStatement -> . SEMI
    (380) switchStatement -> . SWITCH LPAREN expression RPAREN switchBlock
    (393) doStatement -> . DO statement WHILE LPAREN expression RPAREN SEMI
    (394) breakStatement -> . BREAK SEMI
    (395) breakStatement -> . BREAK Identifier SEMI
    (396) continueStatement -> . CONTINUE SEMI
    (397) continueStatement -> . CONTINUE Identifier SEMI
    (398) returnStatement -> . RETURN expression_opt SEMI
    (399) synchronizedStatement -> . SYNCHRONIZED LPAREN expression RPAREN block
    (400) throwStatment -> . THROW expression SEMI
    (401) tryStatement -> . TRY tryBlock catches
    (402) tryStatement -> . TRY tryBlock catches_opt finally
    (413) tryStatementWithResources -> . TRY resourceSpecification tryBlock catches_opt
    (414) tryStatementWithResources -> . TRY resourceSpecification tryBlock catches_opt finally
    (348) label -> . Identifier
    (369) enhancedForStatementHead -> . enhancedForStatementHeadInit COLON expression RPAREN
    (138) className -> . classHeadName1 typeParameters
    (139) className -> . classHeadName1
    (197) interfaceHeadName -> . modifiers_opt INTERFACE Identifier typeParameters
    (198) interfaceHeadName -> . modifiers_opt INTERFACE Identifier
    (241) annotationTypeDeclarationHeadName -> . modifiers AT INTERFACE Identifier
    (242) annotationTypeDeclarationHeadName -> . modifiers AT INTERFACE Identifier typeParameters
    (243) annotationTypeDeclarationHeadName -> . AT INTERFACE Identifier typeParameters
    (244) annotationTypeDeclarationHeadName -> . AT INTERFACE Identifier
    (217) enumHeadName -> . modifiers_opt ENUM Identifier
    (218) enumHeadName -> . modifiers_opt ENUM Identifier typeParameters
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (44) referenceType -> . classOrInterfaceType
    (45) referenceType -> . arrayType
    (124) modifier -> . PUBLIC
    (125) modifier -> . PROTECTED
    (126) modifier -> . PRIVATE
    (127) modifier -> . STATIC
    (128) modifier -> . ABSTRACT
    (129) modifier -> . FINAL
    (130) modifier -> . NATIVE
    (131) modifier -> . SYNCHRONIZED
    (132) modifier -> . TRANSIENT
    (133) modifier -> . VOLATILE
    (134) modifier -> . STRICTFP
    (135) modifier -> . annotation
    (326) statementExpression -> . assignment
    (327) statementExpression -> . preIncrementExpression
    (328) statementExpression -> . preDecrementExpression
    (329) statementExpression -> . postIncrementExpression
    (330) statementExpression -> . postDecrementExpression
    (331) statementExpression -> . methodInvocation
    (332) statementExpression -> . classInstanceCreationExpression
    (424) explicitConstructorInvocation -> . THIS LPAREN argumentList_opt RPAREN SEMI
    (425) explicitConstructorInvocation -> . SUPER LPAREN argumentList_opt RPAREN SEMI
    (426) explicitConstructorInvocation -> . typeArguments SUPER LPAREN argumentList RPAREN SEMI
    (427) explicitConstructorInvocation -> . typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (428) explicitConstructorInvocation -> . primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI
    (429) explicitConstructorInvocation -> . name DOT SUPER LPAREN argumentList_opt RPAREN SEMI
    (430) explicitConstructorInvocation -> . primary DOT THIS LPAREN argumentList_opt RPAREN SEMI
    (431) explicitConstructorInvocation -> . name DOT THIS LPAREN argumentList_opt RPAREN SEMI
    (432) explicitConstructorInvocation -> . primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI
    (433) explicitConstructorInvocation -> . name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI
    (434) explicitConstructorInvocation -> . primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (435) explicitConstructorInvocation -> . name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (370) enhancedForStatementHeadInit -> . FOR LPAREN type Identifier arrays_opt
    (371) enhancedForStatementHeadInit -> . FOR LPAREN modifiers type Identifier arrays_opt
    (140) classHeadName1 -> . modifiers_opt CLASS Identifier
    (120) modifiers_opt -> . modifiers
    (121) modifiers_opt -> . empty
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (54) arrayType -> . genericType arrays
    (55) arrayType -> . genericType DOT name arrays
    (56) arrayType -> . primitiveType arrays
    (57) arrayType -> . name arrays
    (270) annotation -> . normalAnnotation
    (271) annotation -> . markerAnnotation
    (272) annotation -> . singleMemberAnnotation
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (82) typeArguments -> . LESS typeArgumentList1
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (631) empty -> .
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (273) normalAnnotation -> . annotationName LPAREN memberValuePairs_opt RPAREN
    (280) markerAnnotation -> . annotationName
    (281) singleMemberAnnotation -> . annotationName LPAREN singleMemberAnnotationMemberValue RPAREN
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (442) classInstanceCreationExpressionName -> . name DOT
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (274) annotationName -> . AT name
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE

    BRPAREN         shift and go to state 1116
    CASE            shift and go to state 1062
    DEFAULT         shift and go to state 1065
    IF              shift and go to state 349
    WHILE           shift and go to state 325
    FOR             shift and go to state 312
    BLPAREN         shift and go to state 120
    ASSERT          shift and go to state 336
    SEMI            shift and go to state 341
    SWITCH          shift and go to state 328
    DO              shift and go to state 335
    BREAK           shift and go to state 305
    CONTINUE        shift and go to state 318
    RETURN          shift and go to state 302
    SYNCHRONIZED    shift and go to state 303
    THROW           shift and go to state 354
    TRY             shift and go to state 314
    Identifier      shift and go to state 316
    AT              shift and go to state 48
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    PUBLIC          shift and go to state 46
    PROTECTED       shift and go to state 6
    PRIVATE         shift and go to state 14
    STATIC          shift and go to state 7
    ABSTRACT        shift and go to state 5
    FINAL           shift and go to state 11
    NATIVE          shift and go to state 12
    TRANSIENT       shift and go to state 19
    VOLATILE        shift and go to state 43
    STRICTFP        shift and go to state 18
    THIS            shift and go to state 300
    SUPER           shift and go to state 353
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    NEW             shift and go to state 326
    LESS            shift and go to state 287
    INTERFACE       reduce using rule 631 (empty -> .)
    ENUM            reduce using rule 631 (empty -> .)
    CLASS           reduce using rule 631 (empty -> .)
    LPAREN          shift and go to state 348
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    forStatement                   shift and go to state 286
    switchStatement                shift and go to state 288
    assertStatement                shift and go to state 289
    blockStatement                 shift and go to state 290
    genericType                    shift and go to state 271
    markerAnnotation               shift and go to state 9
    classOrInterfaceType           shift and go to state 272
    preIncrementExpression         shift and go to state 308
    booleanLiteral                 shift and go to state 173
    ifThenElseStatement            shift and go to state 291
    postfixExpression              shift and go to state 298
    primaryNoNewArray              shift and go to state 178
    whileStatement                 shift and go to state 292
    classHeadName1                 shift and go to state 33
    annotationTypeDeclarationHeadName shift and go to state 34
    postIncrementExpression        shift and go to state 293
    localVariableDeclarationStatement shift and go to state 294
    emptyStatement                 shift and go to state 295
    enhancedForStatementHead       shift and go to state 296
    returnStatement                shift and go to state 297
    arrayAccess                    shift and go to state 234
    name                           shift and go to state 299
    expressionStatement            shift and go to state 301
    annotationName                 shift and go to state 40
    classOrInterface               shift and go to state 122
    qualifiedName                  shift and go to state 64
    continueStatement              shift and go to state 304
    primitiveType                  shift and go to state 334
    postDecrementExpression        shift and go to state 306
    typeArguments                  shift and go to state 307
    label                          shift and go to state 309
    simpleName                     shift and go to state 66
    throwStatment                  shift and go to state 310
    methodInvocation               shift and go to state 311
    classInstanceCreationExpressionName shift and go to state 187
    enhancedForStatementHeadInit   shift and go to state 313
    enumHead                       shift and go to state 30
    classDeclaration               shift and go to state 315
    annotationTypeDeclaration      shift and go to state 317
    interfaceDeclaration           shift and go to state 343
    normalAnnotation               shift and go to state 24
    ifThenStatement                shift and go to state 347
    preDecrementExpression         shift and go to state 320
    block                          shift and go to state 321
    classInstanceCreationExpression shift and go to state 322
    localVariableDeclaration       shift and go to state 323
    modifiers_opt                  shift and go to state 1
    primary                        shift and go to state 324
    singleMemberAnnotation         shift and go to state 8
    enumHeadName                   shift and go to state 10
    doStatement                    shift and go to state 327
    literal                        shift and go to state 208
    labeldStatement                shift and go to state 329
    statement                      shift and go to state 330
    interfaceHeadName              shift and go to state 27
    referenceType                  shift and go to state 273
    type                           shift and go to state 331
    empty                          shift and go to state 74
    annotationTypeDeclarationHead  shift and go to state 15
    modifiers                      shift and go to state 333
    switchLabel                    shift and go to state 1114
    arrayType                      shift and go to state 269
    className                      shift and go to state 13
    modifier                       shift and go to state 45
    arrayCreationWithArrayInitializer shift and go to state 227
    classHead                      shift and go to state 3
    breakStatement                 shift and go to state 337
    tryStatementWithResources      shift and go to state 338
    synchronizedStatement          shift and go to state 339
    enumDeclaration                shift and go to state 340
    arrayCreationWithoutArrayInitializer shift and go to state 232
    tryStatement                   shift and go to state 342
    FloatingPointLiteral           shift and go to state 214
    fieldAccess                    shift and go to state 189
    statementWithoutTrailingSubStatement shift and go to state 344
    integerLiteral                 shift and go to state 183
    blockStatements                shift and go to state 1115
    assignment                     shift and go to state 346
    annotation                     shift and go to state 35
    statementExpression            shift and go to state 350
    explicitConstructorInvocation  shift and go to state 351
    enhancedForStatement           shift and go to state 352
    interfaceHead                  shift and go to state 47

state 1068

    (381) switchBlock -> BLPAREN BRPAREN .

    IF              reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    WHILE           reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    FOR             reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    BLPAREN         reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    ASSERT          reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    SEMI            reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    SWITCH          reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    DO              reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    BREAK           reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    CONTINUE        reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    RETURN          reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    SYNCHRONIZED    reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    THROW           reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    TRY             reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    Identifier      reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    AT              reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    BOOLEAN         reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    VOID            reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    BYTE            reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    SHORT           reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    INT             reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    LONG            reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    CHAR            reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    FLOAT           reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    DOUBLE          reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    PUBLIC          reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    PROTECTED       reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    PRIVATE         reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    STATIC          reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    ABSTRACT        reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    FINAL           reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    NATIVE          reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    TRANSIENT       reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    VOLATILE        reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    STRICTFP        reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    THIS            reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    SUPER           reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    OP_INC          reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    OP_DEC          reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    NEW             reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    LESS            reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    LPAREN          reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    CharacterLiteral reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    StringLiteral   reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    NULL            reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    LONG_NUMBER     reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    LONG_HEX_NUMBER reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    NON_INTEGER_1   reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    NON_INTEGER_2   reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    NON_INTEGER_3   reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    NON_INTEGER_4   reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    NON_INTEGER_5   reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    NON_INTEGER_6   reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    TRUE            reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    FALSE           reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    INTERFACE       reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    ENUM            reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    CLASS           reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    BRPAREN         reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    CASE            reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    DEFAULT         reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)
    ELSE            reduce using rule 381 (switchBlock -> BLPAREN BRPAREN .)


state 1069

    (393) doStatement -> DO statement WHILE LPAREN expression RPAREN . SEMI

    SEMI            shift and go to state 1117


state 1070

    (368) enhancedForStatementNoShortIf -> enhancedForStatementHead statementNoShortIf .

    ELSE            reduce using rule 368 (enhancedForStatementNoShortIf -> enhancedForStatementHead statementNoShortIf .)


state 1071

    (352) whileStatement -> WHILE LPAREN . expression RPAREN statement
    (353) whileStatementNoShortIf -> WHILE LPAREN . expression RPAREN statementNoShortIf
    (456) expression -> . assignmentExpression
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    assignmentExpression           shift and go to state 543
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    fieldAccess                    shift and go to state 189
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 554
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    unaryExpressionNotPlusMinus    shift and go to state 397
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    expression                     shift and go to state 1118
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 1072

    (346) labeldStatement -> label COLON . statement
    (347) labeledStatementNoShortIf -> label COLON . statementNoShortIf
    (304) statement -> . statementWithoutTrailingSubStatement
    (305) statement -> . labeldStatement
    (306) statement -> . ifThenStatement
    (307) statement -> . ifThenElseStatement
    (308) statement -> . whileStatement
    (309) statement -> . forStatement
    (310) statement -> . enhancedForStatement
    (372) statementNoShortIf -> . statementWithoutTrailingSubStatement
    (373) statementNoShortIf -> . labeledStatementNoShortIf
    (374) statementNoShortIf -> . ifThenElseStatementNoShortIf
    (375) statementNoShortIf -> . whileStatementNoShortIf
    (376) statementNoShortIf -> . enhancedForStatementNoShortIf
    (311) statementWithoutTrailingSubStatement -> . block
    (312) statementWithoutTrailingSubStatement -> . expressionStatement
    (313) statementWithoutTrailingSubStatement -> . assertStatement
    (314) statementWithoutTrailingSubStatement -> . emptyStatement
    (315) statementWithoutTrailingSubStatement -> . switchStatement
    (316) statementWithoutTrailingSubStatement -> . doStatement
    (317) statementWithoutTrailingSubStatement -> . breakStatement
    (318) statementWithoutTrailingSubStatement -> . continueStatement
    (319) statementWithoutTrailingSubStatement -> . returnStatement
    (320) statementWithoutTrailingSubStatement -> . synchronizedStatement
    (321) statementWithoutTrailingSubStatement -> . throwStatment
    (322) statementWithoutTrailingSubStatement -> . tryStatement
    (323) statementWithoutTrailingSubStatement -> . tryStatementWithResources
    (346) labeldStatement -> . label COLON statement
    (349) ifThenStatement -> . IF LPAREN expression RPAREN statement
    (350) ifThenElseStatement -> . IF LPAREN expression RPAREN statementNoShortIf ELSE statement
    (352) whileStatement -> . WHILE LPAREN expression RPAREN statement
    (354) forStatement -> . FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement
    (367) enhancedForStatement -> . enhancedForStatementHead statement
    (347) labeledStatementNoShortIf -> . label COLON statementNoShortIf
    (351) ifThenElseStatementNoShortIf -> . IF LPAREN expression RPAREN statementNoShortIf ELSE statementNoShortIf
    (353) whileStatementNoShortIf -> . WHILE LPAREN expression RPAREN statementNoShortIf
    (368) enhancedForStatementNoShortIf -> . enhancedForStatementHead statementNoShortIf
    (283) block -> . BLPAREN blockStatements_opt BRPAREN
    (324) expressionStatement -> . statementExpression SEMI
    (325) expressionStatement -> . explicitConstructorInvocation
    (377) assertStatement -> . ASSERT expression SEMI
    (378) assertStatement -> . ASSERT expression COLON expression SEMI
    (379) emptyStatement -> . SEMI
    (380) switchStatement -> . SWITCH LPAREN expression RPAREN switchBlock
    (393) doStatement -> . DO statement WHILE LPAREN expression RPAREN SEMI
    (394) breakStatement -> . BREAK SEMI
    (395) breakStatement -> . BREAK Identifier SEMI
    (396) continueStatement -> . CONTINUE SEMI
    (397) continueStatement -> . CONTINUE Identifier SEMI
    (398) returnStatement -> . RETURN expression_opt SEMI
    (399) synchronizedStatement -> . SYNCHRONIZED LPAREN expression RPAREN block
    (400) throwStatment -> . THROW expression SEMI
    (401) tryStatement -> . TRY tryBlock catches
    (402) tryStatement -> . TRY tryBlock catches_opt finally
    (413) tryStatementWithResources -> . TRY resourceSpecification tryBlock catches_opt
    (414) tryStatementWithResources -> . TRY resourceSpecification tryBlock catches_opt finally
    (348) label -> . Identifier
    (369) enhancedForStatementHead -> . enhancedForStatementHeadInit COLON expression RPAREN
    (326) statementExpression -> . assignment
    (327) statementExpression -> . preIncrementExpression
    (328) statementExpression -> . preDecrementExpression
    (329) statementExpression -> . postIncrementExpression
    (330) statementExpression -> . postDecrementExpression
    (331) statementExpression -> . methodInvocation
    (332) statementExpression -> . classInstanceCreationExpression
    (424) explicitConstructorInvocation -> . THIS LPAREN argumentList_opt RPAREN SEMI
    (425) explicitConstructorInvocation -> . SUPER LPAREN argumentList_opt RPAREN SEMI
    (426) explicitConstructorInvocation -> . typeArguments SUPER LPAREN argumentList RPAREN SEMI
    (427) explicitConstructorInvocation -> . typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (428) explicitConstructorInvocation -> . primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI
    (429) explicitConstructorInvocation -> . name DOT SUPER LPAREN argumentList_opt RPAREN SEMI
    (430) explicitConstructorInvocation -> . primary DOT THIS LPAREN argumentList_opt RPAREN SEMI
    (431) explicitConstructorInvocation -> . name DOT THIS LPAREN argumentList_opt RPAREN SEMI
    (432) explicitConstructorInvocation -> . primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI
    (433) explicitConstructorInvocation -> . name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI
    (434) explicitConstructorInvocation -> . primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (435) explicitConstructorInvocation -> . name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (370) enhancedForStatementHeadInit -> . FOR LPAREN type Identifier arrays_opt
    (371) enhancedForStatementHeadInit -> . FOR LPAREN modifiers type Identifier arrays_opt
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (82) typeArguments -> . LESS typeArgumentList1
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (442) classInstanceCreationExpressionName -> . name DOT
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE

    IF              shift and go to state 1007
    WHILE           shift and go to state 998
    FOR             shift and go to state 312
    BLPAREN         shift and go to state 120
    ASSERT          shift and go to state 336
    SEMI            shift and go to state 341
    SWITCH          shift and go to state 328
    DO              shift and go to state 335
    BREAK           shift and go to state 305
    CONTINUE        shift and go to state 318
    RETURN          shift and go to state 302
    SYNCHRONIZED    shift and go to state 518
    THROW           shift and go to state 354
    TRY             shift and go to state 314
    Identifier      shift and go to state 316
    THIS            shift and go to state 300
    SUPER           shift and go to state 353
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    NEW             shift and go to state 326
    LESS            shift and go to state 287
    LPAREN          shift and go to state 348
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    forStatement                   shift and go to state 286
    labeledStatementNoShortIf      shift and go to state 1000
    qualifiedName                  shift and go to state 64
    continueStatement              shift and go to state 304
    arrayCreationWithArrayInitializer shift and go to state 227
    switchStatement                shift and go to state 288
    primary                        shift and go to state 324
    arrayCreationWithoutArrayInitializer shift and go to state 232
    breakStatement                 shift and go to state 337
    tryStatementWithResources      shift and go to state 338
    whileStatementNoShortIf        shift and go to state 1001
    assertStatement                shift and go to state 289
    synchronizedStatement          shift and go to state 339
    booleanLiteral                 shift and go to state 173
    doStatement                    shift and go to state 327
    postDecrementExpression        shift and go to state 306
    typeArguments                  shift and go to state 307
    literal                        shift and go to state 208
    tryStatement                   shift and go to state 342
    preIncrementExpression         shift and go to state 308
    label                          shift and go to state 999
    simpleName                     shift and go to state 66
    labeldStatement                shift and go to state 329
    statementNoShortIf             shift and go to state 1119
    methodInvocation               shift and go to state 311
    statement                      shift and go to state 755
    arrayAccess                    shift and go to state 234
    ifThenElseStatement            shift and go to state 291
    fieldAccess                    shift and go to state 189
    statementWithoutTrailingSubStatement shift and go to state 1005
    integerLiteral                 shift and go to state 183
    statementExpression            shift and go to state 350
    classInstanceCreationExpressionName shift and go to state 187
    FloatingPointLiteral           shift and go to state 214
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 346
    whileStatement                 shift and go to state 292
    enhancedForStatementHeadInit   shift and go to state 313
    postIncrementExpression        shift and go to state 293
    enhancedForStatementNoShortIf  shift and go to state 1006
    ifThenStatement                shift and go to state 347
    ifThenElseStatementNoShortIf   shift and go to state 1004
    emptyStatement                 shift and go to state 295
    returnStatement                shift and go to state 297
    preDecrementExpression         shift and go to state 320
    postfixExpression              shift and go to state 298
    enhancedForStatementHead       shift and go to state 997
    name                           shift and go to state 517
    expressionStatement            shift and go to state 301
    primitiveType                  shift and go to state 219
    throwStatment                  shift and go to state 310
    explicitConstructorInvocation  shift and go to state 351
    enhancedForStatement           shift and go to state 352
    block                          shift and go to state 321
    classInstanceCreationExpression shift and go to state 322

state 1073

    (350) ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE . statement
    (304) statement -> . statementWithoutTrailingSubStatement
    (305) statement -> . labeldStatement
    (306) statement -> . ifThenStatement
    (307) statement -> . ifThenElseStatement
    (308) statement -> . whileStatement
    (309) statement -> . forStatement
    (310) statement -> . enhancedForStatement
    (311) statementWithoutTrailingSubStatement -> . block
    (312) statementWithoutTrailingSubStatement -> . expressionStatement
    (313) statementWithoutTrailingSubStatement -> . assertStatement
    (314) statementWithoutTrailingSubStatement -> . emptyStatement
    (315) statementWithoutTrailingSubStatement -> . switchStatement
    (316) statementWithoutTrailingSubStatement -> . doStatement
    (317) statementWithoutTrailingSubStatement -> . breakStatement
    (318) statementWithoutTrailingSubStatement -> . continueStatement
    (319) statementWithoutTrailingSubStatement -> . returnStatement
    (320) statementWithoutTrailingSubStatement -> . synchronizedStatement
    (321) statementWithoutTrailingSubStatement -> . throwStatment
    (322) statementWithoutTrailingSubStatement -> . tryStatement
    (323) statementWithoutTrailingSubStatement -> . tryStatementWithResources
    (346) labeldStatement -> . label COLON statement
    (349) ifThenStatement -> . IF LPAREN expression RPAREN statement
    (350) ifThenElseStatement -> . IF LPAREN expression RPAREN statementNoShortIf ELSE statement
    (352) whileStatement -> . WHILE LPAREN expression RPAREN statement
    (354) forStatement -> . FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement
    (367) enhancedForStatement -> . enhancedForStatementHead statement
    (283) block -> . BLPAREN blockStatements_opt BRPAREN
    (324) expressionStatement -> . statementExpression SEMI
    (325) expressionStatement -> . explicitConstructorInvocation
    (377) assertStatement -> . ASSERT expression SEMI
    (378) assertStatement -> . ASSERT expression COLON expression SEMI
    (379) emptyStatement -> . SEMI
    (380) switchStatement -> . SWITCH LPAREN expression RPAREN switchBlock
    (393) doStatement -> . DO statement WHILE LPAREN expression RPAREN SEMI
    (394) breakStatement -> . BREAK SEMI
    (395) breakStatement -> . BREAK Identifier SEMI
    (396) continueStatement -> . CONTINUE SEMI
    (397) continueStatement -> . CONTINUE Identifier SEMI
    (398) returnStatement -> . RETURN expression_opt SEMI
    (399) synchronizedStatement -> . SYNCHRONIZED LPAREN expression RPAREN block
    (400) throwStatment -> . THROW expression SEMI
    (401) tryStatement -> . TRY tryBlock catches
    (402) tryStatement -> . TRY tryBlock catches_opt finally
    (413) tryStatementWithResources -> . TRY resourceSpecification tryBlock catches_opt
    (414) tryStatementWithResources -> . TRY resourceSpecification tryBlock catches_opt finally
    (348) label -> . Identifier
    (369) enhancedForStatementHead -> . enhancedForStatementHeadInit COLON expression RPAREN
    (326) statementExpression -> . assignment
    (327) statementExpression -> . preIncrementExpression
    (328) statementExpression -> . preDecrementExpression
    (329) statementExpression -> . postIncrementExpression
    (330) statementExpression -> . postDecrementExpression
    (331) statementExpression -> . methodInvocation
    (332) statementExpression -> . classInstanceCreationExpression
    (424) explicitConstructorInvocation -> . THIS LPAREN argumentList_opt RPAREN SEMI
    (425) explicitConstructorInvocation -> . SUPER LPAREN argumentList_opt RPAREN SEMI
    (426) explicitConstructorInvocation -> . typeArguments SUPER LPAREN argumentList RPAREN SEMI
    (427) explicitConstructorInvocation -> . typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (428) explicitConstructorInvocation -> . primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI
    (429) explicitConstructorInvocation -> . name DOT SUPER LPAREN argumentList_opt RPAREN SEMI
    (430) explicitConstructorInvocation -> . primary DOT THIS LPAREN argumentList_opt RPAREN SEMI
    (431) explicitConstructorInvocation -> . name DOT THIS LPAREN argumentList_opt RPAREN SEMI
    (432) explicitConstructorInvocation -> . primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI
    (433) explicitConstructorInvocation -> . name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI
    (434) explicitConstructorInvocation -> . primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (435) explicitConstructorInvocation -> . name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (370) enhancedForStatementHeadInit -> . FOR LPAREN type Identifier arrays_opt
    (371) enhancedForStatementHeadInit -> . FOR LPAREN modifiers type Identifier arrays_opt
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (82) typeArguments -> . LESS typeArgumentList1
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (442) classInstanceCreationExpressionName -> . name DOT
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE

    IF              shift and go to state 349
    WHILE           shift and go to state 325
    FOR             shift and go to state 312
    BLPAREN         shift and go to state 120
    ASSERT          shift and go to state 336
    SEMI            shift and go to state 341
    SWITCH          shift and go to state 328
    DO              shift and go to state 335
    BREAK           shift and go to state 305
    CONTINUE        shift and go to state 318
    RETURN          shift and go to state 302
    SYNCHRONIZED    shift and go to state 518
    THROW           shift and go to state 354
    TRY             shift and go to state 314
    Identifier      shift and go to state 316
    THIS            shift and go to state 300
    SUPER           shift and go to state 353
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    NEW             shift and go to state 326
    LESS            shift and go to state 287
    LPAREN          shift and go to state 348
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    forStatement                   shift and go to state 286
    qualifiedName                  shift and go to state 64
    continueStatement              shift and go to state 304
    arrayCreationWithArrayInitializer shift and go to state 227
    switchStatement                shift and go to state 288
    primary                        shift and go to state 324
    arrayCreationWithoutArrayInitializer shift and go to state 232
    breakStatement                 shift and go to state 337
    tryStatementWithResources      shift and go to state 338
    throwStatment                  shift and go to state 310
    assertStatement                shift and go to state 289
    synchronizedStatement          shift and go to state 339
    booleanLiteral                 shift and go to state 173
    doStatement                    shift and go to state 327
    postDecrementExpression        shift and go to state 306
    typeArguments                  shift and go to state 307
    literal                        shift and go to state 208
    labeldStatement                shift and go to state 329
    preIncrementExpression         shift and go to state 308
    label                          shift and go to state 309
    simpleName                     shift and go to state 66
    tryStatement                   shift and go to state 342
    methodInvocation               shift and go to state 311
    statement                      shift and go to state 1120
    arrayAccess                    shift and go to state 234
    ifThenElseStatement            shift and go to state 291
    fieldAccess                    shift and go to state 189
    statementWithoutTrailingSubStatement shift and go to state 344
    integerLiteral                 shift and go to state 183
    classInstanceCreationExpressionName shift and go to state 187
    FloatingPointLiteral           shift and go to state 214
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 346
    whileStatement                 shift and go to state 292
    enhancedForStatementHeadInit   shift and go to state 313
    postIncrementExpression        shift and go to state 293
    ifThenStatement                shift and go to state 347
    emptyStatement                 shift and go to state 295
    returnStatement                shift and go to state 297
    preDecrementExpression         shift and go to state 320
    postfixExpression              shift and go to state 298
    enhancedForStatementHead       shift and go to state 296
    name                           shift and go to state 517
    expressionStatement            shift and go to state 301
    primitiveType                  shift and go to state 219
    statementExpression            shift and go to state 350
    explicitConstructorInvocation  shift and go to state 351
    enhancedForStatement           shift and go to state 352
    block                          shift and go to state 321
    classInstanceCreationExpression shift and go to state 322

state 1074

    (349) ifThenStatement -> IF LPAREN . expression RPAREN statement
    (350) ifThenElseStatement -> IF LPAREN . expression RPAREN statementNoShortIf ELSE statement
    (351) ifThenElseStatementNoShortIf -> IF LPAREN . expression RPAREN statementNoShortIf ELSE statementNoShortIf
    (456) expression -> . assignmentExpression
    (458) assignmentExpression -> . assignment
    (459) assignmentExpression -> . conditionalExpression
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (475) conditionalExpression -> . conditionalOrExpression
    (476) conditionalExpression -> . conditionalOrExpression QUES expression COLON conditionalExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (480) conditionalOrExpression -> . conditionalAndExpression
    (481) conditionalOrExpression -> . conditionalOrExpression OP_LOR conditionalAndExpression
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (485) conditionalAndExpression -> . inclusiveOrExpression
    (486) conditionalAndExpression -> . conditionalAndExpression OP_LAND inclusiveOrExpression
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (490) inclusiveOrExpression -> . exclusiveOrExpression
    (491) inclusiveOrExpression -> . inclusiveOrExpression VERTICAL exclusiveOrExpression
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (495) exclusiveOrExpression -> . andExpression
    (496) exclusiveOrExpression -> . exclusiveOrExpression CARET andExpression
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT
    (500) andExpression -> . equalityExpression
    (501) andExpression -> . andExpression AND equalityExpression
    (505) equalityExpression -> . instanceOfExpression
    (506) equalityExpression -> . equalityExpression OP_EQ instanceOfExpression
    (507) equalityExpression -> . equalityExpression OP_NE instanceOfExpression
    (513) instanceOfExpression -> . relationalExpression
    (514) instanceOfExpression -> . instanceOfExpression INSTANCEOF referenceType
    (518) relationalExpression -> . shiftExpression
    (519) relationalExpression -> . relationalExpression LESS shiftExpression
    (520) relationalExpression -> . relationalExpression OP_GE shiftExpression
    (521) relationalExpression -> . relationalExpression MORE shiftExpression
    (522) relationalExpression -> . relationalExpression OP_LE shiftExpression
    (532) shiftExpression -> . additiveExpression
    (533) shiftExpression -> . shiftExpression OP_SHR additiveExpression
    (534) shiftExpression -> . shiftExpression OP_SHL additiveExpression
    (535) shiftExpression -> . shiftExpression OP_SHRR additiveExpression
    (543) additiveExpression -> . multiplicativeExpression
    (544) additiveExpression -> . additiveExpression PLUS multiplicativeExpression
    (545) additiveExpression -> . additiveExpression DASH multiplicativeExpression
    (551) multiplicativeExpression -> . unaryExpression
    (552) multiplicativeExpression -> . multiplicativeExpression MULT unaryExpression
    (553) multiplicativeExpression -> . multiplicativeExpression SLASH unaryExpression
    (554) multiplicativeExpression -> . multiplicativeExpression PERCENT unaryExpression
    (562) unaryExpression -> . preIncrementExpression
    (563) unaryExpression -> . preDecrementExpression
    (564) unaryExpression -> . PLUS unaryExpression
    (565) unaryExpression -> . DASH unaryExpression
    (566) unaryExpression -> . unaryExpressionNotPlusMinus
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus

    THIS            shift and go to state 181
    LPAREN          shift and go to state 475
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216
    PLUS            shift and go to state 389
    DASH            shift and go to state 395
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385

    equalityExpression             shift and go to state 546
    qualifiedName                  shift and go to state 64
    inclusiveOrExpression          shift and go to state 541
    multiplicativeExpression       shift and go to state 551
    exclusiveOrExpression          shift and go to state 548
    primary                        shift and go to state 386
    shiftExpression                shift and go to state 552
    assignmentExpression           shift and go to state 543
    postDecrementExpression        shift and go to state 387
    castExpression                 shift and go to state 396
    arrayCreationWithoutArrayInitializer shift and go to state 232
    preIncrementExpression         shift and go to state 388
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    fieldAccess                    shift and go to state 189
    integerLiteral                 shift and go to state 183
    additiveExpression             shift and go to state 542
    instanceOfExpression           shift and go to state 540
    classInstanceCreationExpressionName shift and go to state 187
    conditionalExpression          shift and go to state 550
    unaryExpression                shift and go to state 553
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 554
    FloatingPointLiteral           shift and go to state 214
    conditionalAndExpression       shift and go to state 536
    postIncrementExpression        shift and go to state 392
    relationalExpression           shift and go to state 538
    conditionalOrExpression        shift and go to state 547
    unaryExpressionNotPlusMinus    shift and go to state 397
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 537
    name                           shift and go to state 393
    expression                     shift and go to state 1121
    primitiveType                  shift and go to state 219
    andExpression                  shift and go to state 544
    preDecrementExpression         shift and go to state 398
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 1075

    (341) methodInvocation -> name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .

    FLPAREN         reduce using rule 341 (methodInvocation -> name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    DOT             reduce using rule 341 (methodInvocation -> name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    OP_INC          reduce using rule 341 (methodInvocation -> name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    OP_DEC          reduce using rule 341 (methodInvocation -> name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    MULT            reduce using rule 341 (methodInvocation -> name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    SLASH           reduce using rule 341 (methodInvocation -> name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    PERCENT         reduce using rule 341 (methodInvocation -> name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    PLUS            reduce using rule 341 (methodInvocation -> name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    DASH            reduce using rule 341 (methodInvocation -> name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    OP_SHR          reduce using rule 341 (methodInvocation -> name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    OP_SHL          reduce using rule 341 (methodInvocation -> name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    OP_SHRR         reduce using rule 341 (methodInvocation -> name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    LESS            reduce using rule 341 (methodInvocation -> name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    OP_GE           reduce using rule 341 (methodInvocation -> name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    MORE            reduce using rule 341 (methodInvocation -> name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    OP_LE           reduce using rule 341 (methodInvocation -> name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    INSTANCEOF      reduce using rule 341 (methodInvocation -> name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    OP_EQ           reduce using rule 341 (methodInvocation -> name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    OP_NE           reduce using rule 341 (methodInvocation -> name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    AND             reduce using rule 341 (methodInvocation -> name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    CARET           reduce using rule 341 (methodInvocation -> name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    VERTICAL        reduce using rule 341 (methodInvocation -> name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    OP_LAND         reduce using rule 341 (methodInvocation -> name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    QUES            reduce using rule 341 (methodInvocation -> name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    OP_LOR          reduce using rule 341 (methodInvocation -> name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    RPAREN          reduce using rule 341 (methodInvocation -> name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    COMMA           reduce using rule 341 (methodInvocation -> name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    BRPAREN         reduce using rule 341 (methodInvocation -> name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    SEMI            reduce using rule 341 (methodInvocation -> name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    ASS             reduce using rule 341 (methodInvocation -> name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    ASS_ADD         reduce using rule 341 (methodInvocation -> name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    ASS_SUB         reduce using rule 341 (methodInvocation -> name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    ASS_MUL         reduce using rule 341 (methodInvocation -> name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    ASS_DIV         reduce using rule 341 (methodInvocation -> name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    ASS_AND         reduce using rule 341 (methodInvocation -> name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    ASS_OR          reduce using rule 341 (methodInvocation -> name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    ASS_XOR         reduce using rule 341 (methodInvocation -> name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    ASS_MOD         reduce using rule 341 (methodInvocation -> name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    ASS_SHL         reduce using rule 341 (methodInvocation -> name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    ASS_SHRR        reduce using rule 341 (methodInvocation -> name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    ASS_SHR         reduce using rule 341 (methodInvocation -> name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    FRPAREN         reduce using rule 341 (methodInvocation -> name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    COLON           reduce using rule 341 (methodInvocation -> name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)


state 1076

    (441) classInstanceCreationExpression -> classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN . classBody_opt
    (443) classBody_opt -> . classBody
    (444) classBody_opt -> . empty
    (151) classBody -> . BLPAREN classBodyDeclarations_opt BRPAREN
    (631) empty -> .

    BLPAREN         shift and go to state 52
    FLPAREN         reduce using rule 631 (empty -> .)
    DOT             reduce using rule 631 (empty -> .)
    MULT            reduce using rule 631 (empty -> .)
    SLASH           reduce using rule 631 (empty -> .)
    PERCENT         reduce using rule 631 (empty -> .)
    PLUS            reduce using rule 631 (empty -> .)
    DASH            reduce using rule 631 (empty -> .)
    OP_SHR          reduce using rule 631 (empty -> .)
    OP_SHL          reduce using rule 631 (empty -> .)
    OP_SHRR         reduce using rule 631 (empty -> .)
    LESS            reduce using rule 631 (empty -> .)
    OP_GE           reduce using rule 631 (empty -> .)
    MORE            reduce using rule 631 (empty -> .)
    OP_LE           reduce using rule 631 (empty -> .)
    INSTANCEOF      reduce using rule 631 (empty -> .)
    OP_EQ           reduce using rule 631 (empty -> .)
    OP_NE           reduce using rule 631 (empty -> .)
    AND             reduce using rule 631 (empty -> .)
    CARET           reduce using rule 631 (empty -> .)
    VERTICAL        reduce using rule 631 (empty -> .)
    OP_LAND         reduce using rule 631 (empty -> .)
    QUES            reduce using rule 631 (empty -> .)
    OP_LOR          reduce using rule 631 (empty -> .)
    RPAREN          reduce using rule 631 (empty -> .)
    OP_INC          reduce using rule 631 (empty -> .)
    OP_DEC          reduce using rule 631 (empty -> .)
    SEMI            reduce using rule 631 (empty -> .)
    ASS             reduce using rule 631 (empty -> .)
    ASS_ADD         reduce using rule 631 (empty -> .)
    ASS_SUB         reduce using rule 631 (empty -> .)
    ASS_MUL         reduce using rule 631 (empty -> .)
    ASS_DIV         reduce using rule 631 (empty -> .)
    ASS_AND         reduce using rule 631 (empty -> .)
    ASS_OR          reduce using rule 631 (empty -> .)
    ASS_XOR         reduce using rule 631 (empty -> .)
    ASS_MOD         reduce using rule 631 (empty -> .)
    ASS_SHL         reduce using rule 631 (empty -> .)
    ASS_SHRR        reduce using rule 631 (empty -> .)
    ASS_SHR         reduce using rule 631 (empty -> .)
    COMMA           reduce using rule 631 (empty -> .)
    BRPAREN         reduce using rule 631 (empty -> .)
    COLON           reduce using rule 631 (empty -> .)
    FRPAREN         reduce using rule 631 (empty -> .)

    empty                          shift and go to state 1023
    classBody                      shift and go to state 1021
    classBody_opt                  shift and go to state 1122

state 1077

    (440) classInstanceCreationExpression -> classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt .

    FLPAREN         reduce using rule 440 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    DOT             reduce using rule 440 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_INC          reduce using rule 440 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_DEC          reduce using rule 440 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    MULT            reduce using rule 440 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    SLASH           reduce using rule 440 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    PERCENT         reduce using rule 440 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    PLUS            reduce using rule 440 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    DASH            reduce using rule 440 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_SHR          reduce using rule 440 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_SHL          reduce using rule 440 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_SHRR         reduce using rule 440 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    LESS            reduce using rule 440 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_GE           reduce using rule 440 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    MORE            reduce using rule 440 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_LE           reduce using rule 440 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    INSTANCEOF      reduce using rule 440 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_EQ           reduce using rule 440 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_NE           reduce using rule 440 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    AND             reduce using rule 440 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    CARET           reduce using rule 440 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    VERTICAL        reduce using rule 440 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_LAND         reduce using rule 440 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    QUES            reduce using rule 440 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_LOR          reduce using rule 440 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    RPAREN          reduce using rule 440 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    COMMA           reduce using rule 440 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    BRPAREN         reduce using rule 440 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    SEMI            reduce using rule 440 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    COLON           reduce using rule 440 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    FRPAREN         reduce using rule 440 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS             reduce using rule 440 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_ADD         reduce using rule 440 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_SUB         reduce using rule 440 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_MUL         reduce using rule 440 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_DIV         reduce using rule 440 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_AND         reduce using rule 440 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_OR          reduce using rule 440 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_XOR         reduce using rule 440 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_MOD         reduce using rule 440 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_SHL         reduce using rule 440 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_SHRR        reduce using rule 440 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_SHR         reduce using rule 440 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)


state 1078

    (342) methodInvocation -> primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .

    FLPAREN         reduce using rule 342 (methodInvocation -> primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    DOT             reduce using rule 342 (methodInvocation -> primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    OP_INC          reduce using rule 342 (methodInvocation -> primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    OP_DEC          reduce using rule 342 (methodInvocation -> primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    MULT            reduce using rule 342 (methodInvocation -> primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    SLASH           reduce using rule 342 (methodInvocation -> primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    PERCENT         reduce using rule 342 (methodInvocation -> primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    PLUS            reduce using rule 342 (methodInvocation -> primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    DASH            reduce using rule 342 (methodInvocation -> primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    OP_SHR          reduce using rule 342 (methodInvocation -> primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    OP_SHL          reduce using rule 342 (methodInvocation -> primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    OP_SHRR         reduce using rule 342 (methodInvocation -> primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    LESS            reduce using rule 342 (methodInvocation -> primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    OP_GE           reduce using rule 342 (methodInvocation -> primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    MORE            reduce using rule 342 (methodInvocation -> primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    OP_LE           reduce using rule 342 (methodInvocation -> primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    INSTANCEOF      reduce using rule 342 (methodInvocation -> primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    OP_EQ           reduce using rule 342 (methodInvocation -> primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    OP_NE           reduce using rule 342 (methodInvocation -> primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    AND             reduce using rule 342 (methodInvocation -> primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    CARET           reduce using rule 342 (methodInvocation -> primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    VERTICAL        reduce using rule 342 (methodInvocation -> primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    OP_LAND         reduce using rule 342 (methodInvocation -> primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    QUES            reduce using rule 342 (methodInvocation -> primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    OP_LOR          reduce using rule 342 (methodInvocation -> primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    RPAREN          reduce using rule 342 (methodInvocation -> primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    COMMA           reduce using rule 342 (methodInvocation -> primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    BRPAREN         reduce using rule 342 (methodInvocation -> primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    SEMI            reduce using rule 342 (methodInvocation -> primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    ASS             reduce using rule 342 (methodInvocation -> primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    ASS_ADD         reduce using rule 342 (methodInvocation -> primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    ASS_SUB         reduce using rule 342 (methodInvocation -> primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    ASS_MUL         reduce using rule 342 (methodInvocation -> primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    ASS_DIV         reduce using rule 342 (methodInvocation -> primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    ASS_AND         reduce using rule 342 (methodInvocation -> primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    ASS_OR          reduce using rule 342 (methodInvocation -> primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    ASS_XOR         reduce using rule 342 (methodInvocation -> primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    ASS_MOD         reduce using rule 342 (methodInvocation -> primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    ASS_SHL         reduce using rule 342 (methodInvocation -> primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    ASS_SHRR        reduce using rule 342 (methodInvocation -> primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    ASS_SHR         reduce using rule 342 (methodInvocation -> primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    FRPAREN         reduce using rule 342 (methodInvocation -> primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    COLON           reduce using rule 342 (methodInvocation -> primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)


state 1079

    (439) classInstanceCreationExpression -> primary DOT NEW classType LPAREN argumentList_opt RPAREN . classBody_opt
    (443) classBody_opt -> . classBody
    (444) classBody_opt -> . empty
    (151) classBody -> . BLPAREN classBodyDeclarations_opt BRPAREN
    (631) empty -> .

    BLPAREN         shift and go to state 52
    FLPAREN         reduce using rule 631 (empty -> .)
    DOT             reduce using rule 631 (empty -> .)
    MULT            reduce using rule 631 (empty -> .)
    SLASH           reduce using rule 631 (empty -> .)
    PERCENT         reduce using rule 631 (empty -> .)
    PLUS            reduce using rule 631 (empty -> .)
    DASH            reduce using rule 631 (empty -> .)
    OP_SHR          reduce using rule 631 (empty -> .)
    OP_SHL          reduce using rule 631 (empty -> .)
    OP_SHRR         reduce using rule 631 (empty -> .)
    LESS            reduce using rule 631 (empty -> .)
    OP_GE           reduce using rule 631 (empty -> .)
    MORE            reduce using rule 631 (empty -> .)
    OP_LE           reduce using rule 631 (empty -> .)
    INSTANCEOF      reduce using rule 631 (empty -> .)
    OP_EQ           reduce using rule 631 (empty -> .)
    OP_NE           reduce using rule 631 (empty -> .)
    AND             reduce using rule 631 (empty -> .)
    CARET           reduce using rule 631 (empty -> .)
    VERTICAL        reduce using rule 631 (empty -> .)
    OP_LAND         reduce using rule 631 (empty -> .)
    QUES            reduce using rule 631 (empty -> .)
    OP_LOR          reduce using rule 631 (empty -> .)
    RPAREN          reduce using rule 631 (empty -> .)
    OP_INC          reduce using rule 631 (empty -> .)
    OP_DEC          reduce using rule 631 (empty -> .)
    SEMI            reduce using rule 631 (empty -> .)
    ASS             reduce using rule 631 (empty -> .)
    ASS_ADD         reduce using rule 631 (empty -> .)
    ASS_SUB         reduce using rule 631 (empty -> .)
    ASS_MUL         reduce using rule 631 (empty -> .)
    ASS_DIV         reduce using rule 631 (empty -> .)
    ASS_AND         reduce using rule 631 (empty -> .)
    ASS_OR          reduce using rule 631 (empty -> .)
    ASS_XOR         reduce using rule 631 (empty -> .)
    ASS_MOD         reduce using rule 631 (empty -> .)
    ASS_SHL         reduce using rule 631 (empty -> .)
    ASS_SHRR        reduce using rule 631 (empty -> .)
    ASS_SHR         reduce using rule 631 (empty -> .)
    COMMA           reduce using rule 631 (empty -> .)
    BRPAREN         reduce using rule 631 (empty -> .)
    COLON           reduce using rule 631 (empty -> .)
    FRPAREN         reduce using rule 631 (empty -> .)

    classBody                      shift and go to state 1021
    classBody_opt                  shift and go to state 1123
    empty                          shift and go to state 1023

state 1080

    (438) classInstanceCreationExpression -> primary DOT NEW typeArguments classType LPAREN argumentList_opt . RPAREN classBody_opt

    RPAREN          shift and go to state 1124


state 1081

    (436) classInstanceCreationExpression -> NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .

    FLPAREN         reduce using rule 436 (classInstanceCreationExpression -> NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    DOT             reduce using rule 436 (classInstanceCreationExpression -> NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_INC          reduce using rule 436 (classInstanceCreationExpression -> NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_DEC          reduce using rule 436 (classInstanceCreationExpression -> NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    MULT            reduce using rule 436 (classInstanceCreationExpression -> NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    SLASH           reduce using rule 436 (classInstanceCreationExpression -> NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    PERCENT         reduce using rule 436 (classInstanceCreationExpression -> NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    PLUS            reduce using rule 436 (classInstanceCreationExpression -> NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    DASH            reduce using rule 436 (classInstanceCreationExpression -> NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_SHR          reduce using rule 436 (classInstanceCreationExpression -> NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_SHL          reduce using rule 436 (classInstanceCreationExpression -> NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_SHRR         reduce using rule 436 (classInstanceCreationExpression -> NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    LESS            reduce using rule 436 (classInstanceCreationExpression -> NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_GE           reduce using rule 436 (classInstanceCreationExpression -> NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    MORE            reduce using rule 436 (classInstanceCreationExpression -> NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_LE           reduce using rule 436 (classInstanceCreationExpression -> NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    INSTANCEOF      reduce using rule 436 (classInstanceCreationExpression -> NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_EQ           reduce using rule 436 (classInstanceCreationExpression -> NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_NE           reduce using rule 436 (classInstanceCreationExpression -> NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    AND             reduce using rule 436 (classInstanceCreationExpression -> NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    CARET           reduce using rule 436 (classInstanceCreationExpression -> NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    VERTICAL        reduce using rule 436 (classInstanceCreationExpression -> NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_LAND         reduce using rule 436 (classInstanceCreationExpression -> NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    QUES            reduce using rule 436 (classInstanceCreationExpression -> NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_LOR          reduce using rule 436 (classInstanceCreationExpression -> NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    RPAREN          reduce using rule 436 (classInstanceCreationExpression -> NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    COMMA           reduce using rule 436 (classInstanceCreationExpression -> NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    BRPAREN         reduce using rule 436 (classInstanceCreationExpression -> NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    SEMI            reduce using rule 436 (classInstanceCreationExpression -> NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    COLON           reduce using rule 436 (classInstanceCreationExpression -> NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    FRPAREN         reduce using rule 436 (classInstanceCreationExpression -> NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS             reduce using rule 436 (classInstanceCreationExpression -> NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_ADD         reduce using rule 436 (classInstanceCreationExpression -> NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_SUB         reduce using rule 436 (classInstanceCreationExpression -> NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_MUL         reduce using rule 436 (classInstanceCreationExpression -> NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_DIV         reduce using rule 436 (classInstanceCreationExpression -> NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_AND         reduce using rule 436 (classInstanceCreationExpression -> NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_OR          reduce using rule 436 (classInstanceCreationExpression -> NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_XOR         reduce using rule 436 (classInstanceCreationExpression -> NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_MOD         reduce using rule 436 (classInstanceCreationExpression -> NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_SHL         reduce using rule 436 (classInstanceCreationExpression -> NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_SHRR        reduce using rule 436 (classInstanceCreationExpression -> NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_SHR         reduce using rule 436 (classInstanceCreationExpression -> NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)


state 1082

    (339) variableInitializers -> variableInitializers COMMA variableInitializer .

    BRPAREN         reduce using rule 339 (variableInitializers -> variableInitializers COMMA variableInitializer .)
    COMMA           reduce using rule 339 (variableInitializers -> variableInitializers COMMA variableInitializer .)


state 1083

    (337) arrayInitializer -> BLPAREN variableInitializers COMMA BRPAREN .

    BRPAREN         reduce using rule 337 (arrayInitializer -> BLPAREN variableInitializers COMMA BRPAREN .)
    COMMA           reduce using rule 337 (arrayInitializer -> BLPAREN variableInitializers COMMA BRPAREN .)
    FLPAREN         reduce using rule 337 (arrayInitializer -> BLPAREN variableInitializers COMMA BRPAREN .)
    DOT             reduce using rule 337 (arrayInitializer -> BLPAREN variableInitializers COMMA BRPAREN .)
    MULT            reduce using rule 337 (arrayInitializer -> BLPAREN variableInitializers COMMA BRPAREN .)
    SLASH           reduce using rule 337 (arrayInitializer -> BLPAREN variableInitializers COMMA BRPAREN .)
    PERCENT         reduce using rule 337 (arrayInitializer -> BLPAREN variableInitializers COMMA BRPAREN .)
    PLUS            reduce using rule 337 (arrayInitializer -> BLPAREN variableInitializers COMMA BRPAREN .)
    DASH            reduce using rule 337 (arrayInitializer -> BLPAREN variableInitializers COMMA BRPAREN .)
    OP_SHR          reduce using rule 337 (arrayInitializer -> BLPAREN variableInitializers COMMA BRPAREN .)
    OP_SHL          reduce using rule 337 (arrayInitializer -> BLPAREN variableInitializers COMMA BRPAREN .)
    OP_SHRR         reduce using rule 337 (arrayInitializer -> BLPAREN variableInitializers COMMA BRPAREN .)
    LESS            reduce using rule 337 (arrayInitializer -> BLPAREN variableInitializers COMMA BRPAREN .)
    OP_GE           reduce using rule 337 (arrayInitializer -> BLPAREN variableInitializers COMMA BRPAREN .)
    MORE            reduce using rule 337 (arrayInitializer -> BLPAREN variableInitializers COMMA BRPAREN .)
    OP_LE           reduce using rule 337 (arrayInitializer -> BLPAREN variableInitializers COMMA BRPAREN .)
    INSTANCEOF      reduce using rule 337 (arrayInitializer -> BLPAREN variableInitializers COMMA BRPAREN .)
    OP_EQ           reduce using rule 337 (arrayInitializer -> BLPAREN variableInitializers COMMA BRPAREN .)
    OP_NE           reduce using rule 337 (arrayInitializer -> BLPAREN variableInitializers COMMA BRPAREN .)
    AND             reduce using rule 337 (arrayInitializer -> BLPAREN variableInitializers COMMA BRPAREN .)
    CARET           reduce using rule 337 (arrayInitializer -> BLPAREN variableInitializers COMMA BRPAREN .)
    VERTICAL        reduce using rule 337 (arrayInitializer -> BLPAREN variableInitializers COMMA BRPAREN .)
    OP_LAND         reduce using rule 337 (arrayInitializer -> BLPAREN variableInitializers COMMA BRPAREN .)
    QUES            reduce using rule 337 (arrayInitializer -> BLPAREN variableInitializers COMMA BRPAREN .)
    OP_LOR          reduce using rule 337 (arrayInitializer -> BLPAREN variableInitializers COMMA BRPAREN .)
    RPAREN          reduce using rule 337 (arrayInitializer -> BLPAREN variableInitializers COMMA BRPAREN .)
    OP_INC          reduce using rule 337 (arrayInitializer -> BLPAREN variableInitializers COMMA BRPAREN .)
    OP_DEC          reduce using rule 337 (arrayInitializer -> BLPAREN variableInitializers COMMA BRPAREN .)
    ASS             reduce using rule 337 (arrayInitializer -> BLPAREN variableInitializers COMMA BRPAREN .)
    ASS_ADD         reduce using rule 337 (arrayInitializer -> BLPAREN variableInitializers COMMA BRPAREN .)
    ASS_SUB         reduce using rule 337 (arrayInitializer -> BLPAREN variableInitializers COMMA BRPAREN .)
    ASS_MUL         reduce using rule 337 (arrayInitializer -> BLPAREN variableInitializers COMMA BRPAREN .)
    ASS_DIV         reduce using rule 337 (arrayInitializer -> BLPAREN variableInitializers COMMA BRPAREN .)
    ASS_AND         reduce using rule 337 (arrayInitializer -> BLPAREN variableInitializers COMMA BRPAREN .)
    ASS_OR          reduce using rule 337 (arrayInitializer -> BLPAREN variableInitializers COMMA BRPAREN .)
    ASS_XOR         reduce using rule 337 (arrayInitializer -> BLPAREN variableInitializers COMMA BRPAREN .)
    ASS_MOD         reduce using rule 337 (arrayInitializer -> BLPAREN variableInitializers COMMA BRPAREN .)
    ASS_SHL         reduce using rule 337 (arrayInitializer -> BLPAREN variableInitializers COMMA BRPAREN .)
    ASS_SHRR        reduce using rule 337 (arrayInitializer -> BLPAREN variableInitializers COMMA BRPAREN .)
    ASS_SHR         reduce using rule 337 (arrayInitializer -> BLPAREN variableInitializers COMMA BRPAREN .)
    SEMI            reduce using rule 337 (arrayInitializer -> BLPAREN variableInitializers COMMA BRPAREN .)
    COLON           reduce using rule 337 (arrayInitializer -> BLPAREN variableInitializers COMMA BRPAREN .)
    FRPAREN         reduce using rule 337 (arrayInitializer -> BLPAREN variableInitializers COMMA BRPAREN .)


state 1084

    (610) castExpression -> LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN . unaryExpressionNotPlusMinus
    (576) unaryExpressionNotPlusMinus -> . TILDE unaryExpression
    (577) unaryExpressionNotPlusMinus -> . EXCLAMATION unaryExpression
    (578) unaryExpressionNotPlusMinus -> . postfixExpression
    (579) unaryExpressionNotPlusMinus -> . castExpression
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (608) castExpression -> . LPAREN primitiveType arrays_opt RPAREN unaryExpression
    (609) castExpression -> . LPAREN name typeArguments arrays_opt RPAREN unaryExpressionNotPlusMinus
    (610) castExpression -> . LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus
    (611) castExpression -> . LPAREN name RPAREN unaryExpressionNotPlusMinus
    (612) castExpression -> . LPAREN name arrays RPAREN unaryExpressionNotPlusMinus
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE
    (442) classInstanceCreationExpressionName -> . name DOT

    TILDE           shift and go to state 390
    EXCLAMATION     shift and go to state 385
    LPAREN          shift and go to state 238
    THIS            shift and go to state 181
    NEW             shift and go to state 204
    Identifier      shift and go to state 68
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    SUPER           shift and go to state 246
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    qualifiedName                  shift and go to state 64
    primary                        shift and go to state 386
    postDecrementExpression        shift and go to state 387
    arrayCreationWithoutArrayInitializer shift and go to state 232
    booleanLiteral                 shift and go to state 173
    simpleName                     shift and go to state 66
    literal                        shift and go to state 208
    methodInvocation               shift and go to state 176
    FloatingPointLiteral           shift and go to state 214
    arrayAccess                    shift and go to state 234
    integerLiteral                 shift and go to state 183
    classInstanceCreationExpressionName shift and go to state 187
    primaryNoNewArray              shift and go to state 178
    fieldAccess                    shift and go to state 189
    postIncrementExpression        shift and go to state 392
    castExpression                 shift and go to state 396
    postfixExpression              shift and go to state 394
    name                           shift and go to state 393
    unaryExpressionNotPlusMinus    shift and go to state 1125
    primitiveType                  shift and go to state 219
    arrayCreationWithArrayInitializer shift and go to state 227
    classInstanceCreationExpression shift and go to state 198

state 1085

    (343) methodInvocation -> SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .

    FLPAREN         reduce using rule 343 (methodInvocation -> SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    DOT             reduce using rule 343 (methodInvocation -> SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    OP_INC          reduce using rule 343 (methodInvocation -> SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    OP_DEC          reduce using rule 343 (methodInvocation -> SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    MULT            reduce using rule 343 (methodInvocation -> SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    SLASH           reduce using rule 343 (methodInvocation -> SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    PERCENT         reduce using rule 343 (methodInvocation -> SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    PLUS            reduce using rule 343 (methodInvocation -> SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    DASH            reduce using rule 343 (methodInvocation -> SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    OP_SHR          reduce using rule 343 (methodInvocation -> SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    OP_SHL          reduce using rule 343 (methodInvocation -> SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    OP_SHRR         reduce using rule 343 (methodInvocation -> SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    LESS            reduce using rule 343 (methodInvocation -> SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    OP_GE           reduce using rule 343 (methodInvocation -> SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    MORE            reduce using rule 343 (methodInvocation -> SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    OP_LE           reduce using rule 343 (methodInvocation -> SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    INSTANCEOF      reduce using rule 343 (methodInvocation -> SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    OP_EQ           reduce using rule 343 (methodInvocation -> SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    OP_NE           reduce using rule 343 (methodInvocation -> SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    AND             reduce using rule 343 (methodInvocation -> SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    CARET           reduce using rule 343 (methodInvocation -> SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    VERTICAL        reduce using rule 343 (methodInvocation -> SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    OP_LAND         reduce using rule 343 (methodInvocation -> SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    QUES            reduce using rule 343 (methodInvocation -> SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    OP_LOR          reduce using rule 343 (methodInvocation -> SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    RPAREN          reduce using rule 343 (methodInvocation -> SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    COMMA           reduce using rule 343 (methodInvocation -> SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    BRPAREN         reduce using rule 343 (methodInvocation -> SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    SEMI            reduce using rule 343 (methodInvocation -> SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    ASS             reduce using rule 343 (methodInvocation -> SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    ASS_ADD         reduce using rule 343 (methodInvocation -> SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    ASS_SUB         reduce using rule 343 (methodInvocation -> SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    ASS_MUL         reduce using rule 343 (methodInvocation -> SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    ASS_DIV         reduce using rule 343 (methodInvocation -> SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    ASS_AND         reduce using rule 343 (methodInvocation -> SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    ASS_OR          reduce using rule 343 (methodInvocation -> SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    ASS_XOR         reduce using rule 343 (methodInvocation -> SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    ASS_MOD         reduce using rule 343 (methodInvocation -> SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    ASS_SHL         reduce using rule 343 (methodInvocation -> SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    ASS_SHRR        reduce using rule 343 (methodInvocation -> SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    ASS_SHR         reduce using rule 343 (methodInvocation -> SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    FRPAREN         reduce using rule 343 (methodInvocation -> SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)
    COLON           reduce using rule 343 (methodInvocation -> SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN .)


state 1086

    (103) referenceType3 -> referenceType OP_SHRR .

    SUPER           reduce using rule 103 (referenceType3 -> referenceType OP_SHRR .)
    THIS            reduce using rule 103 (referenceType3 -> referenceType OP_SHRR .)
    Identifier      reduce using rule 103 (referenceType3 -> referenceType OP_SHRR .)
    DOT             reduce using rule 103 (referenceType3 -> referenceType OP_SHRR .)
    COMMA           reduce using rule 103 (referenceType3 -> referenceType OP_SHRR .)
    BLPAREN         reduce using rule 103 (referenceType3 -> referenceType OP_SHRR .)
    IMPLEMENTS      reduce using rule 103 (referenceType3 -> referenceType OP_SHRR .)
    FLPAREN         reduce using rule 103 (referenceType3 -> referenceType OP_SHRR .)
    LPAREN          reduce using rule 103 (referenceType3 -> referenceType OP_SHRR .)
    OP_ARRAY        reduce using rule 103 (referenceType3 -> referenceType OP_SHRR .)
    INSTANCEOF      reduce using rule 103 (referenceType3 -> referenceType OP_SHRR .)
    OP_EQ           reduce using rule 103 (referenceType3 -> referenceType OP_SHRR .)
    OP_NE           reduce using rule 103 (referenceType3 -> referenceType OP_SHRR .)
    AND             reduce using rule 103 (referenceType3 -> referenceType OP_SHRR .)
    CARET           reduce using rule 103 (referenceType3 -> referenceType OP_SHRR .)
    VERTICAL        reduce using rule 103 (referenceType3 -> referenceType OP_SHRR .)
    OP_LAND         reduce using rule 103 (referenceType3 -> referenceType OP_SHRR .)
    QUES            reduce using rule 103 (referenceType3 -> referenceType OP_SHRR .)
    OP_LOR          reduce using rule 103 (referenceType3 -> referenceType OP_SHRR .)
    RPAREN          reduce using rule 103 (referenceType3 -> referenceType OP_SHRR .)
    BRPAREN         reduce using rule 103 (referenceType3 -> referenceType OP_SHRR .)
    SEMI            reduce using rule 103 (referenceType3 -> referenceType OP_SHRR .)
    COLON           reduce using rule 103 (referenceType3 -> referenceType OP_SHRR .)
    FRPAREN         reduce using rule 103 (referenceType3 -> referenceType OP_SHRR .)
    EXTENDS         reduce using rule 103 (referenceType3 -> referenceType OP_SHRR .)
    BOOLEAN         reduce using rule 103 (referenceType3 -> referenceType OP_SHRR .)
    VOID            reduce using rule 103 (referenceType3 -> referenceType OP_SHRR .)
    BYTE            reduce using rule 103 (referenceType3 -> referenceType OP_SHRR .)
    SHORT           reduce using rule 103 (referenceType3 -> referenceType OP_SHRR .)
    INT             reduce using rule 103 (referenceType3 -> referenceType OP_SHRR .)
    LONG            reduce using rule 103 (referenceType3 -> referenceType OP_SHRR .)
    CHAR            reduce using rule 103 (referenceType3 -> referenceType OP_SHRR .)
    FLOAT           reduce using rule 103 (referenceType3 -> referenceType OP_SHRR .)
    DOUBLE          reduce using rule 103 (referenceType3 -> referenceType OP_SHRR .)
    MORE            reduce using rule 103 (referenceType3 -> referenceType OP_SHRR .)
    OP_SHR          reduce using rule 103 (referenceType3 -> referenceType OP_SHRR .)
    OP_SHRR         reduce using rule 103 (referenceType3 -> referenceType OP_SHRR .)


state 1087

    (116) wildcard3 -> QUES OP_SHRR .

    SUPER           reduce using rule 116 (wildcard3 -> QUES OP_SHRR .)
    THIS            reduce using rule 116 (wildcard3 -> QUES OP_SHRR .)
    Identifier      reduce using rule 116 (wildcard3 -> QUES OP_SHRR .)
    DOT             reduce using rule 116 (wildcard3 -> QUES OP_SHRR .)
    COMMA           reduce using rule 116 (wildcard3 -> QUES OP_SHRR .)
    BLPAREN         reduce using rule 116 (wildcard3 -> QUES OP_SHRR .)
    IMPLEMENTS      reduce using rule 116 (wildcard3 -> QUES OP_SHRR .)
    FLPAREN         reduce using rule 116 (wildcard3 -> QUES OP_SHRR .)
    LPAREN          reduce using rule 116 (wildcard3 -> QUES OP_SHRR .)
    OP_ARRAY        reduce using rule 116 (wildcard3 -> QUES OP_SHRR .)
    INSTANCEOF      reduce using rule 116 (wildcard3 -> QUES OP_SHRR .)
    OP_EQ           reduce using rule 116 (wildcard3 -> QUES OP_SHRR .)
    OP_NE           reduce using rule 116 (wildcard3 -> QUES OP_SHRR .)
    AND             reduce using rule 116 (wildcard3 -> QUES OP_SHRR .)
    CARET           reduce using rule 116 (wildcard3 -> QUES OP_SHRR .)
    VERTICAL        reduce using rule 116 (wildcard3 -> QUES OP_SHRR .)
    OP_LAND         reduce using rule 116 (wildcard3 -> QUES OP_SHRR .)
    QUES            reduce using rule 116 (wildcard3 -> QUES OP_SHRR .)
    OP_LOR          reduce using rule 116 (wildcard3 -> QUES OP_SHRR .)
    RPAREN          reduce using rule 116 (wildcard3 -> QUES OP_SHRR .)
    BRPAREN         reduce using rule 116 (wildcard3 -> QUES OP_SHRR .)
    SEMI            reduce using rule 116 (wildcard3 -> QUES OP_SHRR .)
    COLON           reduce using rule 116 (wildcard3 -> QUES OP_SHRR .)
    FRPAREN         reduce using rule 116 (wildcard3 -> QUES OP_SHRR .)
    EXTENDS         reduce using rule 116 (wildcard3 -> QUES OP_SHRR .)
    BOOLEAN         reduce using rule 116 (wildcard3 -> QUES OP_SHRR .)
    VOID            reduce using rule 116 (wildcard3 -> QUES OP_SHRR .)
    BYTE            reduce using rule 116 (wildcard3 -> QUES OP_SHRR .)
    SHORT           reduce using rule 116 (wildcard3 -> QUES OP_SHRR .)
    INT             reduce using rule 116 (wildcard3 -> QUES OP_SHRR .)
    LONG            reduce using rule 116 (wildcard3 -> QUES OP_SHRR .)
    CHAR            reduce using rule 116 (wildcard3 -> QUES OP_SHRR .)
    FLOAT           reduce using rule 116 (wildcard3 -> QUES OP_SHRR .)
    DOUBLE          reduce using rule 116 (wildcard3 -> QUES OP_SHRR .)
    MORE            reduce using rule 116 (wildcard3 -> QUES OP_SHRR .)
    OP_SHR          reduce using rule 116 (wildcard3 -> QUES OP_SHRR .)
    OP_SHRR         reduce using rule 116 (wildcard3 -> QUES OP_SHRR .)


state 1088

    (118) wildcardBounds3 -> EXTENDS . referenceType3
    (114) wildcardBounds2 -> EXTENDS . referenceType2
    (110) wildcardBounds1 -> EXTENDS . referenceType1
    (106) wildcardBounds -> EXTENDS . referenceType
    (103) referenceType3 -> . referenceType OP_SHRR
    (97) referenceType2 -> . referenceType OP_SHR
    (98) referenceType2 -> . classOrInterface LESS typeArgumentList3
    (91) referenceType1 -> . referenceType MORE
    (92) referenceType1 -> . classOrInterface LESS typeArgumentList2
    (44) referenceType -> . classOrInterfaceType
    (45) referenceType -> . arrayType
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (54) arrayType -> . genericType arrays
    (55) arrayType -> . genericType DOT name arrays
    (56) arrayType -> . primitiveType arrays
    (57) arrayType -> . name arrays
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    Identifier      shift and go to state 68

    qualifiedName                  shift and go to state 64
    name                           shift and go to state 512
    classOrInterfaceType           shift and go to state 272
    arrayType                      shift and go to state 269
    classOrInterface               shift and go to state 860
    simpleName                     shift and go to state 66
    primitiveType                  shift and go to state 504
    referenceType3                 shift and go to state 1127
    referenceType2                 shift and go to state 1037
    referenceType1                 shift and go to state 863
    genericType                    shift and go to state 505
    referenceType                  shift and go to state 1126

state 1089

    (117) wildcard3 -> QUES wildcardBounds3 .

    SUPER           reduce using rule 117 (wildcard3 -> QUES wildcardBounds3 .)
    THIS            reduce using rule 117 (wildcard3 -> QUES wildcardBounds3 .)
    Identifier      reduce using rule 117 (wildcard3 -> QUES wildcardBounds3 .)
    DOT             reduce using rule 117 (wildcard3 -> QUES wildcardBounds3 .)
    COMMA           reduce using rule 117 (wildcard3 -> QUES wildcardBounds3 .)
    BLPAREN         reduce using rule 117 (wildcard3 -> QUES wildcardBounds3 .)
    IMPLEMENTS      reduce using rule 117 (wildcard3 -> QUES wildcardBounds3 .)
    FLPAREN         reduce using rule 117 (wildcard3 -> QUES wildcardBounds3 .)
    LPAREN          reduce using rule 117 (wildcard3 -> QUES wildcardBounds3 .)
    OP_ARRAY        reduce using rule 117 (wildcard3 -> QUES wildcardBounds3 .)
    INSTANCEOF      reduce using rule 117 (wildcard3 -> QUES wildcardBounds3 .)
    OP_EQ           reduce using rule 117 (wildcard3 -> QUES wildcardBounds3 .)
    OP_NE           reduce using rule 117 (wildcard3 -> QUES wildcardBounds3 .)
    AND             reduce using rule 117 (wildcard3 -> QUES wildcardBounds3 .)
    CARET           reduce using rule 117 (wildcard3 -> QUES wildcardBounds3 .)
    VERTICAL        reduce using rule 117 (wildcard3 -> QUES wildcardBounds3 .)
    OP_LAND         reduce using rule 117 (wildcard3 -> QUES wildcardBounds3 .)
    QUES            reduce using rule 117 (wildcard3 -> QUES wildcardBounds3 .)
    OP_LOR          reduce using rule 117 (wildcard3 -> QUES wildcardBounds3 .)
    RPAREN          reduce using rule 117 (wildcard3 -> QUES wildcardBounds3 .)
    BRPAREN         reduce using rule 117 (wildcard3 -> QUES wildcardBounds3 .)
    SEMI            reduce using rule 117 (wildcard3 -> QUES wildcardBounds3 .)
    COLON           reduce using rule 117 (wildcard3 -> QUES wildcardBounds3 .)
    FRPAREN         reduce using rule 117 (wildcard3 -> QUES wildcardBounds3 .)
    EXTENDS         reduce using rule 117 (wildcard3 -> QUES wildcardBounds3 .)
    BOOLEAN         reduce using rule 117 (wildcard3 -> QUES wildcardBounds3 .)
    VOID            reduce using rule 117 (wildcard3 -> QUES wildcardBounds3 .)
    BYTE            reduce using rule 117 (wildcard3 -> QUES wildcardBounds3 .)
    SHORT           reduce using rule 117 (wildcard3 -> QUES wildcardBounds3 .)
    INT             reduce using rule 117 (wildcard3 -> QUES wildcardBounds3 .)
    LONG            reduce using rule 117 (wildcard3 -> QUES wildcardBounds3 .)
    CHAR            reduce using rule 117 (wildcard3 -> QUES wildcardBounds3 .)
    FLOAT           reduce using rule 117 (wildcard3 -> QUES wildcardBounds3 .)
    DOUBLE          reduce using rule 117 (wildcard3 -> QUES wildcardBounds3 .)
    MORE            reduce using rule 117 (wildcard3 -> QUES wildcardBounds3 .)
    OP_SHR          reduce using rule 117 (wildcard3 -> QUES wildcardBounds3 .)
    OP_SHRR         reduce using rule 117 (wildcard3 -> QUES wildcardBounds3 .)


state 1090

    (119) wildcardBounds3 -> SUPER . referenceType3
    (115) wildcardBounds2 -> SUPER . referenceType2
    (111) wildcardBounds1 -> SUPER . referenceType1
    (107) wildcardBounds -> SUPER . referenceType
    (103) referenceType3 -> . referenceType OP_SHRR
    (97) referenceType2 -> . referenceType OP_SHR
    (98) referenceType2 -> . classOrInterface LESS typeArgumentList3
    (91) referenceType1 -> . referenceType MORE
    (92) referenceType1 -> . classOrInterface LESS typeArgumentList2
    (44) referenceType -> . classOrInterfaceType
    (45) referenceType -> . arrayType
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (54) arrayType -> . genericType arrays
    (55) arrayType -> . genericType DOT name arrays
    (56) arrayType -> . primitiveType arrays
    (57) arrayType -> . name arrays
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    Identifier      shift and go to state 68

    qualifiedName                  shift and go to state 64
    name                           shift and go to state 512
    classOrInterfaceType           shift and go to state 272
    arrayType                      shift and go to state 269
    classOrInterface               shift and go to state 860
    simpleName                     shift and go to state 66
    primitiveType                  shift and go to state 504
    referenceType3                 shift and go to state 1129
    referenceType2                 shift and go to state 1039
    referenceType1                 shift and go to state 865
    genericType                    shift and go to state 505
    referenceType                  shift and go to state 1128

state 1091

    (100) typeArgumentList3 -> typeArgumentList COMMA . typeArgument3
    (94) typeArgumentList2 -> typeArgumentList COMMA . typeArgument2
    (88) typeArgumentList1 -> typeArgumentList COMMA . typeArgument1
    (86) typeArgumentList -> typeArgumentList COMMA . typeArgument
    (101) typeArgument3 -> . referenceType3
    (102) typeArgument3 -> . wildcard3
    (95) typeArgument2 -> . referenceType2
    (96) typeArgument2 -> . wildcard2
    (89) typeArgument1 -> . referenceType1
    (90) typeArgument1 -> . wildcard1
    (83) typeArgument -> . referenceType
    (84) typeArgument -> . wildcard
    (103) referenceType3 -> . referenceType OP_SHRR
    (116) wildcard3 -> . QUES OP_SHRR
    (117) wildcard3 -> . QUES wildcardBounds3
    (97) referenceType2 -> . referenceType OP_SHR
    (98) referenceType2 -> . classOrInterface LESS typeArgumentList3
    (112) wildcard2 -> . QUES OP_SHR
    (113) wildcard2 -> . QUES wildcardBounds2
    (91) referenceType1 -> . referenceType MORE
    (92) referenceType1 -> . classOrInterface LESS typeArgumentList2
    (108) wildcard1 -> . QUES MORE
    (109) wildcard1 -> . QUES wildcardBounds1
    (44) referenceType -> . classOrInterfaceType
    (45) referenceType -> . arrayType
    (104) wildcard -> . QUES
    (105) wildcard -> . QUES wildcardBounds
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (54) arrayType -> . genericType arrays
    (55) arrayType -> . genericType DOT name arrays
    (56) arrayType -> . primitiveType arrays
    (57) arrayType -> . name arrays
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    QUES            shift and go to state 1034
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    Identifier      shift and go to state 68

    qualifiedName                  shift and go to state 64
    primitiveType                  shift and go to state 504
    genericType                    shift and go to state 505
    classOrInterfaceType           shift and go to state 272
    simpleName                     shift and go to state 66
    referenceType                  shift and go to state 1130
    wildcard3                      shift and go to state 1030
    wildcard2                      shift and go to state 856
    wildcard1                      shift and go to state 508
    wildcard                       shift and go to state 516
    typeArgument                   shift and go to state 853
    referenceType3                 shift and go to state 1032
    referenceType2                 shift and go to state 858
    referenceType1                 shift and go to state 511
    name                           shift and go to state 512
    typeArgument2                  shift and go to state 1041
    typeArgument3                  shift and go to state 1131
    typeArgument1                  shift and go to state 854
    arrayType                      shift and go to state 269
    classOrInterface               shift and go to state 860

state 1092

    (431) explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .

    IF              reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    WHILE           reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    FOR             reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    BLPAREN         reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    ASSERT          reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    SEMI            reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    SWITCH          reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    DO              reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    BREAK           reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    CONTINUE        reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    RETURN          reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    SYNCHRONIZED    reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    THROW           reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    TRY             reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    Identifier      reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    AT              reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    BOOLEAN         reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    VOID            reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    BYTE            reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    SHORT           reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    INT             reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    LONG            reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    CHAR            reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    FLOAT           reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    DOUBLE          reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    PUBLIC          reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    PROTECTED       reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    PRIVATE         reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    STATIC          reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    ABSTRACT        reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    FINAL           reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    NATIVE          reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    TRANSIENT       reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    VOLATILE        reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    STRICTFP        reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    THIS            reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    SUPER           reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    OP_INC          reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    OP_DEC          reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    NEW             reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    LESS            reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    LPAREN          reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    CharacterLiteral reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    StringLiteral   reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    NULL            reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    LONG_NUMBER     reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    LONG_HEX_NUMBER reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_1   reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_2   reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_3   reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_4   reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_5   reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_6   reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    TRUE            reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    FALSE           reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    INTERFACE       reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    ENUM            reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    CLASS           reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    BRPAREN         reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    CASE            reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    DEFAULT         reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    ELSE            reduce using rule 431 (explicitConstructorInvocation -> name DOT THIS LPAREN argumentList_opt RPAREN SEMI .)


state 1093

    (435) explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN . SEMI

    SEMI            shift and go to state 1132


state 1094

    (433) explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN . SEMI

    SEMI            shift and go to state 1133


state 1095

    (429) explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .

    IF              reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    WHILE           reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    FOR             reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    BLPAREN         reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    ASSERT          reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    SEMI            reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    SWITCH          reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    DO              reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    BREAK           reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    CONTINUE        reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    RETURN          reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    SYNCHRONIZED    reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    THROW           reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    TRY             reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    Identifier      reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    AT              reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    BOOLEAN         reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    VOID            reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    BYTE            reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    SHORT           reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    INT             reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    LONG            reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    CHAR            reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    FLOAT           reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    DOUBLE          reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    PUBLIC          reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    PROTECTED       reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    PRIVATE         reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    STATIC          reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    ABSTRACT        reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    FINAL           reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    NATIVE          reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    TRANSIENT       reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    VOLATILE        reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    STRICTFP        reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    THIS            reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    SUPER           reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    OP_INC          reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    OP_DEC          reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    NEW             reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    LESS            reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    LPAREN          reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    CharacterLiteral reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    StringLiteral   reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    NULL            reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    LONG_NUMBER     reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    LONG_HEX_NUMBER reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_1   reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_2   reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_3   reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_4   reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_5   reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_6   reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    TRUE            reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    FALSE           reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    INTERFACE       reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    ENUM            reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    CLASS           reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    BRPAREN         reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    CASE            reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    DEFAULT         reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    ELSE            reduce using rule 429 (explicitConstructorInvocation -> name DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)


state 1096

    (354) forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt . RPAREN statement

    RPAREN          shift and go to state 1134


state 1097

    (365) forUpdate_opt -> empty .

    RPAREN          reduce using rule 365 (forUpdate_opt -> empty .)


state 1098

    (364) forUpdate_opt -> forUpdate .

    RPAREN          reduce using rule 364 (forUpdate_opt -> forUpdate .)


state 1099

    (366) forUpdate -> statementExpressionList .
    (361) statementExpressionList -> statementExpressionList . COMMA statementExpression

    RPAREN          reduce using rule 366 (forUpdate -> statementExpressionList .)
    COMMA           shift and go to state 901


state 1100

    (412) unionType -> unionType VERTICAL . type
    (33) type -> . primitiveType
    (34) type -> . referenceType
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (44) referenceType -> . classOrInterfaceType
    (45) referenceType -> . arrayType
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (54) arrayType -> . genericType arrays
    (55) arrayType -> . genericType DOT name arrays
    (56) arrayType -> . primitiveType arrays
    (57) arrayType -> . name arrays
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName

    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    Identifier      shift and go to state 68

    qualifiedName                  shift and go to state 64
    name                           shift and go to state 276
    classOrInterfaceType           shift and go to state 272
    arrayType                      shift and go to state 269
    classOrInterface               shift and go to state 122
    simpleName                     shift and go to state 66
    primitiveType                  shift and go to state 277
    referenceType                  shift and go to state 273
    type                           shift and go to state 1135
    genericType                    shift and go to state 271

state 1101

    (409) catchFormalParameter -> modifiers_opt catchType variableDeclaratorId .

    RPAREN          reduce using rule 409 (catchFormalParameter -> modifiers_opt catchType variableDeclaratorId .)


state 1102

    (408) catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .

    CATCH           reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    IF              reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    WHILE           reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    FOR             reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    BLPAREN         reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    ASSERT          reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    SEMI            reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    SWITCH          reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    DO              reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    BREAK           reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    CONTINUE        reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    RETURN          reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    SYNCHRONIZED    reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    THROW           reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    TRY             reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    Identifier      reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    AT              reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    BOOLEAN         reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    VOID            reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    BYTE            reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    SHORT           reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    INT             reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    LONG            reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    CHAR            reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    FLOAT           reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    DOUBLE          reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    PUBLIC          reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    PROTECTED       reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    PRIVATE         reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    STATIC          reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    ABSTRACT        reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    FINAL           reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    NATIVE          reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    TRANSIENT       reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    VOLATILE        reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    STRICTFP        reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    THIS            reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    SUPER           reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    OP_INC          reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    OP_DEC          reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    NEW             reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    LESS            reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    LPAREN          reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    CharacterLiteral reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    StringLiteral   reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    NULL            reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    LONG_NUMBER     reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    LONG_HEX_NUMBER reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    NON_INTEGER_1   reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    NON_INTEGER_2   reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    NON_INTEGER_3   reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    NON_INTEGER_4   reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    NON_INTEGER_5   reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    NON_INTEGER_6   reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    TRUE            reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    FALSE           reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    INTERFACE       reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    ENUM            reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    CLASS           reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    BRPAREN         reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    CASE            reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    DEFAULT         reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    FINALLY         reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)
    ELSE            reduce using rule 408 (catchClause -> CATCH LPAREN catchFormalParameter RPAREN block .)


state 1103

    (422) resource -> modifiers type variableDeclaratorId ASS variableInitializer .

    SEMI            reduce using rule 422 (resource -> modifiers type variableDeclaratorId ASS variableInitializer .)
    RPAREN          reduce using rule 422 (resource -> modifiers type variableDeclaratorId ASS variableInitializer .)


state 1104

    (430) explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .

    IF              reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    WHILE           reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    FOR             reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    BLPAREN         reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    ASSERT          reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    SEMI            reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    SWITCH          reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    DO              reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    BREAK           reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    CONTINUE        reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    RETURN          reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    SYNCHRONIZED    reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    THROW           reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    TRY             reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    Identifier      reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    AT              reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    BOOLEAN         reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    VOID            reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    BYTE            reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    SHORT           reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    INT             reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    LONG            reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    CHAR            reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    FLOAT           reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    DOUBLE          reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    PUBLIC          reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    PROTECTED       reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    PRIVATE         reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    STATIC          reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    ABSTRACT        reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    FINAL           reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    NATIVE          reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    TRANSIENT       reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    VOLATILE        reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    STRICTFP        reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    THIS            reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    SUPER           reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    OP_INC          reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    OP_DEC          reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    NEW             reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    LESS            reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    LPAREN          reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    CharacterLiteral reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    StringLiteral   reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    NULL            reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    LONG_NUMBER     reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    LONG_HEX_NUMBER reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_1   reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_2   reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_3   reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_4   reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_5   reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_6   reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    TRUE            reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    FALSE           reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    INTERFACE       reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    ENUM            reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    CLASS           reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    BRPAREN         reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    CASE            reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    DEFAULT         reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)
    ELSE            reduce using rule 430 (explicitConstructorInvocation -> primary DOT THIS LPAREN argumentList_opt RPAREN SEMI .)


state 1105

    (434) explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN . SEMI

    SEMI            shift and go to state 1136


state 1106

    (432) explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN . SEMI

    SEMI            shift and go to state 1137


state 1107

    (428) explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .

    IF              reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    WHILE           reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    FOR             reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    BLPAREN         reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    ASSERT          reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    SEMI            reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    SWITCH          reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    DO              reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    BREAK           reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    CONTINUE        reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    RETURN          reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    SYNCHRONIZED    reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    THROW           reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    TRY             reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    Identifier      reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    AT              reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    BOOLEAN         reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    VOID            reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    BYTE            reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    SHORT           reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    INT             reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    LONG            reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    CHAR            reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    FLOAT           reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    DOUBLE          reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    PUBLIC          reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    PROTECTED       reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    PRIVATE         reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    STATIC          reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    ABSTRACT        reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    FINAL           reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    NATIVE          reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    TRANSIENT       reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    VOLATILE        reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    STRICTFP        reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    THIS            reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    SUPER           reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    OP_INC          reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    OP_DEC          reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    NEW             reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    LESS            reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    LPAREN          reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    CharacterLiteral reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    StringLiteral   reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    NULL            reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    LONG_NUMBER     reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    LONG_HEX_NUMBER reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_1   reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_2   reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_3   reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_4   reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_5   reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_6   reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    TRUE            reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    FALSE           reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    INTERFACE       reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    ENUM            reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    CLASS           reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    BRPAREN         reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    CASE            reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    DEFAULT         reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)
    ELSE            reduce using rule 428 (explicitConstructorInvocation -> primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI .)


state 1108

    (390) switchLabel -> CASE constantExpression . COLON

    COLON           shift and go to state 1138


state 1109

    (392) constantExpression -> expression .

    COLON           reduce using rule 392 (constantExpression -> expression .)


state 1110

    (391) switchLabel -> DEFAULT COLON .

    BRPAREN         reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    CASE            reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    DEFAULT         reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    IF              reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    WHILE           reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    FOR             reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    BLPAREN         reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    ASSERT          reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    SEMI            reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    SWITCH          reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    DO              reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    BREAK           reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    CONTINUE        reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    RETURN          reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    SYNCHRONIZED    reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    THROW           reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    TRY             reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    Identifier      reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    AT              reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    BOOLEAN         reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    VOID            reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    BYTE            reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    SHORT           reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    INT             reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    LONG            reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    CHAR            reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    FLOAT           reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    DOUBLE          reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    PUBLIC          reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    PROTECTED       reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    PRIVATE         reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    STATIC          reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    ABSTRACT        reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    FINAL           reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    NATIVE          reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    TRANSIENT       reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    VOLATILE        reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    STRICTFP        reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    THIS            reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    SUPER           reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    OP_INC          reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    OP_DEC          reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    NEW             reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    LESS            reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    LPAREN          reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    CharacterLiteral reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    StringLiteral   reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    NULL            reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    LONG_NUMBER     reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    LONG_HEX_NUMBER reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    NON_INTEGER_1   reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    NON_INTEGER_2   reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    NON_INTEGER_3   reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    NON_INTEGER_4   reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    NON_INTEGER_5   reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    NON_INTEGER_6   reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    TRUE            reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    FALSE           reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    INTERFACE       reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    ENUM            reduce using rule 391 (switchLabel -> DEFAULT COLON .)
    CLASS           reduce using rule 391 (switchLabel -> DEFAULT COLON .)


state 1111

    (386) switchBlockStatements -> switchBlockStatements switchBlockStatement .

    BRPAREN         reduce using rule 386 (switchBlockStatements -> switchBlockStatements switchBlockStatement .)
    CASE            reduce using rule 386 (switchBlockStatements -> switchBlockStatements switchBlockStatement .)
    DEFAULT         reduce using rule 386 (switchBlockStatements -> switchBlockStatements switchBlockStatement .)


state 1112

    (384) switchBlock -> BLPAREN switchBlockStatements switchLabels . BRPAREN
    (389) switchLabels -> switchLabels . switchLabel
    (387) switchBlockStatement -> switchLabels . blockStatements
    (390) switchLabel -> . CASE constantExpression COLON
    (391) switchLabel -> . DEFAULT COLON
    (284) blockStatements -> . blockStatement
    (285) blockStatements -> . blockStatements blockStatement
    (288) blockStatement -> . localVariableDeclarationStatement
    (289) blockStatement -> . statement
    (290) blockStatement -> . classDeclaration
    (291) blockStatement -> . interfaceDeclaration
    (292) blockStatement -> . annotationTypeDeclaration
    (293) blockStatement -> . enumDeclaration
    (294) localVariableDeclarationStatement -> . localVariableDeclaration SEMI
    (304) statement -> . statementWithoutTrailingSubStatement
    (305) statement -> . labeldStatement
    (306) statement -> . ifThenStatement
    (307) statement -> . ifThenElseStatement
    (308) statement -> . whileStatement
    (309) statement -> . forStatement
    (310) statement -> . enhancedForStatement
    (136) classDeclaration -> . classHead classBody
    (195) interfaceDeclaration -> . interfaceHead InterfaceBody
    (239) annotationTypeDeclaration -> . annotationTypeDeclarationHead annotationTypeBody
    (215) enumDeclaration -> . enumHead enumBody
    (295) localVariableDeclaration -> . type variableDeclarators
    (296) localVariableDeclaration -> . modifiers type variableDeclarators
    (311) statementWithoutTrailingSubStatement -> . block
    (312) statementWithoutTrailingSubStatement -> . expressionStatement
    (313) statementWithoutTrailingSubStatement -> . assertStatement
    (314) statementWithoutTrailingSubStatement -> . emptyStatement
    (315) statementWithoutTrailingSubStatement -> . switchStatement
    (316) statementWithoutTrailingSubStatement -> . doStatement
    (317) statementWithoutTrailingSubStatement -> . breakStatement
    (318) statementWithoutTrailingSubStatement -> . continueStatement
    (319) statementWithoutTrailingSubStatement -> . returnStatement
    (320) statementWithoutTrailingSubStatement -> . synchronizedStatement
    (321) statementWithoutTrailingSubStatement -> . throwStatment
    (322) statementWithoutTrailingSubStatement -> . tryStatement
    (323) statementWithoutTrailingSubStatement -> . tryStatementWithResources
    (346) labeldStatement -> . label COLON statement
    (349) ifThenStatement -> . IF LPAREN expression RPAREN statement
    (350) ifThenElseStatement -> . IF LPAREN expression RPAREN statementNoShortIf ELSE statement
    (352) whileStatement -> . WHILE LPAREN expression RPAREN statement
    (354) forStatement -> . FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement
    (367) enhancedForStatement -> . enhancedForStatementHead statement
    (137) classHead -> . className classExtends_opt classImpls_opt
    (196) interfaceHead -> . interfaceHeadName interfaceHeadExtends_opt
    (240) annotationTypeDeclarationHead -> . annotationTypeDeclarationHeadName classExtends_opt classImpls_opt
    (216) enumHead -> . enumHeadName classImpls_opt
    (33) type -> . primitiveType
    (34) type -> . referenceType
    (122) modifiers -> . modifier
    (123) modifiers -> . modifiers modifier
    (283) block -> . BLPAREN blockStatements_opt BRPAREN
    (324) expressionStatement -> . statementExpression SEMI
    (325) expressionStatement -> . explicitConstructorInvocation
    (377) assertStatement -> . ASSERT expression SEMI
    (378) assertStatement -> . ASSERT expression COLON expression SEMI
    (379) emptyStatement -> . SEMI
    (380) switchStatement -> . SWITCH LPAREN expression RPAREN switchBlock
    (393) doStatement -> . DO statement WHILE LPAREN expression RPAREN SEMI
    (394) breakStatement -> . BREAK SEMI
    (395) breakStatement -> . BREAK Identifier SEMI
    (396) continueStatement -> . CONTINUE SEMI
    (397) continueStatement -> . CONTINUE Identifier SEMI
    (398) returnStatement -> . RETURN expression_opt SEMI
    (399) synchronizedStatement -> . SYNCHRONIZED LPAREN expression RPAREN block
    (400) throwStatment -> . THROW expression SEMI
    (401) tryStatement -> . TRY tryBlock catches
    (402) tryStatement -> . TRY tryBlock catches_opt finally
    (413) tryStatementWithResources -> . TRY resourceSpecification tryBlock catches_opt
    (414) tryStatementWithResources -> . TRY resourceSpecification tryBlock catches_opt finally
    (348) label -> . Identifier
    (369) enhancedForStatementHead -> . enhancedForStatementHeadInit COLON expression RPAREN
    (138) className -> . classHeadName1 typeParameters
    (139) className -> . classHeadName1
    (197) interfaceHeadName -> . modifiers_opt INTERFACE Identifier typeParameters
    (198) interfaceHeadName -> . modifiers_opt INTERFACE Identifier
    (241) annotationTypeDeclarationHeadName -> . modifiers AT INTERFACE Identifier
    (242) annotationTypeDeclarationHeadName -> . modifiers AT INTERFACE Identifier typeParameters
    (243) annotationTypeDeclarationHeadName -> . AT INTERFACE Identifier typeParameters
    (244) annotationTypeDeclarationHeadName -> . AT INTERFACE Identifier
    (217) enumHeadName -> . modifiers_opt ENUM Identifier
    (218) enumHeadName -> . modifiers_opt ENUM Identifier typeParameters
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (44) referenceType -> . classOrInterfaceType
    (45) referenceType -> . arrayType
    (124) modifier -> . PUBLIC
    (125) modifier -> . PROTECTED
    (126) modifier -> . PRIVATE
    (127) modifier -> . STATIC
    (128) modifier -> . ABSTRACT
    (129) modifier -> . FINAL
    (130) modifier -> . NATIVE
    (131) modifier -> . SYNCHRONIZED
    (132) modifier -> . TRANSIENT
    (133) modifier -> . VOLATILE
    (134) modifier -> . STRICTFP
    (135) modifier -> . annotation
    (326) statementExpression -> . assignment
    (327) statementExpression -> . preIncrementExpression
    (328) statementExpression -> . preDecrementExpression
    (329) statementExpression -> . postIncrementExpression
    (330) statementExpression -> . postDecrementExpression
    (331) statementExpression -> . methodInvocation
    (332) statementExpression -> . classInstanceCreationExpression
    (424) explicitConstructorInvocation -> . THIS LPAREN argumentList_opt RPAREN SEMI
    (425) explicitConstructorInvocation -> . SUPER LPAREN argumentList_opt RPAREN SEMI
    (426) explicitConstructorInvocation -> . typeArguments SUPER LPAREN argumentList RPAREN SEMI
    (427) explicitConstructorInvocation -> . typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (428) explicitConstructorInvocation -> . primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI
    (429) explicitConstructorInvocation -> . name DOT SUPER LPAREN argumentList_opt RPAREN SEMI
    (430) explicitConstructorInvocation -> . primary DOT THIS LPAREN argumentList_opt RPAREN SEMI
    (431) explicitConstructorInvocation -> . name DOT THIS LPAREN argumentList_opt RPAREN SEMI
    (432) explicitConstructorInvocation -> . primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI
    (433) explicitConstructorInvocation -> . name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI
    (434) explicitConstructorInvocation -> . primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (435) explicitConstructorInvocation -> . name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (370) enhancedForStatementHeadInit -> . FOR LPAREN type Identifier arrays_opt
    (371) enhancedForStatementHeadInit -> . FOR LPAREN modifiers type Identifier arrays_opt
    (140) classHeadName1 -> . modifiers_opt CLASS Identifier
    (120) modifiers_opt -> . modifiers
    (121) modifiers_opt -> . empty
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (54) arrayType -> . genericType arrays
    (55) arrayType -> . genericType DOT name arrays
    (56) arrayType -> . primitiveType arrays
    (57) arrayType -> . name arrays
    (270) annotation -> . normalAnnotation
    (271) annotation -> . markerAnnotation
    (272) annotation -> . singleMemberAnnotation
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (82) typeArguments -> . LESS typeArgumentList1
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (631) empty -> .
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (273) normalAnnotation -> . annotationName LPAREN memberValuePairs_opt RPAREN
    (280) markerAnnotation -> . annotationName
    (281) singleMemberAnnotation -> . annotationName LPAREN singleMemberAnnotationMemberValue RPAREN
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (442) classInstanceCreationExpressionName -> . name DOT
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (274) annotationName -> . AT name
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE

    BRPAREN         shift and go to state 1139
    CASE            shift and go to state 1062
    DEFAULT         shift and go to state 1065
    IF              shift and go to state 349
    WHILE           shift and go to state 325
    FOR             shift and go to state 312
    BLPAREN         shift and go to state 120
    ASSERT          shift and go to state 336
    SEMI            shift and go to state 341
    SWITCH          shift and go to state 328
    DO              shift and go to state 335
    BREAK           shift and go to state 305
    CONTINUE        shift and go to state 318
    RETURN          shift and go to state 302
    SYNCHRONIZED    shift and go to state 303
    THROW           shift and go to state 354
    TRY             shift and go to state 314
    Identifier      shift and go to state 316
    AT              shift and go to state 48
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    PUBLIC          shift and go to state 46
    PROTECTED       shift and go to state 6
    PRIVATE         shift and go to state 14
    STATIC          shift and go to state 7
    ABSTRACT        shift and go to state 5
    FINAL           shift and go to state 11
    NATIVE          shift and go to state 12
    TRANSIENT       shift and go to state 19
    VOLATILE        shift and go to state 43
    STRICTFP        shift and go to state 18
    THIS            shift and go to state 300
    SUPER           shift and go to state 353
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    NEW             shift and go to state 326
    LESS            shift and go to state 287
    INTERFACE       reduce using rule 631 (empty -> .)
    ENUM            reduce using rule 631 (empty -> .)
    CLASS           reduce using rule 631 (empty -> .)
    LPAREN          shift and go to state 348
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    forStatement                   shift and go to state 286
    switchStatement                shift and go to state 288
    assertStatement                shift and go to state 289
    blockStatement                 shift and go to state 290
    genericType                    shift and go to state 271
    markerAnnotation               shift and go to state 9
    classOrInterfaceType           shift and go to state 272
    preIncrementExpression         shift and go to state 308
    booleanLiteral                 shift and go to state 173
    ifThenElseStatement            shift and go to state 291
    postfixExpression              shift and go to state 298
    primaryNoNewArray              shift and go to state 178
    whileStatement                 shift and go to state 292
    classHeadName1                 shift and go to state 33
    annotationTypeDeclarationHeadName shift and go to state 34
    postIncrementExpression        shift and go to state 293
    localVariableDeclarationStatement shift and go to state 294
    emptyStatement                 shift and go to state 295
    enhancedForStatementHead       shift and go to state 296
    returnStatement                shift and go to state 297
    arrayAccess                    shift and go to state 234
    name                           shift and go to state 299
    expressionStatement            shift and go to state 301
    annotationName                 shift and go to state 40
    classOrInterface               shift and go to state 122
    qualifiedName                  shift and go to state 64
    continueStatement              shift and go to state 304
    primitiveType                  shift and go to state 334
    postDecrementExpression        shift and go to state 306
    typeArguments                  shift and go to state 307
    label                          shift and go to state 309
    simpleName                     shift and go to state 66
    throwStatment                  shift and go to state 310
    methodInvocation               shift and go to state 311
    classInstanceCreationExpressionName shift and go to state 187
    enhancedForStatementHeadInit   shift and go to state 313
    enumHead                       shift and go to state 30
    classDeclaration               shift and go to state 315
    annotationTypeDeclaration      shift and go to state 317
    interfaceDeclaration           shift and go to state 343
    normalAnnotation               shift and go to state 24
    ifThenStatement                shift and go to state 347
    preDecrementExpression         shift and go to state 320
    block                          shift and go to state 321
    classInstanceCreationExpression shift and go to state 322
    localVariableDeclaration       shift and go to state 323
    modifiers_opt                  shift and go to state 1
    primary                        shift and go to state 324
    singleMemberAnnotation         shift and go to state 8
    enumHeadName                   shift and go to state 10
    doStatement                    shift and go to state 327
    literal                        shift and go to state 208
    labeldStatement                shift and go to state 329
    statement                      shift and go to state 330
    interfaceHeadName              shift and go to state 27
    referenceType                  shift and go to state 273
    type                           shift and go to state 331
    empty                          shift and go to state 74
    annotationTypeDeclarationHead  shift and go to state 15
    modifiers                      shift and go to state 333
    switchLabel                    shift and go to state 1114
    arrayType                      shift and go to state 269
    className                      shift and go to state 13
    modifier                       shift and go to state 45
    arrayCreationWithArrayInitializer shift and go to state 227
    classHead                      shift and go to state 3
    breakStatement                 shift and go to state 337
    tryStatementWithResources      shift and go to state 338
    synchronizedStatement          shift and go to state 339
    enumDeclaration                shift and go to state 340
    arrayCreationWithoutArrayInitializer shift and go to state 232
    tryStatement                   shift and go to state 342
    FloatingPointLiteral           shift and go to state 214
    fieldAccess                    shift and go to state 189
    statementWithoutTrailingSubStatement shift and go to state 344
    integerLiteral                 shift and go to state 183
    blockStatements                shift and go to state 1115
    assignment                     shift and go to state 346
    annotation                     shift and go to state 35
    statementExpression            shift and go to state 350
    explicitConstructorInvocation  shift and go to state 351
    enhancedForStatement           shift and go to state 352
    interfaceHead                  shift and go to state 47

state 1113

    (382) switchBlock -> BLPAREN switchBlockStatements BRPAREN .

    IF              reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    WHILE           reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    FOR             reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    BLPAREN         reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    ASSERT          reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    SEMI            reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    SWITCH          reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    DO              reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    BREAK           reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    CONTINUE        reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    RETURN          reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    SYNCHRONIZED    reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    THROW           reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    TRY             reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    Identifier      reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    AT              reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    BOOLEAN         reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    VOID            reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    BYTE            reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    SHORT           reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    INT             reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    LONG            reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    CHAR            reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    FLOAT           reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    DOUBLE          reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    PUBLIC          reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    PROTECTED       reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    PRIVATE         reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    STATIC          reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    ABSTRACT        reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    FINAL           reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    NATIVE          reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    TRANSIENT       reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    VOLATILE        reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    STRICTFP        reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    THIS            reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    SUPER           reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    OP_INC          reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    OP_DEC          reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    NEW             reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    LESS            reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    LPAREN          reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    CharacterLiteral reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    StringLiteral   reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    NULL            reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    LONG_NUMBER     reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    LONG_HEX_NUMBER reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    NON_INTEGER_1   reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    NON_INTEGER_2   reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    NON_INTEGER_3   reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    NON_INTEGER_4   reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    NON_INTEGER_5   reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    NON_INTEGER_6   reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    TRUE            reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    FALSE           reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    INTERFACE       reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    ENUM            reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    CLASS           reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    BRPAREN         reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    CASE            reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    DEFAULT         reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)
    ELSE            reduce using rule 382 (switchBlock -> BLPAREN switchBlockStatements BRPAREN .)


state 1114

    (389) switchLabels -> switchLabels switchLabel .

    BRPAREN         reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    CASE            reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    DEFAULT         reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    IF              reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    WHILE           reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    FOR             reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    BLPAREN         reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    ASSERT          reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    SEMI            reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    SWITCH          reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    DO              reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    BREAK           reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    CONTINUE        reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    RETURN          reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    SYNCHRONIZED    reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    THROW           reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    TRY             reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    Identifier      reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    AT              reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    BOOLEAN         reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    VOID            reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    BYTE            reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    SHORT           reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    INT             reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    LONG            reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    CHAR            reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    FLOAT           reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    DOUBLE          reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    PUBLIC          reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    PROTECTED       reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    PRIVATE         reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    STATIC          reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    ABSTRACT        reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    FINAL           reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    NATIVE          reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    TRANSIENT       reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    VOLATILE        reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    STRICTFP        reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    THIS            reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    SUPER           reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    OP_INC          reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    OP_DEC          reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    NEW             reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    LESS            reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    LPAREN          reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    CharacterLiteral reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    StringLiteral   reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    NULL            reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    LONG_NUMBER     reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    LONG_HEX_NUMBER reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    NON_INTEGER_1   reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    NON_INTEGER_2   reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    NON_INTEGER_3   reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    NON_INTEGER_4   reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    NON_INTEGER_5   reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    NON_INTEGER_6   reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    TRUE            reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    FALSE           reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    INTERFACE       reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    ENUM            reduce using rule 389 (switchLabels -> switchLabels switchLabel .)
    CLASS           reduce using rule 389 (switchLabels -> switchLabels switchLabel .)


state 1115

    (387) switchBlockStatement -> switchLabels blockStatements .
    (285) blockStatements -> blockStatements . blockStatement
    (288) blockStatement -> . localVariableDeclarationStatement
    (289) blockStatement -> . statement
    (290) blockStatement -> . classDeclaration
    (291) blockStatement -> . interfaceDeclaration
    (292) blockStatement -> . annotationTypeDeclaration
    (293) blockStatement -> . enumDeclaration
    (294) localVariableDeclarationStatement -> . localVariableDeclaration SEMI
    (304) statement -> . statementWithoutTrailingSubStatement
    (305) statement -> . labeldStatement
    (306) statement -> . ifThenStatement
    (307) statement -> . ifThenElseStatement
    (308) statement -> . whileStatement
    (309) statement -> . forStatement
    (310) statement -> . enhancedForStatement
    (136) classDeclaration -> . classHead classBody
    (195) interfaceDeclaration -> . interfaceHead InterfaceBody
    (239) annotationTypeDeclaration -> . annotationTypeDeclarationHead annotationTypeBody
    (215) enumDeclaration -> . enumHead enumBody
    (295) localVariableDeclaration -> . type variableDeclarators
    (296) localVariableDeclaration -> . modifiers type variableDeclarators
    (311) statementWithoutTrailingSubStatement -> . block
    (312) statementWithoutTrailingSubStatement -> . expressionStatement
    (313) statementWithoutTrailingSubStatement -> . assertStatement
    (314) statementWithoutTrailingSubStatement -> . emptyStatement
    (315) statementWithoutTrailingSubStatement -> . switchStatement
    (316) statementWithoutTrailingSubStatement -> . doStatement
    (317) statementWithoutTrailingSubStatement -> . breakStatement
    (318) statementWithoutTrailingSubStatement -> . continueStatement
    (319) statementWithoutTrailingSubStatement -> . returnStatement
    (320) statementWithoutTrailingSubStatement -> . synchronizedStatement
    (321) statementWithoutTrailingSubStatement -> . throwStatment
    (322) statementWithoutTrailingSubStatement -> . tryStatement
    (323) statementWithoutTrailingSubStatement -> . tryStatementWithResources
    (346) labeldStatement -> . label COLON statement
    (349) ifThenStatement -> . IF LPAREN expression RPAREN statement
    (350) ifThenElseStatement -> . IF LPAREN expression RPAREN statementNoShortIf ELSE statement
    (352) whileStatement -> . WHILE LPAREN expression RPAREN statement
    (354) forStatement -> . FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement
    (367) enhancedForStatement -> . enhancedForStatementHead statement
    (137) classHead -> . className classExtends_opt classImpls_opt
    (196) interfaceHead -> . interfaceHeadName interfaceHeadExtends_opt
    (240) annotationTypeDeclarationHead -> . annotationTypeDeclarationHeadName classExtends_opt classImpls_opt
    (216) enumHead -> . enumHeadName classImpls_opt
    (33) type -> . primitiveType
    (34) type -> . referenceType
    (122) modifiers -> . modifier
    (123) modifiers -> . modifiers modifier
    (283) block -> . BLPAREN blockStatements_opt BRPAREN
    (324) expressionStatement -> . statementExpression SEMI
    (325) expressionStatement -> . explicitConstructorInvocation
    (377) assertStatement -> . ASSERT expression SEMI
    (378) assertStatement -> . ASSERT expression COLON expression SEMI
    (379) emptyStatement -> . SEMI
    (380) switchStatement -> . SWITCH LPAREN expression RPAREN switchBlock
    (393) doStatement -> . DO statement WHILE LPAREN expression RPAREN SEMI
    (394) breakStatement -> . BREAK SEMI
    (395) breakStatement -> . BREAK Identifier SEMI
    (396) continueStatement -> . CONTINUE SEMI
    (397) continueStatement -> . CONTINUE Identifier SEMI
    (398) returnStatement -> . RETURN expression_opt SEMI
    (399) synchronizedStatement -> . SYNCHRONIZED LPAREN expression RPAREN block
    (400) throwStatment -> . THROW expression SEMI
    (401) tryStatement -> . TRY tryBlock catches
    (402) tryStatement -> . TRY tryBlock catches_opt finally
    (413) tryStatementWithResources -> . TRY resourceSpecification tryBlock catches_opt
    (414) tryStatementWithResources -> . TRY resourceSpecification tryBlock catches_opt finally
    (348) label -> . Identifier
    (369) enhancedForStatementHead -> . enhancedForStatementHeadInit COLON expression RPAREN
    (138) className -> . classHeadName1 typeParameters
    (139) className -> . classHeadName1
    (197) interfaceHeadName -> . modifiers_opt INTERFACE Identifier typeParameters
    (198) interfaceHeadName -> . modifiers_opt INTERFACE Identifier
    (241) annotationTypeDeclarationHeadName -> . modifiers AT INTERFACE Identifier
    (242) annotationTypeDeclarationHeadName -> . modifiers AT INTERFACE Identifier typeParameters
    (243) annotationTypeDeclarationHeadName -> . AT INTERFACE Identifier typeParameters
    (244) annotationTypeDeclarationHeadName -> . AT INTERFACE Identifier
    (217) enumHeadName -> . modifiers_opt ENUM Identifier
    (218) enumHeadName -> . modifiers_opt ENUM Identifier typeParameters
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (44) referenceType -> . classOrInterfaceType
    (45) referenceType -> . arrayType
    (124) modifier -> . PUBLIC
    (125) modifier -> . PROTECTED
    (126) modifier -> . PRIVATE
    (127) modifier -> . STATIC
    (128) modifier -> . ABSTRACT
    (129) modifier -> . FINAL
    (130) modifier -> . NATIVE
    (131) modifier -> . SYNCHRONIZED
    (132) modifier -> . TRANSIENT
    (133) modifier -> . VOLATILE
    (134) modifier -> . STRICTFP
    (135) modifier -> . annotation
    (326) statementExpression -> . assignment
    (327) statementExpression -> . preIncrementExpression
    (328) statementExpression -> . preDecrementExpression
    (329) statementExpression -> . postIncrementExpression
    (330) statementExpression -> . postDecrementExpression
    (331) statementExpression -> . methodInvocation
    (332) statementExpression -> . classInstanceCreationExpression
    (424) explicitConstructorInvocation -> . THIS LPAREN argumentList_opt RPAREN SEMI
    (425) explicitConstructorInvocation -> . SUPER LPAREN argumentList_opt RPAREN SEMI
    (426) explicitConstructorInvocation -> . typeArguments SUPER LPAREN argumentList RPAREN SEMI
    (427) explicitConstructorInvocation -> . typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (428) explicitConstructorInvocation -> . primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI
    (429) explicitConstructorInvocation -> . name DOT SUPER LPAREN argumentList_opt RPAREN SEMI
    (430) explicitConstructorInvocation -> . primary DOT THIS LPAREN argumentList_opt RPAREN SEMI
    (431) explicitConstructorInvocation -> . name DOT THIS LPAREN argumentList_opt RPAREN SEMI
    (432) explicitConstructorInvocation -> . primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI
    (433) explicitConstructorInvocation -> . name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI
    (434) explicitConstructorInvocation -> . primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (435) explicitConstructorInvocation -> . name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (370) enhancedForStatementHeadInit -> . FOR LPAREN type Identifier arrays_opt
    (371) enhancedForStatementHeadInit -> . FOR LPAREN modifiers type Identifier arrays_opt
    (140) classHeadName1 -> . modifiers_opt CLASS Identifier
    (120) modifiers_opt -> . modifiers
    (121) modifiers_opt -> . empty
    (46) classOrInterfaceType -> . classOrInterface
    (47) classOrInterfaceType -> . genericType
    (54) arrayType -> . genericType arrays
    (55) arrayType -> . genericType DOT name arrays
    (56) arrayType -> . primitiveType arrays
    (57) arrayType -> . name arrays
    (270) annotation -> . normalAnnotation
    (271) annotation -> . markerAnnotation
    (272) annotation -> . singleMemberAnnotation
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (82) typeArguments -> . LESS typeArgumentList1
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (631) empty -> .
    (48) classOrInterface -> . name
    (49) classOrInterface -> . genericType DOT name
    (50) genericType -> . classOrInterface typeArguments
    (51) genericType -> . classOrInterface LESS MORE
    (273) normalAnnotation -> . annotationName LPAREN memberValuePairs_opt RPAREN
    (280) markerAnnotation -> . annotationName
    (281) singleMemberAnnotation -> . annotationName LPAREN singleMemberAnnotationMemberValue RPAREN
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (442) classInstanceCreationExpressionName -> . name DOT
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (274) annotationName -> . AT name
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE

    BRPAREN         reduce using rule 387 (switchBlockStatement -> switchLabels blockStatements .)
    CASE            reduce using rule 387 (switchBlockStatement -> switchLabels blockStatements .)
    DEFAULT         reduce using rule 387 (switchBlockStatement -> switchLabels blockStatements .)
    IF              shift and go to state 349
    WHILE           shift and go to state 325
    FOR             shift and go to state 312
    BLPAREN         shift and go to state 120
    ASSERT          shift and go to state 336
    SEMI            shift and go to state 341
    SWITCH          shift and go to state 328
    DO              shift and go to state 335
    BREAK           shift and go to state 305
    CONTINUE        shift and go to state 318
    RETURN          shift and go to state 302
    SYNCHRONIZED    shift and go to state 303
    THROW           shift and go to state 354
    TRY             shift and go to state 314
    Identifier      shift and go to state 316
    AT              shift and go to state 48
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    PUBLIC          shift and go to state 46
    PROTECTED       shift and go to state 6
    PRIVATE         shift and go to state 14
    STATIC          shift and go to state 7
    ABSTRACT        shift and go to state 5
    FINAL           shift and go to state 11
    NATIVE          shift and go to state 12
    TRANSIENT       shift and go to state 19
    VOLATILE        shift and go to state 43
    STRICTFP        shift and go to state 18
    THIS            shift and go to state 300
    SUPER           shift and go to state 353
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    NEW             shift and go to state 326
    LESS            shift and go to state 287
    INTERFACE       reduce using rule 631 (empty -> .)
    ENUM            reduce using rule 631 (empty -> .)
    CLASS           reduce using rule 631 (empty -> .)
    LPAREN          shift and go to state 348
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    forStatement                   shift and go to state 286
    switchStatement                shift and go to state 288
    assertStatement                shift and go to state 289
    blockStatement                 shift and go to state 580
    genericType                    shift and go to state 271
    markerAnnotation               shift and go to state 9
    classOrInterfaceType           shift and go to state 272
    preIncrementExpression         shift and go to state 308
    booleanLiteral                 shift and go to state 173
    ifThenElseStatement            shift and go to state 291
    primaryNoNewArray              shift and go to state 178
    whileStatement                 shift and go to state 292
    classHeadName1                 shift and go to state 33
    annotationTypeDeclarationHeadName shift and go to state 34
    postIncrementExpression        shift and go to state 293
    localVariableDeclarationStatement shift and go to state 294
    emptyStatement                 shift and go to state 295
    enhancedForStatementHead       shift and go to state 296
    returnStatement                shift and go to state 297
    arrayAccess                    shift and go to state 234
    postfixExpression              shift and go to state 298
    name                           shift and go to state 299
    expressionStatement            shift and go to state 301
    annotationName                 shift and go to state 40
    classOrInterface               shift and go to state 122
    qualifiedName                  shift and go to state 64
    continueStatement              shift and go to state 304
    primitiveType                  shift and go to state 334
    postDecrementExpression        shift and go to state 306
    typeArguments                  shift and go to state 307
    label                          shift and go to state 309
    simpleName                     shift and go to state 66
    throwStatment                  shift and go to state 310
    methodInvocation               shift and go to state 311
    classInstanceCreationExpressionName shift and go to state 187
    enhancedForStatementHeadInit   shift and go to state 313
    enumHead                       shift and go to state 30
    classDeclaration               shift and go to state 315
    annotationTypeDeclaration      shift and go to state 317
    interfaceDeclaration           shift and go to state 343
    normalAnnotation               shift and go to state 24
    ifThenStatement                shift and go to state 347
    preDecrementExpression         shift and go to state 320
    block                          shift and go to state 321
    classInstanceCreationExpression shift and go to state 322
    localVariableDeclaration       shift and go to state 323
    modifiers_opt                  shift and go to state 1
    primary                        shift and go to state 324
    singleMemberAnnotation         shift and go to state 8
    enumHeadName                   shift and go to state 10
    doStatement                    shift and go to state 327
    literal                        shift and go to state 208
    labeldStatement                shift and go to state 329
    statement                      shift and go to state 330
    interfaceHeadName              shift and go to state 27
    referenceType                  shift and go to state 273
    type                           shift and go to state 331
    empty                          shift and go to state 74
    annotationTypeDeclarationHead  shift and go to state 15
    modifiers                      shift and go to state 333
    arrayType                      shift and go to state 269
    className                      shift and go to state 13
    modifier                       shift and go to state 45
    arrayCreationWithArrayInitializer shift and go to state 227
    classHead                      shift and go to state 3
    breakStatement                 shift and go to state 337
    tryStatementWithResources      shift and go to state 338
    synchronizedStatement          shift and go to state 339
    enumDeclaration                shift and go to state 340
    arrayCreationWithoutArrayInitializer shift and go to state 232
    tryStatement                   shift and go to state 342
    FloatingPointLiteral           shift and go to state 214
    fieldAccess                    shift and go to state 189
    statementWithoutTrailingSubStatement shift and go to state 344
    integerLiteral                 shift and go to state 183
    assignment                     shift and go to state 346
    annotation                     shift and go to state 35
    statementExpression            shift and go to state 350
    explicitConstructorInvocation  shift and go to state 351
    enhancedForStatement           shift and go to state 352
    interfaceHead                  shift and go to state 47

state 1116

    (383) switchBlock -> BLPAREN switchLabels BRPAREN .

    IF              reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    WHILE           reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    FOR             reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    BLPAREN         reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    ASSERT          reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    SEMI            reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    SWITCH          reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    DO              reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    BREAK           reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    CONTINUE        reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    RETURN          reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    SYNCHRONIZED    reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    THROW           reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    TRY             reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    Identifier      reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    AT              reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    BOOLEAN         reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    VOID            reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    BYTE            reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    SHORT           reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    INT             reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    LONG            reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    CHAR            reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    FLOAT           reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    DOUBLE          reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    PUBLIC          reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    PROTECTED       reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    PRIVATE         reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    STATIC          reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    ABSTRACT        reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    FINAL           reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    NATIVE          reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    TRANSIENT       reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    VOLATILE        reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    STRICTFP        reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    THIS            reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    SUPER           reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    OP_INC          reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    OP_DEC          reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    NEW             reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    LESS            reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    LPAREN          reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    CharacterLiteral reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    StringLiteral   reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    NULL            reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    LONG_NUMBER     reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    LONG_HEX_NUMBER reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    NON_INTEGER_1   reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    NON_INTEGER_2   reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    NON_INTEGER_3   reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    NON_INTEGER_4   reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    NON_INTEGER_5   reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    NON_INTEGER_6   reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    TRUE            reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    FALSE           reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    INTERFACE       reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    ENUM            reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    CLASS           reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    BRPAREN         reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    CASE            reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    DEFAULT         reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)
    ELSE            reduce using rule 383 (switchBlock -> BLPAREN switchLabels BRPAREN .)


state 1117

    (393) doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .

    IF              reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    WHILE           reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    FOR             reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    BLPAREN         reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    ASSERT          reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    SEMI            reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    SWITCH          reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    DO              reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    BREAK           reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    CONTINUE        reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    RETURN          reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    SYNCHRONIZED    reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    THROW           reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    TRY             reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    Identifier      reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    AT              reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    BOOLEAN         reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    VOID            reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    BYTE            reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    SHORT           reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    INT             reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    LONG            reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    CHAR            reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    FLOAT           reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    DOUBLE          reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    PUBLIC          reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    PROTECTED       reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    PRIVATE         reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    STATIC          reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    ABSTRACT        reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    FINAL           reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    NATIVE          reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    TRANSIENT       reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    VOLATILE        reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    STRICTFP        reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    THIS            reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    SUPER           reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    OP_INC          reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    OP_DEC          reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    NEW             reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    LESS            reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    LPAREN          reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    CharacterLiteral reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    StringLiteral   reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    NULL            reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    LONG_NUMBER     reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    LONG_HEX_NUMBER reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    NON_INTEGER_1   reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    NON_INTEGER_2   reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    NON_INTEGER_3   reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    NON_INTEGER_4   reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    NON_INTEGER_5   reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    NON_INTEGER_6   reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    TRUE            reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    FALSE           reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    INTERFACE       reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    ENUM            reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    CLASS           reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    BRPAREN         reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    CASE            reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    DEFAULT         reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    ELSE            reduce using rule 393 (doStatement -> DO statement WHILE LPAREN expression RPAREN SEMI .)


state 1118

    (352) whileStatement -> WHILE LPAREN expression . RPAREN statement
    (353) whileStatementNoShortIf -> WHILE LPAREN expression . RPAREN statementNoShortIf

    RPAREN          shift and go to state 1140


state 1119

    (347) labeledStatementNoShortIf -> label COLON statementNoShortIf .

    ELSE            reduce using rule 347 (labeledStatementNoShortIf -> label COLON statementNoShortIf .)


state 1120

    (350) ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .

    IF              reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    WHILE           reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    FOR             reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    BLPAREN         reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    ASSERT          reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    SEMI            reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    SWITCH          reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    DO              reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    BREAK           reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    CONTINUE        reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    RETURN          reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    SYNCHRONIZED    reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    THROW           reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    TRY             reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    Identifier      reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    AT              reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    BOOLEAN         reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    VOID            reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    BYTE            reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    SHORT           reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    INT             reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    LONG            reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    CHAR            reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    FLOAT           reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    DOUBLE          reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    PUBLIC          reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    PROTECTED       reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    PRIVATE         reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    STATIC          reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    ABSTRACT        reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    FINAL           reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    NATIVE          reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    TRANSIENT       reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    VOLATILE        reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    STRICTFP        reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    THIS            reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    SUPER           reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    OP_INC          reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    OP_DEC          reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    NEW             reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    LESS            reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    LPAREN          reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    CharacterLiteral reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    StringLiteral   reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    NULL            reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    LONG_NUMBER     reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    LONG_HEX_NUMBER reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    NON_INTEGER_1   reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    NON_INTEGER_2   reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    NON_INTEGER_3   reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    NON_INTEGER_4   reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    NON_INTEGER_5   reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    NON_INTEGER_6   reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    TRUE            reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    FALSE           reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    INTERFACE       reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    ENUM            reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    CLASS           reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    BRPAREN         reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    CASE            reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)
    DEFAULT         reduce using rule 350 (ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE statement .)


state 1121

    (349) ifThenStatement -> IF LPAREN expression . RPAREN statement
    (350) ifThenElseStatement -> IF LPAREN expression . RPAREN statementNoShortIf ELSE statement
    (351) ifThenElseStatementNoShortIf -> IF LPAREN expression . RPAREN statementNoShortIf ELSE statementNoShortIf

    RPAREN          shift and go to state 1141


state 1122

    (441) classInstanceCreationExpression -> classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .

    FLPAREN         reduce using rule 441 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    DOT             reduce using rule 441 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_INC          reduce using rule 441 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_DEC          reduce using rule 441 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    MULT            reduce using rule 441 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    SLASH           reduce using rule 441 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    PERCENT         reduce using rule 441 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    PLUS            reduce using rule 441 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    DASH            reduce using rule 441 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_SHR          reduce using rule 441 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_SHL          reduce using rule 441 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_SHRR         reduce using rule 441 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    LESS            reduce using rule 441 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_GE           reduce using rule 441 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    MORE            reduce using rule 441 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_LE           reduce using rule 441 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    INSTANCEOF      reduce using rule 441 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_EQ           reduce using rule 441 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_NE           reduce using rule 441 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    AND             reduce using rule 441 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    CARET           reduce using rule 441 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    VERTICAL        reduce using rule 441 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_LAND         reduce using rule 441 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    QUES            reduce using rule 441 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_LOR          reduce using rule 441 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    RPAREN          reduce using rule 441 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    COMMA           reduce using rule 441 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    BRPAREN         reduce using rule 441 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    SEMI            reduce using rule 441 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    COLON           reduce using rule 441 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    FRPAREN         reduce using rule 441 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS             reduce using rule 441 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_ADD         reduce using rule 441 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_SUB         reduce using rule 441 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_MUL         reduce using rule 441 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_DIV         reduce using rule 441 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_AND         reduce using rule 441 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_OR          reduce using rule 441 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_XOR         reduce using rule 441 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_MOD         reduce using rule 441 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_SHL         reduce using rule 441 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_SHRR        reduce using rule 441 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_SHR         reduce using rule 441 (classInstanceCreationExpression -> classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)


state 1123

    (439) classInstanceCreationExpression -> primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt .

    FLPAREN         reduce using rule 439 (classInstanceCreationExpression -> primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    DOT             reduce using rule 439 (classInstanceCreationExpression -> primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_INC          reduce using rule 439 (classInstanceCreationExpression -> primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_DEC          reduce using rule 439 (classInstanceCreationExpression -> primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    MULT            reduce using rule 439 (classInstanceCreationExpression -> primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    SLASH           reduce using rule 439 (classInstanceCreationExpression -> primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    PERCENT         reduce using rule 439 (classInstanceCreationExpression -> primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    PLUS            reduce using rule 439 (classInstanceCreationExpression -> primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    DASH            reduce using rule 439 (classInstanceCreationExpression -> primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_SHR          reduce using rule 439 (classInstanceCreationExpression -> primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_SHL          reduce using rule 439 (classInstanceCreationExpression -> primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_SHRR         reduce using rule 439 (classInstanceCreationExpression -> primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    LESS            reduce using rule 439 (classInstanceCreationExpression -> primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_GE           reduce using rule 439 (classInstanceCreationExpression -> primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    MORE            reduce using rule 439 (classInstanceCreationExpression -> primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_LE           reduce using rule 439 (classInstanceCreationExpression -> primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    INSTANCEOF      reduce using rule 439 (classInstanceCreationExpression -> primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_EQ           reduce using rule 439 (classInstanceCreationExpression -> primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_NE           reduce using rule 439 (classInstanceCreationExpression -> primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    AND             reduce using rule 439 (classInstanceCreationExpression -> primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    CARET           reduce using rule 439 (classInstanceCreationExpression -> primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    VERTICAL        reduce using rule 439 (classInstanceCreationExpression -> primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_LAND         reduce using rule 439 (classInstanceCreationExpression -> primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    QUES            reduce using rule 439 (classInstanceCreationExpression -> primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_LOR          reduce using rule 439 (classInstanceCreationExpression -> primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    RPAREN          reduce using rule 439 (classInstanceCreationExpression -> primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    COMMA           reduce using rule 439 (classInstanceCreationExpression -> primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    BRPAREN         reduce using rule 439 (classInstanceCreationExpression -> primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    SEMI            reduce using rule 439 (classInstanceCreationExpression -> primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    COLON           reduce using rule 439 (classInstanceCreationExpression -> primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    FRPAREN         reduce using rule 439 (classInstanceCreationExpression -> primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS             reduce using rule 439 (classInstanceCreationExpression -> primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_ADD         reduce using rule 439 (classInstanceCreationExpression -> primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_SUB         reduce using rule 439 (classInstanceCreationExpression -> primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_MUL         reduce using rule 439 (classInstanceCreationExpression -> primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_DIV         reduce using rule 439 (classInstanceCreationExpression -> primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_AND         reduce using rule 439 (classInstanceCreationExpression -> primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_OR          reduce using rule 439 (classInstanceCreationExpression -> primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_XOR         reduce using rule 439 (classInstanceCreationExpression -> primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_MOD         reduce using rule 439 (classInstanceCreationExpression -> primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_SHL         reduce using rule 439 (classInstanceCreationExpression -> primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_SHRR        reduce using rule 439 (classInstanceCreationExpression -> primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_SHR         reduce using rule 439 (classInstanceCreationExpression -> primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt .)


state 1124

    (438) classInstanceCreationExpression -> primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN . classBody_opt
    (443) classBody_opt -> . classBody
    (444) classBody_opt -> . empty
    (151) classBody -> . BLPAREN classBodyDeclarations_opt BRPAREN
    (631) empty -> .

    BLPAREN         shift and go to state 52
    FLPAREN         reduce using rule 631 (empty -> .)
    DOT             reduce using rule 631 (empty -> .)
    MULT            reduce using rule 631 (empty -> .)
    SLASH           reduce using rule 631 (empty -> .)
    PERCENT         reduce using rule 631 (empty -> .)
    PLUS            reduce using rule 631 (empty -> .)
    DASH            reduce using rule 631 (empty -> .)
    OP_SHR          reduce using rule 631 (empty -> .)
    OP_SHL          reduce using rule 631 (empty -> .)
    OP_SHRR         reduce using rule 631 (empty -> .)
    LESS            reduce using rule 631 (empty -> .)
    OP_GE           reduce using rule 631 (empty -> .)
    MORE            reduce using rule 631 (empty -> .)
    OP_LE           reduce using rule 631 (empty -> .)
    INSTANCEOF      reduce using rule 631 (empty -> .)
    OP_EQ           reduce using rule 631 (empty -> .)
    OP_NE           reduce using rule 631 (empty -> .)
    AND             reduce using rule 631 (empty -> .)
    CARET           reduce using rule 631 (empty -> .)
    VERTICAL        reduce using rule 631 (empty -> .)
    OP_LAND         reduce using rule 631 (empty -> .)
    QUES            reduce using rule 631 (empty -> .)
    OP_LOR          reduce using rule 631 (empty -> .)
    RPAREN          reduce using rule 631 (empty -> .)
    OP_INC          reduce using rule 631 (empty -> .)
    OP_DEC          reduce using rule 631 (empty -> .)
    SEMI            reduce using rule 631 (empty -> .)
    ASS             reduce using rule 631 (empty -> .)
    ASS_ADD         reduce using rule 631 (empty -> .)
    ASS_SUB         reduce using rule 631 (empty -> .)
    ASS_MUL         reduce using rule 631 (empty -> .)
    ASS_DIV         reduce using rule 631 (empty -> .)
    ASS_AND         reduce using rule 631 (empty -> .)
    ASS_OR          reduce using rule 631 (empty -> .)
    ASS_XOR         reduce using rule 631 (empty -> .)
    ASS_MOD         reduce using rule 631 (empty -> .)
    ASS_SHL         reduce using rule 631 (empty -> .)
    ASS_SHRR        reduce using rule 631 (empty -> .)
    ASS_SHR         reduce using rule 631 (empty -> .)
    COMMA           reduce using rule 631 (empty -> .)
    BRPAREN         reduce using rule 631 (empty -> .)
    COLON           reduce using rule 631 (empty -> .)
    FRPAREN         reduce using rule 631 (empty -> .)

    empty                          shift and go to state 1023
    classBody                      shift and go to state 1021
    classBody_opt                  shift and go to state 1142

state 1125

    (610) castExpression -> LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus .

    MULT            reduce using rule 610 (castExpression -> LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    SLASH           reduce using rule 610 (castExpression -> LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    PERCENT         reduce using rule 610 (castExpression -> LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    PLUS            reduce using rule 610 (castExpression -> LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    DASH            reduce using rule 610 (castExpression -> LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    OP_SHR          reduce using rule 610 (castExpression -> LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    OP_SHL          reduce using rule 610 (castExpression -> LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    OP_SHRR         reduce using rule 610 (castExpression -> LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    LESS            reduce using rule 610 (castExpression -> LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    OP_GE           reduce using rule 610 (castExpression -> LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    MORE            reduce using rule 610 (castExpression -> LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    OP_LE           reduce using rule 610 (castExpression -> LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    INSTANCEOF      reduce using rule 610 (castExpression -> LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    OP_EQ           reduce using rule 610 (castExpression -> LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    OP_NE           reduce using rule 610 (castExpression -> LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    AND             reduce using rule 610 (castExpression -> LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    CARET           reduce using rule 610 (castExpression -> LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    VERTICAL        reduce using rule 610 (castExpression -> LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    OP_LAND         reduce using rule 610 (castExpression -> LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    QUES            reduce using rule 610 (castExpression -> LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    OP_LOR          reduce using rule 610 (castExpression -> LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    RPAREN          reduce using rule 610 (castExpression -> LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    SEMI            reduce using rule 610 (castExpression -> LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    COMMA           reduce using rule 610 (castExpression -> LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    BRPAREN         reduce using rule 610 (castExpression -> LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    COLON           reduce using rule 610 (castExpression -> LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus .)
    FRPAREN         reduce using rule 610 (castExpression -> LPAREN name typeArguments DOT classOrInterfaceType arrays_opt RPAREN unaryExpressionNotPlusMinus .)


state 1126

    (106) wildcardBounds -> EXTENDS referenceType .
    (103) referenceType3 -> referenceType . OP_SHRR
    (97) referenceType2 -> referenceType . OP_SHR
    (91) referenceType1 -> referenceType . MORE

    COMMA           reduce using rule 106 (wildcardBounds -> EXTENDS referenceType .)
    OP_SHRR         shift and go to state 1086
    OP_SHR          shift and go to state 959
    MORE            shift and go to state 716


state 1127

    (118) wildcardBounds3 -> EXTENDS referenceType3 .

    SUPER           reduce using rule 118 (wildcardBounds3 -> EXTENDS referenceType3 .)
    THIS            reduce using rule 118 (wildcardBounds3 -> EXTENDS referenceType3 .)
    Identifier      reduce using rule 118 (wildcardBounds3 -> EXTENDS referenceType3 .)
    DOT             reduce using rule 118 (wildcardBounds3 -> EXTENDS referenceType3 .)
    COMMA           reduce using rule 118 (wildcardBounds3 -> EXTENDS referenceType3 .)
    BLPAREN         reduce using rule 118 (wildcardBounds3 -> EXTENDS referenceType3 .)
    IMPLEMENTS      reduce using rule 118 (wildcardBounds3 -> EXTENDS referenceType3 .)
    FLPAREN         reduce using rule 118 (wildcardBounds3 -> EXTENDS referenceType3 .)
    LPAREN          reduce using rule 118 (wildcardBounds3 -> EXTENDS referenceType3 .)
    OP_ARRAY        reduce using rule 118 (wildcardBounds3 -> EXTENDS referenceType3 .)
    INSTANCEOF      reduce using rule 118 (wildcardBounds3 -> EXTENDS referenceType3 .)
    OP_EQ           reduce using rule 118 (wildcardBounds3 -> EXTENDS referenceType3 .)
    OP_NE           reduce using rule 118 (wildcardBounds3 -> EXTENDS referenceType3 .)
    AND             reduce using rule 118 (wildcardBounds3 -> EXTENDS referenceType3 .)
    CARET           reduce using rule 118 (wildcardBounds3 -> EXTENDS referenceType3 .)
    VERTICAL        reduce using rule 118 (wildcardBounds3 -> EXTENDS referenceType3 .)
    OP_LAND         reduce using rule 118 (wildcardBounds3 -> EXTENDS referenceType3 .)
    QUES            reduce using rule 118 (wildcardBounds3 -> EXTENDS referenceType3 .)
    OP_LOR          reduce using rule 118 (wildcardBounds3 -> EXTENDS referenceType3 .)
    RPAREN          reduce using rule 118 (wildcardBounds3 -> EXTENDS referenceType3 .)
    BRPAREN         reduce using rule 118 (wildcardBounds3 -> EXTENDS referenceType3 .)
    SEMI            reduce using rule 118 (wildcardBounds3 -> EXTENDS referenceType3 .)
    COLON           reduce using rule 118 (wildcardBounds3 -> EXTENDS referenceType3 .)
    FRPAREN         reduce using rule 118 (wildcardBounds3 -> EXTENDS referenceType3 .)
    EXTENDS         reduce using rule 118 (wildcardBounds3 -> EXTENDS referenceType3 .)
    BOOLEAN         reduce using rule 118 (wildcardBounds3 -> EXTENDS referenceType3 .)
    VOID            reduce using rule 118 (wildcardBounds3 -> EXTENDS referenceType3 .)
    BYTE            reduce using rule 118 (wildcardBounds3 -> EXTENDS referenceType3 .)
    SHORT           reduce using rule 118 (wildcardBounds3 -> EXTENDS referenceType3 .)
    INT             reduce using rule 118 (wildcardBounds3 -> EXTENDS referenceType3 .)
    LONG            reduce using rule 118 (wildcardBounds3 -> EXTENDS referenceType3 .)
    CHAR            reduce using rule 118 (wildcardBounds3 -> EXTENDS referenceType3 .)
    FLOAT           reduce using rule 118 (wildcardBounds3 -> EXTENDS referenceType3 .)
    DOUBLE          reduce using rule 118 (wildcardBounds3 -> EXTENDS referenceType3 .)
    MORE            reduce using rule 118 (wildcardBounds3 -> EXTENDS referenceType3 .)
    OP_SHR          reduce using rule 118 (wildcardBounds3 -> EXTENDS referenceType3 .)
    OP_SHRR         reduce using rule 118 (wildcardBounds3 -> EXTENDS referenceType3 .)


state 1128

    (107) wildcardBounds -> SUPER referenceType .
    (103) referenceType3 -> referenceType . OP_SHRR
    (97) referenceType2 -> referenceType . OP_SHR
    (91) referenceType1 -> referenceType . MORE

    COMMA           reduce using rule 107 (wildcardBounds -> SUPER referenceType .)
    OP_SHRR         shift and go to state 1086
    OP_SHR          shift and go to state 959
    MORE            shift and go to state 716


state 1129

    (119) wildcardBounds3 -> SUPER referenceType3 .

    SUPER           reduce using rule 119 (wildcardBounds3 -> SUPER referenceType3 .)
    THIS            reduce using rule 119 (wildcardBounds3 -> SUPER referenceType3 .)
    Identifier      reduce using rule 119 (wildcardBounds3 -> SUPER referenceType3 .)
    DOT             reduce using rule 119 (wildcardBounds3 -> SUPER referenceType3 .)
    COMMA           reduce using rule 119 (wildcardBounds3 -> SUPER referenceType3 .)
    BLPAREN         reduce using rule 119 (wildcardBounds3 -> SUPER referenceType3 .)
    IMPLEMENTS      reduce using rule 119 (wildcardBounds3 -> SUPER referenceType3 .)
    FLPAREN         reduce using rule 119 (wildcardBounds3 -> SUPER referenceType3 .)
    LPAREN          reduce using rule 119 (wildcardBounds3 -> SUPER referenceType3 .)
    OP_ARRAY        reduce using rule 119 (wildcardBounds3 -> SUPER referenceType3 .)
    INSTANCEOF      reduce using rule 119 (wildcardBounds3 -> SUPER referenceType3 .)
    OP_EQ           reduce using rule 119 (wildcardBounds3 -> SUPER referenceType3 .)
    OP_NE           reduce using rule 119 (wildcardBounds3 -> SUPER referenceType3 .)
    AND             reduce using rule 119 (wildcardBounds3 -> SUPER referenceType3 .)
    CARET           reduce using rule 119 (wildcardBounds3 -> SUPER referenceType3 .)
    VERTICAL        reduce using rule 119 (wildcardBounds3 -> SUPER referenceType3 .)
    OP_LAND         reduce using rule 119 (wildcardBounds3 -> SUPER referenceType3 .)
    QUES            reduce using rule 119 (wildcardBounds3 -> SUPER referenceType3 .)
    OP_LOR          reduce using rule 119 (wildcardBounds3 -> SUPER referenceType3 .)
    RPAREN          reduce using rule 119 (wildcardBounds3 -> SUPER referenceType3 .)
    BRPAREN         reduce using rule 119 (wildcardBounds3 -> SUPER referenceType3 .)
    SEMI            reduce using rule 119 (wildcardBounds3 -> SUPER referenceType3 .)
    COLON           reduce using rule 119 (wildcardBounds3 -> SUPER referenceType3 .)
    FRPAREN         reduce using rule 119 (wildcardBounds3 -> SUPER referenceType3 .)
    EXTENDS         reduce using rule 119 (wildcardBounds3 -> SUPER referenceType3 .)
    BOOLEAN         reduce using rule 119 (wildcardBounds3 -> SUPER referenceType3 .)
    VOID            reduce using rule 119 (wildcardBounds3 -> SUPER referenceType3 .)
    BYTE            reduce using rule 119 (wildcardBounds3 -> SUPER referenceType3 .)
    SHORT           reduce using rule 119 (wildcardBounds3 -> SUPER referenceType3 .)
    INT             reduce using rule 119 (wildcardBounds3 -> SUPER referenceType3 .)
    LONG            reduce using rule 119 (wildcardBounds3 -> SUPER referenceType3 .)
    CHAR            reduce using rule 119 (wildcardBounds3 -> SUPER referenceType3 .)
    FLOAT           reduce using rule 119 (wildcardBounds3 -> SUPER referenceType3 .)
    DOUBLE          reduce using rule 119 (wildcardBounds3 -> SUPER referenceType3 .)
    MORE            reduce using rule 119 (wildcardBounds3 -> SUPER referenceType3 .)
    OP_SHR          reduce using rule 119 (wildcardBounds3 -> SUPER referenceType3 .)
    OP_SHRR         reduce using rule 119 (wildcardBounds3 -> SUPER referenceType3 .)


state 1130

    (83) typeArgument -> referenceType .
    (103) referenceType3 -> referenceType . OP_SHRR
    (97) referenceType2 -> referenceType . OP_SHR
    (91) referenceType1 -> referenceType . MORE

    COMMA           reduce using rule 83 (typeArgument -> referenceType .)
    OP_SHRR         shift and go to state 1086
    OP_SHR          shift and go to state 959
    MORE            shift and go to state 716


state 1131

    (100) typeArgumentList3 -> typeArgumentList COMMA typeArgument3 .

    SUPER           reduce using rule 100 (typeArgumentList3 -> typeArgumentList COMMA typeArgument3 .)
    THIS            reduce using rule 100 (typeArgumentList3 -> typeArgumentList COMMA typeArgument3 .)
    Identifier      reduce using rule 100 (typeArgumentList3 -> typeArgumentList COMMA typeArgument3 .)
    DOT             reduce using rule 100 (typeArgumentList3 -> typeArgumentList COMMA typeArgument3 .)
    COMMA           reduce using rule 100 (typeArgumentList3 -> typeArgumentList COMMA typeArgument3 .)
    BLPAREN         reduce using rule 100 (typeArgumentList3 -> typeArgumentList COMMA typeArgument3 .)
    IMPLEMENTS      reduce using rule 100 (typeArgumentList3 -> typeArgumentList COMMA typeArgument3 .)
    FLPAREN         reduce using rule 100 (typeArgumentList3 -> typeArgumentList COMMA typeArgument3 .)
    LPAREN          reduce using rule 100 (typeArgumentList3 -> typeArgumentList COMMA typeArgument3 .)
    OP_ARRAY        reduce using rule 100 (typeArgumentList3 -> typeArgumentList COMMA typeArgument3 .)
    INSTANCEOF      reduce using rule 100 (typeArgumentList3 -> typeArgumentList COMMA typeArgument3 .)
    OP_EQ           reduce using rule 100 (typeArgumentList3 -> typeArgumentList COMMA typeArgument3 .)
    OP_NE           reduce using rule 100 (typeArgumentList3 -> typeArgumentList COMMA typeArgument3 .)
    AND             reduce using rule 100 (typeArgumentList3 -> typeArgumentList COMMA typeArgument3 .)
    CARET           reduce using rule 100 (typeArgumentList3 -> typeArgumentList COMMA typeArgument3 .)
    VERTICAL        reduce using rule 100 (typeArgumentList3 -> typeArgumentList COMMA typeArgument3 .)
    OP_LAND         reduce using rule 100 (typeArgumentList3 -> typeArgumentList COMMA typeArgument3 .)
    QUES            reduce using rule 100 (typeArgumentList3 -> typeArgumentList COMMA typeArgument3 .)
    OP_LOR          reduce using rule 100 (typeArgumentList3 -> typeArgumentList COMMA typeArgument3 .)
    RPAREN          reduce using rule 100 (typeArgumentList3 -> typeArgumentList COMMA typeArgument3 .)
    BRPAREN         reduce using rule 100 (typeArgumentList3 -> typeArgumentList COMMA typeArgument3 .)
    SEMI            reduce using rule 100 (typeArgumentList3 -> typeArgumentList COMMA typeArgument3 .)
    COLON           reduce using rule 100 (typeArgumentList3 -> typeArgumentList COMMA typeArgument3 .)
    FRPAREN         reduce using rule 100 (typeArgumentList3 -> typeArgumentList COMMA typeArgument3 .)
    EXTENDS         reduce using rule 100 (typeArgumentList3 -> typeArgumentList COMMA typeArgument3 .)
    BOOLEAN         reduce using rule 100 (typeArgumentList3 -> typeArgumentList COMMA typeArgument3 .)
    VOID            reduce using rule 100 (typeArgumentList3 -> typeArgumentList COMMA typeArgument3 .)
    BYTE            reduce using rule 100 (typeArgumentList3 -> typeArgumentList COMMA typeArgument3 .)
    SHORT           reduce using rule 100 (typeArgumentList3 -> typeArgumentList COMMA typeArgument3 .)
    INT             reduce using rule 100 (typeArgumentList3 -> typeArgumentList COMMA typeArgument3 .)
    LONG            reduce using rule 100 (typeArgumentList3 -> typeArgumentList COMMA typeArgument3 .)
    CHAR            reduce using rule 100 (typeArgumentList3 -> typeArgumentList COMMA typeArgument3 .)
    FLOAT           reduce using rule 100 (typeArgumentList3 -> typeArgumentList COMMA typeArgument3 .)
    DOUBLE          reduce using rule 100 (typeArgumentList3 -> typeArgumentList COMMA typeArgument3 .)
    MORE            reduce using rule 100 (typeArgumentList3 -> typeArgumentList COMMA typeArgument3 .)
    OP_SHR          reduce using rule 100 (typeArgumentList3 -> typeArgumentList COMMA typeArgument3 .)
    OP_SHRR         reduce using rule 100 (typeArgumentList3 -> typeArgumentList COMMA typeArgument3 .)


state 1132

    (435) explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .

    IF              reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    WHILE           reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    FOR             reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    BLPAREN         reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    ASSERT          reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    SEMI            reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    SWITCH          reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    DO              reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    BREAK           reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    CONTINUE        reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    RETURN          reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    SYNCHRONIZED    reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    THROW           reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    TRY             reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    Identifier      reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    AT              reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    BOOLEAN         reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    VOID            reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    BYTE            reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    SHORT           reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    INT             reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    LONG            reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    CHAR            reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    FLOAT           reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    DOUBLE          reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    PUBLIC          reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    PROTECTED       reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    PRIVATE         reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    STATIC          reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    ABSTRACT        reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    FINAL           reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    NATIVE          reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    TRANSIENT       reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    VOLATILE        reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    STRICTFP        reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    THIS            reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    SUPER           reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    OP_INC          reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    OP_DEC          reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    NEW             reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    LESS            reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    LPAREN          reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    CharacterLiteral reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    StringLiteral   reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    NULL            reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    LONG_NUMBER     reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    LONG_HEX_NUMBER reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_1   reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_2   reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_3   reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_4   reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_5   reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_6   reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    TRUE            reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    FALSE           reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    INTERFACE       reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    ENUM            reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    CLASS           reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    BRPAREN         reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    CASE            reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    DEFAULT         reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    ELSE            reduce using rule 435 (explicitConstructorInvocation -> name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)


state 1133

    (433) explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .

    IF              reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    WHILE           reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    FOR             reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    BLPAREN         reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    ASSERT          reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    SEMI            reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    SWITCH          reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    DO              reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    BREAK           reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    CONTINUE        reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    RETURN          reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    SYNCHRONIZED    reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    THROW           reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    TRY             reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    Identifier      reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    AT              reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    BOOLEAN         reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    VOID            reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    BYTE            reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    SHORT           reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    INT             reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    LONG            reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    CHAR            reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    FLOAT           reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    DOUBLE          reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    PUBLIC          reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    PROTECTED       reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    PRIVATE         reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    STATIC          reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    ABSTRACT        reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    FINAL           reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    NATIVE          reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    TRANSIENT       reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    VOLATILE        reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    STRICTFP        reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    THIS            reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    SUPER           reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    OP_INC          reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    OP_DEC          reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    NEW             reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    LESS            reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    LPAREN          reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    CharacterLiteral reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    StringLiteral   reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    NULL            reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    LONG_NUMBER     reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    LONG_HEX_NUMBER reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_1   reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_2   reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_3   reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_4   reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_5   reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_6   reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    TRUE            reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    FALSE           reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    INTERFACE       reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    ENUM            reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    CLASS           reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    BRPAREN         reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    CASE            reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    DEFAULT         reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    ELSE            reduce using rule 433 (explicitConstructorInvocation -> name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)


state 1134

    (354) forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN . statement
    (304) statement -> . statementWithoutTrailingSubStatement
    (305) statement -> . labeldStatement
    (306) statement -> . ifThenStatement
    (307) statement -> . ifThenElseStatement
    (308) statement -> . whileStatement
    (309) statement -> . forStatement
    (310) statement -> . enhancedForStatement
    (311) statementWithoutTrailingSubStatement -> . block
    (312) statementWithoutTrailingSubStatement -> . expressionStatement
    (313) statementWithoutTrailingSubStatement -> . assertStatement
    (314) statementWithoutTrailingSubStatement -> . emptyStatement
    (315) statementWithoutTrailingSubStatement -> . switchStatement
    (316) statementWithoutTrailingSubStatement -> . doStatement
    (317) statementWithoutTrailingSubStatement -> . breakStatement
    (318) statementWithoutTrailingSubStatement -> . continueStatement
    (319) statementWithoutTrailingSubStatement -> . returnStatement
    (320) statementWithoutTrailingSubStatement -> . synchronizedStatement
    (321) statementWithoutTrailingSubStatement -> . throwStatment
    (322) statementWithoutTrailingSubStatement -> . tryStatement
    (323) statementWithoutTrailingSubStatement -> . tryStatementWithResources
    (346) labeldStatement -> . label COLON statement
    (349) ifThenStatement -> . IF LPAREN expression RPAREN statement
    (350) ifThenElseStatement -> . IF LPAREN expression RPAREN statementNoShortIf ELSE statement
    (352) whileStatement -> . WHILE LPAREN expression RPAREN statement
    (354) forStatement -> . FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement
    (367) enhancedForStatement -> . enhancedForStatementHead statement
    (283) block -> . BLPAREN blockStatements_opt BRPAREN
    (324) expressionStatement -> . statementExpression SEMI
    (325) expressionStatement -> . explicitConstructorInvocation
    (377) assertStatement -> . ASSERT expression SEMI
    (378) assertStatement -> . ASSERT expression COLON expression SEMI
    (379) emptyStatement -> . SEMI
    (380) switchStatement -> . SWITCH LPAREN expression RPAREN switchBlock
    (393) doStatement -> . DO statement WHILE LPAREN expression RPAREN SEMI
    (394) breakStatement -> . BREAK SEMI
    (395) breakStatement -> . BREAK Identifier SEMI
    (396) continueStatement -> . CONTINUE SEMI
    (397) continueStatement -> . CONTINUE Identifier SEMI
    (398) returnStatement -> . RETURN expression_opt SEMI
    (399) synchronizedStatement -> . SYNCHRONIZED LPAREN expression RPAREN block
    (400) throwStatment -> . THROW expression SEMI
    (401) tryStatement -> . TRY tryBlock catches
    (402) tryStatement -> . TRY tryBlock catches_opt finally
    (413) tryStatementWithResources -> . TRY resourceSpecification tryBlock catches_opt
    (414) tryStatementWithResources -> . TRY resourceSpecification tryBlock catches_opt finally
    (348) label -> . Identifier
    (369) enhancedForStatementHead -> . enhancedForStatementHeadInit COLON expression RPAREN
    (326) statementExpression -> . assignment
    (327) statementExpression -> . preIncrementExpression
    (328) statementExpression -> . preDecrementExpression
    (329) statementExpression -> . postIncrementExpression
    (330) statementExpression -> . postDecrementExpression
    (331) statementExpression -> . methodInvocation
    (332) statementExpression -> . classInstanceCreationExpression
    (424) explicitConstructorInvocation -> . THIS LPAREN argumentList_opt RPAREN SEMI
    (425) explicitConstructorInvocation -> . SUPER LPAREN argumentList_opt RPAREN SEMI
    (426) explicitConstructorInvocation -> . typeArguments SUPER LPAREN argumentList RPAREN SEMI
    (427) explicitConstructorInvocation -> . typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (428) explicitConstructorInvocation -> . primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI
    (429) explicitConstructorInvocation -> . name DOT SUPER LPAREN argumentList_opt RPAREN SEMI
    (430) explicitConstructorInvocation -> . primary DOT THIS LPAREN argumentList_opt RPAREN SEMI
    (431) explicitConstructorInvocation -> . name DOT THIS LPAREN argumentList_opt RPAREN SEMI
    (432) explicitConstructorInvocation -> . primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI
    (433) explicitConstructorInvocation -> . name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI
    (434) explicitConstructorInvocation -> . primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (435) explicitConstructorInvocation -> . name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (370) enhancedForStatementHeadInit -> . FOR LPAREN type Identifier arrays_opt
    (371) enhancedForStatementHeadInit -> . FOR LPAREN modifiers type Identifier arrays_opt
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (82) typeArguments -> . LESS typeArgumentList1
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (442) classInstanceCreationExpressionName -> . name DOT
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE

    IF              shift and go to state 349
    WHILE           shift and go to state 325
    FOR             shift and go to state 312
    BLPAREN         shift and go to state 120
    ASSERT          shift and go to state 336
    SEMI            shift and go to state 341
    SWITCH          shift and go to state 328
    DO              shift and go to state 335
    BREAK           shift and go to state 305
    CONTINUE        shift and go to state 318
    RETURN          shift and go to state 302
    SYNCHRONIZED    shift and go to state 518
    THROW           shift and go to state 354
    TRY             shift and go to state 314
    Identifier      shift and go to state 316
    THIS            shift and go to state 300
    SUPER           shift and go to state 353
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    NEW             shift and go to state 326
    LESS            shift and go to state 287
    LPAREN          shift and go to state 348
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    forStatement                   shift and go to state 286
    qualifiedName                  shift and go to state 64
    continueStatement              shift and go to state 304
    arrayCreationWithArrayInitializer shift and go to state 227
    switchStatement                shift and go to state 288
    primary                        shift and go to state 324
    arrayCreationWithoutArrayInitializer shift and go to state 232
    breakStatement                 shift and go to state 337
    tryStatementWithResources      shift and go to state 338
    assertStatement                shift and go to state 289
    synchronizedStatement          shift and go to state 339
    booleanLiteral                 shift and go to state 173
    postDecrementExpression        shift and go to state 306
    typeArguments                  shift and go to state 307
    literal                        shift and go to state 208
    tryStatement                   shift and go to state 342
    preIncrementExpression         shift and go to state 308
    label                          shift and go to state 309
    simpleName                     shift and go to state 66
    labeldStatement                shift and go to state 329
    throwStatment                  shift and go to state 310
    methodInvocation               shift and go to state 311
    statement                      shift and go to state 1143
    arrayAccess                    shift and go to state 234
    ifThenElseStatement            shift and go to state 291
    fieldAccess                    shift and go to state 189
    statementWithoutTrailingSubStatement shift and go to state 344
    integerLiteral                 shift and go to state 183
    classInstanceCreationExpressionName shift and go to state 187
    FloatingPointLiteral           shift and go to state 214
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 346
    whileStatement                 shift and go to state 292
    enhancedForStatementHeadInit   shift and go to state 313
    postIncrementExpression        shift and go to state 293
    ifThenStatement                shift and go to state 347
    emptyStatement                 shift and go to state 295
    returnStatement                shift and go to state 297
    preDecrementExpression         shift and go to state 320
    doStatement                    shift and go to state 327
    postfixExpression              shift and go to state 298
    enhancedForStatementHead       shift and go to state 296
    name                           shift and go to state 517
    expressionStatement            shift and go to state 301
    primitiveType                  shift and go to state 219
    statementExpression            shift and go to state 350
    explicitConstructorInvocation  shift and go to state 351
    enhancedForStatement           shift and go to state 352
    block                          shift and go to state 321
    classInstanceCreationExpression shift and go to state 322

state 1135

    (412) unionType -> unionType VERTICAL type .

    VERTICAL        reduce using rule 412 (unionType -> unionType VERTICAL type .)
    Identifier      reduce using rule 412 (unionType -> unionType VERTICAL type .)


state 1136

    (434) explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .

    IF              reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    WHILE           reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    FOR             reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    BLPAREN         reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    ASSERT          reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    SEMI            reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    SWITCH          reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    DO              reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    BREAK           reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    CONTINUE        reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    RETURN          reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    SYNCHRONIZED    reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    THROW           reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    TRY             reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    Identifier      reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    AT              reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    BOOLEAN         reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    VOID            reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    BYTE            reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    SHORT           reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    INT             reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    LONG            reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    CHAR            reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    FLOAT           reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    DOUBLE          reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    PUBLIC          reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    PROTECTED       reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    PRIVATE         reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    STATIC          reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    ABSTRACT        reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    FINAL           reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    NATIVE          reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    TRANSIENT       reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    VOLATILE        reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    STRICTFP        reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    THIS            reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    SUPER           reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    OP_INC          reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    OP_DEC          reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    NEW             reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    LESS            reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    LPAREN          reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    CharacterLiteral reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    StringLiteral   reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    NULL            reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    LONG_NUMBER     reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    LONG_HEX_NUMBER reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_1   reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_2   reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_3   reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_4   reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_5   reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_6   reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    TRUE            reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    FALSE           reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    INTERFACE       reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    ENUM            reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    CLASS           reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    BRPAREN         reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    CASE            reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    DEFAULT         reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)
    ELSE            reduce using rule 434 (explicitConstructorInvocation -> primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI .)


state 1137

    (432) explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .

    IF              reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    WHILE           reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    FOR             reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    BLPAREN         reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    ASSERT          reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    SEMI            reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    SWITCH          reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    DO              reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    BREAK           reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    CONTINUE        reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    RETURN          reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    SYNCHRONIZED    reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    THROW           reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    TRY             reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    Identifier      reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    AT              reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    BOOLEAN         reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    VOID            reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    BYTE            reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    SHORT           reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    INT             reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    LONG            reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    CHAR            reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    FLOAT           reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    DOUBLE          reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    PUBLIC          reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    PROTECTED       reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    PRIVATE         reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    STATIC          reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    ABSTRACT        reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    FINAL           reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    NATIVE          reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    TRANSIENT       reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    VOLATILE        reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    STRICTFP        reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    THIS            reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    SUPER           reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    OP_INC          reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    OP_DEC          reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    NEW             reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    LESS            reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    LPAREN          reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    CharacterLiteral reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    StringLiteral   reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    NULL            reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    LONG_NUMBER     reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    LONG_HEX_NUMBER reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_1   reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_2   reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_3   reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_4   reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_5   reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    NON_INTEGER_6   reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    TRUE            reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    FALSE           reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    INTERFACE       reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    ENUM            reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    CLASS           reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    BRPAREN         reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    CASE            reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    DEFAULT         reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)
    ELSE            reduce using rule 432 (explicitConstructorInvocation -> primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI .)


state 1138

    (390) switchLabel -> CASE constantExpression COLON .

    BRPAREN         reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    CASE            reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    DEFAULT         reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    IF              reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    WHILE           reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    FOR             reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    BLPAREN         reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    ASSERT          reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    SEMI            reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    SWITCH          reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    DO              reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    BREAK           reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    CONTINUE        reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    RETURN          reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    SYNCHRONIZED    reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    THROW           reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    TRY             reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    Identifier      reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    AT              reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    BOOLEAN         reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    VOID            reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    BYTE            reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    SHORT           reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    INT             reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    LONG            reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    CHAR            reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    FLOAT           reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    DOUBLE          reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    PUBLIC          reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    PROTECTED       reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    PRIVATE         reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    STATIC          reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    ABSTRACT        reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    FINAL           reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    NATIVE          reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    TRANSIENT       reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    VOLATILE        reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    STRICTFP        reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    THIS            reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    SUPER           reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    OP_INC          reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    OP_DEC          reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    NEW             reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    LESS            reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    LPAREN          reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    CharacterLiteral reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    StringLiteral   reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    NULL            reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    LONG_NUMBER     reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    LONG_HEX_NUMBER reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    NON_INTEGER_1   reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    NON_INTEGER_2   reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    NON_INTEGER_3   reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    NON_INTEGER_4   reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    NON_INTEGER_5   reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    NON_INTEGER_6   reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    TRUE            reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    FALSE           reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    INTERFACE       reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    ENUM            reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)
    CLASS           reduce using rule 390 (switchLabel -> CASE constantExpression COLON .)


state 1139

    (384) switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .

    IF              reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    WHILE           reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    FOR             reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    BLPAREN         reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    ASSERT          reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    SEMI            reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    SWITCH          reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    DO              reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    BREAK           reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    CONTINUE        reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    RETURN          reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    SYNCHRONIZED    reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    THROW           reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    TRY             reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    Identifier      reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    AT              reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    BOOLEAN         reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    VOID            reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    BYTE            reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    SHORT           reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    INT             reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    LONG            reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    CHAR            reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    FLOAT           reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    DOUBLE          reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    PUBLIC          reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    PROTECTED       reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    PRIVATE         reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    STATIC          reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    ABSTRACT        reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    FINAL           reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    NATIVE          reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    TRANSIENT       reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    VOLATILE        reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    STRICTFP        reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    THIS            reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    SUPER           reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    OP_INC          reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    OP_DEC          reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    NEW             reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    LESS            reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    LPAREN          reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    CharacterLiteral reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    StringLiteral   reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    NULL            reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    LONG_NUMBER     reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    LONG_HEX_NUMBER reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    NON_INTEGER_1   reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    NON_INTEGER_2   reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    NON_INTEGER_3   reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    NON_INTEGER_4   reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    NON_INTEGER_5   reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    NON_INTEGER_6   reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    TRUE            reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    FALSE           reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    INTERFACE       reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    ENUM            reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    CLASS           reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    BRPAREN         reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    CASE            reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    DEFAULT         reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)
    ELSE            reduce using rule 384 (switchBlock -> BLPAREN switchBlockStatements switchLabels BRPAREN .)


state 1140

    (352) whileStatement -> WHILE LPAREN expression RPAREN . statement
    (353) whileStatementNoShortIf -> WHILE LPAREN expression RPAREN . statementNoShortIf
    (304) statement -> . statementWithoutTrailingSubStatement
    (305) statement -> . labeldStatement
    (306) statement -> . ifThenStatement
    (307) statement -> . ifThenElseStatement
    (308) statement -> . whileStatement
    (309) statement -> . forStatement
    (310) statement -> . enhancedForStatement
    (372) statementNoShortIf -> . statementWithoutTrailingSubStatement
    (373) statementNoShortIf -> . labeledStatementNoShortIf
    (374) statementNoShortIf -> . ifThenElseStatementNoShortIf
    (375) statementNoShortIf -> . whileStatementNoShortIf
    (376) statementNoShortIf -> . enhancedForStatementNoShortIf
    (311) statementWithoutTrailingSubStatement -> . block
    (312) statementWithoutTrailingSubStatement -> . expressionStatement
    (313) statementWithoutTrailingSubStatement -> . assertStatement
    (314) statementWithoutTrailingSubStatement -> . emptyStatement
    (315) statementWithoutTrailingSubStatement -> . switchStatement
    (316) statementWithoutTrailingSubStatement -> . doStatement
    (317) statementWithoutTrailingSubStatement -> . breakStatement
    (318) statementWithoutTrailingSubStatement -> . continueStatement
    (319) statementWithoutTrailingSubStatement -> . returnStatement
    (320) statementWithoutTrailingSubStatement -> . synchronizedStatement
    (321) statementWithoutTrailingSubStatement -> . throwStatment
    (322) statementWithoutTrailingSubStatement -> . tryStatement
    (323) statementWithoutTrailingSubStatement -> . tryStatementWithResources
    (346) labeldStatement -> . label COLON statement
    (349) ifThenStatement -> . IF LPAREN expression RPAREN statement
    (350) ifThenElseStatement -> . IF LPAREN expression RPAREN statementNoShortIf ELSE statement
    (352) whileStatement -> . WHILE LPAREN expression RPAREN statement
    (354) forStatement -> . FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement
    (367) enhancedForStatement -> . enhancedForStatementHead statement
    (347) labeledStatementNoShortIf -> . label COLON statementNoShortIf
    (351) ifThenElseStatementNoShortIf -> . IF LPAREN expression RPAREN statementNoShortIf ELSE statementNoShortIf
    (353) whileStatementNoShortIf -> . WHILE LPAREN expression RPAREN statementNoShortIf
    (368) enhancedForStatementNoShortIf -> . enhancedForStatementHead statementNoShortIf
    (283) block -> . BLPAREN blockStatements_opt BRPAREN
    (324) expressionStatement -> . statementExpression SEMI
    (325) expressionStatement -> . explicitConstructorInvocation
    (377) assertStatement -> . ASSERT expression SEMI
    (378) assertStatement -> . ASSERT expression COLON expression SEMI
    (379) emptyStatement -> . SEMI
    (380) switchStatement -> . SWITCH LPAREN expression RPAREN switchBlock
    (393) doStatement -> . DO statement WHILE LPAREN expression RPAREN SEMI
    (394) breakStatement -> . BREAK SEMI
    (395) breakStatement -> . BREAK Identifier SEMI
    (396) continueStatement -> . CONTINUE SEMI
    (397) continueStatement -> . CONTINUE Identifier SEMI
    (398) returnStatement -> . RETURN expression_opt SEMI
    (399) synchronizedStatement -> . SYNCHRONIZED LPAREN expression RPAREN block
    (400) throwStatment -> . THROW expression SEMI
    (401) tryStatement -> . TRY tryBlock catches
    (402) tryStatement -> . TRY tryBlock catches_opt finally
    (413) tryStatementWithResources -> . TRY resourceSpecification tryBlock catches_opt
    (414) tryStatementWithResources -> . TRY resourceSpecification tryBlock catches_opt finally
    (348) label -> . Identifier
    (369) enhancedForStatementHead -> . enhancedForStatementHeadInit COLON expression RPAREN
    (326) statementExpression -> . assignment
    (327) statementExpression -> . preIncrementExpression
    (328) statementExpression -> . preDecrementExpression
    (329) statementExpression -> . postIncrementExpression
    (330) statementExpression -> . postDecrementExpression
    (331) statementExpression -> . methodInvocation
    (332) statementExpression -> . classInstanceCreationExpression
    (424) explicitConstructorInvocation -> . THIS LPAREN argumentList_opt RPAREN SEMI
    (425) explicitConstructorInvocation -> . SUPER LPAREN argumentList_opt RPAREN SEMI
    (426) explicitConstructorInvocation -> . typeArguments SUPER LPAREN argumentList RPAREN SEMI
    (427) explicitConstructorInvocation -> . typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (428) explicitConstructorInvocation -> . primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI
    (429) explicitConstructorInvocation -> . name DOT SUPER LPAREN argumentList_opt RPAREN SEMI
    (430) explicitConstructorInvocation -> . primary DOT THIS LPAREN argumentList_opt RPAREN SEMI
    (431) explicitConstructorInvocation -> . name DOT THIS LPAREN argumentList_opt RPAREN SEMI
    (432) explicitConstructorInvocation -> . primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI
    (433) explicitConstructorInvocation -> . name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI
    (434) explicitConstructorInvocation -> . primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (435) explicitConstructorInvocation -> . name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (370) enhancedForStatementHeadInit -> . FOR LPAREN type Identifier arrays_opt
    (371) enhancedForStatementHeadInit -> . FOR LPAREN modifiers type Identifier arrays_opt
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (82) typeArguments -> . LESS typeArgumentList1
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (442) classInstanceCreationExpressionName -> . name DOT
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE

    IF              shift and go to state 1007
    WHILE           shift and go to state 998
    FOR             shift and go to state 312
    BLPAREN         shift and go to state 120
    ASSERT          shift and go to state 336
    SEMI            shift and go to state 341
    SWITCH          shift and go to state 328
    DO              shift and go to state 335
    BREAK           shift and go to state 305
    CONTINUE        shift and go to state 318
    RETURN          shift and go to state 302
    SYNCHRONIZED    shift and go to state 518
    THROW           shift and go to state 354
    TRY             shift and go to state 314
    Identifier      shift and go to state 316
    THIS            shift and go to state 300
    SUPER           shift and go to state 353
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    NEW             shift and go to state 326
    LESS            shift and go to state 287
    LPAREN          shift and go to state 348
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    forStatement                   shift and go to state 286
    labeledStatementNoShortIf      shift and go to state 1000
    qualifiedName                  shift and go to state 64
    continueStatement              shift and go to state 304
    arrayCreationWithArrayInitializer shift and go to state 227
    switchStatement                shift and go to state 288
    primary                        shift and go to state 324
    arrayCreationWithoutArrayInitializer shift and go to state 232
    breakStatement                 shift and go to state 337
    tryStatementWithResources      shift and go to state 338
    whileStatementNoShortIf        shift and go to state 1001
    assertStatement                shift and go to state 289
    synchronizedStatement          shift and go to state 339
    booleanLiteral                 shift and go to state 173
    doStatement                    shift and go to state 327
    postDecrementExpression        shift and go to state 306
    typeArguments                  shift and go to state 307
    literal                        shift and go to state 208
    tryStatement                   shift and go to state 342
    preIncrementExpression         shift and go to state 308
    label                          shift and go to state 999
    simpleName                     shift and go to state 66
    labeldStatement                shift and go to state 329
    statementNoShortIf             shift and go to state 1144
    methodInvocation               shift and go to state 311
    statement                      shift and go to state 992
    arrayAccess                    shift and go to state 234
    ifThenElseStatement            shift and go to state 291
    fieldAccess                    shift and go to state 189
    statementWithoutTrailingSubStatement shift and go to state 1005
    integerLiteral                 shift and go to state 183
    statementExpression            shift and go to state 350
    classInstanceCreationExpressionName shift and go to state 187
    FloatingPointLiteral           shift and go to state 214
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 346
    whileStatement                 shift and go to state 292
    enhancedForStatementHeadInit   shift and go to state 313
    postIncrementExpression        shift and go to state 293
    enhancedForStatementNoShortIf  shift and go to state 1006
    ifThenStatement                shift and go to state 347
    ifThenElseStatementNoShortIf   shift and go to state 1004
    emptyStatement                 shift and go to state 295
    returnStatement                shift and go to state 297
    preDecrementExpression         shift and go to state 320
    postfixExpression              shift and go to state 298
    enhancedForStatementHead       shift and go to state 997
    name                           shift and go to state 517
    expressionStatement            shift and go to state 301
    primitiveType                  shift and go to state 219
    throwStatment                  shift and go to state 310
    explicitConstructorInvocation  shift and go to state 351
    enhancedForStatement           shift and go to state 352
    block                          shift and go to state 321
    classInstanceCreationExpression shift and go to state 322

state 1141

    (349) ifThenStatement -> IF LPAREN expression RPAREN . statement
    (350) ifThenElseStatement -> IF LPAREN expression RPAREN . statementNoShortIf ELSE statement
    (351) ifThenElseStatementNoShortIf -> IF LPAREN expression RPAREN . statementNoShortIf ELSE statementNoShortIf
    (304) statement -> . statementWithoutTrailingSubStatement
    (305) statement -> . labeldStatement
    (306) statement -> . ifThenStatement
    (307) statement -> . ifThenElseStatement
    (308) statement -> . whileStatement
    (309) statement -> . forStatement
    (310) statement -> . enhancedForStatement
    (372) statementNoShortIf -> . statementWithoutTrailingSubStatement
    (373) statementNoShortIf -> . labeledStatementNoShortIf
    (374) statementNoShortIf -> . ifThenElseStatementNoShortIf
    (375) statementNoShortIf -> . whileStatementNoShortIf
    (376) statementNoShortIf -> . enhancedForStatementNoShortIf
    (311) statementWithoutTrailingSubStatement -> . block
    (312) statementWithoutTrailingSubStatement -> . expressionStatement
    (313) statementWithoutTrailingSubStatement -> . assertStatement
    (314) statementWithoutTrailingSubStatement -> . emptyStatement
    (315) statementWithoutTrailingSubStatement -> . switchStatement
    (316) statementWithoutTrailingSubStatement -> . doStatement
    (317) statementWithoutTrailingSubStatement -> . breakStatement
    (318) statementWithoutTrailingSubStatement -> . continueStatement
    (319) statementWithoutTrailingSubStatement -> . returnStatement
    (320) statementWithoutTrailingSubStatement -> . synchronizedStatement
    (321) statementWithoutTrailingSubStatement -> . throwStatment
    (322) statementWithoutTrailingSubStatement -> . tryStatement
    (323) statementWithoutTrailingSubStatement -> . tryStatementWithResources
    (346) labeldStatement -> . label COLON statement
    (349) ifThenStatement -> . IF LPAREN expression RPAREN statement
    (350) ifThenElseStatement -> . IF LPAREN expression RPAREN statementNoShortIf ELSE statement
    (352) whileStatement -> . WHILE LPAREN expression RPAREN statement
    (354) forStatement -> . FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement
    (367) enhancedForStatement -> . enhancedForStatementHead statement
    (347) labeledStatementNoShortIf -> . label COLON statementNoShortIf
    (351) ifThenElseStatementNoShortIf -> . IF LPAREN expression RPAREN statementNoShortIf ELSE statementNoShortIf
    (353) whileStatementNoShortIf -> . WHILE LPAREN expression RPAREN statementNoShortIf
    (368) enhancedForStatementNoShortIf -> . enhancedForStatementHead statementNoShortIf
    (283) block -> . BLPAREN blockStatements_opt BRPAREN
    (324) expressionStatement -> . statementExpression SEMI
    (325) expressionStatement -> . explicitConstructorInvocation
    (377) assertStatement -> . ASSERT expression SEMI
    (378) assertStatement -> . ASSERT expression COLON expression SEMI
    (379) emptyStatement -> . SEMI
    (380) switchStatement -> . SWITCH LPAREN expression RPAREN switchBlock
    (393) doStatement -> . DO statement WHILE LPAREN expression RPAREN SEMI
    (394) breakStatement -> . BREAK SEMI
    (395) breakStatement -> . BREAK Identifier SEMI
    (396) continueStatement -> . CONTINUE SEMI
    (397) continueStatement -> . CONTINUE Identifier SEMI
    (398) returnStatement -> . RETURN expression_opt SEMI
    (399) synchronizedStatement -> . SYNCHRONIZED LPAREN expression RPAREN block
    (400) throwStatment -> . THROW expression SEMI
    (401) tryStatement -> . TRY tryBlock catches
    (402) tryStatement -> . TRY tryBlock catches_opt finally
    (413) tryStatementWithResources -> . TRY resourceSpecification tryBlock catches_opt
    (414) tryStatementWithResources -> . TRY resourceSpecification tryBlock catches_opt finally
    (348) label -> . Identifier
    (369) enhancedForStatementHead -> . enhancedForStatementHeadInit COLON expression RPAREN
    (326) statementExpression -> . assignment
    (327) statementExpression -> . preIncrementExpression
    (328) statementExpression -> . preDecrementExpression
    (329) statementExpression -> . postIncrementExpression
    (330) statementExpression -> . postDecrementExpression
    (331) statementExpression -> . methodInvocation
    (332) statementExpression -> . classInstanceCreationExpression
    (424) explicitConstructorInvocation -> . THIS LPAREN argumentList_opt RPAREN SEMI
    (425) explicitConstructorInvocation -> . SUPER LPAREN argumentList_opt RPAREN SEMI
    (426) explicitConstructorInvocation -> . typeArguments SUPER LPAREN argumentList RPAREN SEMI
    (427) explicitConstructorInvocation -> . typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (428) explicitConstructorInvocation -> . primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI
    (429) explicitConstructorInvocation -> . name DOT SUPER LPAREN argumentList_opt RPAREN SEMI
    (430) explicitConstructorInvocation -> . primary DOT THIS LPAREN argumentList_opt RPAREN SEMI
    (431) explicitConstructorInvocation -> . name DOT THIS LPAREN argumentList_opt RPAREN SEMI
    (432) explicitConstructorInvocation -> . primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI
    (433) explicitConstructorInvocation -> . name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI
    (434) explicitConstructorInvocation -> . primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (435) explicitConstructorInvocation -> . name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (370) enhancedForStatementHeadInit -> . FOR LPAREN type Identifier arrays_opt
    (371) enhancedForStatementHeadInit -> . FOR LPAREN modifiers type Identifier arrays_opt
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (82) typeArguments -> . LESS typeArgumentList1
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (442) classInstanceCreationExpressionName -> . name DOT
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE

    IF              shift and go to state 1007
    WHILE           shift and go to state 998
    FOR             shift and go to state 312
    BLPAREN         shift and go to state 120
    ASSERT          shift and go to state 336
    SEMI            shift and go to state 341
    SWITCH          shift and go to state 328
    DO              shift and go to state 335
    BREAK           shift and go to state 305
    CONTINUE        shift and go to state 318
    RETURN          shift and go to state 302
    SYNCHRONIZED    shift and go to state 518
    THROW           shift and go to state 354
    TRY             shift and go to state 314
    Identifier      shift and go to state 316
    THIS            shift and go to state 300
    SUPER           shift and go to state 353
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    NEW             shift and go to state 326
    LESS            shift and go to state 287
    LPAREN          shift and go to state 348
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    forStatement                   shift and go to state 286
    labeledStatementNoShortIf      shift and go to state 1000
    qualifiedName                  shift and go to state 64
    continueStatement              shift and go to state 304
    arrayCreationWithArrayInitializer shift and go to state 227
    switchStatement                shift and go to state 288
    primary                        shift and go to state 324
    arrayCreationWithoutArrayInitializer shift and go to state 232
    breakStatement                 shift and go to state 337
    tryStatementWithResources      shift and go to state 338
    whileStatementNoShortIf        shift and go to state 1001
    assertStatement                shift and go to state 289
    synchronizedStatement          shift and go to state 339
    booleanLiteral                 shift and go to state 173
    doStatement                    shift and go to state 327
    postDecrementExpression        shift and go to state 306
    typeArguments                  shift and go to state 307
    literal                        shift and go to state 208
    tryStatement                   shift and go to state 342
    preIncrementExpression         shift and go to state 308
    label                          shift and go to state 999
    simpleName                     shift and go to state 66
    labeldStatement                shift and go to state 329
    statementNoShortIf             shift and go to state 1145
    methodInvocation               shift and go to state 311
    statement                      shift and go to state 1003
    arrayAccess                    shift and go to state 234
    ifThenElseStatement            shift and go to state 291
    fieldAccess                    shift and go to state 189
    statementWithoutTrailingSubStatement shift and go to state 1005
    integerLiteral                 shift and go to state 183
    statementExpression            shift and go to state 350
    classInstanceCreationExpressionName shift and go to state 187
    FloatingPointLiteral           shift and go to state 214
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 346
    whileStatement                 shift and go to state 292
    enhancedForStatementHeadInit   shift and go to state 313
    postIncrementExpression        shift and go to state 293
    enhancedForStatementNoShortIf  shift and go to state 1006
    ifThenStatement                shift and go to state 347
    ifThenElseStatementNoShortIf   shift and go to state 1004
    emptyStatement                 shift and go to state 295
    returnStatement                shift and go to state 297
    preDecrementExpression         shift and go to state 320
    postfixExpression              shift and go to state 298
    enhancedForStatementHead       shift and go to state 997
    name                           shift and go to state 517
    expressionStatement            shift and go to state 301
    primitiveType                  shift and go to state 219
    throwStatment                  shift and go to state 310
    explicitConstructorInvocation  shift and go to state 351
    enhancedForStatement           shift and go to state 352
    block                          shift and go to state 321
    classInstanceCreationExpression shift and go to state 322

state 1142

    (438) classInstanceCreationExpression -> primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .

    FLPAREN         reduce using rule 438 (classInstanceCreationExpression -> primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    DOT             reduce using rule 438 (classInstanceCreationExpression -> primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_INC          reduce using rule 438 (classInstanceCreationExpression -> primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_DEC          reduce using rule 438 (classInstanceCreationExpression -> primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    MULT            reduce using rule 438 (classInstanceCreationExpression -> primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    SLASH           reduce using rule 438 (classInstanceCreationExpression -> primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    PERCENT         reduce using rule 438 (classInstanceCreationExpression -> primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    PLUS            reduce using rule 438 (classInstanceCreationExpression -> primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    DASH            reduce using rule 438 (classInstanceCreationExpression -> primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_SHR          reduce using rule 438 (classInstanceCreationExpression -> primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_SHL          reduce using rule 438 (classInstanceCreationExpression -> primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_SHRR         reduce using rule 438 (classInstanceCreationExpression -> primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    LESS            reduce using rule 438 (classInstanceCreationExpression -> primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_GE           reduce using rule 438 (classInstanceCreationExpression -> primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    MORE            reduce using rule 438 (classInstanceCreationExpression -> primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_LE           reduce using rule 438 (classInstanceCreationExpression -> primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    INSTANCEOF      reduce using rule 438 (classInstanceCreationExpression -> primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_EQ           reduce using rule 438 (classInstanceCreationExpression -> primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_NE           reduce using rule 438 (classInstanceCreationExpression -> primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    AND             reduce using rule 438 (classInstanceCreationExpression -> primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    CARET           reduce using rule 438 (classInstanceCreationExpression -> primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    VERTICAL        reduce using rule 438 (classInstanceCreationExpression -> primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_LAND         reduce using rule 438 (classInstanceCreationExpression -> primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    QUES            reduce using rule 438 (classInstanceCreationExpression -> primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    OP_LOR          reduce using rule 438 (classInstanceCreationExpression -> primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    RPAREN          reduce using rule 438 (classInstanceCreationExpression -> primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    COMMA           reduce using rule 438 (classInstanceCreationExpression -> primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    BRPAREN         reduce using rule 438 (classInstanceCreationExpression -> primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    SEMI            reduce using rule 438 (classInstanceCreationExpression -> primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    COLON           reduce using rule 438 (classInstanceCreationExpression -> primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    FRPAREN         reduce using rule 438 (classInstanceCreationExpression -> primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS             reduce using rule 438 (classInstanceCreationExpression -> primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_ADD         reduce using rule 438 (classInstanceCreationExpression -> primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_SUB         reduce using rule 438 (classInstanceCreationExpression -> primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_MUL         reduce using rule 438 (classInstanceCreationExpression -> primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_DIV         reduce using rule 438 (classInstanceCreationExpression -> primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_AND         reduce using rule 438 (classInstanceCreationExpression -> primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_OR          reduce using rule 438 (classInstanceCreationExpression -> primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_XOR         reduce using rule 438 (classInstanceCreationExpression -> primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_MOD         reduce using rule 438 (classInstanceCreationExpression -> primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_SHL         reduce using rule 438 (classInstanceCreationExpression -> primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_SHRR        reduce using rule 438 (classInstanceCreationExpression -> primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)
    ASS_SHR         reduce using rule 438 (classInstanceCreationExpression -> primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt .)


state 1143

    (354) forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .

    IF              reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    WHILE           reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    FOR             reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    BLPAREN         reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    ASSERT          reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    SEMI            reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    SWITCH          reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    DO              reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    BREAK           reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    CONTINUE        reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    RETURN          reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    SYNCHRONIZED    reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    THROW           reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    TRY             reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    Identifier      reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    AT              reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    BOOLEAN         reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    VOID            reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    BYTE            reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    SHORT           reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    INT             reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    LONG            reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    CHAR            reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    FLOAT           reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    DOUBLE          reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    PUBLIC          reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    PROTECTED       reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    PRIVATE         reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    STATIC          reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    ABSTRACT        reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    FINAL           reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    NATIVE          reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    TRANSIENT       reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    VOLATILE        reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    STRICTFP        reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    THIS            reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    SUPER           reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    OP_INC          reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    OP_DEC          reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    NEW             reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    LESS            reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    LPAREN          reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    CharacterLiteral reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    StringLiteral   reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    NULL            reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    LONG_NUMBER     reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    LONG_HEX_NUMBER reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    NON_INTEGER_1   reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    NON_INTEGER_2   reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    NON_INTEGER_3   reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    NON_INTEGER_4   reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    NON_INTEGER_5   reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    NON_INTEGER_6   reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    TRUE            reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    FALSE           reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    INTERFACE       reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    ENUM            reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    CLASS           reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    BRPAREN         reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    CASE            reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)
    DEFAULT         reduce using rule 354 (forStatement -> FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement .)


state 1144

    (353) whileStatementNoShortIf -> WHILE LPAREN expression RPAREN statementNoShortIf .

    ELSE            reduce using rule 353 (whileStatementNoShortIf -> WHILE LPAREN expression RPAREN statementNoShortIf .)


state 1145

    (350) ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf . ELSE statement
    (351) ifThenElseStatementNoShortIf -> IF LPAREN expression RPAREN statementNoShortIf . ELSE statementNoShortIf

    ELSE            shift and go to state 1146


state 1146

    (350) ifThenElseStatement -> IF LPAREN expression RPAREN statementNoShortIf ELSE . statement
    (351) ifThenElseStatementNoShortIf -> IF LPAREN expression RPAREN statementNoShortIf ELSE . statementNoShortIf
    (304) statement -> . statementWithoutTrailingSubStatement
    (305) statement -> . labeldStatement
    (306) statement -> . ifThenStatement
    (307) statement -> . ifThenElseStatement
    (308) statement -> . whileStatement
    (309) statement -> . forStatement
    (310) statement -> . enhancedForStatement
    (372) statementNoShortIf -> . statementWithoutTrailingSubStatement
    (373) statementNoShortIf -> . labeledStatementNoShortIf
    (374) statementNoShortIf -> . ifThenElseStatementNoShortIf
    (375) statementNoShortIf -> . whileStatementNoShortIf
    (376) statementNoShortIf -> . enhancedForStatementNoShortIf
    (311) statementWithoutTrailingSubStatement -> . block
    (312) statementWithoutTrailingSubStatement -> . expressionStatement
    (313) statementWithoutTrailingSubStatement -> . assertStatement
    (314) statementWithoutTrailingSubStatement -> . emptyStatement
    (315) statementWithoutTrailingSubStatement -> . switchStatement
    (316) statementWithoutTrailingSubStatement -> . doStatement
    (317) statementWithoutTrailingSubStatement -> . breakStatement
    (318) statementWithoutTrailingSubStatement -> . continueStatement
    (319) statementWithoutTrailingSubStatement -> . returnStatement
    (320) statementWithoutTrailingSubStatement -> . synchronizedStatement
    (321) statementWithoutTrailingSubStatement -> . throwStatment
    (322) statementWithoutTrailingSubStatement -> . tryStatement
    (323) statementWithoutTrailingSubStatement -> . tryStatementWithResources
    (346) labeldStatement -> . label COLON statement
    (349) ifThenStatement -> . IF LPAREN expression RPAREN statement
    (350) ifThenElseStatement -> . IF LPAREN expression RPAREN statementNoShortIf ELSE statement
    (352) whileStatement -> . WHILE LPAREN expression RPAREN statement
    (354) forStatement -> . FOR LPAREN forInit_opt SEMI expression_opt SEMI forUpdate_opt RPAREN statement
    (367) enhancedForStatement -> . enhancedForStatementHead statement
    (347) labeledStatementNoShortIf -> . label COLON statementNoShortIf
    (351) ifThenElseStatementNoShortIf -> . IF LPAREN expression RPAREN statementNoShortIf ELSE statementNoShortIf
    (353) whileStatementNoShortIf -> . WHILE LPAREN expression RPAREN statementNoShortIf
    (368) enhancedForStatementNoShortIf -> . enhancedForStatementHead statementNoShortIf
    (283) block -> . BLPAREN blockStatements_opt BRPAREN
    (324) expressionStatement -> . statementExpression SEMI
    (325) expressionStatement -> . explicitConstructorInvocation
    (377) assertStatement -> . ASSERT expression SEMI
    (378) assertStatement -> . ASSERT expression COLON expression SEMI
    (379) emptyStatement -> . SEMI
    (380) switchStatement -> . SWITCH LPAREN expression RPAREN switchBlock
    (393) doStatement -> . DO statement WHILE LPAREN expression RPAREN SEMI
    (394) breakStatement -> . BREAK SEMI
    (395) breakStatement -> . BREAK Identifier SEMI
    (396) continueStatement -> . CONTINUE SEMI
    (397) continueStatement -> . CONTINUE Identifier SEMI
    (398) returnStatement -> . RETURN expression_opt SEMI
    (399) synchronizedStatement -> . SYNCHRONIZED LPAREN expression RPAREN block
    (400) throwStatment -> . THROW expression SEMI
    (401) tryStatement -> . TRY tryBlock catches
    (402) tryStatement -> . TRY tryBlock catches_opt finally
    (413) tryStatementWithResources -> . TRY resourceSpecification tryBlock catches_opt
    (414) tryStatementWithResources -> . TRY resourceSpecification tryBlock catches_opt finally
    (348) label -> . Identifier
    (369) enhancedForStatementHead -> . enhancedForStatementHeadInit COLON expression RPAREN
    (326) statementExpression -> . assignment
    (327) statementExpression -> . preIncrementExpression
    (328) statementExpression -> . preDecrementExpression
    (329) statementExpression -> . postIncrementExpression
    (330) statementExpression -> . postDecrementExpression
    (331) statementExpression -> . methodInvocation
    (332) statementExpression -> . classInstanceCreationExpression
    (424) explicitConstructorInvocation -> . THIS LPAREN argumentList_opt RPAREN SEMI
    (425) explicitConstructorInvocation -> . SUPER LPAREN argumentList_opt RPAREN SEMI
    (426) explicitConstructorInvocation -> . typeArguments SUPER LPAREN argumentList RPAREN SEMI
    (427) explicitConstructorInvocation -> . typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (428) explicitConstructorInvocation -> . primary DOT SUPER LPAREN argumentList_opt RPAREN SEMI
    (429) explicitConstructorInvocation -> . name DOT SUPER LPAREN argumentList_opt RPAREN SEMI
    (430) explicitConstructorInvocation -> . primary DOT THIS LPAREN argumentList_opt RPAREN SEMI
    (431) explicitConstructorInvocation -> . name DOT THIS LPAREN argumentList_opt RPAREN SEMI
    (432) explicitConstructorInvocation -> . primary DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI
    (433) explicitConstructorInvocation -> . name DOT typeArguments SUPER LPAREN argumentList_opt RPAREN SEMI
    (434) explicitConstructorInvocation -> . primary DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (435) explicitConstructorInvocation -> . name DOT typeArguments THIS LPAREN argumentList_opt RPAREN SEMI
    (370) enhancedForStatementHeadInit -> . FOR LPAREN type Identifier arrays_opt
    (371) enhancedForStatementHeadInit -> . FOR LPAREN modifiers type Identifier arrays_opt
    (474) assignment -> . postfixExpression assignmentOperator assignmentExpression
    (572) preIncrementExpression -> . OP_INC unaryExpression
    (573) preDecrementExpression -> . OP_DEC unaryExpression
    (574) postIncrementExpression -> . postfixExpression OP_INC
    (575) postDecrementExpression -> . postfixExpression OP_DEC
    (340) methodInvocation -> . name LPAREN argumentList_opt RPAREN
    (341) methodInvocation -> . name DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (342) methodInvocation -> . primary DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (343) methodInvocation -> . SUPER DOT typeArguments Identifier LPAREN argumentList_opt RPAREN
    (344) methodInvocation -> . primary DOT Identifier LPAREN argumentList_opt RPAREN
    (345) methodInvocation -> . SUPER DOT Identifier LPAREN argumentList_opt RPAREN
    (436) classInstanceCreationExpression -> . NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (437) classInstanceCreationExpression -> . NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (438) classInstanceCreationExpression -> . primary DOT NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (439) classInstanceCreationExpression -> . primary DOT NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (440) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW classType LPAREN argumentList_opt RPAREN classBody_opt
    (441) classInstanceCreationExpression -> . classInstanceCreationExpressionName NEW typeArguments classType LPAREN argumentList_opt RPAREN classBody_opt
    (82) typeArguments -> . LESS typeArgumentList1
    (591) primary -> . primaryNoNewArray
    (592) primary -> . arrayCreationWithArrayInitializer
    (593) primary -> . arrayCreationWithoutArrayInitializer
    (29) name -> . simpleName
    (30) name -> . qualifiedName
    (584) postfixExpression -> . primary
    (585) postfixExpression -> . name
    (586) postfixExpression -> . postIncrementExpression
    (587) postfixExpression -> . postDecrementExpression
    (442) classInstanceCreationExpressionName -> . name DOT
    (594) primaryNoNewArray -> . literal
    (595) primaryNoNewArray -> . THIS
    (596) primaryNoNewArray -> . classInstanceCreationExpression
    (597) primaryNoNewArray -> . fieldAccess
    (598) primaryNoNewArray -> . methodInvocation
    (599) primaryNoNewArray -> . arrayAccess
    (600) primaryNoNewArray -> . LPAREN name RPAREN
    (601) primaryNoNewArray -> . LPAREN expressionNotName RPAREN
    (602) primaryNoNewArray -> . name DOT THIS
    (603) primaryNoNewArray -> . name DOT SUPER
    (604) primaryNoNewArray -> . name DOT CLASS
    (605) primaryNoNewArray -> . name arrays DOT CLASS
    (606) primaryNoNewArray -> . primitiveType arrays DOT CLASS
    (607) primaryNoNewArray -> . primitiveType DOT CLASS
    (450) arrayCreationWithArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs arrayInitializer
    (451) arrayCreationWithArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs arrayInitializer
    (613) arrayCreationWithoutArrayInitializer -> . NEW primitiveType arrayWithOrWithoutExprs
    (614) arrayCreationWithoutArrayInitializer -> . NEW classOrInterfaceType arrayWithOrWithoutExprs
    (31) simpleName -> . Identifier
    (32) qualifiedName -> . name DOT simpleName
    (615) literal -> . integerLiteral
    (616) literal -> . FloatingPointLiteral
    (617) literal -> . CharacterLiteral
    (618) literal -> . StringLiteral
    (619) literal -> . booleanLiteral
    (620) literal -> . NULL
    (445) fieldAccess -> . primary DOT Identifier
    (446) fieldAccess -> . SUPER DOT Identifier
    (447) arrayAccess -> . name FLPAREN expression FRPAREN
    (448) arrayAccess -> . primaryNoNewArray FLPAREN expression FRPAREN
    (449) arrayAccess -> . arrayCreationWithArrayInitializer FLPAREN expression FRPAREN
    (35) primitiveType -> . BOOLEAN
    (36) primitiveType -> . VOID
    (37) primitiveType -> . BYTE
    (38) primitiveType -> . SHORT
    (39) primitiveType -> . INT
    (40) primitiveType -> . LONG
    (41) primitiveType -> . CHAR
    (42) primitiveType -> . FLOAT
    (43) primitiveType -> . DOUBLE
    (629) integerLiteral -> . LONG_NUMBER
    (630) integerLiteral -> . LONG_HEX_NUMBER
    (623) FloatingPointLiteral -> . NON_INTEGER_1
    (624) FloatingPointLiteral -> . NON_INTEGER_2
    (625) FloatingPointLiteral -> . NON_INTEGER_3
    (626) FloatingPointLiteral -> . NON_INTEGER_4
    (627) FloatingPointLiteral -> . NON_INTEGER_5
    (628) FloatingPointLiteral -> . NON_INTEGER_6
    (621) booleanLiteral -> . TRUE
    (622) booleanLiteral -> . FALSE

    IF              shift and go to state 1007
    WHILE           shift and go to state 998
    FOR             shift and go to state 312
    BLPAREN         shift and go to state 120
    ASSERT          shift and go to state 336
    SEMI            shift and go to state 341
    SWITCH          shift and go to state 328
    DO              shift and go to state 335
    BREAK           shift and go to state 305
    CONTINUE        shift and go to state 318
    RETURN          shift and go to state 302
    SYNCHRONIZED    shift and go to state 518
    THROW           shift and go to state 354
    TRY             shift and go to state 314
    Identifier      shift and go to state 316
    THIS            shift and go to state 300
    SUPER           shift and go to state 353
    OP_INC          shift and go to state 201
    OP_DEC          shift and go to state 203
    NEW             shift and go to state 326
    LESS            shift and go to state 287
    LPAREN          shift and go to state 348
    CharacterLiteral shift and go to state 194
    StringLiteral   shift and go to state 218
    NULL            shift and go to state 230
    BOOLEAN         shift and go to state 221
    VOID            shift and go to state 170
    BYTE            shift and go to state 215
    SHORT           shift and go to state 184
    INT             shift and go to state 195
    LONG            shift and go to state 202
    CHAR            shift and go to state 200
    FLOAT           shift and go to state 242
    DOUBLE          shift and go to state 182
    LONG_NUMBER     shift and go to state 185
    LONG_HEX_NUMBER shift and go to state 190
    NON_INTEGER_1   shift and go to state 197
    NON_INTEGER_2   shift and go to state 191
    NON_INTEGER_3   shift and go to state 228
    NON_INTEGER_4   shift and go to state 225
    NON_INTEGER_5   shift and go to state 226
    NON_INTEGER_6   shift and go to state 224
    TRUE            shift and go to state 171
    FALSE           shift and go to state 216

    forStatement                   shift and go to state 286
    labeledStatementNoShortIf      shift and go to state 1000
    qualifiedName                  shift and go to state 64
    continueStatement              shift and go to state 304
    arrayCreationWithArrayInitializer shift and go to state 227
    switchStatement                shift and go to state 288
    primary                        shift and go to state 324
    arrayCreationWithoutArrayInitializer shift and go to state 232
    breakStatement                 shift and go to state 337
    tryStatementWithResources      shift and go to state 338
    whileStatementNoShortIf        shift and go to state 1001
    assertStatement                shift and go to state 289
    synchronizedStatement          shift and go to state 339
    booleanLiteral                 shift and go to state 173
    doStatement                    shift and go to state 327
    postDecrementExpression        shift and go to state 306
    typeArguments                  shift and go to state 307
    literal                        shift and go to state 208
    tryStatement                   shift and go to state 342
    preIncrementExpression         shift and go to state 308
    label                          shift and go to state 999
    simpleName                     shift and go to state 66
    labeldStatement                shift and go to state 329
    statementNoShortIf             shift and go to state 1147
    methodInvocation               shift and go to state 311
    statement                      shift and go to state 1120
    arrayAccess                    shift and go to state 234
    ifThenElseStatement            shift and go to state 291
    fieldAccess                    shift and go to state 189
    statementWithoutTrailingSubStatement shift and go to state 1005
    integerLiteral                 shift and go to state 183
    statementExpression            shift and go to state 350
    classInstanceCreationExpressionName shift and go to state 187
    FloatingPointLiteral           shift and go to state 214
    primaryNoNewArray              shift and go to state 178
    assignment                     shift and go to state 346
    whileStatement                 shift and go to state 292
    enhancedForStatementHeadInit   shift and go to state 313
    postIncrementExpression        shift and go to state 293
    enhancedForStatementNoShortIf  shift and go to state 1006
    ifThenStatement                shift and go to state 347
    ifThenElseStatementNoShortIf   shift and go to state 1004
    emptyStatement                 shift and go to state 295
    returnStatement                shift and go to state 297
    preDecrementExpression         shift and go to state 320
    postfixExpression              shift and go to state 298
    enhancedForStatementHead       shift and go to state 997
    name                           shift and go to state 517
    expressionStatement            shift and go to state 301
    primitiveType                  shift and go to state 219
    throwStatment                  shift and go to state 310
    explicitConstructorInvocation  shift and go to state 351
    enhancedForStatement           shift and go to state 352
    block                          shift and go to state 321
    classInstanceCreationExpression shift and go to state 322

state 1147

    (351) ifThenElseStatementNoShortIf -> IF LPAREN expression RPAREN statementNoShortIf ELSE statementNoShortIf .

    ELSE            reduce using rule 351 (ifThenElseStatementNoShortIf -> IF LPAREN expression RPAREN statementNoShortIf ELSE statementNoShortIf .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 829 resolved using rule (classOrInterface -> name)
WARNING: rejected rule (postfixExpression -> name) in state 829
